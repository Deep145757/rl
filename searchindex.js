Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRUModule", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 69, 71, 72, 75, 83, 84, 86, 87, 88, 89, 93, 96, 100, 102, 104, 107, 109, 110, 112, 118, 119, 123, 124, 125, 127, 135, 136, 137, 138, 139, 141, 144, 146, 156, 158, 159, 160, 161, 168, 170, 171, 172, 173, 177, 178, 179, 183, 190, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 270, 273, 282, 283, 287, 288, 291, 300, 301, 302, 303, 306, 307, 308, 311, 312, 316, 317, 319, 320, 322, 323], "open": [0, 5, 7, 11, 312, 317, 322], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323], "reinforc": [0, 3, 9, 102, 158, 159, 160, 161, 165, 205, 208, 222, 223, 227, 229, 233, 234, 240, 241, 242, 305, 312, 315, 318, 321, 322], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 102, 158, 159, 160, 161, 165, 174, 180, 205, 208, 222, 223, 227, 229, 233, 234, 239, 240, 241, 242, 305, 307, 308, 311, 312, 314, 315, 316, 318, 320, 321, 322, 323], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 83, 134, 180, 198, 209, 217, 222, 236, 238, 278, 306, 307, 308, 309, 311, 312, 313, 317, 319, 320, 323], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 79, 84, 149, 305, 306, 307, 310, 311, 312, 313, 317, 318, 323], "pytorch": [0, 1, 2, 3, 137, 179, 180, 287, 306, 309, 311, 313, 314, 317, 318, 322, 323], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 71, 75, 77, 83, 84, 87, 88, 89, 93, 117, 119, 124, 134, 139, 146, 158, 160, 166, 177, 178, 186, 188, 189, 195, 196, 205, 206, 208, 211, 213, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 249, 250, 251, 283, 296, 306, 307, 308, 311, 312, 314, 317, 318, 319, 320, 322, 323], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 71, 75, 83, 87, 88, 89, 93, 103, 104, 105, 107, 110, 113, 118, 119, 121, 123, 124, 127, 130, 131, 135, 139, 141, 143, 144, 154, 156, 162, 165, 168, 170, 171, 172, 173, 175, 176, 177, 178, 196, 198, 202, 205, 206, 208, 209, 210, 211, 216, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 274, 278, 284, 291, 296, 299, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "python": [0, 3, 5, 6, 7, 10, 21, 99, 175, 176, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 75, 102, 103, 113, 119, 123, 124, 137, 139, 141, 168, 170, 172, 177, 178, 179, 183, 198, 203, 204, 205, 209, 210, 212, 213, 224, 231, 235, 236, 238, 269, 286, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "low": [0, 25, 71, 75, 87, 93, 105, 109, 150, 205, 209, 216, 311, 312, 313, 317, 318, 322, 323], "high": [0, 9, 25, 41, 71, 75, 87, 93, 105, 109, 118, 150, 205, 209, 216, 251, 256, 264, 311, 312, 313, 317, 318, 320, 322, 323], "level": [0, 3, 4, 22, 26, 28, 102, 133, 235, 311, 312, 322], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 71, 120, 173, 255, 279, 288, 309, 313, 318, 322], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 71, 72, 75, 82, 83, 86, 87, 88, 89, 90, 93, 102, 105, 106, 107, 109, 110, 112, 113, 117, 118, 121, 123, 127, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 154, 155, 161, 163, 168, 170, 171, 173, 175, 176, 177, 180, 184, 186, 189, 203, 204, 206, 208, 209, 210, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 246, 249, 250, 251, 252, 253, 254, 255, 284, 299, 303, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 109, 196, 236, 307, 322], "effici": [0, 1, 2, 4, 8, 180, 307, 311, 312, 313, 314, 316, 317, 319, 320, 322], "modular": [0, 215, 320, 322], "document": [0, 5, 7, 18, 19, 21, 32, 71, 75, 87, 93, 139, 312, 322], "properli": [0, 71, 75, 87, 93, 313, 317, 318, 322], "test": [0, 3, 5, 141, 146, 168, 170, 171, 283, 299, 313, 314, 322], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 79, 87, 88, 89, 93, 102, 106, 107, 110, 111, 119, 121, 123, 127, 129, 130, 131, 133, 134, 135, 138, 139, 141, 143, 153, 154, 155, 158, 159, 160, 161, 162, 165, 168, 170, 171, 173, 174, 175, 176, 177, 180, 181, 187, 188, 189, 198, 199, 203, 204, 205, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 257, 272, 275, 276, 277, 278, 282, 299, 301, 302, 307, 308, 309, 312, 313, 314, 317, 318, 319, 320, 322, 323], "code": [0, 3, 5, 7, 8, 123, 141, 168, 170, 215, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323], "aim": [0, 3, 7, 28, 29, 123, 141, 143, 172, 290, 306, 307, 308, 311, 312, 322], "support": [0, 1, 3, 18, 20, 26, 53, 54, 55, 56, 63, 65, 84, 86, 88, 102, 119, 136, 138, 149, 165, 196, 204, 205, 212, 215, 229, 251, 252, 253, 254, 275, 307, 309, 312, 313, 314, 317, 318, 320, 322], "research": [0, 7, 9, 322], "most": [0, 3, 7, 8, 32, 109, 311, 312, 313, 318, 319, 322, 323], "written": [0, 3, 34, 36, 39, 45, 52, 55, 71, 75, 87, 93, 102, 117, 130, 133, 136, 153, 154, 198, 208, 209, 212, 213, 217, 222, 224, 235, 238, 240, 250, 269, 270, 307, 308, 309, 311, 314, 316, 318, 322], "highli": [0, 2, 322, 323], "wai": [0, 3, 4, 79, 123, 125, 143, 238, 251, 252, 253, 254, 307, 311, 312, 313, 316, 317, 318, 319, 320, 322, 323], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 71, 72, 75, 79, 82, 87, 88, 89, 91, 92, 93, 99, 100, 102, 105, 106, 107, 109, 110, 118, 119, 123, 124, 127, 130, 133, 134, 135, 138, 139, 141, 143, 144, 154, 155, 168, 169, 170, 173, 174, 177, 178, 180, 181, 194, 196, 198, 202, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 283, 296, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "easili": [0, 3, 7, 296, 308, 311, 312, 313, 317, 322, 323], "swap": [0, 3, 313, 319, 322], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 165, 187, 204, 205, 211, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 282, 287, 311, 312, 313, 314, 316, 317, 318, 319, 322], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 71, 72, 75, 87, 88, 89, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 157, 158, 162, 165, 166, 185, 186, 187, 195, 203, 207, 216, 219, 221, 227, 237, 270, 284, 296, 303, 305, 312, 314, 315, 319, 321], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 82, 87, 88, 89, 93, 107, 110, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 195, 196, 202, 203, 205, 206, 208, 211, 216, 219, 235, 270, 311, 312, 314, 316, 317, 318, 319, 320, 322, 323], "write": [0, 3, 8, 23, 32, 37, 45, 75, 105, 121, 122, 130, 133, 154, 198, 212, 213, 215, 217, 223, 225, 226, 228, 234, 239, 241, 243, 250, 255, 270, 307, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 71, 75, 84, 87, 91, 92, 93, 130, 138, 144, 153, 154, 168, 170, 208, 212, 213, 218, 222, 223, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 311, 313, 314, 317, 318, 322, 323], "ones": [0, 15, 26, 32, 35, 41, 42, 71, 75, 87, 93, 103, 106, 107, 108, 110, 119, 123, 127, 134, 135, 138, 139, 141, 143, 175, 176, 196, 212, 222, 223, 225, 234, 238, 239, 241, 243, 257, 311, 313, 317, 318, 320, 322, 323], "littl": [0, 3, 43, 313, 314, 320, 322, 323], "effort": [0, 3, 318, 320, 322], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 71, 75, 77, 82, 83, 87, 88, 89, 93, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 123, 124, 125, 127, 130, 131, 133, 135, 136, 138, 139, 141, 142, 143, 144, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 249, 251, 252, 253, 254, 255, 269, 278, 280, 283, 284, 287, 289, 290, 291, 296, 299, 303, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "repo": [0, 6, 52, 102, 136, 141, 306, 317, 322], "attempt": [0, 202, 208, 226, 234, 249, 322], "align": [0, 322], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 71, 75, 87, 93, 103, 108, 139, 291, 303, 317, 322, 323], "ecosystem": [0, 322], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 71, 72, 75, 79, 87, 93, 102, 133, 135, 139, 168, 170, 177, 202, 205, 208, 213, 235, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 86, 144, 305, 311, 312, 319, 320, 322, 323], "pillar": [0, 322], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 107, 108, 109, 110, 114, 118, 119, 123, 124, 130, 133, 134, 138, 139, 141, 144, 146, 155, 168, 170, 171, 173, 174, 202, 208, 230, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 278, 280, 283, 290, 291, 292, 293, 296, 299, 300, 301, 302, 303, 305, 306, 307, 315, 319, 320, 321], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 71, 75, 83, 87, 93, 107, 123, 135, 141, 143, 145, 156, 157, 162, 168, 170, 172, 173, 174, 178, 185, 186, 195, 199, 200, 201, 207, 212, 218, 222, 223, 224, 226, 227, 230, 231, 232, 234, 235, 236, 238, 239, 241, 249, 287, 292, 293, 294, 295, 296, 305, 306, 309, 313, 315, 317, 318, 320, 321, 323], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 83, 86, 87, 88, 89, 93, 100, 102, 107, 108, 110, 111, 117, 119, 127, 133, 146, 150, 154, 155, 165, 168, 170, 171, 174, 177, 178, 187, 196, 198, 204, 206, 208, 209, 210, 212, 215, 216, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 278, 284, 287, 289, 292, 299, 301, 302, 303, 305, 307, 308, 309, 314, 318, 319, 320, 323], "util": [0, 3, 17, 23, 32, 40, 71, 75, 87, 88, 89, 93, 96, 123, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 162, 219, 220, 221, 236, 299, 305, 310, 311, 313, 317, 318, 322, 323], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 71, 72, 75, 87, 93, 103, 106, 113, 119, 123, 130, 135, 138, 139, 141, 143, 146, 168, 169, 170, 174, 178, 181, 187, 193, 194, 203, 205, 209, 211, 212, 213, 250, 251, 252, 253, 254, 278, 290, 302, 307, 311, 312, 313, 317, 318, 319, 322, 323], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 71, 72, 75, 87, 93, 103, 106, 113, 119, 123, 130, 135, 138, 139, 141, 143, 146, 168, 169, 170, 174, 178, 193, 194, 203, 209, 212, 213, 250, 260, 261, 262, 263, 265, 266, 267, 268, 302, 307, 311, 312, 313, 317, 318, 319, 322, 323], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 102, 127, 133, 208, 284, 287, 289, 292, 293, 299, 301, 302, 305, 309, 320, 323], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 71, 75, 83, 87, 93, 106, 107, 110, 123, 135, 138, 139, 141, 143, 144, 153, 154, 155, 156, 172, 174, 178, 198, 204, 205, 209, 211, 212, 217, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 257, 274, 278, 290, 296, 299, 300, 301, 302, 303, 307, 308, 309, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 71, 75, 87, 93, 117, 139, 172, 178, 311, 312, 313, 320, 322, 323], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 71, 75, 87, 88, 89, 93, 102, 107, 110, 117, 118, 119, 133, 134, 135, 138, 139, 144, 146, 154, 156, 171, 172, 177, 178, 196, 214, 215, 222, 224, 235, 238, 246, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 287, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "few": [0, 2, 8, 278, 313, 314, 317, 320, 322, 323], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 107, 110, 217, 238, 307, 311, 313, 314, 317, 318, 322, 323], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 212, 283, 287, 307, 311, 313, 314, 317, 318, 320, 322, 323], "standard": [0, 3, 119, 129, 144, 155, 166, 174, 179, 180, 202, 203, 243, 251, 252, 253, 254, 311, 312, 317, 320, 322], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 137, 287, 318, 320, 322, 323], "common": [0, 3, 4, 21, 75, 87, 93, 100, 199, 200, 201, 207, 222, 223, 224, 228, 234, 235, 238, 239, 240, 241, 243, 299, 306, 307, 309, 311, 313, 316, 317, 318, 319, 322, 323], "openai": [0, 7, 74, 76, 90, 313, 318, 322, 323], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 79, 87, 90, 93, 97, 99, 102, 105, 116, 117, 119, 121, 125, 127, 130, 135, 138, 144, 296, 299, 306, 311, 312, 313, 314, 318, 319, 320, 322], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 71, 75, 79, 84, 87, 88, 89, 93, 102, 103, 105, 106, 107, 109, 110, 113, 119, 123, 124, 127, 133, 134, 135, 136, 138, 139, 141, 143, 144, 170, 171, 177, 178, 198, 203, 204, 209, 210, 212, 213, 214, 215, 222, 224, 225, 228, 234, 235, 236, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 291, 309, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 93, 100, 101, 102, 103, 104, 105, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 196, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 254, 255, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 275, 278, 280, 281, 282, 283, 284, 285, 287, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 307, 314, 317, 318, 320, 322], "On": [0, 3, 7, 18, 19, 20, 21, 307, 312, 317], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 121, 133, 134, 139, 156, 173, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "come": [0, 1, 3, 8, 75, 82, 87, 93, 107, 110, 198, 199, 200, 201, 209, 217, 311, 312, 313, 314, 317, 320, 322, 323], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 71, 73, 75, 83, 87, 88, 89, 93, 99, 100, 102, 103, 106, 107, 110, 116, 117, 123, 127, 133, 134, 135, 136, 138, 139, 141, 143, 146, 151, 152, 154, 168, 170, 173, 177, 178, 202, 203, 212, 236, 238, 255, 278, 283, 284, 293, 303, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "re": [0, 3, 8, 32, 62, 71, 75, 87, 93, 170, 175, 176, 209, 213, 309, 311, 313, 314, 316, 318, 322, 323], "usabl": [0, 309, 314, 322], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 71, 72, 75, 87, 93, 99, 107, 110, 139, 144, 146, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 188, 189, 191, 194, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 296, 299, 305, 307, 311, 314, 316, 318, 320, 323], "cost": [0, 2, 27, 311, 312, 317, 318, 320], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 69, 71, 72, 75, 83, 86, 87, 88, 89, 93, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 184, 185, 186, 188, 189, 192, 193, 194, 195, 198, 199, 200, 201, 203, 209, 211, 212, 213, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 246, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 287, 290, 292, 296, 299, 300, 301, 302, 303, 305, 307, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 71, 72, 75, 79, 82, 84, 87, 88, 89, 93, 107, 110, 144, 177, 178, 205, 208, 211, 309, 311, 312, 314, 317, 318, 319, 320, 322, 323], "good": [0, 1, 4, 9, 311, 313, 314, 317, 322, 323], "runtim": [0, 3, 32, 71, 75, 87, 93, 318], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 71, 75, 87, 93, 96, 107, 110, 118, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 231, 238, 283, 287, 308, 311, 312, 313, 314, 316, 317, 318, 323], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 71, 75, 82, 87, 88, 89, 91, 92, 93, 133, 144, 199, 200, 201, 208, 228, 236, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 307, 308, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 71, 75, 87, 93, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 121, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 154, 184, 198, 199, 200, 201, 204, 209, 212, 213, 215, 217, 218, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 270, 283, 287, 296, 307, 311, 312, 313, 314, 316, 317, 318, 319, 323], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 78, 79, 87, 88, 89, 93, 137, 141, 145, 165, 172, 179, 181, 198, 202, 204, 205, 212, 217, 222, 229, 236, 238, 251, 256, 264, 282, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 323], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 308, 311, 312, 313, 317, 318, 322, 323], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 309, 311, 316, 319, 323], "beyond": 0, "api": [0, 3, 5, 88, 89, 90, 123, 143, 308, 309, 317, 318, 322, 323], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 71, 72, 75, 83, 87, 93, 96, 102, 103, 112, 117, 124, 146, 168, 170, 198, 204, 205, 209, 210, 211, 212, 213, 307, 308, 312, 313, 314, 316, 317, 318, 319, 320, 323], "paper": [0, 123, 141, 143, 186, 195, 233, 296, 311, 313, 317], "ppo": [0, 4, 8, 209, 213, 224, 235, 238, 305, 307, 311, 312, 315, 321], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 84, 87, 93, 102, 105, 106, 111, 116, 117, 119, 125, 127, 130, 133, 135, 136, 138, 139, 144, 168, 170, 299, 307, 312, 313, 315, 321, 322, 323], "your": [0, 2, 3, 7, 8, 10, 18, 32, 71, 75, 79, 82, 87, 88, 89, 93, 144, 303, 306, 307, 308, 312, 313, 314, 315, 317, 320, 321, 322], "introduct": [0, 308, 315, 317, 321, 323], "multi": [0, 7, 9, 28, 29, 32, 71, 75, 87, 91, 92, 93, 168, 170, 171, 172, 177, 178, 249, 251, 252, 253, 254, 305, 311, 312, 313, 314, 315, 318, 321, 322], "agent": [0, 9, 28, 29, 82, 88, 89, 91, 92, 94, 95, 96, 133, 134, 175, 176, 177, 178, 180, 186, 195, 249, 305, 315, 318, 321], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 170, 173, 174, 212, 236, 269, 291, 292, 293, 296, 299, 301, 302, 303, 305, 307, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 116, 117, 119, 123, 124, 125, 127, 130, 131, 133, 134, 135, 137, 138, 139, 141, 143, 144, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 168, 169, 170, 172, 173, 174, 176, 177, 178, 180, 181, 184, 185, 186, 187, 193, 194, 195, 196, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 264, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 297, 299, 303, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 321, 323], "pretrain": [0, 315, 321], "recurr": [0, 168, 170, 189, 312, 315, 320, 321], "dqn": [0, 165, 204, 205, 222, 223, 225, 226, 228, 229, 230, 233, 234, 236, 238, 239, 240, 241, 242, 243, 249, 294, 305, 307, 315, 321], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 71, 75, 87, 88, 89, 93, 107, 114, 123, 134, 139, 141, 143, 146, 158, 160, 168, 170, 202, 206, 208, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 251, 287, 289, 299, 305, 309, 312, 315, 319, 320, 321, 323], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 71, 75, 83, 87, 93, 109, 117, 134, 151, 152, 165, 168, 170, 177, 178, 180, 187, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 216, 222, 223, 224, 225, 228, 234, 235, 237, 238, 239, 240, 241, 243, 283, 289, 292, 293, 299, 301, 302, 307, 308, 309, 312, 315, 319, 320, 321, 322, 323], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 102, 109, 124, 127, 135, 223, 225, 226, 228, 234, 239, 241, 243, 284, 287, 297, 299, 305, 309, 315, 318, 319, 321], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 71, 75, 83, 87, 93, 102, 106, 109, 123, 124, 127, 135, 138, 139, 141, 143, 212, 215, 223, 225, 226, 228, 234, 239, 241, 243, 284, 287, 297, 299, 305, 309, 315, 318, 319, 321, 323], "task": [0, 3, 9, 28, 29, 40, 45, 69, 75, 78, 87, 88, 89, 90, 93, 123, 133, 141, 143, 234, 311, 312, 313, 314, 315, 317, 318, 321, 322, 323], "specif": [0, 2, 5, 8, 41, 42, 75, 162, 203, 287, 305, 308, 309, 313, 314, 315, 317, 320, 321], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 71, 75, 87, 93, 107, 110, 119, 123, 138, 139, 141, 144, 174, 186, 195, 198, 199, 209, 212, 213, 214, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 291, 292, 293, 298, 299, 303, 305, 307, 309, 312, 313, 314, 315, 317, 318, 320, 321, 323], "ddpg": [0, 158, 159, 160, 161, 225, 233, 242, 305, 307, 312, 315, 321], "loss": [0, 3, 8, 36, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 282, 287, 294, 295, 296, 299, 308, 309, 315, 318, 320, 321, 322], "trainer": [0, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 311, 315, 321], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 77, 78, 87, 90, 93, 105, 109, 114, 117, 123, 124, 125, 135, 138, 139, 141, 142, 144, 145, 146, 153, 155, 156, 165, 168, 170, 172, 174, 175, 176, 178, 180, 181, 196, 202, 203, 204, 205, 206, 209, 210, 213, 215, 216, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 246, 249, 251, 252, 253, 254, 255, 257, 271, 272, 275, 280, 287, 289, 296, 299, 308, 311, 313, 315, 317, 318, 321, 323], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 80, 81, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 116, 117, 119, 121, 123, 125, 127, 130, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 150, 153, 154, 155, 156, 157, 162, 165, 168, 170, 171, 172, 174, 177, 178, 181, 184, 185, 186, 187, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 217, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 244, 245, 249, 251, 252, 253, 254, 257, 278, 279, 280, 281, 282, 284, 285, 286, 289, 296, 299, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323], "packag": [0, 6, 7, 10, 99, 305, 306, 323], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 87, 93, 102, 103, 123, 127, 143, 156, 168, 170, 171, 172, 178, 211, 215, 224, 226, 228, 229, 235, 238, 239, 243, 251, 252, 253, 254, 260, 261, 262, 263, 265, 266, 267, 268, 296, 303, 305, 311, 312, 313, 314, 316, 317, 318, 319, 320], "node": [0, 2, 18, 19, 20, 21, 22, 296, 305], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 88, 89, 117, 119, 155, 163, 164, 165, 166, 169, 174, 175, 176, 181, 184, 185, 188, 189, 192, 193, 194, 202, 203, 204, 205, 209, 213, 214, 222, 223, 224, 228, 229, 234, 235, 238, 239, 240, 241, 243, 305, 309, 312, 313, 317, 318, 322, 323], "helper": [0, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 311, 312, 314, 318], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 71, 75, 87, 93, 102, 138, 139, 144, 207, 231, 296, 305, 311, 312, 313, 314, 316, 317, 320, 322, 323], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 71, 75, 83, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 154, 189, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 223, 226, 228, 239, 241, 243, 249, 305, 318], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 91, 92, 93, 96, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 116, 117, 119, 121, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 153, 154, 155, 158, 159, 160, 161, 162, 165, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 181, 184, 185, 186, 187, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 228, 229, 230, 234, 235, 236, 238, 239, 240, 241, 243, 245, 249, 250, 251, 252, 253, 254, 257, 269, 270, 278, 284, 287, 290, 291, 296, 297, 299, 300, 303, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "human": [0, 305, 318], "feedback": [0, 305, 322], "rlhf": [0, 34, 40, 45, 54, 117, 305, 307], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 72, 75, 87, 93, 100, 107, 110, 118, 125, 138, 139, 144, 146, 155, 173, 174, 283, 291, 292, 293, 296, 299, 301, 302, 303, 305, 314], "gymlikeenv": [0, 305], "envmetadata": [0, 305], "vector": [0, 1, 8, 24, 27, 33, 82, 88, 89, 109, 158, 160, 172, 251, 254, 264, 265, 266, 267, 268, 305, 311, 312, 314, 316, 317, 318, 319, 323], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 88, 89, 100, 124, 165, 175, 176, 187, 203, 204, 205, 206, 210, 211, 284, 305, 312, 314, 323], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 68, 71, 75, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 95, 100, 105, 107, 109, 110, 111, 114, 117, 118, 121, 125, 127, 131, 133, 139, 150, 153, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 170, 172, 173, 174, 175, 176, 177, 185, 186, 187, 189, 192, 193, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 216, 217, 222, 223, 225, 226, 228, 234, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 296, 299, 303, 305, 307, 308, 309, 311, 312, 313, 316, 317, 319, 320, 322, 323], "record": [0, 32, 71, 75, 87, 93, 117, 238, 269, 270, 271, 272, 273, 274, 275, 276, 277, 299, 305, 312, 313], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 87, 93, 109, 135, 150, 198, 204, 205, 209, 210, 211, 212, 213, 214, 215, 305, 313, 314, 317, 318, 322, 323], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 71, 75, 82, 83, 87, 93, 99, 106, 109, 117, 123, 124, 134, 135, 138, 139, 141, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 249, 251, 252, 253, 254, 255, 287, 294, 295, 299, 305, 308, 309, 312, 313, 316, 317, 318, 319, 320], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 68, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 153, 154, 155, 164, 165, 168, 170, 171, 173, 174, 186, 187, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 269, 278, 282, 283, 284, 286, 287, 296, 305, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 323], "actor": [0, 3, 4, 15, 21, 117, 155, 157, 158, 160, 165, 166, 174, 185, 187, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 249, 296, 305, 308, 312, 313, 314, 317, 319, 322], "explor": [0, 1, 145, 180, 198, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 222, 283, 292, 293, 299, 305, 313, 314, 317, 318], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 93, 99, 101, 102, 103, 105, 107, 109, 110, 118, 119, 123, 124, 127, 128, 130, 135, 136, 138, 139, 143, 144, 150, 154, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 278, 280, 281, 282, 283, 284, 287, 296, 299, 305, 309, 312, 316, 317, 318, 320, 322, 323], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 106, 107, 108, 111, 117, 119, 125, 130, 131, 133, 138, 154, 163, 175, 176, 184, 198, 209, 213, 217, 218, 239, 245, 251, 256, 264, 273, 287, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323], "hook": [0, 32, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 187, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 305], "planner": [0, 155, 174, 305], "sac": [0, 228, 239, 241, 305], "redq": [0, 239, 295, 296, 305], "iql": [0, 234, 305, 317], "cql": [0, 223, 305], "dt": [0, 208, 305, 318], "td3": [0, 243, 305], "a2c": [0, 222, 305], "dreamer": [0, 98, 166, 230, 231, 232, 305, 307], "checkpoint": [0, 305], "builder": [0, 305, 312, 323], "logger": [0, 270, 272, 273, 274, 275, 276, 277, 281, 287, 299, 303, 305, 312], "_util": [0, 3, 11, 305], "implement_for": [0, 3, 305], "contribut": 0, "thing": [0, 3, 7, 8, 306, 313, 314, 317, 320, 323], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 71, 75, 87, 93, 109, 144, 163, 177, 192, 306, 311, 318, 320], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 72, 75, 82, 84, 86, 87, 88, 89, 93, 100, 102, 106, 107, 109, 110, 117, 118, 119, 123, 124, 130, 134, 135, 138, 139, 141, 143, 144, 151, 152, 155, 165, 172, 173, 174, 175, 176, 179, 187, 193, 209, 212, 213, 215, 219, 224, 226, 229, 235, 238, 244, 249, 250, 251, 252, 253, 254, 269, 270, 284, 303, 306, 307, 309, 311, 312, 313, 314, 317, 318, 319, 320, 323], "debug": [0, 6, 8, 40, 306, 323], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 71, 75, 79, 87, 93, 103, 117, 123, 141, 144, 156, 172, 205, 211, 216, 224, 235, 238, 287, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "habitat": [0, 3, 77, 306, 319], "lab": [0, 3, 69, 70, 306], "mujoco": [0, 6, 8, 90, 306, 313, 314], "error": [0, 1, 3, 7, 10, 11, 29, 32, 71, 75, 87, 93, 96, 124, 146, 306, 311, 313, 317, 323], "solut": [0, 3, 6, 7, 9, 21, 306, 307, 309, 322], "resourc": [0, 1, 21, 306, 311, 313, 317], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 71, 75, 87, 88, 93, 201, 236, 241, 251, 254, 306, 307, 311, 313, 314, 317, 318, 319, 323], "issu": [0, 4, 5, 8, 55, 56, 65, 79, 102, 124, 136, 198, 204, 205, 209, 210, 211, 212, 213, 306, 322], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 71, 75, 87, 93, 102, 109, 153, 175, 176, 316, 317, 320, 322], "search": [0, 154, 312], "page": [0, 7], "somewhat": [1, 308, 323], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 71, 75, 87, 93, 108, 139, 165, 187, 204, 205, 210, 211, 238, 284, 322, 323], "dataload": [1, 54, 62, 312, 313, 320], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 112, 127, 168, 170, 184, 202, 206, 208, 307, 312, 320, 322, 323], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 117, 118, 119, 121, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 150, 153, 155, 156, 157, 158, 159, 161, 162, 165, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 215, 216, 217, 219, 222, 223, 224, 225, 226, 228, 231, 234, 235, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 265, 266, 268, 278, 283, 284, 285, 296, 299, 303, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 112, 117, 123, 131, 138, 139, 143, 170, 171, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 284, 287, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 90, 102, 119, 123, 143, 146, 208, 223, 225, 228, 239, 241, 243, 278, 284, 287, 289, 290, 291, 299, 309, 311, 314, 317, 318, 319, 320, 322, 323], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 71, 75, 87, 93, 109, 119, 130, 136, 153, 196, 215, 229, 231, 236, 257, 290, 309, 311, 312, 313, 317, 318, 323], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 88, 89, 93, 101, 106, 113, 123, 135, 138, 139, 140, 141, 143, 153, 168, 170, 177, 212, 213, 222, 223, 225, 226, 228, 229, 230, 231, 234, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 307, 311, 314, 317, 318, 320, 323], "static": [1, 11, 40, 45, 144, 234, 318, 320], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 71, 72, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 106, 107, 108, 109, 110, 117, 119, 121, 123, 127, 130, 133, 135, 138, 139, 141, 143, 144, 150, 154, 156, 157, 158, 159, 160, 162, 165, 167, 168, 170, 171, 172, 175, 176, 177, 178, 181, 185, 196, 203, 204, 205, 206, 208, 212, 216, 217, 222, 223, 224, 225, 228, 234, 235, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 278, 307, 308, 311, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 71, 75, 77, 82, 87, 88, 89, 93, 134, 137, 146, 178, 207, 239, 308, 311, 313, 314, 317, 318, 319, 320, 323], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 71, 75, 87, 93, 107, 109, 110, 118, 125, 139, 151, 152, 168, 170, 206, 208, 224, 235, 238, 270, 284, 289, 301, 302, 303, 307, 311, 312, 313, 314, 317, 318, 320], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 71, 75, 79, 84, 87, 88, 89, 93, 102, 106, 123, 133, 135, 137, 138, 139, 141, 143, 144, 146, 156, 168, 170, 176, 177, 178, 180, 186, 195, 199, 201, 202, 205, 206, 209, 212, 213, 216, 223, 234, 236, 241, 251, 252, 253, 254, 255, 296, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 71, 75, 83, 87, 93, 102, 106, 113, 123, 130, 135, 138, 139, 140, 141, 143, 196, 212, 213, 214, 236, 309, 313, 323], "two": [1, 3, 4, 8, 10, 32, 62, 71, 75, 87, 93, 119, 123, 143, 161, 168, 170, 190, 213, 235, 246, 283, 287, 296, 308, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "main": [1, 2, 3, 5, 20, 22, 72, 213, 287, 307, 308, 311, 312, 316, 323], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 71, 75, 84, 87, 88, 93, 105, 106, 123, 131, 133, 135, 138, 139, 141, 143, 153, 156, 168, 170, 172, 175, 176, 177, 178, 179, 196, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 249, 251, 252, 253, 254, 255, 259, 269, 280, 290, 296, 299, 300, 303, 311, 312, 313, 314, 317, 318, 320, 323], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 71, 75, 83, 87, 88, 89, 93, 96, 105, 107, 110, 117, 119, 121, 123, 130, 139, 141, 143, 144, 153, 164, 168, 170, 172, 175, 176, 182, 187, 205, 210, 211, 213, 215, 216, 217, 236, 248, 251, 254, 269, 283, 284, 301, 302, 307, 311, 313, 316, 318, 319, 320, 322, 323], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 138, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 296, 300, 303, 307, 311, 312, 313, 317, 320], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 71, 75, 87, 93, 111, 119, 131, 156, 172, 177, 178, 191, 198, 204, 209, 210, 212, 214, 215, 217, 236, 248, 283, 286, 287, 296, 308, 309, 311, 313, 314, 317, 318], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 83, 84, 87, 93, 100, 135, 168, 170, 206, 214, 215, 291, 303, 307, 309, 312, 313, 314, 317, 320, 321, 323], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 68, 71, 72, 75, 81, 83, 87, 88, 89, 93, 100, 113, 116, 118, 119, 133, 134, 135, 136, 139, 153, 154, 155, 166, 168, 170, 171, 173, 174, 202, 206, 208, 209, 213, 222, 230, 238, 250, 251, 252, 253, 254, 257, 258, 259, 269, 278, 283, 287, 309, 311, 312, 314, 316, 318, 319, 320, 322], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 71, 75, 87, 93, 123, 138, 141, 144, 215, 311, 318, 322], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 124, 134, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 226, 236, 251, 252, 253, 254, 255, 269, 300, 311, 312, 314, 318, 320, 323], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 71, 75, 83, 84, 86, 87, 88, 89, 93, 102, 109, 114, 118, 119, 129, 133, 136, 144, 155, 156, 163, 164, 166, 167, 168, 169, 170, 172, 174, 177, 178, 181, 182, 183, 186, 188, 189, 192, 193, 194, 195, 198, 202, 203, 206, 208, 209, 212, 213, 217, 221, 223, 228, 230, 234, 235, 237, 239, 241, 243, 278, 280, 283, 287, 289, 290, 291, 301, 302, 303, 307, 311, 312, 313, 314, 317, 318, 319, 323], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 71, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 168, 170, 172, 179, 180, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 252, 253, 254, 284, 311, 313, 314, 317, 318, 320, 323], "deliv": [1, 16, 18, 19, 20, 311, 312, 322], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 71, 75, 82, 87, 88, 89, 93, 144, 168, 170, 214, 215, 269, 278, 307, 312, 316, 318, 322], "user": [1, 2, 3, 5, 8, 21, 32, 52, 71, 75, 87, 93, 134, 139, 162, 171, 238, 300, 308, 309, 311, 312, 318, 322, 323], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 68, 71, 72, 75, 81, 82, 83, 84, 86, 87, 88, 89, 93, 100, 102, 106, 111, 113, 116, 118, 123, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 146, 154, 168, 170, 197, 208, 269, 296, 311, 312, 313, 314, 316, 317, 322], "whenev": [1, 3, 32, 35, 38, 41, 42, 99, 116, 139, 236, 251, 252, 253, 254, 289, 307], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 71, 75, 87, 93, 133, 202, 206, 208, 311, 313, 317, 322, 323], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 107, 108, 110, 111, 118, 119, 121, 125, 127, 129, 131, 133, 135, 136, 138, 144, 153, 154, 155, 168, 170, 174, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 296, 308, 311, 313, 314, 316, 317, 318, 320, 322, 323], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 68, 71, 75, 81, 83, 87, 88, 89, 91, 92, 93, 100, 102, 103, 105, 106, 111, 116, 119, 125, 131, 133, 134, 136, 138, 139, 142, 144, 153, 154, 155, 157, 162, 166, 168, 170, 171, 172, 174, 182, 185, 186, 188, 189, 195, 199, 212, 218, 222, 224, 235, 236, 238, 239, 240, 249, 250, 251, 252, 253, 254, 255, 303, 307, 308, 311, 312, 313, 314, 317, 318, 323], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 71, 75, 79, 87, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 168, 170, 179, 202, 204, 206, 210, 231, 312, 313, 314, 317, 318, 319, 320, 323], "predefin": [1, 312, 313, 320], "becaus": [1, 3, 4, 7, 40, 71, 75, 87, 93, 117, 133, 138, 161, 171, 178, 198, 204, 205, 209, 210, 211, 212, 213, 311, 312, 314, 316, 317, 318, 320, 323], "potenti": [1, 318, 320], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 71, 75, 87, 93, 119, 139, 142, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 188, 189, 191, 193, 194, 196, 199, 202, 203, 205, 206, 208, 209, 211, 213, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 291, 308, 311, 313, 314, 316, 317, 319, 320], "heavi": [1, 8, 320], "crucial": [1, 202, 206, 208, 234, 236, 311, 312, 313, 314, 317, 318, 323], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 117, 157, 162, 185, 236, 238, 296, 307, 311, 312, 313, 317, 318], "hyperparamet": [1, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 311, 318, 320], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 135, 300, 303, 311, 320], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 69, 70, 71, 72, 75, 83, 84, 86, 87, 88, 89, 90, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 299, 300, 301, 302, 303, 307, 308, 311, 314, 317, 318, 319, 322], "take": [1, 3, 8, 23, 40, 71, 75, 87, 93, 105, 133, 134, 136, 138, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 207, 208, 211, 216, 219, 221, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 289, 307, 309, 311, 312, 313, 317, 318, 320, 323], "consider": [1, 3, 8, 312, 317, 320], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 83, 87, 88, 89, 90, 93, 107, 110, 134, 139, 154, 156, 168, 170, 172, 217, 223, 224, 225, 226, 228, 229, 235, 236, 238, 239, 241, 243, 249, 251, 254, 311, 312, 313, 317, 318, 323], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 82, 83, 87, 88, 89, 90, 93, 102, 105, 106, 107, 108, 111, 113, 117, 119, 124, 125, 127, 130, 131, 133, 134, 136, 138, 139, 144, 146, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 209, 211, 212, 213, 216, 219, 228, 233, 235, 236, 238, 239, 242, 250, 251, 252, 253, 254, 255, 270, 282, 283, 284, 287, 299, 301, 302, 303, 307, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "occur": [1, 8, 14, 28, 29, 103, 119, 124, 154, 198, 204, 205, 209, 210, 211, 212, 213, 231, 320, 323], "serial": [1, 3, 32, 71, 75, 87, 93, 144], "optim": [1, 2, 8, 32, 71, 75, 87, 93, 139, 155, 174, 179, 180, 223, 236, 237, 238, 241, 282, 287, 299, 308, 309, 313, 314, 317, 318], "parallel": [1, 3, 8, 17, 88, 89, 146, 222, 300, 301, 302, 303, 312, 313, 317], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 102, 127, 299, 302, 305, 313, 314, 317, 320], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 75, 77, 82, 83, 87, 88, 89, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 301, 302, 303, 307, 308, 309, 311, 312, 313, 314, 317, 320, 323], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 72, 84, 87, 93, 144, 301, 302, 303, 311, 313, 322, 323], "multisyncdatacollector": [1, 18, 19, 20, 21, 302, 305, 313, 322], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 82, 88, 89, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 307, 309, 313, 320, 322], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 79, 144, 177, 208, 289, 307, 311, 317, 318], "aggreg": [1, 154, 156, 158, 159, 215], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 71, 72, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 153, 154, 168, 170, 172, 177, 187, 203, 205, 206, 211, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 251, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 289, 307, 312, 314, 318, 319, 322, 323], "final": [1, 3, 4, 21, 34, 36, 39, 40, 168, 170, 177, 202, 206, 207, 208, 214, 251, 283, 307, 311, 312, 313, 317, 318, 323], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 301, 305, 311, 312, 313, 322], "sever": [1, 8, 30, 32, 45, 71, 75, 87, 93, 103, 105, 139, 238, 311, 313, 320, 323], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 71, 75, 83, 84, 86, 87, 93, 102, 113, 119, 121, 124, 127, 135, 139, 140, 144, 154, 163, 164, 168, 170, 171, 175, 176, 177, 178, 179, 184, 186, 192, 196, 208, 212, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 278, 281, 284, 285, 286, 287, 289, 301, 302, 303, 309, 312, 313, 314, 316, 317, 319, 322, 323], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 124, 176, 184, 250, 291, 306, 311, 312, 313, 314, 317, 318, 320, 323], "continu": [1, 9, 25, 46, 71, 75, 87, 88, 89, 93, 150, 158, 159, 160, 161, 208, 215, 222, 223, 228, 234, 238, 239, 240, 241, 242, 243, 251, 256, 264, 307, 311, 313, 314, 317, 318, 320, 322, 323], "concomitantli": 1, "network": [1, 4, 8, 32, 71, 75, 82, 87, 88, 89, 93, 156, 158, 159, 160, 161, 164, 166, 167, 172, 177, 178, 180, 182, 183, 186, 188, 189, 190, 195, 199, 200, 201, 212, 216, 223, 224, 225, 226, 228, 229, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 255, 298, 299, 307, 308, 309, 316, 318, 323], "impli": [1, 323], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 71, 75, 87, 91, 92, 93, 106, 123, 135, 138, 139, 141, 143, 168, 170, 177, 180, 212, 222, 223, 224, 228, 231, 289, 298, 307, 309, 311, 312, 313, 314, 316, 318, 320, 322], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 71, 75, 87, 93, 117, 119, 131, 139, 140, 144, 146, 172, 177, 308, 309, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323], "slightli": [1, 307, 308, 314, 318, 319, 320, 323], "lag": [1, 13, 14, 16, 17, 311, 312, 313], "therefor": [1, 3, 7, 71, 75, 87, 93, 127, 134, 238, 249, 323], "although": [1, 8, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 309, 311, 312, 320], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 71, 75, 82, 83, 86, 87, 88, 89, 93, 100, 102, 117, 123, 127, 130, 133, 136, 138, 140, 143, 153, 154, 175, 176, 177, 202, 206, 208, 209, 212, 213, 221, 222, 223, 224, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 308, 309, 311, 312, 313, 316, 317, 318, 320, 323], "asynchron": [1, 9, 14, 21, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212, 222, 301, 312, 313], "off": [1, 2, 4, 169, 194, 204, 241, 283, 292, 307, 309, 311, 312, 313, 317, 319, 323], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 71, 75, 87, 88, 89, 93, 107, 110, 113, 119, 134, 165, 168, 170, 178, 179, 199, 201, 203, 205, 210, 222, 229, 234, 238, 283, 307, 309, 311, 312, 313, 314, 317, 318, 319, 320, 323], "remot": [1, 18, 19, 20, 21, 87, 93, 323], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 71, 75, 78, 83, 84, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 105, 107, 110, 111, 117, 121, 125, 130, 131, 133, 136, 146, 155, 168, 170, 174, 208, 222, 291, 307, 311, 313, 314, 319, 320, 322], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 131, 239, 251, 252, 253, 254, 255, 308, 311, 313], "synchronis": [1, 72, 317], "either": [1, 5, 22, 32, 40, 54, 71, 75, 87, 93, 133, 134, 218, 243, 274, 309, 311, 312, 314, 319, 320, 322, 323], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 311, 317, 322], "update_at_each_batch": [1, 13, 14, 17, 311], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 69, 70, 71, 72, 73, 75, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 106, 109, 113, 116, 117, 118, 119, 123, 124, 125, 129, 131, 133, 135, 137, 138, 139, 140, 141, 143, 144, 146, 150, 153, 154, 155, 156, 158, 159, 160, 161, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 193, 194, 198, 199, 200, 201, 202, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 223, 224, 225, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 251, 252, 253, 254, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 280, 281, 283, 284, 287, 303, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "second": [1, 8, 168, 170, 205, 224, 235, 238, 241, 286, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 68, 71, 73, 75, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 110, 111, 117, 121, 122, 123, 125, 127, 131, 133, 135, 137, 138, 139, 141, 143, 150, 153, 155, 156, 157, 158, 159, 160, 161, 165, 167, 168, 170, 171, 172, 174, 177, 178, 179, 180, 185, 186, 187, 195, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 211, 212, 215, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 284, 289, 296, 297, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 71, 75, 87, 93, 113, 117, 138, 164, 165, 181, 199, 200, 201, 204, 205, 207, 212, 218, 222, 224, 225, 226, 229, 235, 238, 240, 249, 250, 251, 252, 253, 254, 287, 296, 305, 309, 311, 312, 313, 314, 316, 317, 318, 323], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 70, 71, 72, 75, 83, 87, 93, 102, 119, 135, 138, 144, 150, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 219, 226, 228, 236, 249, 251, 252, 253, 254, 270, 274, 283, 291, 292, 293, 296, 299, 301, 302, 307, 308, 309, 311, 312, 313, 314, 318, 320, 323], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 106, 107, 108, 110, 111, 121, 123, 125, 127, 131, 133, 135, 138, 139, 141, 143, 150, 153, 155, 168, 170, 174, 179, 180, 186, 187, 195, 198, 199, 200, 201, 203, 204, 205, 209, 210, 211, 212, 215, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 284, 296, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 71, 75, 79, 87, 93, 125, 161, 168, 170, 172, 181, 196, 198, 202, 204, 212, 217, 236, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 306, 308, 311, 312, 313, 317, 318, 320, 322, 323], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 71, 72, 75, 79, 82, 86, 87, 88, 89, 93, 100, 102, 105, 107, 108, 109, 110, 118, 119, 123, 127, 130, 132, 138, 139, 140, 143, 144, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 184, 185, 187, 188, 189, 191, 196, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 234, 235, 236, 238, 239, 240, 241, 242, 243, 249, 251, 252, 253, 254, 258, 259, 280, 282, 283, 287, 291, 296, 303, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 323], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 78, 79, 87, 93, 106, 117, 122, 123, 135, 138, 139, 141, 143, 212, 279, 311, 312, 313, 314, 317, 319, 323], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 87, 93, 103, 105, 109, 118, 127, 130, 133, 138, 144, 170, 171, 177, 179, 180, 198, 204, 209, 210, 212, 213, 216, 224, 228, 235, 238, 239, 243, 257, 296, 303, 307, 309, 311, 312, 313, 317, 318, 320, 322], "infer": [1, 87, 93, 102, 134, 144, 168, 170, 179, 203, 311, 313, 320], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 69, 70, 71, 75, 83, 87, 93, 118, 119, 139, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 214, 215, 216, 219, 283, 301, 302, 303, 306, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322], "dispatch": [1, 18, 19, 20, 21, 196], "avail": [1, 3, 4, 6, 21, 62, 79, 88, 89, 117, 165, 187, 209, 213, 236, 301, 302, 307, 311, 312, 313, 314, 317, 318, 320, 323], "speed": [1, 2, 4, 8, 27, 308, 311, 312, 313, 314, 317, 318, 320], "up": [1, 2, 3, 8, 9, 27, 40, 52, 136, 138, 238, 306, 307, 308, 311, 312, 313, 314, 317, 318, 320, 323], "avoid": [1, 32, 55, 56, 65, 71, 75, 87, 93, 99, 139, 144, 198, 212, 217, 224, 235, 238, 290, 313, 317], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 181, 307, 308, 311, 312, 317], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 68, 71, 73, 75, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 107, 110, 111, 113, 121, 123, 125, 127, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 150, 153, 155, 156, 157, 162, 163, 165, 168, 170, 171, 172, 174, 175, 176, 177, 178, 181, 184, 185, 186, 187, 188, 189, 192, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 217, 222, 223, 225, 226, 228, 234, 236, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 270, 278, 284, 296, 307, 312, 313, 314, 316, 317, 318, 322, 323], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 71, 72, 73, 75, 82, 84, 87, 88, 89, 93, 107, 110, 125, 138, 140, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 195, 196, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 224, 235, 236, 238, 251, 252, 253, 254, 255, 284, 301, 302, 303, 307, 311, 312, 313, 314, 316, 317, 318, 320, 323], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 71, 75, 79, 86, 87, 93, 102, 113, 140, 144, 154, 168, 170, 203, 222, 224, 225, 228, 234, 235, 236, 238, 239, 240, 241, 243, 251, 252, 253, 254, 307, 308, 312, 313, 317, 320], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 71, 75, 87, 93, 144, 155, 171, 174, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 296, 305, 309, 311, 313, 314, 317, 319, 320, 323], "while": [1, 3, 7, 8, 32, 71, 75, 87, 93, 127, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 234, 235, 238, 307, 311, 313, 314, 317, 318, 319, 320, 322], "wait": [1, 20, 21, 22, 314, 318], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 71, 75, 87, 88, 89, 93, 99, 102, 109, 119, 125, 127, 130, 131, 133, 135, 139, 189, 214, 215, 216, 222, 223, 225, 226, 228, 234, 238, 241, 251, 258, 259, 307, 309, 311, 312, 313, 314, 316, 317, 318, 320, 323], "impact": [1, 107, 110, 312, 314, 317], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 71, 72, 75, 79, 87, 93, 102, 106, 123, 135, 138, 139, 141, 143, 144, 212, 303, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "manag": [1, 8, 247, 248, 251, 252, 253, 254, 283], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 71, 75, 87, 93, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 153, 154, 155, 164, 165, 168, 170, 173, 174, 187, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 270, 281, 282, 283, 285, 286, 287, 291, 296, 308, 309, 311, 313, 314, 316, 317, 318, 320, 322, 323], "control": [1, 3, 5, 8, 16, 69, 70, 82, 88, 89, 109, 153, 158, 159, 160, 161, 168, 170, 173, 174, 189, 196, 208, 212, 213, 214, 222, 224, 235, 238, 242, 251, 256, 264, 307, 309, 311, 312, 313, 317, 318, 320], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 71, 75, 79, 84, 87, 90, 93, 102, 103, 107, 110, 114, 117, 118, 119, 123, 124, 133, 135, 136, 138, 139, 141, 146, 169, 170, 175, 176, 177, 194, 199, 200, 201, 203, 209, 212, 213, 215, 222, 223, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 246, 249, 251, 252, 253, 254, 278, 282, 296, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 323], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 311, 312, 317, 322], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 71, 75, 87, 88, 89, 93, 102, 105, 107, 110, 114, 121, 134, 139, 168, 170, 283, 287, 308, 311, 312, 313, 314, 317, 318, 320, 323], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 208, 311, 323], "usual": [1, 3, 4, 6, 7, 8, 52, 71, 75, 87, 93, 180, 238, 251, 252, 253, 254, 255, 269, 296, 306, 307, 309, 311, 312, 313, 314, 317, 320, 323], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 71, 72, 75, 82, 87, 88, 89, 93, 102, 107, 109, 110, 114, 118, 119, 138, 139, 144, 156, 168, 170, 172, 175, 176, 177, 178, 203, 208, 216, 311, 312, 313, 316, 317, 319, 320, 323], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 71, 73, 75, 87, 93, 102, 107, 110, 127, 305, 309, 312, 313, 314, 317, 319], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 69, 71, 75, 86, 87, 88, 89, 90, 93, 100, 102, 103, 107, 109, 110, 113, 117, 118, 119, 121, 123, 124, 127, 129, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 191, 192, 193, 194, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 296, 299, 303, 309, 311, 312, 313, 314, 319, 320, 322, 323], "behaviour": [1, 3, 21, 75, 103, 107, 110, 119, 124, 134, 153, 168, 169, 170, 194, 283, 307, 312, 314, 318, 320], "besid": 1, "those": [1, 5, 7, 26, 28, 87, 93, 102, 107, 110, 119, 135, 136, 170, 209, 213, 214, 215, 289, 301, 302, 307, 311, 312, 317, 318, 323], "choos": [1, 82, 168, 170, 238, 307, 308, 311, 312, 313, 317, 320], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 71, 75, 83, 86, 87, 88, 89, 91, 92, 93, 117, 123, 141, 156, 168, 170, 172, 205, 210, 211, 221, 222, 223, 224, 225, 228, 234, 235, 236, 238, 239, 240, 241, 243, 287, 296, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 290, 311, 313, 322], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 102, 114, 202, 206, 208, 269, 270, 280, 283, 287, 290, 291, 311, 312, 313, 314, 317, 320, 322, 323], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 75, 86, 87, 93, 102, 105, 106, 109, 113, 116, 117, 119, 121, 122, 123, 130, 135, 138, 139, 141, 143, 144, 146, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 212, 213, 215, 216, 219, 224, 235, 238, 250, 251, 252, 253, 254, 269, 283, 309, 312, 313, 314, 317, 318, 319, 320, 323], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 102, 127, 290, 311, 312, 313, 314, 317, 320, 322], "each": [1, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 52, 71, 72, 75, 87, 88, 89, 93, 123, 127, 130, 133, 134, 135, 136, 143, 144, 165, 168, 170, 177, 178, 182, 186, 187, 195, 202, 204, 205, 206, 211, 215, 257, 260, 261, 262, 263, 265, 266, 267, 268, 283, 284, 301, 302, 307, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 290, 311, 312], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 71, 75, 83, 87, 93, 109, 118, 119, 135, 146, 168, 170, 206, 209, 212, 213, 223, 239, 283, 291, 307, 311, 312, 313, 314, 318, 319, 320, 322, 323], "rand_step": [1, 3, 67, 69, 70, 71, 72, 74, 75, 76, 80, 83, 84, 87, 93, 116, 135, 144, 318, 322, 323], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 311], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 311, 312, 313], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 71, 75, 87, 93, 124, 133, 138, 155, 170, 174, 208, 238, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 305, 308, 311, 312, 313, 314, 318, 320, 322, 323], "pad": [1, 23, 37, 43, 52, 102, 156, 158, 159, 170, 171, 175, 176, 177, 284], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 102, 103, 119, 121, 124, 130, 137, 170, 172, 175, 176, 180, 204, 209, 212, 213, 236, 307, 311, 312, 314, 317, 318, 320], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 71, 75, 87, 93, 102, 106, 123, 135, 137, 138, 139, 141, 143, 173, 212, 221, 229, 287, 306, 312, 313, 316, 317, 318, 320, 323], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 75, 124, 133, 154, 175, 176, 202, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 309, 314], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 71, 75, 87, 93, 114, 124, 144, 165, 175, 176, 187, 204, 205, 210, 211, 213, 246, 251, 284, 311, 313, 314, 317], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 96, 124, 139, 156, 172, 175, 176, 202, 208, 235, 251, 252, 253, 254, 284, 309, 323], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 283, 305, 311, 312], "strategi": [1, 16, 82, 176, 184, 206, 307, 309, 311, 312, 317, 320], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 71, 75, 87, 93, 123, 143, 307, 308, 311, 313, 317, 318, 320, 323], "tool": [1, 2, 3, 5, 314, 318, 320, 323], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 97, 99, 309, 311, 313, 314, 318], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 305], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 305], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 103, 106, 107, 108, 109, 110, 111, 117, 119, 121, 123, 125, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 150, 153, 154, 155, 156, 157, 162, 163, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 285, 286, 296, 299, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "multiprocess": [1, 3, 18, 19, 20, 72, 73, 144, 312, 313, 318, 323], "synchron": [1, 13, 19, 21, 84, 301, 302, 312, 313], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 84, 87, 93, 107, 110, 134, 139, 144, 147, 151, 152, 163, 168, 169, 170, 184, 192, 193, 194, 209, 213, 236, 283, 311, 312, 314, 317, 322, 323], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 202, 208, 281, 285, 311, 312, 317], "dedic": [1, 3, 18, 19, 20, 21, 199, 200, 201, 307, 311, 316, 317], "folder": [1, 312], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 71, 75, 87, 93, 124, 214, 215, 278, 287, 307, 311, 312, 313, 316, 322, 323], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 71, 72, 75, 83, 87, 88, 89, 93, 96, 102, 105, 106, 107, 108, 110, 112, 117, 118, 119, 123, 130, 135, 136, 138, 139, 141, 143, 144, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 212, 213, 215, 216, 219, 231, 236, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 282, 287, 290, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323], "variou": [1, 3, 13, 14, 16, 17, 168, 170, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 249, 301, 302, 311, 312, 313, 317, 323], "machin": [1, 7, 18, 19, 20, 32, 53, 79, 317], "One": [1, 2, 4, 8, 31, 33, 45, 102, 127, 141, 184, 202, 212, 216, 242, 246, 274, 311, 312, 320, 323], "wonder": 1, "why": [1, 3, 318, 323], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 84, 88, 89, 93, 300, 305, 311, 312, 313, 316, 322, 323], "instead": [1, 4, 7, 8, 11, 27, 32, 71, 75, 87, 93, 113, 135, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 222, 223, 224, 226, 228, 229, 234, 235, 238, 239, 240, 241, 249, 251, 255, 259, 303, 307, 318, 320, 323], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 71, 75, 87, 88, 89, 93, 106, 107, 108, 110, 123, 127, 131, 134, 135, 137, 138, 139, 141, 143, 169, 172, 177, 189, 193, 194, 212, 215, 221, 222, 223, 225, 226, 228, 234, 236, 238, 239, 240, 241, 243, 289, 301, 302, 303, 307, 308, 311, 312, 313, 314, 316, 317, 318, 319, 320, 323], "lower": [1, 2, 17, 21, 25, 105, 144, 188, 189, 216, 313, 318], "io": [1, 84], "footprint": [1, 2, 320], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 63, 71, 75, 79, 82, 87, 88, 89, 93, 102, 105, 113, 123, 125, 136, 139, 143, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 179, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 210, 211, 212, 216, 219, 221, 228, 239, 240, 241, 243, 250, 255, 270, 287, 303, 307, 308, 311, 312, 313, 314, 317, 318, 320, 322, 323], "commun": [1, 2, 3, 306, 313, 323], "yet": [1, 236, 319], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 71, 73, 75, 83, 87, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 150, 154, 165, 187, 189, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 296, 307, 311, 312, 313, 314, 316, 317, 322], "plai": [1, 3, 88, 89, 102, 312, 313, 320, 323], "role": [1, 3, 312, 323], "opposit": 1, "direct": [1, 32, 71, 75, 87, 93, 236, 312], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 71, 75, 87, 88, 89, 93, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 204, 205, 206, 208, 210, 211, 216, 219, 311, 312, 313, 314, 318, 319, 320, 322, 323], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 84, 251, 252, 253, 254, 314, 317], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 72, 87, 93, 144, 168, 170, 177, 178, 199, 200, 201, 222, 224, 225, 228, 234, 235, 238, 239, 240, 241, 243, 303, 307, 313, 314, 316, 317, 322, 323], "among": [1, 3, 88, 89, 317], "achiev": [1, 3, 4, 32, 71, 75, 79, 87, 93, 134, 154, 284, 309, 311, 312, 313, 314, 317, 318, 323], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 87, 123, 138, 143, 227, 236, 308, 309, 311, 312, 313, 314, 320, 323], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 283, 308, 311, 313, 317, 320, 323], "gpu": [1, 7, 8, 32, 55, 56, 65, 71, 75, 79, 87, 93, 311, 313, 314, 317, 323], "nativ": [1, 7, 9, 71, 75, 87, 93, 102, 314, 320], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 169, 193, 194, 221, 306, 311, 312, 313, 314, 317, 319, 323], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 75, 119, 144, 155, 163, 166, 168, 170, 171, 174, 192, 202, 209, 213, 236, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 307, 308, 311, 312, 313, 317, 318, 320, 322, 323], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 71, 75, 87, 93, 105, 106, 123, 131, 135, 138, 139, 141, 143, 168, 170, 175, 176, 198, 202, 203, 204, 206, 208, 209, 210, 212, 213, 216, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 249, 251, 252, 253, 254, 255, 259, 300, 311, 312, 313, 317, 320, 323], "build": [1, 3, 7, 23, 26, 32, 71, 75, 87, 90, 93, 127, 144, 155, 168, 170, 174, 207, 209, 213, 287, 294, 295, 297, 298, 307, 309, 313, 314, 317, 318, 319, 322, 323], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 71, 75, 83, 87, 93, 106, 109, 119, 123, 135, 138, 139, 141, 143, 153, 155, 165, 166, 174, 187, 191, 198, 204, 205, 206, 208, 211, 212, 213, 214, 215, 217, 221, 225, 226, 250, 251, 252, 253, 254, 255, 257, 279, 283, 299, 307, 309, 311, 312, 313, 317, 318, 323], "mani": [1, 3, 4, 38, 71, 222, 224, 228, 235, 238, 239, 243, 307, 311, 312, 313, 317, 318, 320, 323], "eg": [1, 3, 11, 55, 56, 57, 63, 65, 71, 75, 79, 87, 93, 109, 133, 177, 203], "gymnasium": [1, 3, 5, 11, 71, 75, 87, 93, 97, 99, 111, 131, 133, 312, 313, 318, 322], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 71, 75, 83, 87, 93, 105, 108, 109, 131, 137, 141, 144, 168, 170, 180, 181, 203, 205, 206, 211, 213, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 251, 284, 296, 301, 302, 307, 309, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323], "warn": [1, 3, 202, 206, 208, 312, 323], "quickli": [1, 3, 312, 317, 323], "becom": [1, 3, 4, 21, 317, 323], "quit": [1, 3, 307, 311, 312, 313, 317, 323], "annoi": [1, 3], "By": [1, 2, 3, 33, 71, 75, 87, 88, 89, 93, 196, 213, 236, 283, 303, 311, 319, 320, 323], "filter": [1, 3, 4, 45, 222, 223, 225, 228, 234, 238, 239, 241], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 71, 75, 87, 88, 89, 93, 135, 146, 175, 176, 179, 180, 198, 203, 204, 205, 208, 209, 210, 211, 212, 213, 247, 248, 309, 311, 312, 313, 314, 317, 318, 320, 322, 323], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 71, 72, 75, 79, 83, 87, 88, 89, 93, 97, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 118, 119, 123, 124, 127, 130, 131, 135, 136, 138, 139, 141, 143, 144, 153, 154, 156, 168, 170, 171, 172, 175, 176, 177, 178, 196, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 265, 266, 267, 268, 282, 284, 287, 289, 291, 296, 299, 303, 306, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "still": [1, 3, 9, 202, 235, 236, 311, 312, 314, 316, 318, 320, 323], "wish": [1, 3, 99, 320], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 71, 75, 78, 84, 87, 88, 89, 93, 106, 123, 135, 137, 138, 139, 141, 143, 145, 156, 169, 172, 178, 179, 186, 194, 195, 199, 201, 212, 213, 284, 311, 312, 313, 314, 317, 318, 320, 323], "displai": [1, 3, 7, 287, 309, 311, 312, 317, 318], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 68, 69, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 110, 111, 113, 116, 117, 118, 119, 121, 123, 124, 125, 127, 129, 131, 133, 135, 137, 138, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 158, 165, 168, 169, 170, 172, 174, 175, 176, 177, 178, 186, 187, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 222, 223, 224, 225, 226, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 249, 251, 252, 253, 254, 260, 261, 262, 263, 265, 266, 267, 268, 280, 281, 283, 284, 285, 287, 296, 303, 307, 309, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "central": [2, 177, 311, 312, 317, 320], "part": [2, 4, 8, 32, 40, 71, 75, 87, 93, 119, 127, 130, 168, 170, 217, 278, 303, 311, 313, 314, 318, 323], "algorithm": [2, 3, 8, 9, 13, 14, 83, 114, 222, 238, 239, 240, 241, 278, 292, 305, 308, 309, 311, 312, 313, 314, 317, 319, 320, 322], "implement": [2, 3, 9, 11, 16, 32, 63, 71, 75, 84, 87, 93, 106, 107, 108, 111, 117, 125, 131, 133, 138, 144, 169, 192, 193, 194, 222, 223, 227, 234, 236, 237, 238, 241, 296, 307, 309, 311, 312, 313, 314, 318, 322], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 62, 71, 72, 75, 79, 87, 93, 102, 117, 123, 125, 135, 141, 144, 155, 170, 171, 177, 178, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "give": [2, 7, 41, 71, 75, 83, 87, 93, 102, 306, 308, 311, 312, 317, 318, 319, 322], "abil": [2, 236, 318, 320], "veri": [2, 3, 312, 318, 320, 322, 323], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 71, 75, 83, 86, 87, 93, 102, 124, 127, 147, 148, 151, 152, 155, 163, 169, 174, 175, 176, 184, 185, 188, 193, 194, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 222, 223, 224, 225, 226, 235, 237, 238, 243, 278, 284, 287, 290, 307, 311, 312, 313, 314, 317, 319, 322, 323], "latenc": 2, "especi": [2, 3, 7, 8, 103], "larger": [2, 4, 234], "volum": 2, "lazymemmapstorag": [2, 102, 305, 311, 312, 314, 319, 320], "advis": [2, 323], "due": [2, 3, 5, 319, 320, 323], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 320], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 71, 75, 87, 93, 188, 189, 236, 255, 311, 312, 314, 319, 320, 322, 323], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 71, 75, 87, 88, 89, 93, 107, 108, 110, 130, 132, 134, 140, 155, 212, 213, 236, 242, 307, 311, 313, 314], "file": [2, 6, 7, 8, 269, 309, 312, 319, 320, 321], "locat": [2, 7, 45, 71, 75, 87, 93, 119, 129, 169, 181, 193, 194, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 311, 312, 313, 317, 320], "improv": [2, 4, 114, 222, 308, 317, 320], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 305, 320], "were": [2, 7, 87, 93, 313, 320], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 71, 75, 79, 87, 93, 100, 102, 127, 130, 136, 144, 154, 206, 209, 213, 235, 236, 238, 311, 312, 314], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 79, 84, 88, 89, 90, 102, 123, 141, 157, 158, 159, 160, 161, 162, 165, 166, 167, 174, 175, 176, 180, 182, 183, 185, 186, 188, 189, 195, 205, 208, 222, 223, 227, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 251, 256, 264, 296, 319, 322], "github": [2, 5, 6, 7, 10, 18, 19, 20, 88, 89, 90, 141, 322], "com": [2, 5, 6, 7, 10, 18, 19, 20, 79, 88, 89, 90, 322], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 71, 75, 82, 83, 87, 88, 89, 93, 106, 107, 108, 111, 117, 123, 125, 131, 133, 135, 138, 139, 141, 143, 144, 148, 152, 156, 172, 177, 178, 180, 186, 195, 202, 204, 209, 212, 213, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 245, 249, 257, 296, 301, 307, 311, 312, 313, 317, 318, 320, 323], "1x": 2, "lazytensorstorag": [2, 41, 42, 127, 305, 313, 317, 320], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 71, 75, 78, 82, 84, 86, 87, 88, 89, 91, 92, 93, 100, 102, 106, 109, 111, 117, 119, 121, 123, 125, 127, 130, 131, 133, 135, 137, 138, 139, 141, 143, 150, 155, 156, 158, 159, 162, 165, 167, 168, 170, 171, 172, 174, 177, 178, 181, 184, 186, 196, 198, 199, 200, 201, 204, 205, 209, 211, 212, 215, 216, 217, 222, 223, 225, 226, 228, 229, 230, 231, 234, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 257, 260, 261, 262, 263, 265, 266, 267, 268, 270, 286, 307, 309, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323], "44x": 2, "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 87, 93, 118, 169, 193, 194, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 312, 313, 318, 320, 323], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 86, 102, 124, 156, 198, 202, 204, 212, 213, 217, 278, 311, 313, 320, 323], "pai": [2, 8, 311, 314], "attent": [2, 8, 311, 314, 323], "alwai": [2, 3, 20, 26, 28, 32, 54, 71, 75, 87, 93, 117, 118, 229, 236, 307, 308, 312, 313, 314, 317, 318, 320], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 135, 169, 186, 193, 194, 311, 314, 317, 318, 320, 322], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 93, 102, 103, 113, 119, 121, 124, 130, 132, 137, 140, 144, 156, 157, 162, 168, 170, 172, 175, 176, 177, 179, 180, 185, 186, 190, 191, 192, 193, 196, 204, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 303, 307, 311, 312, 313, 314, 317, 318, 320], "word": [2, 40, 52, 236, 311, 318, 323], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 71, 72, 75, 79, 84, 87, 88, 93, 102, 123, 138, 139, 141, 144, 150, 153, 156, 158, 159, 160, 161, 162, 167, 168, 170, 172, 173, 177, 178, 203, 213, 226, 229, 239, 249, 270, 284, 291, 292, 293, 299, 301, 302, 307, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323], "1m": [2, 290, 311, 313, 314], "multidimension": [2, 41, 58, 320], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 162, 168, 170, 179, 196, 203, 214, 215, 222, 224, 229, 235, 238, 250, 287, 307, 309, 311, 312, 313, 314, 318, 320, 323], "desir": [2, 3, 32, 71, 75, 87, 93, 106, 119, 121, 123, 124, 135, 138, 139, 141, 143, 151, 152, 156, 172, 178, 198, 204, 205, 209, 210, 211, 212, 213, 307, 311, 317, 318], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 71, 75, 76, 79, 81, 84, 87, 93, 111, 119, 123, 124, 127, 133, 141, 146, 177, 178, 179, 204, 213, 236, 238, 251, 252, 253, 254, 284, 293, 303, 307, 308, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "do": [2, 3, 4, 7, 75, 118, 124, 144, 153, 178, 179, 200, 251, 309, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "custom": [2, 3, 5, 32, 71, 75, 87, 93, 141, 177, 178, 216, 229, 238, 244, 303, 307, 311, 312, 313, 314, 317], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 69, 71, 75, 82, 84, 87, 88, 89, 90, 93, 96, 109, 111, 125, 130, 131, 133, 139, 141, 154, 168, 170, 204, 210, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 255, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 296, 309, 311, 312, 313, 314, 317, 318, 323], "randomcroptensordict": [2, 311], "here": [2, 3, 4, 7, 8, 9, 10, 71, 75, 79, 87, 88, 89, 93, 102, 307, 308, 311, 312, 313, 314, 317, 318, 320, 322, 323], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 71, 75, 87, 88, 89, 93, 222, 224, 233, 235, 238, 287, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 67, 68, 69, 70, 74, 76, 77, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 94, 95, 97, 181, 196, 202, 203, 208, 213, 218, 251, 275, 276, 277, 303, 305, 313, 314, 317, 319, 323], "around": [2, 5, 7, 15, 17, 41, 42, 83, 213, 251, 311, 312, 317, 323], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 102, 146, 223, 234, 309, 319, 320, 322], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 71, 75, 87, 93, 111, 127, 131, 153, 154, 157, 158, 159, 160, 161, 167, 180, 185, 208, 212, 213, 214, 215, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 303, 309, 311, 316, 317, 320, 322], "replaybuff": [2, 41, 42, 66, 102, 124, 127, 226, 229, 249, 297, 299, 305, 313, 317, 319, 320, 322], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 124, 226, 229, 249, 305, 311, 313, 317, 320], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 71, 75, 82, 87, 88, 89, 91, 92, 93, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 150, 165, 181, 198, 199, 200, 201, 204, 209, 210, 212, 213, 215, 216, 217, 218, 249, 283, 305, 307, 308, 311, 312, 313, 314, 319], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 109, 110, 111, 113, 116, 119, 121, 123, 124, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 225, 226, 228, 231, 232, 234, 236, 238, 239, 240, 241, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 296, 307, 309, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 71, 75, 87, 93, 125, 135, 153, 172, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 244, 246, 249, 307, 309, 311, 313, 314, 317, 318, 320, 323], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 88, 89, 91, 92, 287, 306, 313, 314, 317, 323], "respons": [2, 3, 8, 287, 323], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 117, 199, 200, 201, 212, 234, 296, 305, 311, 318, 322], "repositori": [2, 7, 53], "latest": [2, 3, 10, 84, 88, 89, 284, 313, 317, 318, 322], "wheel": [2, 313], "publish": 2, "pypi": [2, 322], "openml": [2, 53, 86], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 71, 75, 79, 84, 87, 90, 93, 106, 123, 135, 138, 139, 141, 143, 172, 196, 212, 214, 215, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 307, 309, 311, 312, 313, 314, 317, 318, 320, 323], "parent": [2, 3, 21, 26, 28, 44, 71, 103, 106, 108, 113, 114, 119, 123, 130, 133, 135, 138, 140, 141, 199, 236, 238, 255, 311, 318, 322, 323], "subclass": [2, 3, 71, 75, 87, 93, 138, 146, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 212, 213, 214, 216, 219, 236, 238, 312, 314, 318, 320], "basic": [2, 83, 307, 313, 323], "properti": [2, 3, 32, 34, 36, 39, 71, 75, 83, 87, 93, 138, 139, 163, 169, 179, 184, 192, 193, 194, 236, 318, 320], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 68, 69, 70, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 111, 113, 115, 116, 117, 119, 120, 121, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 153, 157, 158, 159, 160, 161, 162, 165, 168, 170, 171, 177, 182, 183, 185, 187, 188, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 217, 218, 222, 223, 224, 225, 226, 228, 231, 234, 235, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 270, 296, 299, 307, 309, 312, 313, 314, 316, 317, 318, 320, 322, 323], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 107, 110, 111, 117, 119, 121, 125, 127, 131, 133, 135, 137, 144, 145, 146, 150, 153, 155, 157, 162, 163, 164, 168, 170, 172, 174, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 192, 195, 198, 199, 200, 201, 203, 204, 205, 209, 210, 211, 212, 215, 216, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 278, 284, 287, 299, 307, 311, 312, 313, 314, 316, 317, 319, 320, 322, 323], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 106, 107, 108, 109, 110, 111, 117, 119, 121, 123, 125, 127, 131, 133, 135, 137, 138, 139, 141, 143, 146, 150, 153, 154, 155, 165, 168, 170, 174, 179, 180, 186, 187, 195, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 211, 212, 215, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 257, 296, 307, 313, 314, 316, 317, 318, 320, 322, 323], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 102, 105, 111, 116, 117, 119, 121, 123, 125, 127, 130, 131, 133, 135, 136, 138, 143, 144, 150, 153, 154, 155, 165, 168, 170, 172, 174, 177, 178, 181, 186, 187, 195, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 217, 222, 223, 224, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 280, 283, 296, 299, 307, 308, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 71, 72, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 156, 163, 168, 170, 172, 177, 178, 192, 198, 203, 204, 209, 210, 212, 213, 216, 217, 223, 228, 235, 237, 239, 241, 284, 289, 307, 311, 313, 316, 317, 318, 320, 322, 323], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 71, 75, 83, 86, 87, 88, 89, 90, 93, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 153, 154, 156, 158, 159, 160, 161, 164, 165, 168, 170, 171, 172, 177, 178, 179, 180, 187, 188, 189, 190, 191, 196, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 281, 285, 290, 299, 307, 308, 309, 311, 312, 313, 314, 317, 318, 322, 323], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 86, 87, 88, 89, 90, 93, 102, 105, 106, 107, 108, 110, 111, 117, 119, 123, 125, 130, 131, 133, 136, 138, 141, 143, 146, 154, 156, 157, 158, 159, 162, 164, 165, 166, 168, 170, 171, 172, 177, 178, 181, 187, 196, 198, 199, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 270, 278, 307, 308, 311, 312, 313, 314, 316, 317, 318, 319, 322, 323], "send": [2, 3, 8, 322], "receiv": [2, 3, 32, 40, 71, 75, 87, 93, 134, 138, 172, 257, 308, 311, 313, 316, 318], "spawn": [2, 3, 4, 18, 22, 79, 84, 317], "check_env_spec": [2, 3, 305, 313, 317, 318], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 75, 87, 93, 102, 106, 107, 108, 111, 113, 117, 119, 123, 125, 126, 127, 131, 133, 135, 138, 139, 141, 143, 155, 171, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 255, 269, 300, 308, 309, 310, 312, 313, 314, 318, 320, 323], "saniti": [2, 3, 7, 146, 313], "utmost": 2, "techniqu": [2, 8, 312, 320], "commonli": [2, 323], "emploi": [2, 180], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 320], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 71, 75, 87, 93, 102, 107, 110, 133, 144, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 226, 229, 249, 307, 318, 322], "offer": [2, 3, 7, 307, 312, 318, 323], "facilit": [2, 3, 7, 122, 123, 141, 143, 199, 200, 201, 307, 311, 314, 318], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 134, 209, 213, 311, 313, 317, 318, 323], "extern": [2, 3, 107, 110, 323], "consist": [2, 3, 32, 35, 38, 41, 42, 71, 75, 87, 93, 117, 156, 172, 311, 312, 313, 318, 319, 323], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212, 311, 312, 323], "manner": [2, 75, 123, 141, 307, 311, 312, 313, 316, 318, 320], "handl": [3, 21, 32, 71, 75, 87, 93, 144, 170, 172, 287, 301, 302, 311, 312, 313, 317, 320], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 71, 75, 82, 87, 88, 89, 93, 102, 109, 119, 125, 134, 139, 140, 165, 168, 170, 172, 174, 177, 178, 187, 234, 238, 246, 251, 252, 253, 257, 258, 259, 283, 287, 289, 301, 302, 307, 308, 309, 311, 312, 313, 316, 317, 318, 319, 320, 323], "dm": [3, 311, 323], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 79, 83, 84, 85, 127, 135, 141, 142, 177, 199, 207, 222, 223, 225, 226, 228, 230, 234, 238, 239, 240, 241, 243, 287, 296, 307, 308, 309, 311, 312, 314, 317, 318, 320, 323], "goal": [3, 4, 134, 311, 312, 313, 314, 317, 318], "abl": [3, 82, 88, 89, 311, 313, 314, 316, 317, 318, 320, 322], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 146, 272, 273, 274, 275, 276, 277, 306, 312, 313, 317, 320], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 71, 72, 75, 79, 87, 93, 154, 311, 313, 317, 318, 323], "simul": [3, 5, 7, 8, 90, 98, 155, 174, 307, 311, 313, 317], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 88, 89, 93, 123, 141, 146, 158, 168, 170, 191, 213, 214, 215, 278, 290, 307, 309, 311, 312, 313, 314, 317, 318, 320, 322, 323], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 71, 75, 87, 93, 198, 204, 205, 209, 210, 211, 212, 213, 236, 251, 252, 253, 254, 255, 308, 311, 312, 318, 323], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 71, 72, 75, 87, 88, 89, 91, 92, 93, 102, 105, 116, 117, 119, 121, 125, 127, 130, 135, 138, 144, 296, 299, 311, 312, 313, 314, 316, 317, 319, 320, 322, 323], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 71, 75, 83, 87, 93, 106, 109, 117, 123, 135, 138, 139, 141, 143, 155, 156, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 172, 174, 176, 177, 178, 181, 186, 187, 195, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 212, 213, 214, 215, 217, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 296, 299, 307, 308, 311, 312, 313, 314, 316, 317, 318, 319, 322], "typic": [3, 4, 8, 32, 71, 75, 87, 93, 134, 223, 236, 238, 241, 307, 308, 309, 313, 317, 318], "organis": [3, 312, 318], "arbitrari": [3, 33, 87, 93, 307, 311, 312, 318], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 71, 75, 87, 93, 102, 133, 136, 154, 251, 252, 253, 254, 255, 309, 312, 313, 317, 318, 320, 322], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 71, 75, 87, 93, 107, 110, 154, 177, 208, 251, 252, 253, 254, 255, 308, 311, 313, 314, 317, 318, 319, 320], "attribut": [3, 4, 32, 45, 71, 75, 87, 93, 123, 141, 168, 170, 213, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 311, 314, 318], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 68, 71, 73, 75, 78, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 107, 110, 111, 121, 125, 127, 131, 133, 135, 138, 153, 154, 155, 162, 165, 168, 170, 174, 186, 187, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 278, 284, 296, 307, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 71, 75, 82, 87, 88, 89, 93, 102, 124, 168, 170, 195, 199, 200, 201, 218, 307, 312, 313, 314], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 71, 75, 83, 86, 87, 90, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 146, 168, 170, 177, 178, 205, 208, 212, 215, 222, 223, 224, 225, 226, 228, 234, 235, 236, 238, 239, 240, 241, 243, 249, 291, 306, 307, 308, 309, 311, 313, 314, 317, 318, 320, 323], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 87, 93], "actual": [3, 4, 7, 17, 71, 75, 87, 93, 134, 290, 308, 311, 313, 317, 318], "just": [3, 4, 11, 71, 75, 82, 87, 88, 89, 93, 105, 154, 178, 278, 307, 309, 311, 312, 313, 314, 317, 318, 320, 322, 323], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 71, 75, 87, 93, 103, 108, 119, 153, 155, 174, 209, 213, 216, 222, 223, 224, 226, 235, 238, 239, 241, 243, 249, 251, 252, 253, 254, 296, 303, 309, 312, 313, 318, 323], "care": [3, 8, 71, 75, 87, 93, 138, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 311, 313, 317, 318, 320], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 169, 172, 178, 194, 212, 284, 311, 312, 313, 314, 318], "parametr": [3, 180, 213, 223, 234, 241, 311, 313], "hardwar": 3, "observation_spec": [3, 71, 75, 83, 87, 93, 100, 102, 103, 104, 105, 106, 107, 108, 110, 113, 115, 116, 117, 119, 121, 123, 126, 130, 133, 134, 135, 136, 137, 138, 140, 141, 155, 168, 170, 174, 291, 299, 311, 313, 316, 317, 318, 323], "compositespec": [3, 28, 49, 71, 73, 75, 83, 87, 93, 100, 107, 108, 109, 110, 111, 117, 125, 131, 133, 134, 135, 138, 150, 154, 155, 174, 198, 202, 209, 215, 216, 305, 311, 313, 317, 318, 323], "pair": [3, 32, 34, 36, 39, 52, 71, 75, 87, 93, 127, 135, 168, 199, 209, 213, 236, 251, 252, 253, 254, 255, 307, 308, 311, 312, 313, 316, 318, 323], "state_spec": [3, 71, 75, 83, 87, 93, 100, 313, 318, 323], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 71, 75, 86, 87, 93, 123, 136, 139, 141, 143, 311, 318], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 68, 71, 75, 81, 83, 87, 88, 89, 93, 100, 102, 107, 110, 117, 127, 165, 187, 189, 198, 204, 209, 210, 223, 226, 239, 241, 243, 299, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "reward_spec": [3, 71, 75, 83, 87, 93, 100, 101, 105, 106, 107, 108, 110, 128, 129, 130, 138, 140, 155, 174, 313, 317, 318, 323], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 100, 101, 105, 106, 107, 108, 110, 111, 117, 121, 125, 127, 128, 129, 130, 131, 133, 134, 138, 140, 142, 143, 144, 150, 153, 155, 168, 174, 203, 218, 222, 223, 225, 226, 228, 231, 234, 236, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 285, 303, 308, 309, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "done_spec": [3, 71, 75, 87, 93, 107, 108, 110, 138, 154, 313, 317, 318, 323], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 208, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 307, 317, 318, 319], "section": [3, 4, 312, 317], "termin": [3, 7, 32, 40, 52, 75, 88, 89, 91, 92, 94, 95, 154, 168, 170, 214, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323], "input_spec": [3, 71, 75, 83, 87, 93, 106, 107, 108, 109, 119, 121, 125, 130, 131, 133, 138, 139, 140, 142, 155, 174, 318], "full_action_spec": [3, 71, 75, 87, 93, 317], "full_state_spec": [3, 71, 75, 87, 93], "lock": [3, 26, 28, 71, 75, 87, 93, 135, 144, 318], "modifi": [3, 7, 8, 26, 28, 32, 45, 71, 75, 87, 93, 106, 113, 117, 123, 135, 138, 139, 141, 143, 203, 208, 212, 290, 296, 311, 312, 313, 317, 318], "directli": [3, 4, 8, 71, 75, 83, 87, 93, 127, 236, 303, 307, 313, 317, 318, 320], "output_spec": [3, 71, 75, 87, 93, 106, 107, 108, 111, 117, 125, 131, 133, 138, 139, 318], "full_observation_spec": [3, 71, 75, 87, 93], "full_reward_spec": [3, 71, 75, 87, 93, 317], "full_done_spec": [3, 71, 75, 87, 93, 154, 317], "importantli": [3, 209, 213], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 69, 70, 71, 74, 75, 80, 82, 83, 87, 91, 92, 93, 100, 102, 127, 133, 144, 155, 156, 157, 158, 159, 162, 165, 166, 167, 171, 172, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 195, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 217, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 269, 307, 311, 312, 313, 314, 317, 318, 320, 322, 323], "action_s": 3, "help": [3, 4, 32, 71, 75, 87, 93, 306, 308, 311, 312, 313, 314, 317], "prealloc": [3, 318], "With": [3, 82, 134, 309, 311, 312, 317, 320, 323], "necessarili": [3, 323], "instanti": [3, 21, 34, 36, 39, 79, 87, 93, 138, 178, 311, 312, 317, 318, 320, 323], "0s": [3, 135, 314], "stateless": [3, 138, 311, 318, 323], "set_se": [3, 13, 14, 16, 17, 21, 68, 71, 75, 81, 83, 87, 93, 119, 125, 136, 139, 318, 322, 323], "seed": [3, 13, 14, 16, 17, 21, 69, 71, 75, 83, 87, 88, 89, 93, 94, 95, 100, 107, 110, 139, 146, 287], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 68, 71, 72, 75, 81, 83, 87, 91, 92, 93, 94, 95, 102, 107, 110, 111, 116, 117, 121, 125, 127, 130, 131, 133, 134, 135, 144, 150, 153, 155, 168, 170, 174, 189, 218, 222, 223, 225, 226, 228, 229, 234, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 281, 283, 285, 311, 312, 314, 316, 318, 319, 320, 322, 323], "determinist": [3, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 157, 166, 182, 189, 198, 212, 213, 216, 223, 307, 311, 312, 314, 318, 323], "preced": [3, 171, 314], "without": [3, 7, 9, 32, 40, 52, 71, 75, 87, 93, 100, 107, 110, 137, 200, 201, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 255, 299, 306, 307, 311, 312, 313, 317, 318, 320, 323], "risk": [3, 124], "overlap": [3, 41], "consecut": [3, 62, 79, 170, 208, 314, 317, 323], "reproduc": [3, 102, 146, 311, 313, 317], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 71, 75, 87, 93, 109, 128, 133, 134, 136, 192, 193, 194, 216, 223, 228, 234, 236, 237, 241, 284, 311, 312, 313, 314, 317, 320], "max_step": [3, 13, 71, 75, 83, 87, 93, 94, 95, 133, 317, 322, 323], "n": [3, 6, 7, 24, 27, 32, 33, 40, 71, 75, 87, 93, 102, 109, 113, 140, 174, 208, 213, 222, 228, 236, 250, 284, 307, 309, 312, 313, 314, 317, 320, 323], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 83, 117, 165, 168, 170, 174, 186, 187, 195, 196, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 214, 215, 216, 218, 223, 225, 228, 230, 231, 232, 234, 236, 239, 241, 243, 249, 250, 251, 252, 253, 254, 283, 299, 307, 311, 313, 314, 316, 317, 318, 319], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 71, 72, 75, 87, 88, 89, 93, 100, 113, 123, 124, 127, 139, 141, 144, 146, 154, 156, 162, 172, 180, 203, 212, 213, 214, 215, 222, 223, 225, 226, 228, 234, 236, 238, 239, 240, 241, 243, 251, 275, 287, 306, 311, 312, 313, 317, 318, 320, 322, 323], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 52, 63, 71, 75, 77, 86, 87, 93, 102, 133, 141, 144, 168, 170, 210, 222, 223, 225, 226, 228, 234, 236, 238, 239, 240, 241, 243, 246, 311, 314, 320, 322], "mark": [3, 16, 71, 75, 87, 93, 168, 170], "trail": [3, 144], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 71, 72, 75, 82, 86, 87, 88, 89, 93, 99, 103, 124, 130, 135, 136, 144, 153, 166, 170, 171, 208, 224, 228, 231, 235, 236, 238, 239, 243, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 287, 307, 308, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "treat": 3, "figur": [3, 311, 313, 314, 317, 318, 323], "summar": [3, 318], "brief": [3, 313], "popul": [3, 38, 116, 135, 311, 313, 314, 318, 320], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 71, 75, 87, 93, 102, 104, 105, 107, 110, 113, 116, 119, 121, 123, 125, 127, 130, 133, 135, 143, 144, 153, 154, 168, 175, 176, 203, 204, 210, 211, 223, 241, 251, 252, 253, 254, 307, 311, 313, 314, 317, 318, 319, 320, 323], "deliveri": 3, "step_mdp": [3, 168, 170, 305, 314, 318, 322, 323], "design": [3, 13, 14, 32, 33, 71, 75, 87, 93, 102, 124, 139, 203, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 311, 312, 313, 314, 316, 317, 318, 320, 323], "metaclass": 3, "ensur": [3, 32, 35, 41, 58, 62, 71, 75, 87, 93, 102, 123, 133, 141, 144, 204, 307, 312, 313, 318, 320], "everi": [3, 8, 17, 26, 28, 32, 33, 63, 71, 75, 87, 93, 133, 134, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 287, 309, 311, 312, 313, 314, 317, 318], "flank": [3, 314], "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 71, 75, 83, 87, 88, 89, 93, 96, 102, 117, 133, 134, 138, 139, 144, 156, 175, 176, 177, 178, 202, 204, 209, 210, 213, 216, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 249, 287, 299, 309, 311, 312, 313, 314, 317, 318, 319, 320, 323], "dual": 3, "strictli": [3, 8, 32, 71, 75, 87, 93, 139, 311, 313], "refer": [3, 7, 8, 9, 21, 32, 40, 71, 75, 87, 93, 139, 144, 155, 165, 166, 174, 175, 176, 177, 182, 183, 188, 189, 205, 222, 229, 230, 231, 232, 238, 251, 256, 264, 311, 312, 313, 317, 319], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 58, 71, 75, 87, 93, 100, 101, 102, 103, 104, 107, 109, 110, 113, 115, 116, 119, 120, 123, 124, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 141, 143, 144, 153, 156, 158, 159, 160, 161, 163, 165, 167, 171, 172, 175, 176, 177, 178, 179, 180, 184, 186, 187, 192, 193, 194, 195, 212, 228, 233, 239, 242, 264, 270, 281, 283, 284, 292, 293, 296, 297, 299, 300, 301, 302, 303], "signal": [3, 17, 52, 75, 102, 133, 136, 154, 308, 311, 313, 317, 320, 323], "interpret": [3, 312], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 52, 62, 71, 75, 87, 93, 113, 119, 124, 136, 156, 168, 170, 171, 172, 175, 176, 182, 190, 196, 202, 203, 206, 213, 312, 313, 314, 317, 318, 319, 320, 322, 323], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 71, 75, 87, 93, 102, 103, 133, 135, 139, 154, 156, 172, 175, 176, 178, 208, 210, 211, 219, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 291, 303, 306, 309, 313, 314, 318, 320, 323], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 71, 75, 87, 88, 89, 93, 111, 118, 127, 133, 154, 168, 170, 194, 257, 311, 313, 314, 316, 320, 322, 323], "carri": [3, 21, 45, 71, 75, 87, 93, 135, 236, 312, 314, 317, 318, 320], "look": [3, 5, 7, 8, 32, 71, 75, 82, 87, 88, 89, 93, 123, 124, 141, 209, 213, 214, 215, 308, 313, 314, 317, 318, 319, 320, 322, 323], "assess": [3, 96, 311], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 305], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 113], "reli": [3, 222, 308, 311, 313, 318, 323], "traj_id": [3, 13, 14, 16, 23, 127, 314, 320, 322], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 71, 75, 87, 93, 135, 139, 153, 214, 215, 306, 311, 314], "context": [3, 5, 8, 32, 71, 72, 75, 86, 87, 93, 135, 140, 178, 179, 203, 247, 248, 251, 252, 253, 254, 256, 264, 283, 307, 308, 311, 312, 313, 317, 318, 319, 320], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 79, 82, 87, 88, 89, 93, 107, 110, 124, 172, 186, 213, 214, 215, 219, 251, 252, 253, 254, 307, 311, 312, 313, 316, 317, 318, 319, 320, 323], "inittrack": [3, 168, 170, 311, 314], "our": [3, 7, 8, 18, 102, 307, 311, 312, 313, 314, 316, 317, 319, 320, 322], "tutori": [3, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 71, 72, 75, 78, 87, 93, 156, 172, 178, 308, 309, 311, 312, 313, 314, 317, 318, 320], "scratch": [3, 8, 312, 318], "better": [3, 8, 9, 168, 170, 308, 313, 318], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 71, 75, 82, 87, 88, 89, 91, 92, 93, 102, 113, 117, 121, 135, 136, 140, 144, 156, 166, 167, 168, 170, 172, 179, 180, 213, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 303, 307, 311, 312, 313, 314, 318, 320, 323], "intens": [3, 8], "gym3": 3, "envpool": [3, 84, 85], "interfac": [3, 78, 86, 172, 179, 307, 311, 313, 318, 320], "simultan": [3, 20, 87, 93, 318], "often": [3, 8, 233, 287, 311, 312, 318, 320, 323], "competit": [3, 317], "advantag": [3, 8, 167, 222, 224, 235, 238, 240, 251, 252, 253, 254, 255, 256, 258, 260, 262, 264, 265, 267, 308, 309, 311, 312, 313, 314, 317, 318, 323], "scale": [3, 4, 52, 102, 117, 119, 129, 134, 137, 166, 169, 181, 188, 189, 193, 194, 199, 200, 201, 209, 213, 215, 222, 223, 234, 238, 239, 240, 241, 285, 291, 296, 303, 307, 311, 312, 313, 314, 317, 322], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 71, 75, 87, 88, 89, 93, 312, 313, 317, 318], "As": [3, 4, 71, 75, 82, 87, 88, 89, 93, 127, 213, 251, 307, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323], "inherit": [3, 173, 236, 309, 313, 317], "serialenv": [3, 71, 75, 87, 135, 305, 323], "enjoi": 3, "exact": 3, "Of": [3, 7, 306, 318, 323], "cours": [3, 4, 306, 313, 318, 323], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 71, 75, 83, 84, 87, 93, 123, 135, 139, 143, 144, 168, 170, 175, 176, 206, 208, 209, 213, 226, 228, 249, 251, 252, 253, 254, 255, 311, 312, 313, 317, 318, 319], "count": [3, 72, 133, 208, 283, 287, 290, 311, 312, 313, 314, 320, 323], "def": [3, 11, 22, 32, 71, 72, 75, 83, 87, 93, 99, 100, 107, 110, 155, 165, 174, 217, 223, 225, 228, 234, 236, 239, 241, 243, 309, 311, 312, 316, 317, 318, 322, 323], "make_env": [3, 95, 144, 292, 293, 311, 312, 323], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 71, 72, 75, 77, 87, 93, 102, 105, 106, 116, 117, 119, 121, 125, 127, 130, 135, 136, 138, 139, 144, 168, 170, 296, 299, 305, 307, 311, 312, 313, 314, 319, 320, 322, 323], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 71, 72, 75, 84, 87, 93, 102, 105, 111, 116, 117, 119, 125, 127, 130, 133, 135, 136, 138, 168, 170, 246, 260, 261, 262, 263, 265, 266, 267, 268, 307, 312, 314, 318, 320, 322, 323], "from_pixel": [3, 69, 70, 102, 296, 311, 312, 314, 319, 320, 322, 323], "9": [3, 7, 32, 35, 38, 41, 82, 88, 89, 134, 144, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 244, 249, 308, 311, 312, 313, 317, 318, 320, 321], "81": [3, 318], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 68, 71, 75, 78, 81, 83, 87, 90, 91, 92, 93, 100, 101, 102, 103, 105, 106, 108, 109, 117, 118, 119, 123, 127, 130, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 155, 156, 158, 159, 161, 162, 166, 168, 169, 170, 172, 174, 176, 177, 178, 179, 180, 181, 184, 188, 189, 192, 193, 194, 196, 198, 202, 203, 205, 206, 208, 211, 212, 215, 216, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 249, 250, 251, 252, 253, 254, 257, 258, 259, 278, 285, 299, 303, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 71, 72, 75, 87, 88, 89, 93, 105, 114, 117, 119, 121, 131, 135, 139, 140, 144, 156, 165, 168, 170, 172, 175, 176, 177, 178, 187, 198, 204, 205, 209, 210, 211, 212, 213, 216, 217, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 242, 243, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 296, 311, 312, 313, 314, 316, 318, 319, 320, 322], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 99, 102, 103, 107, 108, 109, 110, 116, 119, 125, 127, 130, 133, 135, 136, 137, 144, 150, 153, 154, 156, 162, 165, 168, 172, 175, 176, 177, 178, 181, 184, 187, 198, 199, 200, 201, 203, 204, 206, 208, 210, 212, 215, 217, 236, 296, 299, 307, 309, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "simpli": [3, 6, 34, 36, 39, 45, 111, 131, 236, 307, 308, 311, 313, 317, 323], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 177, 178, 179, 180, 186, 195, 216, 251, 252, 253, 254, 255, 257, 270, 307, 312, 320], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 119, 137, 312, 320], "d": [3, 35, 53, 54, 58, 213, 322], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 72, 87, 93, 100, 103, 107, 109, 110, 117, 119, 124, 134, 135, 137, 144, 198, 206, 209, 210, 213, 251, 252, 253, 254, 255, 274, 307, 311, 312, 313, 314, 317, 318, 320, 322, 323], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 312, 317, 318], "_reset": [3, 71, 75, 83, 87, 93, 100, 102, 107, 110, 154, 155, 174], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 107, 110, 111, 121, 125, 127, 131, 133, 135, 139, 153, 155, 165, 168, 170, 174, 186, 187, 195, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 211, 212, 215, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 291, 296, 306, 307, 312, 313, 314, 316, 317, 318, 320, 322, 323], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 68, 69, 70, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 107, 109, 110, 111, 113, 117, 118, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 158, 159, 168, 169, 170, 172, 174, 177, 178, 179, 180, 193, 194, 198, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 249, 251, 252, 253, 254, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 280, 281, 283, 284, 285, 287, 296, 303, 312, 313, 314, 316, 317, 318, 320, 322, 323], "pixel": [3, 7, 26, 102, 104, 113, 115, 119, 121, 123, 126, 137, 141, 143, 158, 182, 183, 270, 296, 307, 311, 312, 314, 319, 320, 322, 323], "500": [3, 311, 312, 318, 322, 323], "uint8": [3, 47, 121, 137, 312, 320, 322, 323], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 93, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 115, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 222, 223, 225, 226, 228, 229, 230, 234, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 296, 299, 301, 302, 303, 307, 309, 311, 312, 313, 314, 317, 318, 320, 322, 323], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 107, 110, 111, 121, 125, 127, 131, 133, 135, 144, 153, 155, 165, 168, 170, 174, 186, 187, 195, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 211, 212, 215, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 296, 307, 313, 314, 316, 317, 318, 320, 322, 323], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 93, 107, 110, 144, 154, 168, 170, 208, 209, 213, 311, 312, 316, 317, 323], "launch": [3, 13, 14, 18, 19, 20, 22, 87, 93], "start": [3, 4, 5, 13, 21, 45, 72, 82, 153, 282, 311, 312, 317, 318, 320, 323], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 71, 75, 87, 93, 135, 144, 214, 215, 313, 314, 317, 318, 323], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 71, 75, 87, 93, 127, 139, 202, 208, 285, 309, 312, 313, 314, 318, 320, 323], "great": [3, 7, 8, 322], "speedup": [3, 8, 323], "precis": [3, 107, 110, 153, 311, 313], "anoth": [3, 8, 34, 36, 39, 71, 75, 79, 87, 93, 107, 108, 110, 135, 138, 172, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 307, 308, 311, 313, 314, 316, 317, 318, 323], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 71, 75, 79, 87, 93, 124, 323], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 71, 72, 75, 84, 87, 93, 102, 107, 110, 123, 127, 136, 143, 144, 153, 204, 208, 212, 242, 251, 252, 253, 254, 255, 257, 287, 289, 303, 306, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 96, 102, 112, 118, 127, 136, 139, 146, 202, 206, 208, 311, 313, 317, 319, 320], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 78, 99, 102, 105, 107, 110, 117, 125, 144, 146, 150, 178, 181, 196, 251, 252, 253, 254, 278, 286, 316, 320, 323], "mismatch": [3, 312], "mostli": [3, 17, 308, 320, 323], "purpos": [3, 7, 102, 299, 311, 313, 314, 317, 319, 323], "want": [3, 6, 7, 8, 119, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 307, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323], "subprocess": [3, 13, 14, 72, 87, 93], "addit": [3, 4, 32, 52, 71, 75, 84, 87, 93, 106, 123, 135, 138, 139, 141, 143, 202, 203, 212, 221, 236, 251, 308, 311, 312, 317, 320], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 84, 85, 320], "multithreadedenv": [3, 305], "underneath": 3, "higher": [3, 4, 105, 216, 311, 312, 313, 320, 323], "restrict": [3, 312, 319, 320, 323], "flexibl": [3, 9, 84, 244, 308, 309, 320, 323], "cover": [3, 306, 313, 318, 322], "popular": [3, 307, 314, 317], "atari": [3, 4, 102, 323], "classic": [3, 83, 89, 312], "benchmark_batched_env": 3, "py": [3, 99, 186, 195, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323], "pipelin": [3, 7, 307, 313], "seamlessli": [3, 318], "modif": [3, 5, 26, 28, 32, 71, 75, 87, 93, 113, 154, 236, 313, 318], "infrastructur": [3, 317], "view": [3, 8, 27, 32, 33, 71, 75, 87, 93, 100, 165, 172, 318, 320, 322, 323], "core": [3, 8, 296, 309, 314, 322], "decis": [3, 157, 185, 203, 227, 237, 314, 317, 320, 323], "act": [3, 4, 88, 89, 178, 223, 225, 234, 239, 241, 243, 314, 317], "world": [3, 5, 83, 218, 231, 317, 318, 323], "paradigm": [3, 17, 317], "decpodp": 3, "markov": [3, 323], "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 71, 75, 87, 93, 109, 118, 128, 139, 146, 156, 168, 170, 172, 177, 178, 205, 209, 213, 222, 224, 225, 228, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 246, 251, 283, 287, 308, 311, 312, 314, 317, 318, 323], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 71, 75, 83, 87, 93, 134, 139, 144, 236, 290, 307, 309, 311, 312, 313, 314, 317, 318, 320, 323], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 79, 87, 88, 89, 105, 130, 166, 177, 178, 206, 287, 301, 302, 311, 312, 313, 314, 317, 320, 322], "accommod": [3, 13, 14, 16, 17], "thank": [3, 311], "carrier": [3, 313, 314, 320], "particular": [3, 32, 45, 52, 71, 75, 87, 93, 139, 308, 309, 312, 314, 316, 317, 320], "thu": [3, 235, 317], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 96, 307, 312, 313, 317], "hand": [3, 7, 21, 317, 318], "kept": [3, 13, 14, 16, 17, 62, 87, 93, 109, 131, 138, 146, 153, 169, 193, 194], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 71, 75, 87, 93, 107, 108, 110, 135, 137, 139, 146, 170, 172, 178, 209, 212, 213, 215, 216, 221, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 251, 252, 253, 254, 278, 289, 301, 302, 303, 307, 309, 311, 312, 313, 314, 317, 318, 320, 323], "let": [3, 6, 7, 32, 43, 71, 75, 87, 88, 89, 93, 102, 168, 170, 177, 178, 204, 283, 308, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "understand": [3, 8, 311, 312, 317], "go": [3, 7, 82, 124, 127, 203, 257, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "vma": [3, 94, 95, 317], "robot": [3, 5, 7, 123, 141, 143, 317], "what": [3, 8, 35, 44, 71, 75, 87, 93, 135, 153, 210, 306, 307, 308, 312, 313, 314, 317, 318, 319, 320, 322, 323], "vmasenv": [3, 305, 317], "balanc": [3, 311, 312], "num_env": [3, 21, 78, 94, 95, 317], "n_agent": [3, 94, 95, 177, 178, 186, 195, 249, 317], "5": [3, 24, 26, 28, 35, 38, 41, 42, 72, 81, 84, 91, 92, 94, 95, 127, 133, 155, 156, 165, 166, 169, 171, 172, 174, 177, 178, 182, 187, 193, 194, 203, 204, 210, 216, 235, 238, 240, 243, 307, 311, 312, 317, 318, 320, 321, 322, 323], "td": [3, 15, 26, 67, 68, 69, 70, 74, 76, 80, 81, 100, 103, 107, 108, 109, 110, 116, 117, 119, 127, 130, 134, 135, 137, 139, 144, 153, 155, 165, 168, 170, 173, 174, 186, 187, 195, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 212, 215, 217, 249, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 278, 286, 296, 307, 308, 311, 314, 317, 318, 322, 323], "info": [3, 35, 38, 41, 42, 52, 53, 71, 75, 87, 88, 89, 90, 91, 92, 93, 94, 95, 141, 145, 317, 320], "ground_rew": 3, "pos_rew": [3, 317], "16": [3, 32, 71, 75, 87, 93, 102, 311, 314, 317, 318, 320], "root": [3, 26, 28, 102, 136, 153, 169, 193, 194, 314, 317, 318, 320, 323], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 113, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 312, 318], "vari": [3, 88, 89, 124, 317], "creation": [3, 87, 93, 311, 323], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 71, 75, 87, 93, 123, 127, 130, 139, 143, 181, 187, 205, 209, 211, 212, 213, 251, 252, 253, 254, 278, 290, 311, 312, 313, 314, 317, 318, 320, 322, 323], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 72, 127, 137, 144, 235, 243, 308, 309, 311, 313, 314, 317, 318, 320, 322], "append": [3, 8, 35, 38, 41, 42, 52, 53, 72, 105, 127, 135, 168, 170, 204, 210, 311, 312, 313, 314, 317, 318, 319, 320, 322], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 71, 75, 87, 93, 100, 154, 226, 228, 249, 305, 313, 317, 323], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 71, 75, 79, 82, 87, 88, 89, 91, 92, 93, 99, 144, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "simpl": [3, 9, 32, 33, 71, 75, 87, 93, 158, 213, 226, 236, 240, 251, 307, 308, 311, 312, 313, 317, 323], "composit": [3, 26, 28, 71, 75, 87, 93, 313, 318], "prefix": [3, 23, 32, 34, 36, 39, 45, 71, 75, 87, 93, 139, 236, 269, 314, 323], "exactli": [3, 32, 71, 75, 77, 87, 93, 139, 311, 314, 317], "action_kei": [3, 15, 71, 75, 87, 93, 100, 109, 153, 155, 173, 174, 202, 206, 208, 317], "reward_kei": [3, 71, 75, 87, 93, 153, 155, 174, 281, 285, 317], "done_kei": [3, 71, 75, 87, 93, 127, 133, 153, 317], "automat": [3, 5, 55, 56, 65, 71, 75, 87, 88, 89, 93, 107, 110, 119, 198, 209, 307, 311, 313, 317, 318, 320, 322], "right": [3, 6, 7, 40, 171, 312, 313, 317, 318, 323], "sure": [3, 4, 7, 53, 63, 79, 127, 204, 303, 307, 311, 313, 314, 317, 318, 320, 322, 323], "set_kei": [3, 222, 223, 224, 226, 228, 229, 234, 235, 236, 238, 239, 240, 241, 249, 255, 317], "awai": [3, 313, 317], "eas": [3, 317], "access": [3, 7, 8, 32, 35, 53, 71, 75, 87, 93, 123, 141, 303, 306, 311, 317, 318, 320], "leaf": [3, 26, 28, 71, 75, 87, 93, 133, 213], "abov": [3, 7, 32, 71, 75, 87, 93, 169, 193, 194, 221, 308, 309, 311, 313, 317, 318, 323], "would": [3, 32, 40, 71, 75, 87, 93, 168, 170, 172, 177, 309, 312, 313, 314, 318, 320, 323], "full": [3, 71, 75, 87, 93, 205, 278, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "raw": [3, 4, 40, 169, 193, 194, 312, 318], "logic": 3, "torchvis": [3, 123, 143, 322, 323], "transformedenv": [3, 13, 71, 72, 75, 87, 93, 100, 102, 105, 106, 107, 110, 111, 113, 116, 117, 118, 119, 121, 125, 127, 130, 131, 133, 135, 136, 138, 144, 168, 170, 296, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "primit": [3, 4, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243], "built": [3, 5, 7, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 244, 249, 297, 299, 300, 303, 311, 312, 313, 314, 320, 323], "base_env": [3, 71, 75, 87, 93, 100, 105, 107, 109, 110, 117, 121, 133, 135, 136, 311, 312, 313, 319, 322, 323], "totensorimag": [3, 102, 312, 314, 320, 322, 323], "in_kei": [3, 13, 14, 16, 17, 21, 83, 101, 102, 103, 104, 105, 107, 109, 110, 113, 115, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 141, 143, 144, 155, 164, 168, 170, 174, 186, 195, 196, 198, 199, 200, 201, 203, 204, 209, 210, 212, 213, 215, 216, 217, 222, 223, 224, 225, 226, 228, 234, 235, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 269, 270, 296, 299, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "resiz": [3, 102, 312, 314, 320, 323], "64": [3, 102, 158, 159, 167, 168, 170, 178, 186, 249, 311, 312, 313, 314, 316, 318, 320, 322, 323], "now": [3, 7, 35, 102, 178, 311, 312, 313, 314, 316, 317, 319, 320, 323], "appar": [3, 280], "bring": [3, 313, 323], "signific": [3, 5, 8, 313, 323], "kind": [3, 38, 44, 153, 320], "consult": 3, "interest": [3, 209, 213, 307, 312, 313, 317, 318, 323], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 83, 101, 102, 103, 104, 105, 107, 110, 113, 115, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 141, 143, 144, 155, 164, 165, 168, 170, 174, 186, 187, 195, 196, 198, 199, 200, 201, 203, 205, 209, 210, 211, 212, 213, 215, 216, 217, 222, 223, 224, 228, 234, 235, 238, 239, 240, 241, 249, 251, 252, 253, 254, 270, 283, 299, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "easi": [3, 5, 53, 202, 206, 208, 307, 308, 311, 312, 313, 317, 319, 320, 323], "graph": [3, 4, 8, 247, 248, 311, 318], "inv": [3, 105, 109, 121, 127, 318], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 87, 93, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 144, 193, 204, 251, 282, 309, 311, 312, 313, 318, 322, 323], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 107, 110, 121, 139, 198, 204, 212, 214, 215, 217, 222, 223, 225, 228, 234, 238, 239, 240, 241, 243, 312, 317], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 106, 109, 156, 215, 323], "taken": [3, 71, 75, 87, 93, 175, 176, 308, 311, 313, 314, 317, 318], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 102, 107, 110, 119, 127, 220, 234, 318], "in_keys_inv": [3, 105, 107, 110, 119, 120, 121, 125, 127, 138, 311, 316, 318, 323], "append_transform": [3, 35, 38, 41, 42, 52, 53, 123, 135, 141, 311, 314, 318, 322, 323], "doubletofloat": [3, 296, 311, 313, 316], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 107, 110, 111, 119, 121, 125, 127, 131, 133, 135, 137, 150, 153, 155, 165, 168, 170, 174, 186, 187, 195, 198, 199, 200, 201, 203, 204, 208, 209, 210, 211, 212, 215, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 296, 307, 313, 314, 316, 317, 318, 320, 322, 323], "float64": [3, 32, 71, 75, 87, 93, 106, 107, 110, 123, 135, 138, 139, 141, 143, 212, 316, 323], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 107, 110, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 309, 311, 313, 320], "manipul": [3, 4, 8, 123, 141], "keep": [3, 4, 7, 8, 14, 42, 62, 119, 123, 143, 144, 153, 208, 280, 287, 311, 312, 313, 314, 317, 318, 320, 322, 323], "mind": [3, 317], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 109, 153, 206, 307, 320], "unexpect": [3, 32, 71, 75, 87, 93, 139, 323], "behviour": 3, "fortun": [3, 314], "eras": [3, 71, 75, 87, 93], "ident": [3, 13, 14, 16, 32, 87, 93, 177, 178, 251, 252, 253, 254, 301, 302, 312, 317], "alreadi": [3, 8, 11, 32, 45, 71, 75, 87, 93, 135, 154, 213, 251, 252, 253, 254, 311, 313, 317], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 71, 72, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 144, 154, 203, 212, 284, 289, 290, 312, 313, 317, 318, 320], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 71, 75, 87, 93, 106, 107, 108, 110, 111, 117, 125, 131, 133, 138, 139, 144, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 308, 311, 313, 314, 317, 318, 319, 320, 323], "happen": [3, 71, 75, 87, 93, 202, 312, 319, 323], "catfram": [3, 312], "hold": [3, 247, 248, 318, 320], "notic": [3, 102, 313, 318], "parenthood": 3, "reason": [3, 4, 8, 32, 71, 75, 87, 88, 89, 93, 123, 141, 170, 308, 311, 312, 313, 318, 320], "henc": [3, 35, 124, 154, 177, 307, 311, 313, 317, 318], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 318], "discret": [3, 24, 27, 30, 31, 33, 47, 71, 75, 87, 88, 89, 93, 109, 184, 187, 228, 229, 307, 312, 313, 317, 323], "might": [3, 37, 134, 274, 306, 311, 323], "throughout": [3, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 313, 323], "action_mask": [3, 88, 89, 91, 92, 100], "unavail": [3, 88, 89], "probabl": [3, 4, 8, 40, 163, 165, 168, 170, 172, 175, 176, 184, 194, 206, 209, 213, 307, 312, 322], "categor": [3, 27, 31, 33, 88, 89, 100, 165, 184, 187, 204, 205, 210, 211, 226, 228, 249, 314], "probabilistictensordictmodul": [3, 117, 213, 214, 322], "tensordictsequenti": [3, 168, 170, 204, 206, 214, 307, 311, 314, 316, 319, 322], "maskedcategor": [3, 176, 305], "linear": [3, 13, 14, 16, 17, 21, 32, 71, 75, 83, 87, 93, 106, 117, 123, 135, 138, 139, 141, 143, 155, 156, 165, 172, 174, 177, 178, 179, 180, 181, 187, 188, 189, 198, 199, 200, 201, 206, 207, 208, 209, 210, 212, 215, 217, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 299, 307, 312, 316, 319, 322], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 175, 176, 184, 205, 228, 307], "dist": [3, 10, 175, 176, 184], "distribution_class": [3, 117, 199, 200, 201, 203, 209, 213, 215, 222, 223, 228, 234, 238, 239, 240, 241, 307, 311, 313, 317, 322], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 71, 75, 87, 88, 89, 93, 146, 168, 170, 196, 199, 200, 201, 202, 208, 210, 218, 249, 307, 311, 312, 313, 314, 317, 323], "actionmask": 3, "updat": [3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 71, 75, 83, 87, 88, 89, 93, 100, 107, 109, 110, 133, 134, 139, 142, 144, 154, 155, 168, 170, 174, 202, 206, 208, 209, 210, 211, 212, 213, 222, 223, 225, 226, 228, 229, 230, 233, 234, 236, 238, 239, 240, 241, 242, 243, 249, 251, 252, 253, 254, 255, 283, 287, 289, 292, 293, 298, 299, 309, 312, 313, 314, 317, 318, 320, 322, 323], "know": [3, 4, 9, 35, 38, 41, 42, 202, 239, 283, 311, 312, 313, 314, 317, 320], "your_base_env": 3, "mask_kei": [3, 100, 124], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 71, 75, 87, 93, 102, 117, 168, 170, 179, 207, 222, 282, 313, 314, 317, 318, 320, 322], "enviorn": [3, 88, 89, 317], "itself": [3, 32, 71, 75, 87, 93, 97, 236, 313], "log": [3, 4, 8, 40, 163, 164, 165, 175, 176, 184, 194, 204, 205, 209, 213, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 280, 281, 283, 287, 299, 307, 308, 309, 311, 312, 313, 317, 318, 322], "mission": 3, "irrespect": [3, 212, 213], "dmcontrol": [3, 311], "jumanji": [3, 80, 81], "natur": [3, 311, 314], "special": [3, 307, 311, 314, 323], "statu": 3, "framework": [3, 4, 9, 22, 83, 322, 323], "Its": [3, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 144, 212, 255], "success": [3, 102, 138, 206, 312, 318, 320, 322], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 71, 75, 79, 87, 93, 117, 133, 138, 202, 208, 311, 312, 313, 314, 316, 317, 318, 320, 323], "foundat": [3, 5, 88, 89, 313, 317], "inspir": [3, 318], "howev": [3, 5, 7, 32, 71, 75, 87, 93, 102, 130, 134, 139, 307, 311, 312, 313, 314, 320, 323], "gone": [3, 4, 5], "sometim": [3, 314, 323], "hard": [3, 7, 233, 312, 323], "adopt": [3, 5, 311, 323], "prefer": [3, 17, 20, 35, 38, 41, 42, 124, 131, 238, 284, 307, 313, 317, 320], "moreov": 3, "maintain": [3, 5, 9, 318], "both": [3, 7, 32, 71, 72, 75, 87, 88, 89, 93, 102, 125, 139, 154, 156, 168, 170, 172, 177, 178, 199, 200, 201, 205, 211, 222, 224, 225, 228, 234, 235, 236, 238, 239, 240, 241, 243, 283, 307, 311, 313, 317, 318, 319, 320, 323], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 312, 313, 314, 317, 318, 320, 323], "decor": [3, 8, 11, 99, 236, 251, 252, 253, 254], "set_gym_backend": [3, 97, 305], "relev": [3, 40, 251, 252, 253, 254, 255, 318], "gym_backend": [3, 99, 305], "env1": [3, 316], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 71, 75, 87, 93, 99, 123, 143, 174, 287, 309, 312], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 99], "__init__": [3, 7, 83, 99, 100, 107, 110, 155, 165, 174, 217, 223, 225, 228, 234, 239, 241, 243, 309, 318, 319, 323], "env2": [3, 316], "_env": [3, 6, 323], "classic_control": 3, "pendulumenv": [3, 318], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 313], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 77, 84, 87, 93, 102, 124, 134, 135, 136, 138, 139, 147, 148, 153, 166, 171, 189, 208, 229, 273, 309, 311, 312, 313, 314, 317, 318, 322, 323], "tell": [3, 4, 7, 88, 89, 311, 314, 317], "mo_gymnasium": [3, 97], "handi": 3, "side": [3, 4, 323], "v0": [3, 74, 75, 76, 80, 81, 106, 139, 144, 299], "26": [3, 311, 313, 318, 320], "fun": [3, 11, 99, 313, 317], "reveal": 4, "bug": [4, 322], "curv": 4, "won": [4, 32, 71, 72, 75, 87, 93, 123, 143, 287, 303, 312, 313], "exploit": 4, "video": [4, 9, 270, 283, 303, 317], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 71, 75, 79, 87, 93, 107, 110, 124, 130, 210, 312, 313, 314, 317, 318], "cv": 4, "flip": 4, "imag": [4, 7, 69, 104, 123, 137, 143, 172, 311, 312, 317, 319, 323], "correspondingli": 4, "prescript": 4, "tune": [4, 117, 317, 319], "coeffici": [4, 40, 117, 317], "bonu": [4, 222, 224, 235, 238], "beta": [4, 35, 41, 58, 234, 235, 311, 312, 320, 322], "altern": [4, 27, 84, 162, 175, 176, 177, 221, 236, 311, 313, 317], "reduc": [4, 6, 27, 134, 312, 313], "downstream": [4, 311], "formul": [4, 317], "ob": [4, 8, 26, 28, 100, 107, 108, 110, 119, 137, 150, 153, 177, 178, 210, 217, 223, 225, 228, 234, 239, 241, 243, 251, 252, 253, 254, 312, 316, 318, 322, 323], "rate": [4, 144, 250, 312, 313, 317], "gradient": [4, 32, 71, 75, 87, 93, 139, 169, 176, 180, 184, 193, 194, 222, 224, 225, 228, 234, 235, 236, 238, 239, 240, 241, 243, 250, 251, 252, 253, 254, 287, 311, 313, 317, 318], "norm": [4, 8, 287, 311, 312, 313, 317, 318], "easier": [4, 307, 311], "behavior": [4, 32, 71, 75, 87, 93, 139, 234, 313, 317], "local": [4, 7, 10, 16, 21, 32, 71, 75, 87, 93, 139, 177, 178, 186, 195, 249, 275, 317], "optima": 4, "sens": [4, 318], "product": [4, 9, 301, 302], "sum": [4, 21, 31, 33, 130, 175, 176, 195, 231, 250, 257, 308, 311, 312, 313, 314, 317, 318, 323], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 130, 144, 208, 275, 280, 312, 314, 317, 318, 320], "stat": [4, 119, 291, 303, 312, 313], "w": [4, 102, 104, 126, 137, 208, 270, 312, 314, 320], "r": [4, 32, 100, 105, 119, 213, 221, 250, 307, 312, 318, 323], "yield": [4, 16, 21, 32, 71, 75, 87, 93, 236, 311], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 34, 36, 39, 71, 75, 87, 93, 139, 225, 226, 313, 317, 320], "futur": [4, 32, 71, 75, 87, 93, 123, 139, 143, 172, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 306, 322], "past": [4, 312, 320], "spars": [4, 314], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 71, 75, 87, 93, 130, 139, 179, 180, 208, 222, 224, 226, 229, 235, 238, 249, 312, 314, 320, 323], "intermedi": [4, 168, 170, 205, 311, 319], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 311], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 71, 75, 87, 93, 172, 313, 317], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 71, 75, 87, 93, 102, 103, 107, 109, 110, 119, 127, 150, 153, 155, 168, 170, 171, 175, 176, 178, 186, 195, 206, 208, 211, 219, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 257, 314, 322], "subtask": 4, "hierarch": [4, 322], "individu": [4, 18, 19, 20, 21, 32, 45, 71, 75, 87, 93, 311, 317], "select": [4, 15, 35, 38, 41, 42, 52, 53, 88, 89, 100, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 155, 168, 170, 204, 210, 286, 311, 320], "fall": [4, 52], "explicit": [4, 11, 45, 171, 320], "mechan": [4, 32, 71, 75, 87, 93, 139, 312, 318], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 71, 75, 87, 93, 234, 313, 317], "addition": 4, "timestep": [4, 40, 52, 127, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 317], "realli": 4, "larg": [4, 27, 107, 110, 141, 312, 313, 317, 320], "target": [4, 8, 21, 32, 71, 72, 75, 87, 93, 134, 138, 212, 213, 222, 223, 224, 225, 226, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 254, 255, 290, 298, 299, 308, 309, 314, 318], "huge": [4, 178, 314], "std": [4, 119, 144, 181, 185, 202, 311, 323], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 314, 315, 316, 319, 320, 321], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 71, 75, 87, 93, 119, 123, 135, 138, 139, 141, 145, 155, 174, 179, 180, 202, 206, 208, 222, 223, 225, 226, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 243, 249, 296, 303, 312, 314, 318, 323], "estim": [4, 117, 199, 200, 201, 222, 223, 224, 225, 226, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 308, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "encount": [4, 306, 312, 318], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 88, 89, 311, 313, 317, 323], "bonus": 4, "denser": 4, "prior": [4, 189, 231, 317], "freshli": 4, "proper": [4, 6, 7, 251, 252, 253, 254, 312, 313, 317, 320], "doesn": [4, 11, 84, 107, 110], "drop": [4, 62, 153], "meant": [4, 83], "encourag": [4, 311, 312, 320], "measur": [4, 313], "novelti": 4, "revisit": 4, "previous": [4, 313, 323], "diminish": 4, "decreas": 4, "ideal": [4, 119, 318], "down": [4, 13, 14, 16, 17, 314], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 312, 313, 314, 317, 318, 322, 323], "distil": 4, "nois": [4, 145, 180, 197, 208, 239, 243, 283, 303, 311], "exploratori": [4, 222, 224, 235, 238], "could": [4, 6, 312, 313, 317, 319, 323], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 223, 225, 226, 228, 229, 234, 239, 241, 243, 249, 309, 311, 312, 320], "schedul": [4, 7, 40, 283, 313, 318], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 123, 143, 223, 225, 228, 239, 241, 243, 311, 312, 317, 320, 323], "divers": [4, 87, 93], "bootstrap": [4, 229, 252, 258, 259, 311, 314], "noisi": [4, 179, 180, 197, 307], "unstabl": [4, 169, 193, 194], "inher": 4, "stochast": [4, 117, 166, 180, 182, 189, 223, 227, 228, 234, 237, 239, 241, 307, 313, 317], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 168, 170, 174, 199, 200, 201, 236, 239, 309, 312], "pomdp": [4, 320], "previou": [4, 10, 32, 40, 41, 135, 154, 189, 203, 313, 314, 318, 323], "loos": [4, 307, 312, 313], "nonexist": 4, "architectur": [4, 162, 317], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 101, 102, 103, 104, 107, 109, 110, 113, 115, 119, 120, 124, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 144, 156, 163, 165, 172, 175, 176, 177, 178, 184, 187, 191, 203, 214, 215, 227, 269, 270, 282, 283, 284, 286, 287, 296, 307, 311, 313, 314, 316, 317, 323], "rather": [4, 125, 311, 312, 313, 317], "lstm": [4, 170, 171, 181], "explicitli": [4, 312, 314, 317, 320], "rel": [4, 135, 163, 192, 311, 312, 317, 320], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 102, 312, 313, 320, 322, 323], "compens": 4, "descent": [4, 180], "1000": [4, 38, 71, 75, 87, 93, 102, 144, 206, 208, 209, 213, 233, 311, 312, 313, 314, 319, 320], "minimum": [4, 128, 166, 181, 192, 193, 194, 216, 219, 221, 223, 228, 236, 237, 241, 278, 311, 313, 317], "manual": [4, 18, 20, 21, 311, 314, 320], "deviat": [4, 119, 144, 155, 166, 174, 179, 180, 202, 238, 243, 311, 317], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "stabil": [4, 114], "stage": [4, 311, 318], "never": 4, "prevent": [4, 26, 28, 169, 193, 194, 235, 238, 285, 320], "solv": [4, 9, 10, 306, 311, 312, 313, 317, 318, 320], "entir": [4, 177, 313, 318, 320], "submit": [4, 306, 322], "suffici": [4, 311], "recommend": [4, 7, 79, 317], "system": [4, 5, 313, 317, 318], "adequ": [4, 146, 313, 317], "infeas": 4, "allevi": [4, 307], "prune": 4, "develop": [4, 7, 79, 311, 322], "fire": [4, 32, 71, 75, 87, 93], "certain": [4, 18, 20, 21, 32, 45, 71, 75, 87, 93, 99, 114, 133, 139, 206, 235, 307, 311, 312, 313, 317, 323], "illeg": 4, "move": [4, 21, 32, 71, 75, 87, 93, 106, 108, 123, 135, 138, 139, 141, 143, 144, 153, 172, 212, 285, 311, 312, 314, 322, 323], "chess": 4, "combin": [4, 138, 312, 320], "grasp": 4, "releas": [4, 7, 10, 32, 71, 75, 87, 93, 139, 322], "top": [4, 155, 174], "p": [4, 72, 91, 92], "wherein": 4, "cumul": [4, 130, 134, 155, 257, 313], "q": [4, 9, 71, 75, 87, 93, 158, 159, 160, 161, 164, 165, 167, 186, 187, 195, 201, 205, 210, 211, 223, 225, 226, 228, 229, 233, 234, 239, 241, 243, 249, 296, 305, 311], "flow": [4, 311, 313, 317, 318, 320], "reparameter": [4, 163, 176, 184], "soft": [4, 233, 241, 242], "critic": [4, 8, 199, 207, 222, 224, 225, 228, 234, 235, 238, 239, 240, 241, 243, 311, 313], "clip": [4, 40, 105, 128, 224, 243, 287, 313, 317, 318], "oppos": [4, 45], "incorrect": 4, "thought": [4, 71, 75, 87, 93], "bound": [4, 17, 21, 25, 26, 32, 71, 75, 87, 93, 105, 118, 144, 188, 189, 198, 204, 205, 208, 209, 210, 211, 212, 213, 216, 243, 307, 311, 312, 313, 323], "region": 4, "squash": [4, 314, 322], "tanh": [4, 156, 169, 172, 178, 192, 193, 194, 216, 313, 317, 318, 319, 322], "correct": [4, 117, 134, 290, 313, 314], "prob": [4, 175, 176, 184, 313, 317], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 79, 108, 109, 117, 123, 139, 143, 209, 212, 213, 233, 236, 238, 296, 311, 316, 318, 323], "real": [5, 213, 308, 314, 318], "histor": 5, "wa": [5, 7, 71, 75, 87, 93, 139, 154, 233, 242, 257, 308, 312, 313, 316, 320, 322], "ceas": 5, "fork": 5, "farama": [5, 88, 89, 313, 318], "detail": [5, 6, 7, 32, 71, 75, 87, 88, 89, 93, 137, 139, 165, 205, 222, 229, 238, 306, 312, 316, 320], "usag": [5, 7, 52, 102, 168, 170, 223, 234, 241, 244, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "known": [5, 7, 8, 258, 259, 311, 312], "bc": [5, 322], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 71, 75, 87, 93, 102, 127, 144, 312, 320, 322], "face": [5, 8, 9, 323], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 146, 198, 204, 205, 209, 210, 211, 212, 213, 313, 317], "13": [5, 10, 11, 90, 311, 313, 314, 318, 320], "construct": [5, 32, 35, 38, 41, 42, 71, 75, 87, 88, 93, 107, 110, 146, 168, 170, 189, 213, 287, 307, 312, 313, 314, 318, 320, 323], "best": [5, 9, 79, 168, 170, 317, 320, 322], "gymwrapp": [5, 71, 75, 87, 93, 111, 131, 133, 305, 313, 322], "feel": [5, 306, 322], "free": [5, 7, 107, 110, 222, 231, 238, 309, 313, 317, 322], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 109, 311, 312, 313, 314, 317, 320], "prepar": [6, 313], "conda": [6, 7, 306], "assum": [6, 26, 33, 40, 41, 42, 52, 75, 87, 93, 104, 113, 123, 124, 130, 135, 141, 143, 150, 168, 170, 171, 196, 216, 226, 229, 241, 249, 260, 261, 262, 263, 265, 266, 267, 268, 270, 311, 313, 314, 316, 318], "7": [6, 10, 27, 33, 35, 38, 41, 155, 156, 171, 172, 174, 177, 257, 311, 317, 318, 320, 321, 322], "cmake": 6, "14": [6, 11, 119, 311, 314, 317, 318, 320, 321], "activ": [6, 7, 9, 156, 162, 166, 172, 177, 178, 224, 235, 238, 307, 322], "sim": 6, "bullet": 6, "physic": [6, 7, 90, 309, 311, 317, 318], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 306], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 314], "y": [6, 7, 86, 171, 177, 196, 311, 313, 317], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 71, 75, 87, 93, 132, 236, 317, 323], "command": [6, 7, 10, 313, 317, 318, 323], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 305], "_has_habitat": 6, "available_env": [6, 67, 68, 69, 70, 71, 74, 75, 76, 80, 81, 87, 91, 92, 93, 323], "startswith": [6, 308, 311], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 70, 87, 93, 99, 303, 309, 311, 320], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 72, 236, 311], "env_nam": [6, 67, 69, 74, 80, 84, 90, 311, 313, 323], "llvmlite": 6, "config": [6, 7, 123, 143, 157, 162, 185, 291, 292, 293, 296, 297, 300], "var": [6, 7, 32, 71, 75, 87, 93, 139, 236], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 68, 71, 75, 87, 93, 156, 158, 159, 167, 172, 199, 200, 201, 209, 212, 215, 234, 311, 312, 314, 317, 318, 320, 321, 322], "bind": 6, "deactiv": [6, 7, 204], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 71, 75, 87, 93, 139, 236, 320], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 312], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 316, 318], "joint": [7, 312], "dynam": [7, 234, 313, 318], "contact": [7, 37], "engin": [7, 90, 318], "biomechan": 7, "graphic": 7, "anim": [7, 317], "area": 7, "demand": [7, 323], "fast": [7, 9, 68, 125, 239, 311, 312, 313], "accur": [7, 52, 312, 318, 320], "articul": 7, "recent": [7, 11, 312, 319, 323], "acquir": [7, 313], "deepmind": [7, 8, 9, 69, 70, 313], "whomev": 7, "licenc": 7, "incorpor": [7, 202, 206, 208, 314, 318], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 93, 118, 138, 270, 307, 308, 311, 312, 313, 317, 320, 323], "legaci": 7, "pro": [7, 306], "tip": [7, 306], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 323], "sudo": [7, 306], "enabl": [7, 8, 52, 55, 56, 65, 168, 170, 208, 283, 313, 317, 318, 320], "apt": [7, 317], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 312, 314], "fact": [7, 8, 311, 313, 317, 318, 319, 320, 323], "workflow": [7, 199, 200, 201], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 71, 75, 87, 93, 123, 141, 143, 314, 323], "binari": [7, 24, 27, 33, 101, 165, 187, 204, 205, 210, 211, 226, 228, 249], "setup": [7, 79], "mkdir": 7, "cd": 7, "tag": [7, 270, 275, 303], "earlier": [7, 311, 313, 314, 317, 320], "roboti": 7, "download": [7, 10, 52, 79, 123, 143, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323], "html": [7, 84], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 87, 93], "obtain": [7, 40, 71, 75, 87, 93, 123, 134, 143, 155, 186, 284, 311, 313, 317], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54], "bin": [7, 165, 205, 307], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 161, 209, 213, 311, 313, 320], "nvidia": [7, 79], "older": [7, 11], "hack": [7, 311], "line": [7, 32, 71, 75, 87, 93, 312, 317, 319], "adatp": 7, "script": [7, 146, 296, 299, 303, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "unnot": [7, 124], "until": [7, 21, 136, 138, 313, 314, 317], "complet": [7, 9, 62, 75, 102, 133, 306, 308, 311, 313, 316], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 312, 320], "troubleshoot": 7, "gl": 7, "h": [7, 102, 104, 126, 137, 168, 170, 174, 270, 312, 314, 320], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 72, 83, 88, 89, 91, 92, 94, 95, 100, 102, 134, 136, 137, 155, 157, 162, 171, 174, 185, 196, 206, 208, 216, 223, 226, 228, 238, 239, 240, 243, 249, 251, 252, 253, 254, 257, 278, 309, 311, 312, 313, 314, 317, 318, 320, 322, 323], "fatal": 7, "No": 7, "directori": [7, 45, 55, 275, 309], "devel": 7, "ubuntu": [7, 79], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 318, 320], "disappear": [7, 312, 314, 316], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 81, 91, 92, 119, 121, 156, 163, 171, 172, 177, 178, 182, 192, 217, 296, 312, 317, 318, 320, 321, 322, 323], "glibcxx_3": 7, "29": [7, 318], "compil": [7, 32, 71, 75, 87, 93], "libosmesa": 7, "libgcc": 7, "Then": [7, 313, 316], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 71, 75, 87, 93, 118, 139, 323], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 311, 314, 318], "114": [7, 318, 320], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 318], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 100, 146], "opengl": [7, 317], "global": [7, 32, 71, 75, 87, 88, 89, 93, 186, 195, 209, 213, 249, 309, 311, 317], "cuda_visible_devic": 7, "id": [7, 23, 40, 208, 239, 273, 296], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 318, 320], "correctli": [7, 32, 71, 75, 87, 93], "lgl": 7, "libegl": 7, "x11": [7, 317], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 75, 153, 202, 206, 208, 238, 287, 309, 311, 312, 316, 320], "sketch": [8, 309], "_": [8, 72, 79, 103, 107, 109, 110, 117, 119, 125, 137, 144, 198, 212, 217, 221, 222, 223, 225, 228, 234, 238, 239, 241, 243, 251, 252, 253, 254, 311, 312, 313, 314, 317, 318, 320, 322], "n_training_step": 8, "datapoint": [8, 45, 320], "onlin": [8, 13, 17, 102, 162, 185, 222, 227, 237, 238, 278, 303, 313, 314, 317, 320], "n_data_per_train": 8, "no_grad": [8, 32, 71, 75, 87, 93, 117, 251, 252, 253, 254, 313, 314, 317], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 284, 299, 311, 312, 313, 317, 320], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 127, 284, 309, 311, 312, 313, 314, 317, 319, 320, 322], "loss_fn": [8, 314, 322], "backward": [8, 32, 71, 75, 87, 93, 144, 222, 223, 225, 228, 234, 238, 239, 240, 241, 243, 311, 313, 314, 317, 318], "zero_grad": [8, 32, 71, 75, 87, 93, 309, 311, 313, 314, 317, 318], "backpropag": [8, 222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 317, 318], "differenti": [8, 45, 117, 251, 252, 253, 254, 314, 317, 318], "denomin": 8, "artifact": 8, "numer": [8, 38, 144, 169, 193, 194, 198, 204, 205, 209, 210, 211, 212, 213, 285, 313, 320, 323], "misconcept": 8, "save": [8, 32, 34, 36, 39, 71, 75, 87, 93, 269, 287, 309, 317], "freed": 8, "appear": [8, 33, 318, 320], "compuat": 8, "twice": 8, "fix": [8, 135, 223, 237, 241, 312, 318, 323], "retain_graph": 8, "discuss": [8, 9, 317], "inplac": [8, 32, 34, 36, 39, 71, 75, 87, 93, 139, 311], "accumul": 8, "onto": [8, 33, 150, 198, 202, 204, 205, 208, 209, 210, 211, 212, 213, 314, 318], "exclud": [8, 52, 102, 111, 153, 186, 317, 320], "forward": [8, 32, 71, 75, 87, 93, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 177, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 195, 196, 202, 203, 205, 206, 208, 211, 212, 213, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 308, 318, 322], "submodul": [8, 32, 71, 75, 87, 93, 97, 236], "param": [8, 32, 40, 71, 75, 83, 87, 93, 106, 107, 108, 111, 117, 125, 131, 133, 138, 163, 165, 192, 203, 209, 212, 215, 217, 236, 245, 248, 251, 252, 253, 254, 255, 311, 317, 318, 319, 322], "grad": [8, 32, 71, 75, 87, 93, 311, 313], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 87, 88, 89, 93, 106, 123, 135, 138, 139, 141, 143, 181, 186, 212], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 102, 113, 124, 140, 230, 308, 313, 317, 318], "ask": [8, 311, 313, 314, 317, 319, 323], "much": [8, 13, 14, 35, 41, 58, 87, 93, 235, 238, 313, 317, 318, 320, 323], "render": [8, 283, 311, 312, 313], "upon": [8, 318], "factor": [8, 32, 127, 169, 180, 193, 194, 202, 206, 208, 223, 229, 230, 232, 242, 257, 311, 312, 317, 320, 323], "fit": [8, 11, 119, 308, 309, 311], "bottlneck": 8, "affect": [8, 32, 71, 75, 87, 93, 138, 139, 146, 251, 252, 253, 254], "brax": [8, 67, 68, 125, 323], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 71, 75, 87, 93, 112, 139, 175, 176, 225, 226, 278, 308, 309, 311, 313, 314, 317, 318, 320], "underli": [8, 71, 75, 87, 93, 236, 318], "tedeiou": 8, "priorit": [8, 35, 41, 58, 223, 225, 226, 228, 234, 239, 241, 243, 311, 312], "amount": [8, 208, 312, 320], "isn": [8, 34, 36, 39, 204, 212, 317], "contigu": [8, 71, 75, 87, 93, 150, 313, 317, 318, 320, 322, 323], "costli": [8, 318], "concaten": [8, 21, 30, 31, 102, 103, 119, 138, 172, 215, 311, 312, 317, 318, 320, 323], "constitut": [8, 312, 317, 318], "plain": 8, "profil": 8, "fulli": [8, 32, 71, 75, 87, 93, 312, 318, 320], "frequent": [8, 320], "program": [8, 234, 323], "functorch": [8, 10], "incl": 8, "suit": [8, 70, 313, 323], "mujoco_instal": 8, "valueerror": [8, 319], "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 212, 215, 236, 317, 318, 322], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 84, 156, 172, 177, 178, 236, 313, 318, 322], "lost": 8, "permut": [8, 62, 121, 322, 323], "idea": [9, 239, 309, 314, 317], "introductori": 9, "intro": [9, 313, 314], "dai": [9, 322], "2022": [9, 10, 318, 322], "spin": 9, "deep": [9, 102, 158, 159, 160, 161, 164, 208, 222, 233, 241, 242, 311], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 119, 144, 311, 312, 313, 314], "reddit": 9, "reagent": 9, "orient": [9, 323], "baselines3": 9, "tf": 9, "bandit": [9, 86], "tensorflow": [9, 175, 176], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 71, 75, 87, 93, 117, 214, 215, 238, 307, 313, 314, 317, 318, 319, 323], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 322], "grade": 9, "factori": [9, 43], "throughput": [9, 311], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 71, 75, 87, 93, 105, 109, 150, 162, 165, 177, 183, 187, 198, 202, 204, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 226, 228, 243, 249, 307, 312, 313, 314, 317, 318, 322, 323], "mbrl": [9, 83, 307], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 317, 318, 321], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 313, 314, 317], "notebook": [10, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323], "24": [10, 311, 314, 317, 318, 321], "11": [10, 27, 33, 45, 55, 56, 65, 72, 137, 155, 174, 311, 313, 314, 317, 318, 320, 321], "12": [10, 55, 56, 65, 91, 92, 311, 313, 318, 320, 321], "pip": [10, 53, 317, 322, 323], "pip3": [10, 313, 314, 317], "extra": [10, 32, 71, 75, 87, 93, 102, 144, 153, 307, 313, 314, 320], "url": 10, "org": [10, 35, 58, 102, 123, 141, 157, 158, 159, 160, 161, 162, 165, 166, 167, 174, 175, 176, 180, 182, 183, 185, 186, 188, 189, 195, 205, 208, 222, 223, 227, 229, 230, 231, 232, 233, 234, 237, 238, 240, 241, 242, 251, 256, 264, 319], "whl": 10, "u": [10, 53, 318], "There": [10, 168, 170, 307, 309, 313, 314, 317, 318, 320, 323], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 236], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 69, 71, 73, 75, 86, 87, 88, 89, 90, 93, 96, 97, 100, 101, 102, 103, 104, 107, 109, 110, 113, 115, 116, 117, 119, 120, 123, 124, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 143, 144, 147, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 186, 187, 195, 198, 204, 205, 209, 210, 211, 212, 213, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 249, 250, 251, 252, 253, 254, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 296, 297, 303, 312, 313], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 71, 72, 75, 83, 87, 93, 99, 221, 236, 292, 293, 301, 302, 303, 312], "from_vers": 11, "to_vers": 11, "intersect": [11, 133], "vs": [11, 168, 170, 171, 322], "longer": [11, 312, 317, 320], "self": [11, 26, 28, 32, 34, 36, 39, 71, 75, 83, 87, 93, 100, 106, 107, 110, 123, 135, 138, 139, 141, 143, 155, 165, 174, 186, 195, 202, 206, 212, 217, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 309, 311, 312, 318, 319, 322], "x": [11, 23, 26, 32, 38, 40, 117, 137, 156, 165, 167, 168, 170, 171, 172, 174, 177, 178, 196, 204, 210, 219, 221, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 287, 311, 313, 318, 320, 322], "23": [11, 312, 313, 317, 318, 321], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 71, 72, 75, 87, 93, 99, 117, 135, 196, 204, 210, 230, 232, 251, 254, 262, 263, 267, 268, 299, 308, 311, 312, 317, 320, 322, 323], "import_modul": 11, "27": [11, 311, 314, 318], "get_class_that_defined_method": 11, "f": [11, 75, 221, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 311, 312, 313, 314, 317, 318, 320, 323], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 88, 89, 93, 109, 119, 135, 139, 144, 169, 177, 178, 193, 194, 204, 210, 216, 223, 231, 236, 237, 241, 283, 284, 309, 311, 312, 313, 314, 318, 323], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 141, 157, 185], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 71, 72, 75, 87, 88, 89, 93, 96, 117, 135, 139, 144, 156, 157, 158, 159, 160, 161, 162, 167, 171, 172, 185, 209, 213, 274, 275, 283, 292, 293, 296, 301, 302, 303, 311, 312, 313, 323], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 71, 75, 87, 93, 125, 139, 153, 168, 170, 203, 236, 308, 311, 312, 314, 320], "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 106, 123, 132, 138, 139, 140, 142, 143, 155, 156, 164, 168, 170, 172, 173, 174, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 249, 251, 252, 253, 254, 255, 277, 280, 284, 287, 303, 312], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 71, 73, 75, 87, 93, 100, 102, 103, 106, 107, 108, 111, 112, 113, 116, 117, 118, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 142, 144, 153, 154, 155, 168, 170, 173, 174, 202, 203, 205, 206, 208, 211, 212, 213, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 287, 311, 318], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 72, 87, 93, 311, 322], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 71, 75, 83, 87, 88, 89, 93, 102, 103, 104, 109, 113, 114, 118, 119, 121, 123, 124, 126, 132, 133, 136, 139, 140, 141, 143, 146, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 222, 223, 224, 228, 230, 231, 235, 236, 237, 238, 239, 243, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 278, 279, 280, 283, 284, 287, 289, 296, 297, 301, 302, 303, 312, 318], "200": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 94, 95, 127, 158, 159, 166, 188, 189, 311, 314, 318], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 102, 127, 287, 290, 299, 309, 311, 312, 313, 314, 317, 320, 322], "device_typ": [13, 16, 27, 30, 33, 156, 157, 158, 159, 160, 161, 167, 172, 179, 180, 185], "create_env_kwarg": [13, 14, 16, 17, 72, 84, 87, 93, 311], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 127, 312, 320], "explorationtyp": [13, 14, 16, 20, 21, 236, 283, 311, 312, 313, 314, 322], "interactiontyp": [13, 16, 18, 19, 20, 21, 148, 152, 209, 213, 283], "exploration_mod": [13, 16, 18, 19, 20, 305, 307], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 71, 75, 87, 93, 106, 107, 110, 117, 119, 123, 127, 128, 129, 134, 135, 137, 138, 139, 141, 143, 144, 163, 166, 169, 172, 175, 176, 179, 180, 188, 189, 192, 194, 202, 212, 216, 219, 220, 221, 222, 223, 228, 231, 232, 233, 234, 237, 239, 241, 242, 243, 250, 256, 257, 258, 259, 260, 261, 262, 263, 264, 285, 311, 312, 320, 323], "num_thread": [13, 14, 87, 93], "num_sub_thread": [13, 14, 87, 93], "datacollector": [13, 14, 16, 17, 209, 213, 238, 313], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 198, 202, 204, 205, 208, 209, 210, 211, 212, 213, 215, 307, 322], "stepcount": [13, 71, 75, 87, 93, 138, 311, 312, 313, 314, 317, 322], "env_mak": [13, 14, 16, 21, 299, 323], "50": [13, 14, 16, 21, 37, 40, 311, 313, 314, 316, 317, 318, 321], "2000": [13, 14, 16, 45, 78, 313, 320], "enumer": [13, 14, 16, 21, 32, 38, 42, 71, 75, 87, 93, 244, 308, 311, 312, 313, 314, 320, 322], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 121, 127, 133, 165, 187, 204, 205, 208, 210, 211, 307, 313, 314, 318, 320, 322, 323], "step_count": [13, 14, 16, 71, 75, 87, 93, 133, 313, 314, 322], "shutdown": [13, 14, 16, 17, 21, 311, 322], "del": [13, 14, 16, 311, 313, 316, 322, 323], "randompolici": [13, 14, 16, 18, 19, 20, 22, 102, 127, 305, 320], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 224, 235, 238, 278, 280, 283, 287, 290, 291, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323], "lifespan": [13, 14, 16, 18, 19, 20, 312], "divis": [13, 14, 16, 18, 19, 20, 317], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 109, 314, 320], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 71, 75, 87, 93, 135, 139, 209, 213, 283, 301, 302, 303, 309, 312, 313, 318, 323], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 71, 75, 87, 93, 313], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 312, 313, 317], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 138, 140, 178, 308, 309, 311, 312, 317, 320, 322], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 71, 75, 87, 93, 109, 111, 131, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 251, 320, 323], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 307, 317, 318], "post": [13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 87, 93], "multistep": [13, 14, 16, 18, 19, 20, 21, 305, 312], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 119, 129, 169, 179, 188, 193, 194, 249, 307, 318, 320], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 238], "whole": [13, 14, 16, 26, 28, 32, 45, 71, 75, 87, 93, 139, 278, 311, 313], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 289, 299, 309, 311, 322], "async": [13, 14, 18, 19, 20, 21, 311, 322], "ratio": [13, 14, 40, 311, 313], "finish": [13, 14, 21, 75, 127, 323], "rest": [13, 14, 307, 313, 314, 318, 322], "earli": [13, 14, 75, 133, 322], "thread": [13, 14, 84, 87, 93], "equal": [13, 14, 84, 87, 93, 118, 119, 156, 164, 168, 170, 172, 178, 242, 246, 278, 301, 302, 311, 313, 319], "plu": [13, 14, 40, 87, 93, 318], "safeti": [13, 14, 83, 87, 93], "harm": [13, 14, 87, 93], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 139, 144, 309, 311], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 139, 144, 303, 309, 311, 312, 323], "ordereddict": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 139, 144, 312], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 144, 168, 170, 221, 222, 224, 235, 238, 287, 307, 317], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 71, 75, 87, 93, 139], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 71, 75, 87, 93, 114, 119, 133, 156, 172, 177, 178, 234, 241, 320], "increment": [13, 14, 16, 17, 71, 75, 87, 93, 235], "env_fn": [13, 14, 16, 17, 72, 301, 302], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 71, 75, 87, 93, 105, 119, 127, 133, 177, 205, 279, 299, 312, 313, 314, 316, 317, 318, 320, 322, 323], "300": [13, 14, 16, 17, 160, 161, 318], "out_se": [13, 14, 16, 17, 323], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 106, 123, 132, 135, 138, 139, 140, 142, 143, 155, 156, 158, 159, 160, 161, 164, 167, 168, 169, 170, 172, 173, 174, 177, 178, 184, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 249, 250, 251, 252, 253, 254, 255, 270, 274, 275, 277, 280, 287, 292, 293, 296, 300, 301, 302, 308, 313, 317], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 71, 75, 87, 93, 100, 101, 102, 103, 104, 107, 109, 110, 113, 115, 116, 117, 119, 120, 124, 126, 127, 128, 129, 130, 134, 136, 137, 138, 144, 153, 158, 164, 165, 168, 170, 171, 172, 178, 181, 185, 186, 187, 204, 205, 210, 211, 216, 222, 223, 225, 228, 230, 234, 236, 238, 239, 240, 241, 243, 251, 252, 253, 254, 270, 281, 283, 285, 294, 295, 311], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 68, 81, 83, 100, 107, 110, 155, 174, 222, 223, 225, 226, 228, 234, 238, 239, 241, 243, 318, 322, 323], "describ": [15, 44, 103, 138, 192, 193, 273, 308, 311, 313, 317, 318, 323], "tensor_spec": [15, 100, 154, 228, 238, 240], "boundedtensorspec": [15, 22, 26, 71, 75, 87, 93, 206, 208, 209, 216, 222, 223, 225, 234, 238, 239, 241, 243, 305, 313, 317, 318, 322, 323], "cube": 15, "envcreat": [16, 22, 299, 300, 303, 305, 311, 312, 322, 323], "interruptor": 16, "_interruptor": 16, "outsid": [16, 317], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 71, 75, 87, 93, 313, 317, 322, 323], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 75, 84, 117, 222, 224, 235, 238, 311, 316, 318, 322], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 122, 311, 322], "regular": [17, 34, 36, 39, 187, 205, 210, 211, 212, 213, 229, 289, 305, 309, 311, 312, 320, 323], "mere": 17, "greater": [17, 168, 170, 311, 312, 322], "sent": [17, 55, 56, 65, 144], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 71, 75, 87, 93, 124, 144, 155, 156, 158, 160, 162, 164, 172, 174, 177, 178, 198, 212, 217, 278, 284, 311, 313, 314, 318, 319, 320, 323], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 287], "string": [18, 19, 20, 32, 37, 45, 54, 71, 75, 87, 93, 99, 123, 133, 143, 168, 170, 204, 209, 210, 221, 269, 286, 296, 308, 311, 313, 314], "respect": [18, 19, 20, 32, 71, 75, 87, 93, 101, 106, 107, 110, 123, 124, 135, 138, 139, 141, 143, 177, 189, 212, 217, 282, 313, 314, 317], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 306, 312, 313, 316, 320], "serv": [18, 20, 21, 77, 320, 323], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 71, 75, 87, 93, 113], "seen": [18, 20, 21, 308, 311, 312, 314, 317, 320], "turn": [18, 20, 21, 115, 140, 204, 283, 308, 311, 312, 314, 318, 319], "mp": [18, 19, 20, 72, 144], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 311], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 238, 301, 302], "homonym": [18, 19, 20, 318], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 311], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 209, 213], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 301, 302, 311, 312], "coordin": 21, "hood": [21, 318], "init": [21, 32, 71, 75, 87, 93, 311, 312, 313], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 320], "similarli": [21, 32, 62, 71, 75, 87, 93, 177, 214, 215, 234, 323], "num_cpu": 21, "num_gpu": 21, "1024": [21, 162, 320], "equat": [21, 75, 208, 221, 224, 242, 313, 318], "exce": [21, 313, 320], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 287, 311, 313, 314], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 91, 92, 94, 95, 156, 157, 158, 159, 162, 167, 172, 177, 178, 182, 183, 185, 186, 195, 249, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "wherea": [22, 109, 236, 309], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 157, 162, 185, 203], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 72, 312], "__main__": [22, 72], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 109, 136, 192, 193, 194, 203, 208, 223, 224, 228, 237, 239, 241, 311, 313, 314, 317], "durat": [23, 317], "meta": [23, 44, 52, 73, 309, 313, 317, 320], "aren": [23, 314], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 144, 307, 311, 317], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 109, 183, 184, 188, 221, 307, 312, 313, 314, 318, 320], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 322], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 208, 216], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 216, 318], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 71, 75, 87, 93, 106, 107, 110, 117, 123, 135, 138, 139, 141, 143, 144, 212, 296, 323], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 105, 323], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 156, 172, 190, 191], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 71, 75, 87, 93, 303, 307], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 323], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 109, 168, 198, 202, 204, 205, 208, 209, 210, 211, 212, 213, 307, 322, 323], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 52, 198, 204, 205, 209, 210, 211, 212, 213, 313, 317, 318, 320], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 135, 150, 318, 320], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 102, 132, 156, 190, 191, 311, 318, 320], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 102, 103, 121, 135, 140, 144, 171, 191, 196, 303, 312, 313, 318, 320], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 138, 139, 181, 192, 303], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 88, 89, 100, 109, 165, 184, 187, 204, 205, 210, 211, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 314], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 165, 187, 204, 210, 226, 228, 249, 305, 307], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 71, 75, 87, 93, 106, 107, 110, 123, 135, 138, 139, 141, 143, 144, 212, 221, 236, 311, 312, 313, 318, 320], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 135, 170, 314, 318, 319], "upper": [25, 118], "unnam": 26, "effect": [26, 32, 71, 75, 87, 93, 102, 139, 287, 311, 320, 323], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 71, 75, 87, 93, 156, 172, 311, 317, 318], "composite_spec": 26, "observation_vector": [26, 103, 296, 311], "randn": [26, 34, 36, 39, 55, 56, 65, 119, 150, 157, 162, 165, 171, 175, 176, 177, 181, 184, 185, 187, 198, 199, 200, 201, 203, 204, 209, 210, 212, 215, 216, 217, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 251, 252, 253, 254, 286, 307, 322, 323], "td_project": 26, "is_empti": [26, 28, 318], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 71, 75, 87, 93, 250, 317], "children": [26, 28, 32, 71, 75, 87, 93], "keysview": [26, 28], "reflect": [26, 28, 88, 89, 153, 236, 290, 312, 313, 314, 317], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 71, 75, 87, 93, 236], "succeed": [26, 28, 313, 317, 318], "selected_kei": [26, 28, 131, 311], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 164, 165, 187, 204, 205, 210, 211, 228, 236, 249, 307, 314], "arang": [27, 33, 165, 176, 204, 278, 307, 320], "argmax": [27, 165, 187, 205, 211], "chosen_action_valu": [27, 33, 186, 187, 195, 210, 211, 249, 307, 314], "outcom": [27, 33, 163, 192], "lazi": [28, 29, 49, 50, 71, 75, 87, 93, 123, 141, 179, 214, 215, 311, 312, 316, 320, 323], "represent": [28, 29, 32, 71, 75, 87, 93, 123, 141, 143, 311, 318, 319, 323], "drawn": [28, 29, 135, 206, 209, 213, 313, 317], "lazystackedtensordict": [28, 71, 75, 83, 87, 93, 316, 322], "heterogen": [28, 29, 82, 88, 89, 146, 177, 178, 311, 312], "semant": [28, 29, 307], "thrown": [29, 32, 71, 75, 87, 93, 320], "nvec": [30, 31], "cardin": [30, 31, 165, 187, 204, 205, 211, 313], "ax": [30, 179, 180], "m": [30, 32, 71, 75, 87, 93, 109, 213, 307, 312, 318], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 226, 228, 249, 305], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 305], "gamma": [32, 127, 174, 222, 223, 225, 226, 228, 229, 230, 232, 234, 236, 238, 239, 240, 241, 243, 244, 245, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 299, 308, 311, 312, 313, 317, 322], "sutton": [32, 308, 317], "1988": 32, "predict": [32, 40, 166, 173, 174, 203, 218, 229, 231, 232, 250, 307, 311, 312], "tempor": [32, 168, 170, 174, 252, 253, 258, 259], "44": [32, 311, 318], "discount": [32, 72, 127, 223, 229, 230, 232, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 308, 312, 313, 317], "ahead": [32, 323], "add_modul": [32, 71, 75, 87, 93], "child": [32, 71, 75, 87, 93], "fn": [32, 37, 71, 75, 87, 93, 181, 301, 302], "init_weight": [32, 71, 75, 87, 93], "fill_": [32, 71, 75, 87, 93, 312, 314, 323], "net": [32, 71, 75, 87, 93, 171, 178, 222, 223, 228, 234, 238, 239, 240, 241, 296, 299, 312, 318, 319, 322], "in_featur": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 158, 159, 160, 161, 171, 172, 178, 179, 180, 199, 212, 226, 322], "out_featur": [32, 71, 75, 83, 87, 93, 106, 123, 135, 138, 139, 141, 143, 155, 156, 158, 159, 160, 161, 166, 167, 168, 170, 171, 172, 174, 177, 178, 179, 180, 199, 204, 212, 226, 307, 311, 314, 322], "bia": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 166, 168, 170, 172, 178, 179, 180, 181, 206, 208, 212, 219, 220, 221, 236, 308, 311, 312, 313, 314, 317, 322], "requires_grad": [32, 71, 75, 87, 93, 117], "bfloat16": [32, 71, 75, 87, 93], "datatyp": [32, 71, 75, 87, 93, 320], "member": [32, 71, 75, 87, 93, 236], "xdoctest": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212, 236], "skip": [32, 71, 75, 87, 93, 114, 139, 146, 209, 213, 236, 251, 252, 253, 254, 269, 270, 280, 283, 311, 312, 313, 318], "buf": [32, 71, 75, 87, 93], "20l": [32, 71, 75, 87, 93, 236], "1l": [32, 71, 75, 87, 93, 236], "5l": [32, 71, 75, 87, 93, 236], "__call__": [32, 37, 71, 75, 87, 93, 213, 309], "associ": [32, 71, 75, 87, 93, 188, 303, 311, 320], "doubl": [32, 46, 71, 75, 87, 93, 106, 107, 108, 110, 123, 135, 138, 139, 141, 143, 212, 226, 229, 233, 239, 242, 249, 311, 312, 313, 314, 323], "eval": [32, 71, 75, 87, 93, 139, 144, 311, 312, 313], "evalu": [32, 71, 75, 87, 93, 139, 163, 175, 176, 184, 194, 239, 292, 293, 312, 313], "dropout": [32, 71, 75, 87, 93, 139, 168, 170, 172, 314], "batchnorm": [32, 71, 75, 87, 93, 139], "disabl": [32, 71, 75, 87, 93, 139, 169, 194, 311], "comparison": [32, 54, 71, 75, 87, 93, 139, 236, 311, 312], "similar": [32, 71, 75, 87, 88, 89, 93, 106, 123, 135, 138, 139, 141, 142, 143, 144, 199, 201, 209, 212, 213, 308, 311, 312, 313, 314, 318, 323], "confus": [32, 71, 75, 87, 93, 139], "extra_repr": [32, 71, 75, 87, 93], "shift": [32, 219, 251, 252, 253, 254, 313], "nontermin": 32, "original_reward": 32, "newli": [32, 71, 75, 87, 93], "OR": 32, "reshap": [32, 168, 170, 172, 313, 317], "get_buff": [32, 71, 75, 87, 93], "throw": [32, 71, 75, 87, 93, 323], "docstr": [32, 71, 75, 87, 93], "get_submodul": [32, 71, 75, 87, 93], "explan": [32, 71, 75, 87, 93], "qualifi": [32, 71, 75, 87, 93], "referenc": [32, 71, 75, 87, 93], "attributeerror": [32, 71, 75, 87, 93], "invalid": [32, 71, 75, 87, 93, 96, 175, 176], "resolv": [32, 71, 75, 87, 93], "someth": [32, 71, 75, 82, 87, 93, 306, 312, 313, 318, 323], "get_extra_st": [32, 71, 75, 87, 93, 144], "set_extra_st": [32, 71, 75, 87, 93, 144], "picklabl": [32, 71, 75, 87, 93, 144], "guarante": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 144, 322], "pickl": [32, 71, 75, 87, 93, 144], "get_paramet": [32, 71, 75, 87, 93], "sai": [32, 71, 75, 87, 93, 177, 319, 323], "net_b": [32, 71, 75, 87, 93], "net_c": [32, 71, 75, 87, 93], "conv": [32, 71, 75, 87, 93, 156, 312], "conv2d": [32, 71, 75, 87, 93, 156, 177, 322], "kernel_s": [32, 71, 75, 87, 93, 156, 158, 159, 177, 182, 312, 322], "stride": [32, 71, 75, 87, 93, 156, 158, 159, 167, 177, 312, 322], "diagram": [32, 71, 75, 87, 93], "show": [32, 71, 75, 87, 93, 178, 307, 311, 313, 314, 317, 318, 320, 322], "degre": [32, 71, 75, 87, 93], "named_modul": [32, 71, 75, 87, 93], "o": [32, 71, 75, 87, 93], "transit": [32, 52, 71, 75, 87, 93, 218, 311, 314, 318, 320], "half": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212, 311], "ipu": [32, 71, 75, 87, 93], "strict": [32, 34, 36, 39, 71, 75, 87, 93, 139], "descend": [32, 71, 75, 87, 93, 139], "persist": [32, 71, 75, 87, 93, 139, 153], "enforc": [32, 62, 71, 75, 87, 93, 139, 214, 318], "preserv": [32, 71, 75, 87, 93, 139], "missing_kei": [32, 71, 75, 87, 93, 139], "unexpected_kei": [32, 71, 75, 87, 93, 139], "namedtupl": [32, 71, 75, 87, 93, 139], "duplic": [32, 62, 71, 75, 87, 93, 226, 229, 236, 249], "l": [32, 71, 75, 87, 93, 250, 313, 318], "idx": [32, 71, 75, 87, 93], "named_buff": [32, 71, 75, 87, 93], "remove_dupl": [32, 71, 75, 87, 93, 236], "prepend": [32, 71, 75, 87, 93, 236], "running_var": [32, 71, 75, 87, 93], "named_children": [32, 71, 75, 87, 93], "conv4": [32, 71, 75, 87, 93], "conv5": [32, 71, 75, 87, 93], "memo": [32, 71, 75, 87, 93], "named_paramet": [32, 71, 75, 87, 93, 117, 236], "register_backward_hook": [32, 71, 75, 87, 93], "removablehandl": [32, 71, 75, 87, 93], "deprec": [32, 71, 75, 87, 93, 139, 147, 151, 164, 222, 223, 224, 226, 228, 229, 234, 235, 238, 239, 240, 241, 249, 251, 252, 253, 254, 259, 323], "favor": [32, 71, 75, 87, 93, 313], "register_full_backward_hook": [32, 71, 75, 87, 93], "register_buff": [32, 71, 75, 87, 93], "running_mean": [32, 71, 75, 87, 93], "alongsid": [32, 71, 75, 87, 93, 317], "num_featur": [32, 71, 75, 87, 93], "register_forward_hook": [32, 71, 75, 87, 93, 165, 187], "with_kwarg": [32, 71, 75, 87, 93], "always_cal": [32, 71, 75, 87, 93], "posit": [32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 113, 114, 132, 133, 136, 139, 140, 181, 308, 313, 317, 318, 320], "signatur": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212, 236, 308, 311, 318], "register_module_forward_hook": [32, 71, 75, 87, 93], "regardless": [32, 71, 75, 87, 93, 224, 235, 238], "register_forward_pre_hook": [32, 71, 75, 87, 93], "invok": [32, 71, 75, 87, 93], "And": [32, 71, 75, 87, 93], "forward_pr": [32, 71, 75, 87, 93], "register_module_forward_pre_hook": [32, 71, 75, 87, 93], "grad_input": [32, 71, 75, 87, 93], "grad_output": [32, 71, 75, 87, 93], "subsequ": [32, 71, 75, 87, 93, 314], "technic": [32, 71, 75, 87, 93, 312, 314], "caller": [32, 71, 75, 87, 93], "register_module_full_backward_hook": [32, 71, 75, 87, 93], "register_full_backward_pre_hook": [32, 71, 75, 87, 93], "backward_pr": [32, 71, 75, 87, 93], "register_module_full_backward_pre_hook": [32, 71, 75, 87, 93], "register_load_state_dict_post_hook": [32, 71, 75, 87, 93], "incompatible_kei": [32, 71, 75, 87, 93], "clear": [32, 71, 75, 79, 87, 93, 279], "register_modul": [32, 71, 75, 87, 93, 309], "alia": [32, 71, 75, 87, 93], "register_paramet": [32, 71, 75, 87, 93], "register_state_dict_pre_hook": [32, 71, 75, 87, 93], "keep_var": [32, 34, 36, 39, 71, 75, 87, 93, 139], "made": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 208, 226, 236, 249, 311, 312, 314, 317, 319], "requires_grad_": [32, 71, 75, 87, 93], "autograd": [32, 71, 75, 87, 93, 139], "freez": [32, 71, 75, 87, 93], "finetun": [32, 71, 75, 87, 93], "gan": [32, 71, 75, 87, 93], "share_memori": [32, 71, 72, 75, 87, 93, 311], "share_memory_": [32, 71, 75, 87, 93, 322], "destin": [32, 34, 36, 39, 71, 75, 87, 93, 107, 108, 110, 139, 141, 144, 153, 270], "averag": [32, 71, 75, 87, 93, 139, 144, 208, 230, 231, 285, 311, 313], "shallow": [32, 71, 75, 87, 93, 139, 314], "pleas": [32, 71, 75, 87, 88, 89, 93, 102, 136, 139, 306], "detach": [32, 71, 75, 87, 93, 139, 236, 251, 252, 253, 254, 311], "non_block": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "memory_format": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "channels_last": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "complex": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212, 311, 312], "integr": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 161, 168, 170, 174, 212, 307, 317, 318, 319], "unchang": [32, 71, 75, 87, 93, 106, 109, 123, 135, 138, 139, 141, 143, 206, 212, 284, 311, 320], "tri": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "pin": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "4d": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "ignore_w": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "1913": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "3420": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "5113": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "2325": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "torch_doctest_cuda1": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "gpu1": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "1914": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "5112": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212, 318], "2324": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "float16": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "cdoubl": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "3741": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "j": [32, 35, 58, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212, 309], "2382": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "5593": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212, 318], "4443": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "complex128": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "6122": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "1150": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 212], "to_empti": [32, 71, 75, 87, 93], "dst_type": [32, 71, 75, 87, 93], "xpu": [32, 71, 75, 87, 93], "set_to_non": [32, 71, 75, 87, 93], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63, 177], "uniqu": [33, 320], "discretebox": [33, 71, 75, 87, 93, 313, 317, 323], "chosen_data": [34, 54], "rewarddata": [34, 54, 305], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 86], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 318], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 71, 75, 87, 93, 107, 110, 123, 139, 143, 279], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 303], "determin": [34, 35, 36, 39, 41, 52, 58, 71, 75, 87, 93, 123, 143, 177, 208, 312, 317], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 163, 192], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "flatten": [34, 36, 39, 113, 284, 314, 317], "to_tensordict": [34, 36, 39, 314], "memmap": [34, 36, 39, 55, 87, 93, 144, 284, 320], "unbind": [34, 36, 39, 168, 170], "alpha": [35, 41, 58, 156, 177, 223, 228, 237, 239, 241, 311, 320, 322], "ep": [35, 41, 58, 144, 208, 224, 242, 285, 311, 312, 314], "1e": [35, 41, 58, 144, 163, 166, 181, 192, 311, 312, 313, 317], "08": [35, 41, 58, 311, 317, 318], "collate_fn": [35, 38, 41, 42, 52, 53, 320, 322], "prefetch": [35, 38, 41, 42, 52, 53, 54, 311, 312, 314, 320], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 102, 123, 141, 157, 158, 159, 160, 161, 162, 165, 166, 167, 174, 180, 182, 183, 185, 186, 188, 189, 195, 205, 208, 222, 223, 227, 229, 230, 231, 232, 233, 234, 237, 238, 241, 242, 251, 256, 264, 319], "ab": [35, 58, 123, 141, 144, 157, 162, 166, 167, 174, 180, 182, 183, 185, 186, 188, 189, 195, 222, 223, 227, 230, 231, 232, 233, 234, 237, 238, 241, 319], "1511": [35, 58, 167], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 192, 209, 213, 305, 308], "null": [35, 41, 58, 101], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 320], "merg": [35, 38, 41, 42, 52, 53, 318], "mini": [35, 38, 41, 42, 52, 53, 317], "decid": [35, 38, 41, 42, 322], "rb": [35, 38, 41, 42, 52, 53, 102, 127, 312, 314, 317, 319, 320, 322], "meth": [35, 38, 41, 42, 236], "incompat": [35, 38, 41, 42, 320], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 320], "tensordictprioritizedreplaybuff": [35, 305, 322], "simplifi": [35, 318, 320], "manual_se": [35, 38, 41, 42, 100, 109, 119, 127, 136, 175, 176, 184, 198, 205, 206, 208, 216, 222, 223, 225, 234, 241, 317, 318, 322, 323], "_weight": [35, 41, 320, 322], "arrai": [35, 40, 311, 320], "update_prior": [35, 58, 284, 309, 312, 320, 322], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 140], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 134, 311, 320], "nonetyp": [36, 39, 312], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219], "text": [37, 40, 43, 208, 313], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 157, 162, 185], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 320], "inde": [37, 109, 313, 318], "writer": [38, 42, 52, 53, 60, 64, 305, 313], "randomsampl": [38, 42, 52, 53, 305, 311], "roundrobinwrit": [38, 42, 52, 53, 305], "Not": 38, "ref_model": 40, "reward_model": [40, 218], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 117], "kl": [40, 117, 231, 235], "penalti": [40, 235], "strai": 40, "far": [40, 169, 193, 194, 318, 323], "calcul": [40, 127], "gpt2rewardmodel": 40, "get_dataload": [40, 305], "promptdata": [40, 305], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 318, 320], "reward_kl": [40, 117], "reward_raw": 40, "sample_log_prob": [40, 199, 200, 201, 209, 213, 215, 238, 296, 313, 317, 322], "create_rollout_td": 40, "log_prob": [40, 163, 175, 176, 184, 194, 213], "log_ratio": 40, "kl_coef": 40, "replic": 40, "rindex": 40, "multipli": [40, 223, 224, 228, 235, 237, 238, 239, 241, 285, 311], "term": [40, 117, 179, 180, 221, 222, 228, 289, 312, 313, 317], "subtract": [40, 134], "ve": [40, 311, 314], "eo": 40, "limit": [40, 83, 102, 117, 311, 312, 314, 317, 318], "generation_config": 40, "generationconfig": 40, "ti": [40, 260, 261, 262, 263, 265, 266, 267, 268, 312], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 223, 226, 228, 229, 234, 236, 239, 241, 243, 249, 320, 322], "td_error": [41, 42, 223, 225, 226, 228, 229, 234, 236, 239, 241, 243, 249, 311, 320, 322], "reduct": [41, 58], "prioritizedreplaybuff": [41, 305, 322], "update_tensordict_prior": [41, 311, 320, 322], "prioritizedsampl": [41, 42, 226, 229, 249, 305, 311, 320], "min": [41, 58, 192, 193, 194, 203, 208, 223, 224, 228, 237, 239, 241, 312, 313, 317], "median": [41, 58, 209, 213], "len": [41, 55, 56, 65, 121, 156, 172, 178, 311, 318, 319, 320, 322], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 81, 150], "huggingfac": [43, 207], "co": [43, 318], "doc": [43, 312, 317, 319], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 305], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 84, 87, 93, 311, 312], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 52, 75, 141, 153, 269, 320, 323], "condit": [45, 134, 204, 205, 210, 211, 221, 311, 318, 320], "elementwis": 45, "os": [45, 312], "cpu_count": 45, "vocabulari": 45, "loader": [45, 313], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 100, 102, 103, 104, 105, 107, 109, 110, 111, 113, 116, 119, 121, 124, 125, 127, 130, 131, 136, 141, 144, 153, 154, 202, 203, 206, 208, 213, 226, 249, 270], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 312], "batch_dimens": 45, "filder": 45, "tempfil": [45, 299, 311, 312], "randint": [45, 137, 320], "20": [45, 71, 75, 79, 87, 93, 203, 278, 311, 313, 314, 317, 318, 322, 323], "temporarydirectori": [45, 311, 312], "tmpdir": [45, 311, 312], "data_memmap": 45, "exclus": [48, 49, 113, 168, 170, 175, 176, 204, 205, 210, 211, 242, 243, 251, 252, 253, 254, 255, 303, 307], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 301, 302, 311], "metadata": [52, 313, 317, 323], "reconstruct": [52, 231, 311, 323], "recov": [52, 202, 208, 214, 234, 316], "regard": [52, 165, 205, 222, 229, 238, 311, 313, 318], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 84, 196, 301, 302, 308, 313, 314, 320, 322], "left": [52, 106, 107, 108, 111, 117, 123, 125, 131, 133, 136, 138, 141, 143, 206, 312, 313], "possess": 52, "unexpectedli": 52, "episod": [52, 75, 127, 130, 134, 155, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 312, 317], "absent": [52, 71, 75, 87, 93], "traj_split": 52, "observationnorm": [52, 144, 303, 311, 312, 313, 314, 322], "maze2d": 52, "umaz": 52, "128": [52, 159, 162, 312, 314, 318, 319, 320], "loc": [52, 117, 119, 129, 169, 181, 193, 194, 199, 200, 201, 209, 213, 215, 222, 223, 234, 238, 239, 240, 241, 291, 296, 303, 307, 311, 312, 313, 314, 317, 322], "public": [53, 123, 143], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 86], "adult_onehot": [53, 86], "mushroom_num": [53, 86], "mushroom_onehot": [53, 86], "covertyp": [53, 86], "shuttl": [53, 86], "magic": [53, 86], "infinit": [54, 320], "three": [54, 307, 309, 313, 317, 318, 320, 323], "block": [54, 307, 314], "pairwisedataset": [54, 305], "256": [54, 162, 312, 313, 317, 318], "scratch_dir": [55, 311, 320], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 203, 320, 323], "bar": [55, 56, 65, 203, 280, 281, 283, 287, 309, 312], "attach": [55, 56, 57, 63, 65, 312], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 175, 176, 311], "auto": [56, 65, 208, 223, 228, 237, 239, 241, 243, 308, 317], "zero_": [56, 65, 150], "max_capac": [58, 311, 320], "uniformli": [59, 236, 323], "roundrobin": [60, 64], "piec": [60, 64, 66, 311, 312, 313, 317, 318, 320], "consum": [62, 312, 313, 317, 320], "incomplet": 62, "unlik": [62, 229, 238, 312, 322], "fresh": 62, "caution": [62, 146, 323], "shuffl": [62, 317], "haven": [62, 319], "remain": [62, 108, 109, 117, 134, 180], "draw": [62, 206], "__len__": 63, "googl": [67, 68, 313, 314, 317], "ant": [67, 68, 78, 319], "get_environ": 68, "87": [68, 318], "acrobot": [68, 323], "fetch": [68, 117, 319, 320], "task_nam": 69, "cheetah": [69, 70, 311], "frame_skip": [69, 70, 74, 75, 80, 114, 280, 283, 290, 309, 311, 312, 313, 322], "dm_control": [70, 311, 316, 323], "continuousbox": [71, 75, 87, 93, 150, 313, 317, 318, 322, 323], "unboundedcontinuoustensorspec": [71, 75, 83, 87, 93, 100, 107, 110, 135, 150, 155, 174, 198, 212, 215, 217, 240, 305, 313, 314, 317, 318, 323], "another_act": [71, 75, 87, 93], "mutabl": [71, 75, 87, 93], "batch_lock": [71, 73, 75, 87, 93, 135, 139, 318], "immut": [71, 75, 87, 93, 125, 139], "done_keys_group": [71, 75, 87, 93], "outer": [71, 75, 87, 93, 309, 311, 312, 323], "inner": [71, 75, 87, 93, 109, 309, 312, 313, 317, 323], "another_don": [71, 75, 87, 93], "fake_tensordict": [71, 75, 87, 93, 312], "fake": [71, 75, 87, 93, 311, 312], "overridden": [71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 314], "afterward": [71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219, 323], "silent": [71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 185, 188, 189, 191, 196, 202, 203, 205, 206, 208, 211, 216, 219], "braxenv": [71, 75, 87, 93, 125, 305], "envnam": [71, 75, 87, 93], "mimic": [71, 75, 87, 93], "renametransform": [71, 75, 87, 93], "pipeline_st": [71, 75, 87, 93], "15": [71, 75, 87, 93, 203, 208, 230, 311, 313, 314, 317, 318, 320, 321, 322], "attibut": [71, 75, 87, 93], "speak": [71, 75, 87, 93, 311], "rand_act": [71, 75, 82, 87, 88, 89, 93], "_step": [71, 75, 87, 93, 100, 107, 110, 113, 125, 134], "privat": [71, 75, 87, 93, 318, 323], "reset_kei": [71, 75, 87, 93, 130], "partial": [71, 75, 87, 93, 287, 314], "multitask": [71, 75, 87, 93], "multiag": [71, 75, 82, 87, 88, 89, 93, 154, 178, 186, 195, 249], "another_reward": [71, 75, 87, 93], "callback": [71, 75, 87, 93, 317], "auto_reset": [71, 75, 87, 93, 318], "auto_cast_to_devic": [71, 75, 87, 93, 317], "break_when_any_don": [71, 75, 87, 93, 317], "return_contigu": [71, 75, 87, 93, 146, 316], "soon": [71, 75, 87, 88, 89, 93], "ndim": [71, 75, 87, 93], "concomitt": [71, 75, 87, 93], "workspac": [71, 75, 87, 93], "prevail": [71, 75, 87, 93, 130, 154], "creator": [72, 292, 293, 301, 302, 303], "substitut": [72, 144], "vecnorm": [72, 303], "env_creat": [72, 311], "test_env1": 72, "_td": 72, "observation_count": [72, 323], "test_env2": 72, "sleep": [72, 323], "ps": 72, "p1": 72, "p2": 72, "join": [72, 305, 312, 313], "9934": 72, "env_str": 73, "info_dict_read": 75, "set_info_dict_read": 75, "put": [75, 144, 303, 307, 312, 313, 314, 318], "read_act": 75, "read_don": 75, "reader": [75, 312], "interrupt": [75, 257], "nonsens": 75, "fallback": 75, "broken": [75, 146], "read_ob": 75, "dictat": [75, 209, 213, 238, 311, 318], "read_reward": 75, "baseinfodictread": 75, "info_dict": 75, "hoc": 75, "dict_read": 75, "default_info_dict_read": 75, "my_info_kei": 75, "some_env": 75, "placehold": [77, 139], "secur": 77, "behav": [77, 83, 184, 234, 319], "isaacgym": [78, 79], "isaacgymwrapp": [78, 305], "isaacgymenv": [79, 305], "webpag": 79, "isaac": 79, "essenc": 79, "04": [79, 311, 318, 321], "snake": [80, 81], "6x6": [80, 81], "td1": [81, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 311], "12x12": 81, "tsp50": 81, "tsp100": 81, "qualnam": 82, "marl": [82, 96, 102, 136, 177, 317], "leverag": [82, 88, 89, 311, 317, 323], "neural": [82, 88, 89, 156, 190, 212, 307, 312, 313, 314, 317, 318, 323], "group_map": [82, 88, 89, 96], "constructiuon": [82, 88, 89], "premad": [82, 88, 89, 249], "all_in_one_group": [82, 96], "agent_0": [82, 88, 89, 96], "agent_1": [82, 88, 89, 96], "agent_2": [82, 88, 89, 96], "agent_3": 82, "int8": [82, 88, 89], "one_group_per_ag": [82, 88, 89], "environn": 83, "constraint": [83, 313, 317], "mymbenv": [83, 155, 174], "world_model": [83, 155, 174, 231], "super": [83, 100, 107, 110, 155, 165, 174, 217, 223, 225, 228, 234, 239, 241, 243, 311, 318, 322], "hidden_observ": [83, 155, 174], "mlp": [83, 155, 156, 158, 159, 160, 161, 168, 170, 171, 174, 178, 199, 204, 226, 296, 307, 312, 316, 319, 322], "worldmodelwrapp": [83, 155, 174], "activation_class": [83, 155, 156, 158, 159, 160, 161, 166, 167, 172, 174, 177, 178, 312, 317, 322], "relu": [83, 155, 162, 174, 181, 221], "activate_last_lay": [83, 155, 161, 172, 174], "depth": [83, 155, 156, 158, 159, 160, 161, 166, 167, 172, 174, 177, 178, 182, 183, 204, 307, 312, 316, 317], "run_type_check": 83, "readthedoc": 84, "en": 84, "python_interfac": 84, "task_id": 84, "106": [86, 318], "my_env_fun": [87, 93], "custom_attribute_list": [87, 93], "custom_attribut": [87, 93], "custom_method_list": [87, 93], "custom_method": [87, 93], "deploi": [87, 93], "slight": [87, 93, 312], "overhead": [87, 93], "share_individual_td": [87, 93], "shared_memori": [87, 93], "policy_proof": [87, 93], "ll": [87, 93, 311, 312, 313, 314, 317, 323], "hidden": [87, 93, 166, 168, 170, 171, 182, 183, 188, 189, 199, 200, 201, 203, 212, 215, 224, 235, 238, 307, 314, 316, 322], "update_kwarg": [87, 93], "pettingzoo": [88, 89], "pet": [88, 89], "zoo": [88, 89], "guid": [88, 89, 91, 92, 134, 306, 311, 317], "__": [88, 89], "aecenv": [88, 89], "use_mask": [88, 89], "dead": [88, 89], "compulsori": [88, 89], "adversary_0": [88, 89], "adversari": [88, 89], "marlgroupmaptyp": [88, 89, 96, 305], "vectoris": [88, 89], "multiwalker_v9": 88, "return_st": [88, 89], "categorical_act": [88, 89, 91, 92], "n_piston": [88, 89], "21": [88, 89, 316, 317, 318], "pistonball_v6": [88, 89], "piston": [88, 89], "piston_0": [88, 89], "piston_1": [88, 89], "piston_20": [88, 89], "aec": [88, 89], "tictactoe_v3": [88, 89], "player": [88, 89], "player_1": [88, 89], "player_2": [88, 89], "butterfli": 89, "parallel_env": [89, 311, 322, 323], "roboh": 90, "expos": [90, 107, 110, 214, 312], "vikashplu": 90, "read_info": 90, "pars": [90, 320], "smacv2": [91, 92], "starcraft": [91, 92], "challeng": [91, 92, 318, 319], "v2": [91, 92, 246, 260, 261, 262, 263, 265, 266, 267, 268, 296], "10gen_terran": [91, 92], "10gen_zerg": [91, 92], "10gen_protoss": [91, 92], "3m": [91, 92], "8m": [91, 92], "25m": [91, 92], "5m_vs_6m": [91, 92], "8m_vs_9m": [91, 92], "10m_vs_11m": [91, 92], "27m_vs_30m": [91, 92], "mmm": [91, 92], "mmm2": [91, 92], "2s3z": [91, 92], "3s5z": [91, 92], "3s5z_vs_3s6z": [91, 92], "3s_vs_3z": [91, 92], "3s_vs_4z": [91, 92], "3s_vs_5z": [91, 92], "1c3s5z": [91, 92], "2m_vs_1z": [91, 92], "corridor": [91, 92], "6h_vs_8z": [91, 92], "2s_vs_1sc": [91, 92], "so_many_banel": [91, 92], "bane_vs_ban": [91, 92], "2c_vs_64zg": [91, 92], "old": [91, 92, 235, 323], "smac": [91, 92], "map_nam": [91, 92], "18": [91, 92, 94, 95, 178, 311, 313, 314, 317, 318, 323], "176": [91, 92, 318], "battle_won": [91, 92], "dead_al": [91, 92], "dead_enemi": [91, 92], "episode_limit": [91, 92], "322": [91, 92, 318], "Or": [91, 92, 177], "procedur": [91, 92], "distribution_config": [91, 92], "n_unit": [91, 92], "n_enemi": [91, 92], "team_gen": [91, 92], "dist_typ": [91, 92], "weighted_team": [91, 92], "unit_typ": [91, 92], "marin": [91, 92], "maraud": [91, 92], "medivac": [91, 92], "exception_unit_typ": [91, 92], "start_posit": [91, 92], "surrounded_and_reflect": [91, 92], "map_x": [91, 92], "map_i": [91, 92], "capability_config": [91, 92], "88": [91, 92, 311, 318, 320], "131": [91, 92, 318, 320], "starcraft2env": 92, "scenario": [94, 95, 311, 317, 318], "flock": [94, 95], "continuous_act": [94, 95, 317], "agent_collision_rew": [94, 95], "agent_distance_rew": [94, 95], "agent_nam": 96, "ca": 96, "environment4": 96, "get_group_map": 96, "sumbodul": 97, "model_bas": [98, 155, 174], "adapt": [100, 235, 311, 318], "masker": 100, "binarydiscretetensorspec": [100, 226, 228, 249, 305], "maskedenv": 100, "ones_lik": 100, "scatter": 100, "unsqueez": [100, 102, 103, 137, 140, 171, 311, 314, 317, 318], "_set_se": [100, 107, 110, 318], "transform_reward_spec": [101, 105, 106, 107, 108, 111, 117, 125, 128, 129, 131, 133, 138, 140], "as_invers": 102, "account": [102, 175, 176, 307, 312, 314, 320, 323], "movement": 102, "veloc": [102, 317, 318, 323], "propos": [102, 173, 233, 242, 296, 307, 314, 320], "pdf": [102, 157, 158, 159, 160, 161, 165, 185, 205, 208, 229, 239, 242, 251, 256, 264, 296], "1312": 102, "5602": 102, "uesd": 102, "unsqueezetransform": [102, 318, 320], "consumpt": 102, "followin": 102, "pictur": 102, "cartpol": [102, 312, 314, 320, 323], "pixels_trsf": [102, 320], "grayscal": [102, 312, 314, 320, 323], "tensordictreplaybuff": [102, 284, 299, 305, 311, 312, 314, 320], "data_exclud": [102, 320], "_buffer": 102, "transform_observation_spec": [102, 103, 104, 105, 106, 107, 108, 111, 113, 115, 116, 117, 119, 121, 125, 126, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 318], "del_kei": [103, 141, 316, 318], "unsqueeze_if_oor": 103, "observation_posit": 103, "observation_veloc": 103, "delet": 103, "key1": [103, 278, 286], "key2": [103, 278, 286], "crop": [104, 124, 270], "center": [104, 270], "width": [104, 126], "height": [104, 126], "squar": [104, 169, 193, 194, 270], "out_keys_inv": [105, 107, 110, 119, 120, 121, 125, 138, 318], "scalar": [105, 128, 159, 161, 179, 180, 202, 206, 208, 219, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 249, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 307, 312, 318], "permit": [105, 113, 140], "rewardsc": [106, 139, 311, 312, 314], "rewardclip": 106, "transformed_env": [106, 138, 139], "transform_env_devic": [106, 108, 138], "transform_input_spec": [106, 107, 108, 109, 119, 121, 125, 130, 133, 138, 140, 142], "transform_output_spec": [106, 107, 108, 111, 117, 125, 131, 133, 138], "untouch": [106, 107, 108, 111, 117, 125, 131, 133, 138], "transformfull_done_spec": [106, 107, 108, 111, 117, 125, 131, 133, 138], "dtype_in": 107, "dtype_out": 107, "scan": [107, 110, 214, 215], "resp": [107, 110], "anticip": [107, 110], "not_transform": [107, 110], "rule": [107, 110, 213, 307, 313], "constructedw": [107, 110], "myenv": [107, 110], "orig_devic": 108, "unspecifi": 108, "transform_done_spec": [108, 138], "num_actions_effect": 109, "max_act": 109, "include_forward": 109, "dimension": [109, 168, 170, 251, 256, 264, 317], "num_act": [109, 228], "action_out": 109, "_call": [109, 113, 318], "excluded_kei": 111, "finit": [112, 320], "first_dim": 113, "last_dim": 113, "allow_positive_dim": [113, 140], "th": [113, 140, 318], "frameskip": 113, "repeatedli": [114, 313, 317], "init_kei": 116, "is_init": [116, 168, 170, 208, 314], "tracker": 116, "coef": 117, "pi_curr": 117, "pi_0": 117, "constrain": [117, 168, 170, 238], "overfit": 117, "fine": [117, 319], "probabilist": [117, 209, 305, 313, 322], "get_dist": [117, 213, 214], "mod": [117, 168, 170, 216, 314], "normalparamextractor": [117, 307, 313, 317], "probabilisticactor": [117, 199, 200, 201, 203, 222, 223, 227, 228, 234, 237, 238, 239, 240, 241, 243, 307, 311, 313, 317], "tanhnorm": [117, 199, 200, 201, 209, 215, 222, 223, 234, 238, 239, 240, 241, 243, 305, 313, 317, 322], "n_ob": [117, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243], "n_act": [117, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243], "return_log_prob": [117, 199, 200, 201, 209, 213, 215, 240, 307, 313, 317, 322], "apply_": 117, "copy_": [117, 311], "formulat": 117, "diverg": [117, 168, 170, 209, 213, 231, 235], "noop": [118, 322], "30": [118, 188, 189, 311, 313, 317, 318], "trial": 118, "op": [118, 202, 206, 289], "randomli": [118, 119, 135, 206, 209, 213, 317, 318, 320], "noop_max": 118, "standard_norm": [119, 129, 311, 312, 314], "affin": [119, 129], "layer": [119, 144, 156, 158, 159, 166, 168, 170, 172, 177, 178, 179, 180, 182, 183, 190, 191, 197, 207, 216, 307, 312, 313, 314, 319], "normal": [119, 144, 156, 169, 172, 175, 176, 181, 193, 194, 202, 209, 213, 224, 235, 238, 283, 285, 303, 307, 309, 314, 317, 323], "set_default_tensor_typ": 119, "doubletensor": 119, "isclos": 119, "next_ob": [119, 251, 252, 253, 254, 322], "rubric": [119, 215], "init_stat": [119, 311, 312, 313, 314], "3752e": 119, "01": [119, 208, 219, 224, 235, 238, 311, 314, 317, 318, 321], "5087e": 119, "03": [119, 311, 318, 321], "9294e": 119, "9636": 119, "5608": 119, "6408": 119, "num_it": [119, 312, 313], "reduce_dim": [119, 311, 312, 313, 314], "cat_dim": [119, 311, 312, 313, 314], "keep_dim": [119, 312, 314], "constant": [119, 134, 309, 311, 313, 314, 323], "statist": [119, 144, 240, 303, 311, 312, 313, 323], "approach": [119, 311, 313, 323], "gaussian": [119, 135, 155, 174, 179, 180, 185, 202, 313], "empir": [119, 155, 174, 209, 213, 311, 313, 317], "3d": 119, "third": [119, 205, 317], "reorder": 121, "in_keys_in": 121, "al": [121, 155, 323], "pong": [121, 323], "v5": [121, 323], "210": [121, 318, 323], "160": [121, 314, 318, 323], "channel": [121, 177, 182, 183, 312], "r3m": [123, 319], "resnet": [123, 141, 143], "visual": [123, 141, 143, 313, 318], "embed": [123, 141, 142, 143, 186, 198, 199, 200, 201, 212, 217, 319], "ego4d": [123, 141, 143], "univers": [123, 141, 143], "suraj": [123, 141], "nair": [123, 141], "aravind": [123, 141], "rajeswaran": [123, 141], "vikash": [123, 141, 143], "kumar": [123, 141, 143], "chelsea": [123, 141], "finn": [123, 141], "abhinav": [123, 141], "gupta": [123, 141], "2203": [123, 141, 174, 319], "12601": [123, 141, 319], "_init": [123, 141, 311, 319], "snippet": [123, 141, 311], "resnet50": [123, 143, 319], "model_nam": [123, 141, 143, 273], "resnet34": 123, "resnet18": 123, "r3m_vec": [123, 319], "feed": [123, 143, 236, 307, 311, 317, 320], "244": [123, 143, 318], "stack_imag": [123, 143, 319], "tread": [123, 143], "separet": [123, 143], "hub": [123, 143], "resnet50_weight": [123, 143], "imagenet1k_v1": [123, 143], "download_path": [123, 143], "tensor_pixels_kei": [123, 143], "dest": [123, 141, 143, 212], "sub_seq_len": 124, "sample_dim": [124, 311], "primarili": 124, "hesit": 124, "request": 124, "robust": 124, "mix": [124, 186, 195, 249, 311, 317], "NOT": 124, "improp": 124, "create_copi": 125, "renam": [125, 127, 153, 311], "stuff": 125, "newnam": 125, "interpol": [126, 312, 314], "bilinear": [126, 314], "truncated_kei": [127, 133], "r2g": 127, "99": [127, 144, 174, 232, 245, 250, 257, 299, 311, 312, 313, 318, 322], "reward_to_go": 127, "bernoulli_": 127, "9010": 127, "9404": [127, 257], "9701": [127, 257], "9900": [127, 257], "0000": [127, 136, 206, 216, 257, 313, 314, 318, 322], "crash": 127, "clamp_min": 128, "clamp_max": 128, "clip_min": 128, "clip_max": 128, "episode_": 130, "reward1": 130, "reward2": 130, "episode_reward": [130, 317], "5926": 130, "4578": 130, "7885": 130, "keep_reward": 131, "keep_don": 131, "excludetransform": [131, 320], "squeeze_dim": 132, "step_count_kei": 133, "update_don": 133, "adaptec": 133, "accordingli": [133, 134, 210, 314], "completet": 133, "recognis": 133, "accompani": 133, "target_return": 134, "chosen": [134, 135, 186, 187, 195, 211, 296, 307], "conjunct": [134, 312], "hindsight": 134, "relabel": 134, "reward2gotransform": 134, "primer": [135, 314], "default_valu": [135, 314], "unit": [135, 155, 166, 182, 183, 188, 189, 313], "transfomedenv": 135, "mykei": 135, "__unless": 135, "exists__": 135, "dtype_or_devic": 135, "pool": 136, "increas": [136, 208, 317], "10th": 136, "0216": 136, "1149": 136, "1990": 136, "2749": 136, "3281": 136, "9290": 136, "3702": 136, "8978": 136, "from_int": 137, "255": [137, 318, 320], "ri": 137, "principl": 138, "cattransform": 138, "notabl": 138, "rewardsum": [138, 317], "cache_spec": 139, "anymor": [139, 212], "set_missing_toler": 139, "keyerror": 139, "unsqueeze_dim": [140, 318], "danger": 140, "vc1": 141, "vc1_vec": 141, "small": [141, 311, 313, 317, 323], "untrain": 141, "make_noload_model": 141, "naiv": 141, "vip": [142, 143, 319], "toward": 143, "implicit": [143, 234, 320], "jason": 143, "ma": 143, "shagun": 143, "sodhani": 143, "dinesh": 143, "jayaraman": 143, "osbert": 143, "bastani": 143, "ami": 143, "zhang": 143, "vip_vec": 143, "shared_td": 144, "decai": [144, 202, 206, 242, 285, 311, 312, 314, 323], "9999": [144, 318], "0001": [144, 166, 181, 313, 318], "fly": [144, 235, 308, 313, 318, 320, 323], "to_observation_norm": 144, "underflow": [144, 285], "build_td_for_shared_vecnorm": 144, "memmori": 144, "memmap_": 144, "queue": [144, 320], "td_share": 144, "v": [144, 199, 234, 241, 307, 311, 312], "state_dim": [145, 157, 162, 185, 188, 189, 203], "action_dim": [145, 157, 158, 160, 162, 185, 203, 311, 316], "gsde": [145, 239, 303], "func": 145, "gsdemodul": 145, "check_dtyp": 146, "short": [146, 312, 313, 317], "discrep": [146, 222, 224, 225, 226, 235, 238, 240, 249], "imposs": 146, "probabilistictdmodul": [151, 152, 172, 209, 213, 250, 283], "next_tensordict": 153, "keep_oth": [153, 318], "exclude_reward": 153, "exclude_don": 153, "exclude_act": 153, "next_": 153, "funtion": [153, 318], "write_full_fals": 154, "leav": [154, 311], "cross": 155, "entropi": [155, 222, 223, 224, 228, 234, 235, 237, 238, 239, 241, 243, 317], "botev": 155, "et": 155, "2013": 155, "cem": 155, "plan": [155, 173, 174], "varianc": [155, 169, 181, 193, 194, 308, 311, 313, 317], "rank": 155, "k": 155, "repeat": [155, 313, 317, 318], "maximis": [155, 158, 160, 174, 307, 311, 312, 313, 317, 318], "horizon": [155, 174, 313], "modelbasedenv": [155, 174], "planning_horizon": [155, 174], "optim_step": [155, 174], "mpc": [155, 173, 174], "num_candid": [155, 174], "candid": [155, 174], "top_k": [155, 174], "modelbasedenvbas": [155, 173, 174, 305], "safemodul": [155, 173, 199, 201, 213, 222, 223, 228, 234, 238, 239, 240, 241, 243, 292, 293, 299, 305, 322], "next_hidden_observ": 155, "num_cel": [156, 158, 159, 160, 161, 166, 167, 168, 170, 172, 177, 178, 199, 312, 313, 314, 317, 322], "elu": [156, 158, 159, 160, 161, 166, 167, 177, 312, 322], "activation_kwarg": [156, 172], "norm_class": [156, 158, 159, 172], "norm_kwarg": [156, 172], "bias_last_lay": [156, 158, 159, 160, 161, 167, 172], "aggregator_class": [156, 158, 159, 312, 314, 322], "squashdim": [156, 158, 177, 322], "aggregator_kwarg": [156, 158, 159, 312, 314], "squeeze_output": [156, 158, 159, 312, 314], "convolut": [156, 158, 159, 177, 190], "produc": [156, 172, 178, 184, 199, 201, 203, 270, 313, 314, 320, 323], "cell": [156, 172, 177, 178, 313], "kernel": [156, 167, 171, 177], "cnet": 156, "34": [156, 172, 311, 313, 318, 321], "35": [156, 172, 318], "rectangular": 156, "transformer_config": [157, 185, 203], "decisiontransform": [157, 185], "dtconfig": [157, 162, 185], "2202": [157, 162, 185, 237], "05607": [157, 162, 185, 237], "return_to_go": [157, 162, 185, 203], "conv_net_kwarg": [158, 159], "mlp_net_kwarg": [158, 159, 160], "use_avg_pool": [158, 159], "WITH": [158, 159, 160, 161, 208, 242], "1509": [158, 159, 160, 161, 174, 208, 233, 242, 318], "02971": [158, 159, 160, 161, 208, 242], "convnet": [158, 177, 314, 322], "ndims_in": 158, "avgpool": [158, 159], "adaptiveavgpool2d": [159, 312, 314], "400": [160, 161, 317, 318, 320], "mlp_net_kwargs_net1": 161, "mlp_net_kwargs_net2": 161, "decion": 162, "desdescrib": 162, "n_embd": 162, "n_layer": 162, "n_head": 162, "n_inner": 162, "n_posit": 162, "resid_pdrop": 162, "attn_pdrop": 162, "gpt2config": 162, "atol": [163, 192], "06": [163, 192, 311, 314, 317, 318], "rtol": [163, 192], "batch_shap": [163, 192], "event_shap": [163, 192], "absolut": [163, 192, 311], "densiti": [163, 175, 176, 184, 194], "mass": [163, 175, 176, 184, 194, 318], "rsampl": [163, 176, 184, 213], "sample_shap": [163, 175, 176, 184], "dqnet": 164, "atom": 164, "softmax": [164, 176, 184, 204, 205], "action_spac": [165, 187, 204, 205, 210, 211, 222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 314], "var_num": [165, 187, 204, 205, 211], "action_value_kei": [165, 187, 204, 205, 210, 211, 236, 249], "action_mask_kei": [165, 187, 204, 205, 206, 210, 211], "perspect": [165, 205, 229, 313], "1707": [165, 205, 229, 238], "06887": [165, 205, 229], "mult": [165, 178, 187, 204, 205, 210, 211], "functional_modul": [165, 187, 210, 212, 215, 307], "make_funct": [165, 187, 209, 210, 212, 215, 217, 236, 307, 322], "tensordict_modul": [165, 187, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 225, 228, 234, 238, 239, 240, 241, 243, 307], "nbin": [165, 204, 307], "customdistributionalqv": 165, "log_softmax": [165, 204], "one_hot": [165, 176, 187], "qvalue_actor": [165, 187, 204, 210, 307], "std_bia": 166, "std_min_val": 166, "belief": [166, 182, 188, 189], "1912": [166, 230, 231, 232], "01603": [166, 230, 231, 232], "softplu": [166, 181, 219, 220, 221], "out_features_valu": 167, "cnn_kwarg": [167, 312], "mlp_kwarg": [167, 171, 312], "duel": 167, "cnn": [167, 177, 312, 322], "06581": 167, "512": [167, 318, 320], "embedd": [168, 170, 171], "gru": 168, "grucel": [168, 212], "input_s": [168, 170, 171, 314], "hidden_s": [168, 170, 171, 314], "num_lay": [168, 170, 182, 183], "introduc": [168, 170, 208, 311], "proj_siz": 168, "recurrent_st": [168, 314], "custom_kei": [168, 170], "recurrent_mod": [168, 170], "set_recurrent_mod": [168, 170, 314], "seq": [168, 170, 314, 316], "gru_modul": 168, "rs": [168, 311], "gru_module_train": 168, "policy_train": [168, 170], "traj_td": [168, 170], "batch_first": [168, 170, 314], "policy_infer": [168, 170], "td_inf": [168, 170], "assert_clos": [168, 170], "upscal": [169, 193, 194], "tanh_loc": [169, 193, 194], "event_dim": [169, 192, 193], "ultim": [169, 193, 194], "poor": [169, 193, 194], "explos": [169, 193, 194], "switch": [169, 194], "sigma": [169, 185, 193, 194, 202, 208, 313], "formula": [169, 193, 194, 222, 224, 235, 238, 308, 313], "lstmcell": 170, "trust": 170, "correspont": 170, "b_ih": 170, "b_hh": 170, "recurrent_state_h": [170, 314], "recurrent_state_c": [170, 314], "triplet": [170, 210, 211], "lstm_modul": 170, "rs_h": 170, "rs_c": 170, "hidden0": 170, "hidden1": 170, "lstm_kwarg": 171, "next_observ": [171, 222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 316], "time_step": 171, "2d": [171, 317], "hidden0_in": 171, "hidden1_in": 171, "hidden0_out": 171, "hidden1_out": 171, "single_bias_last_lay": 172, "layer_class": 172, "layer_kwarg": 172, "perceptron": 172, "seamless": 172, "lazylinear": [172, 307, 313, 318, 319, 322], "42": [172, 222, 223, 225, 234, 241, 314, 318], "noisylinear": [172, 179, 305, 312], "noisylazylinear": [172, 305], "At": [173, 206, 312, 313, 314, 316, 318, 319], "mpcplanner": 173, "tensordict_out": [173, 323], "mppi": 174, "covari": 174, "william": [174, 240], "aldrich": 174, "theodor": 174, "01149": 174, "hansen": 174, "wang": 174, "su": 174, "04955": 174, "valueoper": [174, 199, 200, 201, 222, 223, 224, 225, 228, 234, 235, 238, 239, 240, 241, 243, 299, 307, 311, 313], "tdlambdaestim": [174, 305, 311], "value_net": [174, 226, 240, 251, 252, 253, 254, 313], "adv": 174, "lmbda": [174, 245, 251, 254, 256, 262, 263, 264, 267, 268, 308, 311, 313, 317], "95": [174, 245, 311, 313, 314, 318], "value_network": [174, 225, 226, 229, 234, 241, 251, 252, 253, 254, 308, 311, 313], "temperatur": [174, 223, 234], "neg_inf": [175, 176], "inf": [175, 176], "padding_valu": [175, 176], "www": [175, 176], "api_doc": [175, 176], "tf_agent": [175, 176], "event": [175, 176, 184, 260, 261, 262, 263, 265, 266, 267, 268, 320], "unnorm": [175, 176, 184], "sparse_mask": [175, 176], "dens": [175, 176], "0831": [175, 176], "1203": [175, 176], "0928": [175, 176], "1972": [175, 176], "grad_method": [176, 184], "reparamgradientstrategi": [176, 184], "passthrough": [176, 184], "proxi": [176, 184, 308], "relaxedonehot": [176, 184], "zeros_lik": [176, 318], "sample_non_valid": 176, "centralis": [177, 178, 317], "share_param": [177, 178, 317], "basi": [177, 320], "homogen": [177, 178, 317], "agent_network": [177, 178], "modulelist": [177, 178, 296, 322], "lazyconv2d": [177, 322], "2592": 177, "decentralis": [177, 317], "28": [177, 314, 318], "n_agent_input": [178, 317], "n_agent_output": [178, 317], "toech": 178, "centalis": 178, "shown": [178, 307, 316, 317, 320], "std_init": [179, 180], "matrix": [179, 180], "initialize_paramet": 179, "isol": 179, "1706": [180, 195], "10295v3": 180, "induc": 180, "aid": 180, "scale_map": 181, "biased_softplus_1": 181, "scale_lb": [181, 188, 189], "exp": [181, 221], "module_norm": 181, "decod": 182, "1803": [182, 183, 186], "10122": [182, 183], "els": [182, 307, 309, 311, 312, 313, 314, 317, 318, 319], "rnn_hidden": 182, "latent": 183, "excacli": 184, "inres": 185, "mu": [185, 208, 313], "state_shap": [186, 249], "mixing_embed_dim": [186, 249], "qmix": [186, 317], "mixer": [186, 195, 249], "monoton": 186, "hyper": 186, "11485": 186, "qmixerloss": [186, 195], "qmix_vdn": [186, 195], "eventu": [186, 314, 318], "vdn": [186, 195], "greedi": [187, 205, 206, 211, 312, 314], "hidden_dim": [188, 189], "posterior": [188, 231], "rssm": [188, 189, 231], "1811": [188, 189], "04551": [188, 189], "obs_embed": 188, "rnn_hidden_dim": 189, "dream": 189, "tanhtransform": 193, "decomposit": 195, "05296": 195, "vmap": [196, 212, 215, 322], "hide": [196, 313, 317], "satisfi": [196, 307], "tensordictmodulebas": [196, 204, 210, 314], "vmap_dim": 196, "lam": 196, "sample_in": 196, "sample_in_td": 196, "vm": 196, "translat": [198, 209], "character": [198, 204, 209, 210, 212, 320], "overflow": [198, 204, 205, 209, 210, 211, 212, 213], "td_modul": [198, 199, 200, 201, 209, 212, 213, 215, 217, 322], "3635": 198, "0340": 198, "1476": 198, "3911": [198, 318], "1664": [198, 318], "5455": 198, "2247": 198, "4583": 198, "2916": 198, "2160": 198, "5337": 198, "5193": 198, "grad_fn": [198, 206, 322], "addmmbackward0": 198, "actorvalueoper": [199, 307], "get_policy_oper": [199, 200, 201, 224, 235, 238, 307], "standalon": [199, 200, 201], "tdmodul": [199, 200, 201, 299], "get_critic_oper": 199, "common_oper": [199, 201], "policy_oper": [199, 200, 201], "value_oper": [199, 200, 201], "normalparamwrapp": [199, 200, 201, 209, 215, 222, 223, 228, 234, 238, 239, 240, 241, 243, 305, 322], "module_hidden": [199, 201], "td_module_hidden": [199, 201], "module_act": [199, 201], "td_module_act": [199, 200, 201], "module_valu": [199, 200, 201], "td_module_valu": [199, 200, 201], "state_action_valu": [199, 217, 223, 241, 250, 296, 299, 307, 311, 322], "td_clone": [199, 200, 201], "tensordictmodulewrapp": [199, 292, 293, 299], "get_policy_head": [199, 200, 201], "safesequenti": [199, 200, 201, 249], "head": [199, 201, 224, 235, 238], "get_value_head": [199, 200, 201], "get_value_oper": [199, 200, 201, 224, 235, 238], "action_modul": 200, "state_valu": [200, 201, 217, 224, 235, 238, 239, 241, 251, 252, 253, 254, 256, 258, 260, 262, 264, 265, 267, 307, 311, 313, 317], "qualiti": [201, 307], "actorcriticoper": [201, 224, 235, 238, 307], "embeddig": 201, "refet": 201, "actorcriticwrapp": [201, 307, 311], "po": 202, "sigma_init": 202, "epsilon": [202, 206, 208, 242, 285, 312, 313, 314], "sigma_end": 202, "annealing_num_step": [202, 206, 208, 311, 312, 314], "captur": [202, 206, 208], "omiss": [202, 206, 208], "ommit": [202, 206, 208, 320], "inferec": 203, "set_tensor_kei": 203, "dt_inference_wrapp": 203, "baz": 203, "inference_context": 203, "obs_dim": 203, "tanhdelta": [203, 305, 311], "dtactor": 203, "actor_modul": [203, 322], "dist_class": 203, "dist_kwarg": 203, "distribution_kwarg": [203, 209, 213, 313, 317], "inference_actor": 203, "sequence_length": 203, "mask_context": 203, "qvaluemodul": [204, 210, 249, 314], "distributionaldqnnet": 204, "make_log_softmax": 204, "my_action_valu": [205, 211], "chanc": 205, "thid": 205, "threshold": [206, 223, 224, 313], "eps_init": [206, 208, 312, 314], "eps_end": [206, 208, 312], "explorative_polici": [206, 208], "9055": [206, 318], "9277": 206, "6295": 206, "2532": 206, "addbackward0": 206, "lmheadmodel": 207, "extract": [207, 311, 313], "actor_head": [207, 224, 235, 238], "base_model": 207, "lm_head": 207, "ornstein": 208, "uhlenbeck": 208, "ou": [208, 311], "correl": 208, "sort": 208, "noise_t": 208, "noise_": 208, "theta": [208, 313, 318], "sigma_t": 208, "sqrt": 208, "sigma_": 208, "anneal": 208, "ou_prev_nois": 208, "ou_step": 208, "x0": 208, "sigma_min": 208, "n_steps_ann": 208, "is_init_kei": 208, "_ou_prev_nois": 208, "_ou_step": 208, "default_interaction_typ": [209, 213], "interaction_typ": [209, 213], "set_interaction_typ": [209, 213], "cache_dist": [209, 213], "n_empirical_estim": [209, 213], "chose": 211, "functionalmodul": 212, "functionalmodulewithbuff": 212, "td_fmodul": 212, "td_function": 212, "td_state": 212, "ensembl": [212, 239], "params_repeat": 212, "td_vmap": [212, 215], "random_sampl": [212, 213], "suppli": 213, "fist": 213, "log_prob_kei": [213, 317], "probabilistictensordictsequenti": [214, 222, 224, 235, 238, 240, 292, 293, 322], "partial_toler": [214, 215, 316], "who": [214, 215], "AND": [214, 215], "tensordictsequenci": 215, "tensordictsequ": 215, "safeprobabilisticmodul": [215, 307], "spec1": 215, "net1": 215, "module1": 215, "td_module1": 215, "spec2": 215, "module2": 215, "td_module2": 215, "clamp": [216, 231, 287, 318], "boundari": [216, 313, 317], "resolut": 216, "simplest": [216, 311, 313, 314, 317, 320, 323], "9944": 216, "9991": 216, "3020": 216, "2299": [216, 318], "5418": 216, "2989": 216, "6849": 216, "3169": 216, "2690": 216, "9649": [216, 318], "5686": 216, "8602": 216, "0315": 216, "8455": [216, 318], "6027": 216, "4746": 216, "7843": 216, "7782": 216, "2111": 216, "5115": 216, "4687": 216, "5760": 216, "custommodul": 217, "cat": [217, 223, 225, 234, 239, 241, 243, 322], "imaginari": 218, "imagin": 218, "transition_model": 218, "get_reward_oper": 218, "get_transition_model_oper": 218, "min_val": [219, 221], "bias": [219, 308, 311], "_bia": 219, "invert": [220, 313], "surject": 221, "expln": 221, "biased_softplu": [221, 305], "beggin": 221, "biased_softplus_": 221, "syntax": [221, 311], "met": [221, 318], "1602": 222, "01783v2": 222, "entropy_bonu": [222, 224, 235, 238, 313], "favour": [222, 224, 235, 238], "samples_mc_entropi": [222, 224, 235, 237, 238], "mont": [222, 224, 235, 238, 311], "carlo": [222, 224, 235, 238, 311], "entropy_coef": [222, 224, 235, 238, 313, 317], "critic_coef": [222, 224, 235, 238, 313], "loss_critic_typ": [222, 224, 235, 238, 240, 313], "l1": [222, 224, 225, 226, 228, 235, 238, 239, 240, 243, 246, 249, 307, 311], "l2": [222, 224, 225, 226, 227, 228, 231, 232, 235, 238, 239, 240, 243, 246, 249, 311], "smooth_l1": [222, 223, 224, 225, 226, 228, 234, 235, 238, 239, 240, 241, 243, 246, 249, 313], "separate_loss": [222, 224, 225, 228, 234, 235, 238, 239, 240, 241, 243], "propag": [222, 224, 225, 228, 234, 235, 238, 239, 240, 241, 243, 251, 252, 253, 254, 313, 317], "advantage_kei": [222, 224, 235, 238, 240, 251, 252, 253, 254], "value_target_kei": [222, 224, 235, 238, 240, 251, 252, 253, 254, 313], "value_target": [222, 224, 235, 238, 240, 251, 252, 253, 254, 313, 317], "loss_crit": [222, 238, 313, 317], "loss_entropi": [222, 238, 313, 317], "loss_object": [222, 238, 313, 317], "recur": [222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 251, 252, 253, 254, 255], "next_reward": [222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 251, 252, 253, 254], "next_don": [222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 251, 252, 253, 254], "next_termin": [222, 223, 225, 226, 228, 234, 238, 239, 240, 241, 243, 251, 252, 253, 254], "loss_obj": 222, "sacloss": [222, 233, 242, 305], "select_out_kei": [222, 223, 225, 228, 234, 238, 239, 241, 243], "essenti": [222, 223, 224, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 249, 312, 318, 320], "make_value_estim": [222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 244, 249, 308, 311, 312, 317], "value_typ": [222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 245, 249, 311], "valueestim": [222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 245, 249, 305, 308, 311, 317], "hyperparam": [222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 311, 318], "enum": [222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 245, 249, 311], "default_value_estim": [222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 311], "refin": [222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249], "default_value_kwarg": [222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 249, 305, 311], "dqnloss": [222, 223, 225, 228, 229, 230, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 249, 294, 305, 308, 312, 314], "dqn_loss": [222, 223, 225, 226, 228, 229, 230, 234, 236, 238, 239, 240, 241, 243, 244, 249], "conserv": 223, "2006": [223, 318], "04779": 223, "actor_network": [223, 225, 227, 228, 234, 237, 239, 241, 243, 311], "qvalue_network": [223, 228, 234, 239, 241, 243], "loss_funct": [223, 225, 226, 227, 228, 234, 239, 241, 243, 246, 249, 311], "alpha_init": [223, 228, 237, 239, 241], "min_alpha": [223, 228, 237, 239, 241], "max_alpha": [223, 228, 237, 239, 241], "fixed_alpha": [223, 228, 237, 239, 241], "target_entropi": [223, 228, 237, 239, 241], "prod": [223, 237, 241], "n_action": [223, 226, 237, 241], "delay_actor": [223, 225, 241, 243], "delay_qvalu": [223, 228, 239, 241, 243], "min_q_weight": 223, "max_q_backup": 223, "backup": 223, "deterministic_backup": 223, "num_random": 223, "with_lagrang": 223, "lagrang": 223, "lagrange_thresh": 223, "valueclass": [223, 225, 228, 234, 239, 241, 243], "qvalu": [223, 228, 234, 239, 241, 243, 296], "loss_actor": [223, 225, 228, 234, 239, 240, 241, 243, 282, 311, 322], "loss_alpha": [223, 228, 239, 241], "loss_alpha_prim": 223, "loss_qvalu": [223, 228, 234, 239, 241, 243], "clip_epsilon": [224, 313, 317], "normalize_advantag": [224, 235, 238, 317], "value_kei": [224, 235, 238, 251, 252, 253, 254, 311], "somemodul": [224, 235, 238], "someactor": [224, 235, 238], "value_head": [224, 235, 238], "somevalu": [224, 235, 238], "loss_modul": [224, 233, 235, 236, 238, 242, 287, 298, 299, 308, 309, 311, 312, 313, 317, 320], "ppoloss": [224, 235, 305], "delay_valu": [225, 226, 229, 240, 241, 249, 312, 314], "loss_valu": [225, 234, 240, 241, 311, 313, 317, 322], "pred_valu": [225, 243, 311, 322], "pred_value_max": [225, 311, 322], "target_valu": [225, 239, 243, 250, 308, 311, 322], "target_value_max": [225, 311, 322], "qvalueactor": [226, 249, 307, 312, 314], "mult_one_hot": [226, 228, 249], "loss_val": [226, 308, 311, 313, 314, 317, 320], "2106": 227, "01345": 227, "ste": 228, "num_qvalue_net": [228, 234, 239, 241, 243], "target_entropy_weight": 228, "onehotcategor": [228, 305], "disctount": 229, "distributionalqvalueactor": [229, 307], "input_tensordict": [229, 311], "actor_model": 230, "value_model": [230, 232], "model_based_env": 230, "dreamerenv": [230, 305], "imagination_horizon": 230, "unrol": [230, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268], "discount_loss": [230, 232], "lambda_kl": 231, "lambda_reco": 231, "lambda_reward": 231, "reco_loss": 231, "reward_loss": 231, "free_nat": 231, "nat": 231, "delayed_clamp": 231, "global_averag": 231, "value_loss": 232, "fake_data": 232, "ddpgloss": [233, 242, 299, 305, 311, 322], "td3loss": [233, 242, 305], "value_network_update_interv": 233, "contrast": [233, 320], "06461": 233, "2110": 234, "06169": 234, "expectil": 234, "tau": [234, 242, 311, 312], "antmaz": 234, "sticht": 234, "loss_value_diff": 234, "diff": 234, "old_polici": 235, "new_polici": 235, "distanc": [235, 246, 250, 251, 317], "apart": [235, 317], "dtarg": 235, "samples_mc_kl": 235, "analyt": 235, "decrement": 235, "loss_": [236, 282, 308, 311], "equip": [236, 314], "gh": 236, "_acceptedkei": 236, "dataclass": [236, 296], "_forward_value_estimator_kei": 236, "alter": [236, 307], "value_estim": [236, 251, 252, 253, 254, 255, 308, 311, 317], "myloss": 236, "action2": 236, "convert_to_funct": [236, 311], "expand_dim": 236, "create_target_param": [236, 311], "compare_against": [236, 311], "funs_to_decor": 236, "stuctur": 236, "_param": 236, "expans": 236, "resampl": 236, "_target_param": 236, "valueestimatorbas": [236, 305], "blend": 236, "upcom": [236, 260, 261, 262, 263, 265, 266, 267, 268, 311], "proxim": [238, 313, 317], "optimis": [238, 283, 313, 317], "flavour": [238, 317, 322], "clipppoloss": [238, 305, 313, 317], "klpenppoloss": [238, 305], "regularis": 238, "06347": 238, "gae": [238, 305, 308, 311, 313, 317], "ppo_loss": 238, "tdlambda": [238, 245, 308, 311], "base_lay": 238, "randn_lik": 238, "samplelogprob": 238, "openreview": [239, 296], "ay8zfzm0tdd": [239, 296], "sub_sample_len": 239, "subsampl": [239, 278, 309], "action_log_prob_actor": 239, "state_action_value_actor": [239, 243], "connectionist": 240, "1992": 240, "doi": 240, "1007": 240, "bf00992696": 240, "actor_net": [240, 311, 313], "1801": 241, "01290": 241, "applic": [241, 249, 318], "1812": 241, "05905": 241, "redqloss": [242, 305], "math": 242, "theta_t": [242, 318], "theta_": [242, 318], "polyak": 242, "policy_nois": 243, "noise_clip": 243, "next_state_valu": [243, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 305], "td0": [244, 311], "strict_shap": 246, "view_a": 246, "qmixer": [249, 305], "local_valu": 249, "visibl": [249, 317], "dafault": 249, "acceptedkei": 249, "global_valu": 249, "penultim": 249, "local_value_network": 249, "mixer_network": 249, "suggest": [249, 317], "value_modul": [249, 313, 322], "qnet": [249, 311], "next_val_kei": 250, "pred_next_v": 250, "usus": 250, "mse": 250, "q_valu": 250, "n_steps_to_next": 250, "value_next_st": 250, "1506": [251, 256, 264], "02438": [251, 256, 264], "exponenti": [251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 285], "average_ga": [251, 313], "skip_exist": [251, 252, 253, 254], "advang": 251, "gradient_mod": 251, "value_error": [251, 252, 253, 254, 255], "sign": 251, "unused_arg": 251, "target_param": [251, 252, 253, 254, 255, 311, 317], "98": [251, 252, 253, 254, 318], "94": [251, 254, 318], "unpack": [251, 252, 253, 254], "tensor_kei": [251, 252, 253, 254, 255], "next_valu": [251, 252, 253, 254, 255], "aka": [252, 312], "average_reward": [252, 253, 254], "tdestim": [252, 253, 255], "infti": 253, "valuefunctionbas": 255, "time_dim": [256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268], "old_stat": [256, 258, 260, 262, 264, 265, 267], "new_stat": [256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "did": [257, 312, 313, 320, 323], "rolling_gamma": [260, 261, 262, 263, 265, 266, 267, 268], "g1": [260, 261, 262, 263, 265, 266, 267, 268], "g2": [260, 261, 262, 263, 265, 266, 267, 268], "g3": [260, 261, 262, 263, 265, 266, 267, 268], "g4": [260, 261, 262, 263, 265, 266, 267, 268], "v3": [260, 261, 262, 263, 265, 266, 267, 268], "v4": [260, 261, 262, 263, 265, 266, 267, 268, 311, 313, 319], "out_file_bas": 269, "skip_reset": 269, "dump": 269, "interv": [269, 270, 279, 289, 312, 318], "center_crop": 270, "make_grid": 270, "Will": 270, "grid": 270, "exp_nam": [271, 272, 275, 276, 277, 299, 312], "log_dir": [271, 272, 274, 276, 312], "templat": 271, "csv": [272, 274, 312], "minim": [272, 320], "dependeci": 272, "experiment_nam": [273, 274], "uuid": [273, 312, 323], "date": 273, "logger_typ": 274, "logger_nam": 274, "tensorboard": [274, 276, 322], "wandb": [274, 277, 322], "mlflow": [274, 275], "wandb_kwarg": 274, "mlflow_kwarg": 274, "tracking_uri": 275, "uri": 275, "datastor": 275, "tb_log": 276, "tensoarboard": 276, "sub_traj_len": 278, "min_sub_traj_len": 278, "register_op": [278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 309, 312], "process_optim_batch": [278, 284, 285, 309], "td_out": [278, 286], "_process_optim_batch_hook": [278, 309], "batch_subsampl": 278, "clear_cuda": 279, "pre_optim_step": [279, 309], "counter": [280, 309], "log_pbar": [280, 281, 283, 285, 309, 312], "progress": [280, 281, 283, 287, 309, 312, 314, 323], "count_fram": 280, "pre_steps_log": [280, 281, 309], "count_frames_log": 280, "lognam": 281, "r_train": 281, "log_reward": [281, 312], "loss_compon": 282, "appl": 282, "omit": [282, 313, 318, 320], "optimizer_hook": 282, "record_interv": [283, 311, 312], "record_fram": [283, 290, 311, 312], "policy_explor": [283, 299, 311, 312], "log_kei": [283, 312], "suffix": 283, "underestim": 283, "suppos": [283, 309, 323], "set_exploration_typ": [283, 305, 313, 314, 322], "r_evalu": [283, 311], "flatten_tensordict": [284, 312], "max_dim": 284, "rb_trainer": 284, "batch_process": [284, 285, 286, 309], "post_loss": [284, 309], "999": [285, 312], "jitter": 285, "finfo": 285, "default_dtyp": 285, "get_default_dtyp": 285, "reward_norm": 285, "update_reward_stat": 285, "normalize_reward": 285, "make_train": [286, 305], "_process_batch_hook": [286, 309], "select_kei": [286, 309], "versatil": 287, "lossmodul": [287, 298, 299, 305], "optim_steps_per_batch": [287, 309, 312], "epoch": [287, 313, 317], "clip_grad_norm": 287, "clip_norm": 287, "progress_bar": 287, "tqdm": [287, 311, 313, 314, 317, 318], "save_trainer_interv": 287, "disk": [287, 309, 311, 312, 314, 320], "log_interv": [287, 312], "save_trainer_fil": [287, 309], "datacollectorbas": [289, 292, 293, 299, 305], "update_weights_interv": [289, 312], "sit": [289, 312], "update_weight": 289, "post_step": [289, 309], "cfg": [290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303], "dictconfig": [290, 291, 292, 293, 296, 297, 298, 299, 300, 303], "divid": [290, 307, 311, 317, 318], "unknowingli": 290, "annealing_fram": [290, 311], "init_env_step": [290, 291, 311], "proof_environ": [291, 296, 311], "sta": 291, "ot": 291, "actor_model_explor": [292, 293, 311], "make_env_kwarg": [292, 293], "targetnetupdat": [294, 295, 298, 299], "redqloss_deprec": 295, "actor_net_kwarg": 296, "qvalue_net_kwarg": 296, "observation_kei": 296, "dummi": [296, 311, 323], "parser_env_arg": 296, "parser_model_args_continu": 296, "cattensor": [296, 311, 316, 318, 323], "hydra": 296, "config_stor": 296, "configstor": 296, "halfcheetah": [296, 311], "config_field": 296, "config_cl": 296, "redqmodelconfig": 296, "envconfig": 296, "make_dataclass": 296, "cls_name": 296, "cs": 296, "config_path": 296, "config_nam": 296, "17": [296, 311, 313, 318], "replayargsconfig": 297, "target_net_updat": [299, 311, 312], "constitu": 299, "learnt": [299, 311, 313], "tensorboardlogg": [299, 305], "egreedywrapp": [299, 312, 314], "env_proof": 299, "obs_spec": 299, "net_valu": 299, "dir": [299, 309, 312], "gettempdir": 299, "argpars": [300, 303], "namespac": [300, 303], "parser": [300, 303], "transformed_env_constructor": [300, 305], "num_env_per_collector": [301, 302], "video_tag": 303, "norm_obs_onli": 303, "use_env_cr": 303, "custom_env_mak": 303, "custom_env": 303, "return_transformed_env": 303, "action_dim_gsd": 303, "state_dim_gsd": 303, "obs_norm_state_dict": 303, "wheter": 303, "maker": 303, "asyncdatacollector": 305, "distributedsyncdatacollector": 305, "submitit_delayed_launch": 305, "raycollector": 305, "samplerwithoutreplac": [305, 313, 317, 320], "tensorstorag": 305, "tensordictroundrobinwrit": 305, "d4rlexperiencereplai": 305, "openmlexperiencereplai": 305, "unboundeddiscretetensorspec": [305, 323], "lazystackedtensorspec": 305, "lazystackedcompositespec": 305, "prompttensordicttoken": 305, "rolloutfrommodel": 305, "tokenizeddatasetload": 305, "create_infinite_iter": 305, "consolidate_spec": 305, "check_no_exclusive_kei": 305, "contains_lazy_spec": 305, "check_marl_group": 305, "tensordictrecord": 305, "videorecord": [305, 313], "get_available_librari": 305, "set_exploration_mod": 305, "make_composite_from_td": [305, 318], "terminated_or_trunc": 305, "braxwrapp": 305, "dmcontrolenv": [305, 311, 316, 323], "dmcontrolwrapp": [305, 323], "jumanjienv": 305, "jumanjiwrapp": 305, "multithreadedenvwrapp": 305, "openmlenv": 305, "pettingzooenv": 305, "pettingzoowrapp": 305, "robohiveenv": 305, "smacv2env": 305, "smacv2wrapp": 305, "vmaswrapp": 305, "qvaluehook": 305, "distributionalqvaluehook": 305, "reset_nois": 305, "cemplann": 305, "mpcplannerbas": 305, "mppiplann": 305, "independentnorm": 305, "truncatednorm": 305, "maskedonehotcategor": 305, "inv_softplu": 305, "vmapmodul": 305, "distributionaldqnloss": [305, 312], "discretesacloss": 305, "iqlloss": 305, "cqlloss": 305, "dtloss": 305, "onlinedtloss": 305, "a2closs": 305, "reinforceloss": 305, "dreameractorloss": 305, "dreamermodelloss": 305, "dreamervalueloss": 305, "td0estim": [305, 311], "td1estim": [305, 311], "td0_return_estim": 305, "td0_advantage_estim": 305, "td1_return_estim": 305, "vec_td1_return_estim": 305, "td1_advantage_estim": 305, "vec_td1_advantage_estim": 305, "td_lambda_return_estim": 305, "vec_td_lambda_return_estim": 305, "td_lambda_advantage_estim": 305, "vec_td_lambda_advantage_estim": 305, "generalized_advantage_estim": 305, "vec_generalized_advantage_estim": 305, "reward2go": 305, "distance_loss": [305, 311], "hold_out_net": 305, "hold_out_param": [305, 311], "softupd": [305, 311, 312, 314], "hardupd": [305, 311], "batchsubsampl": [305, 309], "clearcudacach": 305, "countframeslog": 305, "logreward": [305, 309, 312], "optimizerhook": [305, 312], "replaybuffertrain": [305, 309, 312], "rewardnorm": 305, "selectkei": [305, 309], "trainerhookbas": [305, 309, 312], "updateweight": [305, 309, 312], "make_collector_offpolici": 305, "make_collector_onpolici": 305, "make_dqn_loss": 305, "make_redq_loss": 305, "make_redq_model": 305, "make_replay_buff": [305, 311], "make_target_updat": 305, "parallel_env_constructor": [305, 311], "sync_async_collector": 305, "sync_sync_collector": 305, "correct_for_frame_skip": 305, "get_stats_random_rollout": 305, "csvlogger": [305, 312], "mlflowlogg": 305, "wandblogg": 305, "get_logg": 305, "generate_exp_nam": 305, "journei": 306, "textbook": 306, "highlight": 306, "ever": [306, 317], "bump": 306, "think": [306, 313, 317, 323], "benefit": [306, 317, 320], "pr": 306, "ground": [307, 311, 318], "categori": [307, 309], "recycl": [307, 320], "impos": 307, "violat": 307, "noisier": 307, "Their": [307, 317], "sd": 307, "prob_modul": 307, "pick": [307, 311, 312], "tabl": [307, 312], "customari": 307, "hopefulli": [307, 312], "mathbb": [307, 312], "rightarrow": [307, 312], "soften": 307, "backbon": [307, 314, 316, 322], "make_actor": 307, "make_valu": 307, "shared_param": 307, "make_common": 307, "reusabl": [308, 311, 320], "swappabl": [308, 311], "characterist": [308, 311, 318], "trainabl": [308, 311, 319], "whatev": [308, 311], "convent": [308, 311, 314, 317, 318], "smth": [308, 311], "metric": [308, 311], "nutshel": [308, 311], "barto": [308, 317], "chapter": 308, "significantli": [308, 311, 312, 317], "next_stat": 308, "value_net_loss": 308, "pow": [308, 311], "therebi": 308, "room": 308, "convers": 308, "signifi": [308, 317], "underperform": 308, "thin": 308, "intric": 308, "believ": 309, "scheme": [309, 323], "substenti": 309, "_pre_steps_log_hook": 309, "_pre_optim_hook": 309, "sub_batch": 309, "_post_loss_hook": 309, "_post_optim_hook": 309, "post_optim": [309, 312], "_post_optim_log": 309, "post_optim_log": 309, "_post_steps_hook": 309, "_post_steps_log_hook": 309, "post_steps_log": 309, "comment": [309, 312, 322], "extens": [309, 320], "reserv": 309, "logginghook": 309, "logging_hook": 309, "save_dict": 309, "some_valu": 309, "torchsnapshot": 309, "ckpt_backend": 309, "pt": 309, "filepath": 309, "save_train": 309, "load_from_fil": 309, "perfectli": [309, 311, 318], "intern": 310, "author": [311, 312, 313, 314, 317, 318, 320], "vincent": [311, 312, 313, 314, 318, 320], "moen": [311, 312, 313, 314, 318, 320], "assembl": 311, "focus": 311, "straightforward": [311, 312, 320], "overview": [311, 313, 317, 322], "transpar": [311, 314], "understood": 311, "sota": [311, 312, 322], "illustr": [311, 312, 320], "device_count": [311, 312, 314, 319, 323], "loss_dict": 311, "modal": 311, "oblivi": [311, 313, 320], "elementari": 311, "didact": 311, "dilut": 311, "pessimist": [311, 312, 313], "target_actor_network_param": 311, "actor_in_kei": 311, "actor_crit": 311, "noth": [311, 313], "compromis": 311, "hp": 311, "hasattr": 311, "_value_estim": 311, "elif": [311, 312], "notimplementederror": 311, "unknown": 311, "_loss_actor": 311, "td_copi": 311, "actor_network_param": 311, "value_network_param": 311, "_loss_valu": 311, "pred_val": 311, "target_value_network_param": 311, "smooth": [311, 312], "loss_funt": 311, "glue": 311, "_forward": 311, "ndimens": 311, "remaind": 311, "focu": [311, 312, 313], "pixels_onli": [311, 312, 322, 323], "env_librari": 311, "env_task": 311, "env_arg": 311, "friendli": 311, "torchr": 311, "rescal": 311, "presum": 311, "make_transformed_env": 311, "reward_sc": 311, "double_to_float_list": 311, "double_to_float_inv_list": 311, "marker": 311, "env_per_collector": 311, "transform_state_dict": 311, "make_t_env": 311, "adjust": [311, 317, 318], "seem": [311, 314], "cheat": 311, "10m": 311, "cautiou": 311, "deal": [311, 313, 317, 320], "magnitud": 311, "thousand": [311, 314], "get_env_stat": 311, "proof_env": 311, "5000": [311, 313], "maxim": [311, 318], "recal": [311, 313], "ddpgmlpactor": 311, "ddpgmlpqnet": 311, "materi": 311, "ornsteinuhlenbeckprocesswrapp": 311, "make_ddpg_actor": 311, "q_net": 311, "moduless": 311, "sugges": 311, "1_000_000": [311, 314], "tight": 311, "10_000": [311, 313, 320], "traj_len": [311, 314], "make_record": 311, "recorder_obj": 311, "flavor": 311, "circular": 311, "buffer_s": [311, 312], "random_crop_len": 311, "prb": 311, "buffer_scratch_dir": 311, "temporari": 311, "dirrectori": 311, "trajecotri": 311, "25": [311, 313, 318, 321], "sampel": 311, "dataflow": 311, "ceil_div": 311, "utd": [311, 314], "update_to_data": 311, "realiz": 311, "_must_": 311, "001": [311, 318], "outdat": 311, "trick": [311, 312], "despit": 311, "adam": [311, 312, 313, 314, 317, 318], "optimizer_actor": 311, "lr": [311, 312, 313, 314, 317, 318], "weight_decai": [311, 312], "optimizer_valu": 311, "total_collection_step": 311, "pretti": [311, 320], "rewards_ev": 311, "collected_fram": [311, 312], "pbar": [311, 313, 314, 317, 318], "r0": 311, "numel": [311, 313, 314, 319, 320], "current_fram": 311, "sampled_tensordict": 311, "gn1": 311, "clip_grad_norm_": [311, 313, 317, 318], "gn2": 311, "gn": [311, 318], "td_record": 311, "rn": 311, "set_descript": [311, 313, 314, 317, 318], "2f": 311, "00": [311, 313, 314, 317, 318, 321], "800": 311, "2304": 311, "53it": [311, 318], "1600": 311, "839": 311, "70it": 311, "2400": 311, "02": [311, 312, 313, 314, 318, 321], "1231": 311, "81it": 311, "40": [311, 313, 314, 317, 318, 319, 320, 321], "4000": [311, 313], "2177": 311, "39it": [311, 318], "56": [311, 318, 321], "5600": 311, "2995": 311, "19it": [311, 318], "83": [311, 318], "63": [311, 318, 320], "77": [311, 318], "120": [311, 313, 318, 321], "54": [311, 318], "278": [311, 318], "75": [311, 318], "05": [311, 313, 317, 318, 321], "45": [311, 314, 318], "6400": [311, 322], "1032": 311, "58it": [311, 318], "69": [311, 317, 318], "72": [311, 318], "178": [311, 318], "51": [311, 314, 318, 320], "07": [311, 313, 318], "7200": 311, "712": 311, "37it": [311, 318], "66": [311, 318], "47": [311, 317, 318], "290": [311, 318], "43": [311, 314, 318, 320], "09": [311, 318], "80": [311, 313, 317, 318], "8000": [311, 313], "560": [311, 318, 319], "51it": [311, 318], "112": [311, 318], "219": [311, 318], "73": [311, 318], "76": [311, 318, 320], "8800": 311, "484": [311, 318], "66it": 311, "39": [311, 318, 321, 323], "86": [311, 318], "41": [311, 317, 318], "111": [311, 318], "208": [311, 318], "89": [311, 318, 320], "19": [311, 318, 320], "96": [311, 318], "9600": 311, "355": [311, 318], "94it": 311, "85": [311, 318], "212": [311, 318], "10400it": 311, "356": [311, 318], "56it": [311, 314, 318], "70": [311, 313, 317, 318], "123": [311, 318], "48": [311, 314, 318], "141": [311, 318, 320], "93": [311, 318], "65": [311, 318, 320], "plot": [311, 313, 314, 317, 318], "mention": [311, 314, 320, 323], "matplotlib": [311, 313, 314, 317, 318, 320, 323], "pyplot": [311, 313, 314, 317, 318, 320, 323], "plt": [311, 313, 314, 317, 318, 320, 323], "zip": [311, 315], "legend": 311, "xlabel": [311, 314, 317, 318], "ylabel": [311, 317], "tight_layout": 311, "concret": [311, 313], "takeawai": [311, 312], "minut": [311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "630": [311, 321], "mb": [311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323], "coding_ddpg": [311, 321], "jupyt": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323], "ipynb": [311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323], "galleri": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323], "sphinx": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323], "customis": [312, 317], "road": 312, "aspect": 312, "highest": 312, "prerequisit": 312, "familiar": [312, 317, 323], "lookup": 312, "amort": [312, 313], "cart": 312, "pole": 312, "un": 312, "actuat": 312, "frictionless": 312, "upright": 312, "duelingcnndqnet": 312, "is_notebook": 312, "shell": 312, "get_ipython": 312, "__class__": 312, "zmqinteractiveshel": 312, "qtconsol": 312, "terminalinteractiveshel": 312, "ipython": [312, 317, 318], "nameerror": 312, "umbrella": 312, "misplac": 312, "misus": 312, "orchestr": 312, "everyth": [312, 314], "five": [312, 313], "64x64": 312, "motion": [312, 318], "obs_norm_sd": 312, "simpler": 312, "get_norm_stat": 312, "test_env": 312, "make_model": 312, "dummy_env": 312, "output_s": [312, 314], "init_bia": 312, "actor_explor": 312, "eps_greedy_v": 312, "eps_greedy_val_env": 312, "get_replay_buff": 312, "n_optim": 312, "themselv": 312, "simplic": [312, 313, 319, 320], "get_collector": 312, "data_collector": 312, "bunch": 312, "concept": [312, 320], "power": 312, "ubiquit": 312, "get_loss_modul": 312, "target_updat": 312, "995": [312, 318], "sensit": 312, "variat": 312, "2e": [312, 318], "wd": 312, "upd": 312, "harder": [312, 322], "5_000": 312, "500000": 312, "100000": 312, "005": 312, "mandatori": [312, 313, 317, 318], "fairer": 312, "budget": [312, 313], "dqn_exp_": 312, "uuid1": [312, 323], "9895": 312, "0737": 312, "tmp": [312, 320], "tmpkn9wt9nj": 312, "dqn_exp_15967210": 312, "636f": 312, "11ee": [312, 323], "8db5": [312, 323], "0242ac120002": [312, 323], "registr": 312, "cumbersom": 312, "buffer_hook": 312, "weight_updat": 312, "descript": [312, 313], "aliv": 312, "total_reward": 312, "traceback": [312, 319], "__w": [312, 319], "coding_dqn": [312, 321], "660": 312, "450": [312, 318], "typeerror": 312, "print_csv_files_in_fold": 312, "folder_path": 312, "csv_file": 312, "output_str": 312, "dirpath": 312, "walk": [312, 316], "endswith": 312, "strip": 312, "qvaluenetwork": 312, "worst": 312, "accuraci": 312, "fanci": 312, "889": [312, 321], "1154": 312, "demonstr": [313, 317, 318, 323], "talk": 313, "repetit": 313, "six": 313, "sophist": [313, 317], "invent": 313, "theta_k": 313, "frac": 313, "pi_": 313, "exceed": 313, "discourag": [313, 318], "indispens": 313, "analyz": 313, "lingua": 313, "franca": 313, "defaultdict": [313, 318], "has_cuda": [313, 317, 323], "3e": [313, 314, 317], "max_grad_norm": [313, 317], "big": [313, 320, 323], "ourselv": [313, 323], "benefici": 313, "errat": 313, "hamper": [313, 320], "reactiv": 313, "xy": 313, "sub_batch_s": 313, "num_epoch": [313, 317], "entropy_ep": [313, 317], "generalist": 313, "interchang": [313, 319, 320], "panel": 313, "charact": 313, "inverteddoublependulum": 313, "transmit": 313, "stai": 313, "thumb": 313, "supplementari": [313, 323], "told": 313, "stringent": [313, 317], "nevertheless": [313, 320], "confid": [313, 317], "pack": [313, 323], "ran": 313, "f_": 313, "mu_": 313, "difficulti": [313, 323], "brought": [313, 314], "d_ob": 313, "d_action": 313, "policy_modul": [313, 317], "That": 313, "said": 313, "briefli": [313, 317], "refil": [313, 317], "capac": 313, "conveni": [313, 317, 318], "easiest": [313, 317], "mathemat": [313, 317], "tradeoff": [313, 317], "advantage_modul": 313, "lr_schedul": [313, 318], "cosineannealinglr": [313, 318], "eval_str": 313, "tensordict_data": [313, 317], "data_view": [313, 317], "subdata": [313, 317], "cum_reward_str": 313, "4f": [313, 314, 318], "stepcount_str": 313, "param_group": 313, "lr_str": 313, "eval_rollout": 313, "nice": 313, "385": [313, 318], "59it": [313, 318], "1227": [313, 318], "0836": 313, "0003": [313, 314, 318], "384": [313, 318, 320, 321], "47it": 313, "1111": 313, "3000": 313, "80it": [313, 318], "1577": 313, "388": [313, 318], "96it": 313, "1856": 313, "0002": [313, 318], "392": [313, 318], "45it": [313, 318], "1979": [313, 318], "60": [313, 317, 318, 322], "6000": 313, "386": [313, 318], "2289": 313, "7000": 313, "390": [313, 318, 321], "2364": 313, "393": [313, 318], "2448": 313, "36": [313, 314, 318], "90": [313, 317, 318], "9000": 313, "22": [313, 317, 318], "396": [313, 318], "20it": 313, "2462": 313, "398": [313, 318], "08it": 313, "2583": 313, "49": [313, 317, 318, 320], "cap": [313, 320], "figsiz": [313, 318], "subplot": [313, 318, 323], "titl": [313, 314, 317, 318], "bit": [313, 314, 317, 320], "779": [313, 321], "coding_ppo": [313, 321], "rnn": 314, "lstmmodul": 314, "84x84": 314, "accessori": 314, "stamp": 314, "tensordictprim": 314, "se": 314, "84": [314, 318], "assist": 314, "emb": 314, "n_cell": 314, "customiz": 314, "almost": 314, "bidirect": 314, "wouldn": 314, "make_tensordict_prim": 314, "interpolationmod": 314, "qval": 314, "stoch_polici": 314, "cudnn": 314, "opportun": 314, "coupl": [314, 318, 320], "uniniti": 314, "again": [314, 317, 319, 320, 323], "redund": 314, "strongli": 314, "million": 314, "sake": [314, 319, 320], "20_000": [314, 318], "longest": 314, "npai": 314, "action_spread": 314, "1000000": 314, "102": [314, 318], "09it": 314, "37": [314, 318], "122": [314, 318, 323], "27it": 314, "150": [314, 318], "74it": 314, "177": [314, 318], "55": [314, 318, 320], "797": [314, 318, 321], "1823": 314, "dqn_with_rnn": [314, 321], "tutorials_python": 315, "tutorials_jupyt": 315, "distinct": 316, "humanoid": 316, "env1_obs_kei": 316, "observation_stand": 316, "env2_obs_kei": 316, "observation_walk": 316, "tdreset1": 316, "tdreset2": 316, "tdreset": 316, "67": [316, 318], "policy_common": 316, "policy_stand": 316, "policy_walk": 316, "But": 316, "exclusive_field": [316, 322], "stack_dim": [316, 322], "env1_mak": 316, "env2_mak": 316, "_single_task": 316, "td_rollout": 316, "695": [316, 321], "121": [316, 318, 323], "multi_task": [316, 321], "matteo": 317, "bettini": 317, "maddpg": 317, "navig": 317, "lidar": 317, "sensor": 317, "collis": 317, "tie": 317, "mappo": 317, "ippo": 317, "phase": [317, 320], "mathbf": 317, "pi": [317, 318], "_t": [317, 318], "fed": [317, 320], "approxim": [317, 323], "literatur": 317, "overcom": 317, "stationari": 317, "concurr": 317, "analys": 317, "gui": 317, "visualis": 317, "multiagentmlp": 317, "divic": 317, "vmas_devic": 317, "6_000": 317, "team": [317, 322], "n_iter": 317, "minibatch_s": 317, "generalis": 317, "furthermor": 317, "simd": 317, "parallelis": 317, "warp": 317, "todai": 317, "circl": 317, "surround": 317, "dot": [317, 318], "collid": 317, "drag": 317, "elast": 317, "acceler": 317, "penalis": 317, "num_vmas_env": 317, "scenario_nam": 317, "four": [317, 318], "environmnet": 317, "final_rew": 317, "agent_collis": 317, "stress": 317, "paramount": 317, "n_rollout_step": 317, "evolut": 317, "yourself": 317, "utilis": 317, "n_actions_per_ag": 317, "n_obs_per_ag": 317, "share_parameters_polici": 317, "policy_net": 317, "denot": 317, "unbatched_action_spec": 317, "carefulli": [317, 323], "grant": 317, "converg": 317, "cooper": 317, "share_parameters_crit": 317, "critic_net": 317, "fantast": 317, "minibatch": 317, "desc": 317, "episode_reward_mean": 317, "episode_reward_mean_list": 317, "get_item_shap": 317, "critic_param": 317, "target_critic_param": 317, "refresh": 317, "3641679584980011": 317, "4940122067928314": 317, "0600677728652954": 317, "57": [317, 318], "4344534873962402": 317, "1100871562957764": 317, "304917335510254": 317, "6943857669830322": 317, "871443748474121": 317, "8500826358795166": 317, "759843587875366": 317, "xvfb": 317, "pyvirtualdisplai": 317, "1400": [317, 318], "900": 317, "pil": 317, "rendering_callback": 317, "fromarrai": 317, "rgb_arrai": [317, 318], "gif": 317, "save_al": 317, "append_imag": 317, "profici": 317, "master": 317, "multiagent_ppo": [317, 321], "freeli": 318, "touch": 318, "undertaken": 318, "broader": 318, "wider": 318, "algebra": 318, "acquaint": 318, "avenu": 318, "_apply_to_composit": 318, "default_x": 318, "default_i": 318, "torqu": 318, "upward": 318, "angular": 318, "sin": 318, "rad": 318, "sec": 318, "gravit": 318, "angl": 318, "deleg": 318, "new_th": 318, "new_thdot": 318, "thdot": 318, "g_forc": 318, "max_torqu": 318, "angle_norm": 318, "max_spe": 318, "albeit": 318, "gen_param": 318, "high_th": 318, "high_thdot": 318, "low_th": 318, "low_thdot": 318, "rng": 318, "lazili": 318, "trivial": 318, "neither": 318, "shortcut": [318, 323], "irrelev": 318, "_make_spec": 318, "td_param": 318, "pseudo": 318, "render_mod": 318, "render_fp": 318, "random_": 318, "_make_step": 318, "staticmethod": 318, "complic": [318, 320, 323], "showcas": 318, "skeleton": 318, "_apply_transform": [318, 323], "_inv_apply_transform": [318, 323], "subset": [318, 319], "unitari": 318, "sine": 318, "cosin": 318, "sintransform": 318, "costransform": 318, "t_sin": 318, "t_co": 318, "cat_transform": 318, "mdp": 318, "convin": 318, "simple_rollout": 318, "_data": 318, "unexplor": 318, "assumpt": [318, 320], "recreat": 318, "init_td": 318, "traj_return": 318, "last_reward": 318, "is_ipython": 318, "inlin": 318, "get_backend": 318, "ion": 318, "gcf": 318, "clear_output": 318, "625": 318, "0488": 318, "0748": 318, "519": 318, "49it": 318, "0499": 318, "4472": 318, "073": 318, "0685": 318, "0408": 318, "552": 318, "5154": 318, "9086": 318, "527": 318, "57it": 318, "9385": 318, "155": 318, "2568": 318, "4981": 318, "223": 318, "8929": 318, "4491": 318, "581": 318, "3233": 318, "0664": 318, "596": 318, "1021": 318, "5263": 318, "9579": 318, "5807": 318, "8075": 318, "2009": 318, "5525": 318, "914": 318, "2894": 318, "0115": 318, "52": 318, "0977": 318, "1845": 318, "1830": 318, "4858": 318, "233": 318, "2863": 318, "0297": 318, "464": 318, "4617": 318, "5997": 318, "904": 318, "1647": 318, "0777": 318, "901": 318, "4709": 318, "6813": 318, "8317": 318, "3221": 318, "5554": 318, "276": 318, "31": [318, 320], "61it": 318, "3353": 318, "701": 318, "8570": 318, "6656": 318, "463": 318, "62it": 318, "7779": 318, "6911": 318, "875": 318, "0796": 318, "7082": 318, "308": 318, "63it": 318, "0421": 318, "1496": 318, "5037": 318, "1755": 318, "62": 318, "5029": 318, "9454": 318, "665": 318, "9330": 318, "2118": 318, "444": 318, "0995": 318, "6294": 318, "3146": 318, "2909": 318, "461": 318, "60it": 318, "9720": 318, "1298": 318, "91": 318, "9923": 318, "0345": 318, "3438": 318, "3688": 318, "424": 318, "6953": 318, "5233": 318, "411": 318, "4288": 318, "8011": 318, "82": 318, "5329": 318, "2677": 318, "71": 318, "6969": 318, "7010": 318, "376": 318, "9352": 318, "7707": 318, "6178": 318, "5646": 318, "348": 318, "7304": 318, "9407": 318, "942": 318, "3882": 318, "7604": 318, "3507": 318, "8928": 318, "258": 318, "6978": 318, "4641": 318, "549": 318, "6047": 318, "544": 318, "5005": 318, "4136": 318, "2993": 318, "3222": 318, "53": 318, "4046": 318, "7314": 318, "275": 318, "6331": [318, 323], "9318": 318, "961": 318, "8331": 318, "1604": 318, "4099": 318, "4761": 318, "125": 318, "4262": 318, "6363": 318, "382": 318, "3593": 318, "7377": 318, "2847": 318, "3443": 318, "867": 318, "3592": 318, "4760": 318, "441": 318, "9950": 318, "8021": 318, "3528": 318, "1214": 318, "708": 318, "4023": 318, "3583": 318, "041": 318, "3801": 318, "0310": 318, "4244": 318, "2039": 318, "58": 318, "4850": 318, "8748": 318, "706": 318, "59": 318, "4897": 318, "9210": 318, "8964": 318, "61": [318, 320], "0832": 318, "3934": 318, "456": 318, "8971": 318, "2933": 318, "74": 318, "3377": 318, "6996": 318, "2274": 318, "8916": 318, "098": 318, "2660": 318, "9110": 318, "4503": 318, "6956": 318, "9172": 318, "4026": 318, "946": 318, "68": 318, "9229": 318, "5205": 318, "294": 318, "8872": 318, "6637": 318, "019": 318, "9281": 318, "2082": 318, "724": 318, "8561": 318, "6574": 318, "357": 318, "4138": 318, "5230": 318, "4065": 318, "5642": 318, "921": 318, "9786": 318, "4129": 318, "5831": 318, "266": 318, "7723": 318, "4152": 318, "608": 318, "0898": 318, "389": 318, "78": 318, "5155": 318, "5376": 318, "79": 318, "5616": 318, "4094": 318, "283": 318, "5333": 318, "4803": 318, "895": 318, "6566": 318, "2588": 318, "662": 318, "4732": 318, "7503": 318, "068": 318, "0714": 318, "3370": 318, "059": 318, "8612": 318, "1915": 318, "3855": 318, "0349": 318, "9644": 318, "4538": 318, "445": 318, "0392": 318, "4080": 318, "1648": 318, "9599": 318, "143": [318, 320], "4284": 318, "5946": 318, "2590": 318, "9181": 318, "4621": 318, "9075": 318, "674": 318, "92": 318, "1772": 318, "9444": 318, "351": 318, "9391": 318, "5595": 318, "8673": 318, "6240": 318, "5919": 318, "0018": 318, "1071": 318, "9127": 318, "251": 318, "97": 318, "9799": 318, "3131": 318, "9612": 318, "9705": 318, "8741": 318, "2230": 318, "0972": 318, "0337": 318, "0350": 318, "0654": 318, "2441": 318, "4596": 318, "362": 318, "103": [318, 320], "4362": 318, "171": 318, "104": 318, "4041": 318, "6907": 318, "105": 318, "4664": 318, "2760": 318, "0299": 318, "9712": 318, "349": 318, "107": 318, "3332": 318, "4479": 318, "772": 318, "108": 318, "64it": 318, "4357": 318, "9591": 318, "543": 318, "109": 318, "6216": 318, "1353": 318, "692": 318, "110": 318, "6261": 318, "7086": 318, "496": 318, "7758": 318, "9818": 318, "7772": 318, "5055": 318, "113": [318, 320], "5840": 318, "3180": 318, "2976": 318, "2083": 318, "115": [318, 320], "5275": 318, "6873": 318, "116": 318, "4107": 318, "1624": 318, "117": [318, 320], "6372": 318, "2571": 318, "118": 318, "4039": 318, "4428": 318, "119": 318, "4728": 318, "5628": 318, "6767": 318, "2466": 318, "522": 318, "5873": 318, "5072": 318, "6548": 318, "3766": 318, "5134": 318, "1955": 318, "124": 318, "2481": 318, "0591": 318, "4500": 318, "3368": 318, "126": [318, 320], "9708": 318, "7059": 318, "127": [318, 320], "3031": 318, "2534": 318, "843": 318, "3327": 318, "6193": 318, "129": 318, "4831": 318, "1172": 318, "2593": 318, "4219": 318, "962": 318, "4800": 318, "8380": 318, "899": 318, "132": 318, "2721": 318, "9048": 318, "166": 318, "133": 318, "2419": 318, "5248": 318, "134": 318, "2139": 318, "4278": 318, "135": [318, 320], "0690": 318, "5140": 318, "136": 318, "1140": 318, "7402": 318, "137": 318, "5356": 318, "1636": 318, "138": 318, "0671": 318, "8798": 318, "139": 318, "8918": 318, "3298": 318, "307": 318, "140": [318, 320], "1779": 318, "1771": 318, "3624": 318, "936": 318, "142": 318, "1683": 318, "4810": 318, "9373": 318, "4435": 318, "144": 318, "4396": 318, "8092": 318, "145": 318, "2572": 318, "146": 318, "4212": 318, "0260": 318, "147": 318, "0939": 318, "6478": 318, "605": 318, "148": 318, "6606": 318, "7289": 318, "149": 318, "9300": 318, "7193": 318, "563": 318, "1166": 318, "8514": 318, "151": 318, "07it": 318, "9108": 318, "0672": 318, "292": 318, "152": 318, "8591": 318, "3768": 318, "153": 318, "76it": 318, "9976": 318, "154": 318, "99it": 318, "0576": 318, "0067": 318, "935": 318, "15it": 318, "4199": 318, "1722": 318, "156": 318, "28it": 318, "8310": 318, "3466": 318, "157": 318, "8631": 318, "2492": 318, "158": 318, "44it": 318, "8763": 318, "1277": 318, "159": 318, "5562": 318, "7446": 318, "52it": 318, "1082": 318, "9830": 318, "161": 318, "55it": 318, "0946": 318, "5229": 318, "162": 318, "4574": 318, "6900": 318, "163": [318, 320], "2229": 318, "0318": 318, "482": 318, "164": 318, "0543": 318, "0817": 318, "761": 318, "165": 318, "2809": 318, "5118": 318, "366": 318, "1142": 318, "5635": 318, "167": 318, "1949": 318, "2327": 318, "982": 318, "168": 318, "0967": 318, "0387": 318, "457": 318, "169": 318, "0782": 318, "2150": 318, "170": 318, "5222": 318, "3725": 318, "9288": 318, "9837": 318, "172": 318, "1416": 318, "1099": 318, "173": 318, "8620": 318, "8475": 318, "174": [318, 321, 323], "1807": 318, "4375": 318, "175": 318, "1148": 318, "0645": 318, "2751": 318, "8313": 318, "9286": 318, "9770": 318, "5735": 318, "2837": 318, "179": 318, "2926": 318, "9489": 318, "180": 318, "1507": 318, "181": [318, 320], "8724": 318, "3567": 318, "182": 318, "3574": 318, "6140": 318, "183": 318, "7895": 318, "2518": 318, "184": 318, "6146": 318, "185": 318, "8776": 318, "7358": 318, "186": 318, "3722": 318, "8428": 318, "187": 318, "2656": 318, "7955": 318, "188": 318, "0092": 318, "7106": 318, "829": 318, "189": 318, "2264": 318, "6919": 318, "190": 318, "1438": 318, "1362": 318, "191": 318, "0618": 318, "8217": 318, "192": 318, "9420": 318, "6765": 318, "193": 318, "7745": 318, "0709": 318, "194": 318, "9478": 318, "6867": 318, "195": 318, "6507": 318, "6225": 318, "196": 318, "2244": 318, "2195": 318, "197": 318, "5385": 318, "9263": 318, "198": 318, "1878": 318, "2374": 318, "199": 318, "8054": 318, "3504": 318, "557": 318, "0766": 318, "6825": 318, "201": 318, "2011": 318, "8393": 318, "202": 318, "0803": 318, "7815": 318, "203": 318, "8363": 318, "2460": 318, "204": 318, "8643": 318, "2191": 318, "593": 318, "205": 318, "0773": 318, "1343": 318, "206": 318, "8657": 318, "207": 318, "9304": 318, "7584": 318, "8752": 318, "2307": 318, "209": 318, "5250": 318, "4869": 318, "7837": 318, "5762": 318, "211": 318, "6661": 318, "8600": 318, "2502": 318, "1752": 318, "213": 318, "3075": 318, "8871": 318, "214": 318, "9406": 318, "8090": 318, "215": 318, "6291": 318, "8923": 318, "876": 318, "216": 318, "9504": 318, "21e": 318, "217": 318, "7431": 318, "7880": 318, "218": 318, "4463": 318, "5432": 318, "3793": 318, "3313": 318, "220": 318, "8843": 318, "0369": 318, "065": 318, "221": 318, "4828": 318, "8391": 318, "222": 318, "6265": 318, "2913": 318, "947": 318, "5541": 318, "1252": 318, "224": 318, "7342": 318, "2396": 318, "225": 318, "5936": 318, "1924": 318, "226": 318, "9975": 318, "2045": 318, "227": 318, "8367": 318, "9540": 318, "228": 318, "7259": 318, "6743": 318, "229": 318, "4827": 318, "7528": 318, "230": 318, "7361": 318, "8756": 318, "231": 318, "7646": 318, "1116": 318, "232": 318, "5426": 318, "8385": 318, "5662": 318, "8585": 318, "234": 318, "8234": 318, "7930": 318, "235": 318, "2648": 318, "9309": 318, "236": 318, "6817": 318, "237": 318, "0943": 318, "1533": 318, "238": 318, "3045": 318, "0483": 318, "239": 318, "4128": 318, "2528": 318, "240": [318, 322, 323], "6415": 318, "0201": 318, "241": [318, 321, 322], "4437": 318, "4365": 318, "242": 318, "0358": 318, "4943": 318, "243": 318, "1272": 318, "5003": 318, "1180": 318, "2637": 318, "245": 318, "7197": 318, "0873": 318, "246": 318, "2917": 318, "247": 318, "0160": 318, "0738": 318, "248": 318, "3689": 318, "0120": 318, "249": 318, "5570": 318, "0475": 318, "250": [318, 319], "4423": 318, "2220": 318, "6803": 318, "252": 318, "1465": 318, "7214": 318, "253": 318, "8801": 318, "7034": 318, "254": 318, "9136": 318, "4076": 318, "7589": 318, "5013": 318, "8150": 318, "2241": 318, "257": 318, "0753": 318, "8081": 318, "1951": 318, "8314": 318, "259": 318, "0038": 318, "260": 318, "0889": 318, "4616": 318, "261": 318, "0655": 318, "262": 318, "8333": 318, "9476": 318, "263": 318, "7554": 318, "3798": 318, "264": 318, "3717": 318, "3947": 318, "529": 318, "265": 318, "3060": 318, "6495": 318, "7467": 318, "8889": 318, "267": 318, "8457": 318, "591": 318, "268": 318, "7137": 318, "0536": 318, "771": 318, "269": 318, "1651": 318, "270": 318, "8246": 318, "5709": 318, "281": 318, "271": 318, "7502": 318, "0521": 318, "032": 318, "272": 318, "5475": 318, "7253": 318, "273": 318, "2856": 318, "7130": 318, "274": 318, "2778": 318, "4122": 318, "8368": 318, "1841": 318, "9622": 318, "1603": 318, "003e": 318, "277": 318, "0247": 318, "346": 318, "2238": 318, "6418": 318, "279": 318, "0626": 318, "2538": 318, "280": 318, "0149": 318, "7380": 318, "2167": 318, "8911": 318, "282": 318, "8725": 318, "1983": 318, "8142": 318, "3709": 318, "284": 318, "4989": 318, "285": 318, "6464": 318, "6210": 318, "286": 318, "9726": 318, "0820": 318, "287": 318, "6975": 318, "9091": 318, "288": 318, "4926": 318, "4791": 318, "289": 318, "0905": 318, "3500": 318, "2287": 318, "291": 318, "9918": 318, "5543": 318, "9245": 318, "6444": 318, "631": 318, "293": 318, "0448": 318, "4769": 318, "8566": 318, "7208": 318, "295": 318, "0966": 318, "296": 318, "5303": 318, "1537": 318, "023": 318, "297": 318, "2682": 318, "564": 318, "298": 318, "4318": 318, "5063": 318, "299": 318, "7475": 318, "4190": 318, "8186": 318, "5077": 318, "301": 318, "1883": 318, "5291": 318, "472": 318, "302": 318, "1256": 318, "3998": 318, "303": [318, 319], "3622": 318, "0930": 318, "626": 318, "304": 318, "9500": 318, "0075": 318, "5664": 318, "305": 318, "5697": 318, "3024": 318, "306": 318, "3117": [318, 323], "0052": 318, "006": 318, "0981": 318, "9312": 318, "3873": 318, "309": 318, "0411": 318, "2650": 318, "310": 318, "1656": 318, "0228": 318, "004": 318, "311": 318, "1196": 318, "2478": 318, "312": 318, "7353": 318, "0812": 318, "313": 318, "3022": 318, "758": 318, "314": 318, "1406": 318, "4626": 318, "315": 318, "2156": 318, "851": 318, "316": 318, "1953": 318, "3774": 318, "317": 318, "6385": 318, "9917": 318, "318": 318, "2764": 318, "905": 318, "319": 318, "6391": 318, "9317": 318, "320": [318, 323], "9748": 318, "2679": 318, "321": 318, "8495": 318, "5125": 318, "8177": 318, "6602": 318, "323": 318, "0704": 318, "5776": 318, "324": 318, "9833": [318, 322], "1339": 318, "402": 318, "325": 318, "1238": 318, "326": 318, "9299": 318, "0227": 318, "327": 318, "7727": 318, "1607": 318, "336": 318, "328": 318, "3958": 318, "3223": 318, "763": 318, "329": 318, "4742": 318, "1797": 318, "330": 318, "0144": 318, "0085": 318, "791": 318, "331": 318, "8284": 318, "0428": 318, "332": 318, "0098": 318, "7365": 318, "333": 318, "4566": 318, "0781": 318, "086": 318, "334": 318, "3355": 318, "0230": 318, "335": 318, "9346": 318, "0423": 318, "076": 318, "3711": 318, "1335": 318, "6855": 318, "337": 318, "0304": 318, "0023": 318, "8459": 318, "338": 318, "9998": 318, "4399": 318, "339": 318, "2303": 318, "1346": 318, "340": 318, "2915": 318, "7116": 318, "341": 318, "5560": 318, "0487": [318, 323], "342": 318, "5119": 318, "061": 318, "343": 318, "3305": 318, "3705": 318, "957": 318, "344": 318, "6068": 318, "2112": 318, "345": 318, "5731": 318, "3897": 318, "0376": 318, "347": 318, "0434": 318, "012": 318, "1300": 318, "1215": 318, "0968": 318, "0885": 318, "350": 318, "1348": 318, "0073": 318, "5052": 318, "4184": 318, "2817": 318, "352": 318, "8887": 318, "353": 318, "4779": 318, "1009": 318, "354": 318, "0604": 318, "599": 318, "4486": 318, "1176": 318, "656": 318, "2436": 318, "0668": 318, "8849": 318, "0012": 318, "358": 318, "7511": 318, "8804": 318, "359": 318, "8870": 318, "6728": 318, "360": 318, "8841": 318, "5508": 318, "361": 318, "5242": 318, "0268": 318, "3232": 318, "0013": 318, "6185": 318, "363": 318, "1378": 318, "0204": 318, "364": 318, "0355": 318, "685": 318, "365": 318, "4884": 318, "0231": 318, "0770": 318, "0014": 318, "6793": 318, "367": 318, "9834": 318, "863": 318, "368": 318, "6709": 318, "462": 318, "369": 318, "5199": 318, "9790": 318, "370": 318, "9401": 318, "7802": 318, "371": 318, "6723": 318, "372": 318, "2678": 318, "6201": 318, "373": 318, "2184": 318, "7385": 318, "374": 318, "6344": 318, "617": 318, "375": 318, "9945": 318, "0772": 318, "567": 318, "7576": 318, "0398": 318, "377": 318, "3396": 318, "0022": 318, "094": 318, "378": 318, "3073": 318, "4018": 318, "379": 318, "1869": 318, "380": 318, "0481": 318, "1117": 318, "381": 318, "6823": 318, "981": 318, "8305": 318, "0210": 318, "383": 318, "4908": 318, "0272": 318, "538": 318, "3267": 318, "0111": 318, "7965": 318, "1796": 318, "0039": 318, "5396": 318, "3757": 318, "0490": 318, "387": 318, "1394": 318, "4187": 318, "2986": 318, "7954": 318, "1274": 318, "0063": 318, "813": 318, "8706": 318, "0114": 318, "391": 318, "6922": 318, "0004": 318, "2423": 318, "9115": 318, "2602": 318, "2449": 318, "0783": 318, "394": 318, "0631": 318, "0057": 318, "7444": 318, "395": 318, "3339": 318, "0167": 318, "4806": 318, "397": 318, "4171": 318, "067": 318, "2618": 318, "5809": 318, "399": 318, "0054": 318, "3364": 318, "8733": 318, "0184": 318, "401": 318, "9137": 318, "0113": 318, "025": 318, "0386": 318, "0625": 318, "403": 318, "1332": 318, "0582": 318, "7816": 318, "404": 318, "8341": 318, "0941": 318, "854": 318, "405": 318, "8615": 318, "588": 318, "406": 318, "3849": 318, "008": 318, "407": 318, "9395": 318, "0765": 318, "055": 318, "408": 318, "2685": 318, "2235": 318, "688": 318, "409": 318, "3052": 318, "4249": 318, "410": 318, "6806": 318, "6383": 318, "3721": 318, "9981": 318, "412": 318, "1862": 318, "822": 318, "413": 318, "9811": 318, "0171": 318, "013": 318, "414": 318, "14it": 318, "0252": 318, "0049": 318, "6205": 318, "415": 318, "1108": 318, "4921": 318, "416": 318, "79it": 318, "9142": 318, "8130": 318, "417": 318, "02it": 318, "1725": 318, "0036": 318, "3196": 318, "418": 318, "18it": 318, "7795": 318, "0242": 318, "799": 318, "419": 318, "31it": 318, "7737": 318, "0138": 318, "420": 318, "38it": 318, "1462": 318, "0053": 318, "421": 318, "9226": 318, "6139": 318, "422": 318, "9889": 318, "0403": 318, "423": 318, "6194": 318, "0032": 318, "3989": 318, "0104": 318, "425": 318, "9960": 318, "0009": 318, "6009": 318, "426": 318, "2697": 318, "0914": 318, "427": 318, "4256": 318, "1114": 318, "428": 318, "9862": 318, "1932": 318, "429": 318, "0637": 318, "0623": 318, "082": 318, "430": 318, "9906": 318, "2031": 318, "431": 318, "9948": 318, "0895": 318, "432": 318, "1970": 318, "0256": 318, "433": 318, "4231": 318, "0449": 318, "644": 318, "434": 318, "1039": 318, "1973": 318, "435": 318, "4561": 318, "1225": 318, "436": 318, "0211": 318, "2125": 318, "437": 318, "3866": 318, "0050": 318, "7202": 318, "438": 318, "6388": 318, "0072": 318, "439": 318, "1187": 318, "0015": 318, "5116": 318, "440": 318, "0432": 318, "0025": 318, "7809": 318, "1925": 318, "0103": 318, "442": 318, "9570": 318, "443": 318, "0871": 318, "5601": 318, "0165": 318, "0047": 318, "6061": 318, "2746": 318, "0027": 318, "7887": 318, "446": 318, "1835": 318, "0035": 318, "855": 318, "447": 318, "8420": 318, "548": 318, "448": 318, "2653": 318, "0126": 318, "9736": 318, "449": 318, "0594": 318, "0119": 318, "6196": 318, "4509": 318, "0373": 318, "451": 318, "0620": 318, "992": 318, "452": 318, "6898": 318, "3235": 318, "687": 318, "453": 318, "5879": 318, "454": 318, "8406": 318, "0694": 318, "455": 318, "8259": 318, "0235": 318, "8500": 318, "0024": 318, "4054": 318, "458": 318, "2027": 318, "0894": 318, "459": 318, "5966": 318, "460": 318, "6942": 318, "0016": 318, "4254": 318, "6703": 318, "0145": 318, "8124": 318, "0218": 318, "9196": 318, "0188": 318, "8986": 318, "0884": 318, "0084": 318, "5624": 318, "465": 318, "8862": 318, "0006": 318, "5384": 318, "466": 318, "5837": 318, "467": 318, "8954": 318, "0101": 318, "6751": 318, "468": 318, "8063": 318, "0122": 318, "9635": 318, "469": 318, "0692": 318, "4216": 318, "470": 318, "0586": 318, "162e": 318, "471": 318, "9690": 318, "0074": 318, "4166": 318, "6324": 318, "473": 318, "0778": 318, "474": 318, "8548": 318, "0017": 318, "4408": 318, "475": 318, "8125": 318, "1515": 318, "476": 318, "2733": 318, "0044": 318, "2836": 318, "477": 318, "7497": 318, "7681": 318, "478": 318, "8547": 318, "0105": 318, "7212": 318, "479": 318, "9848": 318, "0019": 318, "6498": 318, "480": 318, "1987": 318, "0011": 318, "5473": 318, "481": 318, "8991": 318, "0033": 318, "6091": 318, "9189": 318, "5771": 318, "483": 318, "6781": 318, "7542": 318, "5959": 318, "0064": 318, "4295": 318, "485": 318, "2547": 318, "486": 318, "0636": 318, "547": 318, "487": 318, "0065": 318, "488": 318, "30it": 318, "1694": 318, "0083": 318, "5759": 318, "489": 318, "0493": 318, "0021": 318, "7805": 318, "490": 318, "0950": 318, "497": 318, "491": 318, "9717": 318, "3672": 318, "492": 318, "0207": 318, "493": 318, "8266": 318, "0069": 318, "5365": 318, "494": 318, "2623": [318, 323], "5078": 318, "495": 318, "4545": 318, "09636": 318, "8754": 318, "0010": 318, "498": 318, "0031": 318, "8269": 318, "499": 318, "4082": 318, "6642": 318, "2284": 318, "501": 318, "9130": 318, "0008": 318, "502": 318, "2944": 318, "503": 318, "7624": 318, "0056": 318, "3858": 318, "504": 318, "0890": 318, "0042": 318, "505": [318, 321], "7505": 318, "2157": 318, "506": 318, "8394": 318, "3413": 318, "507": 318, "9609": 318, "0041": 318, "6905": 318, "508": 318, "8467": 318, "4409": 318, "509": 318, "510": 318, "8128": 318, "3559": 318, "511": 318, "1479": 318, "0264": 318, "1589": 318, "566": 318, "513": [318, 320, 321], "2756": 318, "0046": 318, "5266": 318, "514": 318, "9873": 318, "0112": 318, "9314": 318, "515": 318, "3791": 318, "0721": 318, "516": 318, "4580": 318, "0758": 318, "6114": 318, "517": 318, "2431": 318, "518": 318, "1958": 318, "5553": 318, "8924": 318, "0097": 318, "520": 318, "3737": 318, "0234": 318, "521": 318, "9125": 318, "4623": 318, "3230": 318, "0589": 318, "3784": 318, "523": 318, "9482": 318, "0051": 318, "524": 318, "0045": 318, "6401": 318, "525": 318, "1588": 318, "0048": 318, "6255": 318, "526": 318, "6084": 318, "3477": 318, "1475": 318, "0209": 318, "3456": 318, "528": 318, "7611": 318, "1040": 318, "0099": 318, "0173": 318, "643": 318, "530": 318, "8189": 318, "4358": 318, "531": 318, "9897": 318, "532": 318, "1548": 318, "9751": 318, "533": 318, "6362": 318, "7495": 318, "534": 318, "1749": 318, "9513": 318, "535": 318, "7708": 318, "0371": 318, "536": 318, "2649": 318, "0437": 318, "537": 318, "5491": 318, "0276": 318, "6426": 318, "7294": 318, "078e": 318, "539": 318, "9928": 318, "576": 318, "540": 318, "7937": 318, "0124": 318, "9664": 318, "541": 318, "3342": 318, "542": 318, "2046": 318, "5496": 318, "0956": 318, "0059": 318, "545": 318, "9028": 318, "5843": 318, "546": 318, "0674": 318, "0178": 318, "2815": 318, "0599": 318, "1587": 318, "9276": 318, "8228": 318, "6164": 318, "551": 318, "6850": 318, "9167": 318, "3092": 318, "0670": 318, "9177": 318, "553": 318, "1599": 318, "0043": 318, "554": 318, "4672": 318, "6367": 318, "555": 318, "3657": 318, "556": 318, "6694": 318, "2622": 318, "0372": 318, "4841": 318, "558": 318, "2707": 318, "0058": 318, "757": 318, "559": [318, 321], "2267": 318, "5415": 318, "50it": 318, "4556": 318, "0163": 318, "561": 318, "78it": 318, "1839": 318, "0809": 318, "6262": 318, "562": 318, "0278": 318, "1112": 318, "6155": 318, "565": 318, "1427": 318, "3582": 318, "624": 318, "7870": 318, "9490": 318, "0439": 318, "8796": 318, "568": 318, "8026": 318, "2720": 318, "612": 318, "569": 318, "54it": 318, "3147": 318, "8486": 318, "570": 318, "7917": 318, "0129": 318, "571": 318, "9553": 318, "0020": 318, "6871": 318, "572": 318, "3132": 318, "0159": 318, "8646": 318, "573": 318, "5320": 318, "0269": 318, "574": 318, "2955": 318, "0245": 318, "575": 318, "3347": 318, "0179": 318, "9718": 318, "1629": 318, "804": 318, "577": 318, "4164": 318, "0070": 318, "4335": 318, "578": 318, "579": 318, "3049": 318, "9063": 318, "580": 318, "8785": 318, "3295": 318, "5184": 318, "0546": 318, "582": 318, "4589": 318, "583": 318, "4697": 318, "2476": 318, "584": 318, "2397": 318, "585": 318, "4953": 318, "1775": 318, "586": 318, "2258": 318, "0110": 318, "7671": 318, "587": 318, "3981": 318, "8590": 318, "0007": 318, "589": 318, "9820": 318, "4221": 318, "590": 318, "1293": 318, "0116": 318, "868": 318, "1675": 318, "5931": 318, "592": 318, "2910": 318, "5219": 318, "2124": 318, "1730": 318, "737": 318, "594": 318, "2914": 318, "0206": 318, "595": 318, "0172": 318, "3982": 318, "0945": 318, "0121": 318, "4789": 318, "597": 318, "3805": 318, "4074": 318, "598": 318, "3310": 318, "5065": 318, "6028": 318, "6316": 318, "6724": 318, "6523": 318, "601": 318, "0136": 318, "4298": 318, "602": 318, "3524": 318, "2629": 318, "603": 318, "2635": 318, "7839": 318, "604": 318, "6041": 318, "8027": 318, "4170": 318, "4675": 318, "606": 318, "3153": 318, "9316": 318, "607": 318, "0649": 318, "9722": 318, "7989": 318, "0329": 318, "609": 318, "1976": 318, "6852": 318, "610": 318, "4793": 318, "1255": 318, "611": 318, "4581": 318, "0394": 318, "2047": 318, "0326": 318, "613": 318, "8967": 318, "8619": 318, "614": 318, "5906": 318, "6491": 318, "615": 318, "6634": 318, "4394": 318, "616": 318, "0624": 318, "0061": 318, "5676": 318, "3259": 318, "0131": 318, "7733": 318, "618": 318, "7515": 318, "0189": 318, "5575": 318, "619": 318, "9313": 318, "6286": 318, "620": 318, "4325": 318, "7832": 318, "621": 318, "1134": 318, "622": 318, "4572": 318, "0500": 318, "5838": 318, "623": 318, "3818": 318, "8623": 318, "1253": 318, "6622": 318, "subject": 318, "saw": [318, 320], "explain": 319, "semat": 319, "r3mtransform": 319, "embodi": 319, "ai": 319, "env_transform": [319, 323], "pretrained_model": [319, 321], "got": 319, "wiser": 319, "conclud": 319, "_storag": [319, 320], "825": [319, 321], "supervis": [320, 323], "pull": 320, "temporarili": 320, "drastic": 320, "ram": [320, 323], "batteri": 320, "dataliststorag": 320, "datalazytensorstorag": 320, "tensordidct": 320, "datalazymemmapstorag": 320, "buffer_list": 320, "lowest": 320, "medium": 320, "buffer_lazytensor": 320, "buffer_lazymemmap": 320, "fullest": 320, "organ": 320, "convini": 320, "mydata": 320, "background": 320, "question": [320, 322], "_i": 320, "artifici": 320, "0892946e": 320, "she": 320, "augment": 320, "proport": 320, "hist": 320, "barcontain": 320, "artist": 320, "revert": 320, "expens": 320, "reappear": 320, "unfold": 320, "problemat": 320, "window": 320, "4th": 320, "rb_tutori": [320, 321], "torchrl_demo": [321, 322], "torchrl_env": [321, 323], "058": [321, 323], "1822": 321, "1153": 321, "demo": 322, "icml": 322, "vmoen": 322, "fb": 322, "invest": 322, "platform": 322, "media": 322, "truli": 322, "predominantli": 322, "tensordict1": 322, "tensordict2": 322, "tensordict_sampl": 322, "_sampler": 322, "_sum_tre": 322, "modulenotfounderror": 322, "28791671991348267": 322, "gym_env": 322, "noopresetenv": [322, 323], "backbone_modul": 322, "params_expand": 322, "tensordict_exp": 322, "base_modul": 322, "0137": 322, "1524": 322, "0641": 322, "viewbackward0": 322, "asstridedbackward0": 322, "8728": 322, "1334": 322, "3494": 322, "6887": 322, "6402": 322, "_safetanhbackward": 322, "1132": 322, "1762": 322, "3430": 322, "2668": 322, "2918": 322, "6239": 322, "roughli": 322, "tensordicts_prealloc": 322, "tensordicts_stack": 322, "tensordict_rollout": [322, 323], "disclaim": 322, "concatmodul": 322, "loss_td": 322, "year": 322, "roadmap": 322, "compris": 322, "contributor": 322, "curiou": 322, "nascent": 322, "unsupervis": 323, "rom": 323, "licens": 323, "pygam": 323, "unifi": 323, "insid": 323, "_build_env": 323, "sphinx_gallery_start_ignor": 323, "filterwarn": 323, "sphinx_gallery_end_ignor": 323, "adventur": 323, "airraid": 323, "alien": 323, "amidar": 323, "assault": 323, "4867": 323, "deserv": 323, "__episode__": 323, "__trajectory__": 323, "void": 323, "reproduct": 323, "tensordict_tprim": 323, "imshow": 323, "axesimag": 323, "0x7fdef438da90": 323, "inconsist": 323, "0x7fde95bb9120": 323, "swingup": 323, "wrapper1": 323, "wrapper2": 323, "obviou": 323, "truth": 323, "env0": 323, "env_transformed_bi": 323, "stanc": 323, "transformeddistribut": 323, "base_dist": 323, "concat": 323, "mofidi": 323, "transformedenviron": 323, "moderet": 323, "computation": 323, "legitim": 323, "incom": 323, "amongst": 323, "wor": 323, "convention": 323, "scope": 323, "markovian": 323, "3288080526": 323, "constain": 323, "bar_": 323, "get_someth": 323, "bar_43680952": 323, "636e": 323, "aargh": 323, "foo_list": 323, "batched_env": 323, "_dispatch_caller_parallel": 323, "0x7fdeea565e20": 323, "bar_4b049e0a": 323, "b185": 323, "bar_4b0db706": 323, "a6e0": 323, "bar_4b00e260": 323, "ad9c": 323, "parallen": 323, "particularili": 323, "evolv": 323, "steadi": 323, "approx": 323, "4823": 323, "1954": 323, "8765": 323, "_extra_st": 323, "observation_ssq": 323, "observation_sum": 323, "1022": 323, "2318": 323, "1248": 323, "1141": 323, "1967": 323, "dispach": 323, "absor": 323}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 2, 1, "", "BraxEnv"], [68, 2, 1, "", "BraxWrapper"], [69, 2, 1, "", "DMControlEnv"], [70, 2, 1, "", "DMControlWrapper"], [71, 0, 1, "", "EnvBase"], [72, 0, 1, "", "EnvCreator"], [73, 0, 1, "", "EnvMetaData"], [74, 2, 1, "", "GymEnv"], [75, 0, 1, "", "GymLikeEnv"], [76, 2, 1, "", "GymWrapper"], [77, 2, 1, "", "HabitatEnv"], [78, 2, 1, "", "IsaacGymEnv"], [79, 2, 1, "", "IsaacGymWrapper"], [80, 2, 1, "", "JumanjiEnv"], [81, 2, 1, "", "JumanjiWrapper"], [82, 2, 1, "", "MarlGroupMapType"], [83, 2, 1, "", "ModelBasedEnvBase"], [84, 2, 1, "", "MultiThreadedEnv"], [85, 2, 1, "", "MultiThreadedEnvWrapper"], [86, 2, 1, "", "OpenMLEnv"], [87, 0, 1, "", "ParallelEnv"], [88, 2, 1, "", "PettingZooEnv"], [89, 2, 1, "", "PettingZooWrapper"], [90, 2, 1, "", "RoboHiveEnv"], [91, 2, 1, "", "SMACv2Env"], [92, 2, 1, "", "SMACv2Wrapper"], [93, 0, 1, "", "SerialEnv"], [94, 2, 1, "", "VmasEnv"], [95, 2, 1, "", "VmasWrapper"], [96, 2, 1, "", "check_marl_grouping"], [97, 2, 1, "", "gym_backend"], [83, 1, 1, "", "rand_step"], [83, 1, 1, "", "reset"], [83, 1, 1, "", "rollout"], [99, 2, 1, "", "set_gym_backend"], [83, 1, 1, "", "set_seed"], [83, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[71, 3, 1, "", "action_key"], [71, 3, 1, "", "action_keys"], [71, 3, 1, "", "action_spec"], [71, 1, 1, "", "add_module"], [71, 1, 1, "", "apply"], [71, 3, 1, "", "batch_locked"], [71, 1, 1, "", "bfloat16"], [71, 1, 1, "", "buffers"], [71, 1, 1, "", "children"], [71, 1, 1, "", "compile"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 3, 1, "", "done_key"], [71, 3, 1, "", "done_keys"], [71, 3, 1, "", "done_keys_groups"], [71, 3, 1, "", "done_spec"], [71, 1, 1, "", "double"], [71, 1, 1, "", "eval"], [71, 1, 1, "", "extra_repr"], [71, 1, 1, "", "fake_tensordict"], [71, 1, 1, "", "float"], [71, 1, 1, "", "forward"], [71, 3, 1, "", "full_action_spec"], [71, 3, 1, "", "full_done_spec"], [71, 3, 1, "", "full_reward_spec"], [71, 3, 1, "", "full_state_spec"], [71, 1, 1, "", "get_buffer"], [71, 1, 1, "", "get_extra_state"], [71, 1, 1, "", "get_parameter"], [71, 1, 1, "", "get_submodule"], [71, 1, 1, "", "half"], [71, 3, 1, "", "input_spec"], [71, 1, 1, "", "ipu"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "modules"], [71, 1, 1, "", "named_buffers"], [71, 1, 1, "", "named_children"], [71, 1, 1, "", "named_modules"], [71, 1, 1, "", "named_parameters"], [71, 3, 1, "", "observation_spec"], [71, 3, 1, "", "output_spec"], [71, 1, 1, "", "parameters"], [71, 1, 1, "", "rand_action"], [71, 1, 1, "id0", "rand_step"], [71, 1, 1, "", "register_backward_hook"], [71, 1, 1, "", "register_buffer"], [71, 1, 1, "", "register_forward_hook"], [71, 1, 1, "", "register_forward_pre_hook"], [71, 1, 1, "", "register_full_backward_hook"], [71, 1, 1, "", "register_full_backward_pre_hook"], [71, 1, 1, "", "register_load_state_dict_post_hook"], [71, 1, 1, "", "register_module"], [71, 1, 1, "", "register_parameter"], [71, 1, 1, "", "register_state_dict_pre_hook"], [71, 1, 1, "", "requires_grad_"], [71, 1, 1, "id1", "reset"], [71, 3, 1, "", "reset_keys"], [71, 3, 1, "", "reward_key"], [71, 3, 1, "", "reward_keys"], [71, 3, 1, "", "reward_spec"], [71, 1, 1, "id2", "rollout"], [71, 1, 1, "", "set_extra_state"], [71, 1, 1, "id3", "set_seed"], [71, 1, 1, "", "share_memory"], [71, 3, 1, "", "specs"], [71, 1, 1, "", "state_dict"], [71, 3, 1, "", "state_spec"], [71, 1, 1, "id4", "step"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_empty"], [71, 1, 1, "", "train"], [71, 1, 1, "", "type"], [71, 1, 1, "", "xpu"], [71, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[75, 3, 1, "", "action_key"], [75, 3, 1, "", "action_keys"], [75, 3, 1, "", "action_spec"], [75, 1, 1, "", "add_module"], [75, 1, 1, "", "apply"], [75, 3, 1, "", "batch_locked"], [75, 1, 1, "", "bfloat16"], [75, 1, 1, "", "buffers"], [75, 1, 1, "", "children"], [75, 1, 1, "", "close"], [75, 1, 1, "", "compile"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 3, 1, "", "done_key"], [75, 3, 1, "", "done_keys"], [75, 3, 1, "", "done_keys_groups"], [75, 3, 1, "", "done_spec"], [75, 1, 1, "", "double"], [75, 1, 1, "", "eval"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "fake_tensordict"], [75, 1, 1, "", "float"], [75, 1, 1, "", "forward"], [75, 3, 1, "", "full_action_spec"], [75, 3, 1, "", "full_done_spec"], [75, 3, 1, "", "full_reward_spec"], [75, 3, 1, "", "full_state_spec"], [75, 1, 1, "", "get_buffer"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "get_parameter"], [75, 1, 1, "", "get_submodule"], [75, 1, 1, "", "half"], [75, 3, 1, "", "input_spec"], [75, 1, 1, "", "ipu"], [75, 1, 1, "", "load_state_dict"], [75, 1, 1, "", "modules"], [75, 1, 1, "", "named_buffers"], [75, 1, 1, "", "named_children"], [75, 1, 1, "", "named_modules"], [75, 1, 1, "", "named_parameters"], [75, 3, 1, "", "observation_spec"], [75, 3, 1, "", "output_spec"], [75, 1, 1, "", "parameters"], [75, 1, 1, "", "rand_action"], [75, 1, 1, "", "rand_step"], [75, 1, 1, "", "read_action"], [75, 1, 1, "", "read_done"], [75, 1, 1, "", "read_obs"], [75, 1, 1, "", "read_reward"], [75, 1, 1, "", "register_backward_hook"], [75, 1, 1, "", "register_buffer"], [75, 1, 1, "", "register_forward_hook"], [75, 1, 1, "", "register_forward_pre_hook"], [75, 1, 1, "", "register_full_backward_hook"], [75, 1, 1, "", "register_full_backward_pre_hook"], [75, 1, 1, "", "register_load_state_dict_post_hook"], [75, 1, 1, "", "register_module"], [75, 1, 1, "", "register_parameter"], [75, 1, 1, "", "register_state_dict_pre_hook"], [75, 1, 1, "", "requires_grad_"], [75, 1, 1, "", "reset"], [75, 3, 1, "", "reset_keys"], [75, 3, 1, "", "reward_key"], [75, 3, 1, "", "reward_keys"], [75, 3, 1, "", "reward_spec"], [75, 1, 1, "", "rollout"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "set_info_dict_reader"], [75, 1, 1, "", "set_seed"], [75, 1, 1, "", "share_memory"], [75, 3, 1, "", "specs"], [75, 1, 1, "", "state_dict"], [75, 3, 1, "", "state_spec"], [75, 1, 1, "", "step"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_empty"], [75, 1, 1, "", "train"], [75, 1, 1, "", "type"], [75, 1, 1, "", "xpu"], [75, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[87, 3, 1, "", "action_key"], [87, 3, 1, "", "action_keys"], [87, 3, 1, "", "action_spec"], [87, 1, 1, "", "add_module"], [87, 1, 1, "", "apply"], [87, 3, 1, "", "batch_locked"], [87, 1, 1, "", "bfloat16"], [87, 1, 1, "", "buffers"], [87, 1, 1, "", "children"], [87, 1, 1, "", "compile"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 3, 1, "", "done_key"], [87, 3, 1, "", "done_keys"], [87, 3, 1, "", "done_keys_groups"], [87, 3, 1, "", "done_spec"], [87, 1, 1, "", "double"], [87, 1, 1, "", "eval"], [87, 1, 1, "", "extra_repr"], [87, 1, 1, "", "fake_tensordict"], [87, 1, 1, "", "float"], [87, 1, 1, "", "forward"], [87, 3, 1, "", "full_action_spec"], [87, 3, 1, "", "full_done_spec"], [87, 3, 1, "", "full_reward_spec"], [87, 3, 1, "", "full_state_spec"], [87, 1, 1, "", "get_buffer"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "get_parameter"], [87, 1, 1, "", "get_submodule"], [87, 1, 1, "", "half"], [87, 3, 1, "", "input_spec"], [87, 1, 1, "", "ipu"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "modules"], [87, 1, 1, "", "named_buffers"], [87, 1, 1, "", "named_children"], [87, 1, 1, "", "named_modules"], [87, 1, 1, "", "named_parameters"], [87, 3, 1, "", "observation_spec"], [87, 3, 1, "", "output_spec"], [87, 1, 1, "", "parameters"], [87, 1, 1, "", "rand_action"], [87, 1, 1, "", "rand_step"], [87, 1, 1, "", "register_backward_hook"], [87, 1, 1, "", "register_buffer"], [87, 1, 1, "", "register_forward_hook"], [87, 1, 1, "", "register_forward_pre_hook"], [87, 1, 1, "", "register_full_backward_hook"], [87, 1, 1, "", "register_full_backward_pre_hook"], [87, 1, 1, "", "register_load_state_dict_post_hook"], [87, 1, 1, "", "register_module"], [87, 1, 1, "", "register_parameter"], [87, 1, 1, "", "register_state_dict_pre_hook"], [87, 1, 1, "", "requires_grad_"], [87, 1, 1, "", "reset"], [87, 3, 1, "", "reset_keys"], [87, 3, 1, "", "reward_key"], [87, 3, 1, "", "reward_keys"], [87, 3, 1, "", "reward_spec"], [87, 1, 1, "", "rollout"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "", "set_seed"], [87, 1, 1, "", "share_memory"], [87, 3, 1, "", "specs"], [87, 1, 1, "", "state_dict"], [87, 3, 1, "", "state_spec"], [87, 1, 1, "", "step"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_empty"], [87, 1, 1, "", "train"], [87, 1, 1, "", "type"], [87, 1, 1, "", "update_kwargs"], [87, 1, 1, "", "xpu"], [87, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[93, 3, 1, "", "action_key"], [93, 3, 1, "", "action_keys"], [93, 3, 1, "", "action_spec"], [93, 1, 1, "", "add_module"], [93, 1, 1, "", "apply"], [93, 3, 1, "", "batch_locked"], [93, 1, 1, "", "bfloat16"], [93, 1, 1, "", "buffers"], [93, 1, 1, "", "children"], [93, 1, 1, "", "compile"], [93, 1, 1, "", "cpu"], [93, 1, 1, "", "cuda"], [93, 3, 1, "", "done_key"], [93, 3, 1, "", "done_keys"], [93, 3, 1, "", "done_keys_groups"], [93, 3, 1, "", "done_spec"], [93, 1, 1, "", "double"], [93, 1, 1, "", "eval"], [93, 1, 1, "", "extra_repr"], [93, 1, 1, "", "fake_tensordict"], [93, 1, 1, "", "float"], [93, 1, 1, "", "forward"], [93, 3, 1, "", "full_action_spec"], [93, 3, 1, "", "full_done_spec"], [93, 3, 1, "", "full_reward_spec"], [93, 3, 1, "", "full_state_spec"], [93, 1, 1, "", "get_buffer"], [93, 1, 1, "", "get_extra_state"], [93, 1, 1, "", "get_parameter"], [93, 1, 1, "", "get_submodule"], [93, 1, 1, "", "half"], [93, 3, 1, "", "input_spec"], [93, 1, 1, "", "ipu"], [93, 1, 1, "", "load_state_dict"], [93, 1, 1, "", "modules"], [93, 1, 1, "", "named_buffers"], [93, 1, 1, "", "named_children"], [93, 1, 1, "", "named_modules"], [93, 1, 1, "", "named_parameters"], [93, 3, 1, "", "observation_spec"], [93, 3, 1, "", "output_spec"], [93, 1, 1, "", "parameters"], [93, 1, 1, "", "rand_action"], [93, 1, 1, "", "rand_step"], [93, 1, 1, "", "register_backward_hook"], [93, 1, 1, "", "register_buffer"], [93, 1, 1, "", "register_forward_hook"], [93, 1, 1, "", "register_forward_pre_hook"], [93, 1, 1, "", "register_full_backward_hook"], [93, 1, 1, "", "register_full_backward_pre_hook"], [93, 1, 1, "", "register_load_state_dict_post_hook"], [93, 1, 1, "", "register_module"], [93, 1, 1, "", "register_parameter"], [93, 1, 1, "", "register_state_dict_pre_hook"], [93, 1, 1, "", "requires_grad_"], [93, 1, 1, "", "reset"], [93, 3, 1, "", "reset_keys"], [93, 3, 1, "", "reward_key"], [93, 3, 1, "", "reward_keys"], [93, 3, 1, "", "reward_spec"], [93, 1, 1, "", "rollout"], [93, 1, 1, "", "set_extra_state"], [93, 1, 1, "", "set_seed"], [93, 1, 1, "", "share_memory"], [93, 3, 1, "", "specs"], [93, 1, 1, "", "state_dict"], [93, 3, 1, "", "state_spec"], [93, 1, 1, "", "step"], [93, 1, 1, "", "to"], [93, 1, 1, "", "to_empty"], [93, 1, 1, "", "train"], [93, 1, 1, "", "type"], [93, 1, 1, "", "update_kwargs"], [93, 1, 1, "", "xpu"], [93, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[98, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[100, 0, 1, "", "ActionMask"], [101, 0, 1, "", "BinarizeReward"], [102, 0, 1, "", "CatFrames"], [103, 0, 1, "", "CatTensors"], [104, 0, 1, "", "CenterCrop"], [105, 0, 1, "", "ClipTransform"], [106, 0, 1, "", "Compose"], [107, 0, 1, "", "DTypeCastTransform"], [108, 0, 1, "", "DeviceCastTransform"], [109, 0, 1, "", "DiscreteActionProjection"], [110, 0, 1, "", "DoubleToFloat"], [111, 0, 1, "", "ExcludeTransform"], [112, 0, 1, "", "FiniteTensorDictCheck"], [113, 0, 1, "", "FlattenObservation"], [114, 0, 1, "", "FrameSkipTransform"], [115, 0, 1, "", "GrayScale"], [116, 0, 1, "", "InitTracker"], [117, 0, 1, "", "KLRewardTransform"], [118, 0, 1, "", "NoopResetEnv"], [119, 0, 1, "", "ObservationNorm"], [120, 0, 1, "", "ObservationTransform"], [121, 0, 1, "", "PermuteTransform"], [122, 0, 1, "", "PinMemoryTransform"], [123, 0, 1, "", "R3MTransform"], [124, 0, 1, "", "RandomCropTensorDict"], [125, 0, 1, "", "RenameTransform"], [126, 0, 1, "", "Resize"], [127, 0, 1, "", "Reward2GoTransform"], [128, 0, 1, "", "RewardClipping"], [129, 0, 1, "", "RewardScaling"], [130, 0, 1, "", "RewardSum"], [131, 0, 1, "", "SelectTransform"], [132, 0, 1, "", "SqueezeTransform"], [133, 0, 1, "", "StepCounter"], [134, 0, 1, "", "TargetReturn"], [135, 0, 1, "", "TensorDictPrimer"], [136, 0, 1, "", "TimeMaxPool"], [137, 0, 1, "", "ToTensorImage"], [138, 0, 1, "", "Transform"], [139, 0, 1, "", "TransformedEnv"], [140, 0, 1, "", "UnsqueezeTransform"], [141, 0, 1, "", "VC1Transform"], [142, 0, 1, "", "VIPRewardTransform"], [143, 0, 1, "", "VIPTransform"], [144, 0, 1, "", "VecNorm"], [145, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[101, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "reset"], [102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[105, 1, 1, "", "transform_observation_spec"], [105, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "reset"], [106, 1, 1, "", "to"], [106, 1, 1, "", "transform_env_device"], [106, 1, 1, "", "transform_input_spec"], [106, 1, 1, "", "transform_observation_spec"], [106, 1, 1, "", "transform_output_spec"], [106, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "transform_input_spec"], [107, 1, 1, "", "transform_observation_spec"], [107, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "transform_done_spec"], [108, 1, 1, "", "transform_env_device"], [108, 1, 1, "", "transform_input_spec"], [108, 1, 1, "", "transform_observation_spec"], [108, 1, 1, "", "transform_output_spec"], [108, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[109, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "reset"], [111, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[114, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[115, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "reset"], [116, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[118, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[119, 1, 1, "", "init_stats"], [119, 1, 1, "", "transform_input_spec"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[121, 1, 1, "", "transform_input_spec"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[122, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[123, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[124, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[127, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[128, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[129, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "reset"], [130, 1, 1, "", "transform_input_spec"], [130, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "reset"], [133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_observation_spec"], [133, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "reset"], [134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "reset"], [135, 1, 1, "", "to"], [135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "reset"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[138, 3, 1, "", "container"], [138, 1, 1, "", "forward"], [138, 3, 1, "", "parent"], [138, 1, 1, "", "reset"], [138, 1, 1, "", "to"], [138, 1, 1, "", "transform_done_spec"], [138, 1, 1, "", "transform_env_device"], [138, 1, 1, "", "transform_input_spec"], [138, 1, 1, "", "transform_observation_spec"], [138, 1, 1, "", "transform_output_spec"], [138, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[139, 3, 1, "", "batch_locked"], [139, 1, 1, "", "eval"], [139, 3, 1, "", "input_spec"], [139, 1, 1, "", "load_state_dict"], [139, 3, 1, "", "output_spec"], [139, 1, 1, "", "set_missing_tolerance"], [139, 1, 1, "", "set_seed"], [139, 1, 1, "", "state_dict"], [139, 1, 1, "", "to"], [139, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[140, 1, 1, "", "transform_input_spec"], [140, 1, 1, "", "transform_observation_spec"], [140, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "make_noload_model"], [141, 1, 1, "", "to"], [141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "reset"], [142, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[143, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[144, 1, 1, "", "build_td_for_shared_vecnorm"], [144, 1, 1, "", "forward"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[146, 2, 1, "", "check_env_specs"], [147, 2, 1, "", "exploration_mode"], [148, 2, 1, "", "exploration_type"], [149, 2, 1, "", "get_available_libraries"], [150, 2, 1, "", "make_composite_from_td"], [151, 2, 1, "", "set_exploration_mode"], [152, 2, 1, "", "set_exploration_type"], [153, 2, 1, "", "step_mdp"], [154, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[155, 0, 1, "", "CEMPlanner"], [156, 0, 1, "", "ConvNet"], [157, 0, 1, "", "DTActor"], [158, 0, 1, "", "DdpgCnnActor"], [159, 0, 1, "", "DdpgCnnQNet"], [160, 0, 1, "", "DdpgMlpActor"], [161, 0, 1, "", "DdpgMlpQNet"], [162, 0, 1, "", "DecisionTransformer"], [163, 0, 1, "", "Delta"], [164, 0, 1, "", "DistributionalDQNnet"], [165, 0, 1, "", "DistributionalQValueHook"], [166, 0, 1, "", "DreamerActor"], [167, 0, 1, "", "DuelingCnnDQNet"], [168, 0, 1, "", "GRUModule"], [169, 0, 1, "", "IndependentNormal"], [170, 0, 1, "", "LSTMModule"], [171, 0, 1, "", "LSTMNet"], [172, 0, 1, "", "MLP"], [173, 0, 1, "", "MPCPlannerBase"], [174, 0, 1, "", "MPPIPlanner"], [175, 0, 1, "", "MaskedCategorical"], [176, 0, 1, "", "MaskedOneHotCategorical"], [177, 0, 1, "", "MultiAgentConvNet"], [178, 0, 1, "", "MultiAgentMLP"], [179, 0, 1, "", "NoisyLazyLinear"], [180, 0, 1, "", "NoisyLinear"], [181, 0, 1, "", "NormalParamWrapper"], [182, 0, 1, "", "ObsDecoder"], [183, 0, 1, "", "ObsEncoder"], [184, 0, 1, "", "OneHotCategorical"], [185, 0, 1, "", "OnlineDTActor"], [186, 0, 1, "", "QMixer"], [187, 0, 1, "", "QValueHook"], [188, 0, 1, "", "RSSMPosterior"], [189, 0, 1, "", "RSSMPrior"], [190, 0, 1, "", "Squeeze2dLayer"], [191, 0, 1, "", "SqueezeLayer"], [192, 0, 1, "", "TanhDelta"], [193, 0, 1, "", "TanhNormal"], [194, 0, 1, "", "TruncatedNormal"], [195, 0, 1, "", "VDNMixer"], [196, 0, 1, "", "VmapModule"], [197, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[155, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[156, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[157, 1, 1, "", "default_config"], [157, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[158, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[159, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[160, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[161, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[162, 0, 1, "", "DTConfig"], [162, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[163, 1, 1, "", "log_prob"], [163, 3, 1, "", "mean"], [163, 3, 1, "", "mode"], [163, 1, 1, "", "rsample"], [163, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[164, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[166, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[167, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[168, 1, 1, "", "forward"], [168, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[169, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[170, 1, 1, "", "forward"], [170, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[171, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[172, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[174, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[175, 1, 1, "", "log_prob"], [175, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[176, 1, 1, "", "log_prob"], [176, 1, 1, "", "rsample"], [176, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[177, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[178, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[179, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[181, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[182, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[183, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[184, 1, 1, "", "log_prob"], [184, 3, 1, "", "mode"], [184, 1, 1, "", "rsample"], [184, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[185, 1, 1, "", "default_config"], [185, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[186, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[188, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[189, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[191, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[192, 3, 1, "", "mean"], [192, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[193, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[194, 1, 1, "", "log_prob"], [194, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[195, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[196, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[198, 0, 1, "", "Actor"], [199, 0, 1, "", "ActorCriticOperator"], [200, 0, 1, "", "ActorCriticWrapper"], [201, 0, 1, "", "ActorValueOperator"], [202, 0, 1, "", "AdditiveGaussianWrapper"], [203, 0, 1, "", "DecisionTransformerInferenceWrapper"], [204, 0, 1, "", "DistributionalQValueActor"], [205, 0, 1, "", "DistributionalQValueModule"], [206, 0, 1, "", "EGreedyModule"], [207, 0, 1, "", "LMHeadActorValueOperator"], [208, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [209, 0, 1, "", "ProbabilisticActor"], [210, 0, 1, "", "QValueActor"], [211, 0, 1, "", "QValueModule"], [212, 0, 1, "", "SafeModule"], [213, 0, 1, "", "SafeProbabilisticModule"], [214, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [215, 0, 1, "", "SafeSequential"], [216, 0, 1, "", "TanhModule"], [217, 0, 1, "", "ValueOperator"], [218, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[199, 1, 1, "", "get_critic_operator"], [199, 1, 1, "", "get_policy_head"], [199, 1, 1, "", "get_value_head"], [199, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[200, 1, 1, "", "get_policy_head"], [200, 1, 1, "", "get_policy_operator"], [200, 1, 1, "", "get_value_head"], [200, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[201, 1, 1, "", "get_policy_head"], [201, 1, 1, "", "get_policy_operator"], [201, 1, 1, "", "get_value_head"], [201, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "mask_context"], [203, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[205, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[211, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[212, 1, 1, "", "random"], [212, 1, 1, "", "random_sample"], [212, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[213, 1, 1, "", "random"], [213, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[216, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[218, 1, 1, "", "get_reward_operator"], [218, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[219, 0, 1, "", "biased_softplus"], [220, 0, 1, "", "inv_softplus"], [221, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[219, 1, 1, "", "forward"]], "torchrl.objectives": [[222, 0, 1, "", "A2CLoss"], [223, 0, 1, "", "CQLLoss"], [224, 0, 1, "", "ClipPPOLoss"], [225, 0, 1, "", "DDPGLoss"], [226, 0, 1, "", "DQNLoss"], [227, 0, 1, "", "DTLoss"], [228, 0, 1, "", "DiscreteSACLoss"], [229, 0, 1, "", "DistributionalDQNLoss"], [230, 0, 1, "", "DreamerActorLoss"], [231, 0, 1, "", "DreamerModelLoss"], [232, 0, 1, "", "DreamerValueLoss"], [233, 0, 1, "", "HardUpdate"], [234, 0, 1, "", "IQLLoss"], [235, 0, 1, "", "KLPENPPOLoss"], [236, 0, 1, "", "LossModule"], [237, 0, 1, "", "OnlineDTLoss"], [238, 0, 1, "", "PPOLoss"], [239, 0, 1, "", "REDQLoss"], [240, 0, 1, "", "ReinforceLoss"], [241, 0, 1, "", "SACLoss"], [242, 0, 1, "", "SoftUpdate"], [243, 0, 1, "", "TD3Loss"], [244, 0, 1, "", "ValueEstimators"], [245, 0, 1, "", "default_value_kwargs"], [246, 0, 1, "", "distance_loss"], [247, 0, 1, "", "hold_out_net"], [248, 0, 1, "", "hold_out_params"], [250, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[224, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[227, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[231, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[232, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "loss_value_diff"], [234, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[235, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[236, 1, 1, "", "convert_to_functional"], [236, 1, 1, "", "forward"], [236, 1, 1, "", "make_value_estimator"], [236, 1, 1, "", "named_parameters"], [236, 1, 1, "", "parameters"], [236, 1, 1, "", "set_keys"], [236, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[237, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[249, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[251, 0, 1, "", "GAE"], [252, 0, 1, "", "TD0Estimator"], [253, 0, 1, "", "TD1Estimator"], [254, 0, 1, "", "TDLambdaEstimator"], [255, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "set_keys"], [255, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[256, 0, 1, "", "generalized_advantage_estimate"], [257, 0, 1, "", "reward2go"], [258, 0, 1, "", "td0_advantage_estimate"], [259, 0, 1, "", "td0_return_estimate"], [260, 0, 1, "", "td1_advantage_estimate"], [261, 0, 1, "", "td1_return_estimate"], [262, 0, 1, "", "td_lambda_advantage_estimate"], [263, 0, 1, "", "td_lambda_return_estimate"], [264, 0, 1, "", "vec_generalized_advantage_estimate"], [265, 0, 1, "", "vec_td1_advantage_estimate"], [266, 0, 1, "", "vec_td1_return_estimate"], [267, 0, 1, "", "vec_td_lambda_advantage_estimate"], [268, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[269, 2, 1, "", "TensorDictRecorder"], [270, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[271, 2, 1, "", "Logger"], [273, 2, 1, "", "generate_exp_name"], [274, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[272, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[275, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[276, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[277, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[278, 0, 1, "", "BatchSubSampler"], [279, 0, 1, "", "ClearCudaCache"], [280, 0, 1, "", "CountFramesLog"], [281, 0, 1, "", "LogReward"], [282, 0, 1, "", "OptimizerHook"], [283, 0, 1, "", "Recorder"], [284, 0, 1, "", "ReplayBufferTrainer"], [285, 0, 1, "", "RewardNormalizer"], [286, 0, 1, "", "SelectKeys"], [287, 0, 1, "", "Trainer"], [288, 0, 1, "", "TrainerHookBase"], [289, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[278, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[279, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[280, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[281, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[282, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[283, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[284, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[285, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[286, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[288, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[289, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[290, 2, 1, "", "correct_for_frame_skip"], [291, 2, 1, "", "get_stats_random_rollout"], [292, 2, 1, "", "make_collector_offpolicy"], [293, 2, 1, "", "make_collector_onpolicy"], [294, 2, 1, "", "make_dqn_loss"], [295, 2, 1, "", "make_redq_loss"], [296, 2, 1, "", "make_redq_model"], [297, 2, 1, "", "make_replay_buffer"], [298, 2, 1, "", "make_target_updater"], [299, 2, 1, "", "make_trainer"], [300, 2, 1, "", "parallel_env_constructor"], [301, 2, 1, "", "sync_async_collector"], [302, 2, 1, "", "sync_sync_collector"], [303, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 307, 308, 309, 310, 311, 312, 313, 317, 318, 322, 323], "tutori": [0, 313, 317], "basic": [0, 320], "intermedi": [0, 8], "advanc": 0, "refer": [0, 305], "knowledg": [0, 306], "base": [0, 7, 306], "indic": 0, "tabl": 0, "collector": [1, 311, 312, 313, 314, 317, 322], "packag": [1, 2, 3, 307, 308, 309, 310], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 311, 312, 313, 317, 322], "distribut": [1, 307], "helper": [1, 3], "function": [1, 4, 308, 312, 313, 317, 322], "replai": [2, 311, 312, 313, 314, 317, 320, 322], "buffer": [2, 311, 312, 313, 314, 317, 320, 322], "compos": [2, 106], "store": [2, 312], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 308, 313, 317], "learn": [2, 4, 313, 317], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 307, 308, 309], "env": [3, 318, 322, 323], "vector": [3, 322], "multi": [3, 307, 308, 316, 317], "agent": [3, 4, 307, 308, 317], "environ": [3, 4, 6, 7, 311, 312, 313, 314, 316, 317, 318, 322, 323], "transform": [3, 138, 311, 313, 317, 318, 320, 322, 323], "clone": [3, 7], "mask": 3, "action": [3, 4, 314, 318], "record": [3, 283, 309, 311], "domain": [3, 307], "specif": [3, 307, 316], "librari": [3, 322], "thing": [4, 311, 318], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 322], "gener": [4, 307], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 311, 318], "algorithm": [4, 307], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 311, 312], "return": [4, 308], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 311, 313, 314, 316, 317, 318], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 322], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 316], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 311, 312, 313], "standard": 4, "explor": [4, 307, 311, 312], "valu": [4, 307, 308, 311, 313, 314], "loss": [4, 311, 312, 313, 314, 317], "earli": 4, "train": [4, 8, 308, 311, 313, 314, 317, 318], "roughli": 4, "uniformli": 4, "random": [4, 317], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 312], "increas": 4, "an": [4, 313, 314, 318], "dynam": [4, 320], "can": 4, "low": 4, "forward": [4, 311], "model": [4, 307, 311, 312, 314, 319, 322], "also": 4, "us": [4, 6, 9, 314, 319, 320, 322], "offlin": 4, "observ": [4, 311], "space": 4, "effect": [4, 318], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 323], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 322], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 317, 323], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 311], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 318], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 311, 320], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "braxenv": 67, "braxwrapp": 68, "dmcontrolenv": 69, "dmcontrolwrapp": 70, "envbas": [71, 318], "envcreat": 72, "envmetadata": 73, "gymenv": 74, "gymlikeenv": 75, "gymwrapp": 76, "habitatenv": 77, "isaacgymenv": 78, "isaacgymwrapp": 79, "jumanjienv": 80, "jumanjiwrapp": 81, "marlgroupmaptyp": 82, "modelbasedenvbas": 83, "multithreadedenv": 84, "multithreadedenvwrapp": 85, "openmlenv": 86, "parallelenv": 87, "pettingzooenv": 88, "pettingzoowrapp": 89, "robohiveenv": 90, "smacv2env": 91, "smacv2wrapp": 92, "serialenv": 93, "vmasenv": 94, "vmaswrapp": 95, "check_marl_group": 96, "gym_backend": 97, "dreamerenv": 98, "set_gym_backend": 99, "actionmask": 100, "binarizereward": 101, "catfram": [102, 320], "cattensor": 103, "centercrop": 104, "cliptransform": 105, "dtypecasttransform": 107, "devicecasttransform": 108, "discreteactionproject": 109, "doubletofloat": 110, "excludetransform": 111, "finitetensordictcheck": 112, "flattenobserv": 113, "frameskiptransform": 114, "grayscal": 115, "inittrack": 116, "klrewardtransform": 117, "noopresetenv": 118, "observationnorm": 119, "observationtransform": 120, "permutetransform": 121, "pinmemorytransform": 122, "r3mtransform": 123, "randomcroptensordict": 124, "renametransform": 125, "resiz": 126, "reward2gotransform": 127, "rewardclip": 128, "rewardsc": 129, "rewardsum": 130, "selecttransform": 131, "squeezetransform": 132, "stepcount": 133, "targetreturn": 134, "tensordictprim": 135, "timemaxpool": 136, "totensorimag": 137, "transformedenv": 139, "unsqueezetransform": 140, "vc1transform": 141, "viprewardtransform": 142, "viptransform": 143, "vecnorm": [144, 323], "gsdenois": 145, "check_env_spec": 146, "exploration_mod": 147, "exploration_typ": 148, "get_available_librari": 149, "make_composite_from_td": 150, "set_exploration_mod": 151, "set_exploration_typ": 152, "step_mdp": 153, "terminated_or_trunc": 154, "cemplann": 155, "convnet": 156, "dtactor": 157, "ddpgcnnactor": 158, "ddpgcnnqnet": 159, "ddpgmlpactor": 160, "ddpgmlpqnet": 161, "decisiontransform": 162, "delta": 163, "distributionaldqnnet": 164, "distributionalqvaluehook": 165, "dreameractor": 166, "duelingcnndqnet": 167, "grumodul": 168, "independentnorm": 169, "lstmmodul": 170, "lstmnet": 171, "mlp": [172, 314], "mpcplannerbas": 173, "mppiplann": 174, "maskedcategor": 175, "maskedonehotcategor": 176, "multiagentconvnet": 177, "multiagentmlp": 178, "noisylazylinear": 179, "noisylinear": 180, "normalparamwrapp": 181, "obsdecod": 182, "obsencod": 183, "onehotcategor": 184, "onlinedtactor": 185, "qmixer": [186, 308], "qvaluehook": 187, "rssmposterior": 188, "rssmprior": 189, "squeeze2dlay": 190, "squeezelay": 191, "tanhdelta": 192, "tanhnorm": 193, "truncatednorm": 194, "vdnmixer": 195, "vmapmodul": 196, "reset_nois": 197, "actor": [198, 307, 311], "actorcriticoper": 199, "actorcriticwrapp": 200, "actorvalueoper": 201, "additivegaussianwrapp": 202, "decisiontransformerinferencewrapp": 203, "distributionalqvalueactor": 204, "distributionalqvaluemodul": 205, "egreedymodul": 206, "lmheadactorvalueoper": 207, "ornsteinuhlenbeckprocesswrapp": 208, "probabilisticactor": 209, "qvalueactor": 210, "qvaluemodul": 211, "safemodul": [212, 307], "safeprobabilisticmodul": 213, "safeprobabilistictensordictsequenti": 214, "safesequenti": 215, "tanhmodul": 216, "valueoper": 217, "worldmodelwrapp": 218, "biased_softplu": 219, "inv_softplu": 220, "map": 221, "a2closs": 222, "cqlloss": 223, "clipppoloss": 224, "ddpgloss": 225, "dqnloss": 226, "dtloss": 227, "discretesacloss": 228, "distributionaldqnloss": 229, "dreameractorloss": 230, "dreamermodelloss": 231, "dreamervalueloss": 232, "hardupd": 233, "iqlloss": 234, "klpenppoloss": 235, "lossmodul": [236, 311], "onlinedtloss": 237, "ppoloss": 238, "redqloss": 239, "reinforceloss": 240, "sacloss": 241, "softupd": 242, "td3loss": 243, "valueestim": 244, "default_value_kwarg": 245, "distance_loss": 246, "hold_out_net": 247, "hold_out_param": 248, "qmixerloss": 249, "next_state_valu": 250, "gae": 251, "td0estim": 252, "td1estim": 253, "tdlambdaestim": 254, "valueestimatorbas": 255, "generalized_advantage_estim": 256, "reward2go": 257, "td0_advantage_estim": 258, "td0_return_estim": 259, "td1_advantage_estim": 260, "td1_return_estim": 261, "td_lambda_advantage_estim": 262, "td_lambda_return_estim": 263, "vec_generalized_advantage_estim": 264, "vec_td1_advantage_estim": 265, "vec_td1_return_estim": 266, "vec_td_lambda_advantage_estim": 267, "vec_td_lambda_return_estim": 268, "tensordictrecord": 269, "videorecord": 270, "logger": [271, 309], "csvlogger": 272, "generate_exp_nam": 273, "get_logg": 274, "mlflowlogg": 275, "tensorboardlogg": 276, "wandblogg": 277, "batchsubsampl": 278, "clearcudacach": 279, "countframeslog": 280, "logreward": 281, "optimizerhook": 282, "replaybuffertrain": 284, "rewardnorm": 285, "selectkei": 286, "trainer": [287, 309, 312], "trainerhookbas": 288, "updateweight": 289, "correct_for_frame_skip": 290, "get_stats_random_rollout": 291, "make_collector_offpolici": 292, "make_collector_onpolici": 293, "make_dqn_loss": 294, "make_redq_loss": 295, "make_redq_model": 296, "make_replay_buff": 297, "make_target_updat": 298, "make_train": 299, "parallel_env_constructor": 300, "sync_async_collector": 301, "sync_sync_collector": 302, "transformed_env_constructor": 303, "readm": [304, 315], "tuto": [304, 315], "api": 305, "contribut": [306, 322], "content": 306, "modul": [307, 311, 314, 322], "tensordict": [307, 320, 322], "wrapper": 307, "probabilist": 307, "q": [307, 312, 314], "oper": 307, "join": 307, "hook": [307, 309, 312], "regular": 307, "planner": 307, "object": [308, 311, 322], "dqn": [308, 312, 314], "ddpg": [308, 311], "sac": 308, "redq": 308, "iql": 308, "cql": 308, "dt": 308, "td3": 308, "ppo": [308, 313, 317], "a2c": 308, "dreamer": 308, "checkpoint": 309, "builder": 309, "_util": 310, "code": [311, 318], "setup": [311, 314], "The": 311, "__init__": 311, "method": 311, "estim": 311, "put": 311, "togeth": [311, 318], "call": 311, "parallel": [311, 316, 323], "execut": [311, 316, 318], "stat": 311, "build": [311, 312, 320], "evalu": 311, "batch": [311, 318, 320], "size": [311, 320], "construct": 311, "target": [311, 312], "network": [311, 312, 313, 314, 317], "updat": 311, "time": [311, 321], "experi": [311, 318], "result": [311, 313, 317], "conclus": [311, 312, 313, 314, 317, 318, 320], "A": [312, 320], "exampl": [312, 320], "comput": [312, 318, 321], "deep": 312, "collect": [312, 313], "paramet": [312, 313], "hyperparamet": [312, 313, 317], "regist": 312, "possibl": 312, "improv": 312, "defin": [313, 317], "loop": [313, 314, 317, 318], "next": [313, 317], "step": [313, 317, 323], "recurr": 314, "convolut": 314, "lstm": 314, "select": 314, "divers": 316, "rollout": [316, 317, 318, 323], "critic": 317, "pendulum": 318, "write": 318, "_step": 318, "reset": [318, 323], "simul": 318, "_reset": 318, "metadata": 318, "_spec": 318, "spec": [318, 323], "shape": 318, "seed": [318, 323], "wrap": 318, "class": [318, 322], "test": 318, "our": 318, "custom": [318, 320], "simpl": 318, "pretrain": 319, "vanilla": 320, "integr": 320, "tensorclass": 320, "sampl": 320, "iter": 320, "over": 320, "fix": 320, "priorit": 320, "save": 320, "raw": 320, "imag": 320, "more": 320, "complex": 320, "introduct": 322, "config": 322, "tensordictmodul": 322, "sequenc": 322, "program": 322, "ensembl": 322, "meta": 322, "special": 322, "state": 322, "frame_skip": 323, "deepmind": 323, "control": 323, "devic": 323, "run": 323, "close": 323, "access": 323, "attribut": 323, "kwarg": 323}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})