Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.gym.MOGymEnv", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper", "reference/generated/torchrl.envs.libs.gym.gym_backend", "reference/generated/torchrl.envs.libs.gym.set_gym_backend", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.MOGymEnv.rst", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.gym_backend.rst", "reference/generated/torchrl.envs.libs.gym.set_gym_backend.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "MOGymEnv", "MOGymWrapper", "gym_backend", "set_gym_backend", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DTypeCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 50, 51, 52, 54, 55, 56, 59, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 87, 92, 94, 96, 97, 98, 100, 106, 107, 110, 111, 112, 114, 122, 124, 125, 126, 128, 131, 133, 142, 143, 144, 145, 146, 153, 154, 155, 156, 159, 160, 164, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 247, 250, 259, 260, 264, 265, 268, 277, 278, 279, 280, 283, 284, 285, 288, 289, 293, 294, 296, 297, 299, 300], "open": [0, 5, 7, 11, 289, 294, 299], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300], "reinforc": [0, 3, 9, 92, 143, 144, 145, 146, 149, 184, 187, 201, 202, 207, 211, 212, 217, 218, 219, 282, 289, 292, 295, 298, 299], "learn": [0, 3, 7, 8, 9, 18, 32, 52, 92, 143, 144, 145, 146, 149, 157, 161, 184, 187, 201, 202, 207, 211, 212, 216, 217, 218, 219, 282, 284, 285, 288, 289, 291, 292, 293, 295, 297, 298, 299, 300], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 70, 121, 161, 178, 188, 196, 201, 214, 215, 255, 283, 284, 285, 286, 288, 289, 290, 294, 296, 297, 300], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 51, 71, 136, 282, 283, 284, 287, 288, 289, 290, 294, 295, 300], "pytorch": [0, 1, 2, 3, 124, 160, 161, 264, 283, 286, 288, 290, 291, 294, 295, 296, 299, 300], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 51, 66, 69, 70, 71, 72, 73, 84, 105, 107, 111, 121, 126, 133, 143, 145, 150, 159, 166, 168, 169, 175, 176, 184, 187, 190, 192, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 260, 273, 283, 284, 285, 288, 289, 291, 294, 295, 296, 297, 299, 300], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 51, 52, 53, 58, 66, 69, 70, 71, 72, 73, 93, 94, 96, 98, 101, 106, 107, 110, 111, 114, 117, 122, 126, 128, 130, 131, 142, 149, 153, 154, 155, 156, 158, 159, 176, 178, 182, 184, 185, 187, 188, 189, 190, 195, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 247, 251, 255, 261, 268, 273, 276, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "python": [0, 3, 5, 6, 7, 10, 21, 83, 158, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 51, 54, 55, 64, 69, 92, 93, 101, 107, 110, 111, 124, 126, 128, 153, 155, 159, 160, 164, 178, 183, 184, 188, 189, 191, 192, 203, 209, 213, 214, 215, 246, 263, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "low": [0, 97, 184, 195, 288, 289, 295, 299], "high": [0, 9, 41, 97, 184, 195, 228, 233, 241, 288, 289, 297, 299], "level": [0, 3, 4, 22, 26, 28, 92, 213, 288, 289, 299], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 65, 66, 108, 156, 232, 256, 265, 286, 290, 295, 299], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 51, 52, 53, 54, 55, 56, 62, 64, 66, 67, 69, 70, 71, 72, 73, 87, 95, 96, 97, 98, 100, 101, 105, 110, 117, 122, 124, 125, 126, 127, 128, 130, 131, 137, 141, 146, 147, 153, 154, 156, 158, 161, 165, 166, 169, 183, 187, 188, 189, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 226, 227, 228, 229, 230, 231, 232, 261, 276, 280, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 97, 176, 214, 284, 299], "effici": [0, 1, 2, 4, 8, 161, 284, 288, 289, 290, 291, 293, 294, 296, 297, 299], "modular": [0, 194, 297, 299], "document": [0, 5, 7, 18, 19, 21, 32, 66, 69, 71, 72, 73, 126, 289, 299], "properli": [0, 66, 290, 294, 295, 299], "test": [0, 3, 5, 128, 133, 153, 154, 260, 276, 290, 291, 299], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 62, 66, 69, 71, 72, 73, 92, 95, 96, 98, 99, 107, 110, 114, 116, 118, 121, 122, 125, 126, 128, 130, 140, 141, 143, 144, 145, 146, 153, 154, 156, 157, 158, 161, 162, 167, 168, 169, 178, 179, 184, 187, 188, 190, 191, 192, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 234, 249, 252, 253, 254, 255, 259, 276, 278, 279, 284, 285, 286, 289, 290, 291, 294, 295, 296, 297, 299, 300], "code": [0, 3, 5, 7, 8, 110, 128, 153, 194, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300], "aim": [0, 3, 7, 28, 29, 66, 110, 128, 130, 155, 267, 283, 284, 285, 288, 289, 299], "support": [0, 1, 3, 18, 20, 26, 51, 52, 53, 54, 55, 62, 64, 71, 87, 107, 125, 136, 149, 176, 183, 184, 191, 194, 207, 228, 229, 230, 231, 252, 284, 286, 290, 291, 294, 295, 297, 299], "research": [0, 7, 9, 299], "most": [0, 3, 7, 8, 32, 66, 97, 288, 290, 295, 299, 300], "written": [0, 3, 34, 36, 39, 45, 51, 54, 66, 69, 71, 72, 73, 92, 105, 117, 120, 123, 140, 178, 187, 188, 191, 192, 196, 201, 203, 213, 215, 217, 227, 246, 247, 284, 285, 286, 288, 291, 293, 295, 299], "highli": [0, 2, 299, 300], "wai": [0, 3, 4, 110, 112, 130, 215, 228, 229, 230, 231, 284, 288, 289, 290, 293, 294, 295, 296, 297, 299, 300], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 57, 61, 66, 67, 69, 71, 72, 73, 83, 92, 95, 96, 97, 98, 106, 107, 110, 111, 114, 117, 121, 122, 125, 126, 128, 130, 131, 141, 152, 153, 156, 157, 159, 161, 162, 174, 176, 178, 182, 183, 184, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 260, 273, 278, 279, 280, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "easili": [0, 3, 7, 273, 285, 288, 289, 290, 294, 299, 300], "swap": [0, 3, 290, 296, 299], "compon": [0, 2, 3, 54, 55, 56, 62, 64, 149, 167, 183, 184, 190, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 259, 264, 288, 289, 290, 291, 293, 294, 295, 296, 299], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 51, 52, 66, 67, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 143, 149, 150, 166, 167, 175, 186, 195, 198, 200, 247, 261, 273, 280, 282, 289, 291, 292, 296, 298], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 51, 52, 66, 67, 69, 71, 72, 73, 96, 98, 126, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 175, 176, 182, 184, 185, 187, 190, 195, 198, 213, 247, 288, 289, 291, 293, 294, 295, 296, 297, 299, 300], "write": [0, 3, 8, 23, 32, 37, 45, 69, 109, 178, 191, 192, 194, 196, 202, 204, 205, 206, 212, 216, 218, 220, 227, 232, 247, 284, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 57, 61, 66, 69, 71, 72, 73, 117, 125, 131, 140, 153, 187, 191, 192, 197, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 288, 290, 291, 294, 295, 299, 300], "ones": [0, 15, 26, 32, 35, 41, 42, 66, 69, 71, 72, 73, 93, 95, 96, 98, 107, 110, 114, 121, 122, 125, 126, 128, 130, 158, 176, 191, 201, 202, 204, 212, 214, 215, 216, 218, 220, 234, 288, 290, 294, 295, 297, 299, 300], "littl": [0, 3, 43, 290, 291, 297, 299, 300], "effort": [0, 3, 295, 297, 299], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 54, 55, 56, 61, 62, 64, 66, 69, 70, 71, 72, 73, 83, 84, 92, 93, 95, 96, 97, 98, 100, 102, 104, 105, 107, 110, 111, 112, 114, 117, 118, 122, 123, 125, 126, 128, 129, 130, 131, 133, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 228, 229, 230, 231, 232, 246, 255, 257, 260, 261, 264, 266, 267, 268, 273, 276, 280, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "repo": [0, 6, 51, 128, 283, 294, 299], "attempt": [0, 182, 185, 187, 205, 212, 226, 299], "align": [0, 299], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 66, 69, 71, 72, 73, 93, 126, 268, 280, 294, 299, 300], "ecosystem": [0, 299], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 66, 67, 69, 71, 72, 73, 92, 122, 126, 153, 182, 184, 185, 187, 192, 213, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 51, 52, 53, 87, 131, 282, 288, 289, 296, 297, 299, 300], "pillar": [0, 299], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 98, 102, 106, 107, 110, 111, 121, 125, 126, 128, 131, 133, 141, 153, 154, 156, 157, 182, 185, 187, 208, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 255, 257, 260, 267, 268, 269, 270, 273, 276, 277, 278, 279, 280, 282, 283, 284, 292, 296, 297, 298], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 66, 69, 70, 71, 72, 73, 96, 110, 122, 128, 130, 132, 142, 153, 155, 156, 157, 159, 166, 175, 179, 180, 181, 186, 191, 197, 201, 202, 203, 205, 208, 209, 210, 212, 213, 214, 215, 216, 218, 226, 264, 269, 270, 271, 272, 273, 282, 283, 286, 290, 292, 294, 295, 297, 298, 300], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 87, 92, 96, 98, 105, 107, 114, 120, 133, 137, 141, 149, 153, 154, 157, 159, 167, 176, 178, 183, 185, 187, 188, 189, 191, 194, 195, 196, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 255, 261, 264, 266, 269, 276, 278, 279, 280, 282, 284, 285, 286, 291, 295, 296, 297, 300], "util": [0, 3, 17, 23, 32, 40, 66, 69, 71, 72, 73, 110, 130, 133, 134, 135, 136, 137, 138, 139, 140, 142, 198, 199, 200, 214, 276, 282, 287, 288, 290, 294, 295, 299, 300], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 54, 55, 64, 66, 67, 69, 71, 72, 73, 93, 95, 101, 107, 110, 117, 122, 125, 126, 128, 130, 133, 152, 153, 157, 159, 162, 167, 173, 174, 184, 188, 190, 191, 192, 214, 227, 228, 229, 230, 231, 255, 267, 279, 284, 288, 289, 290, 294, 295, 296, 299, 300], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 66, 67, 69, 71, 72, 73, 93, 95, 101, 107, 110, 117, 122, 125, 126, 128, 130, 133, 152, 153, 157, 159, 173, 174, 188, 191, 192, 214, 227, 237, 238, 239, 240, 242, 243, 244, 245, 279, 284, 288, 289, 290, 294, 295, 296, 299, 300], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 92, 114, 120, 187, 261, 264, 266, 269, 270, 276, 278, 279, 282, 286, 297, 300], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 51, 52, 57, 59, 62, 63, 65, 66, 69, 70, 71, 72, 73, 95, 96, 98, 110, 122, 125, 126, 128, 130, 131, 140, 141, 142, 155, 157, 159, 178, 183, 184, 188, 190, 191, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 234, 251, 255, 267, 273, 276, 277, 278, 279, 280, 284, 285, 286, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 66, 69, 71, 72, 73, 105, 126, 155, 159, 288, 289, 290, 297, 299, 300], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 51, 61, 62, 66, 69, 71, 72, 73, 92, 96, 98, 105, 106, 107, 121, 122, 125, 126, 131, 133, 142, 154, 155, 159, 176, 193, 194, 201, 203, 213, 215, 223, 226, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 255, 264, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "few": [0, 2, 8, 255, 290, 291, 294, 297, 299, 300], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 96, 98, 196, 215, 284, 288, 290, 291, 294, 295, 299, 300], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 142, 191, 214, 260, 264, 284, 288, 290, 291, 294, 295, 297, 299, 300], "standard": [0, 3, 107, 116, 131, 141, 150, 157, 160, 161, 182, 220, 228, 229, 230, 231, 288, 289, 294, 297, 299], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 124, 264, 295, 297, 299, 300], "common": [0, 3, 4, 21, 69, 72, 73, 179, 180, 181, 186, 201, 202, 203, 206, 212, 213, 215, 216, 217, 218, 220, 276, 283, 284, 286, 288, 290, 293, 294, 296, 299, 300], "openai": [0, 7, 78, 79, 290, 295, 299, 300], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 66, 67, 69, 71, 72, 73, 78, 79, 80, 81, 82, 83, 92, 104, 105, 107, 112, 114, 122, 131, 153, 273, 276, 283, 288, 289, 290, 291, 295, 296, 297, 299], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 51, 54, 55, 64, 66, 69, 71, 72, 73, 92, 93, 95, 96, 97, 98, 101, 107, 110, 111, 114, 121, 122, 125, 126, 128, 130, 131, 153, 154, 159, 178, 183, 188, 189, 191, 192, 193, 194, 201, 203, 204, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 228, 229, 230, 231, 232, 268, 286, 288, 289, 290, 291, 293, 294, 295, 297, 299, 300], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 58, 61, 64, 66, 67, 69, 70, 71, 72, 73, 76, 87, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 172, 173, 174, 176, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 252, 255, 257, 258, 259, 260, 261, 262, 264, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 284, 291, 294, 295, 297, 299], "On": [0, 3, 7, 18, 19, 20, 21, 284, 289, 294], "end": [0, 13, 14, 32, 35, 38, 41, 42, 51, 52, 61, 66, 69, 71, 72, 73, 121, 126, 142, 156, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "come": [0, 1, 3, 8, 72, 73, 96, 98, 178, 179, 180, 181, 188, 196, 288, 289, 290, 291, 294, 297, 299, 300], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 51, 52, 54, 55, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 83, 93, 95, 96, 98, 104, 105, 110, 120, 121, 122, 125, 126, 128, 130, 133, 138, 139, 153, 156, 159, 182, 191, 214, 215, 232, 255, 260, 261, 270, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "re": [0, 3, 8, 32, 61, 66, 69, 71, 72, 73, 153, 158, 188, 192, 286, 288, 290, 291, 293, 295, 299, 300], "usabl": [0, 286, 291, 299], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 54, 55, 56, 62, 64, 66, 67, 69, 71, 72, 73, 83, 96, 98, 126, 131, 133, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 158, 159, 162, 163, 164, 165, 168, 169, 171, 174, 176, 179, 180, 181, 182, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 273, 276, 282, 284, 288, 291, 293, 295, 297, 300], "cost": [0, 2, 27, 288, 289, 294, 295, 297], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 59, 63, 65, 66, 67, 69, 70, 71, 72, 73, 76, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 140, 141, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 168, 169, 172, 173, 174, 175, 178, 179, 180, 181, 188, 190, 191, 192, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 264, 267, 269, 273, 276, 277, 278, 279, 280, 282, 284, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 66, 67, 69, 71, 72, 73, 131, 159, 184, 187, 190, 286, 288, 289, 291, 294, 295, 296, 297, 299, 300], "good": [0, 1, 4, 9, 288, 290, 291, 294, 299, 300], "runtim": [0, 3, 32, 66, 69, 71, 72, 73, 295], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 66, 69, 71, 72, 73, 96, 98, 106, 126, 141, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 209, 215, 260, 264, 285, 288, 289, 290, 291, 293, 294, 295, 300], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 51, 52, 66, 69, 71, 72, 73, 131, 179, 180, 181, 187, 214, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 284, 285, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300], "read": [0, 7, 17, 23, 37, 40, 54, 55, 56, 62, 64, 66, 69, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 109, 111, 112, 114, 117, 118, 120, 121, 122, 123, 125, 128, 129, 131, 165, 178, 179, 180, 181, 183, 188, 191, 192, 194, 196, 197, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 247, 260, 264, 273, 284, 288, 289, 290, 291, 293, 294, 295, 296, 300], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 51, 52, 66, 69, 71, 72, 73, 124, 128, 132, 149, 155, 160, 162, 178, 182, 183, 184, 185, 191, 196, 201, 207, 214, 215, 228, 233, 241, 259, 283, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 300], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 285, 288, 289, 290, 294, 295, 299, 300], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 286, 288, 293, 296, 300], "beyond": 0, "api": [0, 3, 5, 110, 130, 285, 286, 294, 295, 299, 300], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 66, 67, 69, 70, 71, 72, 73, 92, 93, 100, 105, 111, 133, 153, 178, 183, 184, 188, 189, 190, 191, 192, 284, 285, 289, 290, 291, 293, 294, 295, 296, 297, 300], "paper": [0, 110, 128, 130, 166, 175, 211, 273, 288, 290, 294], "ppo": [0, 4, 8, 188, 192, 203, 213, 215, 282, 284, 288, 289, 292, 298], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 66, 67, 69, 71, 72, 73, 78, 79, 92, 95, 104, 105, 107, 112, 114, 122, 126, 131, 153, 276, 284, 289, 290, 292, 298, 299, 300], "your": [0, 2, 3, 7, 8, 10, 18, 32, 66, 69, 71, 72, 73, 131, 280, 283, 284, 285, 289, 290, 291, 292, 294, 297, 298, 299], "introduct": [0, 285, 292, 294, 298, 300], "multi": [0, 7, 9, 28, 29, 32, 66, 69, 71, 72, 73, 153, 154, 155, 159, 226, 228, 229, 230, 231, 282, 288, 289, 290, 291, 292, 295, 298, 299], "agent": [0, 9, 28, 29, 121, 158, 159, 161, 166, 175, 226, 282, 292, 295, 298], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 51, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 153, 156, 157, 191, 214, 246, 268, 269, 270, 273, 276, 278, 279, 280, 282, 284, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 57, 58, 64, 66, 67, 69, 70, 71, 72, 73, 76, 83, 87, 92, 93, 94, 95, 96, 97, 98, 104, 105, 107, 110, 111, 112, 114, 121, 122, 124, 125, 126, 128, 130, 131, 133, 138, 139, 140, 141, 142, 143, 144, 149, 150, 152, 153, 155, 156, 157, 159, 161, 162, 166, 167, 173, 174, 175, 176, 178, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 274, 276, 280, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 298, 300], "pretrain": [0, 292, 298], "recurr": [0, 153, 169, 289, 292, 297, 298], "dqn": [0, 149, 183, 184, 201, 202, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 226, 271, 282, 284, 292, 298], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 53, 66, 69, 71, 72, 73, 96, 102, 110, 121, 126, 128, 130, 133, 143, 145, 153, 182, 185, 187, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 264, 266, 276, 282, 286, 289, 292, 296, 297, 298, 300], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 66, 69, 70, 71, 72, 73, 97, 105, 121, 138, 139, 149, 153, 159, 161, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 195, 201, 202, 203, 204, 206, 212, 213, 215, 216, 217, 218, 220, 260, 266, 269, 270, 276, 278, 279, 284, 285, 286, 289, 292, 296, 297, 298, 299, 300], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 51, 52, 57, 58, 59, 60, 62, 63, 92, 97, 111, 114, 122, 202, 204, 205, 206, 212, 216, 218, 220, 261, 264, 274, 276, 282, 286, 292, 295, 296, 298], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 69, 70, 71, 72, 73, 92, 95, 97, 110, 111, 114, 122, 125, 126, 128, 130, 191, 194, 202, 204, 205, 206, 212, 214, 216, 218, 220, 261, 264, 274, 276, 282, 286, 292, 295, 296, 298, 300], "task": [0, 3, 9, 28, 29, 40, 45, 72, 73, 76, 110, 128, 130, 212, 288, 289, 290, 291, 292, 294, 295, 298, 299, 300], "specif": [0, 2, 5, 8, 41, 42, 69, 264, 282, 285, 286, 290, 291, 292, 294, 297, 298], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 54, 55, 56, 62, 64, 66, 69, 71, 72, 73, 96, 98, 107, 110, 125, 126, 128, 131, 157, 166, 175, 178, 179, 188, 191, 192, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 268, 269, 270, 275, 276, 280, 282, 284, 286, 289, 290, 291, 292, 294, 295, 297, 298, 300], "ddpg": [0, 143, 144, 145, 146, 204, 211, 219, 282, 284, 289, 292, 298], "loss": [0, 3, 8, 36, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 259, 264, 271, 272, 273, 276, 285, 286, 292, 295, 297, 298, 299], "trainer": [0, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 292, 298], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 84, 97, 102, 105, 110, 111, 112, 122, 125, 126, 128, 129, 131, 132, 133, 140, 141, 142, 149, 153, 155, 157, 158, 159, 161, 162, 176, 182, 183, 184, 185, 188, 189, 192, 194, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 226, 228, 229, 230, 231, 232, 234, 248, 249, 252, 257, 264, 266, 273, 276, 285, 288, 290, 292, 294, 295, 298, 300], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 51, 53, 54, 55, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 95, 96, 97, 98, 104, 105, 107, 110, 112, 114, 121, 122, 124, 125, 126, 128, 130, 131, 137, 140, 141, 142, 149, 153, 154, 155, 157, 159, 162, 165, 166, 167, 175, 176, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 196, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 221, 222, 226, 228, 229, 230, 231, 234, 255, 256, 257, 258, 259, 261, 262, 263, 266, 273, 276, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300], "packag": [0, 6, 7, 10, 83, 282, 283, 300], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 51, 52, 66, 69, 71, 72, 73, 92, 93, 110, 130, 142, 153, 154, 155, 159, 190, 194, 203, 205, 206, 207, 213, 215, 216, 220, 228, 229, 230, 231, 237, 238, 239, 240, 242, 243, 244, 245, 273, 280, 282, 288, 289, 290, 291, 293, 294, 295, 296, 297], "node": [0, 2, 18, 19, 20, 21, 22, 273, 282], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 105, 107, 141, 147, 148, 149, 150, 152, 157, 158, 162, 165, 168, 169, 172, 173, 174, 182, 183, 184, 188, 192, 193, 201, 202, 203, 206, 207, 212, 213, 215, 216, 217, 218, 220, 282, 286, 289, 290, 294, 295, 299, 300], "helper": [0, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 289, 291, 295], "compos": [0, 3, 32, 35, 38, 41, 42, 51, 52, 58, 59, 60, 63, 66, 69, 71, 72, 73, 92, 125, 126, 131, 186, 209, 273, 282, 288, 289, 290, 291, 293, 294, 297, 299, 300], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 66, 69, 70, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 107, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 169, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 202, 205, 216, 218, 220, 226, 282, 295], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 83, 92, 93, 96, 97, 98, 99, 104, 105, 107, 110, 111, 112, 114, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 137, 140, 141, 143, 144, 145, 146, 149, 152, 153, 155, 156, 157, 159, 160, 162, 166, 167, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 220, 222, 226, 227, 228, 229, 230, 231, 246, 247, 255, 261, 264, 267, 268, 273, 274, 276, 277, 280, 282, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "human": [0, 282, 295], "feedback": [0, 282, 299], "rlhf": [0, 34, 40, 45, 53, 105, 282, 284], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 67, 69, 71, 72, 73, 96, 98, 106, 112, 125, 126, 131, 133, 141, 156, 157, 260, 268, 269, 270, 273, 276, 278, 279, 280, 282, 291], "gymlikeenv": [0, 282], "envmetadata": [0, 282], "vector": [0, 1, 8, 24, 27, 33, 97, 143, 145, 155, 228, 231, 241, 242, 243, 244, 245, 282, 288, 289, 291, 293, 294, 295, 296, 300], "record": [0, 32, 66, 69, 71, 72, 73, 105, 215, 246, 247, 248, 249, 250, 251, 252, 253, 254, 276, 282, 289, 290], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 66, 97, 122, 137, 178, 183, 184, 188, 189, 190, 191, 192, 193, 194, 282, 290, 291, 294, 295, 299, 300], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 66, 69, 70, 71, 72, 73, 83, 95, 97, 105, 110, 111, 121, 122, 125, 126, 128, 130, 131, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 264, 271, 272, 276, 282, 285, 286, 289, 290, 293, 294, 295, 296, 297], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 54, 55, 57, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 140, 141, 148, 149, 153, 154, 156, 157, 166, 167, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 246, 255, 259, 260, 261, 263, 264, 273, 282, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 300], "actor": [0, 4, 15, 21, 105, 141, 143, 145, 149, 150, 157, 167, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 220, 221, 226, 273, 282, 285, 289, 290, 291, 294, 296, 299], "explor": [0, 1, 132, 161, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 201, 260, 269, 270, 276, 282, 290, 291, 294, 295], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 51, 53, 66, 69, 71, 72, 73, 83, 91, 92, 93, 96, 97, 98, 106, 107, 110, 111, 114, 115, 117, 122, 123, 125, 126, 130, 131, 137, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 255, 257, 258, 259, 260, 261, 264, 273, 276, 282, 286, 289, 293, 294, 295, 297, 299, 300], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 60, 61, 66, 67, 70, 95, 105, 107, 112, 117, 118, 125, 147, 158, 165, 178, 188, 192, 196, 197, 216, 222, 228, 233, 241, 250, 264, 282, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300], "hook": [0, 32, 66, 69, 71, 72, 73, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 159, 162, 163, 164, 167, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 282], "planner": [0, 141, 157, 282], "sac": [0, 206, 216, 218, 282], "redq": [0, 216, 272, 273, 282], "iql": [0, 212, 282, 294], "cql": [0, 202, 282], "td3": [0, 220, 282], "a2c": [0, 201, 282], "dreamer": [0, 90, 150, 208, 209, 210, 282, 284], "checkpoint": [0, 282, 296], "builder": [0, 282, 289, 300], "logger": [0, 247, 249, 250, 251, 252, 253, 254, 258, 264, 276, 280, 282, 289], "_util": [0, 3, 11, 282], "implement_for": [0, 3, 282], "contribut": 0, "thing": [0, 3, 7, 8, 283, 290, 291, 294, 297, 300], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 54, 55, 64, 66, 69, 71, 72, 73, 97, 131, 147, 172, 214, 283, 288, 295, 297], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 51, 52, 54, 55, 56, 58, 61, 62, 64, 66, 67, 69, 71, 72, 73, 87, 92, 95, 96, 97, 98, 105, 106, 107, 110, 111, 117, 121, 122, 125, 126, 128, 130, 131, 138, 139, 141, 155, 156, 157, 158, 160, 167, 173, 188, 191, 192, 194, 198, 203, 205, 207, 213, 214, 215, 221, 226, 227, 228, 229, 230, 231, 246, 247, 261, 280, 283, 284, 286, 288, 289, 290, 291, 294, 295, 296, 297, 300], "debug": [0, 6, 8, 40, 283, 300], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 66, 69, 71, 72, 73, 93, 105, 110, 128, 131, 142, 155, 184, 190, 195, 203, 213, 215, 264, 283, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "habitat": [0, 3, 84, 283, 296], "lab": [0, 3, 76, 77, 283], "mujoco": [0, 6, 8, 283, 290, 291], "error": [0, 1, 3, 7, 10, 11, 29, 32, 66, 69, 71, 72, 73, 111, 133, 283, 288, 290, 294, 300], "solut": [0, 3, 6, 7, 9, 21, 283, 284, 286, 299], "resourc": [0, 1, 21, 283, 288, 290, 294], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 66, 69, 71, 72, 73, 181, 214, 218, 228, 231, 283, 284, 288, 290, 291, 294, 295, 296, 300], "issu": [0, 4, 5, 8, 111, 178, 183, 184, 188, 189, 190, 191, 192, 283, 299], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 54, 55, 57, 59, 63, 64, 65, 66, 69, 71, 72, 73, 92, 97, 140, 158, 293, 294, 297, 299], "search": [0, 289], "page": [0, 7], "somewhat": [1, 285, 300], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 51, 53, 66, 69, 71, 72, 73, 126, 215, 261, 299, 300], "dataload": [1, 53, 61, 289, 290, 297], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 100, 114, 153, 165, 182, 185, 187, 284, 289, 297, 299, 300], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 51, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 102, 105, 106, 107, 110, 111, 112, 114, 121, 122, 123, 124, 125, 126, 128, 130, 131, 137, 140, 141, 142, 143, 144, 146, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 231, 234, 236, 237, 238, 242, 243, 245, 255, 260, 261, 262, 273, 276, 280, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 100, 105, 110, 125, 126, 130, 153, 154, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 261, 264, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 51, 52, 92, 107, 110, 130, 133, 187, 202, 204, 206, 216, 218, 220, 255, 261, 264, 266, 267, 268, 276, 286, 288, 291, 294, 295, 296, 297, 299, 300], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 50, 66, 69, 71, 72, 73, 97, 107, 123, 140, 176, 194, 207, 209, 214, 234, 267, 286, 288, 289, 290, 294, 295, 300], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 66, 69, 71, 72, 73, 91, 95, 101, 110, 122, 125, 126, 127, 128, 130, 140, 153, 191, 192, 201, 202, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 284, 288, 291, 294, 295, 297, 300], "static": [1, 11, 40, 45, 131, 212, 295, 297], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 66, 67, 69, 71, 72, 73, 87, 88, 89, 93, 95, 96, 97, 98, 105, 107, 110, 114, 122, 125, 126, 128, 130, 131, 137, 142, 143, 144, 145, 149, 151, 153, 154, 155, 158, 159, 162, 176, 183, 184, 185, 187, 191, 195, 196, 201, 202, 203, 204, 206, 212, 213, 214, 215, 216, 217, 218, 220, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 255, 284, 285, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 66, 69, 71, 72, 73, 84, 121, 124, 133, 159, 186, 216, 285, 288, 290, 291, 294, 295, 296, 297, 300], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 53, 66, 69, 71, 72, 73, 96, 97, 98, 112, 126, 138, 139, 153, 187, 203, 213, 214, 215, 247, 261, 266, 278, 279, 280, 284, 288, 289, 290, 291, 294, 295, 297], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 92, 95, 110, 122, 124, 125, 126, 128, 130, 131, 133, 142, 153, 159, 161, 166, 175, 179, 181, 182, 184, 188, 191, 192, 195, 202, 212, 214, 218, 228, 229, 230, 231, 232, 273, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 53, 66, 69, 70, 71, 72, 73, 92, 95, 101, 110, 117, 122, 125, 126, 127, 128, 130, 176, 191, 192, 193, 214, 286, 290, 300], "two": [1, 3, 4, 8, 10, 32, 61, 66, 69, 71, 72, 73, 107, 110, 130, 146, 153, 170, 192, 213, 223, 260, 264, 273, 285, 288, 289, 290, 291, 293, 294, 295, 297, 299, 300], "main": [1, 2, 3, 5, 20, 22, 67, 192, 264, 284, 285, 288, 289, 293, 300], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 53, 61, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 140, 142, 153, 155, 159, 160, 176, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 226, 228, 229, 230, 231, 232, 246, 257, 267, 273, 276, 277, 280, 288, 289, 290, 291, 294, 295, 297, 300], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 51, 52, 56, 61, 62, 66, 69, 70, 71, 72, 73, 96, 98, 105, 107, 110, 117, 126, 128, 130, 131, 148, 153, 155, 158, 163, 167, 184, 189, 190, 192, 194, 195, 196, 214, 225, 228, 231, 246, 260, 261, 278, 279, 284, 288, 290, 293, 295, 296, 297, 299, 300], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 125, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 273, 277, 280, 284, 288, 289, 290, 294, 297], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 50, 51, 52, 53, 66, 69, 71, 72, 73, 99, 107, 118, 142, 155, 159, 171, 178, 183, 188, 189, 191, 193, 194, 196, 214, 225, 260, 263, 264, 273, 285, 286, 288, 290, 291, 294, 295], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 51, 52, 66, 67, 69, 70, 71, 72, 73, 122, 153, 193, 194, 268, 280, 284, 286, 289, 290, 291, 294, 297, 298, 300], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 66, 67, 69, 70, 71, 72, 73, 75, 86, 101, 104, 106, 107, 120, 121, 122, 123, 126, 140, 141, 150, 153, 154, 156, 157, 182, 185, 187, 188, 192, 201, 208, 215, 227, 228, 229, 230, 231, 234, 235, 236, 246, 255, 260, 264, 286, 288, 289, 291, 293, 295, 296, 297, 299], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 66, 69, 71, 72, 73, 110, 125, 128, 131, 194, 288, 295, 299], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 51, 66, 69, 71, 72, 73, 111, 121, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 205, 214, 228, 229, 230, 231, 232, 246, 277, 288, 289, 291, 295, 297, 300], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 51, 52, 53, 54, 55, 56, 57, 64, 66, 69, 70, 71, 72, 73, 87, 92, 97, 102, 106, 107, 116, 120, 123, 131, 141, 142, 147, 148, 150, 151, 152, 153, 155, 157, 159, 162, 163, 164, 166, 168, 169, 172, 173, 174, 175, 178, 182, 185, 187, 188, 191, 192, 196, 200, 202, 206, 208, 212, 213, 216, 218, 220, 255, 257, 260, 264, 266, 267, 268, 278, 279, 280, 284, 288, 289, 290, 291, 294, 295, 296, 300], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 52, 61, 66, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 153, 155, 160, 161, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 229, 230, 231, 261, 288, 290, 291, 294, 295, 297, 300], "deliv": [1, 16, 18, 19, 20, 288, 289, 299], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 66, 69, 71, 72, 73, 131, 153, 193, 194, 246, 255, 284, 289, 293, 295, 299], "user": [1, 2, 3, 5, 8, 21, 32, 51, 66, 69, 71, 72, 73, 121, 126, 154, 215, 277, 285, 286, 288, 289, 295, 299, 300], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 51, 52, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 92, 95, 99, 101, 104, 106, 110, 117, 118, 120, 121, 122, 123, 125, 128, 129, 131, 133, 153, 177, 187, 246, 273, 288, 289, 290, 291, 293, 294, 299], "whenev": [1, 3, 32, 35, 38, 41, 42, 83, 104, 126, 214, 228, 229, 230, 231, 266, 284], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 61, 66, 69, 71, 72, 73, 182, 185, 187, 288, 290, 294, 299, 300], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 51, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 96, 98, 107, 112, 114, 116, 118, 120, 122, 125, 126, 131, 140, 141, 153, 157, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 273, 285, 288, 290, 291, 293, 294, 295, 296, 297, 299, 300], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 51, 66, 69, 70, 71, 72, 73, 75, 86, 92, 93, 95, 99, 104, 107, 112, 118, 120, 121, 125, 126, 129, 131, 140, 141, 150, 153, 154, 155, 157, 163, 166, 168, 169, 175, 179, 191, 197, 201, 203, 213, 214, 215, 216, 217, 226, 227, 228, 229, 230, 231, 232, 234, 280, 284, 285, 288, 289, 290, 291, 294, 295, 300], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 66, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 140, 153, 160, 182, 183, 185, 189, 209, 289, 290, 291, 294, 295, 296, 297, 300], "predefin": [1, 289, 290, 297], "becaus": [1, 3, 4, 7, 40, 66, 69, 71, 72, 73, 105, 125, 146, 154, 159, 178, 183, 184, 188, 189, 190, 191, 192, 288, 289, 291, 293, 294, 295, 297, 300], "potenti": [1, 295, 297], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 66, 69, 71, 72, 73, 107, 126, 129, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 164, 168, 169, 171, 173, 174, 176, 179, 182, 184, 185, 187, 188, 190, 192, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 268, 285, 288, 290, 291, 293, 294, 296, 297], "heavi": [1, 8, 297], "crucial": [1, 182, 185, 187, 212, 214, 288, 289, 290, 291, 294, 295, 300], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 105, 214, 215, 273, 284, 288, 289, 290, 294, 295], "hyperparamet": [1, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 288, 295, 297], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 59, 63, 65, 122, 277, 280, 288, 297], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 76, 77, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 279, 280, 284, 285, 288, 291, 294, 295, 296, 299], "take": [1, 3, 8, 23, 40, 66, 69, 71, 72, 73, 120, 121, 123, 125, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 186, 187, 190, 195, 198, 200, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 255, 266, 284, 286, 288, 289, 290, 294, 295, 297, 300], "consider": [1, 3, 8, 289, 294, 297], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 51, 52, 66, 69, 70, 71, 72, 73, 96, 98, 121, 126, 142, 153, 155, 196, 202, 203, 204, 205, 206, 207, 213, 214, 215, 216, 218, 220, 226, 228, 231, 288, 289, 290, 294, 295, 300], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 62, 66, 69, 70, 71, 72, 73, 92, 95, 101, 105, 107, 111, 112, 114, 117, 118, 120, 121, 125, 126, 131, 133, 140, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 188, 190, 191, 192, 195, 198, 206, 211, 213, 214, 215, 216, 219, 227, 228, 229, 230, 231, 232, 247, 259, 260, 261, 264, 276, 278, 279, 280, 284, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "occur": [1, 8, 14, 28, 29, 93, 107, 111, 178, 183, 184, 188, 189, 190, 191, 192, 209, 297, 300], "serial": [1, 3, 32, 66, 69, 71, 72, 73, 131], "optim": [1, 2, 8, 32, 66, 69, 71, 72, 73, 126, 141, 157, 160, 161, 202, 214, 215, 218, 259, 264, 276, 285, 286, 290, 291, 294, 295], "parallel": [1, 3, 8, 17, 133, 201, 277, 278, 279, 280, 289, 290, 294], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 92, 114, 276, 279, 282, 290, 291, 294, 297], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 83, 84, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 278, 279, 280, 284, 285, 286, 288, 289, 290, 291, 294, 297, 300], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 67, 71, 72, 73, 131, 278, 279, 280, 288, 290, 299, 300], "multisyncdatacollector": [1, 18, 19, 20, 21, 279, 282, 290, 299], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 51, 53, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 284, 286, 290, 297, 299], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 131, 187, 266, 284, 288, 294, 295], "aggreg": [1, 142, 143, 144, 194], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 51, 52, 61, 66, 67, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 107, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 140, 153, 155, 167, 184, 190, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 228, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 266, 284, 289, 291, 295, 296, 299, 300], "final": [1, 3, 4, 21, 34, 36, 39, 40, 153, 182, 185, 186, 187, 193, 228, 260, 284, 288, 289, 290, 294, 295, 300], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 278, 282, 288, 289, 290, 299], "sever": [1, 8, 30, 32, 45, 66, 69, 71, 72, 73, 93, 126, 215, 288, 290, 297, 300], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 58, 61, 66, 69, 70, 71, 72, 73, 87, 92, 101, 107, 111, 114, 122, 126, 127, 131, 147, 148, 153, 154, 158, 159, 160, 165, 166, 172, 176, 187, 191, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 255, 258, 261, 262, 263, 264, 266, 278, 279, 280, 286, 289, 290, 291, 293, 294, 296, 299, 300], "gather": [1, 3, 18, 20, 21, 45, 53, 111, 227, 268, 283, 288, 289, 290, 291, 294, 295, 297, 300], "continu": [1, 9, 25, 46, 66, 137, 143, 144, 145, 146, 187, 194, 201, 202, 206, 212, 215, 216, 217, 218, 219, 220, 228, 233, 241, 284, 288, 290, 291, 294, 295, 297, 299, 300], "concomitantli": 1, "network": [1, 4, 8, 32, 66, 69, 71, 72, 73, 142, 143, 144, 145, 146, 148, 150, 151, 155, 159, 161, 163, 164, 166, 168, 169, 170, 175, 179, 180, 181, 191, 195, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 226, 228, 229, 230, 231, 232, 275, 276, 284, 285, 286, 293, 295, 300], "impli": [1, 300], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 153, 161, 191, 201, 202, 203, 206, 209, 214, 266, 275, 284, 286, 288, 289, 290, 291, 293, 295, 297, 299], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 51, 66, 69, 71, 72, 73, 105, 107, 118, 126, 127, 131, 133, 155, 285, 286, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300], "slightli": [1, 284, 285, 291, 295, 296, 297, 300], "lag": [1, 13, 14, 16, 17, 288, 289, 290], "therefor": [1, 3, 7, 66, 114, 121, 215, 226, 300], "although": [1, 8, 66, 69, 71, 72, 73, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 286, 288, 289, 297], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 51, 52, 53, 54, 55, 64, 66, 69, 70, 71, 72, 73, 87, 92, 105, 110, 117, 120, 123, 125, 127, 130, 140, 158, 182, 185, 187, 188, 191, 192, 200, 201, 202, 203, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 285, 286, 288, 289, 290, 293, 294, 295, 297, 300], "asynchron": [1, 9, 14, 21, 32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 201, 214, 278, 289, 290], "off": [1, 2, 4, 152, 174, 183, 218, 260, 269, 284, 286, 288, 289, 290, 294, 296, 300], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 51, 66, 69, 71, 72, 73, 96, 98, 101, 107, 121, 149, 153, 159, 160, 179, 181, 184, 189, 201, 207, 212, 214, 215, 260, 284, 286, 288, 289, 290, 291, 294, 295, 296, 297, 300], "remot": [1, 18, 19, 20, 21, 72, 73, 300], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 66, 69, 70, 71, 72, 73, 88, 89, 92, 96, 98, 105, 112, 133, 141, 153, 157, 187, 201, 268, 284, 288, 290, 291, 296, 297, 299], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 118, 216, 228, 229, 230, 231, 232, 285, 288, 290], "synchronis": [1, 67, 294], "either": [1, 5, 22, 32, 40, 53, 66, 69, 71, 72, 73, 121, 197, 220, 251, 286, 288, 289, 291, 296, 297, 299, 300], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 288, 294, 299], "update_at_each_batch": [1, 13, 14, 17, 288], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 92, 93, 95, 97, 101, 104, 105, 106, 107, 110, 111, 112, 116, 120, 122, 124, 125, 126, 127, 128, 130, 131, 133, 137, 140, 141, 142, 143, 144, 145, 146, 151, 153, 155, 157, 158, 159, 160, 161, 173, 174, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 228, 229, 230, 231, 234, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 257, 258, 260, 261, 264, 280, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "second": [1, 8, 153, 184, 203, 213, 215, 218, 263, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 64, 66, 68, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 95, 96, 98, 105, 109, 110, 112, 114, 122, 124, 125, 126, 128, 130, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 153, 154, 155, 157, 159, 160, 161, 166, 167, 175, 178, 179, 180, 181, 183, 184, 187, 188, 189, 190, 191, 194, 196, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 220, 226, 261, 266, 273, 274, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 66, 69, 71, 72, 73, 101, 105, 125, 148, 149, 162, 179, 180, 181, 183, 184, 186, 191, 197, 201, 203, 204, 205, 207, 213, 214, 215, 217, 226, 227, 228, 229, 230, 231, 264, 273, 282, 286, 288, 289, 290, 291, 293, 294, 295, 300], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 51, 66, 67, 69, 70, 71, 72, 73, 77, 92, 107, 122, 125, 131, 137, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 198, 205, 214, 226, 228, 229, 230, 231, 247, 251, 260, 268, 269, 270, 273, 276, 278, 279, 284, 285, 286, 288, 290, 291, 295, 297, 300], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 53, 54, 55, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 95, 96, 98, 110, 112, 114, 122, 125, 126, 128, 130, 137, 140, 141, 153, 157, 160, 161, 166, 167, 175, 178, 179, 180, 181, 183, 184, 188, 189, 190, 191, 194, 196, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 220, 226, 261, 273, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 51, 112, 146, 153, 155, 162, 176, 178, 182, 183, 185, 191, 196, 214, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 283, 285, 288, 289, 290, 294, 295, 297, 299, 300], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 51, 52, 57, 59, 62, 63, 65, 66, 67, 69, 71, 72, 73, 87, 92, 96, 97, 98, 106, 107, 110, 119, 126, 127, 130, 131, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 159, 162, 163, 164, 165, 167, 168, 169, 171, 176, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 228, 229, 230, 231, 235, 236, 257, 259, 260, 264, 268, 273, 280, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 95, 105, 109, 110, 122, 125, 126, 128, 130, 191, 214, 256, 288, 289, 290, 291, 294, 296, 300], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 72, 73, 93, 97, 117, 125, 131, 153, 154, 160, 161, 178, 183, 188, 189, 191, 192, 195, 203, 206, 213, 215, 216, 220, 234, 273, 280, 284, 286, 288, 289, 290, 294, 295, 297, 299], "infer": [1, 72, 73, 92, 121, 131, 153, 160, 288, 290, 297], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 66, 69, 70, 71, 72, 73, 76, 77, 106, 107, 126, 131, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 193, 194, 195, 198, 214, 260, 278, 279, 280, 283, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299], "dispatch": [1, 18, 19, 20, 21, 176], "avail": [1, 3, 4, 6, 21, 61, 105, 149, 167, 188, 192, 214, 278, 279, 284, 288, 289, 290, 291, 294, 295, 297, 300], "speed": [1, 2, 4, 8, 27, 285, 288, 289, 290, 291, 294, 295, 297], "up": [1, 2, 3, 8, 9, 27, 40, 51, 215, 283, 284, 285, 288, 289, 290, 291, 294, 295, 297, 300], "avoid": [1, 32, 66, 69, 71, 72, 73, 83, 126, 131, 178, 191, 196, 203, 213, 215, 267, 290, 294], "oom": 1, "choic": [1, 2, 51, 162, 284, 285, 288, 289, 294], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 58, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 93, 96, 98, 101, 110, 112, 114, 119, 122, 124, 126, 127, 130, 131, 137, 140, 141, 142, 147, 149, 153, 154, 155, 157, 158, 159, 162, 165, 166, 167, 168, 169, 172, 175, 176, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 194, 196, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 247, 255, 261, 273, 284, 289, 290, 291, 293, 294, 295, 296, 299, 300], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 66, 67, 68, 69, 71, 72, 73, 96, 98, 112, 125, 127, 131, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 160, 162, 163, 164, 166, 168, 169, 171, 175, 176, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 203, 213, 214, 215, 228, 229, 230, 231, 232, 261, 278, 279, 280, 284, 288, 289, 290, 291, 293, 294, 295, 297, 300], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 57, 87, 92, 101, 127, 131, 153, 201, 203, 204, 206, 212, 213, 214, 215, 216, 217, 218, 220, 228, 229, 230, 231, 284, 285, 289, 290, 294, 297], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 53, 54, 55, 56, 57, 64, 66, 69, 71, 72, 73, 131, 141, 154, 157, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 273, 282, 286, 288, 290, 291, 294, 296, 297, 300], "while": [1, 3, 7, 8, 32, 66, 69, 71, 72, 73, 114, 126, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 212, 213, 214, 215, 284, 288, 290, 291, 294, 295, 296, 297, 299], "wait": [1, 20, 21, 22, 291, 295], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 53, 54, 55, 64, 66, 69, 71, 72, 73, 83, 92, 97, 107, 112, 114, 117, 118, 122, 126, 169, 193, 194, 195, 201, 202, 204, 205, 206, 212, 214, 215, 218, 228, 235, 236, 284, 286, 288, 289, 290, 291, 293, 294, 295, 297, 300], "impact": [1, 96, 98, 289, 291, 294], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 54, 66, 67, 69, 71, 72, 73, 92, 95, 110, 122, 125, 126, 128, 130, 131, 191, 214, 280, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "manag": [1, 8, 224, 225, 228, 229, 230, 231, 260], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 66, 69, 71, 72, 73, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 109, 110, 111, 112, 114, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 140, 141, 148, 153, 156, 157, 167, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 247, 258, 259, 260, 262, 263, 264, 268, 273, 285, 286, 288, 290, 291, 293, 294, 295, 297, 299, 300], "control": [1, 3, 5, 8, 16, 76, 77, 97, 140, 143, 144, 145, 146, 153, 156, 157, 169, 176, 187, 191, 192, 193, 201, 203, 213, 215, 219, 228, 233, 241, 284, 286, 288, 289, 290, 294, 295, 297], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 51, 53, 61, 66, 69, 71, 72, 73, 92, 93, 102, 105, 106, 107, 110, 111, 120, 122, 123, 125, 126, 128, 133, 152, 153, 158, 174, 179, 180, 181, 188, 191, 192, 194, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 226, 228, 229, 230, 231, 255, 259, 273, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 288, 289, 294, 299], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 51, 52, 66, 69, 71, 72, 73, 92, 96, 98, 102, 121, 126, 153, 260, 264, 285, 288, 289, 290, 291, 294, 295, 297, 300], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 187, 288, 300], "usual": [1, 3, 4, 6, 7, 8, 51, 66, 69, 71, 72, 73, 161, 215, 228, 229, 230, 231, 232, 246, 273, 283, 284, 286, 288, 289, 290, 291, 294, 297, 300], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 51, 61, 66, 67, 69, 71, 72, 73, 92, 96, 97, 98, 102, 106, 107, 125, 126, 131, 142, 153, 155, 158, 159, 187, 195, 288, 289, 290, 293, 294, 296, 297, 300], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 51, 52, 54, 55, 56, 61, 64, 66, 68, 69, 71, 72, 73, 92, 96, 98, 114, 282, 286, 289, 290, 291, 294, 296], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 64, 66, 69, 71, 72, 73, 76, 87, 92, 93, 97, 101, 105, 106, 107, 110, 111, 114, 116, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 273, 276, 280, 286, 288, 289, 290, 291, 296, 297, 299, 300], "behaviour": [1, 3, 21, 69, 93, 96, 98, 107, 111, 121, 140, 152, 153, 174, 260, 284, 289, 291, 295, 297], "besid": 1, "those": [1, 5, 7, 26, 28, 72, 73, 96, 98, 107, 122, 153, 188, 192, 193, 194, 266, 278, 279, 284, 288, 289, 294, 295, 300], "choos": [1, 153, 215, 284, 285, 288, 289, 290, 294, 297], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 51, 52, 66, 69, 70, 71, 72, 73, 87, 105, 110, 128, 142, 153, 155, 184, 189, 190, 200, 201, 202, 203, 204, 206, 212, 213, 214, 215, 216, 217, 218, 220, 264, 273, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 297, 299, 300], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 267, 288, 290, 299], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 69, 92, 102, 182, 185, 187, 246, 247, 257, 260, 264, 267, 268, 288, 289, 290, 291, 294, 297, 299, 300], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 58, 61, 62, 64, 66, 69, 71, 72, 73, 87, 92, 95, 97, 101, 104, 105, 107, 109, 110, 117, 120, 122, 125, 126, 128, 130, 131, 133, 138, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 157, 159, 160, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 191, 192, 194, 195, 198, 203, 213, 214, 215, 227, 228, 229, 230, 231, 246, 260, 286, 289, 290, 291, 294, 295, 297, 300], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 92, 114, 267, 288, 289, 290, 291, 294, 297, 299], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 66, 67, 69, 71, 72, 73, 110, 117, 120, 121, 122, 123, 130, 131, 149, 153, 159, 163, 166, 167, 175, 182, 183, 184, 190, 194, 234, 237, 238, 239, 240, 242, 243, 244, 245, 260, 261, 278, 279, 284, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 267, 288, 289], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 58, 66, 69, 70, 71, 72, 73, 97, 106, 107, 122, 133, 153, 188, 191, 192, 202, 216, 260, 268, 284, 288, 289, 290, 291, 295, 296, 297, 299, 300], "rand_step": [1, 3, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 85, 104, 122, 131, 295, 299, 300], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 288], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 51, 288, 289, 290], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 51, 57, 66, 69, 71, 72, 73, 111, 125, 141, 153, 157, 187, 215, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 255, 282, 285, 288, 289, 290, 291, 295, 297, 299, 300], "pad": [1, 23, 37, 43, 51, 92, 142, 143, 144, 153, 154, 158, 261], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 51, 55, 64, 92, 93, 107, 111, 117, 124, 153, 155, 158, 161, 183, 188, 191, 192, 214, 284, 288, 289, 291, 294, 295, 297], "mask": [1, 4, 23, 111, 158, 261, 289, 291, 300], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 57, 59, 63, 65, 66, 69, 71, 72, 73, 92, 95, 110, 122, 124, 125, 126, 128, 130, 156, 191, 200, 207, 214, 264, 283, 289, 290, 293, 294, 295, 297, 300], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 69, 111, 158, 182, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 286, 291], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 66, 69, 71, 72, 73, 102, 111, 131, 149, 158, 167, 183, 184, 189, 190, 192, 223, 228, 261, 288, 290, 291, 294], "valid": [1, 3, 23, 34, 36, 37, 45, 53, 111, 126, 142, 155, 158, 182, 185, 187, 213, 228, 229, 230, 231, 261, 286, 300], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 260, 282, 288, 289], "strategi": [1, 16, 284, 286, 288, 289, 294, 297], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 66, 69, 71, 72, 73, 110, 130, 284, 285, 288, 290, 294, 295, 297, 300], "tool": [1, 2, 3, 5, 291, 295, 297, 300], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 82, 83, 286, 288, 290, 291, 295], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 282], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 282], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 57, 61, 64, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 93, 95, 96, 97, 98, 105, 107, 110, 112, 114, 116, 121, 122, 124, 125, 126, 128, 130, 131, 137, 140, 141, 142, 147, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 199, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 234, 255, 262, 263, 273, 276, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "multiprocess": [1, 18, 19, 20, 67, 68, 131, 289, 290, 295, 300], "synchron": [1, 13, 19, 21, 71, 278, 279, 289, 290], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 66, 69, 71, 72, 73, 96, 98, 121, 126, 131, 134, 138, 139, 147, 152, 153, 165, 172, 173, 174, 188, 192, 214, 260, 288, 289, 291, 294, 299, 300], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 182, 185, 187, 258, 262, 288, 289, 294], "dedic": [1, 3, 18, 19, 20, 21, 179, 180, 181, 284, 288, 293, 294], "folder": [1, 289], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 66, 69, 71, 72, 73, 111, 193, 194, 255, 264, 284, 288, 289, 290, 293, 299, 300], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 66, 67, 69, 70, 71, 72, 73, 92, 95, 96, 98, 100, 105, 107, 110, 117, 122, 123, 125, 126, 128, 130, 131, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 191, 192, 194, 195, 198, 209, 214, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 259, 264, 267, 278, 279, 280, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300], "variou": [1, 3, 13, 14, 16, 17, 153, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 226, 278, 279, 288, 289, 290, 294, 300], "machin": [1, 7, 18, 19, 20, 32, 52, 294], "One": [1, 2, 4, 8, 31, 33, 45, 92, 114, 128, 165, 182, 185, 191, 195, 219, 223, 251, 288, 289, 297, 300], "wonder": 1, "why": [1, 3, 295, 300], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 71, 73, 277, 282, 288, 289, 290, 293, 299, 300], "instead": [1, 4, 7, 8, 11, 27, 32, 66, 69, 71, 72, 73, 101, 122, 126, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 201, 202, 203, 205, 206, 207, 212, 213, 215, 216, 217, 218, 226, 228, 232, 280, 284, 295, 297, 300], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 51, 66, 69, 71, 72, 73, 95, 96, 98, 110, 118, 121, 122, 124, 125, 126, 128, 130, 152, 155, 169, 173, 174, 191, 194, 200, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 220, 266, 278, 279, 280, 284, 285, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300], "lower": [1, 2, 17, 21, 25, 131, 168, 169, 195, 290, 295], "io": [1, 71], "footprint": [1, 2, 297], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 62, 66, 69, 71, 72, 73, 92, 101, 110, 112, 126, 130, 131, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 160, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 189, 190, 191, 195, 198, 200, 206, 216, 217, 218, 220, 227, 232, 247, 264, 280, 284, 285, 288, 289, 290, 291, 294, 295, 297, 299, 300], "commun": [1, 2, 3, 283, 290, 300], "yet": [1, 214, 296], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 51, 66, 68, 69, 70, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 137, 149, 167, 169, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 226, 273, 284, 288, 289, 290, 291, 293, 294, 299], "plai": [1, 3, 92, 289, 290, 297, 300], "role": [1, 3, 289, 300], "opposit": 1, "direct": [1, 32, 66, 69, 71, 72, 73, 214, 289], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 66, 69, 71, 72, 73, 140, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 183, 184, 185, 187, 189, 190, 195, 198, 288, 289, 290, 291, 295, 296, 297, 299, 300], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 228, 229, 230, 231, 291, 294], "share": [1, 2, 3, 6, 8, 34, 36, 39, 54, 55, 56, 62, 64, 67, 72, 73, 131, 153, 159, 179, 180, 181, 201, 203, 204, 206, 212, 213, 215, 216, 217, 218, 220, 280, 284, 290, 291, 293, 294, 299, 300], "among": [1, 3, 294], "achiev": [1, 3, 4, 32, 66, 69, 71, 72, 73, 121, 261, 286, 288, 289, 290, 291, 294, 295, 300], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 110, 125, 130, 214, 285, 286, 288, 289, 290, 291, 297, 300], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 66, 260, 285, 288, 290, 294, 297, 300], "gpu": [1, 7, 8, 32, 66, 69, 71, 72, 73, 214, 288, 290, 291, 294, 300], "nativ": [1, 7, 9, 66, 69, 71, 72, 73, 92, 291, 297], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 152, 173, 174, 200, 283, 288, 289, 290, 291, 294, 296, 300], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 57, 107, 131, 141, 147, 150, 153, 154, 157, 172, 182, 188, 192, 214, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 284, 285, 288, 289, 290, 294, 295, 297, 299, 300], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 53, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 153, 178, 182, 183, 185, 187, 188, 189, 191, 192, 195, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 226, 228, 229, 230, 231, 232, 277, 288, 289, 290, 294, 297, 300], "build": [1, 3, 7, 23, 26, 32, 66, 69, 71, 72, 73, 131, 141, 153, 157, 186, 188, 192, 264, 271, 272, 274, 275, 284, 286, 290, 291, 294, 295, 296, 299, 300], "central": [2, 288, 289, 294, 297], "part": [2, 4, 8, 32, 40, 66, 69, 71, 72, 73, 107, 114, 117, 153, 196, 214, 255, 280, 288, 290, 291, 295, 300], "algorithm": [2, 3, 8, 9, 13, 14, 70, 102, 201, 215, 216, 217, 218, 255, 269, 282, 285, 286, 288, 289, 290, 291, 294, 296, 297, 299], "implement": [2, 3, 9, 11, 16, 32, 62, 66, 69, 71, 72, 73, 95, 105, 112, 125, 131, 152, 172, 173, 174, 201, 202, 212, 214, 215, 218, 273, 284, 286, 288, 289, 290, 291, 295, 299], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 51, 61, 66, 67, 69, 71, 72, 73, 92, 105, 110, 112, 122, 128, 131, 141, 153, 154, 159, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "give": [2, 7, 41, 70, 92, 283, 285, 288, 289, 294, 295, 296, 299], "abil": [2, 214, 295, 297], "veri": [2, 3, 289, 295, 297, 299, 300], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 57, 58, 61, 64, 66, 69, 70, 71, 72, 73, 87, 92, 111, 114, 134, 135, 138, 139, 141, 147, 152, 157, 158, 165, 168, 173, 174, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 201, 202, 203, 204, 205, 213, 215, 220, 255, 261, 264, 267, 284, 288, 289, 290, 291, 294, 296, 299, 300], "latenc": 2, "especi": [2, 3, 7, 8, 93], "larger": [2, 4, 212], "volum": 2, "lazymemmapstorag": [2, 92, 282, 288, 289, 291, 296, 297], "advis": [2, 300], "due": [2, 3, 5, 296, 297, 300], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 54, 296, 297], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 62, 66, 69, 71, 72, 73, 168, 169, 214, 232, 288, 289, 291, 296, 297, 299, 300], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 66, 69, 71, 72, 73, 96, 98, 117, 119, 121, 127, 141, 191, 192, 214, 219, 284, 288, 290, 291], "file": [2, 6, 7, 8, 246, 286, 289, 297, 298], "locat": [2, 7, 45, 66, 69, 71, 72, 73, 107, 116, 152, 162, 173, 174, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 288, 289, 290, 294, 297], "improv": [2, 4, 102, 201, 285, 294, 297], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 282, 297], "were": [2, 7, 72, 73, 290, 297], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 66, 69, 71, 72, 73, 131, 188, 192, 213, 214, 215, 288, 289, 291], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 52, 57, 71, 92, 110, 128, 143, 144, 145, 146, 149, 150, 151, 157, 158, 161, 163, 164, 166, 168, 169, 175, 184, 187, 201, 202, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 228, 233, 241, 273, 296, 299], "github": [2, 5, 6, 7, 10, 18, 19, 20, 128, 296, 299], "com": [2, 5, 6, 7, 10, 18, 19, 20, 296, 299], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 66, 69, 70, 71, 72, 73, 95, 105, 110, 112, 122, 125, 126, 128, 130, 131, 135, 139, 142, 155, 158, 159, 161, 166, 175, 182, 183, 185, 188, 191, 192, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 222, 226, 234, 273, 278, 284, 288, 289, 290, 294, 295, 297, 300], "1x": 2, "lazytensorstorag": [2, 41, 42, 114, 282, 290, 294, 297], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 66, 69, 71, 72, 73, 87, 92, 95, 97, 105, 107, 110, 112, 114, 122, 124, 125, 126, 128, 130, 137, 141, 142, 143, 144, 149, 151, 153, 154, 155, 157, 158, 159, 162, 165, 166, 176, 178, 179, 180, 181, 183, 184, 188, 190, 191, 194, 195, 196, 201, 202, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 234, 237, 238, 239, 240, 242, 243, 244, 245, 247, 263, 284, 286, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 152, 173, 174, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 289, 290, 295, 297, 300], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 51, 52, 54, 55, 56, 57, 64, 87, 92, 111, 142, 178, 182, 183, 191, 192, 196, 255, 288, 290, 297, 300], "pai": [2, 8, 288, 291], "attent": [2, 8, 288, 291], "alwai": [2, 3, 20, 26, 28, 32, 53, 66, 69, 71, 72, 73, 105, 106, 207, 214, 284, 285, 289, 290, 291, 294, 295, 297], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 51, 61, 122, 152, 166, 173, 174, 288, 291, 294, 295, 297, 299], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 51, 54, 55, 64, 66, 69, 71, 72, 73, 92, 93, 101, 107, 111, 119, 124, 127, 131, 142, 153, 155, 158, 160, 161, 166, 170, 171, 172, 173, 176, 183, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 280, 284, 288, 289, 290, 291, 294, 295, 297], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 51, 54, 55, 56, 61, 62, 64, 66, 69, 70, 71, 72, 73, 97, 118, 124, 128, 131, 153, 161, 162, 184, 190, 192, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 261, 273, 278, 279, 284, 286, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300], "word": [2, 40, 51, 214, 288, 295, 300], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 53, 66, 67, 69, 71, 72, 73, 92, 110, 117, 125, 126, 128, 131, 137, 140, 142, 143, 144, 145, 146, 151, 153, 155, 156, 159, 192, 205, 207, 216, 226, 247, 261, 268, 269, 270, 276, 278, 279, 284, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300], "1m": [2, 267, 288, 290, 291, 296], "multidimension": [2, 41, 57, 297], "doe": [2, 3, 18, 35, 41, 45, 51, 57, 62, 153, 160, 176, 193, 194, 201, 203, 207, 213, 215, 227, 264, 284, 286, 288, 289, 290, 291, 295, 297, 300], "desir": [2, 3, 32, 66, 69, 71, 72, 73, 95, 107, 110, 111, 122, 125, 126, 128, 130, 138, 139, 142, 155, 159, 178, 183, 184, 188, 189, 190, 191, 192, 214, 284, 288, 294, 295], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 51, 52, 62, 66, 69, 71, 72, 73, 79, 81, 86, 107, 110, 111, 114, 128, 133, 159, 160, 183, 192, 214, 215, 228, 229, 230, 231, 261, 270, 280, 284, 285, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "do": [2, 3, 4, 7, 69, 106, 111, 131, 140, 159, 160, 180, 228, 286, 288, 289, 290, 291, 293, 294, 295, 297, 299, 300], "custom": [2, 3, 5, 32, 66, 69, 71, 72, 73, 128, 159, 195, 207, 215, 221, 280, 284, 288, 289, 290, 291, 294], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 51, 52, 53, 66, 69, 71, 72, 73, 76, 97, 99, 112, 117, 118, 126, 128, 153, 189, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 232, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 273, 286, 288, 289, 290, 291, 294, 295, 300], "randomcroptensordict": [2, 288], "here": [2, 3, 4, 7, 8, 9, 10, 92, 284, 285, 288, 289, 290, 291, 294, 295, 297, 299, 300], "how": [2, 3, 18, 19, 20, 32, 35, 41, 57, 66, 69, 71, 72, 73, 201, 203, 211, 213, 215, 264, 283, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 162, 176, 182, 185, 187, 192, 197, 228, 252, 253, 254, 280, 282, 290, 291, 294, 296, 300], "around": [2, 5, 7, 15, 17, 41, 42, 70, 192, 228, 288, 289, 294, 300], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 92, 133, 202, 212, 286, 296, 297, 299], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 51, 52, 57, 61, 66, 69, 71, 72, 73, 99, 117, 118, 140, 143, 144, 145, 146, 151, 161, 187, 191, 192, 193, 194, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 280, 286, 288, 293, 294, 297, 299], "replaybuff": [2, 41, 42, 65, 92, 111, 114, 205, 207, 226, 274, 276, 282, 290, 294, 296, 297, 299], "sampler": [2, 35, 38, 41, 42, 51, 52, 54, 55, 56, 57, 58, 61, 62, 64, 111, 205, 207, 226, 282, 288, 290, 294, 297], "By": [2, 3, 33, 66, 69, 71, 72, 73, 176, 192, 214, 260, 280, 288, 296, 297, 300], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 51, 52, 54, 66, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 137, 149, 162, 178, 179, 180, 181, 183, 188, 189, 191, 192, 194, 195, 196, 197, 226, 260, 282, 284, 285, 288, 289, 290, 291, 296], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 59, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 92, 93, 95, 96, 97, 98, 101, 104, 107, 110, 111, 112, 114, 116, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 166, 167, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 201, 202, 204, 205, 206, 209, 210, 212, 214, 215, 216, 217, 218, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 273, 284, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 66, 69, 71, 72, 73, 112, 122, 140, 155, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 221, 223, 226, 284, 286, 288, 290, 291, 294, 295, 297, 300], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 51, 52, 264, 283, 290, 291, 294, 300], "respons": [2, 3, 8, 264, 300], "d4rl": [2, 51], "clone": [2, 4, 8, 26, 28, 105, 179, 180, 181, 191, 212, 273, 282, 288, 295, 299], "repositori": [2, 7, 52], "latest": [2, 10, 71, 261, 290, 294, 295, 299], "wheel": [2, 290], "publish": 2, "pypi": [2, 299], "openml": [2, 52, 87], "scikit": [2, 52], "panda": [2, 52], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 155, 176, 191, 193, 194, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 284, 286, 288, 289, 290, 291, 294, 295, 297, 300], "parent": [2, 3, 21, 26, 28, 44, 66, 93, 101, 102, 107, 110, 122, 125, 127, 128, 179, 214, 215, 232, 288, 295, 299, 300], "subclass": [2, 3, 66, 69, 71, 72, 73, 125, 133, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 191, 192, 193, 195, 198, 214, 215, 289, 291, 295, 297], "basic": [2, 70, 284, 290, 300], "properti": [2, 3, 32, 34, 36, 39, 66, 69, 70, 71, 72, 73, 126, 147, 152, 160, 165, 172, 173, 174, 214, 295, 297], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 51, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 101, 103, 104, 105, 107, 108, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 140, 143, 144, 145, 146, 149, 153, 154, 163, 164, 167, 168, 178, 179, 180, 181, 183, 185, 187, 188, 189, 196, 197, 201, 202, 203, 204, 205, 206, 209, 212, 213, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 247, 273, 276, 284, 286, 289, 290, 291, 293, 294, 295, 297, 299, 300], "action": [2, 3, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 66, 69, 70, 71, 72, 73, 75, 86, 88, 89, 96, 97, 98, 102, 105, 106, 112, 114, 118, 126, 137, 140, 141, 143, 144, 145, 146, 148, 149, 150, 153, 155, 156, 157, 158, 166, 167, 169, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 195, 196, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 273, 276, 280, 284, 285, 286, 288, 289, 290, 293, 294, 296, 297, 299, 300], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 64, 66, 69, 71, 72, 73, 87, 89, 93, 96, 98, 105, 107, 112, 114, 122, 124, 131, 132, 133, 137, 140, 141, 147, 148, 153, 155, 157, 158, 159, 160, 162, 165, 166, 167, 172, 175, 178, 179, 180, 181, 183, 184, 188, 189, 190, 191, 194, 195, 196, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 223, 226, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 255, 261, 264, 276, 284, 288, 289, 290, 291, 293, 294, 296, 297, 299, 300], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 57, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 95, 96, 97, 98, 105, 107, 110, 112, 114, 122, 124, 125, 126, 128, 130, 133, 137, 140, 141, 149, 153, 157, 160, 161, 166, 167, 175, 178, 179, 180, 181, 183, 184, 187, 188, 189, 190, 191, 194, 196, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 234, 273, 284, 290, 291, 293, 294, 295, 296, 297, 299, 300], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 51, 53, 54, 55, 57, 64, 66, 67, 69, 70, 71, 72, 73, 81, 82, 83, 92, 104, 105, 107, 110, 112, 114, 122, 130, 131, 137, 140, 141, 149, 153, 155, 157, 159, 162, 166, 167, 175, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 257, 260, 273, 276, 284, 285, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 51, 66, 67, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 107, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 142, 147, 153, 155, 159, 172, 178, 188, 189, 191, 192, 195, 196, 202, 206, 213, 216, 218, 261, 266, 284, 288, 290, 293, 294, 295, 297, 299, 300], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 66, 69, 70, 71, 72, 73, 87, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 109, 110, 111, 112, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 140, 142, 143, 144, 145, 146, 148, 153, 154, 155, 159, 160, 161, 167, 168, 169, 170, 171, 176, 178, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 258, 262, 267, 276, 284, 285, 286, 288, 289, 290, 291, 294, 295, 299, 300], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 51, 52, 66, 69, 70, 71, 72, 73, 87, 92, 95, 96, 98, 105, 107, 110, 112, 123, 125, 128, 130, 133, 142, 143, 144, 148, 149, 150, 153, 154, 155, 159, 162, 167, 176, 178, 179, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 247, 255, 284, 285, 288, 289, 290, 291, 293, 294, 295, 296, 299, 300], "send": [2, 3, 8, 299], "receiv": [2, 3, 32, 40, 66, 69, 71, 72, 73, 121, 125, 155, 234, 285, 288, 290, 293, 295], "spawn": [2, 3, 4, 18, 22, 71, 294], "check_env_spec": [2, 3, 282, 290, 294, 295], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 51, 52, 53, 54, 55, 56, 57, 62, 64, 66, 69, 71, 72, 73, 92, 95, 101, 105, 107, 110, 112, 113, 114, 122, 125, 126, 128, 130, 141, 154, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 191, 192, 193, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 232, 246, 277, 285, 286, 287, 289, 290, 291, 295, 297, 300], "saniti": [2, 3, 7, 133, 290], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 66, 69, 70, 71, 72, 73, 95, 97, 107, 110, 122, 125, 126, 128, 130, 140, 141, 149, 150, 157, 167, 171, 178, 183, 184, 187, 190, 191, 192, 193, 194, 196, 200, 204, 205, 214, 227, 228, 229, 230, 231, 232, 234, 256, 260, 276, 284, 286, 288, 289, 290, 294, 295, 300], "techniqu": [2, 8, 289, 297], "commonli": [2, 300], "emploi": [2, 161], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 297], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 66, 69, 71, 72, 73, 92, 96, 98, 131, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 205, 207, 226, 284, 295, 299], "offer": [2, 3, 7, 284, 289, 295, 300], "facilit": [2, 3, 7, 66, 109, 110, 128, 130, 179, 180, 181, 284, 288, 291, 295], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 121, 188, 192, 288, 290, 294, 295, 300], "extern": [2, 3, 96, 98, 300], "consist": [2, 3, 32, 35, 38, 41, 42, 66, 69, 71, 72, 73, 105, 142, 155, 288, 289, 290, 295, 296, 300], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214, 288, 289, 300], "manner": [2, 69, 110, 128, 284, 288, 289, 290, 293, 295, 297], "handl": [3, 21, 32, 66, 69, 71, 72, 73, 131, 153, 155, 264, 278, 279, 288, 289, 290, 294, 297], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 51, 66, 69, 71, 72, 73, 92, 97, 107, 112, 121, 126, 127, 149, 153, 155, 157, 159, 167, 212, 214, 215, 223, 228, 229, 230, 235, 236, 260, 264, 266, 278, 279, 284, 285, 286, 288, 289, 290, 293, 294, 295, 296, 297, 300], "dm": [3, 288, 300], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 60, 63, 65, 70, 71, 114, 122, 128, 129, 179, 186, 201, 202, 204, 205, 206, 208, 212, 215, 216, 217, 218, 220, 264, 273, 284, 285, 286, 288, 289, 291, 294, 295, 297, 300], "goal": [3, 4, 121, 288, 289, 290, 291, 294, 295], "abl": [3, 288, 290, 291, 293, 294, 295, 297, 299], "experi": [3, 35, 38, 41, 42, 51, 52, 57, 133, 249, 250, 251, 252, 253, 254, 283, 289, 290, 294, 297], "even": [3, 4, 8, 14, 18, 20, 21, 54, 55, 56, 62, 64, 66, 67, 288, 290, 294, 295, 300], "simul": [3, 5, 7, 8, 90, 141, 157, 284, 288, 290, 294], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 51, 54, 55, 64, 66, 69, 71, 72, 73, 110, 128, 133, 143, 153, 171, 192, 193, 194, 255, 267, 284, 286, 288, 289, 290, 291, 294, 295, 297, 299, 300], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 51, 66, 69, 71, 72, 73, 122, 133, 158, 160, 161, 178, 183, 184, 187, 188, 189, 190, 191, 192, 224, 225, 286, 288, 289, 290, 291, 294, 295, 297, 299, 300], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 51, 66, 69, 71, 72, 73, 178, 183, 184, 188, 189, 190, 191, 192, 214, 228, 229, 230, 231, 232, 285, 288, 289, 295, 300], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 104, 105, 107, 112, 114, 122, 131, 153, 273, 276, 288, 289, 290, 291, 293, 294, 296, 297, 299, 300], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 66, 69, 70, 71, 72, 73, 95, 97, 105, 110, 122, 125, 126, 128, 130, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 155, 157, 159, 162, 166, 167, 175, 178, 179, 180, 181, 183, 185, 187, 188, 189, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 273, 276, 284, 285, 288, 289, 290, 291, 293, 294, 295, 296, 299], "typic": [3, 4, 8, 32, 66, 69, 71, 72, 73, 121, 202, 214, 215, 218, 284, 285, 286, 290, 294, 295], "organis": [3, 289, 295], "arbitrari": [3, 33, 72, 73, 284, 288, 289, 295], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 54, 55, 64, 66, 69, 71, 72, 73, 228, 229, 230, 231, 232, 286, 289, 290, 294, 295, 297, 299], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 66, 96, 98, 187, 228, 229, 230, 231, 232, 285, 288, 290, 291, 294, 295, 296, 297], "attribut": [3, 4, 32, 45, 66, 69, 71, 72, 73, 110, 120, 128, 153, 192, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 288, 291, 295], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 51, 52, 53, 54, 55, 58, 64, 66, 68, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 92, 96, 98, 112, 114, 122, 140, 141, 149, 153, 157, 166, 167, 175, 176, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 196, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 226, 255, 261, 273, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 66, 69, 71, 72, 73, 92, 111, 153, 175, 179, 180, 181, 197, 284, 289, 290, 291, 294], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 61, 66, 69, 70, 71, 72, 73, 87, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 107, 110, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 133, 153, 159, 184, 187, 191, 194, 201, 202, 203, 204, 205, 206, 212, 213, 214, 215, 216, 217, 218, 220, 226, 268, 283, 284, 285, 286, 288, 290, 291, 294, 295, 297, 300], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 51, 52, 66, 69, 70, 71, 72, 73, 214], "actual": [3, 4, 7, 17, 66, 69, 71, 72, 73, 121, 267, 285, 288, 290, 294, 295], "just": [3, 4, 159, 255, 284, 286, 288, 289, 290, 291, 294, 295, 297, 299, 300], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 51, 52, 66, 69, 71, 72, 73, 93, 107, 140, 141, 157, 188, 192, 195, 201, 202, 203, 205, 213, 215, 216, 218, 220, 226, 228, 229, 230, 231, 273, 280, 286, 289, 290, 295, 300], "care": [3, 8, 66, 69, 71, 72, 73, 125, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 288, 290, 294, 295, 297], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 52, 53, 66, 69, 71, 72, 73, 95, 110, 122, 124, 125, 126, 128, 130, 132, 142, 152, 155, 159, 160, 166, 174, 175, 179, 181, 191, 192, 214, 261, 288, 289, 290, 291, 294, 295, 297, 300], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 53, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 142, 152, 155, 159, 174, 191, 214, 261, 288, 289, 290, 291, 295], "parametr": [3, 161, 192, 202, 212, 218, 288, 290], "hardwar": 3, "observation_spec": [3, 66, 70, 92, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 107, 110, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 141, 153, 157, 268, 276, 288, 290, 293, 294, 295, 300], "compositespec": [3, 28, 49, 66, 68, 69, 70, 71, 72, 73, 96, 97, 98, 105, 112, 120, 121, 122, 125, 137, 141, 157, 178, 182, 185, 188, 194, 195, 282, 288, 290, 294, 295, 300], "pair": [3, 32, 34, 36, 39, 51, 66, 69, 71, 72, 73, 122, 179, 188, 192, 214, 228, 229, 230, 231, 232, 284, 285, 288, 289, 290, 293, 295, 300], "state_spec": [3, 70, 126, 290, 295, 300], "empti": [3, 26, 28, 35, 38, 41, 42, 51, 52, 87, 110, 123, 126, 128, 130, 288, 295], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 66, 69, 70, 71, 72, 73, 75, 86, 92, 96, 98, 105, 114, 126, 149, 167, 169, 178, 183, 188, 189, 202, 205, 216, 218, 220, 276, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "reward_spec": [3, 66, 69, 70, 71, 72, 73, 91, 95, 96, 98, 115, 116, 117, 125, 126, 127, 141, 157, 290, 294, 295, 300], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 53, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 91, 95, 96, 98, 105, 112, 114, 115, 116, 117, 118, 121, 125, 126, 127, 129, 130, 131, 137, 140, 141, 157, 197, 201, 202, 204, 205, 206, 209, 212, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 257, 258, 260, 262, 280, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "done_spec": [3, 66, 69, 71, 72, 73, 96, 98, 125, 126, 290, 294, 295, 300], "flag": [3, 8, 35, 38, 41, 42, 51, 52, 187, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 284, 294, 295, 296], "input_spec": [3, 66, 70, 95, 96, 97, 107, 112, 118, 120, 125, 126, 127, 141, 157, 294, 295], "_action_spec": [3, 66, 294], "_state_spec": 3, "lock": [3, 26, 28, 122, 131, 295], "modifi": [3, 7, 8, 26, 28, 32, 45, 66, 69, 71, 72, 73, 95, 101, 105, 110, 122, 125, 126, 128, 130, 187, 191, 214, 267, 273, 288, 289, 290, 294, 295], "directli": [3, 4, 8, 66, 70, 114, 214, 280, 284, 290, 294, 295, 297], "output_spec": [3, 66, 95, 105, 112, 125, 126, 294, 295], "_observation_spec": 3, "_reward_spec": [3, 66, 294], "_done_spec": [3, 66, 294], "importantli": [3, 188, 192], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 66, 69, 70, 71, 72, 73, 76, 77, 78, 80, 81, 85, 92, 114, 131, 141, 142, 143, 144, 149, 150, 151, 154, 155, 157, 159, 162, 163, 164, 165, 166, 167, 175, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 194, 196, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 246, 284, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300], "action_s": 3, "help": [3, 4, 32, 66, 69, 71, 72, 73, 283, 285, 288, 289, 290, 291, 294], "prealloc": [3, 295], "With": [3, 121, 286, 288, 289, 294, 297, 300], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 51, 52, 53, 61, 66, 67, 69, 70, 71, 72, 73, 82, 93, 94, 96, 97, 98, 99, 101, 105, 106, 107, 110, 111, 117, 118, 122, 125, 126, 128, 130, 131, 140, 142, 153, 154, 155, 158, 159, 176, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 242, 243, 244, 245, 259, 261, 264, 266, 268, 273, 276, 280, 283, 288, 289, 290, 291, 293, 294, 295, 297, 299, 300], "instanti": [3, 21, 34, 36, 39, 72, 73, 125, 159, 288, 289, 294, 295, 297, 300], "0s": [3, 122, 291], "stateless": [3, 125, 288, 295, 300], "set_se": [3, 13, 14, 16, 17, 21, 66, 69, 70, 71, 72, 73, 75, 86, 107, 112, 126, 295, 299, 300], "seed": [3, 13, 14, 16, 17, 21, 66, 69, 70, 71, 72, 73, 76, 88, 89, 96, 98, 126, 133, 264], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 51, 52, 53, 66, 67, 69, 70, 71, 72, 73, 75, 86, 88, 89, 92, 96, 98, 104, 105, 112, 114, 121, 122, 131, 137, 140, 141, 153, 157, 169, 197, 201, 202, 204, 205, 206, 207, 212, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 258, 260, 262, 288, 289, 291, 293, 295, 296, 297, 299, 300], "determinist": [3, 32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 150, 163, 169, 178, 185, 191, 192, 195, 202, 214, 284, 288, 289, 291, 295, 300], "preced": [3, 154, 291], "without": [3, 7, 9, 32, 40, 66, 69, 71, 72, 73, 96, 98, 124, 180, 181, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 227, 228, 229, 230, 231, 232, 276, 283, 284, 288, 289, 290, 294, 295, 297, 300], "risk": [3, 111], "overlap": [3, 41], "consecut": [3, 61, 153, 187, 291, 294, 300], "still": [3, 9, 120, 182, 213, 214, 288, 289, 291, 293, 295, 297, 300], "reproduc": [3, 92, 133, 288, 290, 294], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 25, 32, 34, 36, 37, 39, 40, 43, 45, 53, 54, 55, 56, 64, 66, 69, 71, 72, 73, 97, 115, 120, 121, 123, 137, 172, 173, 174, 188, 195, 202, 206, 212, 214, 218, 261, 288, 289, 290, 291, 294, 295, 297, 299, 300], "max_step": [3, 13, 66, 69, 70, 71, 72, 73, 88, 89, 120, 294, 299, 300], "n": [3, 6, 7, 24, 27, 32, 33, 40, 66, 69, 71, 72, 73, 92, 97, 101, 127, 157, 187, 192, 201, 206, 214, 227, 261, 284, 286, 289, 290, 291, 294, 297, 300], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 70, 105, 153, 157, 166, 167, 175, 176, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 202, 204, 206, 208, 209, 210, 212, 214, 216, 218, 220, 226, 227, 228, 229, 230, 231, 260, 276, 284, 288, 290, 291, 293, 294, 295, 296], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 51, 52, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 101, 110, 111, 114, 126, 128, 131, 133, 142, 155, 161, 191, 192, 193, 194, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 220, 228, 252, 264, 283, 288, 289, 290, 294, 295, 297, 299, 300], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 62, 66, 69, 71, 72, 73, 84, 87, 92, 128, 131, 153, 189, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 220, 223, 288, 291, 297, 299], "mark": [3, 16, 66, 69, 71, 72, 73, 153], "trail": [3, 131], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 66, 67, 69, 71, 72, 73, 83, 87, 93, 111, 122, 123, 131, 140, 150, 153, 154, 187, 203, 206, 209, 213, 214, 215, 216, 220, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 264, 284, 285, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "treat": 3, "figur": [3, 288, 290, 291, 294, 295, 300], "summar": [3, 295], "brief": [3, 290], "popul": [3, 38, 104, 122, 288, 290, 291, 295, 297], "entri": [3, 13, 14, 16, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 51, 52, 66, 69, 71, 72, 73, 92, 94, 96, 98, 101, 104, 107, 110, 112, 114, 120, 122, 130, 131, 140, 158, 189, 190, 202, 218, 228, 229, 230, 231, 284, 288, 290, 291, 294, 295, 296, 297], "deliveri": 3, "step_mdp": [3, 153, 282, 291, 295, 299, 300], "nasium": 3, "recent": [3, 7, 11, 300], "shift": [3, 32, 198, 228, 229, 230, 231, 290], "termin": [3, 7, 32, 40, 51, 193, 288, 289, 290, 295, 299], "trust": [3, 153], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 66, 69, 71, 72, 73, 120, 174, 234, 288, 290, 300], "refer": [3, 7, 8, 9, 21, 32, 40, 66, 69, 71, 72, 73, 126, 131, 141, 149, 150, 157, 158, 163, 164, 168, 169, 184, 201, 207, 208, 209, 210, 215, 228, 233, 241, 288, 290, 294], "stepcount": [3, 13, 66, 69, 71, 72, 73, 288, 289, 290, 291, 294, 299], "chosen": [3, 121, 122, 166, 167, 175, 190, 273, 284], "someth": [3, 32, 66, 69, 71, 72, 73, 283, 289, 290, 295, 300], "els": [3, 163, 284, 286, 288, 289, 290, 291, 294, 295, 296], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 54, 55, 66, 69, 71, 72, 73, 107, 114, 184, 256, 276, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "truncated_kei": [3, 120], "look": [3, 5, 7, 8, 32, 66, 69, 71, 72, 73, 110, 111, 128, 188, 192, 193, 194, 285, 290, 291, 294, 295, 296, 297, 299, 300], "assess": [3, 288], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 282], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 51], "adjac": [3, 23, 101], "reli": [3, 201, 285, 288, 290, 295, 300], "traj_id": [3, 13, 14, 16, 23, 114, 291, 297, 299], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 66, 69, 71, 72, 73, 122, 126, 140, 193, 194, 283, 288, 291], "context": [3, 5, 8, 32, 66, 67, 69, 71, 72, 73, 87, 122, 127, 159, 160, 224, 225, 228, 229, 230, 231, 233, 241, 260, 284, 285, 288, 289, 290, 294, 295, 296, 297], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 72, 73, 96, 98, 111, 155, 166, 192, 193, 194, 198, 228, 229, 230, 231, 284, 288, 289, 290, 293, 294, 295, 296, 297, 300], "inittrack": [3, 153, 288, 291], "our": [3, 7, 8, 18, 92, 284, 288, 289, 290, 291, 293, 294, 296, 297, 299], "tutori": [3, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 66, 67, 69, 71, 72, 73, 142, 155, 159, 285, 286, 288, 289, 290, 291, 294, 295, 297], "design": [3, 13, 14, 32, 33, 66, 69, 71, 72, 73, 92, 111, 126, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 288, 289, 290, 291, 293, 294, 295, 297, 300], "scratch": [3, 8, 289, 295], "better": [3, 8, 9, 153, 285, 290, 295], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 66, 69, 71, 72, 73, 92, 101, 105, 122, 127, 131, 142, 150, 151, 153, 155, 160, 161, 192, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 280, 284, 288, 289, 290, 291, 295, 297, 300], "intens": [3, 8], "gym3": 3, "envpool": [3, 71], "interfac": [3, 87, 155, 160, 284, 288, 290, 295, 297], "simultan": [3, 20, 72, 73, 295], "often": [3, 8, 211, 264, 288, 289, 295, 297, 300], "competit": [3, 294], "advantag": [3, 8, 151, 201, 203, 213, 215, 217, 228, 229, 230, 231, 232, 233, 235, 237, 239, 241, 242, 244, 285, 286, 288, 289, 290, 291, 294, 295, 300], "scale": [3, 4, 51, 92, 105, 107, 116, 121, 124, 150, 152, 162, 168, 169, 173, 174, 179, 180, 181, 188, 192, 194, 201, 202, 212, 215, 216, 217, 218, 262, 268, 273, 280, 284, 288, 289, 290, 291, 294, 299], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 66, 69, 70, 71, 72, 73, 92, 105, 121, 125, 126, 131, 142, 158, 159, 182, 185, 188, 189, 192, 195, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 264, 276, 286, 288, 289, 290, 291, 294, 295, 296, 297, 300], "own": [3, 13, 14, 17, 22, 32, 66, 69, 71, 72, 73, 289, 290, 294, 295], "As": [3, 4, 66, 69, 71, 72, 73, 114, 192, 228, 284, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300], "inherit": [3, 156, 214, 286, 290, 294], "serialenv": [3, 66, 69, 71, 72, 122, 282, 300], "enjoi": 3, "exact": 3, "Of": [3, 7, 283, 295, 300], "cours": [3, 4, 283, 290, 295, 300], "correspond": [3, 4, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 57, 66, 69, 70, 71, 72, 73, 110, 122, 126, 130, 131, 153, 158, 187, 188, 192, 205, 226, 228, 229, 230, 231, 232, 288, 289, 290, 294, 295, 296], "count": [3, 67, 120, 187, 260, 264, 267, 288, 289, 290, 291, 297, 300], "def": [3, 11, 22, 32, 66, 67, 69, 70, 71, 72, 73, 83, 96, 98, 141, 149, 157, 196, 202, 204, 206, 212, 214, 216, 218, 220, 286, 288, 289, 293, 294, 295, 299, 300], "make_env": [3, 89, 131, 269, 270, 288, 289, 300], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 66, 67, 69, 71, 72, 73, 84, 92, 95, 104, 105, 107, 112, 114, 122, 126, 131, 153, 273, 276, 282, 284, 288, 289, 290, 291, 296, 297, 299, 300], "v1": [3, 13, 14, 16, 17, 21, 22, 51, 66, 67, 69, 71, 72, 73, 92, 104, 105, 107, 112, 114, 122, 153, 223, 237, 238, 239, 240, 242, 243, 244, 245, 284, 289, 291, 295, 297, 299, 300], "from_pixel": [3, 76, 77, 92, 273, 288, 289, 291, 296, 297, 299, 300], "9": [3, 7, 32, 35, 38, 41, 121, 131, 158, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 221, 226, 285, 288, 289, 290, 294, 295, 296, 297], "81": [3, 288, 289, 295, 296], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 51, 52, 53, 54, 55, 57, 64, 66, 69, 70, 71, 72, 73, 75, 86, 91, 92, 93, 95, 97, 105, 106, 107, 110, 114, 121, 122, 124, 125, 126, 128, 130, 131, 133, 141, 142, 143, 144, 146, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 165, 168, 169, 172, 173, 174, 176, 178, 182, 184, 185, 187, 190, 191, 194, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 226, 227, 228, 229, 230, 231, 234, 235, 236, 255, 262, 276, 280, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 53, 54, 55, 56, 62, 64, 66, 67, 69, 71, 72, 73, 102, 105, 107, 122, 126, 127, 131, 142, 149, 153, 155, 158, 159, 167, 178, 183, 184, 188, 189, 190, 191, 192, 195, 196, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 219, 220, 226, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 273, 288, 289, 290, 291, 293, 295, 297, 299], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 53, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 96, 97, 98, 104, 107, 112, 114, 122, 124, 131, 137, 140, 142, 149, 155, 158, 159, 162, 165, 167, 178, 179, 180, 181, 183, 185, 187, 189, 191, 194, 196, 214, 273, 276, 284, 286, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "simpli": [3, 6, 34, 36, 39, 45, 99, 118, 214, 284, 285, 288, 290, 294, 300], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 159, 160, 161, 166, 175, 195, 228, 229, 230, 231, 232, 234, 247, 284, 289, 296, 297], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 52, 107, 124, 289, 297], "d": [3, 35, 52, 53, 57, 192, 299], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 51, 54, 55, 62, 64, 67, 72, 73, 93, 96, 97, 98, 105, 107, 111, 121, 122, 124, 131, 178, 185, 188, 189, 192, 228, 229, 230, 231, 232, 251, 284, 288, 289, 290, 291, 294, 295, 297, 299, 300], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 289, 294, 295], "_reset": [3, 66, 69, 70, 71, 72, 73, 92, 96, 98, 141, 157], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 61, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89, 92, 93, 95, 96, 98, 101, 104, 105, 106, 107, 110, 111, 112, 114, 116, 122, 124, 125, 126, 127, 128, 130, 131, 133, 140, 141, 142, 143, 149, 152, 153, 155, 157, 158, 159, 166, 167, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 226, 228, 229, 230, 231, 237, 238, 239, 240, 242, 243, 244, 245, 257, 258, 260, 261, 262, 264, 273, 280, 284, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 96, 98, 112, 114, 122, 126, 140, 141, 149, 153, 157, 166, 167, 175, 178, 179, 180, 181, 183, 184, 187, 188, 189, 190, 191, 194, 196, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 226, 268, 273, 283, 284, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 61, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 86, 87, 88, 89, 92, 93, 96, 97, 98, 101, 105, 106, 107, 110, 112, 114, 116, 122, 124, 126, 127, 128, 130, 131, 133, 140, 141, 142, 143, 144, 152, 153, 155, 157, 159, 160, 161, 173, 174, 178, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 226, 228, 229, 230, 231, 234, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 257, 258, 260, 261, 262, 264, 273, 280, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "pixel": [3, 7, 26, 92, 94, 101, 103, 107, 110, 113, 124, 128, 130, 143, 163, 164, 247, 273, 284, 288, 289, 291, 296, 297, 299, 300], "500": [3, 288, 289, 295, 299, 300], "uint8": [3, 47, 124, 289, 296, 297, 299, 300], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 62, 64, 66, 67, 69, 70, 71, 72, 73, 82, 88, 89, 91, 92, 93, 94, 95, 96, 98, 101, 103, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 273, 276, 278, 279, 280, 284, 286, 288, 289, 290, 291, 294, 295, 297, 299, 300], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 54, 55, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 96, 98, 112, 114, 122, 131, 140, 141, 149, 153, 157, 166, 167, 175, 178, 179, 180, 181, 183, 184, 187, 188, 189, 190, 191, 194, 196, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 226, 273, 284, 290, 291, 293, 294, 295, 296, 297, 299, 300], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 66, 69, 71, 72, 73, 131, 153, 187, 188, 192, 288, 289, 293, 294, 300], "launch": [3, 18, 19, 20, 22], "quit": [3, 284, 288, 289, 290, 294, 300], "mani": [3, 4, 38, 66, 201, 203, 206, 213, 215, 216, 220, 284, 288, 289, 290, 294, 295, 297, 300], "start": [3, 4, 5, 13, 21, 45, 67, 140, 259, 288, 289, 294, 295, 297, 300], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 66, 69, 71, 72, 73, 122, 131, 193, 194, 214, 290, 291, 294, 295, 300], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 66, 69, 71, 72, 73, 114, 126, 182, 185, 187, 262, 286, 289, 290, 291, 295, 297, 300], "great": [3, 7, 8, 299], "speedup": [3, 8, 300], "precis": [3, 140, 288, 290], "anoth": [3, 8, 34, 36, 39, 66, 69, 71, 72, 73, 96, 98, 122, 125, 155, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 284, 285, 288, 290, 291, 293, 294, 295, 300], "misspecifi": 3, "caus": [3, 7, 8, 66, 69, 71, 72, 73, 111], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 57, 61, 66, 67, 69, 71, 72, 73, 92, 96, 98, 110, 114, 123, 130, 131, 140, 183, 187, 191, 219, 228, 229, 230, 231, 232, 234, 264, 266, 280, 283, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 100, 114, 126, 133, 182, 185, 187, 288, 290, 294, 297], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 69, 83, 92, 96, 98, 105, 112, 131, 133, 137, 159, 162, 176, 228, 229, 230, 231, 255, 263, 293, 294, 297, 300], "mismatch": [3, 289], "mostli": [3, 17, 285, 297, 300], "purpos": [3, 7, 92, 276, 288, 290, 291, 294, 296, 300], "want": [3, 6, 7, 8, 107, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 284, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300], "subprocess": [3, 67], "addit": [3, 4, 32, 51, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 182, 191, 200, 214, 228, 285, 288, 289, 294, 297], "multithread": [3, 35, 38, 41, 42, 51, 52, 53, 71, 297], "multithreadedenv": [3, 282], "underneath": 3, "higher": [3, 4, 195, 288, 289, 290, 297, 300], "restrict": [3, 289, 296, 297, 300], "flexibl": [3, 9, 71, 221, 285, 286, 297, 300], "cover": [3, 283, 290, 295, 299], "popular": [3, 284, 291, 294], "atari": [3, 4, 92, 300], "classic": [3, 70, 289], "benchmark_batched_env": 3, "py": [3, 83, 166, 175, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300], "pipelin": [3, 7, 284, 290], "seamlessli": [3, 295], "modif": [3, 5, 26, 28, 32, 66, 69, 71, 72, 73, 101, 214, 290, 295], "infrastructur": [3, 294], "view": [3, 8, 27, 32, 33, 66, 69, 71, 72, 73, 149, 155, 295, 297, 299, 300], "core": [3, 8, 273, 286, 291, 299], "decis": [3, 291, 294, 297], "act": [3, 4, 159, 202, 204, 212, 216, 218, 220, 291, 294], "world": [3, 5, 70, 197, 209, 294, 295, 300], "paradigm": [3, 17, 294], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 61, 66, 69, 71, 72, 73, 97, 106, 115, 126, 133, 142, 153, 155, 159, 184, 188, 192, 201, 203, 204, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 228, 260, 264, 285, 288, 289, 291, 294, 295, 300], "includ": [3, 4, 7, 9, 21, 32, 54, 55, 56, 62, 64, 66, 69, 70, 71, 72, 73, 121, 126, 131, 214, 267, 284, 286, 288, 289, 290, 291, 294, 295, 297, 300], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 72, 150, 159, 264, 278, 279, 288, 289, 290, 291, 294, 297, 299], "accommod": [3, 13, 14, 16, 17], "thank": [3, 288], "carrier": [3, 290, 291, 297], "particular": [3, 32, 45, 51, 66, 69, 71, 72, 73, 126, 285, 286, 289, 291, 293, 294, 297], "carri": [3, 21, 45, 66, 69, 71, 72, 73, 122, 214, 289, 291, 294, 295, 297], "thu": [3, 213, 294], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 284, 289, 290, 294], "hand": [3, 7, 21, 294, 295], "kept": [3, 13, 14, 16, 17, 61, 72, 73, 97, 125, 133, 140, 152, 173, 174], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 57, 66, 69, 71, 72, 73, 122, 124, 126, 133, 153, 155, 159, 188, 191, 192, 194, 195, 200, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 228, 229, 230, 231, 255, 266, 278, 279, 280, 284, 286, 288, 289, 290, 291, 294, 295, 297, 300], "let": [3, 6, 7, 32, 43, 66, 69, 71, 72, 73, 92, 153, 159, 183, 260, 285, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "understand": [3, 8, 288, 289, 294], "go": [3, 7, 111, 114, 234, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "vma": [3, 88, 89, 294], "robot": [3, 5, 7, 110, 128, 130, 294], "what": [3, 8, 35, 44, 66, 69, 71, 72, 73, 122, 140, 189, 283, 284, 285, 289, 290, 291, 294, 295, 296, 297, 299, 300], "vmasenv": [3, 282, 294], "balanc": [3, 288, 289, 300], "num_env": [3, 21, 88, 89, 294], "n_agent": [3, 88, 89, 159, 166, 175, 226, 294], "5": [3, 24, 26, 28, 35, 38, 41, 42, 67, 71, 86, 88, 89, 114, 141, 142, 149, 150, 152, 154, 155, 157, 159, 163, 167, 173, 174, 183, 189, 195, 213, 215, 217, 220, 284, 288, 289, 294, 295, 296, 297, 298, 299, 300], "td": [3, 15, 26, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 93, 96, 97, 98, 104, 105, 107, 114, 121, 122, 124, 126, 131, 140, 141, 149, 153, 156, 157, 166, 167, 175, 178, 179, 180, 181, 183, 185, 187, 188, 189, 191, 194, 196, 226, 229, 230, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 255, 263, 273, 284, 285, 288, 291, 294, 295, 299, 300], "info": [3, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 88, 89, 128, 132, 294, 297], "ground_rew": 3, "pos_rew": [3, 294], "16": [3, 32, 66, 69, 71, 72, 73, 92, 288, 289, 290, 291, 294, 295, 296, 297], "root": [3, 26, 28, 92, 140, 152, 173, 174, 291, 294, 295, 297, 300], "style": [3, 35, 38, 41, 42, 51, 52], "relat": [3, 4, 10, 35, 101, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 289, 295], "vari": [3, 111, 294], "creation": [3, 72, 73, 288, 300], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 54, 55, 57, 64, 66, 69, 71, 72, 73, 110, 114, 117, 126, 130, 162, 167, 184, 188, 190, 191, 192, 228, 229, 230, 231, 255, 267, 288, 289, 290, 291, 294, 295, 297, 299, 300], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 54, 55, 67, 114, 124, 131, 213, 220, 285, 286, 288, 290, 291, 294, 295, 297, 299], "append": [3, 8, 35, 38, 41, 42, 51, 52, 67, 114, 122, 153, 183, 189, 288, 289, 290, 291, 294, 295, 296, 297, 299], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 66, 205, 226, 282, 290, 294, 300], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 66, 69, 71, 72, 73, 83, 131, 283, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "simpl": [3, 9, 32, 33, 66, 69, 71, 72, 73, 143, 192, 205, 214, 217, 228, 284, 285, 288, 289, 290, 294, 300], "composit": [3, 26, 28, 66, 69, 71, 72, 73, 290, 295], "prefix": [3, 23, 32, 45, 66, 69, 71, 72, 73, 126, 214, 246, 291, 300], "exactli": [3, 32, 66, 69, 71, 72, 73, 84, 126, 288, 291, 294], "action_kei": [3, 15, 66, 69, 71, 72, 73, 97, 140, 141, 156, 157, 182, 185, 187, 294], "reward_kei": [3, 66, 69, 71, 72, 73, 140, 141, 157, 258, 262, 294], "done_kei": [3, 66, 69, 71, 72, 73, 140, 294], "automat": [3, 5, 66, 69, 71, 72, 73, 96, 98, 107, 178, 188, 284, 288, 290, 294, 295, 297, 299], "right": [3, 6, 7, 40, 154, 289, 290, 294, 295, 300], "sure": [3, 4, 7, 52, 62, 114, 183, 280, 284, 288, 290, 291, 294, 295, 297, 299, 300], "set_kei": [3, 201, 202, 203, 205, 206, 207, 212, 213, 214, 215, 216, 217, 218, 226, 232, 294], "awai": [3, 290, 294], "eas": [3, 294], "access": [3, 7, 8, 32, 35, 52, 66, 69, 71, 72, 73, 110, 128, 214, 280, 283, 288, 294, 295, 297], "leaf": [3, 26, 28, 66, 69, 71, 72, 73, 192, 294], "abov": [3, 7, 32, 66, 69, 71, 72, 73, 152, 173, 174, 200, 285, 286, 288, 290, 294, 295, 300], "would": [3, 32, 40, 66, 69, 71, 72, 73, 153, 155, 286, 289, 290, 291, 295, 297, 300], "full": [3, 184, 255, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "raw": [3, 4, 40, 152, 173, 174, 289, 295], "logic": 3, "torchvis": [3, 110, 130, 299, 300], "transformedenv": [3, 13, 66, 67, 69, 71, 72, 73, 92, 95, 96, 98, 101, 104, 105, 106, 107, 112, 114, 122, 125, 131, 153, 273, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "primit": [3, 4, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220], "built": [3, 5, 7, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 221, 226, 274, 276, 277, 280, 288, 289, 290, 291, 297, 300], "base_env": [3, 96, 97, 98, 105, 122, 288, 289, 290, 296, 299, 300], "totensorimag": [3, 92, 289, 291, 297, 299, 300], "in_kei": [3, 13, 14, 16, 17, 21, 70, 91, 92, 93, 94, 96, 97, 98, 101, 103, 105, 107, 108, 110, 112, 113, 114, 115, 116, 117, 121, 123, 124, 125, 126, 128, 130, 131, 141, 148, 153, 157, 166, 175, 176, 178, 179, 180, 181, 183, 188, 189, 191, 192, 194, 195, 196, 201, 202, 203, 204, 205, 206, 212, 213, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 246, 247, 273, 276, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "resiz": [3, 92, 289, 291, 297, 300], "64": [3, 92, 143, 144, 151, 153, 159, 166, 226, 288, 289, 290, 291, 293, 295, 296, 297, 299, 300], "now": [3, 7, 35, 92, 159, 288, 289, 290, 291, 293, 294, 296, 297, 300], "appar": [3, 257], "bring": [3, 290, 300], "signific": [3, 5, 8, 290, 300], "kind": [3, 38, 44, 140, 297], "consult": 3, "interest": [3, 188, 192, 284, 289, 290, 294, 295, 300], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 70, 91, 92, 93, 94, 101, 103, 105, 107, 108, 110, 112, 113, 114, 115, 117, 121, 123, 124, 125, 128, 130, 141, 148, 149, 153, 157, 166, 167, 175, 176, 178, 179, 180, 181, 184, 188, 189, 190, 191, 192, 194, 195, 196, 201, 202, 203, 206, 212, 213, 215, 216, 217, 218, 226, 228, 229, 230, 231, 260, 276, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "easi": [3, 5, 52, 182, 185, 187, 284, 285, 288, 289, 290, 294, 296, 297, 300], "graph": [3, 4, 8, 224, 225, 288, 295], "inv": [3, 97, 114, 295], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 51, 52, 66, 69, 71, 72, 73, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 109, 111, 112, 114, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 131, 173, 183, 228, 259, 286, 288, 289, 290, 295, 299, 300], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 51, 52, 61, 66, 69, 71, 72, 73, 126, 178, 183, 191, 193, 194, 196, 201, 202, 204, 206, 212, 215, 216, 217, 218, 220, 289, 294], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 51, 52, 95, 97, 142, 194, 300], "taken": [3, 66, 69, 71, 72, 73, 158, 285, 288, 290, 291, 294, 295], "invers": [3, 4, 35, 38, 41, 42, 51, 52, 92, 96, 98, 107, 114, 199, 212, 295], "in_keys_inv": [3, 96, 98, 107, 108, 112, 114, 125, 288, 293, 295, 300], "append_transform": [3, 35, 38, 41, 42, 51, 52, 110, 122, 128, 288, 291, 295, 299, 300], "doubletofloat": [3, 273, 288, 290, 293], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 54, 55, 57, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 96, 98, 107, 112, 114, 122, 124, 137, 140, 141, 149, 153, 157, 166, 167, 175, 178, 179, 180, 181, 183, 187, 188, 189, 190, 191, 194, 196, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 226, 273, 284, 290, 291, 293, 294, 295, 296, 297, 299, 300], "float64": [3, 32, 66, 69, 71, 72, 73, 88, 95, 96, 98, 110, 122, 125, 126, 128, 130, 191, 214, 293, 300], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 96, 98, 126, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 286, 288, 290, 297], "manipul": [3, 4, 8, 110, 128, 300], "keep": [3, 4, 7, 8, 14, 42, 61, 107, 110, 130, 131, 140, 187, 257, 264, 288, 289, 290, 291, 294, 295, 297, 299, 300], "mind": [3, 294], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 97, 140, 284, 297], "unexpect": [3, 32, 66, 69, 71, 72, 73, 126, 300], "behviour": 3, "fortun": [3, 291], "eras": [3, 66, 69, 71, 72, 73], "ident": [3, 13, 14, 16, 32, 72, 73, 159, 228, 229, 230, 231, 278, 279, 289, 294], "alreadi": [3, 8, 11, 32, 45, 66, 69, 71, 72, 73, 122, 192, 228, 229, 230, 231, 288, 290, 294], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 66, 67, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 131, 191, 214, 261, 266, 267, 289, 290, 294, 295, 297], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 54, 55, 56, 61, 62, 64, 66, 69, 71, 72, 73, 95, 96, 98, 105, 112, 125, 126, 131, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 285, 288, 290, 291, 294, 295, 296, 297, 300], "happen": [3, 66, 69, 71, 72, 73, 182, 289, 296, 300], "catfram": [3, 289], "hold": [3, 224, 225, 295, 297], "notic": [3, 92, 290, 295], "parenthood": 3, "reason": [3, 4, 8, 32, 66, 69, 71, 72, 73, 110, 128, 153, 285, 288, 289, 290, 295, 297], "henc": [3, 35, 111, 284, 288, 290, 294, 295], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 295], "log": [3, 4, 8, 40, 147, 148, 149, 158, 165, 174, 183, 184, 188, 192, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 257, 258, 260, 264, 276, 284, 285, 286, 288, 289, 290, 294, 295, 299], "mission": 3, "irrespect": [3, 191, 192], "dmcontrol": [3, 288], "jumanji": [3, 85, 86], "natur": [3, 288, 291], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 61, 66, 69, 71, 72, 73, 101, 107, 111, 123, 142, 153, 154, 155, 158, 163, 170, 176, 182, 185, 192, 289, 290, 291, 294, 295, 296, 297, 299, 300], "special": [3, 284, 288, 291, 300], "statu": 3, "framework": [3, 4, 9, 22, 70, 299, 300], "Its": [3, 32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 131, 191, 214, 232], "success": [3, 92, 125, 289, 295, 297, 299], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 61, 66, 69, 71, 72, 73, 105, 125, 182, 185, 187, 288, 289, 290, 291, 293, 294, 295, 297, 300], "foundat": [3, 5, 290, 294], "inspir": [3, 295], "howev": [3, 5, 7, 32, 66, 69, 71, 72, 73, 92, 117, 120, 121, 126, 284, 288, 289, 290, 291, 297, 300], "gone": [3, 4, 5], "sometim": [3, 291, 300], "hard": [3, 7, 211, 289, 300], "adopt": [3, 5, 288, 300], "prefer": [3, 17, 20, 35, 38, 41, 42, 111, 118, 215, 261, 284, 290, 294, 297], "moreov": 3, "maintain": [3, 5, 9, 295], "gymnasium": [3, 5, 11, 80, 81, 82, 83, 289, 290, 295, 299], "both": [3, 7, 32, 66, 67, 69, 71, 72, 73, 92, 112, 126, 142, 153, 155, 159, 179, 180, 181, 184, 190, 201, 203, 204, 206, 212, 213, 214, 215, 216, 217, 218, 220, 260, 284, 288, 290, 294, 295, 296, 297, 300], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 289, 290, 291, 294, 295, 297, 300], "decor": [3, 8, 11, 83, 214, 228, 229, 230, 231], "set_gym_backend": [3, 82, 282], "relev": [3, 40, 228, 229, 230, 231, 232, 295], "gym_backend": [3, 83, 282], "env1": [3, 293], "path": [3, 6, 7, 32, 34, 36, 45, 53, 54, 66, 69, 71, 72, 73, 83, 110, 130, 157, 264, 286, 289], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 83], "__init__": [3, 7, 70, 83, 96, 98, 141, 149, 157, 196, 202, 204, 206, 212, 216, 218, 220, 286, 295, 300], "env2": [3, 293], "_env": [3, 6, 300], "classic_control": 3, "pendulumenv": [3, 295], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 290], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 59, 61, 63, 65, 66, 69, 71, 72, 73, 92, 93, 120, 122, 126, 142, 155, 158, 159, 187, 189, 190, 198, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 268, 280, 283, 286, 290, 291, 295, 297, 300], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 84, 111, 121, 122, 126, 134, 135, 140, 150, 154, 169, 187, 207, 250, 286, 288, 289, 290, 291, 294, 295, 299, 300], "tell": [3, 4, 7, 288, 291, 294], "mo_gymnasium": [3, 81, 82], "handi": 3, "side": [3, 4, 300], "v0": [3, 69, 78, 79, 80, 81, 85, 86, 95, 126, 131, 276], "26": [3, 288, 289, 290, 295, 296, 297], "fun": [3, 11, 83, 290, 294], "reveal": 4, "bug": [4, 299], "curv": 4, "won": [4, 32, 66, 67, 69, 71, 72, 73, 110, 130, 264, 280, 289, 290], "exploit": 4, "video": [4, 9, 247, 260, 280, 294], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 66, 69, 71, 72, 73, 111, 189, 289, 290, 291, 294, 295], "cv": 4, "flip": 4, "imag": [4, 7, 76, 94, 110, 124, 130, 155, 288, 289, 294, 296, 300], "correspondingli": 4, "prescript": 4, "tune": [4, 105, 294, 296], "coeffici": [4, 40, 105, 294], "bonu": [4, 201, 203, 213, 215], "beta": [4, 35, 41, 57, 212, 213, 288, 289, 297, 299], "altern": [4, 27, 71, 158, 200, 214, 288, 290, 294], "reduc": [4, 6, 27, 121, 289, 290], "downstream": [4, 288], "formul": [4, 294], "ob": [4, 8, 26, 28, 96, 98, 107, 124, 137, 140, 159, 189, 196, 202, 204, 206, 212, 216, 218, 220, 228, 229, 230, 231, 289, 293, 295, 299, 300], "rate": [4, 131, 227, 289, 290, 294], "gradient": [4, 32, 66, 69, 71, 72, 73, 126, 152, 161, 173, 174, 201, 203, 204, 206, 212, 213, 214, 215, 216, 217, 218, 220, 227, 228, 229, 230, 231, 264, 288, 290, 294, 295], "norm": [4, 8, 264, 288, 289, 290, 294, 295], "easier": [4, 284, 288], "behavior": [4, 32, 66, 69, 71, 72, 73, 126, 212, 214, 290, 294], "local": [4, 7, 10, 16, 21, 32, 66, 69, 71, 72, 73, 126, 159, 166, 175, 226, 252, 294], "optima": 4, "sens": [4, 295], "product": [4, 9, 278, 279], "sum": [4, 21, 31, 33, 69, 158, 175, 209, 227, 234, 285, 288, 289, 290, 291, 294, 295, 300], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 61, 117, 131, 187, 252, 257, 289, 291, 294, 295, 297], "stat": [4, 107, 268, 280, 289, 290], "w": [4, 92, 94, 113, 124, 187, 247, 289, 291, 297], "r": [4, 32, 107, 192, 200, 227, 284, 289, 295, 300], "yield": [4, 16, 21, 32, 66, 69, 71, 72, 73, 214, 288], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 66, 69, 71, 72, 73, 126, 204, 205, 290, 294, 297], "futur": [4, 32, 66, 69, 71, 72, 73, 110, 126, 130, 155, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 283, 299], "past": [4, 289, 297], "becom": [4, 21, 294, 300], "spars": [4, 291], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 51, 52, 57, 66, 69, 71, 72, 73, 117, 126, 160, 161, 187, 201, 203, 205, 207, 213, 215, 226, 289, 291, 297, 300], "intermedi": [4, 153, 184, 288, 296], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 288], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 66, 155, 290, 294], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 51, 55, 64, 66, 69, 71, 72, 73, 92, 93, 96, 97, 98, 107, 114, 137, 140, 141, 153, 154, 158, 159, 166, 175, 185, 187, 190, 198, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 234, 291, 299], "subtask": 4, "hierarch": [4, 299], "individu": [4, 18, 19, 20, 21, 32, 45, 66, 69, 71, 72, 73, 288, 294], "select": [4, 15, 35, 38, 41, 42, 51, 52, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 109, 111, 112, 114, 117, 118, 120, 121, 122, 123, 125, 128, 129, 131, 141, 153, 183, 189, 263, 288, 297], "fall": 4, "section": [4, 289, 294], "explicit": [4, 11, 45, 154, 297], "mechan": [4, 32, 66, 69, 71, 72, 73, 126, 289, 295], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 66, 69, 71, 72, 73, 212, 290, 294], "addition": 4, "timestep": [4, 40, 114, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 294], "realli": 4, "larg": [4, 27, 96, 98, 128, 289, 290, 294, 297], "target": [4, 8, 21, 32, 66, 67, 69, 71, 72, 73, 121, 125, 191, 192, 201, 202, 203, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 231, 232, 267, 275, 276, 285, 286, 291, 295], "huge": [4, 159, 291], "std": [4, 107, 131, 162, 182, 288, 300], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 291, 292, 293, 296, 297, 298], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 66, 69, 71, 72, 73, 107, 110, 122, 125, 126, 128, 132, 141, 157, 160, 161, 182, 185, 187, 201, 202, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 220, 226, 273, 280, 289, 291, 295, 300], "estim": [4, 105, 179, 180, 181, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 220, 221, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 285, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "encount": [4, 72, 73, 283, 289, 295], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 288, 290, 294, 300], "bonus": 4, "denser": 4, "prior": [4, 169, 209, 294], "freshli": 4, "proper": [4, 6, 7, 228, 229, 230, 231, 289, 290, 294, 297], "doesn": [4, 11, 71, 96, 98], "drop": [4, 61, 140], "meant": [4, 70], "encourag": [4, 288, 289, 297], "measur": [4, 290], "novelti": 4, "revisit": 4, "previous": [4, 290, 300], "diminish": 4, "decreas": 4, "ideal": [4, 107, 295], "down": [4, 13, 14, 16, 17, 291], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 289, 290, 291, 294, 295, 299, 300], "distil": 4, "add": [4, 6, 21, 32, 35, 38, 41, 42, 51, 52, 59, 63, 65, 66, 69, 71, 72, 73, 92, 105, 153, 160, 186, 201, 214, 259, 290, 291, 294, 295, 297, 299], "nois": [4, 132, 161, 177, 187, 216, 220, 260, 280, 288], "exploratori": [4, 201, 203, 213, 215], "could": [4, 6, 289, 290, 294, 296, 300], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 54, 55, 56, 57, 62, 64, 202, 204, 205, 206, 207, 212, 216, 218, 220, 226, 286, 288, 289, 297], "schedul": [4, 7, 40, 260, 290, 295], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 110, 130, 202, 204, 206, 216, 218, 220, 288, 289, 294, 297, 300], "divers": [4, 72, 73], "bootstrap": [4, 207, 229, 235, 236, 288, 291], "noisi": [4, 160, 161, 177, 284], "unstabl": [4, 152, 173, 174], "inher": 4, "stochast": [4, 105, 150, 161, 163, 169, 202, 206, 212, 216, 218, 284, 290, 294], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 153, 157, 179, 180, 181, 214, 216, 286, 289], "pomdp": [4, 297], "previou": [4, 10, 32, 40, 41, 122, 169, 290, 291, 295, 300], "loos": [4, 284, 289, 290], "nonexist": 4, "architectur": [4, 294], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 53, 59, 63, 65, 91, 92, 93, 94, 96, 97, 98, 101, 103, 107, 108, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124, 125, 131, 142, 147, 149, 155, 158, 159, 165, 167, 171, 193, 194, 246, 247, 259, 260, 261, 263, 264, 273, 284, 288, 290, 291, 293, 294, 300], "rather": [4, 112, 288, 289, 290, 294], "lstm": [4, 153, 154, 162], "explicitli": [4, 289, 291, 294, 297], "rel": [4, 122, 147, 172, 288, 289, 294, 297], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 66, 92, 289, 290, 297, 299, 300], "compens": 4, "descent": [4, 161], "1000": [4, 38, 66, 69, 71, 72, 73, 92, 131, 187, 188, 192, 211, 288, 289, 290, 291, 296, 297], "know": [4, 9, 35, 38, 41, 42, 182, 185, 216, 260, 288, 289, 290, 291, 294, 297], "minimum": [4, 25, 66, 115, 137, 150, 162, 172, 173, 174, 188, 195, 198, 200, 202, 206, 214, 218, 255, 288, 290, 294, 295, 299, 300], "manual": [4, 18, 20, 21, 288, 291, 297], "deviat": [4, 107, 131, 141, 150, 157, 160, 161, 182, 215, 220, 288, 294], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 57, 66, 69, 70, 71, 72, 73, 96, 97, 98, 121, 126, 129, 131, 141, 153, 157, 182, 185, 187, 188, 189, 190, 191, 192, 201, 202, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 226, 228, 229, 230, 231, 232, 260, 264, 266, 269, 270, 275, 276, 286, 289, 290, 291, 294, 295, 297, 299, 300], "stabil": [4, 102], "stage": [4, 288, 295], "never": 4, "prevent": [4, 26, 28, 152, 173, 174, 213, 215, 262, 297], "solv": [4, 9, 10, 283, 288, 289, 290, 294, 295, 297], "entir": [4, 290, 295, 297], "submit": [4, 283, 299], "suffici": [4, 288], "recommend": [4, 7, 294], "system": [4, 5, 290, 294, 295], "adequ": [4, 133, 290, 294], "infeas": 4, "allevi": [4, 284], "prune": 4, "develop": [4, 7, 288, 299], "filter": [4, 45, 201, 202, 204, 206, 212, 215, 216, 218], "fire": [4, 32, 66, 69, 71, 72, 73], "certain": [4, 18, 20, 21, 32, 45, 66, 69, 71, 72, 73, 83, 102, 120, 126, 213, 284, 288, 289, 290, 294, 300], "illeg": 4, "move": [4, 21, 32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 131, 140, 155, 191, 214, 262, 288, 289, 291, 299, 300], "chess": 4, "combin": [4, 125, 289, 297], "grasp": 4, "releas": [4, 7, 10, 32, 66, 69, 71, 72, 73, 126, 299], "top": [4, 141, 157], "p": [4, 67], "wherein": 4, "cumul": [4, 117, 121, 141, 234, 290], "probabl": [4, 8, 40, 147, 149, 153, 155, 158, 165, 174, 188, 192, 284, 289, 299], "q": [4, 9, 143, 144, 145, 146, 148, 149, 151, 166, 167, 175, 181, 184, 189, 190, 202, 204, 205, 206, 207, 211, 212, 216, 218, 220, 226, 273, 282, 288], "flow": [4, 288, 290, 294, 295, 297], "reparameter": [4, 147, 165], "soft": [4, 211, 218, 219], "critic": [4, 8, 179, 186, 201, 203, 204, 206, 212, 213, 215, 216, 217, 218, 220, 288, 290], "clip": [4, 40, 115, 203, 220, 264, 290, 294, 295], "oppos": [4, 45], "incorrect": 4, "thought": [4, 66], "bound": [4, 17, 21, 25, 26, 32, 66, 69, 71, 72, 73, 131, 168, 169, 178, 183, 184, 187, 188, 189, 190, 191, 192, 195, 220, 284, 288, 289, 290, 300], "region": 4, "squash": [4, 291, 299], "tanh": [4, 142, 152, 155, 159, 172, 173, 174, 195, 290, 294, 295, 296, 299], "correct": [4, 105, 121, 267, 290, 291], "prob": [4, 158, 165, 290, 294], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 97, 105, 110, 126, 130, 188, 191, 192, 211, 214, 215, 273, 288, 293, 295, 300], "real": [5, 192, 285, 291, 295], "histor": 5, "wa": [5, 7, 66, 69, 71, 72, 73, 126, 211, 219, 285, 289, 290, 293, 297, 299], "ceas": 5, "fork": 5, "farama": [5, 80, 81, 290, 295], "detail": [5, 6, 7, 32, 66, 69, 71, 72, 73, 124, 126, 149, 184, 201, 207, 215, 283, 289, 293, 297], "usag": [5, 7, 51, 66, 92, 153, 202, 212, 218, 221, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "known": [5, 7, 8, 235, 236, 288, 289], "bc": [5, 299], "break": [5, 13, 14, 16, 21, 32, 38, 42, 53, 66, 69, 71, 72, 73, 92, 114, 131, 289, 297, 299], "face": [5, 8, 9, 300], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 133, 178, 183, 184, 188, 189, 190, 191, 192, 290, 294], "13": [5, 10, 11, 288, 289, 290, 295, 296, 297, 298, 299], "construct": [5, 32, 35, 38, 41, 42, 66, 69, 71, 72, 73, 96, 98, 133, 153, 169, 192, 214, 264, 284, 289, 290, 291, 295, 297, 300], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 66, 69, 71, 72, 73, 133, 153, 176, 179, 180, 181, 182, 185, 187, 189, 197, 226, 284, 288, 289, 290, 291, 294, 300], "best": [5, 9, 153, 294, 297, 299], "gymwrapp": [5, 69, 282, 290, 299], "feel": [5, 283, 299], "free": [5, 7, 96, 98, 201, 209, 215, 286, 290, 294, 299], "gladli": 5, "instruct": [6, 7, 10, 22, 51, 97, 288, 289, 290, 291, 294, 297], "prepar": [6, 290], "conda": [6, 7, 283], "assum": [6, 26, 33, 40, 41, 42, 51, 69, 72, 73, 94, 101, 110, 111, 117, 122, 128, 130, 137, 153, 154, 176, 195, 205, 207, 218, 226, 237, 238, 239, 240, 242, 243, 244, 245, 247, 288, 290, 291, 293, 295], "7": [6, 10, 27, 33, 35, 38, 41, 141, 142, 154, 155, 157, 234, 288, 289, 291, 294, 295, 296, 297, 298, 299], "cmake": 6, "14": [6, 11, 107, 288, 289, 291, 294, 295, 297, 298], "activ": [6, 7, 9, 142, 150, 155, 159, 203, 213, 215, 284, 299], "sim": 6, "bullet": 6, "physic": [6, 7, 286, 288, 294, 295], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 283], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 291], "y": [6, 7, 87, 154, 176, 288, 290, 294], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 66, 69, 71, 72, 73, 119, 214, 294, 300], "command": [6, 7, 10, 290, 294, 295, 300], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 282], "_has_habitat": 6, "available_env": [6, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 300], "startswith": [6, 285, 288], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 51, 52, 77, 83, 280, 286, 288, 297], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 67, 214, 288], "env_nam": [6, 71, 74, 76, 78, 80, 85, 288, 290, 300], "llvmlite": 6, "config": [6, 7, 110, 130, 268, 269, 270, 273, 274, 277], "var": [6, 7, 32, 66, 69, 71, 72, 73, 126, 214], "ld_preload": [6, 7], "8": [6, 7, 38, 57, 75, 142, 143, 144, 151, 155, 179, 180, 181, 188, 191, 194, 212, 288, 289, 294, 295, 296, 297, 298, 299], "bind": 6, "deactiv": [6, 7, 183], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 66, 69, 71, 72, 73, 126, 214, 297], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 289], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 51], "stand": [7, 293, 295, 300], "joint": [7, 289], "dynam": [7, 212, 290, 295], "contact": [7, 37], "engin": [7, 295], "biomechan": 7, "graphic": 7, "anim": [7, 294], "area": 7, "demand": [7, 300], "fast": [7, 9, 75, 112, 216, 288, 289, 290], "accur": [7, 51, 289, 295, 297], "articul": 7, "acquir": [7, 290], "deepmind": [7, 8, 9, 76, 77, 290], "whomev": 7, "licenc": 7, "incorpor": [7, 182, 185, 187, 291, 295], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 59, 63, 65, 73, 106, 125, 247, 284, 285, 288, 289, 290, 294, 297, 300], "legaci": 7, "pro": [7, 283], "tip": [7, 283], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 300], "sudo": [7, 283], "enabl": [7, 8, 51, 153, 187, 260, 290, 294, 295, 297], "apt": [7, 294], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 54, 55, 56, 62, 64, 289, 291], "fact": [7, 8, 288, 290, 294, 295, 296, 297, 300], "workflow": [7, 179, 180, 181], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 55, 66, 69, 71, 72, 73, 110, 128, 130, 291, 300], "binari": [7, 24, 27, 33, 91, 149, 167, 183, 184, 189, 190, 205, 226], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 247, 252, 280], "earlier": [7, 288, 290, 291, 294, 297], "roboti": 7, "download": [7, 10, 110, 130, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300], "html": [7, 71], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 66, 69, 71, 72, 73, 110, 121, 130, 141, 166, 261, 288, 290, 294], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 53, 296], "bin": [7, 149, 184, 284], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 146, 188, 192, 288, 290, 297], "nvidia": 7, "older": [7, 11], "hack": [7, 288], "line": [7, 32, 66, 69, 71, 72, 73, 289, 294], "adatp": 7, "script": [7, 133, 273, 276, 280, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "unnot": [7, 111], "until": [7, 21, 290, 291, 294], "complet": [7, 9, 61, 69, 92, 283, 285, 288, 290, 293], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 289, 297], "troubleshoot": 7, "gl": 7, "h": [7, 92, 94, 113, 124, 153, 157, 247, 289, 291, 297], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 54, 55, 64, 67, 70, 88, 89, 92, 121, 124, 141, 154, 157, 158, 176, 185, 187, 195, 202, 205, 206, 215, 216, 217, 220, 226, 228, 229, 230, 231, 234, 255, 286, 288, 289, 290, 291, 294, 295, 297, 298, 299, 300], "fatal": 7, "No": 7, "directori": [7, 45, 54, 252, 286], "devel": 7, "ubuntu": 7, "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 288, 289, 295, 297], "disappear": [7, 289, 291, 293], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 86, 107, 142, 147, 154, 155, 159, 163, 172, 196, 273, 288, 289, 294, 295, 296, 297, 298, 299, 300], "glibcxx_3": 7, "29": [7, 289, 295], "compil": [7, 32, 66, 69, 71, 72, 73], "libosmesa": 7, "libgcc": 7, "Then": [7, 290, 293], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 66, 69, 71, 72, 73, 126, 300], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 289, 291, 295, 296], "114": [7, 295, 297], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 295], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 133], "opengl": [7, 294], "global": [7, 32, 66, 69, 71, 72, 73, 166, 175, 188, 192, 226, 286, 288, 294], "cuda_visible_devic": 7, "id": [7, 23, 40, 187, 216, 250, 273], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 295, 297], "displai": [7, 264, 286, 288, 289, 294, 295], "correctli": [7, 32, 66, 69, 71, 72, 73], "lgl": 7, "libegl": 7, "x11": [7, 294], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 69, 140, 182, 185, 187, 215, 264, 286, 288, 289, 293, 297], "sketch": [8, 286], "_": [8, 67, 93, 96, 97, 98, 105, 107, 112, 124, 131, 178, 191, 196, 200, 201, 202, 204, 206, 212, 215, 216, 218, 220, 228, 229, 230, 231, 288, 289, 290, 291, 294, 295, 297, 299], "n_training_step": 8, "datapoint": [8, 45, 297], "onlin": [8, 13, 17, 92, 201, 215, 255, 280, 290, 291, 294, 297], "n_data_per_train": 8, "no_grad": [8, 32, 66, 69, 71, 72, 73, 105, 228, 229, 230, 231, 290, 291, 294], "replay_buff": [8, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 261, 276, 288, 289, 290, 294, 297], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 51, 52, 59, 63, 65, 114, 261, 286, 288, 289, 290, 291, 294, 296, 297, 299], "loss_fn": [8, 291, 299], "backward": [8, 32, 66, 69, 71, 72, 73, 131, 201, 202, 204, 206, 212, 215, 216, 217, 218, 220, 288, 290, 291, 294, 295], "zero_grad": [8, 32, 66, 69, 71, 72, 73, 286, 288, 290, 291, 294, 295], "backpropag": [8, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 294, 295], "differenti": [8, 45, 105, 228, 229, 230, 231, 291, 294, 295], "denomin": 8, "artifact": 8, "numer": [8, 38, 131, 152, 173, 174, 178, 183, 184, 188, 189, 190, 191, 192, 262, 290, 297, 300], "misconcept": 8, "save": [8, 32, 34, 36, 39, 66, 69, 71, 72, 73, 214, 246, 264, 286, 294], "freed": 8, "appear": [8, 33, 295, 297], "compuat": 8, "twice": 8, "fix": [8, 122, 202, 218, 289, 295, 300], "retain_graph": 8, "discuss": [8, 9, 294], "inplac": [8, 32, 34, 36, 39, 66, 69, 71, 72, 73, 126, 288], "accumul": 8, "onto": [8, 33, 137, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 291, 295], "exclud": [8, 51, 92, 99, 140, 166, 294, 297], "forward": [8, 32, 66, 69, 71, 72, 73, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 109, 110, 111, 112, 114, 117, 118, 120, 121, 122, 123, 125, 128, 129, 131, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 166, 168, 169, 171, 175, 176, 182, 184, 185, 187, 190, 191, 192, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 285, 295, 299], "submodul": [8, 32, 66, 69, 71, 72, 73, 82, 214], "param": [8, 32, 40, 66, 69, 70, 71, 72, 73, 95, 105, 112, 125, 147, 149, 158, 172, 188, 191, 194, 196, 214, 222, 225, 228, 229, 230, 231, 232, 288, 294, 295, 296, 299], "grad": [8, 32, 66, 69, 71, 72, 73, 288, 290], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 162, 166, 191, 214], "strictli": [8, 32, 66, 69, 71, 72, 73, 126, 288, 290], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 57, 92, 101, 111, 127, 208, 285, 290, 294, 295], "ask": [8, 288, 290, 291, 294, 296, 300], "much": [8, 35, 41, 57, 213, 215, 290, 294, 295, 297, 300], "render": [8, 260, 288, 289, 290], "upon": [8, 295], "factor": [8, 32, 114, 152, 161, 173, 174, 182, 185, 187, 202, 207, 208, 210, 219, 234, 288, 289, 294, 297, 300], "fit": [8, 11, 107, 285, 286, 288], "everi": [8, 17, 26, 28, 32, 33, 62, 66, 69, 71, 72, 73, 121, 131, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 264, 286, 288, 289, 290, 291, 294, 295], "bottlneck": 8, "affect": [8, 32, 66, 69, 71, 72, 73, 125, 126, 133, 228, 229, 230, 231], "brax": [8, 74, 75, 112, 300], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 53, 66, 69, 71, 72, 73, 100, 126, 158, 204, 205, 255, 285, 286, 288, 290, 291, 294, 295, 297], "underli": [8, 214, 295], "tedeiou": 8, "priorit": [8, 35, 41, 57, 202, 204, 205, 206, 212, 216, 218, 220, 288, 289], "amount": [8, 187, 289, 297], "isn": [8, 34, 36, 39, 183, 191, 294], "contigu": [8, 66, 69, 71, 72, 73, 137, 290, 294, 295, 297, 299, 300], "costli": [8, 295], "concaten": [8, 21, 30, 31, 92, 93, 107, 125, 155, 194, 288, 289, 294, 295, 297, 300], "constitut": [8, 289, 294, 295], "plain": 8, "profil": 8, "fulli": [8, 32, 66, 69, 71, 72, 73, 289, 295, 297], "frequent": [8, 297], "program": [8, 212, 300], "functorch": [8, 10], "incl": 8, "suit": [8, 77, 290, 300], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 191, 194, 214, 294, 295, 299], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 61, 71, 142, 155, 159, 214, 290, 295, 299], "lost": 8, "permut": [8, 61, 299, 300], "idea": [9, 216, 286, 291, 294], "introductori": 9, "intro": [9, 290, 291], "dai": [9, 299], "2022": [9, 10, 295, 299], "spin": [9, 300], "deep": [9, 92, 143, 144, 145, 146, 148, 187, 201, 211, 218, 219, 288], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 107, 131, 288, 289, 290, 291], "reddit": 9, "reagent": 9, "orient": [9, 300], "baselines3": 9, "tf": 9, "bandit": [9, 87], "tensorflow": [9, 158], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 66, 69, 71, 72, 73, 105, 193, 194, 215, 284, 290, 291, 294, 295, 296, 300], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 299], "grade": 9, "factori": [9, 43], "throughput": [9, 288], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 66, 97, 137, 149, 164, 167, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 205, 206, 220, 226, 284, 289, 290, 291, 294, 295, 299, 300], "mbrl": [9, 70, 284], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 295], "dist": [10, 158, 165], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 290, 291, 294], "notebook": [10, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300], "24": [10, 288, 289, 290, 291, 295, 298], "11": [10, 27, 33, 45, 54, 55, 64, 67, 124, 141, 157, 288, 289, 290, 291, 293, 294, 295, 297, 298], "12": [10, 54, 55, 64, 288, 289, 290, 291, 294, 295, 297, 298], "pip": [10, 52, 294, 299, 300], "pip3": [10, 290, 291, 294], "extra": [10, 32, 66, 69, 71, 72, 73, 92, 131, 140, 284, 290, 291, 297], "url": 10, "org": [10, 35, 57, 92, 110, 128, 143, 144, 145, 146, 149, 150, 151, 157, 158, 161, 163, 164, 166, 168, 169, 175, 184, 187, 201, 202, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 228, 233, 241, 296], "whl": 10, "u": [10, 52, 295], "There": [10, 153, 284, 286, 290, 291, 294, 295, 297, 300], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 214], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 51, 52, 57, 66, 69, 71, 72, 73, 91, 92, 93, 94, 96, 97, 98, 101, 103, 104, 107, 108, 110, 111, 113, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 128, 130, 131, 140, 142, 143, 144, 145, 146, 147, 149, 151, 154, 155, 158, 159, 160, 161, 165, 166, 167, 172, 173, 174, 175, 191, 206, 211, 214, 216, 219, 241, 258, 260, 261, 269, 270, 273, 274, 276, 277, 278, 279, 280], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 57, 66, 68, 69, 71, 72, 73, 76, 82, 87, 91, 92, 93, 94, 96, 97, 98, 101, 103, 104, 105, 107, 108, 110, 111, 113, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 128, 130, 131, 134, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 166, 167, 175, 178, 183, 184, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 223, 226, 227, 228, 229, 230, 231, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 273, 274, 280, 289, 290], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 51, 52, 66, 67, 69, 70, 71, 72, 73, 83, 200, 214, 269, 270, 278, 279, 280, 289], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 54, 55, 56, 62, 64, 97], "vs": [11, 153, 154, 299], "longer": [11, 289, 294, 297], "self": [11, 26, 28, 32, 34, 36, 39, 66, 69, 70, 71, 72, 73, 95, 96, 98, 110, 122, 125, 126, 128, 130, 141, 149, 157, 166, 175, 182, 185, 191, 196, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 286, 288, 289, 295, 299], "x": [11, 23, 26, 32, 38, 40, 105, 124, 142, 149, 151, 153, 154, 155, 157, 159, 176, 183, 189, 198, 200, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 264, 288, 290, 295, 297, 299], "23": [11, 289, 295, 298], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 66, 67, 69, 71, 72, 73, 83, 105, 122, 176, 183, 189, 208, 210, 228, 231, 239, 240, 244, 245, 276, 285, 288, 289, 294, 297, 299, 300], "import_modul": 11, "27": [11, 289, 290, 291, 295, 297], "get_class_that_defined_method": 11, "f": [11, 69, 200, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 288, 289, 290, 291, 294, 295, 297, 300], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 51, 53, 66, 69, 71, 72, 73, 97, 107, 122, 126, 131, 152, 159, 173, 174, 189, 195, 202, 209, 214, 218, 260, 261, 286, 288, 289, 290, 291, 295, 300], "module_set": 11, "arg": [12, 14, 26, 28, 32, 54, 55, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 95, 110, 119, 125, 126, 127, 129, 130, 141, 142, 148, 153, 155, 156, 157, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 232, 254, 257, 261, 264, 280, 289], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 51, 52, 66, 68, 69, 71, 72, 73, 92, 93, 95, 96, 99, 100, 101, 104, 105, 106, 109, 111, 112, 114, 117, 118, 120, 121, 122, 123, 125, 129, 131, 140, 141, 153, 156, 157, 182, 184, 185, 187, 190, 191, 192, 201, 202, 203, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 218, 220, 226, 227, 228, 229, 230, 231, 232, 264, 288, 295], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 67, 72, 73, 288, 299], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 76, 92, 93, 94, 97, 101, 102, 106, 107, 110, 111, 113, 119, 120, 123, 126, 127, 128, 130, 133, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 182, 183, 184, 185, 187, 188, 190, 191, 192, 201, 202, 203, 206, 208, 209, 213, 214, 215, 216, 220, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 260, 261, 264, 266, 273, 274, 278, 279, 280, 295], "200": [13, 14, 16, 17, 21, 32, 66, 69, 71, 72, 73, 88, 89, 114, 143, 144, 150, 168, 169, 288, 291, 295], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 92, 114, 264, 267, 276, 286, 288, 289, 290, 291, 294, 297, 299], "create_env_kwarg": [13, 14, 16, 17, 67, 71, 72, 73, 288], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 66, 67, 69, 71, 72, 73, 105, 122, 126, 131, 142, 143, 144, 145, 146, 151, 154, 155, 188, 192, 251, 252, 260, 269, 270, 273, 278, 279, 280, 288, 289, 290, 300], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 114, 289, 297], "interactiontyp": [13, 16, 18, 19, 20, 21, 135, 139, 188, 192, 260], "exploration_mod": [13, 16, 18, 19, 20, 282, 284], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 57, 66, 69, 71, 72, 73, 95, 96, 98, 105, 107, 110, 114, 115, 116, 121, 122, 124, 125, 126, 128, 130, 131, 147, 150, 152, 155, 158, 160, 161, 168, 169, 172, 174, 182, 191, 195, 198, 199, 200, 201, 202, 206, 209, 210, 211, 212, 214, 216, 218, 219, 220, 227, 233, 234, 235, 236, 237, 238, 239, 240, 241, 262, 288, 289, 297, 300], "datacollector": [13, 14, 16, 17, 188, 192, 215, 290], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 178, 182, 183, 184, 187, 188, 189, 190, 191, 192, 194, 284, 299], "env_mak": [13, 14, 16, 21, 276, 300], "50": [13, 14, 16, 21, 37, 40, 288, 289, 290, 291, 294, 295], "linear": [13, 14, 16, 17, 21, 32, 66, 69, 70, 71, 72, 73, 95, 105, 110, 122, 125, 126, 128, 130, 141, 142, 149, 155, 157, 159, 160, 161, 162, 167, 168, 169, 178, 179, 180, 181, 185, 186, 187, 188, 189, 191, 194, 196, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 228, 229, 230, 231, 276, 284, 289, 293, 296, 299], "2000": [13, 14, 16, 45, 290, 297], "enumer": [13, 14, 16, 21, 32, 38, 42, 66, 69, 71, 72, 73, 221, 285, 288, 289, 290, 291, 297, 299], "int64": [13, 14, 16, 24, 27, 30, 31, 33, 34, 36, 37, 40, 41, 43, 45, 53, 66, 69, 71, 72, 73, 87, 114, 149, 167, 183, 184, 187, 189, 190, 284, 290, 291, 295, 297, 299, 300], "step_count": [13, 14, 16, 66, 69, 71, 72, 73, 120, 290, 291, 299], "shutdown": [13, 14, 16, 17, 21, 288, 299], "del": [13, 14, 16, 288, 290, 293, 299, 300], "randompolici": [13, 14, 16, 18, 19, 20, 22, 92, 114, 282, 297], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 69, 203, 213, 215, 255, 257, 260, 264, 267, 268, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300], "lifespan": [13, 14, 16, 18, 19, 20, 289], "divis": [13, 14, 16, 18, 19, 20, 294], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 97, 291, 297], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 66, 69, 71, 72, 73, 122, 126, 188, 192, 260, 278, 279, 280, 286, 289, 290, 295, 300], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 61, 66, 69, 71, 72, 73, 290], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 289, 290, 294], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 125, 127, 159, 285, 286, 288, 289, 294, 297, 299], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 66, 69, 71, 72, 73, 97, 99, 118, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 158, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 214, 228, 297, 300], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 284, 294, 295], "post": [13, 14, 16, 18, 19, 20, 21, 32, 66, 69, 71, 72, 73], "multistep": [13, 14, 16, 18, 19, 20, 21, 282, 289], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 107, 116, 152, 160, 168, 173, 174, 226, 284, 295, 297], "explorationtyp": [13, 14, 16, 20, 21, 214, 260, 288, 289, 290, 291, 299], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 215], "whole": [13, 14, 16, 26, 28, 32, 45, 66, 69, 71, 72, 73, 126, 255, 288, 290], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 266, 276, 286, 288, 299], "async": [13, 14, 18, 19, 20, 21, 288, 299], "ratio": [13, 14, 40, 288, 290], "finish": [13, 14, 21, 114], "rest": [13, 14, 284, 290, 291, 295, 299], "earli": [13, 14, 299], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 66, 69, 71, 72, 73, 126, 131, 286, 288], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 66, 69, 71, 72, 73, 126, 131, 214, 280, 286, 288, 289, 300], "ordereddict": [13, 14, 16, 17, 21, 32, 66, 69, 71, 72, 73, 126, 131, 289], "form": [13, 14, 17, 32, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 131, 153, 200, 201, 203, 213, 215, 264, 284, 294], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 66, 69, 71, 72, 73, 126], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 62, 66, 69, 71, 72, 73, 102, 107, 120, 142, 155, 159, 212, 218, 297], "increment": [13, 14, 16, 17, 66, 69, 71, 72, 73, 120, 213], "env_fn": [13, 14, 16, 17, 67, 278, 279], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 145, 146, 295], "out_se": [13, 14, 16, 17, 300], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 26, 32, 51, 54, 55, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 95, 110, 119, 122, 125, 126, 127, 129, 130, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 155, 156, 157, 159, 165, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 222, 226, 227, 228, 229, 230, 231, 232, 247, 251, 252, 254, 257, 264, 269, 270, 273, 277, 278, 279, 285, 290, 294], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 66, 69, 71, 72, 73, 91, 92, 93, 94, 96, 97, 98, 101, 103, 104, 105, 107, 108, 111, 113, 114, 115, 116, 117, 120, 121, 123, 124, 125, 131, 140, 143, 148, 149, 153, 154, 155, 159, 162, 166, 167, 184, 189, 190, 195, 201, 202, 204, 206, 208, 212, 214, 215, 216, 217, 218, 220, 228, 229, 230, 231, 258, 260, 262, 271, 272, 288], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 75, 86, 96, 98, 141, 157, 201, 202, 204, 205, 206, 212, 215, 216, 218, 220, 295, 299, 300], "describ": [15, 44, 93, 125, 172, 173, 250, 285, 288, 290, 294, 295, 300], "tensor_spec": [15, 206, 215, 217], "boundedtensorspec": [15, 22, 26, 66, 185, 187, 188, 195, 201, 202, 204, 212, 215, 216, 218, 220, 282, 290, 294, 295, 299, 300], "cube": 15, "envcreat": [16, 22, 276, 277, 280, 282, 288, 289, 299, 300], "interruptor": 16, "_interruptor": 16, "outsid": [16, 294], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 66, 69, 71, 72, 73, 290, 294, 299, 300], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 69, 71, 105, 201, 203, 213, 215, 288, 293, 295, 299], "pin_memori": [17, 35, 38, 41, 42, 51, 52, 72, 73, 109, 288, 299], "regular": [17, 34, 36, 39, 167, 184, 189, 190, 191, 192, 207, 266, 282, 286, 288, 289, 297, 300], "mere": 17, "greater": [17, 153, 288, 289, 299], "signal": [17, 51, 120, 285, 288, 290, 294, 297], "sent": [17, 54, 55, 64, 131], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 53, 72, 73, 111, 131, 141, 142, 143, 145, 148, 155, 157, 159, 178, 191, 196, 255, 261, 288, 290, 291, 295, 297, 300], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 264], "string": [18, 19, 20, 32, 37, 45, 53, 66, 69, 71, 72, 73, 83, 110, 130, 153, 188, 189, 200, 246, 263, 273, 285, 288, 290, 291], "respect": [18, 19, 20, 32, 66, 69, 71, 72, 73, 91, 95, 96, 98, 110, 111, 122, 125, 126, 128, 130, 169, 191, 196, 214, 259, 290, 291, 294], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 66, 69, 71, 72, 73, 112, 126, 140, 153, 214, 285, 288, 289, 291, 297], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 283, 289, 290, 293, 297], "serv": [18, 20, 21, 84, 297, 300], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 66, 69, 71, 72, 73, 101], "seen": [18, 20, 21, 285, 288, 289, 291, 294, 297], "turn": [18, 20, 21, 103, 127, 183, 260, 285, 288, 289, 291, 295, 296], "mp": [18, 19, 20, 67, 131], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 51, 66, 69, 71, 72, 73, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 288], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 51, 66, 69, 71, 72, 73, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 214, 215, 278, 279], "homonym": [18, 19, 20, 295], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 288], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 188, 192], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 278, 279, 288, 289], "coordin": 21, "hood": [21, 295], "init": [21, 32, 66, 69, 71, 72, 73, 288, 289, 290], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 297], "similarli": [21, 32, 61, 66, 69, 71, 72, 73, 193, 194, 212, 300], "num_cpu": 21, "num_gpu": 21, "1024": [21, 289, 297], "equat": [21, 187, 200, 203, 219, 290, 295], "exce": [21, 290, 297], "indefinit": [21, 50], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 264, 288, 290, 291], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 88, 89, 142, 143, 144, 151, 155, 159, 163, 164, 166, 175, 226, 288, 289, 291, 295, 296, 297, 299, 300], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "wherea": [22, 97, 214, 286], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": 22, "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 67, 289], "__main__": [22, 67], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 57, 97, 123, 172, 173, 174, 187, 202, 203, 206, 216, 218, 288, 290, 291, 294], "durat": [23, 294], "meta": [23, 44, 51, 68, 286, 290, 294, 297], "aren": [23, 291], "discret": [24, 27, 30, 31, 33, 47, 66, 97, 165, 167, 206, 207, 284, 289, 290, 294, 300], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 131, 284, 288, 294], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 97, 164, 165, 168, 200, 284, 289, 290, 291, 295, 297], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 299], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 69, 187, 195], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 69, 195, 295], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 66, 69, 71, 72, 73, 95, 96, 98, 105, 110, 122, 125, 126, 128, 130, 131, 191, 214, 273, 300], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 142, 155, 170, 171], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 128], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 280, 284], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 300], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 97, 153, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 284, 299, 300], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 178, 183, 184, 188, 189, 190, 191, 192, 290, 294, 295, 297], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 57], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 122, 137, 295, 297], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 92, 119, 142, 170, 171, 288, 295, 297], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 92, 93, 122, 127, 131, 154, 171, 176, 280, 289, 290, 295, 297], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 125, 126, 162, 172, 280], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 97, 149, 165, 167, 183, 184, 189, 190, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 291], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 149, 167, 183, 189, 205, 206, 226, 282, 284], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 66, 69, 71, 72, 73, 95, 96, 98, 110, 122, 125, 126, 128, 130, 131, 191, 200, 214, 288, 289, 290, 295, 297], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 122, 153, 291, 295, 296], "upper": 25, "unnam": 26, "effect": [26, 32, 66, 69, 71, 72, 73, 92, 117, 126, 264, 288, 297, 300], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 66, 69, 71, 72, 73, 142, 155, 288, 289, 295], "composite_spec": 26, "observation_vector": [26, 93, 273, 288], "randn": [26, 34, 36, 39, 54, 55, 64, 107, 137, 149, 154, 158, 162, 165, 167, 178, 179, 180, 181, 183, 188, 189, 191, 194, 195, 196, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 228, 229, 230, 231, 263, 284, 299, 300], "td_project": 26, "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 66, 69, 71, 72, 73, 227, 294], "children": [26, 28, 32, 66, 69, 71, 72, 73], "keysview": [26, 28], "reflect": [26, 28, 140, 214, 267, 289, 290, 291, 294], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 66, 69, 71, 72, 73, 214], "succeed": [26, 28, 290, 294, 295], "selected_kei": [26, 28, 118, 288], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "categor": [27, 31, 33, 149, 165, 167, 183, 184, 189, 190, 205, 226, 291], "action_valu": [27, 33, 148, 149, 167, 183, 184, 189, 190, 214, 226, 284, 291], "arang": [27, 33, 149, 158, 183, 255, 284, 297], "argmax": [27, 149, 167, 184, 190], "chosen_action_valu": [27, 33, 166, 167, 175, 189, 190, 226, 284, 291], "outcom": [27, 33, 147, 172], "lazi": [28, 29, 49, 66, 69, 71, 72, 73, 110, 128, 160, 193, 194, 288, 289, 293, 297, 300], "represent": [28, 29, 32, 66, 69, 71, 72, 73, 110, 128, 130, 288, 295, 296, 300], "drawn": [28, 29, 122, 188, 192, 290, 294], "lazystackedtensordict": [28, 66, 69, 70, 71, 72, 73, 293, 299], "heterogen": [28, 29, 133, 159, 288, 289], "semant": [28, 29, 284], "thrown": [29, 32, 66, 69, 71, 72, 73, 297], "nvec": [30, 31], "cardin": [30, 31, 149, 167, 183, 184, 190, 290], "ax": [30, 160, 161], "m": [30, 32, 66, 69, 71, 72, 73, 97, 192, 284, 289, 295], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 205, 226, 282], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 282], "gamma": [32, 114, 157, 201, 202, 204, 205, 206, 207, 208, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 276, 285, 288, 289, 290, 294, 299], "sutton": [32, 285, 294], "1988": 32, "predict": [32, 40, 150, 156, 157, 197, 207, 209, 210, 227, 284, 288, 289], "tempor": [32, 153, 157, 229, 230, 235, 236], "44": [32, 289, 295], "discount": [32, 67, 114, 202, 207, 208, 210, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 285, 289, 290, 294], "ahead": [32, 300], "add_modul": [32, 66, 69, 71, 72, 73], "child": [32, 66, 69, 71, 72, 73], "fn": [32, 37, 66, 69, 71, 72, 73, 162, 278, 279], "init_weight": [32, 66, 69, 71, 72, 73], "fill_": [32, 66, 69, 71, 72, 73, 289, 291, 300], "net": [32, 66, 69, 71, 72, 73, 154, 159, 201, 202, 206, 212, 215, 216, 217, 218, 273, 276, 289, 295, 296, 299], "in_featur": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 142, 143, 144, 145, 146, 154, 155, 159, 160, 161, 179, 191, 205, 214, 299], "out_featur": [32, 66, 69, 70, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 141, 142, 143, 144, 145, 146, 150, 151, 153, 154, 155, 157, 159, 160, 161, 179, 183, 191, 205, 214, 284, 288, 291, 299], "bia": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 142, 150, 153, 155, 159, 160, 161, 162, 185, 187, 191, 198, 199, 200, 214, 285, 288, 289, 290, 291, 294, 299], "requires_grad": [32, 66, 69, 71, 72, 73, 105], "bfloat16": [32, 66, 69, 71, 72, 73], "datatyp": [32, 66, 69, 71, 72, 73, 214, 297], "member": [32, 66, 69, 71, 72, 73, 214], "xdoctest": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "skip": [32, 66, 69, 71, 72, 73, 102, 126, 133, 188, 192, 214, 228, 229, 230, 231, 246, 247, 257, 260, 288, 289, 290, 295], "buf": [32, 66, 69, 71, 72, 73], "20l": [32, 66, 69, 71, 72, 73, 214], "1l": [32, 66, 69, 71, 72, 73, 214], "5l": [32, 66, 69, 71, 72, 73, 214], "__call__": [32, 37, 66, 69, 71, 72, 73, 192, 286], "associ": [32, 66, 69, 71, 72, 73, 168, 214, 280, 288, 297], "doubl": [32, 46, 66, 69, 71, 72, 73, 95, 96, 98, 110, 122, 125, 126, 128, 130, 191, 205, 207, 211, 214, 216, 219, 226, 288, 289, 290, 291, 300], "eval": [32, 66, 69, 71, 72, 73, 126, 131, 288, 289, 290], "evalu": [32, 66, 69, 71, 72, 73, 126, 147, 158, 165, 174, 216, 269, 270, 289, 290], "dropout": [32, 66, 69, 71, 72, 73, 126, 153, 155, 291], "batchnorm": [32, 66, 69, 71, 72, 73, 126, 214], "disabl": [32, 66, 69, 71, 72, 73, 126, 152, 174, 288], "comparison": [32, 53, 66, 69, 71, 72, 73, 126, 214, 288, 289], "similar": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 129, 130, 131, 179, 181, 188, 191, 192, 214, 285, 288, 289, 290, 291, 295, 300], "confus": [32, 66, 69, 71, 72, 73, 126], "extra_repr": [32, 66, 69, 71, 72, 73], "nontermin": 32, "original_reward": 32, "newli": 32, "OR": 32, "reshap": [32, 153, 155, 290, 294], "get_buff": [32, 66, 69, 71, 72, 73], "throw": [32, 66, 69, 71, 72, 73, 300], "docstr": [32, 66, 69, 71, 72, 73], "get_submodul": [32, 66, 69, 71, 72, 73], "explan": [32, 66, 69, 71, 72, 73], "qualifi": [32, 66, 69, 71, 72, 73], "referenc": [32, 66, 69, 71, 72, 73], "attributeerror": [32, 66, 69, 71, 72, 73], "invalid": [32, 66, 69, 71, 72, 73, 158], "resolv": [32, 66, 69, 71, 72, 73], "get_extra_st": [32, 66, 69, 71, 72, 73, 131], "set_extra_st": [32, 66, 69, 71, 72, 73, 131], "picklabl": [32, 66, 69, 71, 72, 73, 131], "ensur": [32, 35, 41, 57, 61, 66, 69, 71, 72, 73, 92, 110, 128, 131, 183, 284, 289, 290, 295, 297], "guarante": [32, 54, 55, 56, 62, 64, 66, 69, 71, 72, 73, 131, 299], "pickl": [32, 66, 69, 71, 72, 73, 131], "get_paramet": [32, 66, 69, 71, 72, 73], "sai": [32, 66, 69, 71, 72, 73, 296, 300], "net_b": [32, 66, 69, 71, 72, 73], "net_c": [32, 66, 69, 71, 72, 73], "conv": [32, 66, 69, 71, 72, 73, 142, 289], "conv2d": [32, 66, 69, 71, 72, 73, 142, 299], "kernel_s": [32, 66, 69, 71, 72, 73, 142, 143, 144, 163, 289, 299], "stride": [32, 66, 69, 71, 72, 73, 142, 143, 144, 151, 289, 299], "diagram": [32, 66, 69, 71, 72, 73], "show": [32, 66, 69, 71, 72, 73, 159, 284, 288, 290, 291, 294, 295, 297, 299], "itself": [32, 66, 69, 71, 72, 73, 82, 214, 290], "degre": [32, 66, 69, 71, 72, 73], "named_modul": [32, 66, 69, 71, 72, 73], "o": [32, 66, 69, 71, 72, 73], "transit": [32, 51, 66, 69, 71, 72, 73, 197, 288, 291, 295, 297], "half": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214, 288], "ipu": [32, 66, 69, 71, 72, 73], "strict": [32, 66, 69, 71, 72, 73, 126], "descend": [32, 66, 69, 71, 72, 73, 126], "persist": [32, 66, 69, 71, 72, 73, 126, 140, 214], "enforc": [32, 61, 66, 69, 71, 72, 73, 126, 193, 295], "preserv": [32, 66, 69, 71, 72, 73, 126], "missing_kei": [32, 66, 69, 71, 72, 73, 126], "unexpected_kei": [32, 66, 69, 71, 72, 73, 126], "namedtupl": [32, 66, 69, 71, 72, 73, 126], "duplic": [32, 61, 66, 69, 71, 72, 73, 205, 207, 214, 226], "l": [32, 66, 69, 71, 72, 73, 227, 290, 295], "idx": [32, 66, 69, 71, 72, 73], "named_buff": [32, 66, 69, 71, 72, 73], "remove_dupl": [32, 66, 69, 71, 72, 73, 214], "prepend": [32, 66, 69, 71, 72, 73, 214], "running_var": [32, 66, 69, 71, 72, 73], "named_children": [32, 66, 69, 71, 72, 73], "conv4": [32, 66, 69, 71, 72, 73], "conv5": [32, 66, 69, 71, 72, 73], "memo": [32, 66, 69, 71, 72, 73], "named_paramet": [32, 66, 69, 71, 72, 73, 105, 214], "register_backward_hook": [32, 66, 69, 71, 72, 73], "removablehandl": [32, 66, 69, 71, 72, 73], "deprec": [32, 66, 69, 71, 72, 73, 126, 134, 138, 148, 201, 202, 203, 205, 206, 207, 212, 213, 215, 216, 217, 218, 226, 228, 229, 230, 231, 300], "favor": [32, 66, 69, 71, 72, 73, 290], "register_full_backward_hook": [32, 66, 69, 71, 72, 73], "register_buff": [32, 66, 69, 71, 72, 73, 214], "running_mean": [32, 66, 69, 71, 72, 73, 214], "alongsid": [32, 66, 69, 71, 72, 73, 214, 294], "num_featur": [32, 66, 69, 71, 72, 73, 214], "register_forward_hook": [32, 66, 69, 71, 72, 73, 149, 167], "with_kwarg": [32, 66, 69, 71, 72, 73], "always_cal": [32, 66, 69, 71, 72, 73], "posit": [32, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 101, 102, 119, 120, 123, 126, 127, 162, 285, 290, 294, 295, 297], "signatur": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214, 285, 288, 295], "register_module_forward_hook": [32, 66, 69, 71, 72, 73], "regardless": [32, 66, 69, 71, 72, 73, 203, 213, 215], "register_forward_pre_hook": [32, 66, 69, 71, 72, 73], "invok": [32, 66, 69, 71, 72, 73], "And": [32, 66, 69, 71, 72, 73], "forward_pr": [32, 66, 69, 71, 72, 73], "register_module_forward_pre_hook": [32, 66, 69, 71, 72, 73], "grad_input": [32, 66, 69, 71, 72, 73], "grad_output": [32, 66, 69, 71, 72, 73], "subsequ": [32, 66, 69, 71, 72, 73, 291], "technic": [32, 66, 69, 71, 72, 73, 289, 291], "caller": [32, 66, 69, 71, 72, 73], "register_module_full_backward_hook": [32, 66, 69, 71, 72, 73], "register_full_backward_pre_hook": [32, 66, 69, 71, 72, 73], "backward_pr": [32, 66, 69, 71, 72, 73], "register_module_full_backward_pre_hook": [32, 66, 69, 71, 72, 73], "register_load_state_dict_post_hook": [32, 66, 69, 71, 72, 73], "incompatible_kei": [32, 66, 69, 71, 72, 73], "clear": [32, 66, 69, 71, 72, 73, 256], "register_modul": [32, 66, 69, 71, 72, 73, 286], "alia": [32, 66, 69, 71, 72, 73], "register_paramet": [32, 66, 69, 71, 72, 73], "register_state_dict_pre_hook": [32, 66, 69, 71, 72, 73], "keep_var": [32, 66, 69, 71, 72, 73, 126], "made": [32, 54, 55, 56, 62, 64, 66, 69, 71, 72, 73, 187, 205, 214, 226, 288, 289, 291, 294, 296], "requires_grad_": [32, 66, 69, 71, 72, 73], "autograd": [32, 66, 69, 71, 72, 73, 126], "freez": [32, 66, 69, 71, 72, 73], "finetun": [32, 66, 69, 71, 72, 73], "gan": [32, 66, 69, 71, 72, 73], "share_memori": [32, 66, 67, 69, 71, 72, 73, 288], "share_memory_": [32, 66, 69, 71, 72, 73, 299], "destin": [32, 34, 36, 39, 66, 69, 71, 72, 73, 126, 128, 140], "averag": [32, 66, 69, 71, 72, 73, 126, 131, 187, 208, 209, 262, 288, 290], "shallow": [32, 66, 69, 71, 72, 73, 126, 291], "pleas": [32, 66, 69, 71, 72, 73, 126, 283], "detach": [32, 66, 69, 71, 72, 73, 126, 214, 228, 229, 230, 231, 288], "non_block": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "memory_format": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "channels_last": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "complex": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214, 288, 289], "integr": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 146, 153, 157, 191, 214, 284, 294, 295, 296], "unchang": [32, 66, 69, 71, 72, 73, 95, 97, 110, 122, 125, 126, 128, 130, 191, 214, 261, 288, 297], "tri": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "pin": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "4d": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "ignore_w": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "1913": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "3420": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "5113": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "2325": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "torch_doctest_cuda1": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "gpu1": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "1914": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "5112": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214, 295], "2324": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "float16": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "cdoubl": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "3741": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "j": [32, 35, 57, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214, 286], "2382": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "5593": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214, 295], "4443": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "complex128": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "6122": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "1150": [32, 66, 69, 71, 72, 73, 95, 110, 122, 125, 126, 128, 130, 191, 214], "to_empti": [32, 66, 69, 71, 72, 73], "dst_type": [32, 66, 69, 71, 72, 73], "xpu": [32, 66, 69, 71, 72, 73], "set_to_non": [32, 66, 69, 71, 72, 73], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 62], "uniqu": [33, 297], "discretebox": [33, 66, 290, 294, 300], "chosen_data": [34, 53], "rewarddata": [34, 53, 282], "rejected_data": [34, 53], "from_dataset": [34, 36, 53], "dataset_nam": [34, 36, 40, 45, 53, 87], "max_length": [34, 36, 37, 43, 45, 53], "550": [34, 36, 40, 45, 53, 295], "root_dir": [34, 36, 45, 53], "from_disk": [34, 36, 45, 53], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 53, 96, 98, 110, 126, 130, 256, 296], "load_from_disk": [34, 36, 45, 53], "load_dataset": [34, 36, 45, 53], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 53], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 53], "end_scor": [34, 39, 40, 53], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 280], "determin": [34, 35, 36, 39, 41, 51, 57, 110, 130, 187, 289, 294], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 147, 172], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 53, 54, 55, 64], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 291], "memmap": [34, 36, 39, 54, 72, 73, 131, 261, 297], "unbind": [34, 36, 39, 153], "alpha": [35, 41, 57, 142, 202, 206, 216, 218, 288, 297, 299], "ep": [35, 41, 57, 131, 187, 203, 219, 262, 288, 289, 291], "1e": [35, 41, 57, 131, 147, 150, 162, 172, 288, 289, 290, 294], "08": [35, 41, 57, 289, 290, 295], "collate_fn": [35, 38, 41, 42, 51, 52, 297, 299], "prefetch": [35, 38, 41, 42, 51, 52, 53, 288, 289, 291, 297], "schaul": [35, 57], "quan": [35, 57], "antonogl": [35, 57], "silver": [35, 57], "2015": [35, 57], "arxiv": [35, 57, 92, 110, 128, 143, 144, 145, 146, 149, 150, 151, 157, 161, 163, 164, 166, 168, 169, 175, 184, 187, 201, 202, 207, 208, 209, 210, 211, 212, 215, 218, 219, 228, 233, 241, 296], "ab": [35, 57, 110, 128, 131, 150, 151, 157, 161, 163, 164, 166, 168, 169, 175, 201, 202, 208, 209, 210, 211, 212, 215, 218, 296], "1511": [35, 57, 151], "05952": [35, 57], "expon": [35, 41, 57], "\u03b1": [35, 41, 57], "delta": [35, 41, 57, 172, 188, 192, 282, 285], "null": [35, 41, 57, 91], "max_siz": [35, 38, 41, 42, 54, 55, 56, 62, 64], "1_000": [35, 38, 41, 42, 297], "merg": [35, 38, 41, 42, 51, 52, 295], "mini": [35, 38, 41, 42, 51, 52, 294], "decid": [35, 38, 41, 42, 299], "rb": [35, 38, 41, 42, 51, 52, 92, 114, 289, 291, 294, 296, 297, 299], "meth": [35, 38, 41, 42, 214], "incompat": [35, 38, 41, 42, 297], "drop_last": [35, 38, 41, 42, 61], "return_info": [35, 38, 41, 42, 51, 52, 297], "tensordictprioritizedreplaybuff": [35, 282, 299], "simplifi": [35, 295, 297], "manual_se": [35, 38, 41, 42, 97, 107, 114, 158, 165, 178, 184, 185, 187, 195, 201, 202, 204, 212, 218, 294, 295, 299, 300], "_weight": [35, 41, 297, 299], "arrai": [35, 40, 288, 297], "update_prior": [35, 57, 261, 286, 289, 297, 299], "36278465": 35, "cursor": [35, 38, 41, 42, 51, 52], "insert_transform": [35, 38, 41, 42, 51, 52], "insert": [35, 38, 41, 42, 51, 52, 59, 63, 65, 127], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 121, 288, 297], "nonetyp": [36, 39], "logit": [36, 40, 158, 165, 184, 206, 284], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 66, 69, 71, 72, 73, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198], "text": [37, 40, 43, 187, 290], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 297], "inde": [37, 97, 290, 295], "might": [37, 121, 251, 283, 288, 300], "writer": [38, 42, 51, 52, 59, 63, 282, 290], "randomsampl": [38, 42, 51, 52, 282, 288], "roundrobinwrit": [38, 42, 51, 52, 282], "Not": 38, "ref_model": 40, "reward_model": [40, 197], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 105], "kl": [40, 105, 209, 213], "penalti": [40, 213], "strai": 40, "far": [40, 69, 152, 173, 174, 295, 300], "calcul": [40, 114], "gpt2rewardmodel": 40, "get_dataload": [40, 282], "promptdata": [40, 282], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 53], "tensorclass_typ": [40, 53], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 295, 297], "reward_kl": [40, 105], "reward_raw": 40, "sample_log_prob": [40, 179, 180, 181, 188, 192, 194, 215, 273, 290, 294, 299], "create_rollout_td": 40, "log_prob": [40, 147, 158, 165, 174, 192], "log_ratio": 40, "kl_coef": 40, "plu": [40, 295], "replic": 40, "rindex": 40, "multipli": [40, 202, 203, 206, 213, 215, 216, 218, 262, 288], "term": [40, 105, 160, 161, 200, 201, 206, 266, 289, 290, 294], "subtract": [40, 121], "ve": [40, 288, 291], "eo": 40, "limit": [40, 70, 92, 105, 288, 289, 291, 294, 295], "generation_config": 40, "generationconfig": 40, "ti": [40, 237, 238, 239, 240, 242, 243, 244, 245, 289], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 202, 205, 206, 207, 212, 214, 216, 218, 220, 226, 297, 299], "td_error": [41, 42, 202, 204, 205, 206, 207, 212, 214, 216, 218, 220, 226, 288, 297, 299], "reduct": [41, 57], "prioritizedreplaybuff": [41, 282, 299], "update_tensordict_prior": [41, 288, 297, 299], "prioritizedsampl": [41, 42, 205, 207, 226, 282, 288, 297], "min": [41, 57, 172, 173, 174, 187, 202, 203, 206, 216, 218, 289, 290, 294], "median": [41, 57, 188, 192], "len": [41, 54, 55, 64, 142, 155, 159, 288, 295, 296, 297, 299], "include_info": [41, 42, 51, 52], "kw": [42, 59, 63], "int32": [42, 86, 137], "huggingfac": [43, 186], "co": [43, 295], "doc": [43, 289, 294], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 282], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 71, 72, 73, 288, 289], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 69, 128, 140, 246, 297, 300], "condit": [45, 121, 183, 184, 189, 190, 200, 288, 295, 297], "elementwis": 45, "os": [45, 289], "cpu_count": 45, "vocabulari": 45, "loader": [45, 290], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 92, 93, 94, 96, 97, 98, 99, 101, 104, 107, 111, 112, 114, 118, 120, 123, 128, 131, 182, 185, 187, 192, 205, 226], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 289], "batch_dimens": 45, "filder": 45, "tempfil": [45, 276, 288, 289], "randint": [45, 124, 297], "20": [45, 66, 69, 71, 72, 73, 255, 289, 290, 291, 294, 295, 296, 299, 300], "temporarydirectori": [45, 288, 289], "tmpdir": [45, 288, 289], "data_memmap": 45, "exclus": [48, 49, 101, 153, 158, 183, 184, 189, 190, 219, 220, 228, 229, 230, 231, 232, 280, 284], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 51, "use_timeout_as_don": 51, "env_kwarg": [51, 278, 279, 288], "metadata": [51, 290, 294, 300], "reconstruct": [51, 209, 288, 300], "timeout": 51, "recov": [51, 182, 185, 187, 193, 212, 293], "regard": [51, 149, 184, 201, 207, 215, 288, 290, 295], "get_dataset": 51, "qlearning_dataset": 51, "less": [51, 71, 176, 278, 279, 285, 290, 291, 297, 299], "left": [51, 95, 105, 110, 112, 123, 125, 128, 130, 289, 290], "terminate_on_end": 51, "possess": 51, "unexpectedli": 51, "episod": [51, 114, 117, 121, 141, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 289, 294], "absent": 51, "traj_split": 51, "observationnorm": [51, 131, 280, 288, 289, 290, 291, 299], "maze2d": 51, "umaz": 51, "loc": [51, 105, 107, 116, 152, 162, 173, 174, 179, 180, 181, 188, 192, 194, 201, 202, 212, 215, 216, 217, 218, 268, 273, 280, 284, 288, 289, 290, 291, 294, 299], "128": [51, 144, 289, 291, 295, 296, 297], "public": [52, 110, 130], "dua": 52, "graff": 52, "2017": 52, "uci": 52, "archiv": 52, "ic": 52, "edu": 52, "ml": 52, "sklearn": 52, "adult_num": [52, 87], "adult_onehot": [52, 87], "mushroom_num": [52, 87], "mushroom_onehot": [52, 87], "covertyp": [52, 87], "shuttl": [52, 87], "magic": [52, 87], "infinit": [53, 297], "three": [53, 284, 286, 290, 294, 295, 297], "block": [53, 284, 291], "pairwisedataset": [53, 282], "256": [53, 288, 289, 290, 294, 295], "scratch_dir": [54, 288, 297], "myclass": [54, 55, 64], "foo": [54, 55, 64, 297, 300], "bar": [54, 55, 64, 257, 258, 260, 264, 286, 289], "attach": [54, 55, 56, 62, 64, 289], "entiti": [54, 55, 56, 62, 64], "alloc": [55, 158, 288], "zero_": [55, 64, 137], "max_capac": [57, 288, 297], "uniformli": [58, 214, 300], "roundrobin": [59, 63], "piec": [59, 63, 65, 288, 289, 290, 294, 295, 297], "consum": [61, 289, 290, 294, 297], "incomplet": 61, "unlik": [61, 207, 215, 289, 299], "fresh": 61, "caution": [61, 133, 300], "shuffl": [61, 294], "haven": [61, 296], "remain": [61, 97, 105, 121, 161], "draw": 61, "__len__": 62, "_inplace_upd": [66, 71, 72, 73, 74, 75, 87, 88, 89, 126], "_batch_lock": [66, 71, 72, 73, 74, 75, 87, 88, 89, 126], "speak": [66, 288], "fake_tensordict": [66, 69, 71, 72, 73, 289], "ampl": 66, "run_type_check": [66, 70], "placement": 66, "produc": [66, 142, 155, 159, 165, 179, 181, 247, 290, 291, 297, 300], "continuousbox": [66, 137, 290, 294, 295, 299, 300], "unboundedcontinuoustensorspec": [66, 70, 96, 98, 122, 137, 141, 157, 178, 191, 194, 196, 217, 282, 290, 291, 294, 295, 300], "fake_td": [66, 69, 71, 72, 73], "mutabl": [66, 69, 71, 72, 73], "batch_lock": [66, 68, 69, 71, 72, 73, 122, 126, 295], "environn": [66, 69, 70, 71, 72, 73, 126], "immut": [66, 69, 71, 72, 73, 112, 126], "fake": [66, 69, 71, 72, 73, 288, 289], "overridden": [66, 69, 71, 72, 73, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 291], "afterward": [66, 69, 71, 72, 73, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198, 300], "silent": [66, 69, 71, 72, 73, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 159, 162, 163, 164, 168, 169, 171, 176, 182, 184, 185, 187, 190, 195, 198], "rand_act": [66, 69, 71, 72, 73], "_step": [66, 69, 71, 72, 73, 96, 98, 101, 112, 121], "privat": [66, 69, 71, 72, 73, 295, 300], "callback": [66, 69, 71, 72, 73, 294], "auto_reset": [66, 69, 71, 72, 73, 295], "auto_cast_to_devic": [66, 69, 71, 72, 73, 294], "break_when_any_don": [66, 69, 71, 72, 73, 294], "return_contigu": [66, 69, 71, 72, 73, 133, 293], "soon": [66, 69, 71, 72, 73], "ndim": [66, 69, 71, 72, 73], "concomitt": [66, 69, 71, 72, 73], "workspac": [66, 69, 71, 72, 73], "creator": [67, 269, 270, 278, 279, 280], "substitut": [67, 131], "vecnorm": [67, 280], "env_creat": [67, 288], "test_env1": 67, "_td": 67, "observation_count": [67, 300], "test_env2": 67, "sleep": [67, 300], "ps": 67, "p1": 67, "p2": 67, "join": [67, 282, 289, 290], "9934": 67, "env_str": 68, "info_dict_read": 69, "set_info_dict_read": 69, "put": [69, 131, 280, 284, 289, 290, 291, 295], "read_act": 69, "read_don": 69, "reader": [69, 289], "frame_skip": [69, 76, 77, 78, 80, 81, 85, 102, 257, 260, 267, 286, 288, 289, 290, 299], "broken": [69, 133], "read_ob": 69, "dictat": [69, 188, 192, 215, 288, 295], "inner": [69, 97, 286, 289, 290, 294, 300], "read_reward": 69, "total_reward": [69, 289], "step_reward": 69, "baseinfodictread": 69, "info_dict": 69, "hoc": 69, "dict_read": 69, "default_info_dict_read": 69, "my_info_kei": 69, "some_env": 69, "safeti": 70, "constraint": [70, 290, 294], "behav": [70, 84, 165, 212, 296], "mymbenv": [70, 141, 157], "world_model": [70, 141, 157, 209], "super": [70, 96, 98, 141, 149, 157, 196, 202, 204, 206, 212, 216, 218, 220, 288, 295, 299], "hidden_observ": [70, 141, 157], "mlp": [70, 141, 142, 143, 144, 145, 146, 153, 154, 157, 159, 179, 183, 205, 273, 284, 289, 293, 296, 299], "worldmodelwrapp": [70, 141, 157], "activation_class": [70, 141, 142, 143, 144, 145, 146, 150, 151, 155, 157, 159, 289, 294, 299], "relu": [70, 141, 157, 162, 200], "activate_last_lay": [70, 141, 146, 155, 157], "depth": [70, 141, 142, 143, 144, 145, 146, 150, 151, 155, 157, 159, 163, 164, 183, 284, 289, 293, 294], "equal": [71, 72, 73, 106, 107, 142, 148, 153, 155, 159, 219, 223, 255, 278, 279, 288, 290, 296], "readthedoc": 71, "en": 71, "python_interfac": 71, "thread": 71, "task_id": 71, "my_env_fun": [72, 73], "custom_attribute_list": [72, 73], "custom_attribut": [72, 73], "custom_method_list": [72, 73], "custom_method": [72, 73], "deploi": [72, 73], "slight": [72, 73, 289], "overhead": [72, 73], "share_individual_td": [72, 73], "shared_memori": [72, 73], "policy_proof": [72, 73], "ll": [72, 73, 288, 289, 290, 291, 294, 300], "hidden": [72, 73, 150, 153, 154, 163, 164, 168, 169, 179, 180, 181, 191, 194, 203, 213, 215, 284, 291, 293, 299], "allow_step_when_don": [72, 73], "update_kwarg": [72, 73], "googl": [74, 75, 290, 291, 294], "ant": [74, 75, 296], "get_environ": 75, "87": [75, 289, 295], "acrobot": [75, 300], "fetch": [75, 105, 296, 297, 300], "dm_control": [76, 77, 288, 293, 300], "task_nam": 76, "cheetah": [76, 77, 288, 300], "mo": [80, 81], "minecart": [80, 81], "mo_gym": 81, "sumbodul": 82, "wish": [83, 297], "placehold": [84, 126], "secur": 84, "snake": [85, 86], "6x6": [85, 86], "td1": [86, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 288], "12x12": 86, "tsp50": 86, "tsp100": 86, "106": [87, 295], "scenario": [88, 89, 288, 294, 295], "flock": [88, 89], "continuous_act": [88, 89, 294], "cohesion_rew": 88, "collision_rew": 88, "separation_rew": 88, "velocity_rew": 88, "18": [88, 89, 159, 288, 289, 291, 294, 295, 300], "agent_collision_rew": 89, "agent_distance_rew": 89, "model_bas": [90, 141, 157], "transform_reward_spec": [91, 95, 96, 105, 112, 115, 116, 125, 127], "as_invers": 92, "account": [92, 158, 284, 289, 291, 297], "movement": 92, "veloc": [92, 294, 295, 300], "propos": [92, 156, 211, 219, 273, 284, 291, 297], "pdf": [92, 143, 144, 145, 146, 149, 184, 187, 207, 216, 219, 228, 233, 241, 273], "1312": [92, 289], "5602": 92, "seuqenc": [92, 107], "uesd": 92, "unsqueezetransform": [92, 295, 297], "consumpt": 92, "followin": 92, "pictur": 92, "cartpol": [92, 289, 291, 297, 300], "pixels_trsf": [92, 297], "grayscal": [92, 289, 291, 297, 300], "unsqueez": [92, 93, 124, 127, 154, 288, 291, 294, 295], "tensordictreplaybuff": [92, 261, 276, 282, 288, 289, 291, 297], "data_exclud": [92, 297], "_buffer": [92, 123], "transform_observation_spec": [92, 93, 94, 95, 96, 99, 101, 103, 104, 105, 107, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 295], "del_kei": [93, 128, 293, 295], "unsqueeze_if_oor": 93, "observation_posit": 93, "observation_veloc": 93, "delet": 93, "key1": [93, 255, 263], "key2": [93, 255, 263], "crop": [94, 111, 247], "center": [94, 247], "width": [94, 113], "height": [94, 113], "squar": [94, 152, 173, 174, 247], "rewardsc": [95, 126, 288, 289, 291], "rewardclip": 95, "transformed_env": [95, 125, 126], "tranform": [95, 99, 104, 118, 120, 121, 125, 129], "transform_input_spec": [95, 96, 97, 107, 112, 120, 125, 127], "transform_output_spec": [95, 105, 112, 125], "untouch": [95, 105, 112, 125], "transform_done_spec": [95, 105, 112, 125], "dtype_in": 96, "dtype_out": 96, "scan": [96, 98, 193, 194], "expos": [96, 98, 193, 289], "not_transform": [96, 98], "rule": [96, 98, 192, 284, 290], "constructedw": [96, 98], "myenv": [96, 98], "_set_se": [96, 98, 295], "num_actions_effect": 97, "max_act": 97, "include_forward": 97, "dimension": [97, 153, 228, 233, 241, 294], "num_act": [97, 206], "action_out": 97, "_call": [97, 101, 295], "excluded_kei": 99, "finit": [100, 297], "first_dim": 101, "last_dim": 101, "allow_positive_dim": [101, 127], "flatten": [101, 261, 291, 294], "th": [101, 127, 295], "permit": [101, 127], "frameskip": 101, "repeatedli": [102, 290, 294], "init_kei": 104, "is_init": [104, 153, 187, 291], "tracker": 104, "probabilistictensordictmodul": [105, 192, 193, 299], "coef": 105, "pi_curr": 105, "pi_0": 105, "constrain": [105, 153, 215], "overfit": 105, "fine": [105, 296], "probabilist": [105, 188, 282, 290, 299], "get_dist": [105, 192, 193], "mod": [105, 153, 195, 291], "normalparamextractor": [105, 284, 290, 294], "probabilisticactor": [105, 179, 180, 181, 201, 202, 206, 212, 215, 216, 217, 218, 220, 284, 288, 290, 294], "tanhnorm": [105, 179, 180, 181, 188, 194, 201, 202, 212, 215, 216, 217, 218, 220, 282, 290, 294, 299], "n_ob": [105, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220], "n_act": [105, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220], "distribution_class": [105, 179, 180, 181, 188, 192, 194, 201, 202, 206, 212, 215, 216, 217, 218, 284, 288, 290, 294, 299], "return_log_prob": [105, 179, 180, 181, 188, 192, 194, 217, 284, 290, 294, 299], "apply_": 105, "copy_": [105, 288], "formulat": 105, "diverg": [105, 153, 188, 192, 209, 213], "noop": [106, 299], "30": [106, 168, 169, 288, 289, 290, 294, 295], "op": [106, 182, 185, 266], "randomli": [106, 107, 122, 188, 192, 294, 295, 297], "noop_max": 106, "out_keys_inv": [107, 108, 112, 125, 295], "standard_norm": [107, 116, 288, 289, 291], "affin": [107, 116], "layer": [107, 131, 142, 143, 144, 150, 153, 155, 159, 160, 161, 163, 164, 170, 171, 177, 186, 195, 284, 289, 290, 291, 296], "normal": [107, 131, 142, 152, 155, 158, 162, 173, 174, 182, 188, 192, 203, 213, 215, 260, 262, 280, 284, 286, 291, 294, 300], "set_default_tensor_typ": 107, "doubletensor": 107, "isclos": 107, "next_ob": [107, 228, 229, 230, 231, 299], "rubric": [107, 194], "init_stat": [107, 288, 289, 290, 291], "3752e": 107, "01": [107, 187, 198, 203, 213, 215, 288, 289, 291, 294, 295, 296, 298], "5087e": 107, "03": [107, 288, 289, 295, 296, 298], "9294e": 107, "9636": 107, "5608": 107, "6408": 107, "num_it": [107, 289, 290], "reduce_dim": [107, 288, 289, 290, 291], "cat_dim": [107, 288, 289, 290, 291], "keep_dim": [107, 289, 291], "constant": [107, 121, 286, 288, 290, 291, 300], "statist": [107, 131, 217, 280, 288, 289, 290, 300], "approach": [107, 288, 290, 300], "gaussian": [107, 122, 141, 157, 160, 161, 182, 290], "empir": [107, 141, 157, 188, 192, 288, 290, 294], "3d": 107, "third": [107, 184, 294], "r3m": [110, 296], "resnet": [110, 128, 130], "visual": [110, 128, 130, 290, 295], "embed": [110, 128, 129, 130, 166, 178, 179, 180, 181, 191, 196, 296], "ego4d": [110, 128, 130], "univers": [110, 128, 130], "suraj": [110, 128], "nair": [110, 128], "aravind": [110, 128], "rajeswaran": [110, 128], "vikash": [110, 128, 130], "kumar": [110, 128, 130], "chelsea": [110, 128], "finn": [110, 128], "abhinav": [110, 128], "gupta": [110, 128], "2203": [110, 128, 157, 296], "12601": [110, 128, 296], "_init": [110, 128, 288], "snippet": [110, 128, 288], "resnet50": [110, 130, 296], "model_nam": [110, 128, 130, 250], "resnet34": 110, "resnet18": 110, "r3m_vec": [110, 296], "feed": [110, 130, 214, 284, 288, 294, 297], "244": [110, 130, 288, 295], "stack_imag": [110, 130], "tread": [110, 130], "separet": [110, 130], "hub": [110, 130, 296], "resnet50_weight": [110, 130], "imagenet1k_v1": [110, 130], "download_path": [110, 130], "tensor_pixels_kei": [110, 130], "dest": [110, 128, 130, 191], "sub_seq_len": 111, "sample_dim": [111, 288], "mask_kei": 111, "primarili": 111, "hesit": 111, "request": 111, "robust": 111, "mix": [111, 166, 175, 226, 288, 294], "NOT": 111, "improp": 111, "create_copi": 112, "renam": [112, 114, 140, 288], "stuff": 112, "braxenv": [112, 282], "newnam": 112, "interpol": [113, 289, 291], "bilinear": [113, 291], "r2g": 114, "99": [114, 131, 157, 210, 222, 227, 234, 276, 288, 289, 290, 295, 296, 299], "reward_to_go": 114, "bernoulli_": 114, "9010": 114, "9404": [114, 234], "9701": [114, 234], "9900": [114, 234], "0000": [114, 185, 195, 234, 290, 291, 295, 299], "crash": 114, "clamp_min": 115, "clamp_max": 115, "clip_min": 115, "scalar": [115, 144, 146, 160, 161, 182, 185, 187, 198, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 284, 289, 295], "clip_max": 115, "episode_": 117, "reward1": 117, "reward2": 117, "ho": 117, "excludetransform": [118, 297], "squeeze_dim": 119, "step_count_kei": 120, "recognis": 120, "target_return": 121, "guid": [121, 283, 288, 294], "accordingli": [121, 189, 291], "conjunct": [121, 289], "hindsight": 121, "relabel": 121, "reward2gotransform": 121, "primer": [122, 291], "default_valu": [122, 291], "unit": [122, 141, 150, 163, 164, 168, 169, 290], "transfomedenv": 122, "mykei": 122, "__unless": 122, "exists__": 122, "dtype_or_devic": 122, "pool": 123, "from_int": 124, "255": [124, 295, 297], "ri": 124, "principl": 125, "cattransform": 125, "notabl": 125, "cache_spec": 126, "anymor": [126, 191], "set_missing_toler": 126, "keyerror": 126, "unsqueeze_dim": [127, 295], "danger": 127, "vc1": 128, "vc1_vec": 128, "small": [128, 288, 290, 294, 300], "untrain": 128, "make_noload_model": 128, "naiv": 128, "vip": [129, 130, 296], "toward": 130, "implicit": [130, 212, 297], "jason": 130, "ma": 130, "shagun": 130, "sodhani": 130, "dinesh": 130, "jayaraman": 130, "osbert": 130, "bastani": 130, "ami": 130, "zhang": 130, "vip_vec": 130, "shared_td": 131, "decai": [131, 182, 185, 219, 262, 288, 289, 291, 300], "9999": [131, 295], "0001": [131, 150, 162, 290, 295], "fly": [131, 213, 285, 290, 295, 297, 300], "to_observation_norm": 131, "underflow": [131, 262], "build_td_for_shared_vecnorm": 131, "memmori": 131, "memmap_": 131, "queue": [131, 297], "td_share": 131, "v": [131, 179, 212, 218, 284, 288, 289], "state_dim": [132, 168, 169], "action_dim": [132, 143, 145, 288, 293], "gsde": [132, 216, 280], "func": 132, "gsdemodul": 132, "check_dtyp": 133, "short": [133, 289, 290, 294], "discrep": [133, 201, 203, 204, 205, 213, 215, 217, 226], "imposs": 133, "probabilistictdmodul": [138, 139, 155, 188, 192, 227, 260], "next_tensordict": 140, "keep_oth": [140, 295], "exclude_reward": 140, "exclude_don": 140, "exclude_act": 140, "next_": 140, "funtion": [140, 295], "cross": 141, "entropi": [141, 201, 202, 203, 206, 212, 213, 215, 216, 218, 220, 294], "botev": 141, "et": 141, "al": [141, 300], "2013": 141, "cem": 141, "plan": [141, 156, 157], "varianc": [141, 152, 162, 173, 174, 285, 288, 290, 294], "rank": 141, "k": 141, "repeat": [141, 290, 294, 295], "maximis": [141, 143, 145, 157, 284, 288, 289, 290, 294, 295], "horizon": [141, 157, 290], "modelbasedenv": [141, 157], "planning_horizon": [141, 157], "optim_step": [141, 157, 289], "mpc": [141, 156, 157], "num_candid": [141, 157], "candid": [141, 157], "top_k": [141, 157], "modelbasedenvbas": [141, 156, 157, 282], "safemodul": [141, 156, 179, 181, 192, 201, 202, 206, 212, 215, 216, 217, 218, 220, 269, 270, 276, 282, 299], "next_hidden_observ": 141, "num_cel": [142, 143, 144, 145, 146, 150, 151, 153, 155, 159, 179, 289, 290, 291, 294, 299], "elu": [142, 143, 144, 145, 146, 150, 151, 289, 299], "activation_kwarg": [142, 155], "norm_class": [142, 143, 144, 155], "norm_kwarg": [142, 155], "bias_last_lay": [142, 143, 144, 145, 146, 151, 155], "aggregator_class": [142, 143, 144, 289, 291, 299], "squashdim": [142, 143, 299], "aggregator_kwarg": [142, 143, 144, 289, 291], "squeeze_output": [142, 143, 144, 289, 291], "convolut": [142, 143, 144, 170], "neural": [142, 170, 191, 284, 289, 290, 291, 294, 295, 300], "cell": [142, 155, 159, 290], "kernel": [142, 151, 154], "device_typ": [142, 143, 144, 145, 146, 151, 155, 160, 161], "cnet": 142, "34": [142, 155, 288, 289, 294, 295, 298, 300], "35": [142, 155, 289, 294, 295, 296], "rectangular": 142, "conv_net_kwarg": [143, 144], "mlp_net_kwarg": [143, 144, 145], "use_avg_pool": [143, 144], "WITH": [143, 144, 145, 146, 187, 219], "1509": [143, 144, 145, 146, 157, 187, 211, 219, 295], "02971": [143, 144, 145, 146, 187, 219], "convnet": [143, 291, 299], "ndims_in": 143, "avgpool": [143, 144], "adaptiveavgpool2d": [144, 289, 291], "400": [145, 146, 294, 295, 297], "mlp_net_kwargs_net1": 146, "mlp_net_kwargs_net2": 146, "atol": [147, 172], "06": [147, 172, 288, 289, 291, 295], "rtol": [147, 172], "batch_shap": [147, 172], "event_shap": [147, 172], "absolut": [147, 172, 288], "densiti": [147, 158, 165, 174], "mass": [147, 158, 165, 174, 295], "rsampl": [147, 165, 192], "sample_shap": [147, 158, 165], "dqnet": 148, "atom": 148, "softmax": [148, 183, 184], "action_spac": [149, 167, 183, 184, 189, 190, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 291], "var_num": [149, 167, 183, 184, 190], "action_value_kei": [149, 167, 184, 189, 190, 214, 226], "perspect": [149, 184, 207, 290], "1707": [149, 184, 207, 215], "06887": [149, 184, 207], "mult": [149, 159, 167, 183, 184, 189, 190], "functional_modul": [149, 167, 189, 191, 194, 284], "make_funct": [149, 167, 188, 189, 191, 194, 196, 214, 284, 299], "tensordict_modul": [149, 167, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 204, 206, 212, 215, 216, 217, 218, 220, 284], "nbin": [149, 183, 284], "customdistributionalqv": 149, "log_softmax": [149, 183], "one_hot": [149, 167], "qvalue_actor": [149, 167, 183, 189, 284], "std_bia": 150, "std_min_val": 150, "belief": [150, 163, 168, 169], "1912": [150, 208, 209, 210], "01603": [150, 208, 209, 210], "softplu": [150, 162, 198, 199, 200], "out_features_valu": 151, "cnn_kwarg": [151, 289], "mlp_kwarg": [151, 154, 289], "duel": 151, "cnn": [151, 289, 299], "06581": 151, "512": [151, 289, 295, 297], "upscal": [152, 173, 174], "tanh_loc": [152, 173, 174], "event_dim": [152, 172, 173], "ultim": [152, 173, 174], "poor": [152, 173, 174], "explos": [152, 173, 174], "switch": [152, 174], "sigma": [152, 173, 174, 182, 187, 290], "formula": [152, 173, 174, 201, 203, 213, 215, 285, 290], "embedd": [153, 154], "lstmcell": 153, "correspont": 153, "input_s": [153, 154, 291], "hidden_s": [153, 154, 291], "num_lay": [153, 163, 164], "b_ih": 153, "b_hh": 153, "introduc": [153, 187, 288], "proj_siz": 153, "recurrent_state_h": [153, 291], "recurrent_state_c": [153, 291], "triplet": [153, 189, 190], "custom_kei": 153, "temporal_mod": 153, "set_temporal_mod": 153, "tensordictsequenti": [153, 183, 193, 284, 288, 291, 293, 296, 299], "seq": [153, 291, 293], "lstm_modul": 153, "rs_h": 153, "rs_c": 153, "set_recurrent_mod": [153, 291], "batch_first": [153, 291], "hidden0": 153, "hidden1": 153, "policy_infer": 153, "policy_train": 153, "traj_td": 153, "td_inf": 153, "assert_clos": 153, "lstm_kwarg": 154, "next_observ": [154, 201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 293], "time_step": 154, "2d": [154, 294], "hidden0_in": 154, "hidden1_in": 154, "hidden0_out": 154, "hidden1_out": 154, "single_bias_last_lay": 155, "layer_class": 155, "layer_kwarg": 155, "perceptron": 155, "seamless": 155, "lazylinear": [155, 284, 290, 295, 296, 299], "42": [155, 201, 202, 204, 212, 218, 289, 290, 294, 295], "noisylinear": [155, 160, 282, 289], "noisylazylinear": [155, 282], "At": [156, 289, 290, 291, 293, 295, 296], "mpcplanner": 156, "tensordict_out": [156, 300], "mppi": 157, "covari": 157, "william": [157, 217], "aldrich": 157, "theodor": 157, "01149": 157, "hansen": 157, "wang": 157, "su": 157, "04955": 157, "valueoper": [157, 179, 180, 181, 201, 202, 203, 204, 206, 212, 213, 215, 216, 217, 218, 220, 276, 284, 288, 290], "tdlambdaestim": [157, 282, 288], "value_net": [157, 205, 217, 228, 229, 230, 231, 290], "adv": 157, "lmbda": [157, 222, 228, 231, 233, 239, 240, 241, 244, 245, 285, 288, 290, 294], "95": [157, 222, 289, 290, 291, 295, 296], "value_network": [157, 204, 205, 207, 212, 218, 228, 229, 230, 231, 285, 288, 290], "temperatur": [157, 202, 212], "neg_inf": 158, "inf": 158, "padding_valu": 158, "www": 158, "api_doc": 158, "tf_agent": 158, "event": [158, 165, 237, 238, 239, 240, 242, 243, 244, 245, 297], "unnorm": [158, 165], "sparse_mask": 158, "dens": 158, "1203": 158, "0928": 158, "0831": 158, "ones_lik": 158, "1972": 158, "n_agent_input": [159, 294], "n_agent_output": [159, 294], "centralis": [159, 294], "share_param": [159, 294], "multiag": [159, 166, 175, 226], "homogen": [159, 294], "toech": 159, "agent_network": 159, "modulelist": [159, 273, 299], "centalis": 159, "shown": [159, 284, 293, 294, 297], "std_init": [160, 161], "matrix": [160, 161], "initialize_paramet": 160, "isol": 160, "1706": [161, 175], "10295v3": 161, "induc": 161, "aid": 161, "scale_map": 162, "biased_softplus_1": 162, "scale_lb": [162, 168, 169], "exp": [162, 200], "module_norm": 162, "channel": [163, 164, 289], "decod": 163, "1803": [163, 164, 166], "10122": [163, 164], "rnn_hidden": 163, "latent": 164, "excacli": 165, "state_shap": [166, 226], "mixing_embed_dim": [166, 226], "qmix": [166, 294], "mixer": [166, 175, 226], "monoton": 166, "hyper": 166, "11485": 166, "qmixerloss": [166, 175], "qmix_vdn": [166, 175], "eventu": [166, 291, 295], "vdn": [166, 175], "greedi": [167, 184, 185, 190, 289, 291], "hidden_dim": [168, 169], "posterior": [168, 209], "rssm": [168, 169, 209], "1811": [168, 169], "04551": [168, 169], "obs_embed": 168, "rnn_hidden_dim": 169, "dream": 169, "tanhtransform": 173, "decomposit": 175, "05296": 175, "vmap": [176, 191, 194, 299], "hide": [176, 290, 294], "satisfi": [176, 284], "tensordictmodulebas": [176, 189, 291], "vmap_dim": 176, "lam": 176, "sample_in": 176, "sample_in_td": 176, "vm": 176, "translat": [178, 188], "character": [178, 183, 188, 189, 191, 297], "overflow": [178, 183, 184, 188, 189, 190, 191, 192], "td_modul": [178, 179, 180, 181, 188, 191, 192, 194, 196, 299], "3635": 178, "0340": 178, "1476": 178, "3911": [178, 295], "1664": [178, 289, 295], "5455": 178, "2247": 178, "4583": 178, "2916": 178, "2160": 178, "5337": 178, "5193": 178, "grad_fn": [178, 185, 299], "addmmbackward0": 178, "actorvalueoper": [179, 284], "get_policy_oper": [179, 180, 181, 203, 213, 215, 284], "standalon": [179, 180, 181], "tdmodul": [179, 180, 181, 276], "get_critic_oper": 179, "common_oper": [179, 181], "policy_oper": [179, 180, 181], "value_oper": [179, 180, 181], "normalparamwrapp": [179, 180, 181, 188, 194, 201, 202, 206, 212, 215, 216, 217, 218, 220, 282, 299], "module_hidden": [179, 181], "td_module_hidden": [179, 181], "module_act": [179, 181], "td_module_act": [179, 180, 181], "module_valu": [179, 180, 181], "td_module_valu": [179, 180, 181], "state_action_valu": [179, 196, 202, 218, 227, 273, 276, 284, 288, 299], "td_clone": [179, 180, 181], "tensordictmodulewrapp": [179, 269, 270, 276], "get_policy_head": [179, 180, 181], "safesequenti": [179, 180, 181, 226], "head": [179, 181, 203, 213, 215], "get_value_head": [179, 180, 181], "get_value_oper": [179, 180, 181, 203, 213, 215], "action_modul": 180, "state_valu": [180, 181, 196, 203, 206, 213, 215, 216, 218, 228, 229, 230, 231, 233, 235, 237, 239, 241, 242, 244, 284, 288, 290, 294], "qualiti": [181, 284], "actorcriticoper": [181, 203, 213, 215, 284], "embeddig": 181, "refet": 181, "actorcriticwrapp": [181, 284, 288], "po": [182, 185], "sigma_init": 182, "epsilon": [182, 185, 187, 219, 262, 289, 290, 291], "sigma_end": 182, "annealing_num_step": [182, 185, 187, 288, 289, 291], "captur": [182, 185, 187], "omiss": [182, 185, 187], "warn": [182, 185, 187, 289, 300], "ommit": [182, 185, 187, 297], "qvaluemodul": [183, 189, 226, 291], "distributionaldqnnet": 183, "make_log_softmax": 183, "my_action_valu": [184, 190], "chanc": 184, "thid": 184, "eps_init": [185, 187, 289, 291], "eps_end": [185, 187, 289], "explorative_polici": [185, 187], "9055": [185, 295], "9277": 185, "6295": 185, "2532": 185, "addbackward0": [185, 299], "lmheadmodel": 186, "extract": [186, 288, 290], "actor_head": [186, 203, 213, 215], "base_model": 186, "lm_head": 186, "ornstein": 187, "uhlenbeck": 187, "ou": [187, 288], "auto": [187, 202, 206, 216, 218, 220, 285, 294], "correl": 187, "sort": 187, "noise_t": 187, "noise_": 187, "theta": [187, 290, 295], "mu": [187, 290], "dt": [187, 295], "sigma_t": 187, "sqrt": 187, "sigma_": 187, "anneal": 187, "ou_prev_nois": 187, "ou_step": 187, "increas": [187, 294], "15": [187, 208, 288, 289, 290, 294, 295, 297, 298, 299], "x0": 187, "sigma_min": 187, "n_steps_ann": 187, "is_init_kei": 187, "_ou_prev_nois": 187, "_ou_step": 187, "default_interaction_typ": [188, 192], "interaction_typ": [188, 192], "set_interaction_typ": [188, 192], "distribution_kwarg": [188, 192, 290, 294], "cache_dist": [188, 192], "n_empirical_estim": [188, 192], "chose": 190, "functionalmodul": 191, "functionalmodulewithbuff": 191, "grucel": 191, "td_fmodul": 191, "td_function": 191, "td_state": 191, "ensembl": [191, 216], "params_repeat": 191, "td_vmap": [191, 194], "random_sampl": [191, 192], "suppli": 192, "fist": 192, "log_prob_kei": [192, 294], "probabilistictensordictsequenti": [193, 201, 203, 213, 215, 217, 269, 270, 299], "partial_toler": [193, 194, 293], "who": [193, 194], "AND": [193, 194], "tensordictsequenci": 194, "tensordictsequ": 194, "safeprobabilisticmodul": [194, 284], "spec1": 194, "net1": 194, "module1": 194, "td_module1": 194, "spec2": 194, "module2": 194, "td_module2": 194, "clamp": [195, 209, 264, 295], "boundari": [195, 290, 294], "resolut": 195, "simplest": [195, 288, 290, 291, 294, 297, 300], "9944": 195, "9991": 195, "3020": 195, "2299": [195, 295], "5418": 195, "2989": 195, "6849": 195, "3169": 195, "2690": [195, 300], "9649": [195, 295], "5686": 195, "8602": 195, "0315": 195, "8455": [195, 295], "6027": 195, "4746": 195, "7843": 195, "7782": 195, "2111": 195, "5115": 195, "4687": 195, "5760": 195, "custommodul": 196, "cat": [196, 202, 204, 212, 216, 218, 220, 299], "imaginari": 197, "imagin": 197, "transition_model": 197, "get_reward_oper": 197, "get_transition_model_oper": 197, "min_val": [198, 200], "bias": [198, 285, 288], "_bia": 198, "invert": [199, 290], "surject": 200, "expln": 200, "biased_softplu": [200, 282], "beggin": 200, "biased_softplus_": 200, "syntax": [200, 288], "met": [200, 295], "1602": 201, "01783v2": 201, "entropy_bonu": [201, 203, 213, 215, 290], "favour": [201, 203, 213, 215], "samples_mc_entropi": [201, 203, 213, 215], "mont": [201, 203, 213, 215, 288], "carlo": [201, 203, 213, 215, 288], "entropy_coef": [201, 203, 213, 215, 290, 294], "critic_coef": [201, 203, 213, 215, 290], "loss_critic_typ": [201, 203, 213, 215, 217, 290], "l1": [201, 203, 204, 205, 206, 213, 215, 216, 217, 220, 223, 226, 284, 288], "l2": [201, 203, 204, 205, 206, 209, 210, 213, 215, 216, 217, 220, 223, 226, 288], "smooth_l1": [201, 202, 203, 204, 205, 206, 212, 213, 215, 216, 217, 218, 220, 223, 226, 290], "separate_loss": [201, 203, 204, 206, 212, 213, 215, 216, 217, 218, 220], "propag": [201, 203, 204, 206, 212, 213, 215, 216, 217, 218, 220, 228, 229, 230, 231, 290, 294], "advantage_kei": [201, 203, 213, 215, 217, 228, 229, 230, 231], "value_target_kei": [201, 203, 213, 215, 217, 228, 229, 230, 231, 290], "value_target": [201, 203, 213, 215, 217, 228, 229, 230, 231, 290, 294], "loss_crit": [201, 215, 290, 294], "loss_entropi": [201, 215, 290, 294], "loss_object": [201, 215, 290, 294], "recur": [201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220, 228, 229, 230, 231, 232], "next_reward": [201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220], "next_don": [201, 202, 204, 205, 206, 212, 215, 216, 217, 218, 220], "loss_obj": 201, "sacloss": [201, 211, 219, 282], "select_out_kei": [201, 202, 204, 206, 212, 215, 216, 218, 220], "throughout": [201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 290, 300], "essenti": [201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 226, 289, 295, 297], "make_value_estim": [201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 221, 226, 285, 288, 289, 294], "value_typ": [201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 222, 226, 288], "valueestim": [201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 222, 226, 282, 285, 288, 294], "hyperparam": [201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 288, 295], "enum": [201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 222, 226, 288], "default_value_estim": [201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 288], "refin": [201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226], "default_value_kwarg": [201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 226, 282, 288], "dqnloss": [201, 202, 204, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 226, 271, 282, 285, 289, 291], "dqn_loss": [201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 218, 220, 221, 226], "conserv": 202, "2006": [202, 295], "04779": 202, "actor_network": [202, 204, 206, 212, 216, 218, 220, 288], "qvalue_network": [202, 206, 212, 216, 218, 220], "loss_funct": [202, 204, 205, 206, 212, 216, 218, 220, 223, 226, 288], "alpha_init": [202, 206, 216, 218], "min_alpha": [202, 206, 216, 218], "max_alpha": [202, 206, 216, 218], "fixed_alpha": [202, 206, 216, 218], "target_entropi": [202, 206, 216, 218], "prod": [202, 218], "n_action": [202, 205, 218], "delay_actor": [202, 204, 218, 220], "delay_qvalu": [202, 206, 216, 218, 220], "min_q_weight": 202, "max_q_backup": 202, "backup": 202, "deterministic_backup": 202, "num_random": 202, "with_lagrang": 202, "lagrang": 202, "lagrange_thresh": 202, "threshold": [202, 203, 290], "valueclass": [202, 204, 206, 212, 216, 218, 220], "qvalu": [202, 206, 212, 216, 218, 220, 273], "loss_actor": [202, 204, 206, 212, 216, 217, 218, 220, 259, 288, 299], "loss_alpha": [202, 206, 216, 218], "loss_alpha_prim": 202, "loss_qvalu": [202, 206, 212, 216, 218, 220], "clip_epsilon": [203, 290, 294], "normalize_advantag": [203, 213, 215, 294], "value_kei": [203, 213, 215, 228, 229, 230, 231, 288], "somemodul": [203, 213, 215], "someactor": [203, 213, 215], "value_head": [203, 213, 215], "somevalu": [203, 213, 215], "loss_modul": [203, 211, 213, 214, 215, 219, 264, 275, 276, 285, 286, 288, 289, 290, 294, 297], "ppoloss": [203, 213, 282], "delay_valu": [204, 205, 207, 217, 218, 226, 289, 291], "loss_valu": [204, 212, 217, 218, 288, 290, 294, 299], "pred_valu": [204, 220, 288, 299], "pred_value_max": [204, 288, 299], "target_valu": [204, 206, 216, 220, 227, 285, 288, 299], "target_value_max": [204, 288, 299], "qvalueactor": [205, 226, 284, 289, 291], "mult_one_hot": [205, 226], "binarydiscretetensorspec": [205, 226, 282], "loss_val": [205, 285, 288, 290, 291, 294, 297], "num_qvalue_net": [206, 212, 216, 218, 220], "target_entropy_weight": 206, "onehotcategor": [206, 282], "action_log_prob_actor": [206, 216], "state_action_value_actor": [206, 216, 220], "disctount": 207, "distributionalqvalueactor": [207, 284], "input_tensordict": [207, 288], "actor_model": 208, "value_model": [208, 210], "model_based_env": 208, "dreamerenv": [208, 282], "imagination_horizon": 208, "unrol": [208, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245], "discount_loss": [208, 210], "lambda_kl": 209, "lambda_reco": 209, "lambda_reward": 209, "reco_loss": 209, "reward_loss": 209, "free_nat": 209, "nat": 209, "delayed_clamp": 209, "global_averag": 209, "value_loss": 210, "fake_data": 210, "ddpgloss": [211, 219, 276, 282, 288, 299], "td3loss": [211, 219, 282], "value_network_update_interv": 211, "contrast": [211, 297], "06461": 211, "2110": 212, "06169": 212, "expectil": 212, "tau": [212, 219, 288, 289], "antmaz": 212, "sticht": 212, "loss_value_diff": 212, "diff": 212, "old_polici": 213, "new_polici": 213, "adapt": [213, 288, 295], "old": [213, 300], "distanc": [213, 223, 227, 228, 294], "apart": [213, 294], "dtarg": 213, "samples_mc_kl": 213, "analyt": 213, "decrement": 213, "loss_": [214, 259, 285, 288], "equip": [214, 291], "gh": 214, "_acceptedkei": 214, "dataclass": [214, 273], "_forward_value_estimator_kei": 214, "alter": [214, 284], "value_estim": [214, 228, 229, 230, 231, 232, 285, 288, 294], "myloss": 214, "action2": 214, "convert_to_funct": [214, 288], "expand_dim": 214, "create_target_param": [214, 288], "compare_against": [214, 288], "funs_to_decor": 214, "stuctur": 214, "_param": 214, "expans": 214, "resampl": 214, "_target_param": 214, "valueestimatorbas": [214, 282], "blend": 214, "upcom": [214, 237, 238, 239, 240, 242, 243, 244, 245, 288], "proxim": [215, 290, 294], "optimis": [215, 260, 290, 294], "flavour": [215, 294, 299], "clipppoloss": [215, 282, 290, 294], "klpenppoloss": [215, 282], "regularis": 215, "06347": 215, "gae": [215, 282, 285, 288, 290, 294], "ppo_loss": 215, "tdlambda": [215, 222, 285, 288], "base_lay": 215, "randn_lik": 215, "samplelogprob": 215, "openreview": [216, 273], "ay8zfzm0tdd": [216, 273], "sub_sample_len": 216, "subsampl": [216, 255, 286], "connectionist": 217, "1992": 217, "doi": 217, "1007": 217, "bf00992696": 217, "actor_net": [217, 288, 290], "1801": 218, "01290": 218, "applic": [218, 226, 295], "1812": 218, "05905": 218, "redqloss": [219, 282], "math": 219, "theta_t": [219, 295], "theta_": [219, 295], "polyak": 219, "policy_nois": 220, "noise_clip": 220, "next_state_valu": [220, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 282], "td0": [221, 288], "v2": [223, 237, 238, 239, 240, 242, 243, 244, 245, 273], "strict_shap": 223, "view_a": 223, "qmixer": [226, 282], "local_valu": 226, "visibl": [226, 294], "dafault": 226, "acceptedkei": 226, "global_valu": 226, "premad": 226, "penultim": 226, "local_value_network": 226, "mixer_network": 226, "suggest": [226, 294], "value_modul": [226, 290, 299], "qnet": [226, 288], "next_val_kei": 227, "pred_next_v": 227, "usus": 227, "mse": 227, "q_valu": 227, "n_steps_to_next": 227, "value_next_st": 227, "1506": [228, 233, 241], "02438": [228, 233, 241], "exponenti": [228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 262], "average_ga": [228, 290], "skip_exist": [228, 229, 230, 231], "advang": 228, "gradient_mod": 228, "value_error": [228, 229, 230, 231, 232], "sign": 228, "unused_arg": 228, "target_param": [228, 229, 230, 231, 232, 288, 294], "98": [228, 229, 230, 231, 289, 295], "94": [228, 231, 288, 289, 291, 295, 296, 297], "unpack": [228, 229, 230, 231], "tensor_kei": [228, 229, 230, 231, 232], "next_valu": [228, 229, 230, 231, 232], "aka": [229, 289], "average_reward": [229, 230, 231], "tdestim": [229, 230, 232], "infti": 230, "valuefunctionbas": 232, "time_dim": [233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245], "old_stat": [233, 235, 237, 239, 241, 242, 244], "new_stat": [233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "rolling_gamma": [237, 238, 239, 240, 242, 243, 244, 245], "g1": [237, 238, 239, 240, 242, 243, 244, 245], "g2": [237, 238, 239, 240, 242, 243, 244, 245], "g3": [237, 238, 239, 240, 242, 243, 244, 245], "g4": [237, 238, 239, 240, 242, 243, 244, 245], "v3": [237, 238, 239, 240, 242, 243, 244, 245], "v4": [237, 238, 239, 240, 242, 243, 244, 245, 288, 290, 296], "out_file_bas": 246, "skip_reset": 246, "dump": 246, "interv": [246, 247, 256, 266, 289, 295], "center_crop": 247, "make_grid": 247, "Will": 247, "grid": 247, "exp_nam": [248, 249, 252, 253, 254, 276, 289], "log_dir": [248, 249, 251, 253, 289], "templat": 248, "csv": [249, 251, 289], "minim": [249, 297], "dependeci": 249, "experiment_nam": [250, 251], "uuid": [250, 289, 300], "date": 250, "logger_typ": 251, "logger_nam": 251, "tensorboard": [251, 253, 299], "wandb": [251, 254, 299], "mlflow": [251, 252], "wandb_kwarg": 251, "mlflow_kwarg": 251, "tracking_uri": 252, "uri": 252, "datastor": 252, "tb_log": 253, "tensoarboard": 253, "sub_traj_len": 255, "min_sub_traj_len": 255, "register_op": [255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 286, 289], "process_optim_batch": [255, 261, 262, 286], "td_out": [255, 263], "_process_optim_batch_hook": [255, 286], "batch_subsampl": 255, "clear_cuda": 256, "pre_optim_step": [256, 286], "counter": [257, 286], "log_pbar": [257, 258, 260, 262, 286, 289], "progress": [257, 258, 260, 264, 286, 289, 291, 300], "count_fram": 257, "pre_steps_log": [257, 258, 286], "count_frames_log": 257, "lognam": 258, "r_train": [258, 289], "log_reward": [258, 289], "loss_compon": 259, "appl": 259, "omit": [259, 290, 295, 297], "optimizer_hook": 259, "record_interv": [260, 288, 289], "record_fram": [260, 267, 288, 289], "policy_explor": [260, 276, 288, 289], "log_kei": [260, 289], "suffix": 260, "underestim": 260, "suppos": [260, 286, 300], "set_exploration_typ": [260, 282, 290, 291, 299], "r_evalu": [260, 288], "flatten_tensordict": [261, 289], "max_dim": 261, "rb_trainer": 261, "batch_process": [261, 262, 263, 286], "post_loss": [261, 286], "999": [262, 289], "jitter": 262, "finfo": 262, "default_dtyp": 262, "get_default_dtyp": 262, "reward_norm": 262, "update_reward_stat": 262, "normalize_reward": 262, "make_train": [263, 282], "_process_batch_hook": [263, 286], "select_kei": [263, 286], "versatil": 264, "lossmodul": [264, 275, 276, 282], "optim_steps_per_batch": [264, 286, 289], "epoch": [264, 290, 294], "clip_grad_norm": 264, "partial": [264, 291], "clip_norm": 264, "progress_bar": 264, "tqdm": [264, 288, 290, 291, 294, 295], "save_trainer_interv": 264, "disk": [264, 286, 288, 289, 291, 297], "log_interv": [264, 289], "save_trainer_fil": [264, 286], "datacollectorbas": [266, 269, 270, 276, 282], "update_weights_interv": [266, 289], "sit": [266, 289], "update_weight": 266, "post_step": [266, 286], "cfg": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280], "dictconfig": [267, 268, 269, 270, 273, 274, 275, 276, 277, 280], "divid": [267, 284, 288, 294, 295], "unknowingli": 267, "annealing_fram": [267, 288], "init_env_step": [267, 268, 288], "proof_environ": [268, 273, 288], "sta": 268, "ot": 268, "actor_model_explor": [269, 270, 288], "make_env_kwarg": [269, 270], "targetnetupdat": [271, 272, 275, 276], "redqloss_deprec": 272, "actor_net_kwarg": 273, "qvalue_net_kwarg": 273, "observation_kei": 273, "dummi": [273, 288, 300], "parser_env_arg": 273, "parser_model_args_continu": 273, "cattensor": [273, 288, 293, 295, 300], "hydra": 273, "config_stor": 273, "configstor": 273, "halfcheetah": [273, 288], "config_field": 273, "config_cl": 273, "redqmodelconfig": 273, "envconfig": 273, "make_dataclass": 273, "cls_name": 273, "cs": 273, "config_path": 273, "config_nam": 273, "17": [273, 288, 289, 295, 296], "replayargsconfig": 274, "target_net_updat": [276, 288, 289], "constitu": 276, "learnt": [276, 288, 290], "tensorboardlogg": [276, 282], "egreedywrapp": [276, 289, 291], "env_proof": 276, "obs_spec": 276, "net_valu": 276, "dir": [276, 286, 289], "gettempdir": 276, "argpars": [277, 280], "namespac": [277, 280], "parser": [277, 280], "transformed_env_constructor": [277, 282], "num_env_per_collector": [278, 279], "video_tag": 280, "norm_obs_onli": 280, "use_env_cr": 280, "custom_env_mak": 280, "custom_env": 280, "return_transformed_env": 280, "action_dim_gsd": 280, "state_dim_gsd": 280, "obs_norm_state_dict": 280, "wheter": 280, "maker": 280, "asyncdatacollector": 282, "distributedsyncdatacollector": 282, "submitit_delayed_launch": 282, "raycollector": 282, "samplerwithoutreplac": [282, 290, 294, 297], "tensorstorag": 282, "tensordictroundrobinwrit": 282, "d4rlexperiencereplai": 282, "openmlexperiencereplai": 282, "unboundeddiscretetensorspec": [282, 290, 300], "lazystackedtensorspec": 282, "lazystackedcompositespec": 282, "prompttensordicttoken": 282, "rolloutfrommodel": 282, "tokenizeddatasetload": 282, "create_infinite_iter": 282, "consolidate_spec": 282, "check_no_exclusive_kei": 282, "tensordictrecord": 282, "videorecord": [282, 290], "get_available_librari": 282, "set_exploration_mod": 282, "make_composite_from_td": [282, 295], "braxwrapp": 282, "dmcontrolenv": [282, 288, 293, 300], "dmcontrolwrapp": 282, "mogymenv": 282, "mogymwrapp": 282, "jumanjienv": 282, "jumanjiwrapp": 282, "openmlenv": 282, "vmaswrapp": 282, "qvaluehook": 282, "distributionalqvaluehook": 282, "reset_nois": 282, "cemplann": 282, "mpcplannerbas": 282, "mppiplann": 282, "independentnorm": 282, "truncatednorm": 282, "tanhdelta": [282, 288], "maskedcategor": 282, "inv_softplu": 282, "vmapmodul": 282, "distributionaldqnloss": [282, 289], "discretesacloss": 282, "iqlloss": 282, "cqlloss": 282, "a2closs": 282, "reinforceloss": 282, "dreameractorloss": 282, "dreamermodelloss": 282, "dreamervalueloss": 282, "td0estim": [282, 288], "td1estim": [282, 288], "td0_return_estim": 282, "td0_advantage_estim": 282, "td1_return_estim": 282, "vec_td1_return_estim": 282, "td1_advantage_estim": 282, "vec_td1_advantage_estim": 282, "td_lambda_return_estim": 282, "vec_td_lambda_return_estim": 282, "td_lambda_advantage_estim": 282, "vec_td_lambda_advantage_estim": 282, "generalized_advantage_estim": 282, "vec_generalized_advantage_estim": 282, "reward2go": 282, "distance_loss": [282, 288], "hold_out_net": 282, "hold_out_param": [282, 288], "softupd": [282, 288, 289, 291], "hardupd": [282, 288], "batchsubsampl": [282, 286], "clearcudacach": 282, "countframeslog": 282, "logreward": [282, 286, 289], "optimizerhook": [282, 289], "replaybuffertrain": [282, 286, 289], "rewardnorm": 282, "selectkei": [282, 286], "trainerhookbas": [282, 286, 289], "updateweight": [282, 286, 289], "make_collector_offpolici": 282, "make_collector_onpolici": 282, "make_dqn_loss": 282, "make_redq_loss": 282, "make_redq_model": 282, "make_replay_buff": [282, 288], "make_target_updat": 282, "parallel_env_constructor": [282, 288], "sync_async_collector": 282, "sync_sync_collector": 282, "correct_for_frame_skip": 282, "get_stats_random_rollout": 282, "csvlogger": [282, 289], "mlflowlogg": 282, "wandblogg": 282, "get_logg": 282, "generate_exp_nam": 282, "journei": 283, "textbook": 283, "highlight": 283, "ever": [283, 294], "bump": 283, "think": [283, 290, 294, 300], "benefit": [283, 294, 297], "pr": 283, "ground": [284, 288, 295], "categori": [284, 286], "recycl": [284, 297], "impos": 284, "violat": 284, "noisier": 284, "Their": [284, 294], "sd": 284, "prob_modul": 284, "pick": [284, 288, 289], "tabl": [284, 289], "customari": 284, "hopefulli": [284, 289], "mathbb": [284, 289], "rightarrow": [284, 289], "soften": 284, "backbon": [284, 291, 293, 299], "make_actor": 284, "make_valu": 284, "shared_param": 284, "make_common": 284, "reusabl": [285, 288, 297], "swappabl": [285, 288], "characterist": [285, 288, 295], "trainabl": [285, 288, 296], "whatev": [285, 288], "convent": [285, 288, 291, 294, 295], "smth": [285, 288], "metric": [285, 288], "nutshel": [285, 288], "barto": [285, 294], "chapter": 285, "proxi": 285, "significantli": [285, 288, 289, 294], "next_stat": 285, "value_net_loss": 285, "pow": [285, 288], "therebi": 285, "room": 285, "convers": 285, "signifi": [285, 294], "underperform": 285, "thin": 285, "intric": 285, "outer": [286, 288, 289, 300], "believ": 286, "scheme": [286, 300], "substenti": 286, "_pre_steps_log_hook": 286, "_pre_optim_hook": 286, "sub_batch": 286, "_post_loss_hook": 286, "_post_optim_hook": 286, "post_optim": [286, 289], "_post_optim_log": 286, "post_optim_log": 286, "_post_steps_hook": 286, "_post_steps_log_hook": 286, "post_steps_log": 286, "comment": [286, 289, 299], "extens": [286, 297], "reserv": 286, "logginghook": 286, "logging_hook": 286, "save_dict": 286, "some_valu": 286, "torchsnapshot": 286, "ckpt_backend": 286, "pt": [286, 296], "filepath": 286, "save_train": 286, "load_from_fil": 286, "perfectli": [286, 288, 295], "intern": 287, "author": [288, 289, 290, 291, 294, 295, 297], "vincent": [288, 289, 290, 291, 295, 297], "moen": [288, 289, 290, 291, 295, 297], "assembl": 288, "focus": 288, "straightforward": [288, 289, 297], "overview": [288, 290, 294, 299], "transpar": [288, 291], "understood": 288, "sota": [288, 289, 299], "illustr": [288, 289, 297], "device_count": [288, 289, 291, 296, 300], "loss_dict": 288, "modal": 288, "oblivi": [288, 290, 297], "elementari": 288, "didact": 288, "dilut": 288, "pessimist": [288, 289, 290], "target_actor_network_param": 288, "actor_in_kei": 288, "actor_crit": 288, "noth": [288, 290], "compromis": 288, "hp": 288, "hasattr": 288, "_value_estim": 288, "elif": [288, 289], "notimplementederror": 288, "unknown": 288, "_loss_actor": 288, "td_copi": 288, "actor_network_param": 288, "value_network_param": 288, "_loss_valu": 288, "pred_val": 288, "target_value_network_param": 288, "smooth": [288, 289], "loss_funt": 288, "glue": 288, "_forward": 288, "ndimens": 288, "remaind": 288, "focu": [288, 289, 290], "pixels_onli": [288, 289, 299, 300], "env_librari": 288, "env_task": 288, "env_arg": 288, "friendli": 288, "torchr": 288, "rescal": 288, "presum": 288, "leav": 288, "make_transformed_env": 288, "reward_sc": 288, "double_to_float_list": 288, "double_to_float_inv_list": 288, "marker": 288, "leverag": [288, 294, 300], "env_per_collector": 288, "transform_state_dict": 288, "make_t_env": 288, "parallel_env": [288, 299, 300], "adjust": [288, 294, 295], "seem": [288, 291], "cheat": 288, "10m": 288, "cautiou": 288, "deal": [288, 290, 294, 297], "magnitud": 288, "thousand": [288, 291], "get_env_stat": 288, "proof_env": 288, "5000": [288, 289, 290], "maxim": [288, 295], "recal": [288, 290], "ddpgmlpactor": 288, "ddpgmlpqnet": 288, "materi": 288, "ornsteinuhlenbeckprocesswrapp": 288, "make_ddpg_actor": 288, "q_net": 288, "moduless": 288, "sugges": 288, "1_000_000": [288, 291], "tight": 288, "10_000": [288, 290, 297], "traj_len": [288, 291], "make_record": 288, "recorder_obj": 288, "flavor": 288, "circular": 288, "buffer_s": [288, 289], "random_crop_len": 288, "prb": 288, "buffer_scratch_dir": 288, "temporari": 288, "dirrectori": 288, "trajecotri": 288, "25": [288, 289, 290, 295], "sampel": 288, "dataflow": 288, "ceil_div": 288, "utd": [288, 291], "update_to_data": 288, "realiz": 288, "_must_": 288, "001": [288, 295], "outdat": 288, "trick": [288, 289], "despit": 288, "adam": [288, 289, 290, 291, 294, 295], "optimizer_actor": 288, "lr": [288, 289, 290, 291, 294, 295], "weight_decai": [288, 289], "optimizer_valu": 288, "total_collection_step": 288, "pretti": [288, 297], "rewards_ev": 288, "collected_fram": 288, "pbar": [288, 290, 291, 294, 295], "r0": 288, "numel": [288, 290, 291, 296, 297], "current_fram": 288, "sampled_tensordict": 288, "gn1": 288, "clip_grad_norm_": [288, 290, 294, 295], "gn2": 288, "gn": [288, 295], "td_record": 288, "rn": 288, "rs": 288, "set_descript": [288, 290, 291, 294, 295], "2f": 288, "00": [288, 289, 290, 291, 294, 295, 296, 298], "800": [288, 289], "04": [288, 289, 291, 294, 295, 296, 298], "1905": 288, "77it": [288, 289], "1600": [288, 289], "02": [288, 289, 290, 295, 296, 298], "626": [288, 295], "70it": [288, 289], "3200": [288, 289], "05": [288, 289, 290, 295, 296], "1318": 288, "63it": [288, 289], "48": [288, 289, 291, 295, 296], "4800": [288, 289, 295], "1867": 288, "87it": [288, 289, 290, 295], "45": [288, 289, 295], "68": [288, 289, 295, 296, 297], "79": [288, 289, 295, 296], "51": [288, 289, 293, 295, 297, 298], "383": [288, 295], "66": [288, 289, 295], "09": [288, 289, 295], "56": [288, 289, 295], "5600": 288, "6400": [288, 299], "1165": 288, "52it": [288, 289, 295], "36": [288, 289, 295], "31": [288, 289, 291, 295, 296], "72": [288, 289, 295, 296], "92": [288, 289, 295, 296], "268": [288, 295], "55": [288, 289, 295], "19": [288, 289, 290, 291, 295], "7200": 288, "475": [288, 295], "18it": [288, 289], "65": [288, 289, 291, 295, 296], "78": [288, 289, 295, 296], "189": [288, 295], "90": [288, 289, 290, 294, 295], "80": [288, 289, 290, 294, 295, 296], "8000": [288, 290], "455": [288, 295], "64it": [288, 289, 295], "71": [288, 289, 295, 296], "43": [288, 289, 291, 295, 296], "49": [288, 289, 294, 295, 296], "53": [288, 289, 290, 295, 296], "88": [288, 289, 295, 296, 297], "8800": 288, "420": [288, 295], "83it": [288, 289], "84": [288, 289, 291, 295, 296], "96": [288, 289, 295, 296], "40": [288, 289, 290, 294, 295, 297, 298], "9600": 288, "333": [288, 295], "14it": [288, 289], "22": [288, 289, 290, 295, 296, 298], "97": [288, 289, 295, 296], "229": [288, 295], "57": [288, 289, 294, 295, 296], "10400it": 288, "285": [288, 295], "48it": 288, "41": [288, 289, 295], "102": [288, 291, 295, 297], "294": [288, 295], "plot": [288, 290, 291, 294, 295], "mention": [288, 291, 297, 300], "matplotlib": [288, 290, 291, 294, 295, 297, 300], "pyplot": [288, 290, 291, 294, 295, 297, 300], "plt": [288, 290, 291, 294, 295, 297, 300], "zip": [288, 292], "legend": 288, "xlabel": [288, 291, 294, 295], "ylabel": [288, 294], "tight_layout": 288, "concret": [288, 290], "takeawai": [288, 289], "minut": [288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "003": [288, 298], "mb": [288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300], "coding_ddpg": [288, 298], "jupyt": [288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300], "ipynb": [288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300], "galleri": [288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300], "sphinx": [288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300], "customis": [289, 294], "road": 289, "aspect": 289, "did": [289, 290, 297, 300], "highest": 289, "prerequisit": 289, "familiar": [289, 294, 300], "lookup": 289, "amort": [289, 290], "cart": 289, "pole": 289, "un": 289, "actuat": 289, "frictionless": 289, "upright": [289, 300], "duelingcnndqnet": 289, "is_notebook": 289, "shell": 289, "get_ipython": 289, "__class__": 289, "zmqinteractiveshel": 289, "qtconsol": 289, "terminalinteractiveshel": 289, "ipython": [289, 294, 295], "nameerror": 289, "interpret": 289, "umbrella": 289, "misplac": 289, "misus": 289, "orchestr": 289, "everyth": [289, 291], "five": [289, 290], "64x64": 289, "motion": [289, 295], "obs_norm_sd": 289, "simpler": 289, "get_norm_stat": 289, "test_env": 289, "make_model": 289, "dummy_env": 289, "output_s": [289, 291], "init_bia": 289, "actor_explor": 289, "eps_greedy_v": 289, "eps_greedy_val_env": 289, "get_replay_buff": 289, "n_optim": 289, "themselv": 289, "simplic": [289, 290, 296, 297], "get_collector": 289, "data_collector": 289, "bunch": 289, "concept": [289, 297], "power": 289, "ubiquit": 289, "get_loss_modul": 289, "target_updat": 289, "995": [289, 295], "sensit": 289, "variat": 289, "2e": [289, 295], "wd": 289, "upd": 289, "harder": [289, 299], "5_000": 289, "500000": 289, "100000": 289, "005": 289, "mandatori": [289, 290, 294, 295], "fairer": 289, "budget": [289, 290], "dqn_exp_": 289, "uuid1": [289, 300], "9895": 289, "0737": 289, "tmp": [289, 297], "tmpkeswro_d": 289, "dqn_exp_404d5b82": 289, "383f": 289, "11ee": [289, 300], "af1d": [289, 300], "0242ac120002": [289, 300], "registr": 289, "cumbersom": 289, "buffer_hook": 289, "weight_updat": 289, "descript": [289, 290], "aliv": 289, "13it": [289, 295], "4045": 289, "9346": [289, 295], "89it": [289, 290, 295], "07": [289, 294, 295], "44it": 289, "59": [289, 291, 295, 296], "26it": [289, 291], "3952": 289, "160": [289, 295, 300], "21": [289, 290, 293, 294, 295, 297, 298], "82it": [289, 295], "3710": 289, "192": [289, 295], "16it": [289, 290], "4073": 289, "224": [289, 295], "75it": [289, 295], "4224": 289, "37": [289, 290, 295, 296, 297, 298], "50it": 289, "4497": 289, "288": [289, 295], "52": [289, 291, 295, 297], "72it": 289, "4526": 289, "320": [289, 295, 300], "35it": 289, "3560": 289, "352": [289, 295], "07it": 289, "384": [289, 295, 297, 298], "416": [289, 295], "28": [289, 290, 294, 295, 296, 298], "59it": 289, "448": [289, 295], "480": [289, 295, 296], "4676": 289, "544": [289, 295], "99it": [289, 295], "3650": 289, "576": [289, 295], "30it": 289, "608": [289, 295], "68it": [289, 295], "4948": 289, "640": 289, "21it": 289, "3892": 289, "672": 289, "37it": [289, 290], "704": 289, "736": 289, "768": 289, "67it": 289, "4345": 289, "54": [289, 291, 295, 297], "03it": [289, 295], "4375": [289, 295], "832": 289, "00it": [289, 295], "3893": 289, "864": 289, "49it": 289, "896": 289, "928": 289, "76it": 289, "4193": 289, "960": 289, "992": [289, 295], "38it": 289, "09it": 289, "1056": 289, "43it": 289, "1088": 289, "53it": 289, "1120": 289, "45it": [289, 295], "1152": 289, "1184": 289, "98it": [289, 295], "4797": 289, "1216": 289, "80it": [289, 295], "1248": 289, "23it": 289, "1280": 289, "55it": 289, "1344": 289, "1376": 289, "65it": [289, 295], "1408": 289, "78it": [289, 290], "4586": 289, "1440": 289, "1472": 289, "1504": 289, "1536": 289, "1568": 289, "06it": 289, "4134": 289, "1632": 289, "39": [289, 291, 295, 296, 297], "11it": [289, 295], "1696": 289, "58": [289, 291, 295], "36it": [289, 290, 295], "4314": 289, "1728": 289, "1760": 289, "1792": 289, "17it": 289, "1824": 289, "33it": [289, 295], "1856": 289, "1888": 289, "34it": [289, 295], "1920": [289, 290], "88it": 289, "4434": 289, "1952": 289, "02it": [289, 295], "1984": 289, "2016": 289, "2048": [289, 296], "47": [289, 291, 295, 297], "39it": 289, "2080": 289, "84it": 289, "4074": [289, 295], "2112": [289, 295], "2144": 289, "2176": 289, "2208": 289, "04it": [289, 295], "2240": 289, "2272": 289, "2304": 289, "27it": [289, 295], "2336": 289, "2368": 289, "19it": 289, "2400": 289, "93it": [289, 290, 295], "2432": 289, "60it": 289, "2464": 289, "85it": [289, 295], "2496": 289, "2528": [289, 295], "01it": [289, 295], "2560": 289, "79it": 289, "2592": 289, "32it": 289, "2624": 289, "2656": [289, 295], "51it": [289, 295], "4104": 289, "2688": 289, "10it": [289, 290], "2720": [289, 295], "2752": 289, "2784": 289, "2816": 289, "2848": 289, "2880": 289, "2912": 289, "81it": [289, 295], "2944": [289, 295], "91it": [289, 295], "60": [289, 290, 294, 295, 299], "2976": [289, 295], "3008": 289, "61": [289, 295, 296], "3040": 289, "92it": [289, 295], "3072": 289, "08it": 289, "62": [289, 295, 296], "3104": 289, "63": [289, 295, 296, 297], "3136": 289, "3168": 289, "96it": [289, 295], "47it": 289, "3232": [289, 295], "73it": [289, 290, 295], "2500": 289, "3264": 289, "3296": 289, "31it": 289, "67": [289, 293, 295, 296], "3328": 289, "05it": 289, "3360": 289, "3392": 289, "3424": 289, "69": [289, 295], "3456": [289, 295], "70": [289, 290, 294, 295, 296], "3488": 289, "3520": 289, "95it": [289, 295], "3552": 289, "3584": 289, "3616": 289, "73": [289, 295, 296], "3648": 289, "57it": 289, "74": [289, 295, 296], "3680": 289, "3712": 289, "75": [289, 295, 296], "3744": 289, "76": [289, 295, 296, 297], "3776": 289, "3808": 289, "77": [289, 295, 296, 297], "3840": 289, "3872": 289, "3904": 289, "3936": 289, "3968": 289, "4000": [289, 290], "4032": 289, "4064": 289, "4164": [289, 295], "82": [289, 295, 296], "4096": 289, "83": [289, 295, 296], "4128": [289, 295], "4160": 289, "4192": 289, "85": [289, 291, 295], "4256": [289, 295], "86": [289, 295], "4288": [289, 295], "4320": 289, "4352": 289, "4384": 289, "4416": 289, "89": [289, 295, 297], "4448": 289, "90it": [289, 295], "4480": 289, "4512": 289, "61it": 289, "91": [289, 295], "4544": 289, "4576": 289, "4608": 289, "93": [289, 295], "4640": 289, "4672": [289, 295], "4704": 289, "42it": 289, "4736": 289, "24it": [289, 291], "4768": 289, "4832": 289, "4864": 289, "4896": 289, "66it": 289, "4928": 289, "4960": 289, "4992": 289, "5024it": 289, "quickli": [289, 294, 300], "print_csv_files_in_fold": 289, "folder_path": 289, "csv_file": 289, "output_str": 289, "dirpath": 289, "walk": [289, 293, 300], "endswith": 289, "strip": 289, "4676021933555603": 289, "4344882667064667": 289, "4948333501815796": 289, "3120497167110443": 289, "2836119532585144": 289, "3365285396575928": 289, "36402949690818787": 289, "4853655993938446": 289, "37810370326042175": 289, "5254769325256348": 289, "6203793287277222": 289, "5004067420959473": 289, "grad_norm_0": 289, "681741237640381": 289, "8113949298858643": 289, "267171621322632": 289, "0610198974609375": 289, "3318681716918945": 289, "124063014984131": 289, "171263694763184": 289, "307337760925293": 289, "817179203033447": 289, "10000000894069672": 289, "249999523162842": 289, "qvaluenetwork": 289, "worst": 289, "accuraci": 289, "fanci": 289, "817": [289, 298], "733": [289, 298], "coding_dqn": [289, 298], "demonstr": [290, 294, 295, 300], "talk": 290, "repetit": 290, "six": 290, "sophist": [290, 294], "invent": 290, "theta_k": 290, "frac": 290, "pi_": 290, "exceed": 290, "discourag": [290, 295], "indispens": 290, "analyz": 290, "lingua": 290, "franca": 290, "defaultdict": [290, 295], "has_cuda": [290, 294, 300], "3e": [290, 291, 294], "max_grad_norm": [290, 294], "big": [290, 297, 300], "ourselv": [290, 300], "benefici": 290, "errat": 290, "hamper": [290, 297], "reactiv": 290, "xy": 290, "sub_batch_s": 290, "num_epoch": [290, 294], "entropy_ep": [290, 294], "generalist": 290, "interchang": [290, 296, 297], "panel": 290, "charact": 290, "inverteddoublependulum": 290, "transmit": 290, "stai": 290, "thumb": 290, "supplementari": [290, 300], "told": 290, "stringent": [290, 294], "nevertheless": [290, 297], "confid": [290, 294], "pack": [290, 300], "ran": 290, "f_": 290, "mu_": 290, "difficulti": [290, 300], "brought": [290, 291], "scrictli": 290, "d_ob": 290, "d_action": 290, "policy_modul": [290, 294], "That": 290, "said": 290, "briefli": [290, 294], "refil": [290, 294], "capac": 290, "conveni": [290, 294, 295], "easiest": [290, 294], "mathemat": [290, 294], "tradeoff": [290, 294], "advantage_modul": 290, "lr_schedul": [290, 295], "cosineannealinglr": [290, 295], "eval_str": 290, "tensordict_data": [290, 294], "data_view": [290, 294], "subdata": [290, 294], "cum_reward_str": 290, "4f": [290, 291, 295], "stepcount_str": 290, "param_group": 290, "lr_str": 290, "eval_rollout": 290, "nice": 290, "355": [290, 295], "111": [290, 295], "1131": 290, "0857": 290, "0003": [290, 295], "357": [290, 295], "1208": 290, "3000": 290, "359": [290, 295], "1446": 290, "363": [290, 295], "0002": [290, 295], "365": [290, 295], "1989": 290, "6000": 290, "360": [290, 295], "2155": 290, "7000": 290, "364": [290, 295], "2310": 290, "368": [290, 295], "2380": 290, "9000": 290, "370": [290, 295], "2514": 290, "372": [290, 295], "2587": 290, "cap": [290, 297], "figsiz": [290, 295], "subplot": [290, 295, 300], "titl": [290, 291, 294, 295], "bit": [290, 291, 294, 297], "403": [290, 295, 298], "coding_ppo": [290, 298], "rnn": 291, "lstmmodul": 291, "84x84": 291, "accessori": 291, "stamp": 291, "tensordictprim": 291, "se": 291, "flank": 291, "assist": 291, "emb": 291, "n_cell": 291, "customiz": 291, "almost": 291, "bidirect": 291, "wouldn": 291, "make_tensordict_prim": 291, "interpolationmod": 291, "qval": 291, "stoch_polici": 291, "cudnn": 291, "opportun": 291, "coupl": [291, 295, 297], "uniniti": 291, "again": [291, 294, 296, 297, 300], "redund": 291, "strongli": 291, "million": 291, "sake": [291, 296, 297], "20_000": [291, 295], "longest": 291, "npai": 291, "recurrent_st": 291, "action_spread": 291, "1000000": 291, "20it": 291, "0011": [291, 295], "0008": [291, 295], "150": [291, 295], "0007": [291, 295], "94it": [291, 295], "0006": [291, 295], "161": [291, 295, 298], "2068": [291, 298], "dqn_with_rnn": [291, 298], "tutorials_python": 292, "tutorials_jupyt": 292, "distinct": 293, "humanoid": [293, 300], "env1_obs_kei": 293, "observation_stand": 293, "env2_obs_kei": 293, "observation_walk": 293, "tdreset1": 293, "tdreset2": 293, "tdreset": 293, "policy_common": 293, "policy_stand": 293, "policy_walk": 293, "But": 293, "exclusive_field": [293, 299], "stack_dim": [293, 299], "env1_mak": 293, "env2_mak": 293, "_single_task": 293, "td_rollout": 293, "121": [293, 295, 298, 300], "multi_task": [293, 298], "matteo": 294, "bettini": 294, "marl": 294, "maddpg": 294, "navig": 294, "lidar": 294, "sensor": 294, "collis": 294, "tie": 294, "mappo": 294, "ippo": 294, "phase": [294, 297], "mathbf": 294, "pi": [294, 295], "_t": [294, 295], "fed": [294, 297], "approxim": [294, 300], "decentralis": 294, "literatur": 294, "overcom": 294, "stationari": 294, "concurr": 294, "analys": 294, "gui": 294, "visualis": 294, "rewardsum": 294, "multiagentmlp": 294, "divic": 294, "vmas_devic": 294, "6_000": 294, "team": [294, 299], "n_iter": 294, "minibatch_s": 294, "generalis": 294, "furthermor": 294, "simd": 294, "parallelis": 294, "warp": 294, "todai": 294, "circl": 294, "surround": 294, "dot": [294, 295], "collid": 294, "drag": 294, "elast": 294, "acceler": 294, "penalis": 294, "num_vmas_env": 294, "scenario_nam": 294, "four": [294, 295], "environmnet": 294, "final_rew": 294, "agent_collis": 294, "full_action_spec": 294, "full_reward_spec": 294, "full_done_spec": 294, "enviorn": 294, "stress": 294, "paramount": 294, "episode_reward": 294, "n_rollout_step": 294, "evolut": 294, "yourself": 294, "utilis": 294, "n_actions_per_ag": 294, "n_obs_per_ag": 294, "share_parameters_polici": 294, "policy_net": 294, "denot": 294, "unbatched_action_spec": 294, "carefulli": [294, 300], "grant": 294, "converg": 294, "cooper": 294, "share_parameters_crit": 294, "critic_net": 294, "fantast": 294, "minibatch": 294, "desc": 294, "episode_reward_mean": 294, "episode_reward_mean_list": 294, "critic_param": 294, "target_critic_param": 294, "refresh": 294, "3390621244907379": 294, "1457589715719223": 294, "0210180282592773": 294, "5489939451217651": 294, "7553492784500122": 294, "2441396713256836": 294, "5985326766967773": 294, "5103886127471924": 294, "7321016788482666": 294, "9089064598083496": 294, "xvfb": 294, "pyvirtualdisplai": 294, "1400": [294, 295], "900": 294, "pil": 294, "rendering_callback": 294, "fromarrai": 294, "rgb_arrai": [294, 295], "gif": 294, "save_al": 294, "append_imag": 294, "profici": 294, "master": 294, "378": [294, 295, 298], "multiagent_ppo": [294, 298], "freeli": 295, "sep": 295, "touch": 295, "undertaken": 295, "broader": 295, "challeng": [295, 296], "wider": 295, "algebra": 295, "acquaint": 295, "avenu": 295, "_apply_to_composit": 295, "default_x": 295, "default_i": 295, "torqu": 295, "upward": 295, "angular": 295, "sin": 295, "rad": 295, "sec": 295, "gravit": 295, "angl": 295, "deleg": 295, "new_th": 295, "new_thdot": 295, "thdot": 295, "g_forc": 295, "max_torqu": 295, "angle_norm": 295, "max_spe": 295, "zeros_lik": 295, "albeit": 295, "is_empti": 295, "gen_param": 295, "high_th": 295, "high_thdot": 295, "low_th": 295, "low_thdot": 295, "rng": 295, "lazili": 295, "trivial": 295, "neither": 295, "shortcut": [295, 300], "irrelev": 295, "_make_spec": 295, "td_param": 295, "commong": 295, "pseudo": 295, "render_mod": 295, "render_fp": 295, "random_": 295, "_make_step": 295, "staticmethod": 295, "complic": [295, 297, 300], "showcas": 295, "skeleton": 295, "_apply_transform": [295, 300], "_inv_apply_transform": [295, 300], "subset": [295, 296], "unitari": 295, "sine": 295, "cosin": 295, "sintransform": 295, "costransform": 295, "t_sin": 295, "t_co": 295, "cat_transform": 295, "mdp": 295, "convin": 295, "simple_rollout": 295, "_data": 295, "unexplor": 295, "assumpt": [295, 297], "recreat": 295, "init_td": 295, "traj_return": 295, "last_reward": 295, "is_ipython": 295, "inlin": 295, "get_backend": 295, "ion": 295, "gcf": 295, "clear_output": 295, "625": 295, "0488": 295, "0748": 295, "519": 295, "0499": 295, "4472": 295, "073": 295, "0685": 295, "0408": 295, "552": 295, "5154": 295, "9086": 295, "527": 295, "9385": 295, "155": [295, 297], "2568": 295, "4981": 295, "223": 295, "8929": 295, "4491": 295, "581": 295, "3233": 295, "0664": 295, "596": 295, "1021": 295, "5263": 295, "9579": 295, "5807": 295, "8075": 295, "212": 295, "2009": 295, "5525": 295, "914": 295, "2894": 295, "0115": 295, "0977": 295, "1845": 295, "1830": 295, "4858": 295, "233": 295, "2863": 295, "0297": 295, "464": 295, "4617": 295, "5997": 295, "904": 295, "1647": 295, "0777": 295, "901": 295, "4709": 295, "6813": 295, "8317": 295, "3221": 295, "5554": 295, "276": 295, "3353": 295, "701": 295, "8570": 295, "6656": 295, "463": 295, "7779": 295, "6911": 295, "875": 295, "0796": 295, "7082": 295, "308": 295, "0421": 295, "1496": 295, "5037": 295, "1755": 295, "5029": 295, "9454": 295, "665": [295, 298, 300], "9330": 295, "2118": 295, "444": 295, "0995": 295, "6294": 295, "3146": 295, "2909": 295, "461": 295, "9720": 295, "1298": 295, "9923": 295, "0345": 295, "3438": 295, "3688": 295, "424": 295, "6953": 295, "5233": 295, "411": 295, "8011": 295, "5329": 295, "2677": 295, "6969": 295, "7010": 295, "376": 295, "9352": 295, "7707": 295, "6178": 295, "5646": 295, "348": 295, "7304": 295, "9407": 295, "942": 295, "3882": 295, "7604": 295, "3507": 295, "8928": 295, "258": 295, "6978": 295, "4641": 295, "549": 295, "6047": 295, "5005": 295, "4136": 295, "2993": 295, "3222": 295, "4046": 295, "7314": 295, "275": 295, "6331": 295, "9318": 295, "961": 295, "8331": 295, "1604": 295, "4099": 295, "4761": 295, "125": [295, 297], "4262": 295, "6363": 295, "382": 295, "3593": 295, "7377": 295, "2847": 295, "3443": 295, "867": 295, "3592": 295, "4760": 295, "441": 295, "9950": 295, "8021": 295, "3528": 295, "1214": 295, "708": 295, "4023": 295, "3583": 295, "041": 295, "3801": 295, "0310": 295, "120": 295, "4244": 295, "2039": 295, "4850": 295, "8748": 295, "706": 295, "4897": 295, "9210": 295, "8964": 295, "0832": 295, "3934": 295, "456": 295, "8971": 295, "2933": 295, "3377": 295, "6996": 295, "2274": 295, "8916": 295, "098": 295, "2660": 295, "9110": 295, "4503": 295, "6956": 295, "9172": 295, "4026": 295, "946": 295, "9229": 295, "5205": 295, "8872": 295, "6637": 295, "019": 295, "9281": 295, "2082": 295, "724": 295, "8561": 295, "6574": 295, "4138": 295, "5230": 295, "385": 295, "4065": 295, "5642": 295, "921": 295, "9786": 295, "4129": 295, "5831": 295, "266": 295, "7723": 295, "4152": 295, "0898": 295, "389": 295, "5155": 295, "5376": 295, "5616": 295, "4094": 295, "283": 295, "5333": 295, "4803": 295, "895": 295, "6566": 295, "2588": 295, "662": 295, "4732": 295, "7503": 295, "068": 295, "0714": 295, "3370": 295, "059": 295, "8612": 295, "1915": 295, "3855": 295, "0349": 295, "9644": 295, "4538": 295, "445": 295, "0392": 295, "4080": 295, "1648": 295, "9599": 295, "143": 295, "4284": 295, "5946": 295, "2590": 295, "9181": 295, "4621": 295, "9075": 295, "674": 295, "1772": 295, "9444": 295, "351": 295, "9391": 295, "5595": 295, "8673": 295, "6240": 295, "5919": 295, "0018": 295, "1071": 295, "9127": 295, "251": 295, "9799": 295, "3131": 295, "9612": 295, "9705": 295, "8741": 295, "2230": 295, "0972": 295, "0337": 295, "0350": 295, "0654": 295, "2441": 295, "4596": 295, "362": 295, "103": 295, "4362": 295, "171": 295, "104": [295, 297], "4041": 295, "6907": 295, "105": 295, "4664": 295, "2760": 295, "0299": 295, "9712": 295, "349": 295, "107": 295, "3332": 295, "4479": 295, "772": 295, "108": 295, "4357": 295, "9591": 295, "543": 295, "109": 295, "6216": 295, "1353": 295, "692": 295, "110": 295, "6261": 295, "7086": 295, "496": 295, "7758": 295, "9818": 295, "112": 295, "7772": 295, "5055": 295, "113": [295, 297], "5840": 295, "3180": 295, "2083": 295, "115": [295, 298, 300], "58it": 295, "5275": 295, "6873": 295, "116": 295, "4107": 295, "1624": 295, "117": 295, "6372": 295, "2571": 295, "118": 295, "4039": 295, "4428": 295, "119": 295, "4728": 295, "5628": 295, "6767": 295, "2466": 295, "522": 295, "5873": 295, "5072": 295, "122": [295, 300], "6548": 295, "3766": 295, "123": 295, "5134": 295, "1955": 295, "124": [295, 297], "2481": 295, "0591": 295, "4500": 295, "3368": 295, "126": [295, 297], "9708": 295, "7059": 295, "127": [295, 297], "3031": 295, "2534": 295, "843": 295, "3327": 295, "6193": 295, "129": 295, "4831": 295, "1172": 295, "2593": 295, "4219": 295, "962": 295, "131": 295, "8380": 295, "899": 295, "132": 295, "2721": 295, "9048": 295, "166": 295, "133": [295, 297], "2419": 295, "5248": 295, "134": 295, "2139": 295, "4278": 295, "135": 295, "0690": 295, "5140": 295, "136": 295, "1140": 295, "7402": 295, "137": 295, "5356": 295, "1636": 295, "138": [295, 297], "0671": 295, "8798": 295, "139": 295, "8918": 295, "3298": 295, "307": 295, "140": 295, "1779": 295, "141": 295, "1771": 295, "3624": 295, "936": 295, "142": 295, "1683": 295, "4810": 295, "9373": 295, "4435": 295, "144": 295, "4396": 295, "8092": 295, "145": 295, "2572": 295, "146": 295, "4212": 295, "0260": 295, "147": 295, "0939": 295, "6478": 295, "605": 295, "148": 295, "6606": 295, "7289": 295, "149": [295, 297], "9300": 295, "7193": 295, "563": 295, "1166": 295, "8514": 295, "151": 295, "9108": 295, "0672": 295, "292": 295, "152": 295, "8591": 295, "3768": 295, "153": 295, "9976": 295, "154": 295, "0576": 295, "0067": 295, "935": 295, "4199": 295, "1722": 295, "156": 295, "8310": 295, "3466": 295, "157": 295, "8631": 295, "2492": 295, "158": [295, 297], "8763": 295, "1277": 295, "159": 295, "5562": 295, "7446": 295, "1082": 295, "9830": 295, "97it": 295, "0946": 295, "5229": 295, "162": 295, "4574": 295, "6900": 295, "163": [295, 296], "2229": 295, "0318": 295, "482": 295, "164": 295, "0543": 295, "0817": 295, "761": 295, "165": 295, "2809": 295, "5118": 295, "366": 295, "1142": 295, "5635": 295, "167": 295, "1949": 295, "2327": 295, "982": 295, "168": 295, "0967": 295, "0387": 295, "457": 295, "169": 295, "0782": 295, "2150": 295, "170": 295, "5222": 295, "3725": 295, "9288": 295, "9837": 295, "172": 295, "1416": 295, "1099": 295, "173": 295, "8620": 295, "8475": 295, "174": 295, "1807": 295, "175": 295, "1148": 295, "0645": 295, "176": 295, "2751": 295, "8313": 295, "177": [295, 297], "9286": 295, "9770": 295, "178": 295, "5735": 295, "2837": 295, "179": 295, "2926": 295, "9489": 295, "180": 295, "1507": 295, "181": 295, "8724": 295, "3567": 295, "182": 295, "3574": 295, "6140": 295, "183": 295, "7895": 295, "2518": 295, "184": 295, "6146": 295, "185": 295, "8776": 295, "7358": 295, "186": 295, "3722": 295, "8428": 295, "187": 295, "7955": 295, "188": 295, "0092": 295, "7106": 295, "829": 295, "2264": 295, "6919": 295, "190": 295, "1438": 295, "1362": 295, "191": 295, "0618": 295, "8217": 295, "9420": 295, "6765": 295, "193": 295, "7745": 295, "0709": 295, "194": 295, "9478": 295, "6867": 295, "195": 295, "6507": 295, "6225": 295, "196": 295, "2244": 295, "2195": 295, "197": 295, "5385": 295, "9263": 295, "198": 295, "1878": 295, "2374": 295, "199": 295, "8054": 295, "3504": 295, "557": 295, "0766": 295, "6825": 295, "201": 295, "2011": 295, "8393": 295, "202": 295, "0803": 295, "7815": 295, "203": 295, "8363": 295, "2460": 295, "204": 295, "8643": 295, "2191": 295, "593": 295, "205": 295, "0773": 295, "1343": 295, "206": 295, "8657": 295, "207": 295, "9304": 295, "7584": 295, "208": 295, "8752": 295, "2307": 295, "209": 295, "5250": 295, "4869": 295, "210": [295, 300], "7837": 295, "5762": 295, "211": 295, "6661": 295, "8600": 295, "2502": 295, "1752": 295, "213": 295, "3075": 295, "8871": 295, "214": 295, "9406": 295, "8090": 295, "215": 295, "6291": 295, "8923": 295, "876": 295, "216": 295, "9504": 295, "21e": 295, "217": 295, "7431": 295, "7880": 295, "218": 295, "4463": 295, "5432": 295, "219": 295, "3793": 295, "3313": 295, "220": 295, "8843": 295, "0369": 295, "065": 295, "221": 295, "4828": 295, "8391": 295, "222": 295, "6265": 295, "2913": 295, "947": 295, "5541": 295, "1252": 295, "7342": 295, "2396": 295, "225": 295, "5936": 295, "1924": 295, "226": 295, "9975": 295, "2045": 295, "227": 295, "8367": 295, "9540": 295, "228": 295, "7259": 295, "6743": 295, "4827": 295, "7528": 295, "230": 295, "7361": 295, "8756": 295, "231": 295, "7646": 295, "1116": 295, "232": 295, "5426": 295, "8385": 295, "5662": 295, "8585": 295, "234": 295, "8234": 295, "7930": 295, "235": 295, "2648": 295, "9309": 295, "236": 295, "6817": 295, "237": 295, "0943": 295, "1533": 295, "238": 295, "3045": 295, "0483": 295, "239": 295, "240": [295, 299, 300], "6415": 295, "0201": 295, "241": 295, "4437": 295, "4365": 295, "242": 295, "0358": 295, "4943": 295, "243": 295, "1272": 295, "5003": 295, "1180": 295, "2637": 295, "245": 295, "7197": 295, "0873": 295, "246": 295, "2917": 295, "247": 295, "0160": 295, "0738": 295, "248": 295, "3689": 295, "0120": 295, "249": 295, "5570": 295, "0475": 295, "250": 295, "4423": 295, "2220": 295, "6803": 295, "252": 295, "1465": 295, "7214": 295, "253": 295, "8801": 295, "7034": 295, "254": 295, "9136": 295, "4076": 295, "7589": 295, "5013": 295, "8150": 295, "2241": [295, 298], "257": 295, "0753": 295, "8081": 295, "1951": 295, "8314": 295, "259": 295, "0038": 295, "260": 295, "0889": 295, "4616": 295, "261": 295, "0655": 295, "262": 295, "8333": 295, "9476": 295, "263": 295, "7554": 295, "3798": 295, "264": 295, "3717": 295, "3947": 295, "529": 295, "265": 295, "3060": 295, "6495": 295, "7467": 295, "8889": 295, "267": 295, "8457": 295, "591": 295, "7137": 295, "0536": 295, "771": 295, "269": 295, "1651": 295, "388": 295, "270": 295, "8246": 295, "5709": 295, "281": 295, "271": 295, "7502": 295, "0521": 295, "032": 295, "272": 295, "5475": 295, "7253": 295, "273": 295, "2856": 295, "7130": 295, "274": 295, "2778": 295, "4122": 295, "8368": 295, "1841": 295, "74it": 295, "9622": 295, "1603": 295, "003e": 295, "277": 295, "0247": 295, "346": 295, "278": 295, "2238": 295, "6418": 295, "279": 295, "0626": 295, "2538": 295, "280": 295, "0149": 295, "7380": 295, "2167": 295, "8911": 295, "282": 295, "8725": 295, "1983": 295, "8142": 295, "3709": 295, "284": 295, "4989": 295, "6464": 295, "6210": 295, "286": 295, "9726": 295, "0820": 295, "287": 295, "6975": 295, "9091": 295, "4926": 295, "4791": 295, "289": 295, "0905": 295, "3500": 295, "290": 295, "2287": 295, "291": 295, "9918": 295, "5543": 295, "9245": 295, "6444": 295, "631": 295, "293": 295, "0448": 295, "4769": 295, "8566": 295, "7208": 295, "295": 295, "0966": 295, "296": 295, "5303": 295, "1537": 295, "023": 295, "297": 295, "2682": 295, "564": 295, "298": 295, "4318": 295, "5063": 295, "299": 295, "7475": 295, "4190": 295, "8186": 295, "5077": 295, "301": 295, "1883": 295, "5291": 295, "472": 295, "302": 295, "1256": 295, "3998": 295, "303": 295, "3622": 295, "0930": 295, "304": 295, "9500": 295, "0075": 295, "5664": 295, "305": 295, "5697": 295, "3024": 295, "306": 295, "3117": 295, "0052": 295, "006": 295, "0981": 295, "9312": 295, "3873": 295, "309": 295, "0411": 295, "2650": 295, "310": 295, "1656": 295, "0228": 295, "004": 295, "311": 295, "1196": 295, "2478": 295, "312": 295, "7353": 295, "0812": 295, "313": 295, "3022": 295, "758": 295, "314": 295, "1406": 295, "4626": 295, "315": 295, "2156": 295, "851": 295, "316": 295, "1953": 295, "3774": 295, "317": 295, "6385": 295, "9917": 295, "318": 295, "2764": 295, "905": 295, "319": 295, "6391": 295, "9317": 295, "9748": 295, "2679": 295, "321": 295, "8495": 295, "5125": 295, "322": 295, "8177": 295, "6602": 295, "323": 295, "0704": 295, "5776": 295, "324": 295, "9833": [295, 299], "1339": 295, "402": 295, "325": 295, "1238": 295, "326": 295, "9299": 295, "0227": 295, "327": 295, "7727": 295, "1607": 295, "336": 295, "328": 295, "3958": 295, "3223": 295, "763": 295, "329": 295, "4742": 295, "1797": 295, "330": 295, "0144": 295, "0085": 295, "791": 295, "331": 295, "8284": 295, "0428": 295, "332": 295, "0098": 295, "7365": 295, "12it": 295, "4566": 295, "0781": 295, "086": 295, "334": 295, "3355": 295, "0230": 295, "335": 295, "0423": 295, "076": 295, "3711": 295, "1335": 295, "6855": 295, "337": 295, "0304": 295, "0023": 295, "8459": 295, "338": 295, "9998": 295, "4399": 295, "339": 295, "86it": 295, "2303": 295, "1346": 295, "340": 295, "2915": 295, "7116": 295, "341": 295, "5560": 295, "0487": 295, "342": 295, "5119": 295, "061": 295, "343": 295, "3305": 295, "3705": 295, "957": 295, "344": 295, "6068": 295, "345": 295, "5731": 295, "3897": 295, "0376": 295, "347": 295, "0434": 295, "012": 295, "1300": 295, "1215": 295, "0968": 295, "0885": 295, "350": 295, "1348": 295, "0073": 295, "5052": 295, "4184": 295, "2817": 295, "8887": 295, "353": 295, "4779": 295, "1009": 295, "354": 295, "0604": 295, "599": 295, "4486": 295, "1176": 295, "656": 295, "356": 295, "2436": 295, "0668": 295, "8849": 295, "0012": 295, "358": 295, "7511": 295, "8804": 295, "8870": 295, "6728": 295, "8841": 295, "5508": 295, "361": 295, "5242": 295, "0268": 295, "0013": 295, "6185": 295, "1378": 295, "0204": 295, "0355": 295, "685": 295, "4884": 295, "0231": 295, "0770": 295, "0014": 295, "6793": 295, "367": 295, "9834": 295, "863": 295, "6709": 295, "462": 295, "369": 295, "5199": 295, "9790": 295, "9401": 295, "7802": 295, "371": 295, "6723": 295, "2678": 295, "6201": 295, "373": 295, "2184": 295, "7385": 295, "374": 295, "6344": 295, "617": 295, "375": 295, "9945": 295, "0772": 295, "567": 295, "7576": 295, "0398": 295, "377": 295, "3396": 295, "0022": 295, "094": 295, "3073": 295, "4018": 295, "379": 295, "1869": 295, "380": 295, "0481": 295, "1117": 295, "381": 295, "6823": 295, "981": 295, "8305": 295, "0210": 295, "4908": 295, "0272": 295, "538": 295, "3267": 295, "0111": 295, "7965": 295, "1796": 295, "0039": 295, "5396": 295, "386": 295, "3757": 295, "0490": 295, "387": 295, "1394": 295, "4187": 295, "2986": 295, "7954": 295, "1274": 295, "0063": 295, "813": 295, "390": 295, "8706": 295, "0114": 295, "391": 295, "6922": 295, "0004": 295, "2423": 295, "392": 295, "9115": 295, "2602": 295, "393": 295, "2449": 295, "0783": 295, "394": 295, "0631": 295, "0057": 295, "7444": 295, "395": 295, "3339": 295, "0167": 295, "396": 295, "4806": 295, "397": 295, "4171": 295, "067": 295, "398": 295, "2618": 295, "5809": 295, "399": 295, "0054": 295, "3364": 295, "8733": 295, "0184": 295, "401": 295, "9137": 295, "0113": 295, "025": 295, "0386": 295, "0625": 295, "1332": 295, "0582": 295, "7816": 295, "404": 295, "8341": 295, "0941": 295, "854": 295, "405": 295, "8615": 295, "588": 295, "406": 295, "3849": 295, "008": 295, "407": 295, "9395": 295, "0765": 295, "055": 295, "408": 295, "2685": 295, "2235": 295, "688": 295, "409": 295, "3052": 295, "4249": 295, "410": 295, "6806": 295, "6383": 295, "3721": 295, "9981": 295, "412": 295, "1862": 295, "822": 295, "413": 295, "9811": 295, "0171": 295, "013": 295, "414": 295, "0252": 295, "0049": 295, "6205": 295, "415": 295, "1108": 295, "4921": 295, "9142": 295, "8130": 295, "417": 295, "1725": 295, "0036": 295, "3196": 295, "418": 295, "7795": 295, "0242": 295, "799": 295, "419": 295, "7737": 295, "0138": 295, "1462": 295, "0053": 295, "421": 295, "9226": 295, "6139": 295, "422": 295, "9889": 295, "0403": 295, "423": 295, "6194": 295, "0032": 295, "3989": 295, "0104": 295, "425": 295, "9960": 295, "0009": 295, "6009": 295, "426": 295, "2697": 295, "0914": 295, "427": 295, "1114": 295, "428": 295, "9862": 295, "1932": 295, "429": 295, "0637": 295, "0623": 295, "082": 295, "430": 295, "9906": 295, "2031": 295, "431": 295, "9948": 295, "0895": 295, "432": 295, "1970": 295, "0256": 295, "433": 295, "4231": 295, "0449": 295, "644": 295, "434": 295, "1039": 295, "1973": 295, "435": 295, "4561": 295, "1225": 295, "436": 295, "0211": 295, "2125": 295, "437": 295, "3866": 295, "0050": 295, "7202": 295, "438": 295, "6388": 295, "0072": 295, "439": 295, "1187": 295, "0015": 295, "5116": 295, "440": 295, "0432": 295, "0025": 295, "7809": 295, "1925": 295, "0103": 295, "442": 295, "9570": 295, "443": 295, "0871": 295, "5601": 295, "0165": 295, "0047": 295, "6061": 295, "2746": 295, "0027": 295, "7887": 295, "446": 295, "1835": 295, "0035": 295, "855": 295, "447": 295, "8420": 295, "548": 295, "2653": 295, "0126": 295, "9736": 295, "449": 295, "0594": 295, "0119": 295, "6196": 295, "450": 295, "4509": 295, "0373": 295, "451": 295, "0620": 295, "452": 295, "6898": 295, "3235": 295, "687": 295, "453": 295, "5879": 295, "454": 295, "8406": 295, "0694": 295, "8259": 295, "0235": 295, "8500": 295, "0024": 295, "4054": 295, "458": 295, "2027": 295, "0894": 295, "459": 295, "5966": 295, "460": 295, "6942": 295, "0016": 295, "4254": 295, "6703": 295, "0145": 295, "8124": 295, "0218": 295, "9196": 295, "0188": 295, "8986": 295, "0884": 295, "0084": 295, "5624": 295, "465": 295, "8862": 295, "5384": 295, "466": 295, "5837": 295, "467": 295, "8954": 295, "0101": 295, "6751": 295, "468": 295, "8063": 295, "0122": 295, "9635": 295, "469": 295, "0692": 295, "4216": 295, "470": 295, "1227": 295, "0586": 295, "162e": 295, "471": 295, "9690": 295, "0074": 295, "4166": 295, "6324": 295, "473": 295, "0778": 295, "474": 295, "8548": 295, "0017": 295, "4408": 295, "8125": 295, "1515": 295, "476": [295, 298, 299], "2733": 295, "0044": 295, "2836": 295, "477": 295, "7497": 295, "7681": 295, "478": 295, "8547": 295, "0105": 295, "7212": 295, "479": 295, "9848": 295, "0019": 295, "6498": 295, "1987": 295, "5473": 295, "481": 295, "8991": 295, "0033": 295, "6091": 295, "9189": 295, "5771": 295, "483": 295, "6781": 295, "7542": 295, "484": 295, "5959": 295, "0064": 295, "4295": 295, "485": 295, "2547": 295, "486": 295, "0636": 295, "547": 295, "487": 295, "0065": 295, "488": 295, "1694": 295, "0083": 295, "5759": 295, "489": 295, "0493": 295, "0021": 295, "7805": 295, "490": 295, "0950": 295, "497": 295, "491": 295, "9717": 295, "3672": 295, "492": 295, "0207": 295, "493": 295, "8266": 295, "0069": 295, "5365": 295, "494": 295, "2623": 295, "5078": 295, "495": 295, "4545": 295, "09636": 295, "8754": 295, "0010": 295, "498": 295, "0031": 295, "8269": 295, "499": 295, "4082": 295, "6642": 295, "2284": 295, "501": 295, "9130": 295, "502": 295, "503": 295, "7624": 295, "0056": 295, "3858": 295, "504": 295, "0890": 295, "0042": 295, "505": 295, "7505": 295, "2157": 295, "506": 295, "8394": 295, "3413": 295, "507": 295, "9609": 295, "0041": 295, "6905": 295, "508": 295, "8467": 295, "4409": 295, "509": 295, "510": 295, "8128": 295, "3559": 295, "511": 295, "1479": 295, "0264": 295, "1589": 295, "566": 295, "513": 295, "2756": 295, "0046": 295, "5266": 295, "514": 295, "9873": 295, "0112": 295, "9314": 295, "515": 295, "3791": 295, "0721": 295, "516": 295, "4580": 295, "0758": 295, "6114": 295, "517": 295, "2431": 295, "518": 295, "1958": 295, "5553": 295, "8924": 295, "0097": 295, "520": 295, "3737": 295, "0234": 295, "521": 295, "9125": 295, "4623": 295, "3230": 295, "0589": 295, "3784": 295, "523": 295, "9482": 295, "0051": 295, "524": 295, "1979": 295, "0045": 295, "6401": 295, "525": 295, "1588": 295, "0048": 295, "6255": 295, "526": 295, "6084": 295, "3477": 295, "1475": 295, "0209": 295, "528": 295, "7611": 295, "1040": 295, "0099": 295, "0173": 295, "643": 295, "530": 295, "8189": 295, "4358": 295, "531": 295, "9897": 295, "532": 295, "1548": 295, "9751": 295, "533": 295, "6362": 295, "7495": 295, "534": 295, "1749": 295, "9513": 295, "535": 295, "7708": 295, "0371": 295, "536": 295, "2649": 295, "0437": 295, "537": 295, "5491": 295, "0276": 295, "6426": 295, "7294": 295, "078e": 295, "539": 295, "9928": 295, "540": 295, "7937": 295, "0124": 295, "9664": 295, "541": 295, "3342": 295, "542": 295, "2046": 295, "5496": 295, "0956": 295, "0059": 295, "545": 295, "9028": 295, "5843": 295, "546": 295, "0674": 295, "0178": 295, "797": 295, "2815": 295, "0599": 295, "1587": 295, "9276": 295, "8228": 295, "6164": 295, "551": 295, "6850": 295, "9167": 295, "3092": 295, "0670": 295, "9177": 295, "553": 295, "1599": 295, "0043": 295, "554": 295, "6367": 295, "555": 295, "3657": 295, "556": 295, "6694": 295, "2622": 295, "0372": 295, "4841": 295, "558": 295, "2707": 295, "0058": 295, "757": 295, "559": 295, "2267": 295, "5415": 295, "560": 295, "4556": 295, "0163": 295, "561": 295, "1839": 295, "0809": 295, "6262": 295, "562": 295, "0278": 295, "1112": 295, "6155": 295, "565": 295, "1427": 295, "3582": 295, "624": 295, "7870": 295, "9490": 295, "0439": 295, "8796": 295, "568": 295, "8026": 295, "612": 295, "569": 295, "3147": 295, "8486": 295, "570": 295, "7917": 295, "0129": 295, "571": 295, "9553": 295, "0020": 295, "6871": 295, "572": 295, "3132": 295, "0159": 295, "8646": 295, "573": 295, "5320": 295, "0269": 295, "574": 295, "2955": 295, "0245": 295, "575": 295, "3347": 295, "0179": 295, "9718": 295, "1629": 295, "804": 295, "577": 295, "0070": 295, "4335": 295, "578": 295, "579": 295, "3049": 295, "9063": 295, "580": 295, "8785": 295, "3295": 295, "5184": 295, "0546": 295, "582": 295, "4589": 295, "583": 295, "4697": 295, "2476": 295, "584": 295, "2397": 295, "585": 295, "4953": 295, "1775": 295, "586": 295, "2258": 295, "0110": 295, "7671": 295, "587": 295, "3981": 295, "8590": 295, "589": 295, "9820": 295, "4221": 295, "590": 295, "1293": 295, "0116": 295, "868": 295, "1675": 295, "5931": 295, "592": 295, "2910": 295, "5219": 295, "2124": 295, "1730": 295, "737": 295, "594": 295, "2914": 295, "0206": 295, "595": 295, "0172": 295, "3982": 295, "0945": 295, "0121": 295, "4789": 295, "597": 295, "3805": 295, "598": 295, "3310": 295, "5065": 295, "6028": 295, "6316": 295, "6724": 295, "6523": 295, "601": 295, "0136": 295, "4298": 295, "602": 295, "3524": 295, "2629": 295, "603": 295, "2635": 295, "7839": 295, "604": 295, "6041": 295, "8027": 295, "4170": 295, "4675": 295, "606": 295, "3153": 295, "9316": 295, "607": 295, "0649": 295, "9722": 295, "7989": 295, "0329": 295, "609": 295, "1976": 295, "6852": 295, "610": 295, "4793": 295, "1255": 295, "611": 295, "4581": 295, "0394": 295, "2047": 295, "0326": 295, "613": 295, "8967": 295, "8619": 295, "614": 295, "5906": 295, "6491": 295, "615": 295, "6634": 295, "4394": 295, "616": 295, "0624": 295, "0061": 295, "5676": 295, "3259": 295, "0131": 295, "7733": 295, "618": 295, "7515": 295, "0189": 295, "5575": 295, "619": 295, "9313": 295, "6286": 295, "620": 295, "4325": 295, "7832": 295, "621": 295, "1134": 295, "622": 295, "4572": 295, "0500": 295, "5838": 295, "623": 295, "3818": 295, "8623": 295, "1253": 295, "6622": 295, "subject": 295, "saw": [295, 297], "070": [295, 298], "explain": 296, "semat": 296, "r3mtransform": 296, "embodi": 296, "ai": 296, "env_transform": [296, 300], "s3": 296, "amazonaw": 296, "r3m_50": 296, "374m": 296, "4m": 296, "1mb": 296, "8m": 296, "101mb": 296, "0m": 296, "5mb": 296, "5m": 296, "4mb": 296, "2mb": 296, "6m": 296, "7mb": 296, "105m": 296, "115m": 296, "131m": 296, "138m": 296, "0mb": 296, "147m": 296, "162m": 296, "9mb": 296, "171m": 296, "3mb": 296, "180m": 296, "197m": 296, "212m": 296, "220m": 296, "229m": 296, "6mb": 296, "241m": 296, "249m": 296, "261m": 296, "270m": 296, "277m": 296, "284m": 296, "295m": 296, "311m": 296, "328m": 296, "342m": 296, "350m": 296, "360m": 296, "wiser": 296, "conclud": 296, "_storag": [296, 297], "062": [296, 298], "2242": 296, "pretrained_model": [296, 298], "supervis": [297, 300], "pull": 297, "temporarili": 297, "drastic": 297, "ram": [297, 300], "batteri": 297, "dataliststorag": 297, "datalazytensorstorag": 297, "tensordidct": 297, "basi": 297, "datalazymemmapstorag": 297, "buffer_list": 297, "lowest": 297, "medium": 297, "buffer_lazytensor": 297, "buffer_lazymemmap": 297, "fullest": 297, "organ": 297, "convini": 297, "mydata": 297, "background": 297, "question": [297, 299], "_i": 297, "artifici": 297, "0892946e": 297, "she": 297, "augment": 297, "pars": 297, "proport": 297, "hist": 297, "barcontain": 297, "artist": 297, "revert": 297, "expens": 297, "reappear": 297, "unfold": 297, "problemat": 297, "window": 297, "4th": 297, "671": [297, 298], "rb_tutori": [297, 298], "826": 298, "torchrl_demo": [298, 299], "torchrl_env": [298, 300], "demo": 299, "icml": 299, "vmoen": 299, "fb": 299, "invest": 299, "platform": 299, "media": 299, "truli": 299, "predominantli": 299, "tensordict1": 299, "tensordict2": 299, "tensordict_sampl": 299, "_sampler": 299, "_sum_tre": 299, "modulenotfounderror": 299, "28791671991348267": 299, "gym_env": 299, "noopresetenv": [299, 300], "lazyconv2d": 299, "backbone_modul": 299, "actor_modul": 299, "params_expand": 299, "tensordict_exp": 299, "base_modul": 299, "0137": 299, "1524": 299, "0641": 299, "copybackward": 299, "8728": 299, "1334": 299, "3494": 299, "6887": 299, "6402": 299, "_safetanhbackward": 299, "1132": 299, "1762": 299, "3430": 299, "2668": 299, "2918": 299, "6239": 299, "roughli": 299, "tensordicts_prealloc": 299, "tensordicts_stack": 299, "tensordict_rollout": [299, 300], "disclaim": 299, "concatmodul": 299, "loss_td": 299, "year": 299, "roadmap": 299, "compris": 299, "contributor": 299, "curiou": 299, "nascent": 299, "unsupervis": 300, "rom": 300, "licens": 300, "pygam": 300, "unifi": 300, "insid": 300, "_build_env": 300, "sphinx_gallery_start_ignor": 300, "filterwarn": 300, "sphinx_gallery_end_ignor": 300, "adventur": 300, "v5": 300, "airraid": 300, "alien": 300, "amidar": 300, "assault": 300, "7961": 300, "void": 300, "reproduct": 300, "tensordict_tprim": 300, "imshow": 300, "axesimag": 300, "0x7fb23aeea9d0": 300, "inconsist": 300, "pong": 300, "swingup": 300, "swingup_spars": 300, "ball_in_cup": 300, "catch": 300, "balance_spars": 300, "three_pol": 300, "two_pol": 300, "finger": 300, "turn_easi": 300, "turn_hard": 300, "fish": 300, "swim": 300, "hopper": 300, "hop": 300, "run_pure_st": 300, "bring_bal": 300, "bring_peg": 300, "insert_bal": 300, "insert_peg": 300, "point_mass": 300, "reacher": 300, "swimmer": 300, "swimmer6": 300, "swimmer15": 300, "walker": 300, "dog": 300, "trot": 300, "humanoid_cmu": 300, "lqr": 300, "lqr_2_1": 300, "lqr_6_2": 300, "quadrup": 300, "escap": 300, "stacker": 300, "stack_2": 300, "stack_4": 300, "wrapper1": 300, "wrapper2": 300, "obviou": 300, "truth": 300, "env0": 300, "env_transformed_bi": 300, "stanc": 300, "transformeddistribut": 300, "base_dist": 300, "concat": 300, "mofidi": 300, "transformedenviron": 300, "moderet": 300, "computation": 300, "legitim": 300, "incom": 300, "amongst": 300, "wor": 300, "convention": 300, "scope": 300, "markovian": 300, "3288080526": 300, "constain": 300, "bar_": 300, "get_someth": 300, "bar_6c48dc76": 300, "383e": 300, "aargh": 300, "foo_list": 300, "vec_env": 300, "_dispatch_caller_parallel": 300, "0x7fb1603dfc40": 300, "bar_7399429a": 300, "8518": 300, "bar_73a01dd6": 300, "aff3": 300, "9ea4": 300, "parallen": 300, "particularili": 300, "evolv": 300, "steadi": 300, "approx": 300, "4673": 300, "3116": 300, "1014": 300, "8530": 300, "9910": 300, "9753": 300, "_extra_st": 300, "observation_ssq": 300, "observation_sum": 300, "1414": 300, "1766": 300, "0841": 300, "1928": 300, "3048": 300, "dispach": 300, "absor": 300}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "create_infinite_iterator"], [53, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[51, 0, 1, "", "D4RLExperienceReplay"], [52, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[54, 0, 1, "", "LazyMemmapStorage"], [55, 0, 1, "", "LazyTensorStorage"], [56, 0, 1, "", "ListStorage"], [57, 0, 1, "", "PrioritizedSampler"], [58, 0, 1, "", "RandomSampler"], [59, 0, 1, "", "RoundRobinWriter"], [60, 0, 1, "", "Sampler"], [61, 0, 1, "", "SamplerWithoutReplacement"], [62, 0, 1, "", "Storage"], [63, 0, 1, "", "TensorDictRoundRobinWriter"], [64, 0, 1, "", "TensorStorage"], [65, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[54, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[57, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[59, 1, 1, "", "add"], [59, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[63, 1, 1, "", "add"], [63, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[65, 1, 1, "", "add"], [65, 1, 1, "", "extend"]], "torchrl.envs": [[66, 0, 1, "", "EnvBase"], [67, 0, 1, "", "EnvCreator"], [68, 0, 1, "", "EnvMetaData"], [69, 0, 1, "", "GymLikeEnv"], [70, 2, 1, "", "ModelBasedEnvBase"], [71, 0, 1, "", "MultiThreadedEnv"], [72, 0, 1, "", "ParallelEnv"], [73, 0, 1, "", "SerialEnv"], [70, 1, 1, "", "rand_step"], [70, 1, 1, "", "reset"], [70, 1, 1, "", "rollout"], [70, 1, 1, "", "set_seed"], [70, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[66, 3, 1, "", "action_key"], [66, 3, 1, "", "action_spec"], [66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 3, 1, "", "batch_locked"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 3, 1, "", "done_key"], [66, 3, 1, "", "done_spec"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "fake_tensordict"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "rand_action"], [66, 1, 1, "id0", "rand_step"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "id1", "reset"], [66, 3, 1, "", "reward_key"], [66, 3, 1, "", "reward_spec"], [66, 1, 1, "id2", "rollout"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "id3", "set_seed"], [66, 1, 1, "", "share_memory"], [66, 3, 1, "", "specs"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "id4", "step"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[69, 3, 1, "", "action_key"], [69, 3, 1, "", "action_spec"], [69, 1, 1, "", "add_module"], [69, 1, 1, "", "apply"], [69, 3, 1, "", "batch_locked"], [69, 1, 1, "", "bfloat16"], [69, 1, 1, "", "buffers"], [69, 1, 1, "", "children"], [69, 1, 1, "", "close"], [69, 1, 1, "", "compile"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 3, 1, "", "done_key"], [69, 3, 1, "", "done_spec"], [69, 1, 1, "", "double"], [69, 1, 1, "", "eval"], [69, 1, 1, "", "extra_repr"], [69, 1, 1, "", "fake_tensordict"], [69, 1, 1, "", "float"], [69, 1, 1, "", "forward"], [69, 1, 1, "", "get_buffer"], [69, 1, 1, "", "get_extra_state"], [69, 1, 1, "", "get_parameter"], [69, 1, 1, "", "get_submodule"], [69, 1, 1, "", "half"], [69, 1, 1, "", "ipu"], [69, 1, 1, "", "load_state_dict"], [69, 1, 1, "", "modules"], [69, 1, 1, "", "named_buffers"], [69, 1, 1, "", "named_children"], [69, 1, 1, "", "named_modules"], [69, 1, 1, "", "named_parameters"], [69, 1, 1, "", "parameters"], [69, 1, 1, "", "rand_action"], [69, 1, 1, "", "rand_step"], [69, 1, 1, "", "read_action"], [69, 1, 1, "", "read_done"], [69, 1, 1, "", "read_obs"], [69, 1, 1, "", "read_reward"], [69, 1, 1, "", "register_backward_hook"], [69, 1, 1, "", "register_buffer"], [69, 1, 1, "", "register_forward_hook"], [69, 1, 1, "", "register_forward_pre_hook"], [69, 1, 1, "", "register_full_backward_hook"], [69, 1, 1, "", "register_full_backward_pre_hook"], [69, 1, 1, "", "register_load_state_dict_post_hook"], [69, 1, 1, "", "register_module"], [69, 1, 1, "", "register_parameter"], [69, 1, 1, "", "register_state_dict_pre_hook"], [69, 1, 1, "", "requires_grad_"], [69, 1, 1, "", "reset"], [69, 3, 1, "", "reward_key"], [69, 3, 1, "", "reward_spec"], [69, 1, 1, "", "rollout"], [69, 1, 1, "", "set_extra_state"], [69, 1, 1, "", "set_info_dict_reader"], [69, 1, 1, "", "set_seed"], [69, 1, 1, "", "share_memory"], [69, 3, 1, "", "specs"], [69, 1, 1, "", "state_dict"], [69, 1, 1, "", "step"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_empty"], [69, 1, 1, "", "train"], [69, 1, 1, "", "type"], [69, 1, 1, "", "xpu"], [69, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[71, 3, 1, "", "action_key"], [71, 3, 1, "", "action_spec"], [71, 1, 1, "", "add_module"], [71, 1, 1, "", "apply"], [71, 3, 1, "", "batch_locked"], [71, 1, 1, "", "bfloat16"], [71, 1, 1, "", "buffers"], [71, 1, 1, "", "children"], [71, 1, 1, "", "close"], [71, 1, 1, "", "compile"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 3, 1, "", "done_key"], [71, 3, 1, "", "done_spec"], [71, 1, 1, "", "double"], [71, 1, 1, "", "eval"], [71, 1, 1, "", "extra_repr"], [71, 1, 1, "", "fake_tensordict"], [71, 1, 1, "", "float"], [71, 1, 1, "", "forward"], [71, 1, 1, "", "get_buffer"], [71, 1, 1, "", "get_extra_state"], [71, 1, 1, "", "get_parameter"], [71, 1, 1, "", "get_submodule"], [71, 1, 1, "", "half"], [71, 1, 1, "", "ipu"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "modules"], [71, 1, 1, "", "named_buffers"], [71, 1, 1, "", "named_children"], [71, 1, 1, "", "named_modules"], [71, 1, 1, "", "named_parameters"], [71, 1, 1, "", "parameters"], [71, 1, 1, "", "rand_action"], [71, 1, 1, "", "rand_step"], [71, 1, 1, "", "register_backward_hook"], [71, 1, 1, "", "register_buffer"], [71, 1, 1, "", "register_forward_hook"], [71, 1, 1, "", "register_forward_pre_hook"], [71, 1, 1, "", "register_full_backward_hook"], [71, 1, 1, "", "register_full_backward_pre_hook"], [71, 1, 1, "", "register_load_state_dict_post_hook"], [71, 1, 1, "", "register_module"], [71, 1, 1, "", "register_parameter"], [71, 1, 1, "", "register_state_dict_pre_hook"], [71, 1, 1, "", "requires_grad_"], [71, 1, 1, "", "reset"], [71, 3, 1, "", "reward_key"], [71, 3, 1, "", "reward_spec"], [71, 1, 1, "", "rollout"], [71, 1, 1, "", "set_extra_state"], [71, 1, 1, "", "set_seed"], [71, 1, 1, "", "share_memory"], [71, 3, 1, "", "specs"], [71, 1, 1, "", "state_dict"], [71, 1, 1, "", "step"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_empty"], [71, 1, 1, "", "train"], [71, 1, 1, "", "type"], [71, 1, 1, "", "xpu"], [71, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[72, 3, 1, "", "action_key"], [72, 3, 1, "", "action_spec"], [72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 3, 1, "", "done_key"], [72, 3, 1, "", "done_spec"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "fake_tensordict"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "rand_action"], [72, 1, 1, "", "rand_step"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset"], [72, 3, 1, "", "reward_key"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "", "rollout"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "share_memory"], [72, 3, 1, "", "specs"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "step"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "update_kwargs"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "reset"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "step"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "update_kwargs"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[74, 2, 1, "", "BraxEnv"], [75, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[76, 2, 1, "", "DMControlEnv"], [77, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[78, 2, 1, "", "GymEnv"], [79, 2, 1, "", "GymWrapper"], [80, 2, 1, "", "MOGymEnv"], [81, 2, 1, "", "MOGymWrapper"], [82, 2, 1, "", "gym_backend"], [83, 2, 1, "", "set_gym_backend"]], "torchrl.envs.libs.habitat": [[84, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[85, 2, 1, "", "JumanjiEnv"], [86, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[87, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[88, 2, 1, "", "VmasEnv"], [89, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[90, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[91, 0, 1, "", "BinarizeReward"], [92, 0, 1, "", "CatFrames"], [93, 0, 1, "", "CatTensors"], [94, 0, 1, "", "CenterCrop"], [95, 0, 1, "", "Compose"], [96, 0, 1, "", "DTypeCastTransform"], [97, 0, 1, "", "DiscreteActionProjection"], [98, 0, 1, "", "DoubleToFloat"], [99, 0, 1, "", "ExcludeTransform"], [100, 0, 1, "", "FiniteTensorDictCheck"], [101, 0, 1, "", "FlattenObservation"], [102, 0, 1, "", "FrameSkipTransform"], [103, 0, 1, "", "GrayScale"], [104, 0, 1, "", "InitTracker"], [105, 0, 1, "", "KLRewardTransform"], [106, 0, 1, "", "NoopResetEnv"], [107, 0, 1, "", "ObservationNorm"], [108, 0, 1, "", "ObservationTransform"], [109, 0, 1, "", "PinMemoryTransform"], [110, 0, 1, "", "R3MTransform"], [111, 0, 1, "", "RandomCropTensorDict"], [112, 0, 1, "", "RenameTransform"], [113, 0, 1, "", "Resize"], [114, 0, 1, "", "Reward2GoTransform"], [115, 0, 1, "", "RewardClipping"], [116, 0, 1, "", "RewardScaling"], [117, 0, 1, "", "RewardSum"], [118, 0, 1, "", "SelectTransform"], [119, 0, 1, "", "SqueezeTransform"], [120, 0, 1, "", "StepCounter"], [121, 0, 1, "", "TargetReturn"], [122, 0, 1, "", "TensorDictPrimer"], [123, 0, 1, "", "TimeMaxPool"], [124, 0, 1, "", "ToTensorImage"], [125, 0, 1, "", "Transform"], [126, 0, 1, "", "TransformedEnv"], [127, 0, 1, "", "UnsqueezeTransform"], [128, 0, 1, "", "VC1Transform"], [129, 0, 1, "", "VIPRewardTransform"], [130, 0, 1, "", "VIPTransform"], [131, 0, 1, "", "VecNorm"], [132, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[91, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"], [92, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[94, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[95, 1, 1, "", "forward"], [95, 1, 1, "", "reset"], [95, 1, 1, "", "to"], [95, 1, 1, "", "transform_input_spec"], [95, 1, 1, "", "transform_observation_spec"], [95, 1, 1, "", "transform_output_spec"], [95, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "transform_input_spec"], [96, 1, 1, "", "transform_observation_spec"], [96, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[97, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "reset"], [99, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[100, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[101, 1, 1, "", "forward"], [101, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[102, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[103, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "reset"], [104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[105, 1, 1, "", "forward"], [105, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[106, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[107, 1, 1, "", "init_stats"], [107, 1, 1, "", "transform_input_spec"], [107, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[109, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[110, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[111, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[112, 1, 1, "", "forward"], [112, 1, 1, "", "transform_input_spec"], [112, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[113, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[114, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[115, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[116, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "reset"], [117, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "reset"], [118, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "reset"], [120, 1, 1, "", "transform_input_spec"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "reset"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "reset"], [122, 1, 1, "", "to"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "reset"], [123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "reset"], [125, 1, 1, "", "to"], [125, 1, 1, "", "transform_done_spec"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_observation_spec"], [125, 1, 1, "", "transform_output_spec"], [125, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[126, 3, 1, "", "action_spec"], [126, 3, 1, "", "batch_locked"], [126, 3, 1, "", "done_spec"], [126, 1, 1, "", "eval"], [126, 3, 1, "", "input_spec"], [126, 1, 1, "", "load_state_dict"], [126, 3, 1, "", "observation_spec"], [126, 3, 1, "", "output_spec"], [126, 3, 1, "", "reward_spec"], [126, 1, 1, "", "set_missing_tolerance"], [126, 1, 1, "", "set_seed"], [126, 1, 1, "", "state_dict"], [126, 3, 1, "", "state_spec"], [126, 1, 1, "", "to"], [126, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[127, 1, 1, "", "transform_input_spec"], [127, 1, 1, "", "transform_observation_spec"], [127, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "make_noload_model"], [128, 1, 1, "", "to"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[130, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[131, 1, 1, "", "build_td_for_shared_vecnorm"], [131, 1, 1, "", "forward"], [131, 1, 1, "", "get_extra_state"], [131, 1, 1, "", "set_extra_state"], [131, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[133, 2, 1, "", "check_env_specs"], [134, 2, 1, "", "exploration_mode"], [135, 2, 1, "", "exploration_type"], [136, 2, 1, "", "get_available_libraries"], [137, 2, 1, "", "make_composite_from_td"], [138, 2, 1, "", "set_exploration_mode"], [139, 2, 1, "", "set_exploration_type"], [140, 2, 1, "", "step_mdp"]], "torchrl.modules": [[141, 0, 1, "", "CEMPlanner"], [142, 0, 1, "", "ConvNet"], [143, 0, 1, "", "DdpgCnnActor"], [144, 0, 1, "", "DdpgCnnQNet"], [145, 0, 1, "", "DdpgMlpActor"], [146, 0, 1, "", "DdpgMlpQNet"], [147, 0, 1, "", "Delta"], [148, 0, 1, "", "DistributionalDQNnet"], [149, 0, 1, "", "DistributionalQValueHook"], [150, 0, 1, "", "DreamerActor"], [151, 0, 1, "", "DuelingCnnDQNet"], [152, 0, 1, "", "IndependentNormal"], [153, 0, 1, "", "LSTMModule"], [154, 0, 1, "", "LSTMNet"], [155, 0, 1, "", "MLP"], [156, 0, 1, "", "MPCPlannerBase"], [157, 0, 1, "", "MPPIPlanner"], [158, 0, 1, "", "MaskedCategorical"], [159, 0, 1, "", "MultiAgentMLP"], [160, 0, 1, "", "NoisyLazyLinear"], [161, 0, 1, "", "NoisyLinear"], [162, 0, 1, "", "NormalParamWrapper"], [163, 0, 1, "", "ObsDecoder"], [164, 0, 1, "", "ObsEncoder"], [165, 0, 1, "", "OneHotCategorical"], [166, 0, 1, "", "QMixer"], [167, 0, 1, "", "QValueHook"], [168, 0, 1, "", "RSSMPosterior"], [169, 0, 1, "", "RSSMPrior"], [170, 0, 1, "", "Squeeze2dLayer"], [171, 0, 1, "", "SqueezeLayer"], [172, 0, 1, "", "TanhDelta"], [173, 0, 1, "", "TanhNormal"], [174, 0, 1, "", "TruncatedNormal"], [175, 0, 1, "", "VDNMixer"], [176, 0, 1, "", "VmapModule"], [177, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[141, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[142, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[143, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[144, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[145, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[146, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[147, 1, 1, "", "log_prob"], [147, 3, 1, "", "mean"], [147, 3, 1, "", "mode"], [147, 1, 1, "", "rsample"], [147, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[148, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[150, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[151, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[152, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "set_recurrent_mode"], [153, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[154, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[155, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[157, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[158, 1, 1, "", "log_prob"], [158, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[159, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[160, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[162, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[163, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[164, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[165, 1, 1, "", "log_prob"], [165, 3, 1, "", "mode"], [165, 1, 1, "", "rsample"], [165, 1, 1, "", "sample"]], "torchrl.modules.QMixer": [[166, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[168, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[169, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[171, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[172, 3, 1, "", "mean"], [172, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[173, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[174, 1, 1, "", "log_prob"], [174, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[175, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[176, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[178, 0, 1, "", "Actor"], [179, 0, 1, "", "ActorCriticOperator"], [180, 0, 1, "", "ActorCriticWrapper"], [181, 0, 1, "", "ActorValueOperator"], [182, 0, 1, "", "AdditiveGaussianWrapper"], [183, 0, 1, "", "DistributionalQValueActor"], [184, 0, 1, "", "DistributionalQValueModule"], [185, 0, 1, "", "EGreedyWrapper"], [186, 0, 1, "", "LMHeadActorValueOperator"], [187, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [188, 0, 1, "", "ProbabilisticActor"], [189, 0, 1, "", "QValueActor"], [190, 0, 1, "", "QValueModule"], [191, 0, 1, "", "SafeModule"], [192, 0, 1, "", "SafeProbabilisticModule"], [193, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [194, 0, 1, "", "SafeSequential"], [195, 0, 1, "", "TanhModule"], [196, 0, 1, "", "ValueOperator"], [197, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[179, 1, 1, "", "get_critic_operator"], [179, 1, 1, "", "get_policy_head"], [179, 1, 1, "", "get_value_head"], [179, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[180, 1, 1, "", "get_policy_head"], [180, 1, 1, "", "get_policy_operator"], [180, 1, 1, "", "get_value_head"], [180, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[181, 1, 1, "", "get_policy_head"], [181, 1, 1, "", "get_policy_operator"], [181, 1, 1, "", "get_value_head"], [181, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[184, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[190, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[191, 1, 1, "", "random"], [191, 1, 1, "", "random_sample"], [191, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[192, 1, 1, "", "random"], [192, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[195, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[197, 1, 1, "", "get_reward_operator"], [197, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[198, 0, 1, "", "biased_softplus"], [199, 0, 1, "", "inv_softplus"], [200, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[198, 1, 1, "", "forward"]], "torchrl.objectives": [[201, 0, 1, "", "A2CLoss"], [202, 0, 1, "", "CQLLoss"], [203, 0, 1, "", "ClipPPOLoss"], [204, 0, 1, "", "DDPGLoss"], [205, 0, 1, "", "DQNLoss"], [206, 0, 1, "", "DiscreteSACLoss"], [207, 0, 1, "", "DistributionalDQNLoss"], [208, 0, 1, "", "DreamerActorLoss"], [209, 0, 1, "", "DreamerModelLoss"], [210, 0, 1, "", "DreamerValueLoss"], [211, 0, 1, "", "HardUpdate"], [212, 0, 1, "", "IQLLoss"], [213, 0, 1, "", "KLPENPPOLoss"], [214, 0, 1, "", "LossModule"], [215, 0, 1, "", "PPOLoss"], [216, 0, 1, "", "REDQLoss"], [217, 0, 1, "", "ReinforceLoss"], [218, 0, 1, "", "SACLoss"], [219, 0, 1, "", "SoftUpdate"], [220, 0, 1, "", "TD3Loss"], [221, 0, 1, "", "ValueEstimators"], [222, 0, 1, "", "default_value_kwargs"], [223, 0, 1, "", "distance_loss"], [224, 0, 1, "", "hold_out_net"], [225, 0, 1, "", "hold_out_params"], [227, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[203, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[209, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[210, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "loss_value_diff"], [212, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[213, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[214, 1, 1, "", "convert_to_functional"], [214, 1, 1, "", "cpu"], [214, 1, 1, "", "cuda"], [214, 1, 1, "", "double"], [214, 1, 1, "", "float"], [214, 1, 1, "", "forward"], [214, 1, 1, "", "half"], [214, 1, 1, "", "make_value_estimator"], [214, 1, 1, "", "named_parameters"], [214, 1, 1, "", "parameters"], [214, 1, 1, "", "register_buffer"], [214, 1, 1, "", "set_keys"], [214, 1, 1, "", "to"], [214, 3, 1, "", "value_estimator"]], "torchrl.objectives.PPOLoss": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[226, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[228, 0, 1, "", "GAE"], [229, 0, 1, "", "TD0Estimator"], [230, 0, 1, "", "TD1Estimator"], [231, 0, 1, "", "TDLambdaEstimator"], [232, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "set_keys"], [232, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[233, 0, 1, "", "generalized_advantage_estimate"], [234, 0, 1, "", "reward2go"], [235, 0, 1, "", "td0_advantage_estimate"], [236, 0, 1, "", "td0_return_estimate"], [237, 0, 1, "", "td1_advantage_estimate"], [238, 0, 1, "", "td1_return_estimate"], [239, 0, 1, "", "td_lambda_advantage_estimate"], [240, 0, 1, "", "td_lambda_return_estimate"], [241, 0, 1, "", "vec_generalized_advantage_estimate"], [242, 0, 1, "", "vec_td1_advantage_estimate"], [243, 0, 1, "", "vec_td1_return_estimate"], [244, 0, 1, "", "vec_td_lambda_advantage_estimate"], [245, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[246, 2, 1, "", "TensorDictRecorder"], [247, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[248, 2, 1, "", "Logger"], [250, 2, 1, "", "generate_exp_name"], [251, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[249, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[252, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[253, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[254, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[255, 0, 1, "", "BatchSubSampler"], [256, 0, 1, "", "ClearCudaCache"], [257, 0, 1, "", "CountFramesLog"], [258, 0, 1, "", "LogReward"], [259, 0, 1, "", "OptimizerHook"], [260, 0, 1, "", "Recorder"], [261, 0, 1, "", "ReplayBufferTrainer"], [262, 0, 1, "", "RewardNormalizer"], [263, 0, 1, "", "SelectKeys"], [264, 0, 1, "", "Trainer"], [265, 0, 1, "", "TrainerHookBase"], [266, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[255, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[256, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[257, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[258, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[259, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[260, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[261, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[262, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[263, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[265, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[266, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[267, 2, 1, "", "correct_for_frame_skip"], [268, 2, 1, "", "get_stats_random_rollout"], [269, 2, 1, "", "make_collector_offpolicy"], [270, 2, 1, "", "make_collector_onpolicy"], [271, 2, 1, "", "make_dqn_loss"], [272, 2, 1, "", "make_redq_loss"], [273, 2, 1, "", "make_redq_model"], [274, 2, 1, "", "make_replay_buffer"], [275, 2, 1, "", "make_target_updater"], [276, 2, 1, "", "make_trainer"], [277, 2, 1, "", "parallel_env_constructor"], [278, 2, 1, "", "sync_async_collector"], [279, 2, 1, "", "sync_sync_collector"], [280, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 284, 285, 286, 287, 288, 289, 290, 294, 295, 299, 300], "tutori": [0, 290, 294], "basic": [0, 297], "intermedi": [0, 8], "advanc": 0, "refer": [0, 282], "knowledg": [0, 283], "base": [0, 7, 283], "indic": 0, "tabl": 0, "collector": [1, 288, 289, 290, 291, 294, 299], "packag": [1, 2, 3, 284, 285, 286, 287], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 288, 289, 290, 294, 299], "distribut": [1, 284], "helper": [1, 3], "function": [1, 4, 285, 289, 290, 294, 299], "replai": [2, 288, 289, 290, 291, 294, 297, 299], "buffer": [2, 288, 289, 290, 291, 294, 297, 299], "compos": [2, 95], "store": [2, 289], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 285, 290, 294], "learn": [2, 4, 290, 294], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 284, 285, 286], "env": [3, 295, 299, 300], "vector": [3, 299], "multi": [3, 284, 285, 293, 294], "agent": [3, 4, 284, 285, 294], "environ": [3, 4, 6, 7, 288, 289, 290, 291, 293, 294, 295, 299, 300], "transform": [3, 125, 288, 290, 294, 295, 297, 299, 300], "clone": [3, 7], "record": [3, 260, 286, 288], "domain": [3, 284], "specif": [3, 284, 293], "librari": [3, 299], "thing": [4, 288, 295], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 299], "gener": [4, 284], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 288, 295], "algorithm": [4, 284], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 288, 289], "return": [4, 285], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 288, 290, 291, 293, 294, 295], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 299], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "action": [4, 291, 295], "magnitud": 4, "task": [4, 293], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 288, 289, 290], "standard": 4, "explor": [4, 284, 288, 289], "valu": [4, 284, 285, 288, 290, 291], "loss": [4, 288, 289, 290, 291, 294], "earli": 4, "train": [4, 8, 285, 288, 290, 291, 294, 295], "roughli": 4, "uniformli": 4, "random": [4, 294], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 289], "increas": 4, "an": [4, 290, 291, 295], "dynam": [4, 297], "can": 4, "low": 4, "forward": [4, 288], "model": [4, 284, 288, 289, 291, 296, 299], "also": 4, "us": [4, 6, 9, 291, 296, 297, 299], "offlin": 4, "observ": [4, 288], "space": 4, "effect": [4, 295], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 300], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 299], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 294, 300], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 288], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 295], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "create_infinite_iter": 50, "d4rlexperiencereplai": 51, "openmlexperiencereplai": 52, "get_dataload": 53, "lazymemmapstorag": 54, "lazytensorstorag": 55, "liststorag": 56, "prioritizedsampl": 57, "randomsampl": 58, "roundrobinwrit": 59, "sampler": 60, "samplerwithoutreplac": 61, "storag": [62, 288, 297], "tensordictroundrobinwrit": 63, "tensorstorag": 64, "writer": 65, "envbas": [66, 295], "envcreat": 67, "envmetadata": 68, "gymlikeenv": 69, "modelbasedenvbas": 70, "multithreadedenv": 71, "parallelenv": 72, "serialenv": 73, "braxenv": 74, "braxwrapp": 75, "dmcontrolenv": 76, "dmcontrolwrapp": 77, "gymenv": 78, "gymwrapp": 79, "mogymenv": 80, "mogymwrapp": 81, "gym_backend": 82, "set_gym_backend": 83, "habitatenv": 84, "jumanjienv": 85, "jumanjiwrapp": 86, "openmlenv": 87, "vmasenv": 88, "vmaswrapp": 89, "dreamerenv": 90, "binarizereward": 91, "catfram": [92, 297], "cattensor": 93, "centercrop": 94, "dtypecasttransform": 96, "discreteactionproject": 97, "doubletofloat": 98, "excludetransform": 99, "finitetensordictcheck": 100, "flattenobserv": 101, "frameskiptransform": 102, "grayscal": 103, "inittrack": 104, "klrewardtransform": 105, "noopresetenv": 106, "observationnorm": 107, "observationtransform": 108, "pinmemorytransform": 109, "r3mtransform": 110, "randomcroptensordict": 111, "renametransform": 112, "resiz": 113, "reward2gotransform": 114, "rewardclip": 115, "rewardsc": 116, "rewardsum": 117, "selecttransform": 118, "squeezetransform": 119, "stepcount": 120, "targetreturn": 121, "tensordictprim": 122, "timemaxpool": 123, "totensorimag": 124, "transformedenv": 126, "unsqueezetransform": 127, "vc1transform": 128, "viprewardtransform": 129, "viptransform": 130, "vecnorm": [131, 300], "gsdenois": 132, "check_env_spec": 133, "exploration_mod": 134, "exploration_typ": 135, "get_available_librari": 136, "make_composite_from_td": 137, "set_exploration_mod": 138, "set_exploration_typ": 139, "step_mdp": 140, "cemplann": 141, "convnet": 142, "ddpgcnnactor": 143, "ddpgcnnqnet": 144, "ddpgmlpactor": 145, "ddpgmlpqnet": 146, "delta": 147, "distributionaldqnnet": 148, "distributionalqvaluehook": 149, "dreameractor": 150, "duelingcnndqnet": 151, "independentnorm": 152, "lstmmodul": 153, "lstmnet": 154, "mlp": [155, 291], "mpcplannerbas": 156, "mppiplann": 157, "maskedcategor": 158, "multiagentmlp": 159, "noisylazylinear": 160, "noisylinear": 161, "normalparamwrapp": 162, "obsdecod": 163, "obsencod": 164, "onehotcategor": 165, "qmixer": [166, 285], "qvaluehook": 167, "rssmposterior": 168, "rssmprior": 169, "squeeze2dlay": 170, "squeezelay": 171, "tanhdelta": 172, "tanhnorm": 173, "truncatednorm": 174, "vdnmixer": 175, "vmapmodul": 176, "reset_nois": 177, "actor": [178, 284, 288], "actorcriticoper": 179, "actorcriticwrapp": 180, "actorvalueoper": 181, "additivegaussianwrapp": 182, "distributionalqvalueactor": 183, "distributionalqvaluemodul": 184, "egreedywrapp": 185, "lmheadactorvalueoper": 186, "ornsteinuhlenbeckprocesswrapp": 187, "probabilisticactor": 188, "qvalueactor": 189, "qvaluemodul": 190, "safemodul": [191, 284], "safeprobabilisticmodul": 192, "safeprobabilistictensordictsequenti": 193, "safesequenti": 194, "tanhmodul": 195, "valueoper": 196, "worldmodelwrapp": 197, "biased_softplu": 198, "inv_softplu": 199, "map": 200, "a2closs": 201, "cqlloss": 202, "clipppoloss": 203, "ddpgloss": 204, "dqnloss": 205, "discretesacloss": 206, "distributionaldqnloss": 207, "dreameractorloss": 208, "dreamermodelloss": 209, "dreamervalueloss": 210, "hardupd": 211, "iqlloss": 212, "klpenppoloss": 213, "lossmodul": [214, 288], "ppoloss": 215, "redqloss": 216, "reinforceloss": 217, "sacloss": 218, "softupd": 219, "td3loss": 220, "valueestim": 221, "default_value_kwarg": 222, "distance_loss": 223, "hold_out_net": 224, "hold_out_param": 225, "qmixerloss": 226, "next_state_valu": 227, "gae": 228, "td0estim": 229, "td1estim": 230, "tdlambdaestim": 231, "valueestimatorbas": 232, "generalized_advantage_estim": 233, "reward2go": 234, "td0_advantage_estim": 235, "td0_return_estim": 236, "td1_advantage_estim": 237, "td1_return_estim": 238, "td_lambda_advantage_estim": 239, "td_lambda_return_estim": 240, "vec_generalized_advantage_estim": 241, "vec_td1_advantage_estim": 242, "vec_td1_return_estim": 243, "vec_td_lambda_advantage_estim": 244, "vec_td_lambda_return_estim": 245, "tensordictrecord": 246, "videorecord": 247, "logger": [248, 286], "csvlogger": 249, "generate_exp_nam": 250, "get_logg": 251, "mlflowlogg": 252, "tensorboardlogg": 253, "wandblogg": 254, "batchsubsampl": 255, "clearcudacach": 256, "countframeslog": 257, "logreward": 258, "optimizerhook": 259, "replaybuffertrain": 261, "rewardnorm": 262, "selectkei": 263, "trainer": [264, 286, 289], "trainerhookbas": 265, "updateweight": 266, "correct_for_frame_skip": 267, "get_stats_random_rollout": 268, "make_collector_offpolici": 269, "make_collector_onpolici": 270, "make_dqn_loss": 271, "make_redq_loss": 272, "make_redq_model": 273, "make_replay_buff": 274, "make_target_updat": 275, "make_train": 276, "parallel_env_constructor": 277, "sync_async_collector": 278, "sync_sync_collector": 279, "transformed_env_constructor": 280, "readm": [281, 292], "tuto": [281, 292], "api": 282, "contribut": [283, 299], "content": 283, "modul": [284, 288, 291, 299], "tensordict": [284, 297, 299], "wrapper": 284, "probabilist": 284, "q": [284, 289, 291], "oper": 284, "join": 284, "hook": [284, 286, 289], "regular": 284, "planner": 284, "object": [285, 288, 299], "dqn": [285, 289, 291], "ddpg": [285, 288], "sac": 285, "redq": 285, "iql": 285, "cql": 285, "td3": 285, "ppo": [285, 290, 294], "a2c": 285, "dreamer": 285, "checkpoint": 286, "builder": 286, "_util": 287, "code": [288, 295], "setup": [288, 291], "The": 288, "__init__": 288, "method": 288, "estim": 288, "put": 288, "togeth": [288, 295], "call": 288, "parallel": [288, 293, 300], "execut": [288, 293, 295], "stat": 288, "build": [288, 289, 297], "evalu": 288, "batch": [288, 295, 297], "size": [288, 297], "construct": 288, "target": [288, 289], "network": [288, 289, 290, 291, 294], "updat": 288, "time": [288, 298], "experi": [288, 295], "result": [288, 290, 294], "conclus": [288, 289, 290, 291, 294, 295, 297], "A": [289, 297], "exampl": [289, 297], "comput": [289, 295, 298], "deep": 289, "collect": [289, 290], "paramet": [289, 290], "hyperparamet": [289, 290, 294], "regist": 289, "possibl": 289, "improv": 289, "defin": [290, 294], "loop": [290, 291, 294, 295], "next": [290, 294], "step": [290, 294, 300], "recurr": 291, "convolut": 291, "lstm": 291, "select": 291, "divers": 293, "rollout": [293, 294, 295, 300], "critic": 294, "pendulum": 295, "write": 295, "_step": 295, "reset": [295, 300], "simul": 295, "_reset": 295, "metadata": 295, "_spec": 295, "spec": [295, 300], "shape": 295, "seed": [295, 300], "wrap": 295, "class": [295, 299], "test": 295, "our": 295, "custom": [295, 297], "simpl": 295, "pretrain": 296, "vanilla": 297, "integr": 297, "tensorclass": 297, "sampl": 297, "iter": 297, "over": 297, "fix": 297, "priorit": 297, "save": 297, "raw": 297, "imag": 297, "more": 297, "complex": 297, "introduct": 299, "config": 299, "tensordictmodul": 299, "sequenc": 299, "program": 299, "ensembl": 299, "meta": 299, "special": 299, "state": 299, "frame_skip": 300, "deepmind": 300, "control": 300, "devic": 300, "run": 300, "close": 300, "access": 300, "attribut": 300, "kwarg": 300}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})