Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "DreamerEnv", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 69, 71, 72, 75, 83, 84, 86, 87, 88, 89, 93, 96, 98, 100, 102, 105, 107, 108, 110, 116, 117, 120, 121, 122, 124, 132, 134, 135, 136, 138, 141, 143, 152, 154, 155, 156, 157, 165, 166, 167, 168, 172, 173, 177, 184, 185, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 212, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 264, 267, 276, 277, 281, 282, 285, 294, 295, 296, 297, 300, 301, 302, 305, 306, 310, 311, 313, 314, 316, 317], "open": [0, 5, 7, 11, 306, 311, 316], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317], "reinforc": [0, 3, 9, 100, 154, 155, 156, 157, 161, 199, 202, 216, 217, 221, 223, 227, 228, 234, 235, 236, 299, 306, 309, 312, 315, 316], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 100, 154, 155, 156, 157, 161, 169, 174, 199, 202, 216, 217, 221, 223, 227, 228, 233, 234, 235, 236, 299, 301, 302, 305, 306, 308, 309, 310, 312, 314, 315, 316, 317], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 83, 131, 174, 192, 203, 211, 216, 230, 232, 272, 300, 301, 302, 303, 305, 306, 307, 311, 313, 314, 317], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 79, 84, 146, 299, 300, 301, 304, 305, 306, 307, 311, 312, 317], "pytorch": [0, 1, 2, 3, 134, 173, 174, 281, 300, 303, 305, 307, 308, 311, 312, 316, 317], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 71, 75, 77, 83, 84, 87, 88, 89, 93, 115, 117, 121, 131, 136, 143, 154, 156, 162, 172, 180, 182, 183, 189, 190, 199, 200, 202, 205, 207, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 243, 244, 245, 277, 290, 300, 301, 302, 305, 306, 308, 311, 312, 313, 314, 316, 317], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 71, 75, 83, 87, 88, 89, 93, 101, 102, 103, 105, 108, 111, 116, 117, 120, 121, 124, 127, 132, 136, 138, 140, 141, 152, 158, 161, 165, 166, 167, 168, 170, 171, 172, 190, 192, 196, 199, 200, 202, 203, 204, 205, 210, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 264, 268, 272, 278, 285, 290, 293, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "python": [0, 3, 5, 6, 7, 10, 21, 170, 171, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 75, 100, 101, 111, 117, 120, 121, 134, 136, 138, 165, 167, 172, 173, 177, 192, 197, 198, 199, 203, 204, 206, 207, 218, 225, 229, 230, 232, 263, 280, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "low": [0, 25, 71, 75, 87, 93, 103, 107, 147, 199, 203, 210, 305, 306, 307, 311, 312, 316], "high": [0, 9, 25, 41, 71, 75, 87, 93, 103, 107, 116, 147, 199, 203, 210, 245, 250, 258, 305, 306, 307, 311, 312, 314, 316], "level": [0, 3, 4, 22, 26, 28, 100, 229, 305, 306, 316], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 71, 118, 168, 249, 273, 282, 303, 307, 312, 316], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 71, 72, 75, 82, 83, 86, 87, 88, 89, 90, 93, 103, 104, 105, 107, 108, 110, 111, 115, 116, 120, 127, 132, 134, 135, 136, 137, 138, 140, 141, 147, 151, 157, 159, 165, 166, 168, 170, 171, 174, 178, 180, 183, 197, 198, 200, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 247, 248, 249, 278, 293, 297, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 107, 190, 230, 301, 316], "effici": [0, 1, 2, 4, 8, 174, 301, 305, 306, 307, 308, 310, 311, 313, 314, 316], "modular": [0, 209, 314, 316], "document": [0, 5, 7, 18, 19, 21, 32, 71, 75, 87, 93, 136, 306, 316], "properli": [0, 71, 75, 87, 93, 307, 311, 312, 316], "test": [0, 3, 5, 138, 143, 165, 166, 277, 293, 307, 308, 316], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 79, 87, 88, 89, 93, 100, 104, 105, 108, 109, 117, 120, 124, 126, 128, 131, 132, 135, 136, 138, 140, 150, 151, 154, 155, 156, 157, 158, 161, 165, 166, 168, 169, 170, 171, 174, 175, 181, 182, 183, 192, 193, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 251, 266, 269, 270, 271, 272, 276, 293, 295, 296, 301, 302, 303, 306, 307, 308, 311, 312, 313, 314, 316, 317], "code": [0, 3, 5, 7, 8, 120, 138, 165, 209, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317], "aim": [0, 3, 7, 28, 29, 120, 138, 140, 167, 284, 300, 301, 302, 305, 306, 316], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 84, 86, 88, 117, 135, 146, 161, 190, 198, 199, 206, 209, 223, 245, 246, 247, 248, 269, 301, 303, 307, 308, 311, 312, 314, 316], "research": [0, 7, 9, 316], "most": [0, 3, 7, 8, 32, 107, 305, 307, 312, 316, 317], "written": [0, 3, 34, 36, 39, 45, 52, 55, 71, 75, 87, 93, 100, 115, 127, 130, 133, 150, 192, 202, 203, 206, 207, 211, 216, 218, 229, 232, 234, 244, 263, 264, 301, 302, 303, 305, 308, 310, 312, 316], "highli": [0, 2, 316, 317], "wai": [0, 3, 4, 79, 120, 122, 140, 232, 245, 246, 247, 248, 301, 305, 306, 307, 310, 311, 312, 313, 314, 316, 317], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 71, 72, 75, 79, 82, 87, 88, 89, 91, 92, 93, 98, 100, 103, 104, 105, 107, 108, 116, 117, 120, 121, 124, 127, 131, 132, 135, 136, 138, 140, 141, 151, 164, 165, 168, 169, 172, 174, 175, 188, 190, 192, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 277, 290, 295, 296, 297, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "easili": [0, 3, 7, 290, 302, 305, 306, 307, 311, 316, 317], "swap": [0, 3, 307, 313, 316], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 161, 181, 198, 199, 205, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 276, 281, 305, 306, 307, 308, 310, 311, 312, 313, 316], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 71, 72, 75, 87, 88, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 153, 154, 158, 161, 162, 179, 180, 181, 189, 197, 201, 210, 213, 215, 221, 231, 264, 278, 290, 297, 299, 306, 308, 309, 313, 315], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 82, 87, 88, 89, 93, 105, 108, 136, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 189, 190, 196, 197, 199, 200, 202, 205, 210, 213, 229, 264, 305, 306, 308, 310, 311, 312, 313, 314, 316, 317], "write": [0, 3, 8, 23, 32, 37, 45, 75, 103, 119, 192, 206, 207, 209, 211, 217, 219, 220, 222, 228, 233, 235, 237, 244, 249, 264, 301, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 71, 75, 84, 87, 91, 92, 93, 127, 135, 141, 150, 165, 202, 206, 207, 212, 216, 217, 218, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 305, 307, 308, 311, 312, 316, 317], "ones": [0, 15, 26, 32, 35, 41, 42, 71, 75, 87, 93, 101, 104, 105, 106, 108, 117, 120, 124, 131, 132, 135, 136, 138, 140, 170, 171, 190, 206, 216, 217, 219, 228, 232, 233, 235, 237, 251, 305, 307, 311, 312, 314, 316, 317], "littl": [0, 3, 43, 307, 308, 314, 316, 317], "effort": [0, 3, 312, 314, 316], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 71, 75, 77, 82, 83, 87, 88, 89, 93, 98, 100, 101, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 117, 120, 121, 122, 124, 127, 128, 132, 133, 135, 136, 138, 139, 140, 141, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 243, 245, 246, 247, 248, 249, 263, 272, 274, 277, 278, 281, 283, 284, 285, 290, 293, 297, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "repo": [0, 6, 52, 138, 300, 311, 316], "attempt": [0, 196, 202, 220, 228, 243, 316], "align": [0, 316], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 71, 75, 87, 93, 101, 106, 136, 285, 297, 311, 316, 317], "ecosystem": [0, 316], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 71, 72, 75, 79, 87, 93, 100, 132, 136, 165, 196, 199, 202, 207, 229, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 86, 141, 299, 305, 306, 313, 314, 316, 317], "pillar": [0, 316], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 105, 106, 107, 108, 112, 116, 117, 120, 121, 131, 135, 136, 138, 141, 143, 151, 165, 166, 168, 169, 196, 202, 224, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 272, 274, 277, 284, 285, 286, 287, 290, 293, 294, 295, 296, 297, 299, 300, 301, 309, 313, 314, 315], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 71, 75, 83, 87, 93, 105, 120, 132, 138, 140, 142, 152, 153, 158, 165, 167, 168, 169, 172, 179, 180, 189, 193, 194, 195, 201, 206, 212, 216, 217, 218, 220, 221, 224, 225, 226, 228, 229, 230, 232, 233, 235, 243, 281, 286, 287, 288, 289, 290, 299, 300, 303, 307, 309, 311, 312, 314, 315, 317], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 83, 86, 87, 88, 89, 93, 98, 100, 105, 106, 108, 115, 117, 124, 130, 143, 147, 151, 161, 165, 166, 169, 172, 181, 190, 192, 198, 200, 202, 203, 204, 206, 209, 210, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 272, 278, 281, 283, 286, 293, 295, 296, 297, 299, 301, 302, 303, 308, 312, 313, 314, 317], "util": [0, 3, 17, 23, 32, 40, 71, 75, 87, 88, 89, 93, 96, 120, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 158, 213, 214, 215, 230, 293, 299, 304, 305, 307, 311, 312, 316, 317], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 71, 72, 75, 87, 93, 101, 104, 111, 117, 120, 127, 132, 135, 136, 138, 140, 143, 164, 165, 169, 172, 175, 181, 187, 188, 197, 199, 203, 205, 206, 207, 244, 245, 246, 247, 248, 272, 284, 296, 301, 305, 306, 307, 311, 312, 313, 316, 317], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 71, 72, 75, 87, 93, 101, 104, 111, 117, 120, 127, 132, 135, 136, 138, 140, 143, 164, 165, 169, 172, 187, 188, 197, 203, 206, 207, 244, 254, 255, 256, 257, 259, 260, 261, 262, 296, 301, 305, 306, 307, 311, 312, 313, 316, 317], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 100, 124, 130, 202, 278, 281, 283, 286, 287, 293, 295, 296, 299, 303, 314, 317], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 71, 75, 83, 87, 93, 104, 105, 108, 120, 132, 135, 136, 138, 140, 141, 150, 151, 152, 167, 169, 172, 192, 198, 199, 203, 205, 206, 211, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 251, 268, 272, 284, 290, 293, 294, 295, 296, 297, 301, 302, 303, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 71, 75, 87, 93, 115, 136, 167, 172, 305, 306, 307, 314, 316, 317], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 71, 75, 87, 88, 89, 93, 100, 105, 108, 115, 116, 117, 131, 132, 135, 136, 141, 143, 152, 166, 167, 172, 190, 208, 209, 216, 218, 229, 232, 240, 243, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 272, 281, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "few": [0, 2, 8, 272, 307, 308, 311, 314, 316, 317], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 105, 108, 211, 232, 301, 305, 307, 308, 311, 312, 316, 317], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 152, 206, 277, 281, 301, 305, 307, 308, 311, 312, 314, 316, 317], "standard": [0, 3, 117, 126, 141, 151, 162, 169, 173, 174, 196, 197, 237, 245, 246, 247, 248, 305, 306, 311, 314, 316], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 134, 281, 312, 314, 316, 317], "common": [0, 3, 4, 21, 75, 87, 93, 98, 193, 194, 195, 201, 216, 217, 218, 222, 228, 229, 232, 233, 234, 235, 237, 293, 300, 301, 303, 305, 307, 310, 311, 312, 313, 316, 317], "openai": [0, 7, 74, 76, 90, 307, 312, 316, 317], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 79, 87, 90, 93, 100, 103, 114, 115, 117, 122, 124, 132, 135, 141, 165, 290, 293, 300, 305, 306, 307, 308, 312, 313, 314, 316], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 71, 75, 79, 84, 87, 88, 89, 93, 100, 101, 103, 104, 105, 107, 108, 111, 117, 120, 121, 124, 131, 132, 135, 136, 138, 140, 141, 165, 166, 172, 192, 197, 198, 203, 204, 206, 207, 208, 209, 216, 218, 219, 222, 228, 229, 230, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 285, 303, 305, 306, 307, 308, 310, 311, 312, 314, 316, 317], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 93, 98, 99, 100, 101, 102, 103, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 190, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 269, 272, 274, 275, 276, 277, 278, 279, 281, 285, 286, 287, 288, 289, 290, 292, 293, 295, 296, 297, 301, 308, 311, 312, 314, 316], "On": [0, 3, 7, 18, 19, 20, 21, 301, 306, 311], "end": [0, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 131, 136, 152, 168, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "come": [0, 1, 3, 8, 82, 87, 93, 105, 108, 192, 193, 194, 195, 203, 211, 305, 306, 307, 308, 311, 314, 316, 317], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 71, 73, 75, 83, 87, 88, 89, 93, 98, 101, 104, 105, 108, 114, 115, 120, 130, 131, 132, 135, 136, 138, 140, 143, 148, 149, 165, 168, 172, 196, 197, 206, 230, 232, 249, 272, 277, 278, 287, 297, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "re": [0, 3, 8, 32, 62, 71, 75, 87, 93, 165, 170, 171, 203, 207, 303, 305, 307, 308, 310, 312, 316, 317], "usabl": [0, 303, 308, 316], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 71, 72, 75, 87, 93, 105, 108, 136, 141, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 170, 171, 172, 175, 176, 177, 178, 179, 182, 183, 185, 188, 190, 193, 194, 195, 196, 197, 199, 200, 202, 203, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 290, 293, 299, 301, 305, 308, 310, 312, 314, 317], "cost": [0, 2, 27, 305, 306, 311, 312, 314], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 69, 71, 72, 75, 83, 86, 87, 88, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 144, 145, 146, 150, 151, 153, 154, 155, 156, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 178, 179, 180, 182, 183, 186, 187, 188, 189, 192, 193, 194, 195, 197, 203, 205, 206, 207, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 281, 284, 286, 290, 293, 294, 295, 296, 297, 299, 301, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 71, 72, 75, 79, 82, 84, 87, 88, 89, 93, 141, 172, 199, 202, 205, 303, 305, 306, 308, 311, 312, 313, 314, 316, 317], "good": [0, 1, 4, 9, 305, 307, 308, 311, 316, 317], "runtim": [0, 3, 32, 71, 75, 87, 93, 312], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 71, 75, 87, 93, 96, 105, 108, 116, 136, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 168, 169, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 225, 232, 277, 281, 302, 305, 306, 307, 308, 310, 311, 312, 317], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 71, 75, 82, 87, 88, 89, 91, 92, 93, 141, 193, 194, 195, 202, 222, 230, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 301, 302, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 71, 75, 87, 93, 98, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 119, 121, 122, 124, 127, 128, 130, 131, 132, 133, 135, 138, 139, 141, 178, 192, 193, 194, 195, 198, 203, 206, 207, 209, 211, 212, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 264, 277, 281, 290, 301, 305, 306, 307, 308, 310, 311, 312, 313, 317], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 78, 79, 87, 88, 89, 93, 134, 138, 142, 161, 167, 173, 175, 192, 196, 198, 199, 206, 211, 216, 223, 230, 232, 245, 250, 258, 276, 300, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 317], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 302, 305, 306, 307, 311, 312, 316, 317], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 303, 305, 310, 313, 317], "beyond": 0, "api": [0, 3, 5, 88, 89, 90, 120, 140, 302, 303, 311, 312, 316, 317], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 71, 72, 75, 83, 87, 93, 96, 100, 101, 110, 115, 121, 143, 165, 192, 198, 199, 203, 204, 205, 206, 207, 301, 302, 306, 307, 308, 310, 311, 312, 313, 314, 317], "paper": [0, 120, 138, 140, 180, 189, 227, 290, 305, 307, 311], "ppo": [0, 4, 8, 203, 207, 218, 229, 232, 299, 301, 305, 306, 309, 315], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 84, 87, 93, 100, 103, 104, 114, 115, 117, 122, 124, 132, 135, 136, 141, 165, 293, 301, 306, 307, 309, 315, 316, 317], "your": [0, 2, 3, 7, 8, 10, 18, 32, 71, 75, 79, 82, 87, 88, 89, 93, 141, 297, 300, 301, 302, 306, 307, 308, 309, 311, 314, 315, 316], "introduct": [0, 302, 309, 311, 315, 317], "multi": [0, 7, 9, 28, 29, 32, 71, 75, 87, 91, 92, 93, 165, 166, 167, 172, 243, 245, 246, 247, 248, 299, 305, 306, 307, 308, 309, 312, 315, 316], "agent": [0, 9, 28, 29, 82, 88, 89, 91, 92, 96, 131, 170, 171, 172, 174, 180, 189, 243, 299, 309, 312, 315], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 165, 168, 169, 206, 230, 263, 285, 286, 287, 290, 293, 295, 296, 297, 299, 301, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 91, 92, 93, 98, 100, 101, 102, 104, 105, 106, 107, 108, 114, 115, 117, 120, 121, 122, 124, 131, 132, 134, 135, 136, 138, 140, 141, 143, 148, 149, 150, 151, 152, 153, 154, 155, 158, 161, 162, 164, 165, 167, 168, 169, 171, 172, 174, 175, 178, 179, 180, 181, 187, 188, 189, 190, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 267, 268, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 291, 293, 297, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 315, 317], "pretrain": [0, 309, 315], "recurr": [0, 165, 183, 306, 309, 314, 315], "dqn": [0, 161, 198, 199, 216, 217, 219, 220, 222, 223, 224, 227, 228, 230, 232, 233, 234, 235, 236, 237, 243, 288, 299, 301, 309, 315], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 71, 75, 87, 88, 89, 93, 105, 112, 120, 131, 136, 138, 140, 143, 154, 156, 165, 196, 200, 202, 216, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 245, 281, 283, 293, 299, 303, 306, 309, 313, 314, 315, 317], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 71, 75, 83, 87, 93, 107, 115, 131, 148, 149, 161, 165, 172, 174, 181, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 210, 216, 217, 218, 219, 222, 228, 229, 231, 232, 233, 234, 235, 237, 277, 283, 286, 287, 293, 295, 296, 301, 302, 303, 306, 309, 313, 314, 315, 316, 317], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 100, 107, 121, 124, 132, 217, 219, 220, 222, 228, 233, 235, 237, 278, 281, 291, 293, 299, 303, 309, 312, 313, 315], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 71, 75, 83, 87, 93, 100, 104, 107, 120, 121, 124, 132, 135, 136, 138, 140, 206, 209, 217, 219, 220, 222, 228, 233, 235, 237, 278, 281, 291, 293, 299, 303, 309, 312, 313, 315, 317], "task": [0, 3, 9, 28, 29, 40, 45, 69, 78, 87, 88, 89, 90, 93, 120, 138, 140, 228, 305, 306, 307, 308, 309, 311, 312, 315, 316, 317], "specif": [0, 2, 5, 8, 41, 42, 75, 158, 197, 281, 299, 302, 303, 307, 308, 309, 311, 314, 315], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 71, 75, 87, 93, 105, 108, 117, 120, 135, 136, 138, 141, 169, 180, 189, 192, 193, 203, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 285, 286, 287, 292, 293, 297, 299, 301, 303, 306, 307, 308, 309, 311, 312, 314, 315, 317], "ddpg": [0, 154, 155, 156, 157, 219, 227, 236, 299, 301, 306, 309, 315], "loss": [0, 3, 8, 36, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 244, 245, 276, 281, 288, 289, 290, 293, 302, 303, 309, 312, 314, 315, 316], "trainer": [0, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 309, 315], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 77, 78, 87, 90, 93, 103, 107, 112, 115, 120, 121, 122, 132, 135, 136, 138, 139, 141, 142, 143, 150, 151, 152, 161, 165, 167, 169, 170, 171, 172, 174, 175, 190, 196, 197, 198, 199, 200, 203, 204, 207, 209, 210, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 243, 245, 246, 247, 248, 249, 251, 265, 266, 269, 274, 281, 283, 290, 293, 302, 305, 307, 309, 311, 312, 315, 317], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 80, 81, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 104, 105, 106, 107, 108, 114, 115, 117, 120, 122, 124, 131, 132, 134, 135, 136, 138, 140, 141, 147, 150, 151, 152, 153, 158, 161, 165, 166, 167, 169, 172, 175, 178, 179, 180, 181, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 238, 239, 243, 245, 246, 247, 248, 251, 272, 273, 274, 275, 276, 278, 279, 280, 283, 290, 293, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317], "packag": [0, 6, 7, 10, 299, 300, 317], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 87, 93, 100, 101, 120, 140, 152, 165, 166, 167, 172, 205, 209, 218, 220, 222, 223, 229, 232, 233, 237, 245, 246, 247, 248, 254, 255, 256, 257, 259, 260, 261, 262, 290, 297, 299, 305, 306, 307, 308, 310, 311, 312, 313, 314], "node": [0, 2, 18, 19, 20, 21, 22, 290, 299], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 88, 89, 115, 117, 151, 159, 160, 161, 162, 164, 169, 170, 171, 175, 178, 179, 182, 183, 186, 187, 188, 196, 197, 198, 199, 203, 207, 208, 216, 217, 218, 222, 223, 228, 229, 232, 233, 234, 235, 237, 299, 303, 306, 307, 311, 312, 316, 317], "helper": [0, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 306, 308, 312], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 71, 75, 87, 93, 100, 135, 136, 141, 201, 225, 290, 299, 305, 306, 307, 308, 310, 311, 314, 316, 317], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 71, 75, 83, 87, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 117, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 183, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 217, 220, 222, 233, 235, 237, 243, 299, 312], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 91, 92, 93, 96, 98, 100, 101, 103, 105, 106, 107, 108, 109, 114, 115, 117, 120, 121, 122, 124, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 147, 150, 151, 154, 155, 156, 157, 158, 161, 164, 165, 167, 168, 169, 171, 172, 173, 175, 178, 179, 180, 181, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 220, 222, 223, 224, 228, 229, 230, 232, 233, 234, 235, 237, 239, 243, 244, 245, 246, 247, 248, 263, 264, 272, 278, 281, 284, 285, 290, 291, 293, 294, 297, 299, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "human": [0, 299, 312], "feedback": [0, 299, 316], "rlhf": [0, 34, 40, 45, 54, 115, 299, 301], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 72, 75, 87, 93, 98, 105, 108, 116, 122, 135, 136, 141, 143, 151, 168, 169, 277, 285, 286, 287, 290, 293, 295, 296, 297, 299, 308], "gymlikeenv": [0, 299], "envmetadata": [0, 299], "vector": [0, 1, 8, 24, 27, 33, 82, 88, 89, 107, 154, 156, 167, 245, 248, 258, 259, 260, 261, 262, 299, 305, 306, 308, 310, 311, 312, 313, 317], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 88, 89, 98, 121, 161, 170, 171, 181, 197, 198, 199, 200, 204, 205, 278, 299, 306, 308, 317], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 68, 71, 75, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 95, 98, 103, 105, 107, 108, 112, 115, 116, 122, 124, 128, 136, 147, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 167, 168, 169, 170, 171, 179, 180, 181, 183, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 210, 211, 216, 217, 219, 220, 222, 228, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 290, 293, 297, 299, 301, 302, 303, 305, 306, 307, 310, 311, 313, 314, 316, 317], "record": [0, 32, 71, 75, 87, 93, 115, 232, 263, 264, 265, 266, 267, 268, 269, 270, 271, 293, 299, 306, 307], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 87, 93, 107, 132, 147, 192, 198, 199, 203, 204, 205, 206, 207, 208, 209, 299, 307, 308, 311, 312, 316, 317], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 71, 75, 82, 83, 87, 93, 104, 107, 115, 120, 121, 131, 132, 135, 136, 138, 140, 141, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 241, 243, 245, 246, 247, 248, 249, 281, 288, 289, 293, 299, 302, 303, 306, 307, 310, 311, 312, 313, 314, 317], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 68, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 150, 151, 160, 161, 165, 166, 168, 169, 180, 181, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 263, 272, 276, 277, 278, 280, 281, 290, 299, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 317], "actor": [0, 3, 4, 15, 21, 115, 151, 153, 154, 156, 161, 162, 169, 179, 181, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 243, 290, 299, 302, 306, 307, 308, 311, 313, 316], "explor": [0, 1, 142, 174, 192, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 216, 277, 286, 287, 293, 299, 307, 308, 311, 312], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 93, 99, 100, 101, 103, 105, 107, 108, 116, 117, 120, 121, 124, 125, 127, 132, 133, 135, 136, 140, 141, 147, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 180, 181, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 272, 274, 275, 276, 277, 278, 281, 290, 293, 299, 303, 306, 310, 311, 312, 314, 316, 317], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 104, 106, 115, 117, 122, 127, 128, 135, 159, 170, 171, 178, 192, 203, 207, 211, 212, 233, 239, 245, 250, 258, 267, 281, 299, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317], "hook": [0, 32, 71, 75, 87, 93, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 181, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 299], "planner": [0, 151, 169, 299], "sac": [0, 222, 233, 235, 299], "redq": [0, 233, 289, 290, 299], "iql": [0, 228, 299, 311], "cql": [0, 217, 299], "dt": [0, 202, 299, 312], "td3": [0, 237, 299], "a2c": [0, 216, 299], "dreamer": [0, 97, 162, 224, 225, 226, 299, 301], "checkpoint": [0, 299], "builder": [0, 299, 306, 317], "logger": [0, 264, 266, 267, 268, 269, 270, 271, 275, 281, 293, 297, 299, 306], "_util": [0, 3, 11, 299], "implement_for": [0, 3, 299], "contribut": 0, "thing": [0, 3, 7, 8, 300, 307, 308, 311, 314, 317], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 71, 75, 87, 93, 107, 141, 159, 186, 300, 305, 312, 314], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 72, 75, 82, 84, 86, 87, 88, 89, 93, 98, 100, 104, 105, 107, 108, 115, 116, 117, 120, 121, 127, 131, 132, 135, 136, 138, 140, 141, 148, 149, 151, 161, 167, 168, 169, 170, 171, 173, 181, 187, 203, 206, 207, 209, 213, 218, 220, 223, 229, 232, 238, 243, 244, 245, 246, 247, 248, 263, 264, 278, 297, 300, 301, 303, 305, 306, 307, 308, 311, 312, 313, 314, 317], "debug": [0, 6, 8, 40, 300, 317], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 71, 75, 79, 87, 93, 101, 115, 120, 138, 141, 152, 167, 199, 205, 210, 218, 229, 232, 281, 300, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "habitat": [0, 3, 77, 300, 313], "lab": [0, 3, 69, 70, 300], "mujoco": [0, 6, 8, 90, 300, 307, 308], "error": [0, 1, 3, 7, 10, 11, 29, 32, 71, 75, 87, 93, 96, 121, 143, 300, 305, 307, 311, 317], "solut": [0, 3, 6, 7, 9, 21, 300, 301, 303, 316], "resourc": [0, 1, 21, 300, 305, 307, 311], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 71, 75, 87, 88, 93, 195, 230, 235, 245, 248, 300, 301, 305, 307, 308, 311, 312, 313, 317], "issu": [0, 4, 5, 8, 55, 56, 65, 79, 121, 192, 198, 199, 203, 204, 205, 206, 207, 300, 316], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 71, 75, 87, 93, 100, 107, 150, 170, 171, 310, 311, 314, 316], "search": [0, 306], "page": [0, 7], "somewhat": [1, 302, 317], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 71, 75, 87, 93, 106, 136, 161, 181, 198, 199, 204, 205, 232, 278, 316, 317], "dataload": [1, 54, 62, 306, 307, 314], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 110, 124, 165, 178, 196, 200, 202, 301, 306, 314, 316, 317], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 112, 115, 116, 117, 120, 121, 122, 124, 131, 132, 133, 134, 135, 136, 138, 140, 141, 147, 150, 151, 152, 153, 154, 155, 157, 158, 161, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 213, 216, 217, 218, 219, 220, 222, 225, 228, 229, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 251, 253, 254, 255, 259, 260, 262, 272, 277, 278, 279, 290, 293, 297, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 110, 115, 120, 135, 136, 140, 165, 166, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 278, 281, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 90, 100, 117, 120, 140, 143, 202, 217, 219, 222, 233, 235, 237, 272, 278, 281, 283, 284, 285, 293, 303, 305, 308, 311, 312, 313, 314, 316, 317], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 71, 75, 87, 93, 107, 117, 133, 150, 190, 209, 223, 225, 230, 251, 284, 303, 305, 306, 307, 311, 312, 317], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 88, 89, 93, 99, 104, 111, 120, 132, 135, 136, 137, 138, 140, 150, 165, 206, 207, 216, 217, 219, 220, 222, 223, 224, 225, 228, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 301, 305, 308, 311, 312, 314, 317], "static": [1, 11, 40, 45, 141, 228, 312, 314], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 71, 72, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 101, 104, 105, 106, 107, 108, 115, 117, 120, 124, 132, 135, 136, 138, 140, 141, 147, 152, 153, 154, 155, 156, 158, 161, 163, 165, 166, 167, 170, 171, 172, 175, 179, 190, 197, 198, 199, 200, 202, 206, 210, 211, 216, 217, 218, 219, 222, 228, 229, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 272, 301, 302, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 71, 75, 77, 82, 87, 88, 89, 93, 131, 134, 143, 172, 201, 233, 302, 305, 307, 308, 311, 312, 313, 314, 317], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 71, 75, 87, 93, 105, 107, 108, 116, 122, 136, 148, 149, 165, 200, 202, 218, 229, 232, 264, 278, 283, 295, 296, 297, 301, 305, 306, 307, 308, 311, 312, 314], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 71, 75, 79, 84, 87, 88, 89, 93, 100, 104, 120, 132, 134, 135, 136, 138, 140, 141, 143, 152, 165, 171, 172, 174, 180, 189, 193, 195, 196, 199, 200, 203, 206, 207, 210, 217, 228, 230, 235, 245, 246, 247, 248, 249, 290, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 71, 75, 83, 87, 93, 100, 104, 111, 120, 127, 132, 135, 136, 137, 138, 140, 190, 206, 207, 208, 230, 303, 307, 317], "two": [1, 3, 4, 8, 10, 32, 62, 71, 75, 87, 93, 117, 120, 140, 157, 165, 184, 207, 229, 240, 277, 281, 290, 302, 305, 306, 307, 308, 310, 311, 312, 314, 316, 317], "main": [1, 2, 3, 5, 20, 22, 72, 207, 281, 301, 302, 305, 306, 310, 317], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 71, 75, 84, 87, 88, 93, 103, 104, 120, 132, 135, 136, 138, 140, 150, 152, 165, 167, 170, 171, 172, 173, 190, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 243, 245, 246, 247, 248, 249, 263, 274, 284, 290, 293, 294, 297, 305, 306, 307, 308, 311, 312, 314, 317], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 71, 75, 83, 87, 88, 89, 93, 96, 103, 105, 108, 115, 117, 120, 127, 136, 138, 140, 141, 150, 160, 165, 167, 170, 171, 176, 181, 199, 204, 205, 207, 209, 210, 211, 230, 242, 245, 248, 263, 277, 278, 295, 296, 301, 305, 307, 310, 312, 313, 314, 316, 317], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 135, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 290, 294, 297, 301, 305, 306, 307, 311, 314], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 71, 75, 87, 93, 109, 117, 128, 152, 167, 172, 185, 192, 198, 203, 204, 206, 208, 209, 211, 230, 242, 277, 280, 281, 290, 302, 303, 305, 307, 308, 311, 312], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 83, 84, 87, 93, 98, 132, 165, 200, 208, 209, 285, 297, 301, 303, 306, 307, 308, 311, 314, 315, 317], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 68, 71, 72, 75, 81, 83, 87, 88, 89, 93, 98, 111, 114, 116, 117, 130, 131, 132, 133, 136, 150, 151, 162, 165, 166, 168, 169, 196, 200, 202, 203, 207, 216, 224, 232, 244, 245, 246, 247, 248, 251, 252, 253, 263, 272, 277, 281, 303, 305, 306, 308, 310, 312, 313, 314, 316], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 71, 75, 87, 93, 120, 135, 138, 141, 209, 305, 312, 316], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 71, 75, 87, 93, 121, 131, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 220, 230, 245, 246, 247, 248, 249, 263, 294, 305, 306, 308, 312, 314, 317], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 71, 75, 83, 84, 86, 87, 88, 89, 93, 100, 107, 112, 116, 117, 126, 130, 133, 141, 151, 152, 159, 160, 162, 163, 164, 165, 167, 169, 172, 175, 176, 177, 180, 182, 183, 186, 187, 188, 189, 192, 196, 197, 200, 202, 203, 206, 207, 211, 215, 217, 222, 224, 228, 229, 231, 233, 235, 237, 272, 274, 277, 281, 283, 284, 285, 295, 296, 297, 301, 305, 306, 307, 308, 311, 312, 313, 317], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 71, 75, 87, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 165, 167, 173, 174, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 246, 247, 248, 278, 305, 307, 308, 311, 312, 314, 317], "deliv": [1, 16, 18, 19, 20, 305, 306, 316], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 71, 75, 82, 87, 88, 89, 93, 141, 165, 208, 209, 263, 272, 301, 306, 310, 312, 316], "user": [1, 2, 3, 5, 8, 21, 32, 52, 71, 75, 87, 93, 131, 136, 158, 166, 232, 294, 302, 303, 305, 306, 312, 316, 317], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 68, 71, 72, 75, 81, 82, 83, 84, 86, 87, 88, 89, 93, 98, 100, 104, 109, 111, 114, 116, 120, 127, 128, 130, 131, 132, 133, 135, 138, 139, 141, 143, 165, 191, 202, 263, 290, 305, 306, 307, 308, 310, 311, 316], "whenev": [1, 3, 32, 35, 38, 41, 42, 114, 136, 230, 245, 246, 247, 248, 283, 301], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 71, 75, 87, 93, 196, 200, 202, 305, 307, 311, 316, 317], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 105, 106, 108, 116, 117, 122, 124, 126, 128, 130, 132, 135, 141, 150, 151, 165, 169, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 290, 302, 305, 307, 308, 310, 311, 312, 313, 314, 316, 317], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 68, 71, 75, 81, 83, 87, 88, 89, 91, 92, 93, 98, 100, 101, 103, 104, 109, 114, 117, 122, 128, 130, 131, 135, 136, 139, 141, 150, 151, 153, 158, 162, 165, 166, 167, 169, 176, 179, 180, 182, 183, 189, 193, 206, 212, 216, 218, 229, 230, 232, 233, 234, 243, 244, 245, 246, 247, 248, 249, 251, 297, 301, 302, 305, 306, 307, 308, 311, 312, 317], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 71, 75, 79, 87, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 150, 165, 173, 196, 198, 200, 204, 225, 306, 307, 308, 311, 312, 313, 314, 317], "predefin": [1, 306, 307, 314], "becaus": [1, 3, 4, 7, 40, 71, 75, 87, 93, 115, 135, 157, 166, 172, 192, 198, 199, 203, 204, 205, 206, 207, 305, 306, 308, 310, 311, 312, 314, 317], "potenti": [1, 312, 314], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 71, 75, 87, 93, 117, 136, 139, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 182, 183, 185, 187, 188, 190, 193, 196, 197, 199, 200, 202, 203, 205, 207, 210, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 285, 302, 305, 307, 308, 310, 311, 313, 314], "heavi": [1, 8, 314], "crucial": [1, 196, 200, 202, 228, 230, 305, 306, 307, 308, 311, 312, 317], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 115, 153, 158, 179, 230, 232, 290, 301, 305, 306, 307, 311, 312], "hyperparamet": [1, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 305, 312, 314], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 132, 294, 297, 305, 314], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 69, 70, 71, 72, 75, 83, 84, 86, 87, 88, 89, 90, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 293, 294, 295, 296, 297, 301, 302, 305, 308, 311, 312, 313, 316], "take": [1, 3, 8, 23, 40, 71, 75, 87, 93, 103, 130, 131, 133, 135, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 201, 202, 205, 210, 213, 215, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 272, 283, 301, 303, 305, 306, 307, 311, 312, 314, 317], "consider": [1, 3, 8, 306, 311, 314], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 83, 87, 88, 89, 90, 93, 105, 108, 131, 136, 152, 165, 167, 211, 217, 218, 219, 220, 222, 223, 229, 230, 232, 233, 235, 237, 243, 245, 248, 305, 306, 307, 311, 312, 317], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 82, 83, 87, 88, 89, 90, 93, 100, 103, 104, 106, 111, 115, 117, 121, 122, 124, 127, 128, 130, 131, 135, 136, 141, 143, 150, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 203, 205, 206, 207, 210, 213, 222, 227, 229, 230, 232, 233, 236, 244, 245, 246, 247, 248, 249, 264, 276, 277, 278, 281, 293, 295, 296, 297, 301, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "occur": [1, 8, 14, 28, 29, 101, 117, 121, 192, 198, 199, 203, 204, 205, 206, 207, 225, 314, 317], "serial": [1, 3, 32, 71, 75, 87, 93, 141], "optim": [1, 2, 8, 32, 71, 75, 87, 93, 136, 151, 169, 173, 174, 217, 230, 231, 232, 235, 276, 281, 293, 302, 303, 307, 308, 311, 312], "parallel": [1, 3, 8, 17, 88, 89, 143, 216, 294, 295, 296, 297, 306, 307, 311], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 100, 124, 293, 296, 299, 307, 308, 311, 314], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 75, 77, 82, 83, 87, 88, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 295, 296, 297, 301, 302, 303, 305, 306, 307, 308, 311, 314, 317], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 72, 84, 87, 93, 141, 295, 296, 297, 305, 307, 316, 317], "multisyncdatacollector": [1, 18, 19, 20, 21, 296, 299, 307, 316], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 82, 88, 89, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 301, 303, 307, 314, 316], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 79, 141, 202, 283, 301, 305, 311, 312], "aggreg": [1, 152, 154, 155, 209], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 71, 72, 75, 87, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 150, 165, 167, 181, 197, 199, 200, 205, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 245, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 283, 301, 306, 308, 312, 313, 316, 317], "final": [1, 3, 4, 21, 34, 36, 39, 40, 165, 196, 200, 201, 202, 208, 245, 277, 301, 305, 306, 307, 311, 312, 317], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 295, 299, 305, 306, 307, 316], "sever": [1, 8, 30, 32, 45, 71, 75, 87, 93, 101, 103, 136, 232, 305, 307, 314, 317], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 71, 75, 83, 84, 86, 87, 93, 100, 111, 117, 121, 124, 132, 136, 137, 141, 159, 160, 165, 166, 170, 171, 172, 173, 178, 180, 186, 190, 202, 206, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 272, 275, 278, 279, 280, 281, 283, 295, 296, 297, 303, 306, 307, 308, 310, 311, 313, 316, 317], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 121, 171, 178, 244, 285, 300, 305, 306, 307, 308, 311, 312, 314, 317], "continu": [1, 9, 25, 46, 71, 75, 87, 88, 89, 93, 147, 154, 155, 156, 157, 202, 209, 216, 217, 222, 228, 232, 233, 234, 235, 236, 237, 245, 250, 258, 301, 305, 307, 308, 311, 312, 314, 316], "concomitantli": 1, "network": [1, 4, 8, 32, 71, 75, 82, 87, 88, 89, 93, 152, 154, 155, 156, 157, 160, 162, 163, 167, 172, 174, 176, 177, 180, 182, 183, 184, 189, 193, 194, 195, 206, 210, 217, 218, 219, 220, 222, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 241, 243, 245, 246, 247, 248, 249, 292, 293, 301, 302, 303, 310, 312, 317], "impli": [1, 317], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 71, 75, 87, 91, 92, 93, 104, 120, 132, 135, 136, 138, 140, 165, 174, 206, 216, 217, 218, 222, 225, 283, 292, 301, 303, 305, 306, 307, 308, 310, 312, 314, 316], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 71, 75, 87, 93, 115, 117, 128, 136, 137, 141, 143, 167, 302, 303, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317], "slightli": [1, 301, 302, 308, 312, 313, 314, 317], "lag": [1, 13, 14, 16, 17, 305, 306, 307], "therefor": [1, 3, 7, 71, 75, 87, 93, 124, 131, 232, 243, 317], "although": [1, 8, 71, 75, 87, 93, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 303, 305, 306, 314], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 71, 75, 82, 83, 86, 87, 88, 89, 93, 98, 100, 115, 120, 127, 130, 133, 135, 137, 140, 150, 170, 171, 196, 200, 202, 203, 206, 207, 215, 216, 217, 218, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 302, 303, 305, 306, 307, 310, 311, 312, 314, 317], "asynchron": [1, 9, 14, 21, 32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206, 216, 295, 306, 307], "off": [1, 2, 4, 164, 188, 198, 235, 277, 286, 301, 303, 305, 306, 307, 311, 313, 317], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 71, 75, 87, 88, 89, 93, 105, 108, 111, 117, 131, 161, 165, 172, 173, 193, 195, 197, 199, 204, 216, 223, 228, 232, 277, 301, 303, 305, 306, 307, 308, 311, 312, 313, 314, 317], "remot": [1, 18, 19, 20, 21, 87, 93, 317], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 71, 75, 78, 83, 84, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 103, 105, 108, 115, 122, 143, 151, 165, 169, 202, 216, 285, 301, 305, 307, 308, 313, 314, 316], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 128, 233, 245, 246, 247, 248, 249, 302, 305, 307], "synchronis": [1, 72, 311], "either": [1, 5, 22, 32, 40, 54, 71, 75, 87, 93, 131, 212, 237, 268, 303, 305, 306, 308, 313, 314, 316, 317], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 305, 311, 316], "update_at_each_batch": [1, 13, 14, 17, 305], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 104, 107, 111, 114, 115, 116, 117, 120, 121, 122, 126, 130, 132, 134, 135, 136, 137, 138, 140, 141, 143, 147, 150, 151, 152, 154, 155, 156, 157, 163, 165, 167, 169, 170, 171, 172, 173, 174, 187, 188, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 245, 246, 247, 248, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 274, 275, 277, 278, 281, 297, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "second": [1, 8, 165, 199, 218, 229, 232, 235, 280, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 68, 71, 73, 75, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 104, 105, 106, 108, 115, 119, 120, 122, 124, 132, 134, 135, 136, 138, 140, 147, 150, 151, 152, 153, 154, 155, 156, 157, 161, 163, 165, 166, 167, 169, 172, 173, 174, 179, 180, 181, 189, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 209, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 278, 283, 290, 291, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 71, 75, 87, 93, 111, 115, 135, 160, 161, 175, 193, 194, 195, 198, 199, 201, 206, 212, 216, 218, 219, 220, 223, 229, 232, 234, 243, 244, 245, 246, 247, 248, 281, 290, 299, 303, 305, 306, 307, 308, 310, 311, 312, 317], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 70, 71, 72, 75, 83, 87, 93, 100, 117, 132, 135, 141, 147, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 168, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 213, 220, 222, 230, 243, 245, 246, 247, 248, 264, 268, 277, 285, 286, 287, 290, 293, 295, 296, 301, 302, 303, 305, 307, 308, 312, 314, 317], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 104, 105, 106, 108, 120, 122, 124, 132, 135, 136, 138, 140, 147, 150, 151, 165, 169, 173, 174, 180, 181, 189, 192, 193, 194, 195, 197, 198, 199, 203, 204, 205, 206, 209, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 278, 290, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 71, 75, 79, 87, 93, 122, 157, 165, 167, 175, 190, 192, 196, 198, 206, 211, 230, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 300, 302, 305, 306, 307, 311, 312, 314, 316, 317], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 71, 72, 75, 79, 82, 86, 87, 88, 89, 93, 98, 100, 103, 105, 106, 107, 108, 116, 117, 120, 129, 135, 136, 137, 140, 141, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 172, 175, 176, 177, 178, 179, 181, 182, 183, 185, 190, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 228, 229, 230, 232, 233, 234, 235, 236, 237, 243, 245, 246, 247, 248, 252, 253, 274, 276, 277, 281, 285, 290, 297, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 78, 79, 87, 93, 104, 115, 119, 120, 132, 135, 136, 138, 140, 206, 273, 305, 306, 307, 308, 311, 313, 317], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 87, 93, 101, 103, 107, 116, 127, 135, 141, 165, 166, 173, 174, 192, 198, 203, 204, 206, 207, 210, 218, 222, 229, 232, 233, 237, 251, 290, 297, 301, 303, 305, 306, 307, 311, 312, 314, 316], "infer": [1, 87, 93, 100, 131, 141, 165, 173, 197, 305, 307, 314], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 69, 70, 71, 75, 83, 87, 93, 116, 117, 136, 141, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 208, 209, 210, 213, 277, 295, 296, 297, 300, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316], "dispatch": [1, 18, 19, 20, 21, 190], "avail": [1, 3, 4, 6, 21, 62, 79, 88, 89, 115, 161, 181, 203, 207, 230, 295, 296, 301, 305, 306, 307, 308, 311, 312, 314, 317], "speed": [1, 2, 4, 8, 27, 302, 305, 306, 307, 308, 311, 312, 314], "up": [1, 2, 3, 8, 9, 27, 40, 52, 135, 232, 300, 301, 302, 305, 306, 307, 308, 311, 312, 314, 317], "avoid": [1, 32, 55, 56, 65, 71, 75, 87, 93, 136, 141, 192, 206, 211, 218, 229, 232, 284, 307, 311], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 175, 301, 302, 305, 306, 311], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 68, 71, 73, 75, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 101, 105, 108, 111, 120, 122, 124, 129, 132, 134, 135, 136, 137, 140, 141, 147, 150, 151, 152, 153, 158, 159, 161, 165, 166, 167, 169, 170, 171, 172, 175, 178, 179, 180, 181, 182, 183, 186, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 211, 216, 217, 219, 220, 222, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 264, 272, 278, 290, 301, 306, 307, 308, 310, 311, 312, 313, 316, 317], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 71, 72, 73, 75, 82, 84, 87, 88, 89, 93, 105, 108, 122, 135, 137, 141, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 173, 175, 176, 177, 179, 180, 182, 183, 185, 189, 190, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 218, 229, 230, 232, 245, 246, 247, 248, 249, 278, 295, 296, 297, 301, 305, 306, 307, 308, 310, 311, 312, 314, 317], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 79, 86, 100, 111, 137, 141, 165, 197, 216, 218, 219, 222, 228, 229, 230, 232, 233, 234, 235, 237, 245, 246, 247, 248, 301, 302, 306, 307, 311, 314], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 71, 75, 87, 93, 141, 151, 166, 169, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 290, 299, 303, 305, 307, 308, 311, 313, 314, 317], "while": [1, 3, 7, 8, 32, 71, 75, 87, 93, 124, 136, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 228, 229, 232, 301, 305, 307, 308, 311, 312, 313, 314, 316], "wait": [1, 20, 21, 22, 308, 312], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 71, 75, 87, 88, 89, 93, 100, 107, 117, 122, 124, 127, 128, 132, 136, 183, 208, 209, 210, 216, 217, 219, 220, 222, 228, 232, 235, 245, 252, 253, 301, 303, 305, 306, 307, 308, 310, 311, 312, 314, 317], "impact": [1, 105, 108, 306, 308, 311], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 71, 72, 75, 79, 87, 93, 100, 104, 120, 132, 135, 136, 138, 140, 141, 206, 297, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "manag": [1, 8, 241, 242, 245, 246, 247, 248, 277], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 71, 75, 87, 93, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 124, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 150, 151, 160, 161, 165, 168, 169, 181, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 264, 275, 276, 277, 279, 280, 281, 285, 290, 302, 303, 305, 307, 308, 310, 311, 312, 314, 316, 317], "control": [1, 3, 5, 8, 16, 69, 70, 82, 88, 89, 107, 150, 154, 155, 156, 157, 165, 168, 169, 183, 190, 202, 206, 207, 208, 216, 218, 229, 232, 236, 245, 250, 258, 301, 303, 305, 306, 307, 311, 312, 314], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 71, 75, 79, 84, 87, 90, 93, 100, 101, 112, 115, 116, 117, 120, 121, 130, 132, 133, 135, 136, 138, 143, 164, 165, 170, 171, 188, 193, 194, 195, 197, 203, 206, 207, 209, 216, 217, 218, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 240, 243, 245, 246, 247, 248, 272, 276, 290, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 305, 306, 311, 316], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 71, 75, 87, 88, 89, 93, 100, 103, 105, 108, 112, 131, 136, 165, 277, 281, 302, 305, 306, 307, 308, 311, 312, 314, 317], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 202, 305, 317], "usual": [1, 3, 4, 6, 7, 8, 52, 71, 75, 87, 93, 174, 232, 245, 246, 247, 248, 249, 263, 290, 300, 301, 303, 305, 306, 307, 308, 311, 314, 317], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 71, 72, 75, 82, 87, 88, 89, 93, 100, 105, 107, 108, 112, 116, 117, 135, 136, 141, 152, 165, 167, 170, 171, 172, 197, 202, 210, 305, 306, 307, 310, 311, 313, 314, 317], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 71, 73, 75, 87, 93, 100, 105, 108, 124, 299, 303, 306, 307, 308, 311, 313], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 69, 71, 75, 86, 87, 88, 89, 90, 93, 98, 100, 101, 107, 111, 115, 116, 117, 120, 121, 124, 126, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 185, 186, 187, 188, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 246, 247, 248, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 293, 297, 303, 305, 306, 307, 308, 313, 314, 316, 317], "behaviour": [1, 3, 21, 75, 101, 105, 108, 117, 121, 131, 150, 164, 165, 188, 277, 301, 306, 308, 312, 314], "besid": 1, "those": [1, 5, 7, 26, 28, 87, 93, 105, 108, 117, 132, 165, 203, 207, 208, 209, 283, 295, 296, 301, 305, 306, 311, 312, 317], "choos": [1, 82, 165, 232, 301, 302, 305, 306, 307, 311, 314], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 71, 75, 83, 86, 87, 88, 89, 91, 92, 93, 115, 120, 138, 152, 165, 167, 199, 204, 205, 215, 216, 217, 218, 219, 222, 228, 229, 230, 232, 233, 234, 235, 237, 281, 290, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 314, 316, 317], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 284, 305, 307, 316], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 100, 112, 196, 200, 202, 263, 264, 274, 277, 281, 284, 285, 305, 306, 307, 308, 311, 314, 316, 317], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 75, 86, 87, 93, 100, 103, 104, 107, 111, 114, 115, 117, 119, 120, 127, 130, 132, 135, 136, 138, 140, 141, 143, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 169, 172, 173, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 206, 207, 209, 210, 213, 218, 229, 232, 244, 245, 246, 247, 248, 263, 277, 303, 306, 307, 308, 311, 312, 314, 317], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 100, 124, 284, 305, 306, 307, 308, 311, 314, 316], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 71, 72, 75, 87, 88, 89, 93, 120, 127, 130, 131, 132, 133, 140, 141, 161, 165, 172, 176, 180, 181, 189, 196, 198, 199, 200, 205, 209, 251, 254, 255, 256, 257, 259, 260, 261, 262, 277, 278, 295, 296, 301, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 284, 305, 306], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 71, 75, 83, 87, 93, 107, 116, 117, 132, 143, 165, 200, 203, 206, 207, 217, 233, 277, 285, 301, 305, 306, 307, 308, 312, 313, 314, 316, 317], "rand_step": [1, 3, 67, 69, 70, 71, 72, 74, 75, 76, 80, 83, 84, 87, 93, 114, 132, 141, 312, 316, 317], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 305], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 305, 306, 307], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 71, 75, 87, 93, 121, 135, 151, 165, 169, 202, 232, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 272, 299, 302, 305, 306, 307, 308, 312, 314, 316, 317], "pad": [1, 23, 37, 43, 52, 100, 152, 154, 155, 165, 166, 170, 171, 278], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 100, 101, 117, 121, 127, 134, 165, 167, 170, 171, 174, 198, 203, 206, 207, 230, 301, 305, 306, 308, 311, 312, 314], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 71, 75, 87, 93, 100, 104, 120, 132, 134, 135, 136, 138, 140, 168, 206, 215, 223, 281, 300, 306, 307, 310, 311, 312, 314, 317], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 75, 121, 170, 171, 196, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 303, 308], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 71, 75, 87, 93, 112, 121, 141, 161, 170, 171, 181, 198, 199, 204, 205, 207, 240, 245, 278, 305, 307, 308, 311], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 96, 121, 136, 152, 167, 170, 171, 196, 202, 229, 245, 246, 247, 248, 278, 303, 317], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 277, 299, 305, 306], "strategi": [1, 16, 82, 171, 178, 200, 301, 303, 305, 306, 311, 314], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 71, 75, 87, 93, 120, 140, 301, 302, 305, 307, 311, 312, 314, 317], "tool": [1, 2, 3, 5, 308, 312, 314, 317], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 303, 305, 307, 308, 312], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 299], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 299], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 101, 104, 105, 106, 107, 108, 115, 117, 120, 122, 124, 126, 131, 132, 134, 135, 136, 138, 140, 141, 147, 150, 151, 152, 153, 158, 159, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 251, 272, 279, 280, 290, 293, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "multiprocess": [1, 18, 19, 20, 72, 73, 141, 306, 307, 312, 317], "synchron": [1, 13, 19, 21, 84, 295, 296, 306, 307], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 84, 87, 93, 105, 108, 131, 136, 141, 144, 148, 149, 159, 164, 165, 178, 186, 187, 188, 203, 207, 230, 277, 305, 306, 308, 311, 316, 317], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 196, 202, 275, 279, 305, 306, 311], "dedic": [1, 3, 18, 19, 20, 21, 193, 194, 195, 301, 305, 310, 311], "folder": [1, 306], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 71, 75, 87, 93, 121, 208, 209, 272, 281, 301, 305, 306, 307, 310, 316, 317], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 71, 72, 75, 83, 87, 88, 89, 93, 96, 100, 103, 104, 105, 106, 108, 110, 115, 116, 117, 120, 127, 132, 133, 135, 136, 138, 140, 141, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 206, 207, 209, 210, 213, 225, 230, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 276, 281, 284, 295, 296, 297, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317], "variou": [1, 3, 13, 14, 16, 17, 165, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 243, 295, 296, 305, 306, 307, 311, 317], "machin": [1, 7, 18, 19, 20, 32, 53, 79, 311], "One": [1, 2, 4, 8, 31, 33, 45, 100, 124, 138, 178, 196, 206, 210, 236, 240, 268, 305, 306, 314, 317], "wonder": 1, "why": [1, 3, 312, 317], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 84, 88, 89, 93, 294, 299, 305, 306, 307, 310, 316, 317], "instead": [1, 4, 7, 8, 11, 27, 32, 71, 75, 87, 93, 111, 132, 136, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 216, 217, 218, 220, 222, 223, 228, 229, 232, 233, 234, 235, 243, 245, 249, 297, 301, 312, 314, 317], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 71, 75, 87, 88, 89, 93, 104, 105, 106, 108, 120, 128, 131, 132, 134, 135, 136, 138, 140, 164, 167, 183, 187, 188, 206, 209, 215, 216, 217, 219, 220, 222, 228, 230, 232, 233, 234, 235, 237, 283, 295, 296, 297, 301, 302, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317], "lower": [1, 2, 17, 21, 25, 103, 141, 182, 183, 210, 307, 312], "io": [1, 84], "footprint": [1, 2, 314], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 63, 71, 75, 79, 82, 87, 88, 89, 93, 100, 103, 111, 120, 122, 136, 140, 141, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 173, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 204, 205, 206, 210, 213, 215, 222, 233, 234, 235, 237, 244, 249, 264, 281, 297, 301, 302, 305, 306, 307, 308, 311, 312, 314, 316, 317], "commun": [1, 2, 3, 300, 307, 317], "yet": [1, 230, 313], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 71, 73, 75, 83, 87, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 147, 161, 181, 183, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 290, 301, 305, 306, 307, 308, 310, 311, 316], "plai": [1, 3, 88, 89, 100, 306, 307, 314, 317], "role": [1, 3, 306, 317], "opposit": 1, "direct": [1, 32, 71, 75, 87, 93, 230, 306], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 71, 75, 87, 88, 89, 93, 150, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 198, 199, 200, 202, 204, 205, 210, 213, 305, 306, 307, 308, 312, 313, 314, 316, 317], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 84, 245, 246, 247, 248, 308, 311], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 72, 87, 93, 141, 165, 172, 193, 194, 195, 216, 218, 219, 222, 228, 229, 232, 233, 234, 235, 237, 297, 301, 307, 308, 310, 311, 316, 317], "among": [1, 3, 88, 89, 311], "achiev": [1, 3, 4, 32, 71, 75, 79, 87, 93, 131, 278, 303, 305, 306, 307, 308, 311, 312, 317], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 52, 53, 87, 120, 135, 140, 221, 230, 302, 303, 305, 306, 307, 308, 314, 317], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 277, 302, 305, 307, 311, 314, 317], "gpu": [1, 7, 8, 32, 55, 56, 65, 71, 75, 79, 87, 93, 305, 307, 308, 311, 317], "nativ": [1, 7, 9, 71, 75, 87, 93, 100, 308, 314], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 164, 187, 188, 215, 300, 305, 306, 307, 308, 311, 313, 317], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 117, 141, 151, 159, 162, 165, 166, 169, 186, 196, 203, 207, 230, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 301, 302, 305, 306, 307, 311, 312, 314, 316, 317], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 71, 75, 87, 93, 103, 104, 120, 132, 135, 136, 138, 140, 165, 170, 171, 192, 196, 197, 198, 200, 202, 203, 204, 206, 207, 210, 216, 217, 218, 219, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 243, 245, 246, 247, 248, 249, 294, 305, 306, 307, 311, 314, 317], "build": [1, 3, 7, 23, 26, 32, 71, 75, 87, 90, 93, 141, 151, 165, 169, 201, 203, 207, 281, 288, 289, 291, 292, 301, 303, 307, 308, 311, 312, 313, 316, 317], "central": [2, 305, 306, 311, 314], "part": [2, 4, 8, 32, 40, 71, 75, 87, 93, 117, 124, 127, 165, 211, 272, 297, 305, 307, 308, 312, 317], "algorithm": [2, 3, 8, 9, 13, 14, 83, 112, 216, 232, 233, 234, 235, 272, 286, 299, 302, 303, 305, 306, 307, 308, 311, 313, 314, 316], "implement": [2, 3, 9, 11, 16, 32, 63, 71, 75, 84, 87, 93, 104, 106, 115, 122, 135, 141, 164, 186, 187, 188, 216, 217, 221, 228, 230, 231, 232, 235, 290, 301, 303, 305, 306, 307, 308, 312, 316], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 52, 62, 71, 72, 75, 79, 87, 93, 100, 115, 120, 122, 132, 138, 141, 151, 165, 166, 172, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "give": [2, 7, 41, 71, 75, 83, 87, 93, 100, 300, 302, 305, 306, 311, 312, 313, 316], "abil": [2, 230, 312, 314], "veri": [2, 3, 306, 312, 314, 316, 317], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 71, 75, 83, 86, 87, 93, 100, 121, 124, 144, 145, 148, 149, 151, 159, 164, 169, 170, 171, 178, 179, 182, 187, 188, 192, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 218, 219, 220, 229, 231, 232, 237, 272, 278, 281, 284, 301, 305, 306, 307, 308, 311, 313, 316, 317], "latenc": 2, "especi": [2, 3, 7, 8, 101], "larger": [2, 4, 228], "volum": 2, "lazymemmapstorag": [2, 100, 299, 305, 306, 308, 313, 314], "advis": [2, 317], "due": [2, 3, 5, 313, 314, 317], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 313, 314], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 71, 75, 87, 93, 182, 183, 230, 249, 305, 306, 308, 313, 314, 316, 317], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 71, 75, 87, 88, 89, 93, 105, 106, 108, 127, 129, 131, 137, 151, 206, 207, 230, 236, 301, 305, 307, 308], "file": [2, 6, 7, 8, 263, 303, 306, 314, 315, 317], "locat": [2, 7, 45, 75, 117, 126, 164, 175, 187, 188, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 305, 306, 307, 311, 314], "improv": [2, 4, 112, 216, 302, 311, 314], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 299, 314], "were": [2, 7, 87, 93, 307, 314], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 71, 75, 79, 87, 93, 98, 141, 200, 203, 207, 229, 230, 232, 305, 306, 308], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 79, 84, 88, 89, 90, 100, 120, 138, 153, 154, 155, 156, 157, 158, 161, 162, 163, 169, 170, 171, 174, 176, 177, 179, 180, 182, 183, 189, 199, 202, 216, 217, 221, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 245, 250, 258, 290, 313, 316], "github": [2, 5, 6, 7, 10, 18, 19, 20, 88, 89, 90, 138, 316], "com": [2, 5, 6, 7, 10, 18, 19, 20, 79, 88, 89, 90, 316], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 71, 75, 82, 83, 87, 88, 89, 93, 104, 106, 115, 120, 122, 132, 135, 136, 138, 140, 141, 145, 149, 152, 167, 172, 174, 180, 189, 196, 198, 203, 206, 207, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 239, 243, 251, 290, 295, 301, 305, 306, 307, 311, 312, 314, 317], "1x": 2, "lazytensorstorag": [2, 41, 42, 124, 299, 307, 311, 314], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 71, 75, 78, 82, 84, 86, 87, 88, 89, 91, 92, 93, 98, 100, 104, 107, 115, 117, 120, 122, 124, 132, 134, 135, 136, 138, 140, 147, 151, 152, 154, 155, 158, 161, 163, 165, 166, 167, 169, 172, 175, 178, 180, 190, 192, 193, 194, 195, 198, 199, 203, 205, 206, 209, 210, 211, 216, 217, 219, 220, 222, 223, 224, 225, 228, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 251, 254, 255, 256, 257, 259, 260, 261, 262, 264, 280, 301, 303, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 116, 164, 187, 188, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 306, 307, 312, 314, 317], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 86, 100, 121, 152, 192, 196, 198, 206, 207, 211, 272, 305, 307, 314, 317], "pai": [2, 8, 305, 308], "attent": [2, 8, 305, 308], "alwai": [2, 3, 20, 26, 28, 32, 54, 71, 75, 87, 93, 115, 116, 223, 230, 301, 302, 306, 307, 308, 311, 312, 314], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 132, 164, 180, 187, 188, 305, 308, 311, 312, 314, 316], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 93, 100, 101, 111, 117, 121, 129, 134, 137, 141, 152, 153, 158, 165, 167, 170, 171, 173, 174, 179, 180, 184, 185, 186, 187, 190, 198, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 297, 301, 305, 306, 307, 308, 311, 312, 314], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 71, 75, 83, 87, 93, 103, 106, 107, 128, 134, 138, 141, 165, 174, 175, 197, 199, 200, 205, 207, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 245, 278, 290, 295, 296, 301, 303, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317], "word": [2, 40, 52, 230, 305, 312, 317], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 71, 72, 75, 79, 84, 87, 88, 93, 100, 120, 127, 135, 136, 138, 141, 147, 150, 152, 154, 155, 156, 157, 158, 163, 165, 167, 168, 172, 197, 207, 220, 223, 233, 243, 264, 278, 285, 286, 287, 293, 295, 296, 301, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317], "1m": [2, 284, 305, 307, 308], "multidimension": [2, 41, 58, 314], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 158, 165, 173, 190, 197, 208, 209, 216, 218, 223, 229, 232, 244, 281, 301, 303, 305, 306, 307, 308, 312, 314, 317], "desir": [2, 3, 32, 71, 75, 87, 93, 104, 117, 120, 121, 132, 135, 136, 138, 140, 148, 149, 152, 167, 172, 192, 198, 199, 203, 204, 205, 206, 207, 301, 305, 311, 312], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 71, 75, 76, 79, 81, 84, 87, 93, 117, 120, 121, 124, 138, 143, 172, 173, 198, 207, 230, 232, 245, 246, 247, 248, 278, 287, 297, 301, 302, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "do": [2, 3, 4, 7, 75, 116, 121, 141, 150, 172, 173, 194, 245, 303, 305, 306, 307, 308, 310, 311, 312, 314, 316, 317], "custom": [2, 3, 5, 32, 71, 75, 87, 93, 138, 172, 210, 223, 232, 238, 297, 301, 305, 306, 307, 308, 311], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 69, 71, 75, 82, 84, 87, 88, 89, 90, 93, 96, 107, 109, 122, 127, 128, 136, 138, 165, 198, 204, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 249, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 290, 303, 305, 306, 307, 308, 311, 312, 317], "randomcroptensordict": [2, 305], "here": [2, 3, 4, 7, 8, 9, 10, 71, 75, 79, 87, 88, 89, 93, 100, 301, 302, 305, 306, 307, 308, 311, 312, 314, 316, 317], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 71, 75, 87, 88, 89, 93, 216, 218, 227, 229, 232, 281, 300, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 67, 68, 69, 70, 74, 76, 77, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 94, 95, 175, 190, 196, 197, 202, 207, 212, 245, 269, 270, 271, 297, 299, 307, 308, 311, 313, 317], "around": [2, 5, 7, 15, 17, 41, 42, 83, 207, 245, 305, 306, 311, 317], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 100, 143, 217, 228, 303, 313, 314, 316], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 71, 75, 87, 93, 109, 127, 128, 150, 153, 154, 155, 156, 157, 163, 174, 179, 202, 206, 207, 208, 209, 216, 217, 218, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 297, 303, 305, 310, 311, 314, 316], "replaybuff": [2, 41, 42, 66, 100, 121, 124, 220, 223, 243, 291, 293, 299, 307, 311, 313, 314, 316], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 121, 220, 223, 243, 299, 305, 307, 311, 314], "By": [2, 3, 33, 71, 75, 87, 88, 89, 93, 190, 207, 230, 277, 297, 305, 313, 314, 317], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 71, 75, 82, 87, 88, 89, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 141, 147, 161, 175, 192, 193, 194, 195, 198, 203, 204, 206, 207, 209, 210, 211, 212, 243, 277, 299, 301, 302, 305, 306, 307, 308, 313], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 101, 104, 105, 107, 108, 111, 114, 117, 120, 121, 122, 124, 126, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 216, 217, 219, 220, 222, 225, 226, 228, 230, 232, 233, 234, 235, 237, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 290, 301, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 71, 75, 87, 93, 122, 132, 150, 167, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 238, 240, 243, 301, 303, 305, 307, 308, 311, 312, 314, 317], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 88, 89, 91, 92, 281, 300, 307, 308, 311, 317], "respons": [2, 3, 8, 281, 317], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 115, 193, 194, 195, 206, 228, 290, 299, 305, 312, 316], "repositori": [2, 7, 53], "latest": [2, 3, 10, 84, 88, 89, 278, 307, 311, 312, 316], "wheel": [2, 307], "publish": 2, "pypi": [2, 316], "openml": [2, 53, 86], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 71, 75, 79, 84, 87, 90, 93, 104, 120, 132, 135, 136, 138, 140, 167, 190, 206, 208, 209, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 301, 303, 305, 306, 307, 308, 311, 312, 314, 317], "parent": [2, 3, 21, 26, 28, 44, 71, 101, 104, 106, 111, 112, 117, 120, 132, 135, 137, 138, 193, 230, 232, 249, 305, 312, 316, 317], "subclass": [2, 3, 71, 75, 87, 93, 135, 143, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 206, 207, 208, 210, 213, 230, 232, 306, 308, 312, 314], "basic": [2, 83, 301, 307, 317], "properti": [2, 3, 32, 34, 36, 39, 71, 75, 83, 87, 93, 135, 136, 159, 164, 173, 178, 186, 187, 188, 230, 312, 314], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 68, 69, 70, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 111, 113, 114, 115, 117, 118, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 150, 153, 154, 155, 156, 157, 158, 161, 165, 166, 176, 177, 179, 181, 182, 192, 193, 194, 195, 197, 198, 200, 202, 203, 204, 211, 212, 216, 217, 218, 219, 220, 222, 225, 228, 229, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 264, 290, 293, 301, 303, 306, 307, 308, 310, 311, 312, 314, 316, 317], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 95, 101, 105, 108, 115, 117, 122, 124, 132, 134, 141, 142, 143, 147, 150, 151, 153, 158, 159, 160, 165, 167, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 186, 189, 192, 193, 194, 195, 197, 198, 199, 203, 204, 205, 206, 209, 210, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 240, 243, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 272, 278, 281, 293, 301, 305, 306, 307, 308, 310, 311, 313, 314, 316, 317], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 104, 105, 106, 107, 108, 115, 117, 120, 122, 124, 132, 134, 135, 136, 138, 140, 143, 147, 150, 151, 161, 165, 169, 173, 174, 180, 181, 189, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 209, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 251, 290, 301, 307, 308, 310, 311, 312, 313, 314, 316, 317], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 96, 98, 100, 103, 114, 115, 117, 120, 122, 124, 132, 135, 140, 141, 147, 150, 151, 161, 165, 167, 169, 172, 175, 180, 181, 189, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 216, 217, 218, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 274, 277, 290, 293, 301, 302, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 71, 72, 75, 87, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 117, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 152, 159, 165, 167, 172, 186, 192, 197, 198, 203, 204, 206, 207, 210, 211, 217, 222, 229, 231, 233, 235, 278, 283, 301, 305, 307, 310, 311, 312, 314, 316, 317], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 71, 75, 83, 86, 87, 88, 89, 90, 93, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 150, 152, 154, 155, 156, 157, 160, 161, 165, 166, 167, 172, 173, 174, 181, 182, 183, 184, 185, 190, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 275, 279, 284, 293, 301, 302, 303, 305, 306, 307, 308, 311, 312, 316, 317], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 86, 87, 88, 89, 90, 93, 100, 103, 104, 105, 106, 108, 115, 117, 120, 122, 133, 135, 138, 140, 143, 152, 153, 154, 155, 158, 160, 161, 162, 165, 166, 167, 172, 175, 181, 190, 192, 193, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 264, 272, 301, 302, 305, 306, 307, 308, 310, 311, 312, 313, 316, 317], "send": [2, 3, 8, 316], "receiv": [2, 3, 32, 40, 71, 75, 87, 93, 131, 135, 167, 251, 302, 305, 307, 310, 312], "spawn": [2, 3, 4, 18, 22, 79, 84, 311], "check_env_spec": [2, 3, 299, 307, 311, 312], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 75, 87, 93, 100, 104, 106, 111, 115, 117, 120, 122, 123, 124, 132, 135, 136, 138, 140, 151, 166, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 249, 263, 294, 302, 303, 304, 306, 307, 308, 312, 314, 317], "saniti": [2, 3, 7, 143, 307], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 71, 75, 83, 87, 93, 104, 107, 117, 120, 132, 135, 136, 138, 140, 150, 151, 161, 162, 169, 181, 185, 192, 198, 199, 200, 202, 205, 206, 207, 208, 209, 211, 215, 219, 220, 244, 245, 246, 247, 248, 249, 251, 273, 277, 293, 301, 303, 305, 306, 307, 311, 312, 317], "techniqu": [2, 8, 306, 314], "commonli": [2, 317], "emploi": [2, 174], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 314], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 71, 75, 87, 93, 100, 105, 108, 141, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 220, 223, 243, 301, 312, 316], "offer": [2, 3, 7, 301, 306, 312, 317], "facilit": [2, 3, 7, 119, 120, 138, 140, 193, 194, 195, 301, 305, 308, 312], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 131, 203, 207, 305, 307, 311, 312, 317], "extern": [2, 3, 105, 108, 317], "consist": [2, 3, 32, 35, 38, 41, 42, 71, 75, 87, 93, 115, 152, 167, 305, 306, 307, 312, 313, 317], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206, 305, 306, 317], "manner": [2, 75, 120, 138, 301, 305, 306, 307, 310, 312, 314], "handl": [3, 21, 32, 71, 75, 87, 93, 141, 165, 167, 281, 295, 296, 305, 306, 307, 311, 314], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 71, 75, 82, 87, 88, 89, 93, 100, 107, 117, 122, 131, 136, 137, 161, 165, 167, 169, 172, 181, 228, 232, 240, 245, 246, 247, 252, 253, 277, 281, 283, 295, 296, 301, 302, 303, 305, 306, 307, 310, 311, 312, 313, 314, 317], "dm": [3, 305, 317], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 79, 83, 84, 85, 124, 132, 138, 139, 193, 201, 216, 217, 219, 220, 222, 224, 228, 232, 233, 234, 235, 237, 281, 290, 301, 302, 303, 305, 306, 308, 311, 312, 314, 317], "goal": [3, 4, 131, 305, 306, 307, 308, 311, 312], "abl": [3, 82, 88, 89, 305, 307, 308, 310, 311, 312, 314, 316], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 143, 266, 267, 268, 269, 270, 271, 300, 306, 307, 311, 314], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 71, 72, 75, 79, 87, 93, 305, 307, 311, 312, 317], "simul": [3, 5, 7, 8, 90, 97, 151, 169, 301, 305, 307, 311], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 88, 89, 93, 120, 138, 143, 154, 165, 185, 207, 208, 209, 272, 284, 301, 303, 305, 306, 307, 308, 311, 312, 314, 316, 317], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 71, 75, 87, 88, 89, 93, 132, 143, 170, 171, 173, 174, 192, 197, 198, 199, 202, 203, 204, 205, 206, 207, 241, 242, 303, 305, 306, 307, 308, 311, 312, 314, 316, 317], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 71, 75, 87, 93, 192, 198, 199, 203, 204, 205, 206, 207, 230, 245, 246, 247, 248, 249, 302, 305, 306, 312, 317], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 71, 72, 75, 87, 88, 89, 91, 92, 93, 100, 103, 114, 115, 117, 122, 124, 132, 135, 141, 165, 290, 293, 305, 306, 307, 308, 310, 311, 313, 314, 316, 317], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 71, 75, 83, 87, 93, 104, 107, 115, 120, 132, 135, 136, 138, 140, 151, 152, 154, 155, 156, 157, 160, 161, 162, 163, 165, 167, 169, 171, 172, 175, 180, 181, 189, 192, 193, 194, 195, 197, 198, 200, 202, 203, 204, 206, 207, 208, 209, 211, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 290, 293, 301, 302, 305, 306, 307, 308, 310, 311, 312, 313, 316], "typic": [3, 4, 8, 32, 71, 75, 87, 93, 131, 217, 230, 232, 235, 301, 302, 303, 307, 311, 312], "organis": [3, 306, 312], "arbitrari": [3, 33, 87, 93, 301, 305, 306, 312], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 71, 75, 87, 93, 245, 246, 247, 248, 249, 303, 306, 307, 311, 312, 314, 316], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 105, 108, 202, 245, 246, 247, 248, 249, 302, 305, 307, 308, 311, 312, 313, 314], "attribut": [3, 4, 32, 45, 71, 75, 87, 93, 120, 130, 138, 165, 207, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 305, 308, 312], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 68, 71, 73, 75, 78, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 105, 108, 122, 124, 132, 135, 150, 151, 158, 161, 165, 169, 180, 181, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 272, 278, 290, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 71, 75, 82, 87, 88, 89, 93, 100, 121, 165, 189, 193, 194, 195, 212, 301, 306, 307, 308, 311], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 71, 75, 83, 86, 87, 90, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 117, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 143, 165, 172, 199, 202, 206, 209, 216, 217, 218, 219, 220, 222, 228, 229, 230, 232, 233, 234, 235, 237, 243, 285, 300, 301, 302, 303, 305, 307, 308, 311, 312, 314, 317], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 87, 93], "actual": [3, 4, 7, 17, 71, 75, 87, 93, 131, 284, 302, 305, 307, 311, 312], "just": [3, 4, 71, 75, 82, 87, 88, 89, 93, 103, 172, 272, 301, 303, 305, 306, 307, 308, 311, 312, 314, 316, 317], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 71, 75, 87, 93, 101, 106, 117, 150, 151, 169, 203, 207, 210, 216, 217, 218, 220, 229, 232, 233, 235, 237, 243, 245, 246, 247, 248, 290, 297, 303, 306, 307, 312, 317], "care": [3, 8, 71, 75, 87, 93, 135, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 305, 307, 311, 312, 314], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 71, 75, 78, 84, 87, 88, 89, 93, 104, 120, 132, 134, 135, 136, 138, 140, 142, 152, 164, 167, 172, 173, 180, 188, 189, 193, 195, 206, 207, 278, 305, 306, 307, 308, 311, 312, 314, 317], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 152, 164, 167, 172, 188, 206, 278, 305, 306, 307, 308, 312], "parametr": [3, 174, 207, 217, 228, 235, 305, 307], "hardwar": 3, "observation_spec": [3, 71, 75, 83, 87, 93, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 117, 120, 123, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 151, 165, 169, 285, 293, 305, 307, 310, 311, 312, 317], "compositespec": [3, 28, 49, 71, 73, 75, 83, 87, 93, 98, 105, 106, 107, 108, 115, 122, 130, 131, 132, 135, 147, 151, 169, 192, 196, 203, 209, 210, 299, 305, 307, 311, 312, 317], "pair": [3, 32, 34, 36, 39, 52, 71, 75, 87, 93, 132, 193, 203, 207, 230, 245, 246, 247, 248, 249, 301, 302, 305, 306, 307, 310, 312, 317], "state_spec": [3, 71, 75, 83, 87, 93, 98, 307, 312, 317], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 71, 75, 86, 87, 93, 120, 133, 136, 138, 140, 305, 312], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 68, 71, 75, 81, 83, 87, 88, 89, 93, 98, 100, 105, 108, 115, 124, 161, 181, 183, 192, 198, 203, 204, 217, 220, 233, 235, 237, 293, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "reward_spec": [3, 71, 75, 83, 87, 93, 98, 99, 103, 104, 105, 106, 108, 125, 126, 127, 135, 137, 151, 169, 307, 311, 312, 317], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 108, 115, 122, 124, 125, 126, 127, 128, 131, 135, 137, 139, 140, 141, 147, 150, 151, 169, 197, 212, 216, 217, 219, 220, 222, 225, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 274, 275, 277, 279, 297, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "done_spec": [3, 71, 75, 87, 93, 105, 106, 108, 135, 307, 311, 312, 317], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 202, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 301, 311, 312, 313], "input_spec": [3, 71, 75, 83, 87, 93, 104, 105, 106, 107, 117, 122, 127, 128, 130, 135, 136, 137, 151, 169, 311, 312], "full_action_spec": [3, 71, 75, 87, 93, 311], "full_state_spec": [3, 71, 75, 87, 93], "lock": [3, 26, 28, 71, 75, 87, 93, 132, 141, 312], "modifi": [3, 7, 8, 26, 28, 32, 45, 71, 75, 87, 93, 104, 111, 115, 120, 132, 135, 136, 138, 140, 197, 202, 206, 284, 290, 305, 306, 307, 311, 312], "directli": [3, 4, 8, 71, 75, 83, 87, 93, 124, 230, 297, 301, 307, 311, 312, 314], "output_spec": [3, 71, 75, 87, 93, 104, 106, 115, 122, 135, 136, 311, 312], "full_observation_spec": [3, 71, 75, 87, 93], "full_reward_spec": [3, 71, 75, 87, 93, 311], "full_done_spec": [3, 71, 75, 87, 93, 311], "importantli": [3, 203, 207], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 69, 70, 71, 74, 75, 80, 82, 83, 87, 91, 92, 93, 98, 100, 124, 141, 151, 152, 153, 154, 155, 158, 161, 162, 163, 166, 167, 169, 172, 175, 176, 177, 178, 179, 180, 181, 189, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 211, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 263, 301, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317], "action_s": 3, "help": [3, 4, 32, 71, 75, 87, 93, 300, 302, 305, 306, 307, 308, 311], "prealloc": [3, 312], "With": [3, 82, 131, 303, 305, 306, 311, 314, 317], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 71, 72, 75, 79, 83, 87, 88, 89, 93, 101, 102, 103, 105, 106, 107, 108, 109, 111, 115, 116, 117, 120, 121, 127, 128, 132, 135, 136, 138, 140, 141, 150, 152, 165, 166, 167, 170, 171, 172, 190, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 259, 260, 261, 262, 276, 278, 281, 283, 285, 290, 293, 297, 300, 305, 306, 307, 308, 310, 311, 312, 314, 316, 317], "instanti": [3, 21, 34, 36, 39, 79, 87, 93, 135, 172, 305, 306, 311, 312, 314, 317], "0s": [3, 132, 308], "stateless": [3, 135, 305, 312, 317], "set_se": [3, 13, 14, 16, 17, 21, 68, 71, 75, 81, 83, 87, 93, 117, 122, 136, 312, 316, 317], "seed": [3, 13, 14, 16, 17, 21, 69, 71, 75, 83, 87, 88, 89, 93, 94, 95, 98, 105, 108, 136, 143, 281], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 68, 71, 72, 75, 81, 83, 87, 91, 92, 93, 94, 95, 100, 105, 108, 114, 115, 122, 124, 131, 132, 141, 147, 150, 151, 165, 169, 183, 212, 216, 217, 219, 220, 222, 223, 228, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 275, 277, 279, 305, 306, 308, 310, 312, 313, 314, 316, 317], "determinist": [3, 32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 153, 162, 176, 183, 192, 206, 207, 210, 217, 301, 305, 306, 308, 312, 317], "preced": [3, 166, 308], "without": [3, 7, 9, 32, 40, 71, 75, 87, 93, 98, 105, 108, 134, 194, 195, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 249, 293, 300, 301, 305, 306, 307, 311, 312, 314, 317], "risk": [3, 121], "overlap": [3, 41], "consecut": [3, 62, 79, 165, 202, 308, 311, 317], "still": [3, 9, 130, 196, 229, 230, 305, 306, 308, 310, 312, 314, 317], "reproduc": [3, 100, 143, 305, 307, 311], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 71, 75, 87, 93, 107, 125, 130, 131, 133, 186, 187, 188, 210, 217, 222, 228, 230, 231, 235, 278, 305, 306, 307, 308, 311, 314], "max_step": [3, 13, 71, 75, 83, 87, 93, 94, 95, 130, 311, 316, 317], "n": [3, 6, 7, 24, 27, 32, 33, 40, 71, 75, 87, 93, 100, 107, 111, 137, 169, 202, 207, 216, 222, 230, 244, 278, 301, 303, 306, 307, 308, 311, 314, 317], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 83, 115, 161, 165, 169, 180, 181, 189, 190, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 208, 209, 210, 212, 217, 219, 222, 224, 225, 226, 228, 230, 233, 235, 237, 243, 244, 245, 246, 247, 248, 277, 293, 301, 305, 307, 308, 310, 311, 312, 313], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 71, 72, 75, 87, 88, 89, 93, 98, 111, 120, 121, 124, 136, 138, 141, 143, 152, 158, 167, 174, 197, 206, 207, 208, 209, 216, 217, 219, 220, 222, 228, 230, 232, 233, 234, 235, 237, 245, 269, 281, 300, 305, 306, 307, 311, 312, 314, 316, 317], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 71, 75, 77, 86, 87, 93, 100, 138, 141, 165, 204, 216, 217, 219, 220, 222, 228, 230, 232, 233, 234, 235, 237, 240, 305, 308, 314, 316], "mark": [3, 16, 71, 75, 87, 93, 165], "trail": [3, 141], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 71, 72, 75, 82, 86, 87, 88, 89, 93, 101, 121, 132, 133, 141, 150, 162, 165, 166, 202, 218, 222, 225, 229, 230, 232, 233, 237, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 281, 301, 302, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "treat": 3, "figur": [3, 305, 307, 308, 311, 312, 317], "summar": [3, 312], "brief": [3, 307], "popul": [3, 38, 114, 132, 305, 307, 308, 312, 314], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 71, 75, 87, 93, 100, 102, 103, 105, 108, 111, 114, 117, 120, 122, 124, 130, 132, 140, 141, 150, 170, 171, 197, 198, 204, 205, 217, 235, 245, 246, 247, 248, 301, 305, 307, 308, 311, 312, 313, 314], "deliveri": 3, "step_mdp": [3, 165, 299, 308, 312, 316, 317], "nasium": 3, "recent": [3, 7, 11, 317], "shift": [3, 32, 213, 245, 246, 247, 248, 307], "termin": [3, 7, 32, 40, 52, 208, 305, 306, 307, 312, 316], "trust": [3, 165], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 71, 75, 87, 93, 116, 130, 188, 251, 305, 307, 317], "refer": [3, 7, 8, 9, 21, 32, 40, 71, 75, 87, 93, 136, 141, 151, 161, 162, 169, 170, 171, 176, 177, 182, 183, 199, 216, 223, 224, 225, 226, 232, 245, 250, 258, 305, 307, 311, 317], "stepcount": [3, 13, 71, 75, 87, 93, 135, 305, 306, 307, 308, 311, 316], "chosen": [3, 131, 132, 180, 181, 189, 205, 290, 301], "someth": [3, 32, 71, 75, 82, 87, 93, 300, 306, 307, 312, 317], "els": [3, 176, 301, 303, 305, 306, 307, 308, 311, 312, 313], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 71, 75, 87, 93, 103, 117, 124, 199, 273, 293, 306, 307, 308, 310, 311, 312, 314, 316, 317], "truncated_kei": [3, 130], "look": [3, 5, 7, 8, 32, 71, 75, 82, 87, 88, 89, 93, 120, 121, 138, 203, 207, 208, 209, 302, 307, 308, 311, 312, 313, 314, 316, 317], "assess": [3, 96, 305], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 299], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 111], "reli": [3, 216, 302, 305, 307, 312, 317], "traj_id": [3, 13, 14, 16, 23, 124, 308, 314, 316], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 71, 75, 87, 93, 132, 136, 150, 208, 209, 300, 305, 308], "context": [3, 5, 8, 32, 71, 72, 75, 86, 87, 93, 132, 137, 172, 173, 197, 241, 242, 245, 246, 247, 248, 250, 258, 277, 301, 302, 305, 306, 307, 311, 312, 313, 314], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 79, 82, 87, 88, 89, 93, 105, 108, 121, 167, 180, 207, 208, 209, 213, 245, 246, 247, 248, 301, 305, 306, 307, 310, 311, 312, 313, 314, 317], "inittrack": [3, 165, 305, 308], "our": [3, 7, 8, 18, 100, 301, 305, 306, 307, 308, 310, 311, 313, 314, 316], "tutori": [3, 305, 306, 308, 309, 310, 312, 313, 314, 315, 317], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 71, 72, 75, 78, 87, 93, 152, 167, 172, 302, 303, 305, 306, 307, 308, 311, 312, 314], "design": [3, 13, 14, 32, 33, 71, 75, 87, 93, 100, 121, 136, 197, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 305, 306, 307, 308, 310, 311, 312, 314, 317], "scratch": [3, 8, 306, 312], "better": [3, 8, 9, 165, 302, 307, 312], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 71, 75, 82, 87, 88, 89, 91, 92, 93, 100, 111, 115, 132, 137, 141, 152, 162, 163, 165, 167, 173, 174, 207, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 297, 301, 305, 306, 307, 308, 312, 314, 317], "intens": [3, 8], "gym3": 3, "envpool": [3, 84, 85], "interfac": [3, 78, 86, 167, 173, 301, 305, 307, 312, 314], "simultan": [3, 20, 87, 93, 312], "often": [3, 8, 227, 281, 305, 306, 312, 314, 317], "competit": [3, 311], "advantag": [3, 8, 163, 216, 218, 229, 232, 234, 245, 246, 247, 248, 249, 250, 252, 254, 256, 258, 259, 261, 302, 303, 305, 306, 307, 308, 311, 312, 317], "scale": [3, 4, 52, 100, 115, 117, 126, 131, 134, 162, 164, 175, 182, 183, 187, 188, 193, 194, 195, 203, 207, 209, 216, 217, 228, 232, 233, 234, 235, 279, 285, 290, 297, 301, 305, 306, 307, 308, 311, 316], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 71, 75, 83, 87, 88, 89, 93, 96, 100, 115, 131, 135, 136, 141, 152, 170, 171, 172, 196, 198, 203, 204, 207, 210, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 281, 293, 303, 305, 306, 307, 308, 311, 312, 313, 314, 317], "own": [3, 13, 14, 17, 22, 32, 71, 75, 87, 88, 89, 93, 306, 307, 311, 312], "As": [3, 4, 71, 75, 82, 87, 88, 89, 93, 124, 207, 245, 301, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317], "inherit": [3, 168, 230, 303, 307, 311], "serialenv": [3, 71, 75, 87, 132, 299, 317], "enjoi": 3, "exact": 3, "Of": [3, 7, 300, 312, 317], "cours": [3, 4, 300, 307, 312, 317], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 71, 75, 83, 84, 87, 93, 120, 132, 136, 140, 141, 165, 170, 171, 200, 202, 203, 207, 220, 222, 243, 245, 246, 247, 248, 249, 305, 306, 307, 311, 312, 313], "count": [3, 72, 130, 202, 277, 281, 284, 305, 306, 307, 308, 314, 317], "def": [3, 11, 22, 32, 71, 72, 75, 83, 87, 93, 98, 105, 108, 151, 161, 169, 211, 217, 219, 222, 228, 230, 233, 235, 237, 303, 305, 306, 310, 311, 312, 316, 317], "make_env": [3, 95, 141, 286, 287, 305, 306, 317], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 71, 72, 75, 77, 87, 93, 100, 103, 104, 114, 115, 117, 122, 124, 132, 135, 136, 141, 165, 290, 293, 299, 301, 305, 306, 307, 308, 313, 314, 316, 317], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 71, 72, 75, 84, 87, 93, 100, 103, 114, 115, 117, 122, 124, 132, 135, 165, 240, 254, 255, 256, 257, 259, 260, 261, 262, 301, 306, 308, 312, 314, 316, 317], "from_pixel": [3, 69, 70, 100, 290, 305, 306, 308, 313, 314, 316, 317], "9": [3, 7, 32, 35, 38, 41, 82, 88, 89, 131, 141, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 238, 243, 302, 305, 306, 307, 308, 311, 312, 314, 315], "81": [3, 305, 306, 312], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 68, 71, 75, 78, 81, 83, 87, 90, 91, 92, 93, 98, 99, 100, 101, 103, 104, 106, 107, 115, 116, 117, 120, 124, 131, 132, 134, 135, 136, 138, 140, 141, 143, 151, 152, 154, 155, 157, 158, 162, 164, 165, 167, 169, 171, 172, 173, 174, 175, 178, 182, 183, 186, 187, 188, 190, 192, 196, 197, 199, 200, 202, 205, 206, 209, 210, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 248, 251, 252, 253, 272, 279, 293, 297, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 71, 72, 75, 87, 88, 89, 93, 103, 112, 115, 117, 132, 136, 137, 141, 152, 161, 165, 167, 170, 171, 172, 181, 192, 198, 199, 203, 204, 205, 206, 207, 210, 211, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 236, 237, 243, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 305, 306, 307, 308, 310, 312, 314, 316], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 105, 106, 107, 108, 114, 117, 122, 124, 132, 134, 141, 147, 150, 152, 158, 161, 167, 170, 171, 172, 175, 178, 181, 192, 193, 194, 195, 197, 198, 200, 202, 204, 206, 209, 211, 230, 290, 293, 301, 303, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "simpli": [3, 6, 34, 36, 39, 45, 109, 128, 230, 301, 302, 305, 307, 311, 317], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 172, 173, 174, 180, 189, 210, 245, 246, 247, 248, 249, 251, 264, 301, 306, 314], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 117, 134, 306, 314], "d": [3, 35, 53, 54, 58, 207, 316], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 72, 87, 93, 98, 101, 105, 107, 108, 115, 117, 121, 131, 132, 134, 141, 192, 200, 203, 204, 207, 245, 246, 247, 248, 249, 268, 301, 305, 306, 307, 308, 311, 312, 314, 316, 317], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 306, 311, 312], "_reset": [3, 71, 75, 83, 87, 93, 98, 100, 105, 108, 151, 169, 310], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 69, 71, 72, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 101, 104, 105, 108, 111, 114, 115, 116, 117, 120, 121, 122, 124, 126, 132, 134, 135, 136, 137, 138, 140, 141, 143, 150, 151, 152, 154, 161, 164, 165, 167, 169, 170, 171, 172, 180, 181, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 216, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 245, 246, 247, 248, 254, 255, 256, 257, 259, 260, 261, 262, 274, 275, 277, 278, 279, 281, 290, 297, 301, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 105, 108, 122, 124, 132, 136, 150, 151, 161, 165, 169, 180, 181, 189, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 209, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 285, 290, 300, 301, 306, 307, 308, 310, 311, 312, 313, 314, 316], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 68, 69, 70, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 105, 107, 108, 111, 115, 116, 117, 120, 122, 124, 126, 132, 134, 136, 137, 138, 140, 141, 143, 150, 151, 152, 154, 155, 164, 165, 167, 169, 172, 173, 174, 187, 188, 192, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 245, 246, 247, 248, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 274, 275, 277, 278, 279, 281, 290, 297, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "pixel": [3, 7, 26, 100, 102, 111, 113, 117, 120, 123, 134, 138, 140, 154, 176, 177, 264, 290, 301, 305, 306, 308, 313, 314, 316, 317], "500": [3, 305, 306, 312, 316], "uint8": [3, 47, 134, 306, 313, 314, 316], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 108, 111, 113, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 216, 217, 219, 220, 222, 223, 224, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 290, 293, 295, 296, 297, 301, 303, 305, 306, 307, 308, 311, 312, 314, 316], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 105, 108, 122, 124, 132, 141, 150, 151, 161, 165, 169, 180, 181, 189, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 209, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 290, 301, 307, 308, 310, 311, 312, 313, 314, 316], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 93, 141, 165, 202, 203, 207, 305, 306, 310, 311, 317], "launch": [3, 18, 19, 20, 22], "quit": [3, 301, 305, 306, 307, 311, 317], "mani": [3, 4, 38, 71, 216, 218, 222, 229, 232, 233, 237, 301, 305, 306, 307, 311, 312, 314, 317], "start": [3, 4, 5, 13, 21, 45, 72, 82, 150, 276, 305, 306, 311, 312, 314, 317], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 71, 75, 87, 93, 132, 141, 208, 209, 307, 308, 311, 312, 317], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 71, 75, 87, 93, 124, 136, 196, 202, 279, 303, 306, 307, 308, 312, 314, 317], "great": [3, 7, 8, 316], "speedup": [3, 8, 317], "precis": [3, 150, 305, 307], "anoth": [3, 8, 34, 36, 39, 71, 75, 79, 87, 93, 105, 106, 108, 132, 135, 167, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 301, 302, 305, 307, 308, 310, 311, 312, 317], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 71, 75, 79, 87, 93, 121], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 71, 72, 75, 84, 87, 93, 100, 105, 108, 120, 124, 133, 140, 141, 150, 198, 202, 206, 236, 245, 246, 247, 248, 249, 251, 281, 283, 297, 300, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 96, 110, 116, 124, 136, 143, 196, 200, 202, 305, 307, 311, 314], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 78, 100, 103, 105, 108, 115, 122, 141, 143, 147, 172, 175, 190, 245, 246, 247, 248, 272, 280, 310, 311, 314, 317], "mismatch": [3, 306], "mostli": [3, 17, 302, 314, 317], "purpos": [3, 7, 100, 293, 305, 307, 308, 311, 313, 317], "want": [3, 6, 7, 8, 117, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 301, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317], "subprocess": [3, 72], "addit": [3, 4, 32, 52, 71, 75, 84, 87, 93, 104, 120, 132, 135, 136, 138, 140, 196, 197, 206, 215, 230, 245, 302, 305, 306, 311, 314], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 84, 85, 314], "multithreadedenv": [3, 299], "underneath": 3, "higher": [3, 4, 103, 210, 305, 306, 307, 314, 317], "restrict": [3, 306, 313, 314, 317], "flexibl": [3, 9, 84, 238, 302, 303, 314, 317], "cover": [3, 300, 307, 312, 316], "popular": [3, 301, 308, 311], "atari": [3, 4, 100, 317], "classic": [3, 83, 89, 306], "benchmark_batched_env": 3, "py": [3, 180, 189, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317], "pipelin": [3, 7, 301, 307], "seamlessli": [3, 312], "modif": [3, 5, 26, 28, 32, 71, 75, 87, 93, 111, 230, 307, 312], "infrastructur": [3, 311], "view": [3, 8, 27, 32, 33, 71, 75, 87, 93, 98, 161, 167, 312, 314, 316, 317], "core": [3, 8, 290, 303, 308, 316], "decis": [3, 153, 179, 197, 221, 231, 308, 311, 314], "act": [3, 4, 88, 89, 172, 217, 219, 228, 233, 235, 237, 308, 311], "world": [3, 5, 83, 212, 225, 311, 312, 317], "paradigm": [3, 17, 311], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 71, 75, 87, 93, 107, 116, 125, 136, 143, 152, 165, 167, 172, 199, 203, 207, 216, 218, 219, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 240, 245, 277, 281, 302, 305, 306, 308, 311, 312, 317], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 71, 75, 83, 87, 93, 131, 136, 141, 230, 284, 301, 303, 305, 306, 307, 308, 311, 312, 314, 317], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 79, 87, 88, 89, 103, 162, 172, 200, 281, 295, 296, 305, 306, 307, 308, 311, 314, 316], "accommod": [3, 13, 14, 16, 17], "thank": [3, 305], "carrier": [3, 307, 308, 314], "particular": [3, 32, 45, 52, 71, 75, 87, 93, 136, 302, 303, 306, 308, 310, 311, 314], "carri": [3, 21, 45, 71, 75, 87, 93, 132, 230, 306, 308, 311, 312, 314], "thu": [3, 229, 311], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 82, 88, 89, 96, 301, 306, 307, 311], "hand": [3, 7, 21, 311, 312], "kept": [3, 13, 14, 16, 17, 62, 87, 93, 107, 135, 143, 150, 164, 187, 188], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 71, 75, 87, 93, 106, 132, 134, 136, 143, 165, 167, 172, 203, 206, 207, 209, 210, 215, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 245, 246, 247, 248, 272, 283, 295, 296, 297, 301, 303, 305, 306, 307, 308, 311, 312, 314, 317], "let": [3, 6, 7, 32, 43, 71, 75, 87, 88, 89, 93, 100, 165, 172, 198, 277, 302, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "understand": [3, 8, 305, 306, 311], "go": [3, 7, 82, 121, 124, 197, 251, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "vma": [3, 94, 95, 311], "robot": [3, 5, 7, 120, 138, 140, 311], "what": [3, 8, 35, 44, 71, 75, 87, 93, 132, 150, 204, 300, 301, 302, 306, 307, 308, 311, 312, 313, 314, 316, 317], "vmasenv": [3, 299, 311], "balanc": [3, 305, 306], "num_env": [3, 21, 78, 94, 95, 311], "n_agent": [3, 94, 95, 172, 180, 189, 243, 311], "5": [3, 24, 26, 28, 35, 38, 41, 42, 72, 81, 84, 91, 92, 94, 95, 124, 151, 152, 161, 162, 164, 166, 167, 169, 172, 176, 181, 187, 188, 197, 198, 204, 210, 229, 232, 234, 237, 301, 305, 306, 308, 311, 312, 314, 316, 317], "td": [3, 15, 26, 67, 68, 69, 70, 74, 76, 80, 81, 98, 101, 105, 106, 107, 108, 114, 115, 117, 124, 131, 132, 134, 136, 141, 150, 151, 161, 165, 168, 169, 180, 181, 189, 192, 193, 194, 195, 197, 198, 200, 202, 203, 204, 206, 209, 211, 243, 246, 247, 248, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 272, 280, 290, 301, 302, 305, 308, 311, 312, 316, 317], "info": [3, 35, 38, 41, 42, 52, 53, 71, 75, 87, 88, 89, 90, 91, 92, 93, 94, 95, 138, 142, 311, 314], "ground_rew": 3, "pos_rew": [3, 311], "16": [3, 32, 71, 75, 87, 93, 100, 305, 306, 307, 308, 312, 313, 314, 315], "root": [3, 26, 28, 100, 150, 164, 187, 188, 308, 311, 312, 314, 317], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 111, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 306, 312], "vari": [3, 88, 89, 121, 311], "creation": [3, 87, 93, 305, 317], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 71, 75, 87, 93, 120, 124, 127, 136, 140, 175, 181, 199, 203, 205, 206, 207, 245, 246, 247, 248, 272, 284, 305, 306, 307, 308, 311, 312, 314, 316, 317], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 72, 124, 134, 141, 229, 237, 302, 303, 305, 307, 308, 311, 312, 314, 316], "append": [3, 8, 35, 38, 41, 42, 52, 53, 72, 103, 124, 132, 165, 198, 204, 305, 306, 307, 308, 311, 312, 313, 314, 316], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 71, 75, 87, 93, 98, 220, 222, 243, 299, 307, 311], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 71, 75, 79, 82, 87, 88, 89, 91, 92, 93, 141, 300, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "simpl": [3, 9, 32, 33, 71, 75, 87, 93, 154, 207, 220, 230, 234, 245, 301, 302, 305, 306, 307, 311, 317], "composit": [3, 26, 28, 71, 75, 87, 93, 307, 312], "prefix": [3, 23, 32, 34, 36, 39, 45, 71, 75, 87, 93, 136, 230, 263, 308, 317], "exactli": [3, 32, 71, 75, 77, 87, 93, 136, 305, 308, 311], "action_kei": [3, 15, 71, 75, 87, 93, 98, 107, 150, 151, 168, 169, 196, 200, 202, 311], "reward_kei": [3, 71, 75, 87, 93, 150, 151, 169, 275, 279, 311], "done_kei": [3, 71, 75, 87, 93, 150, 311], "automat": [3, 5, 55, 56, 65, 71, 75, 87, 88, 89, 93, 105, 108, 117, 192, 203, 301, 305, 307, 311, 312, 314, 316], "right": [3, 6, 7, 40, 166, 306, 307, 311, 312, 317], "sure": [3, 4, 7, 53, 63, 79, 124, 198, 297, 301, 305, 307, 308, 311, 312, 314, 316, 317], "set_kei": [3, 216, 217, 218, 220, 222, 223, 228, 229, 230, 232, 233, 234, 235, 243, 249, 311], "awai": [3, 307, 311], "eas": [3, 311], "access": [3, 7, 8, 32, 35, 53, 71, 75, 87, 93, 120, 138, 297, 300, 305, 311, 312, 314], "leaf": [3, 26, 28, 71, 75, 87, 93, 207, 311], "abov": [3, 7, 32, 71, 75, 87, 93, 164, 187, 188, 215, 302, 303, 305, 307, 311, 312, 317], "would": [3, 32, 40, 71, 75, 87, 93, 165, 167, 303, 306, 307, 308, 312, 314, 317], "full": [3, 71, 75, 87, 93, 199, 272, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "raw": [3, 4, 40, 164, 187, 188, 306, 312], "logic": 3, "torchvis": [3, 120, 140, 316, 317], "transformedenv": [3, 13, 71, 72, 75, 87, 93, 98, 100, 103, 104, 105, 108, 111, 114, 115, 116, 117, 122, 124, 132, 135, 141, 165, 290, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "primit": [3, 4, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237], "built": [3, 5, 7, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 238, 243, 291, 293, 294, 297, 305, 306, 307, 308, 314, 317], "base_env": [3, 98, 103, 105, 107, 108, 115, 132, 305, 306, 307, 313, 316, 317], "totensorimag": [3, 100, 306, 308, 314, 316, 317], "in_kei": [3, 13, 14, 16, 17, 21, 83, 99, 100, 101, 102, 103, 105, 107, 108, 111, 113, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 131, 133, 134, 135, 136, 138, 140, 141, 151, 160, 165, 169, 180, 189, 190, 192, 193, 194, 195, 197, 198, 203, 204, 206, 207, 209, 210, 211, 216, 217, 218, 219, 220, 222, 228, 229, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 263, 264, 290, 293, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "resiz": [3, 100, 306, 308, 314, 317], "64": [3, 100, 154, 155, 163, 165, 172, 180, 243, 305, 306, 307, 308, 310, 312, 314, 316, 317], "now": [3, 7, 35, 100, 172, 305, 306, 307, 308, 310, 311, 313, 314, 317], "appar": [3, 274], "bring": [3, 307, 317], "signific": [3, 5, 8, 307, 317], "kind": [3, 38, 44, 150, 314], "consult": 3, "interest": [3, 203, 207, 301, 306, 307, 311, 312, 317], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 83, 99, 100, 101, 102, 103, 111, 113, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 131, 133, 134, 135, 138, 140, 151, 160, 161, 165, 169, 180, 181, 189, 190, 192, 193, 194, 195, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 216, 217, 218, 222, 228, 229, 232, 233, 234, 235, 243, 245, 246, 247, 248, 277, 293, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "easi": [3, 5, 53, 196, 200, 202, 301, 302, 305, 306, 307, 311, 313, 314, 317], "graph": [3, 4, 8, 241, 242, 305, 312], "inv": [3, 103, 107, 124, 312], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 87, 93, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 119, 121, 122, 124, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 141, 187, 198, 245, 276, 303, 305, 306, 307, 312, 316, 317], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 136, 192, 198, 206, 208, 209, 211, 216, 217, 219, 222, 228, 232, 233, 234, 235, 237, 306, 311], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 104, 107, 152, 209, 317], "taken": [3, 71, 75, 87, 93, 170, 171, 302, 305, 307, 308, 311, 312], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 100, 105, 108, 117, 124, 214, 228, 312], "in_keys_inv": [3, 103, 105, 108, 117, 118, 122, 124, 135, 305, 310, 312, 317], "append_transform": [3, 35, 38, 41, 42, 52, 53, 120, 132, 138, 305, 308, 312, 316, 317], "doubletofloat": [3, 290, 305, 307, 310], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 105, 108, 117, 122, 124, 132, 134, 147, 150, 151, 161, 165, 169, 180, 181, 189, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 206, 209, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 290, 301, 307, 308, 310, 311, 312, 313, 314, 316], "float64": [3, 32, 71, 75, 87, 93, 94, 104, 105, 108, 120, 132, 135, 136, 138, 140, 206, 310], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 105, 108, 136, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 303, 305, 307, 314], "manipul": [3, 4, 8, 120, 138], "keep": [3, 4, 7, 8, 14, 42, 62, 117, 120, 140, 141, 150, 202, 274, 281, 305, 306, 307, 308, 311, 312, 314, 316, 317], "mind": [3, 311], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 107, 150, 200, 301, 314], "unexpect": [3, 32, 71, 75, 87, 93, 136, 317], "behviour": 3, "fortun": [3, 308], "eras": [3, 71, 75, 87, 93], "ident": [3, 13, 14, 16, 32, 87, 93, 172, 245, 246, 247, 248, 295, 296, 306, 311], "alreadi": [3, 8, 11, 32, 45, 71, 75, 87, 93, 132, 207, 245, 246, 247, 248, 305, 307, 311], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 71, 72, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 141, 197, 206, 278, 283, 284, 306, 307, 311, 312, 314], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 71, 75, 87, 93, 104, 105, 106, 108, 115, 122, 135, 136, 141, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 302, 305, 307, 308, 311, 312, 313, 314, 317], "happen": [3, 71, 75, 87, 93, 196, 306, 313, 317], "catfram": [3, 306], "hold": [3, 241, 242, 312, 314], "notic": [3, 100, 307, 312], "parenthood": 3, "reason": [3, 4, 8, 32, 71, 75, 87, 88, 89, 93, 120, 138, 165, 302, 305, 306, 307, 312, 314], "henc": [3, 35, 121, 301, 305, 307, 311, 312], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 312], "discret": [3, 24, 27, 30, 31, 33, 47, 71, 75, 87, 88, 89, 93, 107, 178, 181, 222, 223, 301, 306, 307, 311], "might": [3, 37, 131, 268, 300, 305, 317], "throughout": [3, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 307, 317], "action_mask": [3, 88, 89, 91, 92, 98], "filter": [3, 4, 45, 216, 217, 219, 222, 228, 232, 233, 235], "unavail": [3, 88, 89], "probabl": [3, 4, 8, 40, 159, 161, 165, 167, 170, 171, 178, 188, 200, 203, 207, 301, 306, 316], "categor": [3, 27, 31, 33, 88, 89, 98, 161, 178, 181, 198, 199, 204, 205, 220, 222, 243, 308], "probabilistictensordictmodul": [3, 115, 207, 208, 316], "tensordictsequenti": [3, 165, 198, 200, 208, 301, 305, 308, 310, 313, 316], "maskedcategor": [3, 171, 299], "linear": [3, 13, 14, 16, 17, 21, 32, 71, 75, 83, 87, 93, 104, 115, 120, 132, 135, 136, 138, 140, 151, 152, 161, 167, 169, 172, 173, 174, 175, 181, 182, 183, 192, 193, 194, 195, 200, 201, 202, 203, 204, 206, 209, 211, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 293, 301, 306, 310, 313, 316], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 170, 171, 178, 199, 222, 301], "dist": [3, 10, 170, 171, 178], "distribution_class": [3, 115, 193, 194, 195, 197, 203, 207, 209, 216, 217, 222, 228, 232, 233, 234, 235, 301, 305, 307, 311, 316], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 71, 75, 87, 88, 89, 93, 143, 165, 190, 193, 194, 195, 196, 202, 204, 212, 243, 301, 305, 306, 307, 308, 311, 317], "actionmask": 3, "updat": [3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 71, 75, 83, 87, 88, 89, 93, 98, 105, 107, 108, 131, 136, 139, 141, 151, 165, 169, 196, 200, 202, 203, 204, 205, 206, 207, 216, 217, 219, 220, 222, 223, 224, 227, 228, 230, 232, 233, 234, 235, 236, 237, 243, 245, 246, 247, 248, 249, 277, 281, 283, 286, 287, 292, 293, 303, 306, 307, 308, 311, 312, 314, 316, 317], "know": [3, 4, 9, 35, 38, 41, 42, 196, 233, 277, 305, 306, 307, 308, 311, 314], "your_base_env": 3, "mask_kei": [3, 98, 121], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 71, 75, 87, 93, 100, 115, 165, 173, 201, 216, 276, 307, 308, 311, 312, 314, 316], "enviorn": [3, 88, 89, 311], "itself": [3, 32, 71, 75, 87, 93, 230, 307], "log": [3, 4, 8, 40, 159, 160, 161, 170, 171, 178, 188, 198, 199, 203, 207, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 274, 275, 277, 281, 293, 301, 302, 303, 305, 306, 307, 311, 312, 316], "mission": 3, "irrespect": [3, 206, 207], "dmcontrol": [3, 305], "jumanji": [3, 80, 81], "natur": [3, 305, 308], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 71, 75, 87, 93, 111, 117, 121, 133, 152, 165, 166, 167, 170, 171, 176, 184, 190, 196, 197, 200, 207, 306, 307, 308, 311, 312, 313, 314, 316, 317], "special": [3, 301, 305, 308, 317], "statu": 3, "framework": [3, 4, 9, 22, 83, 316, 317], "Its": [3, 32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 141, 206, 249], "success": [3, 100, 135, 200, 306, 312, 314, 316], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 71, 75, 79, 87, 93, 115, 135, 196, 202, 305, 306, 307, 308, 310, 311, 312, 314, 317], "foundat": [3, 5, 88, 89, 307, 311], "inspir": [3, 312], "howev": [3, 5, 7, 32, 71, 75, 87, 93, 100, 127, 130, 131, 136, 301, 305, 306, 307, 308, 314, 317], "gone": [3, 4, 5], "sometim": [3, 308, 317], "hard": [3, 7, 227, 306, 317], "adopt": [3, 5, 305, 317], "prefer": [3, 17, 20, 35, 38, 41, 42, 121, 128, 232, 278, 301, 307, 311, 314], "moreov": 3, "maintain": [3, 5, 9, 312], "gymnasium": [3, 5, 11, 306, 307, 312, 316], "both": [3, 7, 32, 71, 72, 75, 87, 88, 89, 93, 100, 122, 136, 152, 165, 167, 172, 193, 194, 195, 199, 205, 216, 218, 219, 222, 228, 229, 230, 232, 233, 234, 235, 237, 277, 301, 305, 307, 311, 312, 313, 314, 317], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 306, 307, 308, 311, 312, 314, 317], "decor": [3, 8, 11, 230, 245, 246, 247, 248], "set_gym_backend": 3, "relev": [3, 40, 245, 246, 247, 248, 249, 312], "gym_backend": 3, "env1": [3, 310], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 71, 75, 87, 93, 120, 140, 169, 281, 303, 306], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7], "__init__": [3, 7, 83, 98, 105, 108, 151, 161, 169, 211, 217, 219, 222, 228, 233, 235, 237, 303, 312, 317], "env2": [3, 310], "_env": [3, 6, 317], "classic_control": 3, "pendulumenv": [3, 312], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 307], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 71, 75, 87, 93, 100, 101, 130, 132, 136, 152, 167, 170, 171, 172, 202, 204, 205, 213, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 285, 297, 300, 303, 307, 308, 312, 314, 317], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 77, 84, 87, 93, 121, 131, 132, 135, 136, 144, 145, 150, 162, 166, 183, 202, 223, 267, 303, 305, 306, 307, 308, 311, 312, 316, 317], "tell": [3, 4, 7, 88, 89, 305, 308, 311], "mo_gymnasium": 3, "handi": 3, "side": [3, 4, 317], "v0": [3, 74, 75, 76, 80, 81, 104, 136, 141, 293], "26": [3, 305, 306, 312], "fun": [3, 11, 307, 311], "reveal": 4, "bug": [4, 316], "curv": 4, "won": [4, 32, 71, 72, 75, 87, 93, 120, 140, 281, 297, 306, 307], "exploit": 4, "video": [4, 9, 264, 277, 297, 311], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 71, 75, 79, 87, 93, 121, 204, 306, 307, 308, 311, 312], "cv": 4, "flip": 4, "imag": [4, 7, 69, 102, 120, 134, 140, 167, 305, 306, 311, 313, 317], "correspondingli": 4, "prescript": 4, "tune": [4, 115, 311, 313], "coeffici": [4, 40, 115, 311], "bonu": [4, 216, 218, 229, 232], "beta": [4, 35, 41, 58, 228, 229, 305, 306, 314, 316], "altern": [4, 27, 84, 158, 170, 171, 215, 230, 305, 307, 311], "reduc": [4, 6, 27, 131, 306, 307], "downstream": [4, 305], "formul": [4, 311], "ob": [4, 8, 26, 28, 98, 105, 106, 108, 117, 134, 147, 150, 172, 204, 211, 217, 219, 222, 228, 233, 235, 237, 245, 246, 247, 248, 306, 310, 312, 316, 317], "rate": [4, 141, 244, 306, 307, 311], "gradient": [4, 32, 71, 75, 87, 93, 136, 164, 171, 174, 178, 187, 188, 216, 218, 219, 222, 228, 229, 230, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 281, 305, 307, 311, 312], "norm": [4, 8, 281, 305, 306, 307, 311, 312], "easier": [4, 301, 305], "behavior": [4, 32, 71, 75, 87, 93, 136, 228, 307, 311], "local": [4, 7, 10, 16, 21, 32, 71, 75, 87, 93, 136, 172, 180, 189, 243, 269, 311], "optima": 4, "sens": [4, 312], "product": [4, 9, 295, 296], "sum": [4, 21, 31, 33, 170, 171, 189, 225, 244, 251, 302, 305, 306, 307, 308, 311, 312, 317], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 127, 141, 202, 269, 274, 306, 308, 311, 312, 314], "stat": [4, 117, 285, 297, 306, 307], "w": [4, 100, 102, 123, 134, 202, 264, 306, 308, 314], "r": [4, 32, 98, 103, 117, 207, 215, 244, 301, 306, 312, 317], "yield": [4, 16, 21, 32, 71, 75, 87, 93, 230, 305], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 34, 36, 39, 71, 75, 87, 93, 136, 219, 220, 307, 311, 314], "futur": [4, 32, 71, 75, 87, 93, 120, 136, 140, 167, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 300, 316], "past": [4, 306, 314], "becom": [4, 21, 311, 317], "spars": [4, 308], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 71, 75, 87, 93, 127, 136, 173, 174, 202, 216, 218, 220, 223, 229, 232, 243, 306, 308, 314, 317], "intermedi": [4, 165, 199, 305, 313], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 305], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 71, 75, 87, 93, 167, 307, 311], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 71, 75, 87, 93, 100, 101, 105, 107, 108, 117, 124, 147, 150, 151, 165, 166, 170, 171, 172, 180, 189, 200, 202, 205, 213, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 251, 308, 316], "subtask": 4, "hierarch": [4, 316], "individu": [4, 18, 19, 20, 21, 32, 45, 71, 75, 87, 93, 305, 311], "select": [4, 15, 35, 38, 41, 42, 52, 53, 88, 89, 98, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 119, 121, 122, 124, 127, 128, 130, 131, 132, 133, 135, 138, 139, 141, 151, 165, 198, 204, 280, 305, 314], "fall": 4, "section": [4, 306, 311], "explicit": [4, 11, 45, 166, 314], "mechan": [4, 32, 71, 75, 87, 93, 136, 306, 312], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 71, 75, 87, 93, 228, 307, 311], "addition": 4, "timestep": [4, 40, 124, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 311], "realli": 4, "larg": [4, 27, 105, 108, 138, 306, 307, 311, 314], "target": [4, 8, 21, 32, 71, 72, 75, 87, 93, 131, 135, 206, 207, 216, 217, 218, 219, 220, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 284, 292, 293, 302, 303, 308, 312], "huge": [4, 172, 308], "std": [4, 117, 141, 175, 179, 196, 305, 317], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 308, 309, 310, 313, 314, 315], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 71, 75, 87, 93, 117, 120, 132, 135, 136, 138, 142, 151, 169, 173, 174, 196, 200, 202, 216, 217, 219, 220, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 290, 297, 306, 308, 312, 317], "estim": [4, 115, 193, 194, 195, 216, 217, 218, 219, 220, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 302, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "encount": [4, 300, 306, 312], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 88, 89, 305, 307, 311, 317], "bonus": 4, "denser": 4, "prior": [4, 183, 225, 311], "freshli": 4, "proper": [4, 6, 7, 245, 246, 247, 248, 306, 307, 311, 314], "doesn": [4, 11, 84, 105, 108], "drop": [4, 62, 150], "meant": [4, 83], "encourag": [4, 305, 306, 314], "measur": [4, 307], "novelti": 4, "revisit": 4, "previous": [4, 307, 317], "diminish": 4, "decreas": 4, "ideal": [4, 117, 312], "down": [4, 13, 14, 16, 17, 308], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 306, 307, 308, 311, 312, 316, 317], "distil": 4, "nois": [4, 142, 174, 191, 202, 233, 237, 277, 297, 305], "exploratori": [4, 216, 218, 229, 232], "could": [4, 6, 306, 307, 311, 313, 317], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 217, 219, 220, 222, 223, 228, 233, 235, 237, 243, 303, 305, 306, 314], "schedul": [4, 7, 40, 277, 307, 312], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 120, 140, 217, 219, 222, 233, 235, 237, 305, 306, 311, 314, 317], "divers": [4, 87, 93], "bootstrap": [4, 223, 246, 252, 253, 305, 308], "noisi": [4, 173, 174, 191, 301], "unstabl": [4, 164, 187, 188], "inher": 4, "stochast": [4, 115, 162, 174, 176, 183, 217, 221, 222, 228, 231, 233, 235, 301, 307, 311], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 165, 169, 193, 194, 195, 230, 233, 303, 306], "pomdp": [4, 314], "previou": [4, 10, 32, 40, 41, 132, 183, 197, 307, 308, 312, 317], "loos": [4, 301, 306, 307], "nonexist": 4, "architectur": [4, 158, 311], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 99, 100, 101, 102, 105, 107, 108, 111, 113, 117, 118, 121, 122, 123, 124, 125, 126, 127, 131, 133, 134, 135, 141, 152, 159, 161, 167, 170, 171, 172, 178, 181, 185, 197, 208, 209, 221, 263, 264, 276, 277, 278, 280, 281, 290, 301, 305, 307, 308, 310, 311, 317], "rather": [4, 122, 305, 306, 307, 311], "lstm": [4, 165, 166, 175], "explicitli": [4, 306, 308, 311, 314], "rel": [4, 132, 159, 186, 305, 306, 311, 314], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 100, 306, 307, 314, 316, 317], "compens": 4, "descent": [4, 174], "1000": [4, 38, 71, 75, 87, 93, 100, 141, 200, 202, 203, 207, 227, 305, 306, 307, 308, 313, 314], "minimum": [4, 125, 162, 175, 186, 187, 188, 210, 213, 215, 217, 222, 230, 231, 235, 272, 305, 307, 311], "manual": [4, 18, 20, 21, 305, 308, 314], "deviat": [4, 117, 141, 151, 162, 169, 173, 174, 196, 232, 237, 305, 311], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "stabil": [4, 112], "stage": [4, 305, 312], "never": 4, "prevent": [4, 26, 28, 164, 187, 188, 229, 232, 279, 314], "solv": [4, 9, 10, 300, 305, 306, 307, 311, 312, 314], "entir": [4, 307, 312, 314], "submit": [4, 300, 316], "suffici": [4, 305], "recommend": [4, 7, 79, 311], "system": [4, 5, 307, 311, 312], "adequ": [4, 143, 307, 311], "infeas": 4, "allevi": [4, 301], "prune": 4, "develop": [4, 7, 79, 305, 316], "fire": [4, 32, 71, 75, 87, 93], "certain": [4, 18, 20, 21, 32, 45, 71, 75, 87, 93, 112, 130, 136, 200, 229, 301, 305, 306, 307, 311, 317], "illeg": 4, "move": [4, 21, 32, 71, 75, 87, 93, 104, 106, 120, 132, 135, 136, 138, 140, 141, 150, 167, 206, 279, 305, 306, 308, 316, 317], "chess": 4, "combin": [4, 135, 306, 314], "grasp": 4, "releas": [4, 7, 10, 32, 71, 75, 87, 93, 136, 316], "top": [4, 151, 169], "p": [4, 72, 91, 92], "wherein": 4, "cumul": [4, 127, 131, 151, 251, 307], "q": [4, 9, 154, 155, 156, 157, 160, 161, 163, 180, 181, 189, 195, 199, 204, 205, 217, 219, 220, 222, 223, 227, 228, 233, 235, 237, 243, 290, 299, 305], "flow": [4, 305, 307, 311, 312, 314], "reparameter": [4, 159, 171, 178], "soft": [4, 227, 235, 236], "critic": [4, 8, 193, 201, 216, 218, 219, 222, 228, 229, 232, 233, 234, 235, 237, 305, 307], "clip": [4, 40, 103, 125, 218, 237, 281, 307, 311, 312], "oppos": [4, 45], "incorrect": 4, "thought": [4, 71, 75, 87, 93], "bound": [4, 17, 21, 25, 26, 32, 71, 75, 87, 93, 103, 116, 141, 182, 183, 192, 198, 199, 202, 203, 204, 205, 206, 207, 210, 237, 301, 305, 306, 307, 317], "region": 4, "squash": [4, 308, 316], "tanh": [4, 152, 164, 167, 172, 186, 187, 188, 210, 307, 311, 312, 313, 316], "correct": [4, 115, 131, 284, 307, 308], "prob": [4, 170, 171, 178, 307, 311], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 79, 106, 107, 115, 120, 136, 140, 203, 206, 207, 227, 230, 232, 290, 305, 310, 312, 317], "real": [5, 207, 302, 308, 312], "histor": 5, "wa": [5, 7, 71, 75, 87, 93, 136, 227, 236, 302, 306, 307, 310, 314, 316], "ceas": 5, "fork": 5, "farama": [5, 88, 89, 307, 312], "detail": [5, 6, 7, 32, 71, 75, 87, 88, 89, 93, 134, 136, 161, 199, 216, 223, 232, 300, 306, 310, 314], "usag": [5, 7, 52, 100, 165, 217, 228, 235, 238, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "known": [5, 7, 8, 252, 253, 305, 306], "bc": [5, 316], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 71, 75, 87, 93, 100, 124, 141, 306, 314, 316], "face": [5, 8, 9, 317], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 143, 192, 198, 199, 203, 204, 205, 206, 207, 307, 311], "13": [5, 10, 11, 90, 306, 311, 312, 314], "construct": [5, 32, 35, 38, 41, 42, 71, 75, 87, 88, 93, 105, 108, 143, 165, 183, 207, 281, 301, 306, 307, 308, 312, 314, 317], "best": [5, 9, 79, 165, 311, 314, 316], "gymwrapp": [5, 75, 299, 307, 316], "feel": [5, 300, 316], "free": [5, 7, 105, 108, 216, 225, 232, 303, 307, 311, 316], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 107, 305, 306, 307, 308, 311, 314], "prepar": [6, 307], "conda": [6, 7, 300], "assum": [6, 26, 33, 40, 41, 42, 52, 75, 87, 93, 102, 111, 120, 121, 127, 132, 138, 140, 147, 165, 166, 190, 210, 220, 223, 235, 243, 254, 255, 256, 257, 259, 260, 261, 262, 264, 305, 307, 308, 310, 312], "7": [6, 10, 27, 33, 35, 38, 41, 151, 152, 166, 167, 169, 251, 305, 306, 311, 312, 314, 315, 316, 317], "cmake": 6, "14": [6, 11, 117, 305, 306, 307, 311, 312, 314, 315], "activ": [6, 7, 9, 152, 158, 162, 167, 172, 218, 229, 232, 301, 316], "sim": 6, "bullet": 6, "physic": [6, 7, 90, 303, 305, 311, 312], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 300], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 308], "y": [6, 7, 86, 166, 190, 305, 307, 311], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 71, 75, 87, 93, 129, 230, 311, 317], "command": [6, 7, 10, 307, 311, 312, 317], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 299], "_has_habitat": 6, "available_env": [6, 67, 68, 69, 70, 74, 76, 80, 81, 91, 92, 317], "startswith": [6, 302, 305], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 70, 297, 303, 305, 314], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 72, 230, 305], "env_nam": [6, 67, 69, 74, 80, 84, 90, 305, 307, 317], "llvmlite": 6, "config": [6, 7, 120, 140, 153, 158, 179, 285, 286, 287, 290, 291, 294], "var": [6, 7, 32, 71, 75, 87, 93, 136, 230], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 68, 152, 154, 155, 163, 167, 193, 194, 195, 203, 206, 209, 228, 305, 306, 311, 312, 313, 314, 315, 316], "bind": 6, "deactiv": [6, 7, 198], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 71, 75, 87, 93, 136, 230, 314], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 306], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 310, 312], "joint": [7, 306], "dynam": [7, 228, 307, 312], "contact": [7, 37], "engin": [7, 90, 312], "biomechan": 7, "graphic": 7, "anim": [7, 311], "area": 7, "demand": [7, 317], "fast": [7, 9, 68, 122, 233, 305, 306, 307], "accur": [7, 52, 306, 312, 314], "articul": 7, "acquir": [7, 307], "deepmind": [7, 8, 9, 69, 70, 307], "whomev": 7, "licenc": 7, "incorpor": [7, 196, 200, 202, 308, 312], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 93, 116, 135, 264, 301, 302, 305, 306, 307, 311, 314, 317], "legaci": 7, "pro": [7, 300], "tip": [7, 300], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 317], "sudo": [7, 300], "enabl": [7, 8, 52, 55, 56, 65, 165, 202, 277, 307, 311, 312, 314], "apt": [7, 311], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 306, 308], "fact": [7, 8, 305, 307, 311, 312, 313, 314, 317], "workflow": [7, 193, 194, 195], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 71, 75, 87, 93, 120, 138, 140, 308, 317], "binari": [7, 24, 27, 33, 99, 161, 181, 198, 199, 204, 205, 220, 222, 243], "setup": [7, 79], "mkdir": 7, "cd": 7, "tag": [7, 264, 269, 297], "earlier": [7, 305, 307, 308, 311, 314], "roboti": 7, "download": [7, 10, 79, 120, 140, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317], "html": [7, 84], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 71, 75, 87, 93, 120, 131, 140, 151, 180, 278, 305, 307, 311], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54], "bin": [7, 161, 199, 301], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 157, 203, 207, 305, 307, 314], "nvidia": [7, 79], "older": [7, 11], "hack": [7, 305], "line": [7, 32, 71, 75, 87, 93, 306, 311, 317], "adatp": 7, "script": [7, 143, 290, 293, 297, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "unnot": [7, 121], "until": [7, 21, 135, 307, 308, 311], "complet": [7, 9, 62, 75, 100, 300, 302, 305, 307, 310], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 306, 314], "troubleshoot": 7, "gl": 7, "h": [7, 100, 102, 123, 134, 165, 169, 264, 306, 308, 314], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 72, 83, 88, 89, 91, 92, 94, 95, 98, 100, 131, 134, 151, 153, 158, 166, 169, 179, 190, 200, 202, 210, 217, 220, 222, 232, 233, 234, 237, 243, 245, 246, 247, 248, 251, 272, 303, 305, 306, 307, 308, 311, 312, 314, 316, 317], "fatal": 7, "No": 7, "directori": [7, 45, 55, 269, 303], "devel": 7, "ubuntu": [7, 79], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 306, 307, 308, 312, 314, 315], "disappear": [7, 306, 308, 310], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 81, 91, 92, 117, 152, 159, 166, 167, 172, 176, 186, 211, 290, 305, 306, 308, 311, 312, 314, 315, 316], "glibcxx_3": 7, "29": [7, 306, 312], "compil": [7, 32, 71, 75, 87, 93], "libosmesa": 7, "libgcc": 7, "Then": [7, 307, 310], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 71, 75, 87, 93, 116, 136, 317], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 305, 306, 312], "114": [7, 312, 314], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 305, 312], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 98, 143], "opengl": [7, 311], "global": [7, 32, 71, 75, 87, 88, 89, 93, 180, 189, 203, 207, 243, 303, 305, 311], "cuda_visible_devic": 7, "id": [7, 23, 40, 202, 233, 267, 290], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 312], "displai": [7, 281, 303, 305, 306, 311, 312], "correctli": [7, 32, 71, 75, 87, 93], "lgl": 7, "libegl": 7, "x11": [7, 311], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 75, 150, 196, 200, 202, 232, 281, 303, 305, 306, 310, 314], "sketch": [8, 303], "_": [8, 72, 79, 101, 105, 107, 108, 115, 117, 122, 134, 141, 192, 206, 211, 215, 216, 217, 219, 222, 228, 232, 233, 235, 237, 245, 246, 247, 248, 305, 306, 307, 308, 311, 312, 314, 316], "n_training_step": 8, "datapoint": [8, 45, 314], "onlin": [8, 13, 17, 100, 158, 179, 216, 221, 231, 232, 272, 297, 307, 308, 311, 314], "n_data_per_train": 8, "no_grad": [8, 32, 71, 75, 87, 93, 115, 245, 246, 247, 248, 307, 308, 311], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 278, 293, 305, 306, 307, 311, 314], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 124, 278, 303, 305, 306, 307, 308, 311, 313, 314, 316], "loss_fn": [8, 308, 316], "backward": [8, 32, 71, 75, 87, 93, 141, 216, 217, 219, 222, 228, 232, 233, 234, 235, 237, 305, 307, 308, 311, 312], "zero_grad": [8, 32, 71, 75, 87, 93, 303, 305, 307, 308, 311, 312], "backpropag": [8, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 311, 312], "differenti": [8, 45, 115, 245, 246, 247, 248, 308, 311, 312], "denomin": 8, "artifact": 8, "numer": [8, 38, 141, 164, 187, 188, 192, 198, 199, 203, 204, 205, 206, 207, 279, 307, 314, 317], "misconcept": 8, "save": [8, 32, 34, 36, 39, 71, 75, 87, 93, 263, 281, 303, 311], "freed": 8, "appear": [8, 33, 312, 314], "compuat": 8, "twice": 8, "fix": [8, 132, 217, 231, 235, 306, 312, 317], "retain_graph": 8, "discuss": [8, 9, 311], "inplac": [8, 32, 34, 36, 39, 71, 75, 87, 93, 136, 305], "accumul": 8, "onto": [8, 33, 147, 192, 196, 198, 199, 202, 203, 204, 205, 206, 207, 308, 312], "exclud": [8, 52, 100, 109, 150, 180, 311, 314], "forward": [8, 32, 71, 75, 87, 93, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 124, 127, 128, 130, 131, 132, 133, 135, 138, 139, 141, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 172, 173, 175, 176, 177, 179, 180, 182, 183, 185, 189, 190, 196, 197, 199, 200, 202, 205, 206, 207, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 302, 312, 316], "submodul": [8, 32, 71, 75, 87, 93, 230], "param": [8, 32, 40, 71, 75, 83, 87, 93, 104, 106, 115, 122, 135, 159, 161, 186, 197, 203, 206, 209, 211, 230, 239, 242, 245, 246, 247, 248, 249, 305, 311, 312, 313, 316], "grad": [8, 32, 71, 75, 87, 93, 305, 307], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 87, 88, 89, 93, 104, 120, 132, 135, 136, 138, 140, 175, 180, 206], "strictli": [8, 32, 71, 75, 87, 93, 136, 305, 307], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 100, 111, 121, 137, 224, 302, 307, 311, 312], "ask": [8, 305, 307, 308, 311, 313, 317], "much": [8, 35, 41, 58, 229, 232, 307, 311, 312, 314, 317], "render": [8, 277, 305, 306, 307], "upon": [8, 312], "factor": [8, 32, 124, 164, 174, 187, 188, 196, 200, 202, 217, 223, 224, 226, 236, 251, 305, 306, 311, 314, 317], "fit": [8, 11, 117, 302, 303, 305], "everi": [8, 17, 26, 28, 32, 33, 63, 71, 75, 87, 93, 131, 141, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 281, 303, 305, 306, 307, 308, 311, 312], "bottlneck": 8, "affect": [8, 32, 71, 75, 87, 93, 135, 136, 143, 245, 246, 247, 248], "brax": [8, 67, 68, 122, 317], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 71, 75, 87, 93, 110, 136, 170, 171, 219, 220, 272, 302, 303, 305, 307, 308, 311, 312, 314], "underli": [8, 71, 75, 87, 93, 230, 312], "tedeiou": 8, "priorit": [8, 35, 41, 58, 217, 219, 220, 222, 228, 233, 235, 237, 305, 306], "amount": [8, 202, 306, 314], "isn": [8, 34, 36, 39, 198, 206, 311], "contigu": [8, 71, 75, 87, 93, 147, 307, 311, 312, 314, 316], "costli": [8, 312], "concaten": [8, 21, 30, 31, 100, 101, 117, 135, 167, 209, 305, 306, 311, 312, 314, 317], "constitut": [8, 306, 311, 312], "plain": 8, "profil": 8, "fulli": [8, 32, 71, 75, 87, 93, 306, 312, 314], "frequent": [8, 314], "program": [8, 228, 317], "functorch": [8, 10], "incl": 8, "suit": [8, 70, 307, 317], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 206, 209, 230, 311, 312, 316], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 84, 152, 167, 172, 230, 307, 312, 316], "lost": 8, "permut": [8, 62, 316, 317], "idea": [9, 233, 303, 308, 311], "introductori": 9, "intro": [9, 307, 308], "dai": [9, 316], "2022": [9, 10, 312, 316], "spin": 9, "deep": [9, 100, 154, 155, 156, 157, 160, 202, 216, 227, 235, 236, 305], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 117, 141, 305, 306, 307, 308], "reddit": 9, "reagent": 9, "orient": [9, 317], "baselines3": 9, "tf": 9, "bandit": [9, 86], "tensorflow": [9, 170, 171], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 71, 75, 87, 93, 115, 208, 209, 232, 301, 307, 308, 311, 312, 313, 317], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 316], "grade": 9, "factori": [9, 43], "throughput": [9, 305], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 71, 75, 87, 93, 103, 107, 147, 158, 161, 177, 181, 192, 196, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 211, 220, 222, 237, 243, 301, 306, 307, 308, 311, 312, 316, 317], "mbrl": [9, 83, 301], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 312], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 307, 308, 311], "notebook": [10, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317], "24": [10, 306, 307, 312, 314], "11": [10, 27, 33, 45, 55, 56, 65, 72, 134, 151, 169, 305, 306, 307, 308, 311, 312, 314, 315], "12": [10, 55, 56, 65, 91, 92, 305, 306, 307, 308, 312, 314], "pip": [10, 53, 311, 316, 317], "pip3": [10, 307, 308, 311], "extra": [10, 32, 71, 75, 87, 93, 100, 141, 150, 301, 307, 308, 314], "url": 10, "org": [10, 35, 58, 100, 120, 138, 153, 154, 155, 156, 157, 158, 161, 162, 163, 169, 170, 171, 174, 176, 177, 179, 180, 182, 183, 189, 199, 202, 216, 217, 221, 223, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 245, 250, 258, 313], "whl": 10, "u": [10, 53, 312], "There": [10, 165, 301, 303, 307, 308, 311, 312, 314, 317], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 230], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 71, 75, 87, 93, 98, 99, 100, 101, 102, 105, 107, 108, 111, 113, 114, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 138, 140, 141, 150, 152, 154, 155, 156, 157, 159, 161, 163, 166, 167, 170, 171, 172, 173, 174, 178, 180, 181, 186, 187, 188, 189, 206, 222, 227, 233, 236, 258, 275, 277, 278, 286, 287, 290, 291, 293, 294, 295, 296, 297], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 69, 71, 73, 75, 86, 87, 88, 89, 90, 93, 96, 98, 99, 100, 101, 102, 105, 107, 108, 111, 113, 114, 115, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 138, 140, 141, 144, 148, 150, 151, 152, 154, 155, 156, 157, 160, 161, 163, 165, 166, 167, 168, 169, 172, 173, 174, 175, 180, 181, 189, 192, 198, 199, 203, 204, 205, 206, 207, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 247, 248, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 285, 290, 291, 297, 306, 307], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 71, 72, 75, 83, 87, 93, 215, 230, 286, 287, 295, 296, 297, 306], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 55, 56, 57, 63, 65, 79, 107, 197], "vs": [11, 165, 166, 316], "longer": [11, 306, 311, 314], "self": [11, 26, 28, 32, 34, 36, 39, 71, 75, 83, 87, 93, 98, 104, 105, 108, 120, 132, 135, 136, 138, 140, 151, 161, 169, 180, 189, 196, 200, 206, 211, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 303, 305, 306, 312, 316], "x": [11, 23, 26, 32, 38, 40, 115, 134, 152, 161, 163, 165, 166, 167, 169, 172, 190, 198, 204, 213, 215, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 281, 305, 307, 312, 314, 316], "23": [11, 306, 307, 312, 315], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 71, 72, 75, 87, 93, 115, 132, 190, 198, 204, 224, 226, 245, 248, 256, 257, 261, 262, 293, 302, 305, 306, 311, 314, 316, 317], "import_modul": 11, "27": [11, 306, 308, 310, 311, 312, 314, 315], "get_class_that_defined_method": 11, "f": [11, 75, 215, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 305, 306, 307, 308, 311, 312, 314, 317], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 88, 89, 93, 107, 117, 132, 136, 141, 164, 172, 187, 188, 198, 204, 210, 217, 225, 230, 231, 235, 277, 278, 303, 305, 306, 307, 308, 312, 317], "module_set": 11, "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 104, 120, 129, 135, 136, 137, 139, 140, 151, 152, 160, 165, 167, 168, 169, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 271, 274, 278, 281, 297, 306], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 71, 73, 75, 87, 93, 98, 100, 101, 104, 105, 106, 109, 110, 111, 114, 115, 116, 119, 121, 122, 124, 127, 128, 130, 131, 132, 133, 135, 139, 141, 150, 151, 165, 168, 169, 196, 197, 199, 200, 202, 205, 206, 207, 216, 217, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 248, 249, 281, 305, 312], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 72, 87, 93, 305, 316], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 71, 75, 83, 87, 88, 89, 93, 100, 101, 102, 107, 111, 112, 116, 117, 120, 121, 123, 129, 130, 133, 136, 137, 138, 140, 143, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 216, 217, 218, 222, 224, 225, 229, 230, 231, 232, 233, 237, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 272, 273, 274, 277, 278, 281, 283, 290, 291, 295, 296, 297, 312], "200": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 94, 95, 124, 154, 155, 162, 182, 183, 305, 308, 312], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 100, 124, 281, 284, 293, 303, 305, 306, 307, 308, 311, 314, 316], "create_env_kwarg": [13, 14, 16, 17, 72, 84, 87, 93, 305], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 71, 72, 75, 87, 88, 89, 93, 96, 115, 132, 136, 141, 152, 153, 154, 155, 156, 157, 158, 163, 166, 167, 179, 203, 207, 268, 269, 277, 286, 287, 290, 295, 296, 297, 305, 306, 307, 317], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 124, 306, 314], "interactiontyp": [13, 16, 18, 19, 20, 21, 145, 149, 203, 207, 277], "exploration_mod": [13, 16, 18, 19, 20, 299, 301], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 71, 75, 87, 93, 104, 105, 108, 115, 117, 120, 124, 125, 126, 131, 132, 134, 135, 136, 138, 140, 141, 159, 162, 164, 167, 170, 171, 173, 174, 182, 183, 186, 188, 196, 206, 210, 213, 214, 215, 216, 217, 222, 225, 226, 227, 228, 231, 233, 235, 236, 237, 244, 250, 251, 252, 253, 254, 255, 256, 257, 258, 279, 305, 306, 314, 317], "datacollector": [13, 14, 16, 17, 203, 207, 232, 307], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 192, 196, 198, 199, 202, 203, 204, 205, 206, 207, 209, 301, 316], "env_mak": [13, 14, 16, 21, 293, 317], "50": [13, 14, 16, 21, 37, 40, 305, 306, 307, 308, 310, 311, 312, 315], "2000": [13, 14, 16, 45, 78, 307, 314], "enumer": [13, 14, 16, 21, 32, 38, 42, 71, 75, 87, 93, 238, 302, 305, 306, 307, 308, 314, 316], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 124, 161, 181, 198, 199, 202, 204, 205, 301, 307, 308, 312, 314, 316], "step_count": [13, 14, 16, 71, 75, 87, 93, 130, 307, 308, 316], "shutdown": [13, 14, 16, 17, 21, 305, 316], "del": [13, 14, 16, 305, 307, 310, 316, 317], "randompolici": [13, 14, 16, 18, 19, 20, 22, 100, 124, 299, 314], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 218, 229, 232, 272, 274, 277, 281, 284, 285, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317], "lifespan": [13, 14, 16, 18, 19, 20, 306], "divis": [13, 14, 16, 18, 19, 20, 311], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 107, 308, 314], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 71, 75, 87, 93, 132, 136, 203, 207, 277, 295, 296, 297, 303, 306, 307, 312, 317], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 71, 75, 87, 93, 307], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 306, 307, 311], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 135, 137, 172, 302, 303, 305, 306, 311, 314, 316], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 71, 75, 87, 93, 107, 109, 128, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 170, 171, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 245, 314, 317], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 301, 311, 312], "post": [13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 87, 93], "multistep": [13, 14, 16, 18, 19, 20, 21, 299, 306], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 117, 126, 164, 173, 182, 187, 188, 243, 301, 312, 314], "explorationtyp": [13, 14, 16, 20, 21, 230, 277, 305, 306, 307, 308, 316], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 232], "whole": [13, 14, 16, 26, 28, 32, 45, 71, 75, 87, 93, 136, 272, 305, 307], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 283, 293, 303, 305, 316], "async": [13, 14, 18, 19, 20, 21, 305, 316], "ratio": [13, 14, 40, 305, 307], "finish": [13, 14, 21, 124], "rest": [13, 14, 301, 307, 308, 312, 316], "earli": [13, 14, 316], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 136, 141, 303, 305], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 136, 141, 297, 303, 305, 306, 317], "ordereddict": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 136, 141, 306], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 141, 165, 215, 216, 218, 229, 232, 281, 301, 311], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 71, 75, 87, 93, 136], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 71, 75, 87, 93, 112, 117, 130, 152, 167, 172, 228, 235, 314], "increment": [13, 14, 16, 17, 71, 75, 87, 93, 130, 229], "env_fn": [13, 14, 16, 17, 72, 295, 296], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 156, 157, 312], "out_se": [13, 14, 16, 17, 317], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 104, 120, 129, 132, 135, 136, 137, 139, 140, 151, 152, 154, 155, 156, 157, 160, 163, 164, 165, 167, 168, 169, 172, 178, 186, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 243, 244, 245, 246, 247, 248, 249, 264, 268, 269, 271, 274, 281, 286, 287, 290, 294, 295, 296, 302, 307, 311], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 71, 75, 87, 93, 98, 99, 100, 101, 102, 105, 107, 108, 111, 113, 114, 115, 117, 118, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 141, 150, 154, 160, 161, 165, 166, 167, 172, 175, 179, 180, 181, 198, 199, 204, 205, 210, 216, 217, 219, 222, 224, 228, 230, 232, 233, 234, 235, 237, 245, 246, 247, 248, 275, 277, 279, 288, 289, 305], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 68, 81, 83, 98, 105, 108, 151, 169, 216, 217, 219, 220, 222, 228, 232, 233, 235, 237, 312, 316, 317], "describ": [15, 44, 101, 135, 186, 187, 267, 302, 305, 307, 311, 312, 317], "tensor_spec": [15, 98, 222, 232, 234], "boundedtensorspec": [15, 22, 26, 71, 75, 87, 93, 200, 202, 203, 210, 216, 217, 219, 228, 232, 233, 235, 237, 299, 307, 311, 312, 316], "cube": 15, "envcreat": [16, 22, 293, 294, 297, 299, 305, 306, 316, 317], "interruptor": 16, "_interruptor": 16, "outsid": [16, 311], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 71, 75, 87, 93, 307, 311, 316, 317], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 75, 84, 115, 216, 218, 229, 232, 305, 310, 312, 316], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 119, 305, 316], "regular": [17, 34, 36, 39, 181, 199, 204, 205, 206, 207, 223, 283, 299, 303, 305, 306, 314, 317], "mere": 17, "greater": [17, 165, 305, 306, 316], "signal": [17, 52, 130, 302, 305, 307, 311, 314], "sent": [17, 55, 56, 65, 141], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 87, 93, 121, 141, 151, 152, 154, 156, 158, 160, 167, 169, 172, 192, 206, 211, 272, 278, 305, 307, 308, 312, 314, 317], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 281], "string": [18, 19, 20, 32, 37, 45, 54, 71, 75, 87, 93, 120, 140, 165, 198, 203, 204, 215, 263, 280, 290, 302, 305, 307, 308], "respect": [18, 19, 20, 32, 71, 75, 87, 93, 99, 104, 105, 108, 120, 121, 132, 135, 136, 138, 140, 183, 206, 211, 276, 307, 308, 311], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 71, 75, 87, 93, 122, 136, 150, 165, 197, 230, 302, 305, 306, 308, 314], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 300, 306, 307, 310, 314], "serv": [18, 20, 21, 77, 314, 317], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 71, 75, 87, 93, 111], "seen": [18, 20, 21, 302, 305, 306, 308, 311, 314], "turn": [18, 20, 21, 113, 137, 198, 277, 302, 305, 306, 308, 312, 313], "mp": [18, 19, 20, 72, 141], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 71, 75, 87, 93, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 305], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 71, 75, 87, 93, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 232, 295, 296], "homonym": [18, 19, 20, 312], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 305], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 203, 207], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 295, 296, 305, 306], "coordin": 21, "hood": [21, 312], "init": [21, 32, 71, 75, 87, 93, 305, 306, 307], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 314], "similarli": [21, 32, 62, 71, 75, 87, 93, 208, 209, 228, 317], "num_cpu": 21, "num_gpu": 21, "1024": [21, 158, 306, 314], "equat": [21, 202, 215, 218, 236, 307, 312], "exce": [21, 307, 314], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 281, 305, 307, 308], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 91, 92, 94, 95, 152, 153, 154, 155, 158, 163, 167, 172, 176, 177, 179, 180, 189, 243, 305, 306, 307, 308, 312, 313, 314, 316, 317], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "wherea": [22, 107, 230, 303], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 153, 158, 179, 197], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 72, 306], "__main__": [22, 72], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 107, 133, 186, 187, 188, 197, 202, 217, 218, 222, 231, 233, 235, 305, 307, 308, 311], "durat": [23, 311], "meta": [23, 44, 52, 73, 303, 307, 311, 314], "aren": [23, 308], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 141, 301, 305, 311], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 107, 177, 178, 182, 215, 301, 306, 307, 308, 312, 314], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 316], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 202, 210], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 210, 312], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 71, 75, 87, 93, 104, 105, 108, 115, 120, 132, 135, 136, 138, 140, 141, 206, 290, 317], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 103], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 152, 167, 184, 185], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 138, 153, 179], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 71, 75, 87, 93, 297, 301], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 317], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 107, 165, 192, 196, 198, 199, 202, 203, 204, 205, 206, 207, 301, 316, 317], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 192, 198, 199, 203, 204, 205, 206, 207, 307, 311, 312, 314], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 132, 147, 312, 314], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 100, 129, 152, 184, 185, 305, 312, 314], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 100, 101, 132, 137, 141, 166, 185, 190, 297, 306, 307, 312, 314], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 135, 136, 175, 186, 297], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 88, 89, 98, 107, 161, 178, 181, 198, 199, 204, 205, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 308], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 161, 181, 198, 204, 220, 222, 243, 299, 301], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 71, 75, 87, 93, 104, 105, 108, 120, 132, 135, 136, 138, 140, 141, 206, 215, 230, 305, 306, 307, 312, 314], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 132, 165, 308, 312, 313], "upper": [25, 116], "unnam": 26, "effect": [26, 32, 71, 75, 87, 93, 100, 127, 136, 281, 305, 314, 317], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 71, 75, 87, 93, 152, 167, 305, 306, 312], "composite_spec": 26, "observation_vector": [26, 101, 290, 305], "randn": [26, 34, 36, 39, 55, 56, 65, 117, 147, 153, 158, 161, 166, 170, 171, 175, 178, 179, 181, 192, 193, 194, 195, 197, 198, 203, 204, 206, 209, 210, 211, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 245, 246, 247, 248, 280, 301, 316, 317], "td_project": 26, "is_empti": [26, 28, 312], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 71, 75, 87, 93, 244, 311], "children": [26, 28, 32, 71, 75, 87, 93], "keysview": [26, 28], "reflect": [26, 28, 88, 89, 150, 230, 284, 306, 307, 308, 311], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 71, 75, 87, 93, 230], "succeed": [26, 28, 307, 311, 312], "selected_kei": [26, 28, 128, 305], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "device_typ": [27, 30, 33, 152, 153, 154, 155, 156, 157, 163, 167, 173, 174, 179], "onehottensorspec": 27, "action_valu": [27, 33, 160, 161, 181, 198, 199, 204, 205, 222, 230, 243, 301, 308], "arang": [27, 33, 161, 171, 198, 272, 301, 314], "argmax": [27, 161, 181, 199, 205], "chosen_action_valu": [27, 33, 180, 181, 189, 204, 205, 243, 301, 308], "outcom": [27, 33, 159, 186], "lazi": [28, 29, 49, 50, 71, 75, 87, 93, 120, 138, 173, 208, 209, 305, 306, 310, 314, 317], "represent": [28, 29, 32, 71, 75, 87, 93, 120, 138, 140, 305, 312, 313, 317], "drawn": [28, 29, 132, 200, 203, 207, 307, 311], "lazystackedtensordict": [28, 71, 75, 83, 87, 93, 310, 316], "heterogen": [28, 29, 82, 88, 89, 143, 172, 305, 306], "semant": [28, 29, 301], "thrown": [29, 32, 71, 75, 87, 93, 314], "nvec": [30, 31], "cardin": [30, 31, 161, 181, 198, 199, 205, 307], "ax": [30, 173, 174], "m": [30, 32, 71, 75, 87, 93, 107, 207, 301, 306, 312], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 220, 222, 243, 299], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 299], "gamma": [32, 124, 169, 216, 217, 219, 220, 222, 223, 224, 226, 228, 230, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 293, 302, 305, 306, 307, 311, 316], "sutton": [32, 302, 311], "1988": 32, "predict": [32, 40, 162, 168, 169, 197, 212, 223, 225, 226, 244, 301, 305, 306], "tempor": [32, 165, 169, 246, 247, 252, 253], "44": [32, 306, 308, 312], "discount": [32, 72, 124, 217, 223, 224, 226, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 302, 306, 307, 311], "ahead": [32, 317], "add_modul": [32, 71, 75, 87, 93], "child": [32, 71, 75, 87, 93], "fn": [32, 37, 71, 75, 87, 93, 175, 295, 296], "init_weight": [32, 71, 75, 87, 93], "fill_": [32, 71, 75, 87, 93, 306, 308, 317], "net": [32, 71, 75, 87, 93, 166, 172, 216, 217, 222, 228, 232, 233, 234, 235, 290, 293, 306, 312, 313, 316], "in_featur": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 152, 154, 155, 156, 157, 166, 167, 172, 173, 174, 193, 206, 220, 316], "out_featur": [32, 71, 75, 83, 87, 93, 104, 120, 132, 135, 136, 138, 140, 151, 152, 154, 155, 156, 157, 162, 163, 165, 166, 167, 169, 172, 173, 174, 193, 198, 206, 220, 301, 305, 308, 316], "bia": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 152, 162, 165, 167, 172, 173, 174, 175, 200, 202, 206, 213, 214, 215, 230, 302, 305, 306, 307, 308, 311, 316], "requires_grad": [32, 71, 75, 87, 93, 115], "bfloat16": [32, 71, 75, 87, 93], "datatyp": [32, 71, 75, 87, 93, 314], "member": [32, 71, 75, 87, 93, 230], "xdoctest": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206, 230], "skip": [32, 71, 75, 87, 93, 112, 136, 143, 203, 207, 230, 245, 246, 247, 248, 263, 264, 274, 277, 305, 306, 307, 312], "buf": [32, 71, 75, 87, 93], "20l": [32, 71, 75, 87, 93, 230], "1l": [32, 71, 75, 87, 93, 230], "5l": [32, 71, 75, 87, 93, 230], "__call__": [32, 37, 71, 75, 87, 93, 207, 303], "associ": [32, 71, 75, 87, 93, 182, 297, 305, 314], "doubl": [32, 46, 71, 75, 87, 93, 104, 105, 106, 108, 120, 132, 135, 136, 138, 140, 206, 220, 223, 227, 233, 236, 243, 305, 306, 307, 308, 317], "eval": [32, 71, 75, 87, 93, 136, 141, 305, 306, 307], "evalu": [32, 71, 75, 87, 93, 136, 159, 170, 171, 178, 188, 233, 286, 287, 306, 307], "dropout": [32, 71, 75, 87, 93, 136, 165, 167, 308], "batchnorm": [32, 71, 75, 87, 93, 136], "disabl": [32, 71, 75, 87, 93, 136, 164, 188, 305], "comparison": [32, 54, 71, 75, 87, 93, 136, 230, 305, 306], "similar": [32, 71, 75, 87, 88, 89, 93, 104, 120, 132, 135, 136, 138, 139, 140, 141, 193, 195, 203, 206, 207, 302, 305, 306, 307, 308, 312, 317], "confus": [32, 71, 75, 87, 93, 136], "extra_repr": [32, 71, 75, 87, 93], "nontermin": 32, "original_reward": 32, "newli": [32, 71, 75, 87, 93], "OR": 32, "reshap": [32, 165, 167, 307, 311], "get_buff": [32, 71, 75, 87, 93], "throw": [32, 71, 75, 87, 93, 317], "docstr": [32, 71, 75, 87, 93], "get_submodul": [32, 71, 75, 87, 93], "explan": [32, 71, 75, 87, 93], "qualifi": [32, 71, 75, 87, 93], "referenc": [32, 71, 75, 87, 93], "attributeerror": [32, 71, 75, 87, 93], "invalid": [32, 71, 75, 87, 93, 96, 170, 171], "resolv": [32, 71, 75, 87, 93], "get_extra_st": [32, 71, 75, 87, 93, 141], "set_extra_st": [32, 71, 75, 87, 93, 141], "picklabl": [32, 71, 75, 87, 93, 141], "ensur": [32, 35, 41, 58, 62, 71, 75, 87, 93, 100, 120, 138, 141, 198, 301, 306, 307, 312, 314], "guarante": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 141, 316], "pickl": [32, 71, 75, 87, 93, 141], "get_paramet": [32, 71, 75, 87, 93], "sai": [32, 71, 75, 87, 93, 313, 317], "net_b": [32, 71, 75, 87, 93], "net_c": [32, 71, 75, 87, 93], "conv": [32, 71, 75, 87, 93, 152, 306], "conv2d": [32, 71, 75, 87, 93, 152, 316], "kernel_s": [32, 71, 75, 87, 93, 152, 154, 155, 176, 306, 316], "stride": [32, 71, 75, 87, 93, 152, 154, 155, 163, 306, 316], "diagram": [32, 71, 75, 87, 93], "show": [32, 71, 75, 87, 93, 172, 301, 305, 307, 308, 311, 312, 314, 316], "degre": [32, 71, 75, 87, 93], "named_modul": [32, 71, 75, 87, 93], "o": [32, 71, 75, 87, 93], "transit": [32, 52, 71, 75, 87, 93, 212, 305, 308, 312, 314], "half": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206, 305], "ipu": [32, 71, 75, 87, 93], "strict": [32, 34, 36, 39, 71, 75, 87, 93, 136], "descend": [32, 71, 75, 87, 93, 136], "persist": [32, 71, 75, 87, 93, 136, 150], "enforc": [32, 62, 71, 75, 87, 93, 136, 208, 312], "preserv": [32, 71, 75, 87, 93, 136], "missing_kei": [32, 71, 75, 87, 93, 136], "unexpected_kei": [32, 71, 75, 87, 93, 136], "namedtupl": [32, 71, 75, 87, 93, 136], "duplic": [32, 62, 71, 75, 87, 93, 220, 223, 230, 243], "l": [32, 71, 75, 87, 93, 244, 307, 312], "idx": [32, 71, 75, 87, 93], "named_buff": [32, 71, 75, 87, 93], "remove_dupl": [32, 71, 75, 87, 93, 230], "prepend": [32, 71, 75, 87, 93, 230], "running_var": [32, 71, 75, 87, 93], "named_children": [32, 71, 75, 87, 93], "conv4": [32, 71, 75, 87, 93], "conv5": [32, 71, 75, 87, 93], "memo": [32, 71, 75, 87, 93], "named_paramet": [32, 71, 75, 87, 93, 115, 230], "register_backward_hook": [32, 71, 75, 87, 93], "removablehandl": [32, 71, 75, 87, 93], "deprec": [32, 71, 75, 87, 93, 136, 144, 148, 160, 216, 217, 218, 220, 222, 223, 228, 229, 232, 233, 234, 235, 243, 245, 246, 247, 248, 317], "favor": [32, 71, 75, 87, 93, 307], "register_full_backward_hook": [32, 71, 75, 87, 93], "register_buff": [32, 71, 75, 87, 93], "running_mean": [32, 71, 75, 87, 93], "alongsid": [32, 71, 75, 87, 93, 311], "num_featur": [32, 71, 75, 87, 93], "register_forward_hook": [32, 71, 75, 87, 93, 161, 181], "with_kwarg": [32, 71, 75, 87, 93], "always_cal": [32, 71, 75, 87, 93], "posit": [32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 111, 112, 129, 130, 133, 136, 137, 175, 302, 307, 311, 312, 314], "signatur": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206, 230, 302, 305, 312], "register_module_forward_hook": [32, 71, 75, 87, 93], "regardless": [32, 71, 75, 87, 93, 218, 229, 232], "register_forward_pre_hook": [32, 71, 75, 87, 93], "invok": [32, 71, 75, 87, 93], "And": [32, 71, 75, 87, 93], "forward_pr": [32, 71, 75, 87, 93], "register_module_forward_pre_hook": [32, 71, 75, 87, 93], "grad_input": [32, 71, 75, 87, 93], "grad_output": [32, 71, 75, 87, 93], "subsequ": [32, 71, 75, 87, 93, 308], "technic": [32, 71, 75, 87, 93, 306, 308], "caller": [32, 71, 75, 87, 93], "register_module_full_backward_hook": [32, 71, 75, 87, 93], "register_full_backward_pre_hook": [32, 71, 75, 87, 93], "backward_pr": [32, 71, 75, 87, 93], "register_module_full_backward_pre_hook": [32, 71, 75, 87, 93], "register_load_state_dict_post_hook": [32, 71, 75, 87, 93], "incompatible_kei": [32, 71, 75, 87, 93], "clear": [32, 71, 75, 79, 87, 93, 273], "register_modul": [32, 71, 75, 87, 93, 303], "alia": [32, 71, 75, 87, 93], "register_paramet": [32, 71, 75, 87, 93], "register_state_dict_pre_hook": [32, 71, 75, 87, 93], "keep_var": [32, 34, 36, 39, 71, 75, 87, 93, 136], "made": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 202, 220, 230, 243, 305, 306, 308, 311, 313], "requires_grad_": [32, 71, 75, 87, 93], "autograd": [32, 71, 75, 87, 93, 136], "freez": [32, 71, 75, 87, 93], "finetun": [32, 71, 75, 87, 93], "gan": [32, 71, 75, 87, 93], "share_memori": [32, 71, 72, 75, 87, 93, 305], "share_memory_": [32, 71, 75, 87, 93, 316], "destin": [32, 34, 36, 39, 71, 75, 87, 93, 106, 136, 138, 150], "averag": [32, 71, 75, 87, 93, 136, 141, 202, 224, 225, 279, 305, 307], "shallow": [32, 71, 75, 87, 93, 136, 308], "pleas": [32, 71, 75, 87, 88, 89, 93, 136, 300], "detach": [32, 71, 75, 87, 93, 136, 230, 245, 246, 247, 248, 305], "non_block": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "memory_format": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "channels_last": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "complex": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206, 305, 306], "integr": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 157, 165, 169, 206, 301, 311, 312, 313], "unchang": [32, 71, 75, 87, 93, 104, 107, 120, 132, 135, 136, 138, 140, 200, 206, 278, 305, 314], "tri": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "pin": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "4d": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "ignore_w": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "1913": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "3420": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "5113": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "2325": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "torch_doctest_cuda1": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "gpu1": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "1914": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "5112": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206, 312], "2324": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "float16": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "cdoubl": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "3741": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "j": [32, 35, 58, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206, 303], "2382": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "5593": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206, 312], "4443": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "complex128": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "6122": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "1150": [32, 71, 75, 87, 93, 104, 120, 132, 135, 136, 138, 140, 206], "to_empti": [32, 71, 75, 87, 93], "dst_type": [32, 71, 75, 87, 93], "xpu": [32, 71, 75, 87, 93], "set_to_non": [32, 71, 75, 87, 93], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 314], "discretebox": [33, 71, 75, 87, 93, 307, 311], "chosen_data": [34, 54], "rewarddata": [34, 54, 299], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 86], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 312], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 105, 108, 120, 136, 140, 273], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 297], "determin": [34, 35, 36, 39, 41, 52, 58, 120, 140, 202, 306, 311], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 159, 186], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "flatten": [34, 36, 39, 111, 278, 308, 311], "to_tensordict": [34, 36, 39, 308], "memmap": [34, 36, 39, 55, 87, 93, 141, 278, 314], "unbind": [34, 36, 39, 165], "alpha": [35, 41, 58, 152, 217, 222, 231, 233, 235, 305, 314, 316], "ep": [35, 41, 58, 141, 202, 218, 236, 279, 305, 306, 308], "1e": [35, 41, 58, 141, 159, 162, 175, 186, 305, 306, 307, 311], "08": [35, 41, 58, 305, 306, 307, 312], "collate_fn": [35, 38, 41, 42, 52, 53, 314, 316], "prefetch": [35, 38, 41, 42, 52, 53, 54, 305, 306, 308, 314], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 100, 120, 138, 153, 154, 155, 156, 157, 158, 161, 162, 163, 169, 174, 176, 177, 179, 180, 182, 183, 189, 199, 202, 216, 217, 221, 223, 224, 225, 226, 227, 228, 231, 232, 235, 236, 245, 250, 258, 313], "ab": [35, 58, 120, 138, 141, 153, 158, 162, 163, 169, 174, 176, 177, 179, 180, 182, 183, 189, 216, 217, 221, 224, 225, 226, 227, 228, 231, 232, 235, 313], "1511": [35, 58, 163], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 186, 203, 207, 299, 302], "null": [35, 41, 58, 99], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 314], "merg": [35, 38, 41, 42, 52, 53, 312], "mini": [35, 38, 41, 42, 52, 53, 311], "decid": [35, 38, 41, 42, 316], "rb": [35, 38, 41, 42, 52, 53, 100, 124, 306, 308, 311, 313, 314, 316], "meth": [35, 38, 41, 42, 230], "incompat": [35, 38, 41, 42, 314], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 314], "tensordictprioritizedreplaybuff": [35, 299, 316], "simplifi": [35, 312, 314], "manual_se": [35, 38, 41, 42, 98, 107, 117, 124, 170, 171, 178, 192, 199, 200, 202, 210, 216, 217, 219, 228, 235, 311, 312, 316, 317], "_weight": [35, 41, 314, 316], "arrai": [35, 40, 305, 314], "update_prior": [35, 58, 278, 303, 306, 314, 316], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 137], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 131, 305, 314], "nonetyp": [36, 39], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 71, 75, 87, 93, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213], "text": [37, 40, 43, 202, 307], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 153, 158, 179], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 314], "inde": [37, 107, 307, 312], "writer": [38, 42, 52, 53, 60, 64, 299, 307], "randomsampl": [38, 42, 52, 53, 299, 305], "roundrobinwrit": [38, 42, 52, 53, 299], "Not": 38, "ref_model": 40, "reward_model": [40, 212], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 115], "kl": [40, 115, 225, 229], "penalti": [40, 229], "strai": 40, "far": [40, 164, 187, 188, 312, 317], "calcul": [40, 124], "gpt2rewardmodel": 40, "get_dataload": [40, 299], "promptdata": [40, 299], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 312, 314], "reward_kl": [40, 115], "reward_raw": 40, "sample_log_prob": [40, 193, 194, 195, 203, 207, 209, 232, 290, 307, 311, 316], "create_rollout_td": 40, "log_prob": [40, 159, 170, 171, 178, 188, 207], "log_ratio": 40, "kl_coef": 40, "plu": [40, 312], "replic": 40, "rindex": 40, "multipli": [40, 217, 218, 222, 229, 231, 232, 233, 235, 279, 305], "term": [40, 115, 173, 174, 215, 216, 222, 283, 306, 307, 311], "subtract": [40, 131], "ve": [40, 305, 308], "eo": 40, "limit": [40, 83, 100, 115, 305, 306, 308, 311, 312], "generation_config": 40, "generationconfig": 40, "ti": [40, 254, 255, 256, 257, 259, 260, 261, 262, 306], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 217, 220, 222, 223, 228, 230, 233, 235, 237, 243, 314, 316], "td_error": [41, 42, 217, 219, 220, 222, 223, 228, 230, 233, 235, 237, 243, 305, 314, 316], "reduct": [41, 58], "prioritizedreplaybuff": [41, 299, 316], "update_tensordict_prior": [41, 305, 314, 316], "prioritizedsampl": [41, 42, 220, 223, 243, 299, 305, 314], "min": [41, 58, 186, 187, 188, 197, 202, 217, 218, 222, 231, 233, 235, 306, 307, 311], "median": [41, 58, 203, 207], "len": [41, 55, 56, 65, 152, 167, 172, 305, 312, 313, 314, 316], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 81, 147], "huggingfac": [43, 201], "co": [43, 312], "doc": [43, 306, 311, 317], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 299], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 84, 87, 93, 305, 306], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 75, 138, 150, 263, 314, 317], "condit": [45, 131, 198, 199, 204, 205, 215, 305, 312, 314], "elementwis": 45, "os": [45, 306], "cpu_count": 45, "vocabulari": 45, "loader": [45, 307], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 98, 100, 101, 102, 103, 105, 107, 108, 109, 111, 114, 117, 121, 122, 124, 128, 130, 133, 138, 141, 150, 196, 197, 200, 202, 207, 220, 243], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 306], "batch_dimens": 45, "filder": 45, "tempfil": [45, 293, 305, 306], "randint": [45, 134, 314], "20": [45, 71, 75, 79, 87, 93, 197, 272, 305, 306, 307, 308, 311, 312, 316, 317], "temporarydirectori": [45, 305, 306], "tmpdir": [45, 305, 306], "data_memmap": 45, "exclus": [48, 49, 111, 165, 170, 171, 198, 199, 204, 205, 236, 237, 245, 246, 247, 248, 249, 297, 301], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_timeout_as_don": 52, "env_kwarg": [52, 295, 296, 305], "metadata": [52, 307, 311, 317], "reconstruct": [52, 225, 305, 317], "timeout": 52, "recov": [52, 196, 202, 208, 228, 310], "regard": [52, 161, 199, 216, 223, 232, 305, 307, 312], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 84, 190, 295, 296, 302, 307, 308, 314, 316], "left": [52, 104, 106, 115, 120, 122, 133, 135, 138, 140, 200, 306, 307], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 124, 127, 131, 151, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 306, 311], "absent": 52, "traj_split": 52, "observationnorm": [52, 141, 297, 305, 306, 307, 308, 316], "maze2d": 52, "umaz": 52, "loc": [52, 115, 117, 126, 164, 175, 187, 188, 193, 194, 195, 203, 207, 209, 216, 217, 228, 232, 233, 234, 235, 285, 290, 297, 301, 305, 306, 307, 308, 311, 316], "128": [52, 155, 158, 306, 308, 312, 313, 314], "public": [53, 120, 140], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 86], "adult_onehot": [53, 86], "mushroom_num": [53, 86], "mushroom_onehot": [53, 86], "covertyp": [53, 86], "shuttl": [53, 86], "magic": [53, 86], "infinit": [54, 314], "three": [54, 301, 303, 307, 311, 312, 314], "block": [54, 301, 308], "pairwisedataset": [54, 299], "256": [54, 158, 306, 307, 311, 312], "scratch_dir": [55, 305, 314], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 197, 314, 317], "bar": [55, 56, 65, 197, 274, 275, 277, 281, 303, 306], "attach": [55, 56, 57, 63, 65, 306], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 170, 171, 305], "auto": [56, 65, 202, 217, 222, 231, 233, 235, 237, 302, 311], "zero_": [56, 65, 147], "max_capac": [58, 305, 314], "uniformli": [59, 230, 317], "roundrobin": [60, 64], "piec": [60, 64, 66, 305, 306, 307, 311, 312, 314], "consum": [62, 306, 307, 311, 314], "incomplet": 62, "unlik": [62, 223, 232, 306, 316], "fresh": 62, "caution": [62, 143, 317], "shuffl": [62, 311], "haven": [62, 313], "remain": [62, 106, 107, 115, 131, 174], "draw": [62, 200], "__len__": 63, "_inplace_upd": [67, 68, 71, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 136], "_batch_lock": [67, 68, 71, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 136], "googl": [67, 68, 307, 308, 311], "ant": [67, 68, 78, 313], "get_environ": 68, "87": [68, 306, 311, 312], "acrobot": [68, 317], "fetch": [68, 115, 313, 314], "task_nam": 69, "cheetah": [69, 70, 305], "frame_skip": [69, 70, 74, 75, 80, 112, 274, 277, 284, 303, 305, 306, 307, 316], "dm_control": [70, 305, 310, 317], "continuousbox": [71, 75, 87, 93, 147, 307, 311, 312, 316], "unboundedcontinuoustensorspec": [71, 75, 83, 87, 93, 98, 105, 108, 132, 147, 151, 169, 192, 206, 209, 211, 234, 299, 307, 308, 311, 312], "another_act": [71, 75, 87, 93], "mutabl": [71, 75, 87, 93], "batch_lock": [71, 73, 75, 87, 93, 132, 136, 312], "immut": [71, 75, 87, 93, 122, 136], "another_don": [71, 75, 87, 93], "fake_tensordict": [71, 75, 87, 93, 306], "fake": [71, 75, 87, 93, 305, 306], "overridden": [71, 75, 87, 93, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 308], "afterward": [71, 75, 87, 93, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213, 317], "silent": [71, 75, 87, 93, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 172, 175, 176, 177, 179, 182, 183, 185, 190, 196, 197, 199, 200, 202, 205, 210, 213], "attibut": [71, 75, 87, 93], "speak": [71, 75, 87, 93, 305], "rand_act": [71, 75, 82, 87, 88, 89, 93], "_step": [71, 75, 87, 93, 98, 105, 108, 111, 122, 131], "privat": [71, 75, 87, 93, 312, 317], "another_reward": [71, 75, 87, 93], "callback": [71, 75, 87, 93, 311], "auto_reset": [71, 75, 87, 93, 312], "auto_cast_to_devic": [71, 75, 87, 93, 311], "break_when_any_don": [71, 75, 87, 93, 311], "return_contigu": [71, 75, 87, 93, 143, 310], "soon": [71, 75, 87, 88, 89, 93], "ndim": [71, 75, 87, 93], "concomitt": [71, 75, 87, 93], "workspac": [71, 75, 87, 93], "prevail": [71, 75, 87, 93], "creator": [72, 286, 287, 295, 296, 297], "substitut": [72, 141], "vecnorm": [72, 297], "env_creat": [72, 305], "test_env1": 72, "_td": 72, "observation_count": [72, 317], "test_env2": 72, "sleep": [72, 317], "ps": 72, "p1": 72, "p2": 72, "join": [72, 299, 306, 307], "9934": 72, "env_str": 73, "info_dict_read": 75, "set_info_dict_read": 75, "put": [75, 141, 297, 301, 306, 307, 308, 312], "read_act": 75, "read_don": 75, "reader": [75, 306], "broken": [75, 143], "read_ob": 75, "dictat": [75, 203, 207, 232, 305, 312], "inner": [75, 107, 303, 306, 307, 311, 317], "read_reward": 75, "baseinfodictread": 75, "info_dict": 75, "hoc": 75, "dict_read": 75, "default_info_dict_read": 75, "my_info_kei": 75, "some_env": 75, "placehold": [77, 136], "secur": 77, "behav": [77, 83, 178, 228, 313], "isaacgym": [78, 79], "isaacgymwrapp": [78, 299], "isaacgymenv": [79, 299], "webpag": 79, "isaac": 79, "essenc": 79, "04": [79, 305, 306, 307, 312, 315], "snake": [80, 81], "6x6": [80, 81], "td1": [81, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 305], "12x12": 81, "tsp50": 81, "tsp100": 81, "qualnam": 82, "marl": [82, 96, 311], "multiag": [82, 88, 89, 172, 180, 189, 243], "leverag": [82, 88, 89, 305, 311, 317], "neural": [82, 88, 89, 152, 184, 206, 301, 306, 307, 308, 311, 312, 317], "group_map": [82, 88, 89, 96], "constructiuon": [82, 88, 89], "premad": [82, 88, 89, 243], "all_in_one_group": [82, 96], "agent_0": [82, 88, 89, 96], "agent_1": [82, 88, 89, 96], "agent_2": [82, 88, 89, 96], "agent_3": 82, "int8": [82, 88, 89], "one_group_per_ag": [82, 88, 89], "environn": 83, "safeti": 83, "constraint": [83, 307, 311], "mymbenv": [83, 151, 169], "world_model": [83, 151, 169, 225], "super": [83, 98, 105, 108, 151, 161, 169, 211, 217, 219, 222, 228, 233, 235, 237, 305, 312, 316], "hidden_observ": [83, 151, 169], "mlp": [83, 151, 152, 154, 155, 156, 157, 165, 166, 169, 172, 193, 198, 220, 290, 301, 306, 310, 313, 316], "worldmodelwrapp": [83, 151, 169], "activation_class": [83, 151, 152, 154, 155, 156, 157, 162, 163, 167, 169, 172, 306, 311, 316], "relu": [83, 151, 158, 169, 175, 215], "activate_last_lay": [83, 151, 157, 167, 169], "depth": [83, 151, 152, 154, 155, 156, 157, 162, 163, 167, 169, 172, 176, 177, 198, 301, 306, 310, 311], "run_type_check": 83, "equal": [84, 87, 93, 116, 117, 152, 160, 165, 167, 172, 236, 240, 272, 295, 296, 305, 307, 313], "readthedoc": 84, "en": 84, "python_interfac": 84, "thread": 84, "task_id": 84, "106": [86, 312], "my_env_fun": [87, 93], "custom_attribute_list": [87, 93], "custom_attribut": [87, 93], "custom_method_list": [87, 93], "custom_method": [87, 93], "deploi": [87, 93], "slight": [87, 93, 306], "overhead": [87, 93], "share_individual_td": [87, 93], "shared_memori": [87, 93], "policy_proof": [87, 93], "ll": [87, 93, 305, 306, 307, 308, 311, 317], "hidden": [87, 93, 162, 165, 166, 176, 177, 182, 183, 193, 194, 195, 197, 206, 209, 218, 229, 232, 301, 308, 310, 316], "update_kwarg": [87, 93], "pettingzoo": [88, 89], "pet": [88, 89], "zoo": [88, 89], "guid": [88, 89, 91, 92, 131, 300, 305, 311], "__": [88, 89], "aecenv": [88, 89], "use_mask": [88, 89], "dead": [88, 89], "compulsori": [88, 89], "adversary_0": [88, 89], "adversari": [88, 89], "marlgroupmaptyp": [88, 89, 96, 299], "vectoris": [88, 89], "multiwalker_v9": 88, "return_st": [88, 89], "categorical_act": [88, 89, 91, 92], "n_piston": [88, 89], "21": [88, 89, 306, 308, 310, 312, 315], "pistonball_v6": [88, 89], "piston": [88, 89], "piston_0": [88, 89], "piston_1": [88, 89], "piston_20": [88, 89], "aec": [88, 89], "tictactoe_v3": [88, 89], "player": [88, 89], "player_1": [88, 89], "player_2": [88, 89], "butterfli": 89, "parallel_env": [89, 305, 316, 317], "roboh": 90, "expos": [90, 105, 108, 208, 306], "vikashplu": 90, "read_info": 90, "pars": [90, 314], "smacv2": [91, 92], "starcraft": [91, 92], "challeng": [91, 92, 312, 313], "v2": [91, 92, 240, 254, 255, 256, 257, 259, 260, 261, 262, 290], "10gen_terran": [91, 92], "10gen_zerg": [91, 92], "10gen_protoss": [91, 92], "3m": [91, 92], "8m": [91, 92], "25m": [91, 92], "5m_vs_6m": [91, 92], "8m_vs_9m": [91, 92], "10m_vs_11m": [91, 92], "27m_vs_30m": [91, 92], "mmm": [91, 92], "mmm2": [91, 92], "2s3z": [91, 92], "3s5z": [91, 92], "3s5z_vs_3s6z": [91, 92], "3s_vs_3z": [91, 92], "3s_vs_4z": [91, 92], "3s_vs_5z": [91, 92], "1c3s5z": [91, 92], "2m_vs_1z": [91, 92], "corridor": [91, 92], "6h_vs_8z": [91, 92], "2s_vs_1sc": [91, 92], "so_many_banel": [91, 92], "bane_vs_ban": [91, 92], "2c_vs_64zg": [91, 92], "old": [91, 92, 229, 317], "smac": [91, 92], "map_nam": [91, 92], "18": [91, 92, 94, 95, 172, 305, 306, 307, 311, 312], "176": [91, 92, 312], "battle_won": [91, 92], "dead_al": [91, 92], "dead_enemi": [91, 92], "episode_limit": [91, 92], "322": [91, 92, 312], "Or": [91, 92], "procedur": [91, 92], "distribution_config": [91, 92], "n_unit": [91, 92], "n_enemi": [91, 92], "team_gen": [91, 92], "dist_typ": [91, 92], "weighted_team": [91, 92], "unit_typ": [91, 92], "marin": [91, 92], "maraud": [91, 92], "medivac": [91, 92], "exception_unit_typ": [91, 92], "start_posit": [91, 92], "surrounded_and_reflect": [91, 92], "map_x": [91, 92], "map_i": [91, 92], "capability_config": [91, 92], "88": [91, 92, 305, 306, 312], "131": [91, 92, 312], "starcraft2env": 92, "scenario": [94, 95, 305, 311, 312], "flock": [94, 95], "continuous_act": [94, 95, 311], "cohesion_rew": 94, "collision_rew": 94, "separation_rew": 94, "velocity_rew": 94, "agent_collision_rew": 95, "agent_distance_rew": 95, "agent_nam": 96, "ca": 96, "environment4": 96, "get_group_map": 96, "model_bas": [97, 151, 169], "adapt": [98, 229, 305, 312], "masker": 98, "binarydiscretetensorspec": [98, 220, 222, 243, 299], "maskedenv": 98, "ones_lik": 98, "scatter": 98, "unsqueez": [98, 100, 101, 134, 137, 166, 305, 308, 311, 312], "_set_se": [98, 105, 108, 312], "tranform": [98, 104, 109, 114, 128, 130, 131, 135, 139], "transform_reward_spec": [99, 103, 104, 105, 106, 115, 122, 125, 126, 135, 137], "as_invers": 100, "account": [100, 170, 171, 301, 306, 308, 314], "movement": 100, "veloc": [100, 311, 312, 317], "propos": [100, 168, 227, 236, 290, 301, 308, 314], "pdf": [100, 153, 154, 155, 156, 157, 161, 179, 199, 202, 223, 233, 236, 245, 250, 258, 290], "1312": [100, 306], "5602": 100, "uesd": 100, "unsqueezetransform": [100, 312, 314], "consumpt": 100, "followin": 100, "pictur": 100, "cartpol": [100, 306, 308, 314, 317], "pixels_trsf": [100, 314], "grayscal": [100, 306, 308, 314, 317], "tensordictreplaybuff": [100, 278, 293, 299, 305, 306, 308, 314], "data_exclud": [100, 314], "_buffer": [100, 133], "transform_observation_spec": [100, 101, 102, 103, 104, 105, 106, 109, 111, 113, 114, 115, 117, 122, 123, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 312], "del_kei": [101, 138, 310, 312], "unsqueeze_if_oor": 101, "observation_posit": 101, "observation_veloc": 101, "delet": 101, "key1": [101, 272, 280], "key2": [101, 272, 280], "crop": [102, 121, 264], "center": [102, 264], "width": [102, 123], "height": [102, 123], "squar": [102, 164, 187, 188, 264], "out_keys_inv": [103, 117, 118, 122, 135, 312], "scalar": [103, 125, 155, 157, 173, 174, 196, 200, 202, 213, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 301, 306, 312], "permit": [103, 111, 137], "rewardsc": [104, 136, 305, 306, 308], "rewardclip": 104, "transformed_env": [104, 135, 136], "transform_env_devic": [104, 106, 135], "transform_input_spec": [104, 105, 106, 107, 117, 122, 127, 130, 135, 137], "transform_output_spec": [104, 106, 115, 122, 135], "untouch": [104, 106, 115, 122, 135], "transformfull_done_spec": [104, 106, 115, 122, 135], "dtype_in": 105, "dtype_out": 105, "scan": [105, 108, 208, 209], "not_transform": [105, 108], "rule": [105, 108, 207, 301, 307], "constructedw": [105, 108], "myenv": [105, 108], "orig_devic": 106, "unspecifi": 106, "transform_done_spec": [106, 135], "num_actions_effect": 107, "max_act": 107, "include_forward": 107, "dimension": [107, 165, 245, 250, 258, 311], "num_act": [107, 222], "action_out": 107, "_call": [107, 111, 312], "excluded_kei": 109, "finit": [110, 314], "first_dim": 111, "last_dim": 111, "allow_positive_dim": [111, 137], "th": [111, 137, 312], "frameskip": 111, "repeatedli": [112, 307, 311], "init_kei": 114, "is_init": [114, 165, 202, 308], "tracker": 114, "coef": 115, "pi_curr": 115, "pi_0": 115, "constrain": [115, 165, 232], "overfit": 115, "fine": [115, 313], "probabilist": [115, 203, 299, 307, 316], "get_dist": [115, 207, 208], "mod": [115, 165, 210, 308], "normalparamextractor": [115, 301, 307, 311], "probabilisticactor": [115, 193, 194, 195, 197, 216, 217, 221, 222, 228, 231, 232, 233, 234, 235, 237, 301, 305, 307, 311], "tanhnorm": [115, 193, 194, 195, 203, 209, 216, 217, 228, 232, 233, 234, 235, 237, 299, 307, 311, 316], "n_ob": [115, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237], "n_act": [115, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237], "return_log_prob": [115, 193, 194, 195, 203, 207, 209, 234, 301, 307, 311, 316], "apply_": 115, "copy_": [115, 305], "formulat": 115, "diverg": [115, 165, 203, 207, 225, 229], "noop": [116, 316], "30": [116, 182, 183, 306, 307, 311, 312, 314], "trial": 116, "op": [116, 196, 200, 283], "randomli": [116, 117, 132, 200, 203, 207, 311, 312, 314], "noop_max": 116, "standard_norm": [117, 126, 305, 306, 308], "affin": [117, 126], "layer": [117, 141, 152, 154, 155, 162, 165, 167, 172, 173, 174, 176, 177, 184, 185, 191, 201, 210, 301, 306, 307, 308, 313], "normal": [117, 141, 152, 164, 167, 170, 171, 175, 187, 188, 196, 203, 207, 218, 229, 232, 277, 279, 297, 301, 303, 308, 311, 317], "set_default_tensor_typ": 117, "doubletensor": 117, "isclos": 117, "next_ob": [117, 245, 246, 247, 248, 316], "rubric": [117, 209], "init_stat": [117, 305, 306, 307, 308], "3752e": 117, "01": [117, 202, 213, 218, 229, 232, 305, 306, 308, 311, 312, 315], "5087e": 117, "03": [117, 305, 306, 312, 315], "9294e": 117, "9636": 117, "5608": 117, "6408": 117, "num_it": [117, 306, 307], "reduce_dim": [117, 305, 306, 307, 308], "cat_dim": [117, 305, 306, 307, 308], "keep_dim": [117, 306, 308], "constant": [117, 131, 303, 305, 307, 308, 317], "statist": [117, 141, 234, 297, 305, 306, 307, 317], "approach": [117, 305, 307, 317], "gaussian": [117, 132, 151, 169, 173, 174, 179, 196, 307], "empir": [117, 151, 169, 203, 207, 305, 307, 311], "3d": 117, "third": [117, 199, 311], "r3m": [120, 313], "resnet": [120, 138, 140], "visual": [120, 138, 140, 307, 312], "embed": [120, 138, 139, 140, 180, 192, 193, 194, 195, 206, 211, 313], "ego4d": [120, 138, 140], "univers": [120, 138, 140], "suraj": [120, 138], "nair": [120, 138], "aravind": [120, 138], "rajeswaran": [120, 138], "vikash": [120, 138, 140], "kumar": [120, 138, 140], "chelsea": [120, 138], "finn": [120, 138], "abhinav": [120, 138], "gupta": [120, 138], "2203": [120, 138, 169, 313], "12601": [120, 138, 313], "_init": [120, 138, 305], "snippet": [120, 138, 305], "resnet50": [120, 140, 313], "model_nam": [120, 138, 140, 267], "resnet34": 120, "resnet18": 120, "r3m_vec": [120, 313], "feed": [120, 140, 230, 301, 305, 311, 314], "244": [120, 140, 312], "stack_imag": [120, 140], "tread": [120, 140], "separet": [120, 140], "hub": [120, 140], "resnet50_weight": [120, 140], "imagenet1k_v1": [120, 140], "download_path": [120, 140], "tensor_pixels_kei": [120, 140], "dest": [120, 138, 140, 206], "sub_seq_len": 121, "sample_dim": [121, 305], "primarili": 121, "hesit": 121, "request": 121, "robust": 121, "mix": [121, 180, 189, 243, 305, 311], "NOT": 121, "improp": 121, "create_copi": 122, "renam": [122, 124, 150, 305], "stuff": 122, "braxenv": [122, 299], "newnam": 122, "interpol": [123, 306, 308], "bilinear": [123, 308], "r2g": 124, "99": [124, 141, 169, 226, 239, 244, 251, 293, 305, 306, 307, 312, 316], "reward_to_go": 124, "bernoulli_": 124, "9010": 124, "9404": [124, 251], "9701": [124, 251], "9900": [124, 251], "0000": [124, 200, 210, 251, 307, 308, 312, 316], "crash": 124, "clamp_min": 125, "clamp_max": 125, "clip_min": 125, "clip_max": 125, "episode_": 127, "reward1": 127, "reward2": 127, "ho": 127, "excludetransform": [128, 314], "squeeze_dim": 129, "step_count_kei": 130, "recognis": 130, "target_return": 131, "accordingli": [131, 204, 308], "conjunct": [131, 306], "hindsight": 131, "relabel": 131, "reward2gotransform": 131, "primer": [132, 308], "default_valu": [132, 308], "unit": [132, 151, 162, 176, 177, 182, 183, 307], "transfomedenv": 132, "mykei": 132, "__unless": 132, "exists__": 132, "dtype_or_devic": 132, "pool": 133, "from_int": 134, "255": [134, 312, 314], "ri": 134, "principl": 135, "cattransform": 135, "notabl": 135, "rewardsum": [135, 311], "cache_spec": 136, "anymor": [136, 206], "set_missing_toler": 136, "keyerror": 136, "unsqueeze_dim": [137, 312], "danger": 137, "vc1": 138, "vc1_vec": 138, "small": [138, 305, 307, 311, 317], "untrain": 138, "make_noload_model": 138, "naiv": 138, "vip": [139, 140, 313], "toward": 140, "implicit": [140, 228, 314], "jason": 140, "ma": 140, "shagun": 140, "sodhani": 140, "dinesh": 140, "jayaraman": 140, "osbert": 140, "bastani": 140, "ami": 140, "zhang": 140, "vip_vec": 140, "shared_td": 141, "decai": [141, 196, 200, 236, 279, 305, 306, 308, 317], "9999": [141, 312], "0001": [141, 162, 175, 307, 312], "fly": [141, 229, 302, 307, 312, 314, 317], "to_observation_norm": 141, "underflow": [141, 279], "build_td_for_shared_vecnorm": 141, "memmori": 141, "memmap_": 141, "queue": [141, 314], "td_share": 141, "v": [141, 193, 228, 235, 301, 305, 306], "state_dim": [142, 153, 158, 179, 182, 183, 197], "action_dim": [142, 153, 154, 156, 158, 179, 197, 305, 310], "gsde": [142, 233, 297], "func": 142, "gsdemodul": 142, "check_dtyp": 143, "short": [143, 306, 307, 311], "discrep": [143, 216, 218, 219, 220, 229, 232, 234, 243], "imposs": 143, "probabilistictdmodul": [148, 149, 167, 203, 207, 244, 277], "next_tensordict": 150, "keep_oth": [150, 312], "exclude_reward": 150, "exclude_don": 150, "exclude_act": 150, "next_": 150, "funtion": [150, 312], "cross": 151, "entropi": [151, 216, 217, 218, 222, 228, 229, 231, 232, 233, 235, 237, 311], "botev": 151, "et": 151, "al": [151, 317], "2013": 151, "cem": 151, "plan": [151, 168, 169], "varianc": [151, 164, 175, 187, 188, 302, 305, 307, 311], "rank": 151, "k": 151, "repeat": [151, 307, 311, 312], "maximis": [151, 154, 156, 169, 301, 305, 306, 307, 311, 312], "horizon": [151, 169, 307], "modelbasedenv": [151, 169], "planning_horizon": [151, 169], "optim_step": [151, 169, 306], "mpc": [151, 168, 169], "num_candid": [151, 169], "candid": [151, 169], "top_k": [151, 169], "modelbasedenvbas": [151, 168, 169, 299], "safemodul": [151, 168, 193, 195, 207, 216, 217, 222, 228, 232, 233, 234, 235, 237, 286, 287, 293, 299, 316], "next_hidden_observ": 151, "num_cel": [152, 154, 155, 156, 157, 162, 163, 165, 167, 172, 193, 306, 307, 308, 311, 316], "elu": [152, 154, 155, 156, 157, 162, 163, 306, 316], "activation_kwarg": [152, 167], "norm_class": [152, 154, 155, 167], "norm_kwarg": [152, 167], "bias_last_lay": [152, 154, 155, 156, 157, 163, 167], "aggregator_class": [152, 154, 155, 306, 308, 316], "squashdim": [152, 154, 316], "aggregator_kwarg": [152, 154, 155, 306, 308], "squeeze_output": [152, 154, 155, 306, 308], "convolut": [152, 154, 155, 184], "produc": [152, 167, 172, 178, 193, 195, 197, 264, 307, 308, 314, 317], "cell": [152, 167, 172, 307], "kernel": [152, 163, 166], "cnet": 152, "34": [152, 167, 306, 311, 312], "35": [152, 167, 305, 306, 308, 312], "rectangular": 152, "transformer_config": [153, 179, 197], "decisiontransform": [153, 179], "dtconfig": [153, 158, 179], "2202": [153, 158, 179, 231], "05607": [153, 158, 179, 231], "return_to_go": [153, 158, 179, 197], "conv_net_kwarg": [154, 155], "mlp_net_kwarg": [154, 155, 156], "use_avg_pool": [154, 155], "WITH": [154, 155, 156, 157, 202, 236], "1509": [154, 155, 156, 157, 169, 202, 227, 236, 312], "02971": [154, 155, 156, 157, 202, 236], "convnet": [154, 308, 316], "ndims_in": 154, "avgpool": [154, 155], "adaptiveavgpool2d": [155, 306, 308], "400": [156, 157, 311, 312, 314], "mlp_net_kwargs_net1": 157, "mlp_net_kwargs_net2": 157, "decion": 158, "desdescrib": 158, "n_embd": 158, "n_layer": 158, "n_head": 158, "n_inner": 158, "n_posit": 158, "resid_pdrop": 158, "attn_pdrop": 158, "gpt2config": 158, "atol": [159, 186], "06": [159, 186, 306, 307, 311, 312], "rtol": [159, 186], "batch_shap": [159, 186], "event_shap": [159, 186], "absolut": [159, 186, 305], "densiti": [159, 170, 171, 178, 188], "mass": [159, 170, 171, 178, 188, 312], "rsampl": [159, 171, 178, 207], "sample_shap": [159, 170, 171, 178], "dqnet": 160, "atom": 160, "softmax": [160, 171, 178, 198, 199], "action_spac": [161, 181, 198, 199, 204, 205, 216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 308], "var_num": [161, 181, 198, 199, 205], "action_value_kei": [161, 181, 198, 199, 204, 205, 230, 243], "action_mask_kei": [161, 181, 198, 199, 200, 204, 205], "perspect": [161, 199, 223, 307], "1707": [161, 199, 223, 232], "06887": [161, 199, 223], "mult": [161, 172, 181, 198, 199, 204, 205], "functional_modul": [161, 181, 204, 206, 209, 301], "make_funct": [161, 181, 203, 204, 206, 209, 211, 230, 301, 316], "tensordict_modul": [161, 181, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 219, 222, 228, 232, 233, 234, 235, 237, 301], "nbin": [161, 198, 301], "customdistributionalqv": 161, "log_softmax": [161, 198], "one_hot": [161, 171, 181], "qvalue_actor": [161, 181, 198, 204, 301], "std_bia": 162, "std_min_val": 162, "belief": [162, 176, 182, 183], "1912": [162, 224, 225, 226], "01603": [162, 224, 225, 226], "softplu": [162, 175, 213, 214, 215], "out_features_valu": 163, "cnn_kwarg": [163, 306], "mlp_kwarg": [163, 166, 306], "duel": 163, "cnn": [163, 306, 316], "06581": 163, "512": [163, 306, 312, 314], "upscal": [164, 187, 188], "tanh_loc": [164, 187, 188], "event_dim": [164, 186, 187], "ultim": [164, 187, 188], "poor": [164, 187, 188], "explos": [164, 187, 188], "switch": [164, 188], "sigma": [164, 179, 187, 188, 196, 202, 307], "formula": [164, 187, 188, 216, 218, 229, 232, 302, 307], "embedd": [165, 166], "lstmcell": 165, "correspont": 165, "input_s": [165, 166, 308], "hidden_s": [165, 166, 308], "num_lay": [165, 176, 177], "b_ih": 165, "b_hh": 165, "introduc": [165, 202, 305], "proj_siz": 165, "recurrent_state_h": [165, 308], "recurrent_state_c": [165, 308], "triplet": [165, 204, 205], "custom_kei": 165, "temporal_mod": 165, "set_temporal_mod": 165, "seq": [165, 308, 310], "lstm_modul": 165, "rs_h": 165, "rs_c": 165, "set_recurrent_mod": [165, 308], "batch_first": [165, 308], "hidden0": 165, "hidden1": 165, "policy_infer": 165, "policy_train": 165, "traj_td": 165, "td_inf": 165, "assert_clos": 165, "lstm_kwarg": 166, "next_observ": [166, 216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 310], "time_step": 166, "2d": [166, 311], "hidden0_in": 166, "hidden1_in": 166, "hidden0_out": 166, "hidden1_out": 166, "single_bias_last_lay": 167, "layer_class": 167, "layer_kwarg": 167, "perceptron": 167, "seamless": 167, "lazylinear": [167, 301, 307, 312, 313, 316], "42": [167, 216, 217, 219, 228, 235, 306, 307, 312], "noisylinear": [167, 173, 299, 306], "noisylazylinear": [167, 299], "At": [168, 200, 306, 307, 308, 310, 312, 313], "mpcplanner": 168, "tensordict_out": [168, 317], "mppi": 169, "covari": 169, "william": [169, 234], "aldrich": 169, "theodor": 169, "01149": 169, "hansen": 169, "wang": 169, "su": 169, "04955": 169, "valueoper": [169, 193, 194, 195, 216, 217, 218, 219, 222, 228, 229, 232, 233, 234, 235, 237, 293, 301, 305, 307], "tdlambdaestim": [169, 299, 305], "value_net": [169, 220, 234, 245, 246, 247, 248, 307], "adv": 169, "lmbda": [169, 239, 245, 248, 250, 256, 257, 258, 261, 262, 302, 305, 307, 311], "95": [169, 239, 305, 306, 307, 308, 312], "value_network": [169, 219, 220, 223, 228, 235, 245, 246, 247, 248, 302, 305, 307], "temperatur": [169, 217, 228], "neg_inf": [170, 171], "inf": [170, 171], "padding_valu": [170, 171], "www": [170, 171], "api_doc": [170, 171], "tf_agent": [170, 171], "event": [170, 171, 178, 254, 255, 256, 257, 259, 260, 261, 262, 314], "unnorm": [170, 171, 178], "sparse_mask": [170, 171], "dens": [170, 171], "0831": [170, 171], "1203": [170, 171], "0928": [170, 171], "1972": [170, 171], "grad_method": [171, 178], "reparamgradientstrategi": [171, 178], "passthrough": [171, 178], "proxi": [171, 178, 302], "relaxedonehot": [171, 178], "zeros_lik": [171, 312], "sample_non_valid": 171, "n_agent_input": [172, 311], "n_agent_output": [172, 311], "centralis": [172, 311], "share_param": [172, 311], "homogen": [172, 311], "toech": 172, "agent_network": 172, "modulelist": [172, 290, 316], "centalis": 172, "shown": [172, 301, 310, 311, 314], "std_init": [173, 174], "matrix": [173, 174], "initialize_paramet": 173, "isol": 173, "1706": [174, 189], "10295v3": 174, "induc": 174, "aid": 174, "scale_map": 175, "biased_softplus_1": 175, "scale_lb": [175, 182, 183], "exp": [175, 215], "module_norm": 175, "channel": [176, 177, 306], "decod": 176, "1803": [176, 177, 180], "10122": [176, 177], "rnn_hidden": 176, "latent": 177, "excacli": 178, "inres": 179, "mu": [179, 202, 307], "state_shap": [180, 243], "mixing_embed_dim": [180, 243], "qmix": [180, 311], "mixer": [180, 189, 243], "monoton": 180, "hyper": 180, "11485": 180, "qmixerloss": [180, 189], "qmix_vdn": [180, 189], "eventu": [180, 308, 312], "vdn": [180, 189], "greedi": [181, 199, 200, 205, 306, 308], "hidden_dim": [182, 183], "posterior": [182, 225], "rssm": [182, 183, 225], "1811": [182, 183], "04551": [182, 183], "obs_embed": 182, "rnn_hidden_dim": 183, "dream": 183, "tanhtransform": 187, "decomposit": 189, "05296": 189, "vmap": [190, 206, 209, 316], "hide": [190, 307, 311], "satisfi": [190, 301], "tensordictmodulebas": [190, 198, 204, 308], "vmap_dim": 190, "lam": 190, "sample_in": 190, "sample_in_td": 190, "vm": 190, "translat": [192, 203], "character": [192, 198, 203, 204, 206, 314], "overflow": [192, 198, 199, 203, 204, 205, 206, 207], "td_modul": [192, 193, 194, 195, 203, 206, 207, 209, 211, 316], "3635": 192, "0340": 192, "1476": 192, "3911": [192, 312], "1664": [192, 306, 312], "5455": 192, "2247": 192, "4583": 192, "2916": 192, "2160": 192, "5337": 192, "5193": 192, "grad_fn": [192, 200, 316], "addmmbackward0": 192, "actorvalueoper": [193, 301], "get_policy_oper": [193, 194, 195, 218, 229, 232, 301], "standalon": [193, 194, 195], "tdmodul": [193, 194, 195, 293], "get_critic_oper": 193, "common_oper": [193, 195], "policy_oper": [193, 194, 195], "value_oper": [193, 194, 195], "normalparamwrapp": [193, 194, 195, 203, 209, 216, 217, 222, 228, 232, 233, 234, 235, 237, 299, 316], "module_hidden": [193, 195], "td_module_hidden": [193, 195], "module_act": [193, 195], "td_module_act": [193, 194, 195], "module_valu": [193, 194, 195], "td_module_valu": [193, 194, 195], "state_action_valu": [193, 211, 217, 235, 244, 290, 293, 301, 305, 316], "td_clone": [193, 194, 195], "tensordictmodulewrapp": [193, 286, 287, 293], "get_policy_head": [193, 194, 195], "safesequenti": [193, 194, 195, 243], "head": [193, 195, 218, 229, 232], "get_value_head": [193, 194, 195], "get_value_oper": [193, 194, 195, 218, 229, 232], "action_modul": 194, "state_valu": [194, 195, 211, 218, 229, 232, 233, 235, 245, 246, 247, 248, 250, 252, 254, 256, 258, 259, 261, 301, 305, 307, 311], "qualiti": [195, 301], "actorcriticoper": [195, 218, 229, 232, 301], "embeddig": 195, "refet": 195, "actorcriticwrapp": [195, 301, 305], "po": 196, "sigma_init": 196, "epsilon": [196, 200, 202, 236, 279, 306, 307, 308], "sigma_end": 196, "annealing_num_step": [196, 200, 202, 305, 306, 308], "captur": [196, 200, 202], "omiss": [196, 200, 202], "warn": [196, 200, 202, 306, 317], "ommit": [196, 200, 202, 314], "inferec": 197, "set_tensor_kei": 197, "dt_inference_wrapp": 197, "baz": 197, "inference_context": 197, "obs_dim": 197, "15": [197, 202, 224, 305, 306, 307, 312, 314, 315], "tanhdelta": [197, 299, 305], "dtactor": 197, "actor_modul": [197, 316], "dist_class": 197, "dist_kwarg": 197, "distribution_kwarg": [197, 203, 207, 307, 311], "inference_actor": 197, "sequence_length": 197, "mask_context": 197, "qvaluemodul": [198, 204, 243, 308], "distributionaldqnnet": 198, "make_log_softmax": 198, "my_action_valu": [199, 205], "chanc": 199, "thid": 199, "threshold": [200, 217, 218, 307], "eps_init": [200, 202, 306, 308], "eps_end": [200, 202, 306], "explorative_polici": [200, 202], "9055": [200, 312], "9277": 200, "6295": 200, "2532": 200, "addbackward0": 200, "lmheadmodel": 201, "extract": [201, 305, 307], "actor_head": [201, 218, 229, 232], "base_model": 201, "lm_head": 201, "ornstein": 202, "uhlenbeck": 202, "ou": [202, 305], "correl": 202, "sort": 202, "noise_t": 202, "noise_": 202, "theta": [202, 307, 312], "sigma_t": 202, "sqrt": 202, "sigma_": 202, "anneal": 202, "ou_prev_nois": 202, "ou_step": 202, "increas": [202, 311], "x0": 202, "sigma_min": 202, "n_steps_ann": 202, "is_init_kei": 202, "_ou_prev_nois": 202, "_ou_step": 202, "default_interaction_typ": [203, 207], "interaction_typ": [203, 207], "set_interaction_typ": [203, 207], "cache_dist": [203, 207], "n_empirical_estim": [203, 207], "chose": 205, "functionalmodul": 206, "functionalmodulewithbuff": 206, "grucel": 206, "td_fmodul": 206, "td_function": 206, "td_state": 206, "ensembl": [206, 233], "params_repeat": 206, "td_vmap": [206, 209], "random_sampl": [206, 207], "suppli": 207, "fist": 207, "log_prob_kei": [207, 311], "probabilistictensordictsequenti": [208, 216, 218, 229, 232, 234, 286, 287, 316], "partial_toler": [208, 209, 310], "who": [208, 209], "AND": [208, 209], "tensordictsequenci": 209, "tensordictsequ": 209, "safeprobabilisticmodul": [209, 301], "spec1": 209, "net1": 209, "module1": 209, "td_module1": 209, "spec2": 209, "module2": 209, "td_module2": 209, "clamp": [210, 225, 281, 312], "boundari": [210, 307, 311], "resolut": 210, "simplest": [210, 305, 307, 308, 311, 314, 317], "9944": 210, "9991": 210, "3020": 210, "2299": [210, 312], "5418": 210, "2989": 210, "6849": 210, "3169": 210, "2690": 210, "9649": [210, 312], "5686": 210, "8602": 210, "0315": 210, "8455": [210, 312], "6027": 210, "4746": 210, "7843": 210, "7782": 210, "2111": 210, "5115": 210, "4687": 210, "5760": 210, "custommodul": 211, "cat": [211, 217, 219, 228, 233, 235, 237, 316], "imaginari": 212, "imagin": 212, "transition_model": 212, "get_reward_oper": 212, "get_transition_model_oper": 212, "min_val": [213, 215], "bias": [213, 302, 305], "_bia": 213, "invert": [214, 307], "surject": 215, "expln": 215, "biased_softplu": [215, 299], "beggin": 215, "biased_softplus_": 215, "syntax": [215, 305], "met": [215, 312], "1602": 216, "01783v2": 216, "entropy_bonu": [216, 218, 229, 232, 307], "favour": [216, 218, 229, 232], "samples_mc_entropi": [216, 218, 229, 231, 232], "mont": [216, 218, 229, 232, 305], "carlo": [216, 218, 229, 232, 305], "entropy_coef": [216, 218, 229, 232, 307, 311], "critic_coef": [216, 218, 229, 232, 307], "loss_critic_typ": [216, 218, 229, 232, 234, 307], "l1": [216, 218, 219, 220, 222, 229, 232, 233, 234, 237, 240, 243, 301, 305], "l2": [216, 218, 219, 220, 221, 222, 225, 226, 229, 232, 233, 234, 237, 240, 243, 305], "smooth_l1": [216, 217, 218, 219, 220, 222, 228, 229, 232, 233, 234, 235, 237, 240, 243, 307], "separate_loss": [216, 218, 219, 222, 228, 229, 232, 233, 234, 235, 237], "propag": [216, 218, 219, 222, 228, 229, 232, 233, 234, 235, 237, 245, 246, 247, 248, 307, 311], "advantage_kei": [216, 218, 229, 232, 234, 245, 246, 247, 248], "value_target_kei": [216, 218, 229, 232, 234, 245, 246, 247, 248, 307], "value_target": [216, 218, 229, 232, 234, 245, 246, 247, 248, 307, 311], "loss_crit": [216, 232, 307, 311], "loss_entropi": [216, 232, 307, 311], "loss_object": [216, 232, 307, 311], "recur": [216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237, 245, 246, 247, 248, 249], "next_reward": [216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237], "next_don": [216, 217, 219, 220, 222, 228, 232, 233, 234, 235, 237], "loss_obj": 216, "sacloss": [216, 227, 236, 299], "select_out_kei": [216, 217, 219, 222, 228, 232, 233, 235, 237], "essenti": [216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 243, 306, 312, 314], "make_value_estim": [216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 238, 243, 302, 305, 306, 311], "value_typ": [216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 239, 243, 305], "valueestim": [216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 239, 243, 299, 302, 305, 311], "hyperparam": [216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 305, 312], "enum": [216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 239, 243, 305], "default_value_estim": [216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 305], "refin": [216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243], "default_value_kwarg": [216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 243, 299, 305], "dqnloss": [216, 217, 219, 222, 223, 224, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 243, 288, 299, 302, 306, 308], "dqn_loss": [216, 217, 219, 220, 222, 223, 224, 228, 230, 232, 233, 234, 235, 237, 238, 243], "conserv": 217, "2006": [217, 312], "04779": 217, "actor_network": [217, 219, 221, 222, 228, 231, 233, 235, 237, 305], "qvalue_network": [217, 222, 228, 233, 235, 237], "loss_funct": [217, 219, 220, 221, 222, 228, 233, 235, 237, 240, 243, 305], "alpha_init": [217, 222, 231, 233, 235], "min_alpha": [217, 222, 231, 233, 235], "max_alpha": [217, 222, 231, 233, 235], "fixed_alpha": [217, 222, 231, 233, 235], "target_entropi": [217, 222, 231, 233, 235], "prod": [217, 231, 235], "n_action": [217, 220, 231, 235], "delay_actor": [217, 219, 235, 237], "delay_qvalu": [217, 222, 233, 235, 237], "min_q_weight": 217, "max_q_backup": 217, "backup": 217, "deterministic_backup": 217, "num_random": 217, "with_lagrang": 217, "lagrang": 217, "lagrange_thresh": 217, "valueclass": [217, 219, 222, 228, 233, 235, 237], "qvalu": [217, 222, 228, 233, 235, 237, 290], "loss_actor": [217, 219, 222, 228, 233, 234, 235, 237, 276, 305, 316], "loss_alpha": [217, 222, 233, 235], "loss_alpha_prim": 217, "loss_qvalu": [217, 222, 228, 233, 235, 237], "clip_epsilon": [218, 307, 311], "normalize_advantag": [218, 229, 232, 311], "value_kei": [218, 229, 232, 245, 246, 247, 248, 305], "somemodul": [218, 229, 232], "someactor": [218, 229, 232], "value_head": [218, 229, 232], "somevalu": [218, 229, 232], "loss_modul": [218, 227, 229, 230, 232, 236, 281, 292, 293, 302, 303, 305, 306, 307, 311, 314], "ppoloss": [218, 229, 299], "delay_valu": [219, 220, 223, 234, 235, 243, 306, 308], "loss_valu": [219, 228, 234, 235, 305, 307, 311, 316], "pred_valu": [219, 237, 305, 316], "pred_value_max": [219, 305, 316], "target_valu": [219, 233, 237, 244, 302, 305, 316], "target_value_max": [219, 305, 316], "qvalueactor": [220, 243, 301, 306, 308], "mult_one_hot": [220, 222, 243], "loss_val": [220, 302, 305, 307, 308, 311, 314], "2106": 221, "01345": 221, "ste": 222, "num_qvalue_net": [222, 228, 233, 235, 237], "target_entropy_weight": 222, "onehotcategor": [222, 299], "disctount": 223, "distributionalqvalueactor": [223, 301], "input_tensordict": [223, 305], "actor_model": 224, "value_model": [224, 226], "model_based_env": 224, "dreamerenv": [224, 299], "imagination_horizon": 224, "unrol": [224, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262], "discount_loss": [224, 226], "lambda_kl": 225, "lambda_reco": 225, "lambda_reward": 225, "reco_loss": 225, "reward_loss": 225, "free_nat": 225, "nat": 225, "delayed_clamp": 225, "global_averag": 225, "value_loss": 226, "fake_data": 226, "ddpgloss": [227, 236, 293, 299, 305, 316], "td3loss": [227, 236, 299], "value_network_update_interv": 227, "contrast": [227, 314], "06461": 227, "2110": [228, 307], "06169": 228, "expectil": 228, "tau": [228, 236, 305, 306], "antmaz": 228, "sticht": 228, "loss_value_diff": 228, "diff": 228, "old_polici": 229, "new_polici": 229, "distanc": [229, 240, 244, 245, 311], "apart": [229, 311], "dtarg": 229, "samples_mc_kl": 229, "analyt": 229, "decrement": 229, "loss_": [230, 276, 302, 305], "equip": [230, 308], "gh": 230, "_acceptedkei": 230, "dataclass": [230, 290], "_forward_value_estimator_kei": 230, "alter": [230, 301], "value_estim": [230, 245, 246, 247, 248, 249, 302, 305, 311], "myloss": 230, "action2": 230, "convert_to_funct": [230, 305], "expand_dim": 230, "create_target_param": [230, 305], "compare_against": [230, 305], "funs_to_decor": 230, "stuctur": 230, "_param": 230, "expans": 230, "resampl": 230, "_target_param": 230, "valueestimatorbas": [230, 299], "blend": 230, "upcom": [230, 254, 255, 256, 257, 259, 260, 261, 262, 305], "proxim": [232, 307, 311], "optimis": [232, 277, 307, 311], "flavour": [232, 311, 316], "clipppoloss": [232, 299, 307, 311], "klpenppoloss": [232, 299], "regularis": 232, "06347": 232, "gae": [232, 299, 302, 305, 307, 311], "ppo_loss": 232, "tdlambda": [232, 239, 302, 305], "base_lay": 232, "randn_lik": 232, "samplelogprob": 232, "openreview": [233, 290], "ay8zfzm0tdd": [233, 290], "sub_sample_len": 233, "subsampl": [233, 272, 303], "action_log_prob_actor": 233, "state_action_value_actor": [233, 237], "connectionist": 234, "1992": 234, "doi": 234, "1007": 234, "bf00992696": 234, "actor_net": [234, 305, 307], "1801": 235, "01290": 235, "applic": [235, 243, 312], "1812": 235, "05905": 235, "redqloss": [236, 299], "math": 236, "theta_t": [236, 312], "theta_": [236, 312], "polyak": 236, "policy_nois": 237, "noise_clip": 237, "next_state_valu": [237, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 299], "td0": [238, 305], "strict_shap": 240, "view_a": 240, "qmixer": [243, 299], "local_valu": 243, "visibl": [243, 311], "dafault": 243, "acceptedkei": 243, "global_valu": 243, "penultim": 243, "local_value_network": 243, "mixer_network": 243, "suggest": [243, 311], "value_modul": [243, 307, 316], "qnet": [243, 305], "next_val_kei": 244, "pred_next_v": 244, "usus": 244, "mse": 244, "q_valu": 244, "n_steps_to_next": 244, "value_next_st": 244, "1506": [245, 250, 258], "02438": [245, 250, 258], "exponenti": [245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 279], "average_ga": [245, 307], "skip_exist": [245, 246, 247, 248], "advang": 245, "gradient_mod": 245, "value_error": [245, 246, 247, 248, 249], "sign": 245, "unused_arg": 245, "target_param": [245, 246, 247, 248, 249, 305, 311], "98": [245, 246, 247, 248, 306, 312], "94": [245, 248, 306, 312, 314], "unpack": [245, 246, 247, 248], "tensor_kei": [245, 246, 247, 248, 249], "next_valu": [245, 246, 247, 248, 249], "aka": [246, 306], "average_reward": [246, 247, 248], "tdestim": [246, 247, 249], "infti": 247, "valuefunctionbas": 249, "time_dim": [250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262], "old_stat": [250, 252, 254, 256, 258, 259, 261], "new_stat": [250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "rolling_gamma": [254, 255, 256, 257, 259, 260, 261, 262], "g1": [254, 255, 256, 257, 259, 260, 261, 262], "g2": [254, 255, 256, 257, 259, 260, 261, 262], "g3": [254, 255, 256, 257, 259, 260, 261, 262], "g4": [254, 255, 256, 257, 259, 260, 261, 262], "v3": [254, 255, 256, 257, 259, 260, 261, 262], "v4": [254, 255, 256, 257, 259, 260, 261, 262, 305, 307, 313], "out_file_bas": 263, "skip_reset": 263, "dump": 263, "interv": [263, 264, 273, 283, 306, 312], "center_crop": 264, "make_grid": 264, "Will": 264, "grid": 264, "exp_nam": [265, 266, 269, 270, 271, 293, 306], "log_dir": [265, 266, 268, 270, 306], "templat": 265, "csv": [266, 268, 306], "minim": [266, 314], "dependeci": 266, "experiment_nam": [267, 268], "uuid": [267, 306, 317], "date": 267, "logger_typ": 268, "logger_nam": 268, "tensorboard": [268, 270, 316], "wandb": [268, 271, 316], "mlflow": [268, 269], "wandb_kwarg": 268, "mlflow_kwarg": 268, "tracking_uri": 269, "uri": 269, "datastor": 269, "tb_log": 270, "tensoarboard": 270, "sub_traj_len": 272, "min_sub_traj_len": 272, "register_op": [272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 303, 306], "process_optim_batch": [272, 278, 279, 303], "td_out": [272, 280], "_process_optim_batch_hook": [272, 303], "batch_subsampl": 272, "clear_cuda": 273, "pre_optim_step": [273, 303], "counter": [274, 303], "log_pbar": [274, 275, 277, 279, 303, 306], "progress": [274, 275, 277, 281, 303, 306, 308, 317], "count_fram": 274, "pre_steps_log": [274, 275, 303], "count_frames_log": 274, "lognam": 275, "r_train": [275, 306], "log_reward": [275, 306], "loss_compon": 276, "appl": 276, "omit": [276, 307, 312, 314], "optimizer_hook": 276, "record_interv": [277, 305, 306], "record_fram": [277, 284, 305, 306], "policy_explor": [277, 293, 305, 306], "log_kei": [277, 306], "suffix": 277, "underestim": 277, "suppos": [277, 303, 317], "set_exploration_typ": [277, 299, 307, 308, 316], "r_evalu": [277, 305], "flatten_tensordict": [278, 306], "max_dim": 278, "rb_trainer": 278, "batch_process": [278, 279, 280, 303], "post_loss": [278, 303], "999": [279, 306], "jitter": 279, "finfo": 279, "default_dtyp": 279, "get_default_dtyp": 279, "reward_norm": 279, "update_reward_stat": 279, "normalize_reward": 279, "make_train": [280, 299], "_process_batch_hook": [280, 303], "select_kei": [280, 303], "versatil": 281, "lossmodul": [281, 292, 293, 299], "optim_steps_per_batch": [281, 303, 306], "epoch": [281, 307, 311], "clip_grad_norm": 281, "partial": [281, 308], "clip_norm": 281, "progress_bar": 281, "tqdm": [281, 305, 307, 308, 311, 312], "save_trainer_interv": 281, "disk": [281, 303, 305, 306, 308, 314], "log_interv": [281, 306], "save_trainer_fil": [281, 303], "datacollectorbas": [283, 286, 287, 293, 299], "update_weights_interv": [283, 306], "sit": [283, 306], "update_weight": 283, "post_step": [283, 303], "cfg": [284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297], "dictconfig": [284, 285, 286, 287, 290, 291, 292, 293, 294, 297], "divid": [284, 301, 305, 311, 312], "unknowingli": 284, "annealing_fram": [284, 305], "init_env_step": [284, 285, 305], "proof_environ": [285, 290, 305], "sta": 285, "ot": 285, "actor_model_explor": [286, 287, 305], "make_env_kwarg": [286, 287], "targetnetupdat": [288, 289, 292, 293], "redqloss_deprec": 289, "actor_net_kwarg": 290, "qvalue_net_kwarg": 290, "observation_kei": 290, "dummi": [290, 305, 317], "parser_env_arg": 290, "parser_model_args_continu": 290, "cattensor": [290, 305, 310, 312, 317], "hydra": 290, "config_stor": 290, "configstor": 290, "halfcheetah": [290, 305], "config_field": 290, "config_cl": 290, "redqmodelconfig": 290, "envconfig": 290, "make_dataclass": 290, "cls_name": 290, "cs": 290, "config_path": 290, "config_nam": 290, "17": [290, 305, 306, 307, 308, 311, 312, 315], "replayargsconfig": 291, "target_net_updat": [293, 305, 306], "constitu": 293, "learnt": [293, 305, 307], "tensorboardlogg": [293, 299], "egreedywrapp": [293, 306, 308], "env_proof": 293, "obs_spec": 293, "net_valu": 293, "dir": [293, 303, 306], "gettempdir": 293, "argpars": [294, 297], "namespac": [294, 297], "parser": [294, 297], "transformed_env_constructor": [294, 299], "num_env_per_collector": [295, 296], "video_tag": 297, "norm_obs_onli": 297, "use_env_cr": 297, "custom_env_mak": 297, "custom_env": 297, "return_transformed_env": 297, "action_dim_gsd": 297, "state_dim_gsd": 297, "obs_norm_state_dict": 297, "wheter": 297, "maker": 297, "asyncdatacollector": 299, "distributedsyncdatacollector": 299, "submitit_delayed_launch": 299, "raycollector": 299, "samplerwithoutreplac": [299, 307, 311, 314], "tensorstorag": 299, "tensordictroundrobinwrit": 299, "d4rlexperiencereplai": 299, "openmlexperiencereplai": 299, "unboundeddiscretetensorspec": [299, 307], "lazystackedtensorspec": 299, "lazystackedcompositespec": 299, "prompttensordicttoken": 299, "rolloutfrommodel": 299, "tokenizeddatasetload": 299, "create_infinite_iter": 299, "consolidate_spec": 299, "check_no_exclusive_kei": 299, "contains_lazy_spec": 299, "check_marl_group": 299, "tensordictrecord": 299, "videorecord": [299, 307], "get_available_librari": 299, "set_exploration_mod": 299, "make_composite_from_td": [299, 312], "braxwrapp": 299, "dmcontrolenv": [299, 305, 310, 317], "dmcontrolwrapp": 299, "jumanjienv": 299, "jumanjiwrapp": 299, "multithreadedenvwrapp": 299, "openmlenv": 299, "pettingzooenv": 299, "pettingzoowrapp": 299, "robohiveenv": 299, "smacv2env": 299, "smacv2wrapp": 299, "vmaswrapp": 299, "qvaluehook": 299, "distributionalqvaluehook": 299, "reset_nois": 299, "cemplann": 299, "mpcplannerbas": 299, "mppiplann": 299, "independentnorm": 299, "truncatednorm": 299, "maskedonehotcategor": 299, "inv_softplu": 299, "vmapmodul": 299, "distributionaldqnloss": [299, 306], "discretesacloss": 299, "iqlloss": 299, "cqlloss": 299, "dtloss": 299, "onlinedtloss": 299, "a2closs": 299, "reinforceloss": 299, "dreameractorloss": 299, "dreamermodelloss": 299, "dreamervalueloss": 299, "td0estim": [299, 305], "td1estim": [299, 305], "td0_return_estim": 299, "td0_advantage_estim": 299, "td1_return_estim": 299, "vec_td1_return_estim": 299, "td1_advantage_estim": 299, "vec_td1_advantage_estim": 299, "td_lambda_return_estim": 299, "vec_td_lambda_return_estim": 299, "td_lambda_advantage_estim": 299, "vec_td_lambda_advantage_estim": 299, "generalized_advantage_estim": 299, "vec_generalized_advantage_estim": 299, "reward2go": 299, "distance_loss": [299, 305], "hold_out_net": 299, "hold_out_param": [299, 305], "softupd": [299, 305, 306, 308], "hardupd": [299, 305], "batchsubsampl": [299, 303], "clearcudacach": 299, "countframeslog": 299, "logreward": [299, 303, 306], "optimizerhook": [299, 306], "replaybuffertrain": [299, 303, 306], "rewardnorm": 299, "selectkei": [299, 303], "trainerhookbas": [299, 303, 306], "updateweight": [299, 303, 306], "make_collector_offpolici": 299, "make_collector_onpolici": 299, "make_dqn_loss": 299, "make_redq_loss": 299, "make_redq_model": 299, "make_replay_buff": [299, 305], "make_target_updat": 299, "parallel_env_constructor": [299, 305], "sync_async_collector": 299, "sync_sync_collector": 299, "correct_for_frame_skip": 299, "get_stats_random_rollout": 299, "csvlogger": [299, 306], "mlflowlogg": 299, "wandblogg": 299, "get_logg": 299, "generate_exp_nam": 299, "journei": 300, "textbook": 300, "highlight": 300, "ever": [300, 311], "bump": 300, "think": [300, 307, 311, 317], "benefit": [300, 311, 314], "pr": 300, "ground": [301, 305, 312], "categori": [301, 303], "recycl": [301, 314], "impos": 301, "violat": 301, "noisier": 301, "Their": [301, 311], "sd": 301, "prob_modul": 301, "pick": [301, 305, 306], "tabl": [301, 306], "customari": 301, "hopefulli": [301, 306], "mathbb": [301, 306], "rightarrow": [301, 306], "soften": 301, "backbon": [301, 308, 310, 316], "make_actor": 301, "make_valu": 301, "shared_param": 301, "make_common": 301, "reusabl": [302, 305, 314], "swappabl": [302, 305], "characterist": [302, 305, 312], "trainabl": [302, 305, 313], "whatev": [302, 305], "convent": [302, 305, 308, 311, 312], "smth": [302, 305], "metric": [302, 305], "nutshel": [302, 305], "barto": [302, 311], "chapter": 302, "significantli": [302, 305, 306, 311], "next_stat": 302, "value_net_loss": 302, "pow": [302, 305], "therebi": 302, "room": 302, "convers": 302, "signifi": [302, 311], "underperform": 302, "thin": 302, "intric": 302, "outer": [303, 305, 306, 317], "believ": 303, "scheme": [303, 317], "substenti": 303, "_pre_steps_log_hook": 303, "_pre_optim_hook": 303, "sub_batch": 303, "_post_loss_hook": 303, "_post_optim_hook": 303, "post_optim": [303, 306], "_post_optim_log": 303, "post_optim_log": 303, "_post_steps_hook": 303, "_post_steps_log_hook": 303, "post_steps_log": 303, "comment": [303, 306, 316], "extens": [303, 314], "reserv": 303, "logginghook": 303, "logging_hook": 303, "save_dict": 303, "some_valu": 303, "torchsnapshot": 303, "ckpt_backend": 303, "pt": 303, "filepath": 303, "save_train": 303, "load_from_fil": 303, "perfectli": [303, 305, 312], "intern": 304, "author": [305, 306, 307, 308, 311, 312, 314], "vincent": [305, 306, 307, 308, 312, 314], "moen": [305, 306, 307, 308, 312, 314], "assembl": 305, "focus": 305, "straightforward": [305, 306, 314], "overview": [305, 307, 311, 316], "transpar": [305, 308], "understood": 305, "sota": [305, 306, 316], "illustr": [305, 306, 314], "device_count": [305, 306, 308, 313, 317], "loss_dict": 305, "modal": 305, "oblivi": [305, 307, 314], "elementari": 305, "didact": 305, "dilut": 305, "pessimist": [305, 306, 307], "target_actor_network_param": 305, "actor_in_kei": 305, "actor_crit": 305, "noth": [305, 307], "compromis": 305, "hp": 305, "hasattr": 305, "_value_estim": 305, "elif": [305, 306], "notimplementederror": 305, "unknown": 305, "_loss_actor": 305, "td_copi": 305, "actor_network_param": 305, "value_network_param": 305, "_loss_valu": 305, "pred_val": 305, "target_value_network_param": 305, "smooth": [305, 306], "loss_funt": 305, "glue": 305, "_forward": 305, "ndimens": 305, "remaind": 305, "focu": [305, 306, 307], "pixels_onli": [305, 306, 316, 317], "env_librari": 305, "env_task": 305, "env_arg": 305, "friendli": 305, "torchr": 305, "rescal": 305, "presum": 305, "leav": 305, "make_transformed_env": 305, "reward_sc": 305, "double_to_float_list": 305, "double_to_float_inv_list": 305, "marker": 305, "env_per_collector": 305, "transform_state_dict": 305, "make_t_env": 305, "adjust": [305, 311, 312], "seem": [305, 308], "cheat": 305, "10m": 305, "cautiou": 305, "deal": [305, 307, 311, 314], "magnitud": 305, "thousand": [305, 308], "get_env_stat": 305, "proof_env": 305, "5000": [305, 306, 307], "maxim": [305, 312], "recal": [305, 307], "ddpgmlpactor": 305, "ddpgmlpqnet": 305, "materi": 305, "ornsteinuhlenbeckprocesswrapp": 305, "make_ddpg_actor": 305, "q_net": 305, "moduless": 305, "sugges": 305, "1_000_000": [305, 308], "tight": 305, "10_000": [305, 307, 314], "traj_len": [305, 308], "make_record": 305, "recorder_obj": 305, "flavor": 305, "circular": 305, "buffer_s": [305, 306], "random_crop_len": 305, "prb": 305, "buffer_scratch_dir": 305, "temporari": 305, "dirrectori": 305, "trajecotri": 305, "25": [305, 306, 312, 315], "sampel": 305, "dataflow": 305, "ceil_div": 305, "utd": [305, 308], "update_to_data": 305, "realiz": 305, "_must_": 305, "001": [305, 312], "outdat": 305, "trick": [305, 306], "despit": 305, "adam": [305, 306, 307, 308, 311, 312], "optimizer_actor": 305, "lr": [305, 306, 307, 308, 311, 312], "weight_decai": [305, 306], "optimizer_valu": 305, "total_collection_step": 305, "pretti": [305, 314], "rewards_ev": 305, "collected_fram": 305, "pbar": [305, 307, 308, 311, 312], "r0": 305, "numel": [305, 307, 308, 313, 314], "current_fram": 305, "sampled_tensordict": 305, "gn1": 305, "clip_grad_norm_": [305, 307, 311, 312], "gn2": 305, "gn": [305, 312], "td_record": 305, "rn": 305, "rs": 305, "set_descript": [305, 307, 308, 311, 312], "2f": 305, "00": [305, 306, 307, 308, 311, 312, 315], "800": [305, 306], "3063": 305, "20it": [305, 312], "1600": [305, 306], "979": 305, "62it": [305, 306], "3200": [305, 306], "2033": 305, "12it": [305, 306, 312], "40": [305, 306, 307, 311, 312], "4000": [305, 306, 307], "02": [305, 306, 307, 308, 311, 312, 315], "2400": [305, 306], "30it": [305, 306, 308], "48": [305, 306, 311, 312, 314, 315, 317], "4800": [305, 306, 312], "2675": 305, "11it": [305, 306, 312], "91": [305, 306, 311, 312], "59": [305, 306, 312], "325": [305, 312], "56": [305, 306, 312], "5600": 305, "6400": [305, 316], "1274": [305, 312], "58it": [305, 306], "62": [305, 306, 312], "51": [305, 306, 312], "96": [305, 306, 312, 314], "41": [305, 306, 308, 311, 312], "185": [305, 312], "80": [305, 306, 307, 311, 312], "54": [305, 306, 312], "72": [305, 306, 312, 314], "7200": 305, "05": [305, 306, 312], "496": [305, 312], "60it": [305, 306], "83": [305, 306, 312], "146": [305, 312], "365": [305, 312], "85": [305, 306, 312], "8000": [305, 307], "476": [305, 307, 312], "25it": [305, 306, 312], "97": [305, 306, 311, 312], "233": [305, 312], "267": [305, 312], "73": [305, 306, 312], "74": [305, 306, 312], "8800": 305, "454": [305, 312], "43it": [305, 306], "93": [305, 306, 308, 312], "63": [305, 306, 312], "58": [305, 306, 308, 312], "207": [305, 312], "90": [305, 306, 307, 311, 312], "57": [305, 306, 312], "9600": 305, "378": [305, 312], "34it": [305, 306], "22": [305, 306, 312], "69": [305, 306, 312], "199": [305, 312], "43": [305, 306, 308, 312], "60": [305, 306, 307, 311, 312, 314, 316], "89": [305, 306, 311, 312, 314], "10400it": 305, "387": [305, 312], "71": [305, 306, 312], "45": [305, 306, 308, 312], "28": [305, 306, 307, 312, 315], "246": [305, 312], "19": [305, 306, 307, 308, 312], "plot": [305, 307, 308, 311, 312], "mention": [305, 308, 314, 317], "matplotlib": [305, 307, 308, 311, 312, 314, 317], "pyplot": [305, 307, 308, 311, 312, 314, 317], "plt": [305, 307, 308, 311, 312, 314, 317], "zip": [305, 309], "legend": 305, "xlabel": [305, 308, 311, 312], "ylabel": [305, 311], "tight_layout": 305, "concret": [305, 307], "takeawai": [305, 306], "minut": [305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "699": [305, 315], "mb": [305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317], "coding_ddpg": [305, 315], "jupyt": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317], "ipynb": [305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317], "galleri": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317], "sphinx": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317], "customis": [306, 311], "road": 306, "aspect": 306, "did": [306, 307, 314, 317], "highest": 306, "prerequisit": 306, "familiar": [306, 311, 317], "lookup": 306, "amort": [306, 307], "cart": 306, "pole": 306, "un": 306, "actuat": 306, "frictionless": 306, "upright": 306, "duelingcnndqnet": 306, "is_notebook": 306, "shell": 306, "get_ipython": 306, "__class__": 306, "zmqinteractiveshel": 306, "qtconsol": 306, "terminalinteractiveshel": 306, "ipython": [306, 311, 312], "nameerror": 306, "interpret": 306, "umbrella": 306, "misplac": 306, "misus": 306, "orchestr": 306, "everyth": [306, 308], "five": [306, 307], "64x64": 306, "motion": [306, 312], "obs_norm_sd": 306, "simpler": 306, "get_norm_stat": 306, "test_env": 306, "make_model": 306, "dummy_env": 306, "output_s": [306, 308], "init_bia": 306, "actor_explor": 306, "eps_greedy_v": 306, "eps_greedy_val_env": 306, "get_replay_buff": 306, "n_optim": 306, "themselv": 306, "simplic": [306, 307, 313, 314], "get_collector": 306, "data_collector": 306, "bunch": 306, "concept": [306, 314], "power": 306, "ubiquit": 306, "get_loss_modul": 306, "target_updat": 306, "995": [306, 312], "sensit": 306, "variat": 306, "2e": [306, 312], "wd": 306, "upd": 306, "harder": [306, 316], "5_000": 306, "500000": 306, "100000": 306, "005": 306, "mandatori": [306, 307, 311, 312], "fairer": 306, "budget": [306, 307], "dqn_exp_": 306, "uuid1": [306, 317], "9895": 306, "0737": 306, "tmp": [306, 314], "tmps9i_22fm": 306, "dqn_exp_4874fbc8": 306, "53db": 306, "11ee": 306, "9556": 306, "0242ac120002": 306, "registr": 306, "cumbersom": 306, "buffer_hook": 306, "weight_updat": 306, "descript": [306, 307], "aliv": 306, "total_reward": 306, "18it": [306, 312], "4045": 306, "9346": [306, 312], "05it": [306, 312], "4074": [306, 312], "70it": 306, "89it": 306, "160": [306, 312], "73it": 306, "4012": 306, "192": [306, 312], "55": [306, 311, 312], "47it": [306, 312], "4797": 306, "224": [306, 312], "31": [306, 312, 314], "41it": 306, "4948": 306, "36": [306, 312, 314], "92it": [306, 307], "4676": 306, "288": [306, 312], "39": [306, 308, 312, 314], "19it": [306, 307], "4345": 306, "320": [306, 312], "49": [306, 312], "82it": 306, "352": [306, 312], "97it": [306, 312], "4497": 306, "384": [306, 312], "93it": [306, 312], "3893": 306, "416": [306, 312], "56it": [306, 307], "4224": 306, "448": [306, 312], "47": [306, 312], "24it": 306, "3590": 306, "480": [306, 307, 312, 313], "90it": [306, 312], "96it": [306, 312], "544": [306, 312], "576": [306, 312], "22it": [306, 307, 312], "608": [306, 312], "40it": 306, "3862": 306, "640": 306, "68it": 306, "4314": 306, "672": 306, "52": [306, 312, 314], "74it": 306, "704": 306, "736": 306, "39it": 306, "3379": 306, "768": 306, "48it": [306, 312], "3923": 306, "81it": [306, 312], "832": 306, "864": 306, "50it": [306, 312], "896": 306, "928": 306, "36it": [306, 307], "960": 306, "42it": 306, "992": [306, 312], "54it": 306, "4254": [306, 312], "4134": 306, "1056": 306, "44it": 306, "1088": 306, "1120": 306, "77it": 306, "1152": 306, "1184": 306, "78it": [306, 307], "1216": 306, "4526": 306, "1248": 306, "57it": 306, "1280": 306, "1344": 306, "35it": 306, "1376": 306, "37": [306, 307, 311, 312, 315], "28it": 306, "1408": 306, "59it": 306, "1440": 306, "63it": 306, "1472": 306, "1504": 306, "53": [306, 312, 314], "31it": 306, "1536": 306, "1568": 306, "1632": 306, "27it": 306, "1696": 306, "99it": [306, 312], "1728": 306, "1760": 306, "95it": 306, "1792": 306, "29it": [306, 308], "4434": 306, "1824": 306, "1856": 306, "1888": 306, "1920": 306, "4586": 306, "1952": 306, "1984": 306, "2016": 306, "2048": [306, 313], "01it": [306, 312], "2080": 306, "2112": [306, 312], "2144": 306, "69it": [306, 312], "2176": 306, "2208": 306, "55it": 306, "2240": 306, "2272": 306, "2304": 306, "65it": [306, 312], "2336": 306, "61it": 306, "2368": 306, "71it": 306, "2432": 306, "2464": 306, "64it": 306, "2496": 306, "84it": [306, 307], "4164": [306, 312], "2528": [306, 312], "2560": 306, "2592": 306, "80it": [306, 308, 312], "2624": 306, "2656": [306, 312], "06it": [306, 312], "2688": 306, "2720": [306, 312], "2752": 306, "2784": 306, "2816": 306, "23it": [306, 312], "2848": 306, "67it": [306, 312], "2880": 306, "33it": 306, "2912": 306, "07": [306, 311, 312, 315], "2944": [306, 312], "2976": [306, 312], "3008": 306, "09": [306, 312], "61": [306, 312], "3040": 306, "07it": [306, 312], "3072": 306, "3104": 306, "53it": [306, 307], "3136": 306, "3168": 306, "65": [306, 312], "3232": [306, 312], "6667": 306, "3264": 306, "66": [306, 312], "3296": 306, "14it": [306, 307, 312], "67": [306, 310, 312], "3328": 306, "46it": [306, 312], "3360": 306, "68": [306, 312], "3392": 306, "94it": 306, "3424": 306, "13it": [306, 312], "3456": [306, 312], "70": [306, 307, 311, 312], "3488": 306, "3520": 306, "3552": 306, "52it": [306, 312], "3584": 306, "17it": [306, 312], "3616": 306, "32it": 306, "3648": 306, "38it": 306, "3680": 306, "3712": 306, "03it": [306, 312], "75": [306, 312], "3744": 306, "76": [306, 312, 314], "3776": 306, "15it": [306, 312], "3808": 306, "77": [306, 312, 314], "3840": 306, "3872": 306, "78": [306, 312], "3904": 306, "79": [306, 312], "3936": 306, "3968": 306, "21it": 306, "88it": [306, 312], "4032": 306, "4104": 306, "4064": 306, "16it": [306, 312], "82": [306, 312], "4096": 306, "4128": [306, 312], "4160": 306, "84": [306, 308, 312, 314], "4192": 306, "4524": 306, "4256": [306, 312], "86": [306, 311, 312], "4288": [306, 312], "10it": [306, 312], "4320": 306, "4352": 306, "4384": 306, "45it": [306, 312], "4416": 306, "4448": 306, "72it": 306, "4480": 306, "4512": 306, "4544": 306, "92": [306, 307, 312, 314], "4576": 306, "91it": [306, 312], "4608": 306, "4640": 306, "4672": [306, 312], "4704": 306, "4736": 306, "66it": 306, "4768": 306, "87it": [306, 312], "4832": 306, "75it": 306, "4864": 306, "51it": 306, "4896": 306, "4928": 306, "4960": 306, "4992": 306, "5024it": 306, "quickli": [306, 311, 317], "print_csv_files_in_fold": 306, "folder_path": 306, "csv_file": 306, "output_str": 306, "dirpath": 306, "walk": [306, 310], "endswith": 306, "strip": 306, "grad_norm_0": 306, "qvaluenetwork": 306, "worst": 306, "accuraci": 306, "fanci": 306, "227": [306, 312, 315], "849": 306, "coding_dqn": [306, 315], "demonstr": [307, 311, 312, 317], "talk": 307, "repetit": 307, "six": 307, "sophist": [307, 311], "invent": 307, "theta_k": 307, "frac": 307, "pi_": 307, "exceed": 307, "discourag": [307, 312], "indispens": 307, "analyz": 307, "lingua": 307, "franca": 307, "defaultdict": [307, 312], "has_cuda": [307, 311, 317], "3e": [307, 308, 311], "max_grad_norm": [307, 311], "big": [307, 314, 317], "ourselv": [307, 317], "benefici": 307, "errat": 307, "hamper": [307, 314], "reactiv": 307, "xy": 307, "sub_batch_s": 307, "num_epoch": [307, 311], "entropy_ep": [307, 311], "generalist": 307, "interchang": [307, 313, 314], "panel": 307, "charact": 307, "inverteddoublependulum": 307, "transmit": 307, "stai": 307, "thumb": 307, "supplementari": [307, 317], "told": 307, "stringent": [307, 311], "nevertheless": [307, 314], "confid": [307, 311], "pack": [307, 317], "ran": 307, "f_": 307, "mu_": 307, "difficulti": [307, 317], "brought": [307, 308], "d_ob": 307, "d_action": 307, "policy_modul": [307, 311], "That": 307, "said": 307, "briefli": [307, 311], "refil": [307, 311], "capac": 307, "conveni": [307, 311, 312], "easiest": [307, 311], "mathemat": [307, 311], "tradeoff": [307, 311], "advantage_modul": 307, "lr_schedul": [307, 312], "cosineannealinglr": [307, 312], "eval_str": 307, "tensordict_data": [307, 311], "data_view": [307, 311], "subdata": [307, 311], "cum_reward_str": 307, "4f": [307, 308, 312], "stepcount_str": 307, "param_group": 307, "lr_str": 307, "eval_rollout": 307, "nice": 307, "464": [307, 312], "1539": 307, "0864": 307, "0003": [307, 312], "470": [307, 312], "1220": 307, "3000": 307, "475": [307, 312], "1634": 307, "478": [307, 312], "1902": 307, "0002": [307, 312], "481": [307, 312], "26it": 307, "6000": 307, "471": [307, 312], "2378": 307, "7000": 307, "2309": 307, "2342": 307, "9000": 307, "2463": 307, "2530": 307, "cap": [307, 314], "figsiz": [307, 312], "subplot": [307, 312, 317], "titl": [307, 308, 311, 312], "bit": [307, 308, 311, 314], "568": [307, 312, 315], "coding_ppo": [307, 315], "rnn": 308, "lstmmodul": 308, "84x84": 308, "accessori": 308, "stamp": 308, "tensordictprim": 308, "se": 308, "flank": 308, "assist": 308, "emb": 308, "n_cell": 308, "customiz": 308, "almost": 308, "bidirect": 308, "wouldn": 308, "make_tensordict_prim": 308, "interpolationmod": 308, "qval": 308, "stoch_polici": 308, "cudnn": 308, "opportun": 308, "coupl": [308, 312, 314], "uniniti": 308, "again": [308, 311, 313, 314, 317], "redund": 308, "strongli": 308, "million": 308, "sake": [308, 313, 314], "20_000": [308, 312], "longest": 308, "npai": 308, "recurrent_st": 308, "action_spread": 308, "1000000": 308, "112": [308, 312], "0005": 308, "0006": [308, 312], "150": [308, 312, 314], "98it": [308, 312], "0004": [308, 312], "559": [308, 312, 315], "2103": [308, 315], "dqn_with_rnn": [308, 315], "tutorials_python": 309, "tutorials_jupyt": 309, "distinct": 310, "humanoid": 310, "env1_obs_kei": 310, "observation_stand": 310, "env2_obs_kei": 310, "observation_walk": 310, "tdreset1": 310, "tdreset2": 310, "tdreset": 310, "policy_common": 310, "policy_stand": 310, "policy_walk": 310, "But": 310, "exclusive_field": [310, 316], "stack_dim": [310, 316], "env1_mak": 310, "env2_mak": 310, "_single_task": 310, "td_rollout": 310, "681": [310, 315], "multi_task": [310, 315], "matteo": 311, "bettini": 311, "maddpg": 311, "navig": 311, "lidar": 311, "sensor": 311, "collis": 311, "tie": 311, "mappo": 311, "ippo": 311, "phase": [311, 314], "mathbf": 311, "pi": [311, 312], "_t": [311, 312], "fed": [311, 314], "approxim": [311, 317], "decentralis": 311, "literatur": 311, "overcom": 311, "stationari": 311, "concurr": 311, "analys": 311, "gui": 311, "visualis": 311, "multiagentmlp": 311, "divic": 311, "vmas_devic": 311, "6_000": 311, "team": [311, 316], "n_iter": 311, "minibatch_s": 311, "generalis": 311, "furthermor": 311, "simd": 311, "parallelis": 311, "warp": 311, "todai": 311, "circl": 311, "surround": 311, "dot": [311, 312], "collid": 311, "drag": 311, "elast": 311, "acceler": 311, "penalis": 311, "num_vmas_env": 311, "scenario_nam": 311, "four": [311, 312], "environmnet": 311, "final_rew": 311, "agent_collis": 311, "stress": 311, "paramount": 311, "episode_reward": 311, "n_rollout_step": 311, "evolut": 311, "yourself": 311, "utilis": 311, "n_actions_per_ag": 311, "n_obs_per_ag": 311, "share_parameters_polici": 311, "policy_net": 311, "denot": 311, "unbatched_action_spec": 311, "carefulli": [311, 317], "grant": 311, "converg": 311, "cooper": 311, "share_parameters_crit": 311, "critic_net": 311, "fantast": 311, "minibatch": 311, "desc": 311, "episode_reward_mean": 311, "episode_reward_mean_list": 311, "critic_param": 311, "target_critic_param": 311, "refresh": 311, "3641679584980011": 311, "5052392482757568": 311, "0283849239349365": 311, "331086277961731": 311, "0674946308135986": 311, "245943784713745": 311, "611856698989868": 311, "8442416191101074": 311, "856468677520752": 311, "9219210147857666": 311, "xvfb": 311, "pyvirtualdisplai": 311, "1400": [311, 312], "900": 311, "pil": 311, "rendering_callback": 311, "fromarrai": 311, "rgb_arrai": [311, 312], "gif": 311, "save_al": 311, "append_imag": 311, "profici": 311, "master": 311, "281": [311, 312, 315], "multiagent_ppo": [311, 315], "freeli": 312, "touch": 312, "undertaken": 312, "broader": 312, "wider": 312, "algebra": 312, "acquaint": 312, "avenu": 312, "_apply_to_composit": 312, "default_x": 312, "default_i": 312, "torqu": 312, "upward": 312, "angular": 312, "sin": 312, "rad": 312, "sec": 312, "gravit": 312, "angl": 312, "deleg": 312, "new_th": 312, "new_thdot": 312, "thdot": 312, "g_forc": 312, "max_torqu": 312, "angle_norm": 312, "max_spe": 312, "albeit": 312, "gen_param": 312, "high_th": 312, "high_thdot": 312, "low_th": 312, "low_thdot": 312, "rng": 312, "lazili": 312, "trivial": 312, "neither": 312, "shortcut": [312, 317], "irrelev": 312, "_make_spec": 312, "td_param": 312, "pseudo": 312, "render_mod": 312, "render_fp": 312, "random_": 312, "_make_step": 312, "staticmethod": 312, "complic": [312, 314, 317], "showcas": 312, "skeleton": 312, "_apply_transform": [312, 317], "_inv_apply_transform": [312, 317], "subset": [312, 313], "unitari": 312, "sine": 312, "cosin": 312, "sintransform": 312, "costransform": 312, "t_sin": 312, "t_co": 312, "cat_transform": 312, "mdp": 312, "convin": 312, "simple_rollout": 312, "_data": 312, "unexplor": 312, "assumpt": [312, 314], "recreat": 312, "init_td": 312, "traj_return": 312, "last_reward": 312, "is_ipython": 312, "inlin": 312, "get_backend": 312, "ion": 312, "gcf": 312, "clear_output": 312, "625": 312, "0488": 312, "0748": 312, "519": 312, "0499": 312, "4472": 312, "073": 312, "0685": 312, "0408": 312, "552": 312, "04it": 312, "5154": 312, "9086": 312, "527": 312, "9385": 312, "155": 312, "2568": 312, "4981": 312, "223": 312, "8929": 312, "4491": 312, "581": 312, "3233": 312, "0664": 312, "596": 312, "1021": 312, "5263": 312, "9579": 312, "5807": 312, "8075": 312, "212": 312, "2009": 312, "5525": 312, "914": 312, "2894": 312, "0115": 312, "0977": 312, "1845": 312, "09it": 312, "1830": 312, "4858": 312, "2863": 312, "0297": 312, "4617": 312, "5997": 312, "904": 312, "1647": 312, "0777": 312, "901": 312, "4709": 312, "6813": 312, "8317": 312, "3221": 312, "5554": 312, "276": 312, "3353": 312, "701": 312, "8570": 312, "6656": 312, "463": 312, "7779": 312, "6911": 312, "875": 312, "0796": 312, "7082": 312, "308": 312, "0421": 312, "1496": 312, "5037": 312, "1755": 312, "5029": 312, "9454": 312, "665": 312, "9330": 312, "2118": 312, "444": 312, "0995": 312, "6294": 312, "3146": 312, "2909": 312, "461": 312, "9720": 312, "1298": 312, "9923": 312, "0345": 312, "02it": 312, "3438": 312, "3688": 312, "424": 312, "00it": 312, "6953": 312, "5233": 312, "411": 312, "8011": 312, "5329": 312, "2677": 312, "6969": 312, "7010": 312, "376": 312, "9352": 312, "7707": 312, "6178": 312, "5646": 312, "348": 312, "7304": 312, "9407": 312, "942": 312, "3882": 312, "7604": 312, "3507": 312, "8928": 312, "258": 312, "6978": 312, "4641": 312, "549": 312, "6047": 312, "5005": 312, "4136": 312, "2993": 312, "3222": 312, "4046": 312, "7314": 312, "275": 312, "6331": 312, "9318": 312, "961": 312, "8331": 312, "1604": 312, "4099": 312, "4761": 312, "125": 312, "4262": 312, "6363": 312, "382": 312, "3593": 312, "7377": 312, "2847": 312, "3443": 312, "867": 312, "3592": 312, "4760": 312, "441": 312, "9950": 312, "8021": 312, "3528": 312, "1214": 312, "708": 312, "4023": 312, "3583": 312, "041": 312, "3801": 312, "0310": 312, "120": [312, 314], "4244": 312, "2039": 312, "4850": 312, "8748": 312, "706": 312, "4897": 312, "9210": 312, "8964": 312, "0832": 312, "3934": 312, "456": 312, "8971": 312, "2933": 312, "3377": 312, "6996": 312, "2274": 312, "8916": 312, "098": 312, "2660": 312, "9110": 312, "4503": 312, "6956": 312, "9172": 312, "4026": 312, "946": [312, 315, 317], "9229": 312, "5205": 312, "294": 312, "8872": 312, "6637": 312, "019": 312, "9281": 312, "2082": 312, "724": 312, "8561": 312, "6574": 312, "357": 312, "4138": 312, "5230": 312, "385": 312, "4065": 312, "5642": 312, "921": 312, "08it": 312, "9786": 312, "4129": 312, "5831": 312, "266": 312, "7723": 312, "4152": 312, "0898": 312, "389": 312, "5155": 312, "5376": 312, "5616": 312, "4094": 312, "283": 312, "5333": 312, "4803": 312, "895": 312, "6566": 312, "2588": 312, "662": 312, "4732": 312, "7503": 312, "068": 312, "0714": 312, "3370": 312, "059": 312, "8612": 312, "1915": 312, "3855": 312, "0349": 312, "9644": 312, "4538": 312, "445": 312, "0392": 312, "4080": 312, "1648": 312, "9599": 312, "143": [312, 315], "4284": 312, "5946": 312, "2590": 312, "9181": 312, "4621": 312, "9075": 312, "674": 312, "1772": 312, "9444": 312, "351": 312, "9391": 312, "5595": 312, "8673": 312, "6240": 312, "5919": 312, "0018": 312, "1071": 312, "9127": 312, "251": 312, "9799": 312, "3131": 312, "9612": 312, "9705": 312, "8741": 312, "2230": 312, "0972": 312, "0337": 312, "0350": 312, "0654": 312, "102": [312, 314], "2441": 312, "4596": 312, "362": 312, "103": 312, "4362": 312, "171": 312, "104": 312, "4041": 312, "6907": 312, "105": 312, "4664": 312, "2760": 312, "0299": 312, "9712": 312, "349": 312, "107": [312, 314], "3332": 312, "4479": 312, "772": 312, "108": [312, 314], "4357": 312, "9591": 312, "543": 312, "109": 312, "6216": 312, "1353": 312, "692": 312, "110": [312, 314], "6261": 312, "7086": 312, "111": 312, "7758": 312, "9818": 312, "7772": 312, "5055": 312, "113": 312, "5840": 312, "3180": 312, "2083": 312, "115": 312, "5275": 312, "6873": 312, "116": 312, "4107": 312, "1624": 312, "117": 312, "6372": 312, "2571": 312, "118": 312, "4039": 312, "4428": 312, "119": 312, "4728": 312, "5628": 312, "6767": 312, "2466": 312, "522": 312, "121": [312, 317], "5873": 312, "5072": 312, "122": [312, 317], "6548": 312, "3766": 312, "123": 312, "5134": 312, "1955": 312, "124": 312, "2481": 312, "0591": 312, "4500": 312, "3368": 312, "126": 312, "9708": 312, "7059": 312, "127": [312, 314], "3031": 312, "2534": 312, "843": 312, "3327": 312, "6193": 312, "129": 312, "4831": 312, "1172": 312, "2593": 312, "4219": 312, "962": 312, "8380": 312, "899": 312, "132": 312, "2721": 312, "9048": 312, "166": 312, "133": 312, "2419": 312, "5248": 312, "134": 312, "2139": 312, "4278": 312, "135": 312, "0690": 312, "5140": 312, "136": [312, 314, 315], "1140": 312, "7402": 312, "137": 312, "5356": 312, "1636": 312, "138": 312, "0671": 312, "8798": 312, "139": [312, 314], "8918": 312, "3298": 312, "307": 312, "140": [312, 314], "1779": 312, "141": [312, 314], "1771": 312, "3624": 312, "936": 312, "142": 312, "1683": 312, "4810": 312, "9373": 312, "4435": 312, "144": 312, "4396": 312, "8092": 312, "145": 312, "2572": 312, "4212": 312, "0260": 312, "147": 312, "0939": 312, "6478": 312, "605": 312, "148": 312, "6606": 312, "7289": 312, "149": 312, "9300": 312, "7193": 312, "563": 312, "1166": 312, "8514": 312, "151": 312, "9108": 312, "0672": 312, "292": 312, "152": 312, "8591": 312, "3768": 312, "153": [312, 314], "9976": 312, "154": 312, "0576": 312, "0067": 312, "935": 312, "4199": 312, "1722": 312, "156": 312, "8310": 312, "3466": 312, "157": [312, 314], "8631": 312, "2492": 312, "158": 312, "8763": 312, "1277": 312, "159": 312, "5562": 312, "7446": 312, "1082": 312, "9830": 312, "161": 312, "0946": 312, "5229": 312, "162": 312, "4574": 312, "6900": 312, "163": [312, 313], "2229": 312, "0318": 312, "482": 312, "164": 312, "0543": 312, "0817": 312, "761": 312, "165": 312, "2809": 312, "5118": 312, "366": 312, "1142": 312, "5635": 312, "167": 312, "1949": 312, "2327": 312, "982": 312, "168": 312, "0967": 312, "0387": 312, "457": 312, "169": 312, "0782": 312, "2150": 312, "170": [312, 314], "5222": 312, "3725": 312, "9288": 312, "9837": 312, "172": 312, "1416": 312, "1099": 312, "173": 312, "8620": 312, "8475": 312, "174": [312, 315, 316], "1807": 312, "4375": 312, "175": 312, "1148": 312, "0645": 312, "2751": 312, "8313": 312, "177": 312, "9286": 312, "9770": 312, "178": 312, "5735": 312, "2837": 312, "179": [312, 314], "2926": 312, "9489": 312, "180": 312, "1507": 312, "181": 312, "8724": 312, "3567": 312, "182": 312, "3574": 312, "6140": 312, "183": 312, "7895": 312, "2518": 312, "184": 312, "6146": 312, "8776": 312, "7358": 312, "186": 312, "3722": 312, "8428": 312, "187": 312, "7955": 312, "188": 312, "0092": 312, "7106": 312, "829": 312, "189": 312, "2264": 312, "6919": 312, "190": 312, "1438": 312, "1362": 312, "191": 312, "0618": 312, "8217": 312, "9420": 312, "6765": 312, "193": 312, "7745": 312, "0709": 312, "194": 312, "9478": 312, "6867": 312, "195": 312, "6507": 312, "6225": 312, "196": 312, "2244": 312, "2195": 312, "197": 312, "5385": 312, "9263": 312, "198": 312, "1878": 312, "2374": 312, "8054": 312, "3504": 312, "557": 312, "0766": 312, "6825": 312, "201": 312, "2011": 312, "8393": 312, "202": 312, "0803": 312, "7815": 312, "203": 312, "8363": 312, "2460": 312, "204": 312, "8643": 312, "2191": 312, "593": 312, "205": 312, "0773": 312, "1343": 312, "206": 312, "8657": 312, "9304": 312, "7584": 312, "208": 312, "8752": 312, "2307": 312, "209": 312, "5250": 312, "4869": 312, "210": 312, "7837": 312, "5762": 312, "211": 312, "6661": 312, "8600": 312, "2502": 312, "1752": 312, "213": 312, "3075": 312, "8871": 312, "214": 312, "9406": 312, "8090": 312, "215": 312, "6291": 312, "8923": 312, "876": 312, "216": 312, "9504": 312, "21e": 312, "217": 312, "7431": 312, "7880": 312, "218": 312, "4463": 312, "5432": 312, "219": 312, "3793": 312, "3313": 312, "220": 312, "8843": 312, "0369": 312, "065": 312, "221": 312, "4828": 312, "8391": 312, "222": 312, "6265": 312, "2913": 312, "947": 312, "5541": 312, "1252": 312, "7342": 312, "2396": 312, "225": 312, "5936": 312, "1924": 312, "226": 312, "9975": 312, "2045": 312, "8367": 312, "9540": 312, "228": 312, "7259": 312, "6743": 312, "229": 312, "4827": 312, "7528": 312, "230": 312, "7361": 312, "8756": 312, "231": 312, "7646": 312, "1116": 312, "232": 312, "5426": 312, "8385": 312, "5662": 312, "8585": 312, "234": 312, "8234": 312, "7930": 312, "235": 312, "2648": 312, "9309": 312, "236": 312, "6817": 312, "237": 312, "0943": 312, "1533": 312, "238": 312, "3045": 312, "0483": 312, "239": 312, "240": [312, 316], "6415": 312, "0201": 312, "241": 312, "4437": 312, "4365": 312, "242": 312, "0358": 312, "4943": 312, "243": 312, "1272": 312, "5003": 312, "1180": 312, "2637": 312, "245": 312, "7197": 312, "0873": 312, "2917": 312, "247": 312, "0160": 312, "0738": 312, "248": 312, "3689": 312, "0120": 312, "249": 312, "5570": 312, "0475": 312, "250": 312, "4423": 312, "2220": 312, "6803": 312, "252": 312, "1465": 312, "7214": 312, "253": 312, "8801": 312, "7034": 312, "254": 312, "9136": 312, "4076": 312, "7589": 312, "5013": 312, "8150": 312, "2241": 312, "257": 312, "0753": 312, "8081": 312, "1951": 312, "8314": 312, "259": 312, "0038": 312, "260": 312, "0889": 312, "4616": 312, "261": 312, "0655": 312, "262": 312, "8333": 312, "9476": 312, "263": 312, "7554": 312, "3798": 312, "264": 312, "3717": 312, "3947": 312, "529": 312, "265": 312, "3060": 312, "6495": 312, "7467": 312, "8889": 312, "8457": 312, "591": 312, "268": 312, "7137": 312, "0536": 312, "771": 312, "269": 312, "1651": 312, "388": 312, "270": 312, "8246": 312, "5709": 312, "271": 312, "7502": 312, "0521": 312, "032": 312, "272": 312, "5475": 312, "7253": 312, "273": 312, "2856": 312, "7130": 312, "274": 312, "2778": 312, "4122": 312, "8368": 312, "1841": 312, "9622": 312, "1603": 312, "003e": 312, "277": 312, "0247": 312, "346": 312, "278": 312, "2238": 312, "6418": 312, "279": 312, "0626": 312, "2538": 312, "280": 312, "0149": 312, "7380": 312, "2167": 312, "8911": 312, "282": 312, "8725": 312, "1983": 312, "8142": 312, "3709": 312, "284": 312, "4989": 312, "285": 312, "6464": 312, "6210": 312, "286": 312, "9726": 312, "0820": 312, "287": 312, "6975": 312, "9091": 312, "4926": 312, "4791": 312, "289": 312, "0905": 312, "3500": 312, "290": 312, "2287": 312, "291": 312, "9918": 312, "5543": 312, "9245": 312, "6444": 312, "631": 312, "293": 312, "0448": 312, "4769": 312, "8566": 312, "7208": 312, "295": 312, "0966": 312, "296": 312, "5303": 312, "1537": 312, "023": 312, "297": 312, "2682": 312, "564": 312, "298": 312, "4318": 312, "5063": 312, "299": 312, "7475": 312, "4190": 312, "8186": 312, "5077": 312, "301": 312, "1883": 312, "5291": 312, "472": 312, "302": 312, "1256": 312, "3998": 312, "303": 312, "3622": 312, "0930": 312, "626": 312, "304": 312, "9500": 312, "0075": 312, "5664": 312, "305": 312, "5697": 312, "3024": 312, "306": 312, "3117": 312, "0052": 312, "006": 312, "0981": 312, "9312": 312, "3873": 312, "309": 312, "0411": 312, "2650": 312, "310": 312, "1656": 312, "0228": 312, "004": 312, "311": 312, "1196": 312, "2478": 312, "312": 312, "7353": 312, "0812": 312, "313": 312, "3022": 312, "758": 312, "314": 312, "1406": 312, "4626": 312, "315": 312, "2156": 312, "851": 312, "316": 312, "1953": 312, "3774": 312, "317": 312, "6385": 312, "9917": 312, "318": 312, "2764": 312, "905": 312, "319": 312, "6391": 312, "9317": 312, "9748": 312, "2679": 312, "321": 312, "8495": 312, "5125": 312, "8177": 312, "6602": 312, "323": 312, "0704": 312, "5776": 312, "324": 312, "9833": [312, 316], "1339": 312, "402": 312, "1238": 312, "326": 312, "9299": 312, "0227": 312, "327": 312, "7727": 312, "1607": 312, "336": 312, "328": 312, "3958": 312, "3223": 312, "763": 312, "329": 312, "4742": 312, "1797": 312, "330": 312, "0144": 312, "0085": 312, "791": 312, "331": 312, "8284": 312, "0428": 312, "332": 312, "0098": 312, "7365": 312, "333": 312, "4566": 312, "0781": 312, "086": 312, "334": 312, "3355": 312, "0230": 312, "335": 312, "0423": 312, "076": 312, "3711": 312, "1335": 312, "6855": 312, "337": 312, "0304": 312, "0023": 312, "8459": 312, "338": 312, "9998": 312, "4399": 312, "339": 312, "2303": 312, "1346": 312, "340": 312, "2915": 312, "7116": 312, "341": 312, "5560": 312, "0487": 312, "342": 312, "5119": 312, "061": 312, "343": 312, "3305": 312, "3705": 312, "957": 312, "344": 312, "6068": 312, "345": 312, "5731": 312, "3897": 312, "0376": 312, "347": 312, "0434": 312, "012": 312, "1300": 312, "1215": 312, "0968": 312, "0885": 312, "350": 312, "1348": 312, "0073": 312, "5052": 312, "4184": 312, "2817": 312, "8887": 312, "353": 312, "4779": 312, "1009": 312, "354": 312, "0604": 312, "599": 312, "355": 312, "4486": 312, "1176": 312, "656": 312, "356": 312, "2436": 312, "0668": 312, "8849": 312, "0012": 312, "358": 312, "7511": 312, "8804": 312, "359": 312, "8870": 312, "6728": 312, "360": 312, "8841": 312, "5508": 312, "361": 312, "5242": 312, "0268": 312, "0013": 312, "6185": 312, "363": 312, "1378": 312, "0204": 312, "364": 312, "0355": 312, "685": 312, "4884": 312, "0231": 312, "0770": 312, "0014": 312, "6793": 312, "367": 312, "9834": 312, "863": 312, "368": 312, "6709": 312, "462": 312, "369": 312, "5199": 312, "9790": 312, "370": 312, "9401": 312, "7802": 312, "371": 312, "6723": 312, "372": 312, "2678": 312, "6201": 312, "373": 312, "2184": 312, "7385": 312, "374": 312, "6344": 312, "617": 312, "375": 312, "9945": 312, "0772": 312, "567": 312, "7576": 312, "0398": 312, "377": 312, "3396": 312, "0022": 312, "094": 312, "3073": 312, "4018": 312, "379": 312, "1869": 312, "380": 312, "0481": 312, "1117": 312, "381": 312, "6823": 312, "981": 312, "8305": 312, "0210": 312, "383": 312, "4908": 312, "0272": 312, "538": 312, "3267": 312, "0111": 312, "7965": 312, "1796": 312, "0039": 312, "5396": 312, "386": 312, "3757": 312, "0490": 312, "1394": 312, "4187": 312, "2986": 312, "7954": 312, "0063": 312, "813": 312, "390": 312, "8706": 312, "0114": 312, "391": 312, "6922": 312, "2423": 312, "392": 312, "9115": 312, "2602": 312, "393": 312, "2449": 312, "0783": 312, "394": 312, "0631": 312, "0057": 312, "7444": 312, "395": 312, "3339": 312, "0167": 312, "396": 312, "4806": 312, "397": 312, "4171": 312, "067": 312, "398": 312, "2618": 312, "5809": 312, "399": 312, "0054": 312, "3364": 312, "8733": 312, "0184": 312, "401": 312, "9137": 312, "0113": 312, "025": 312, "0386": 312, "0625": 312, "403": 312, "1332": 312, "0582": 312, "7816": 312, "404": 312, "8341": 312, "0941": 312, "854": 312, "405": 312, "8615": 312, "588": 312, "406": 312, "3849": 312, "008": 312, "407": 312, "9395": 312, "0765": 312, "055": 312, "408": 312, "2685": 312, "2235": 312, "688": 312, "409": 312, "3052": 312, "4249": 312, "410": 312, "6806": 312, "6383": 312, "3721": 312, "9981": 312, "412": 312, "1862": 312, "822": 312, "413": 312, "9811": 312, "0171": 312, "013": 312, "414": 312, "0252": 312, "0049": 312, "6205": 312, "415": 312, "1108": 312, "4921": 312, "9142": 312, "8130": 312, "417": 312, "1725": 312, "0036": 312, "3196": 312, "418": 312, "7795": 312, "0242": 312, "799": 312, "419": 312, "7737": 312, "0138": 312, "420": 312, "1462": 312, "0053": 312, "421": 312, "9226": 312, "6139": 312, "422": 312, "9889": 312, "0403": 312, "423": 312, "6194": 312, "0032": 312, "3989": 312, "0104": 312, "425": 312, "9960": 312, "0009": 312, "6009": 312, "426": 312, "2697": 312, "0914": 312, "427": 312, "1114": 312, "428": 312, "9862": 312, "1932": 312, "429": [312, 314, 315], "0637": 312, "0623": 312, "082": 312, "430": 312, "9906": 312, "2031": 312, "431": 312, "9948": 312, "0895": 312, "432": 312, "1970": 312, "0256": 312, "433": 312, "4231": 312, "0449": 312, "644": 312, "434": 312, "49it": 312, "1039": 312, "1973": 312, "435": 312, "4561": 312, "1225": 312, "436": 312, "0211": 312, "2125": 312, "437": 312, "3866": 312, "0050": 312, "7202": 312, "438": 312, "6388": 312, "0072": 312, "439": 312, "79it": 312, "1187": 312, "0015": 312, "5116": 312, "440": 312, "85it": 312, "0432": 312, "0025": 312, "7809": 312, "1925": 312, "0103": 312, "442": 312, "9570": 312, "443": 312, "0871": 312, "5601": 312, "0165": 312, "0047": 312, "6061": 312, "2746": 312, "0027": 312, "7887": 312, "446": 312, "1835": 312, "0035": 312, "855": 312, "447": 312, "8420": 312, "548": 312, "2653": 312, "0126": 312, "9736": 312, "449": 312, "0594": 312, "0119": 312, "6196": 312, "450": 312, "4509": 312, "0373": 312, "451": 312, "0620": 312, "452": 312, "6898": 312, "3235": 312, "687": 312, "453": 312, "5879": 312, "8406": 312, "0694": 312, "455": 312, "8259": 312, "0235": 312, "8500": 312, "0024": 312, "4054": 312, "458": 312, "2027": 312, "0894": 312, "459": 312, "5966": 312, "460": 312, "6942": 312, "0016": 312, "6703": 312, "0145": 312, "8124": 312, "0218": 312, "9196": 312, "0188": 312, "8986": 312, "0884": 312, "0084": 312, "5624": 312, "465": 312, "8862": 312, "5384": 312, "466": 312, "5837": 312, "467": 312, "8954": 312, "0101": 312, "6751": 312, "468": 312, "8063": 312, "0122": 312, "9635": 312, "469": 312, "0692": 312, "4216": 312, "1227": 312, "0586": 312, "162e": 312, "9690": 312, "0074": 312, "4166": 312, "6324": 312, "473": 312, "0778": 312, "474": 312, "8548": 312, "0017": 312, "4408": 312, "8125": 312, "1515": 312, "2733": 312, "0044": 312, "2836": 312, "477": 312, "7497": 312, "7681": 312, "8547": 312, "0105": 312, "7212": 312, "479": 312, "9848": 312, "0019": 312, "6498": 312, "1987": 312, "0011": 312, "5473": 312, "8991": 312, "0033": 312, "6091": 312, "9189": 312, "5771": 312, "483": 312, "6781": 312, "7542": 312, "484": 312, "5959": 312, "0064": 312, "4295": 312, "485": 312, "2547": 312, "486": 312, "0636": 312, "547": 312, "487": 312, "0065": 312, "488": 312, "1694": 312, "0083": 312, "5759": 312, "489": 312, "0493": 312, "0021": 312, "7805": 312, "490": 312, "0950": 312, "497": 312, "491": 312, "9717": 312, "3672": 312, "492": 312, "0207": 312, "493": 312, "8266": 312, "0069": 312, "5365": 312, "494": 312, "2623": 312, "5078": 312, "495": 312, "4545": 312, "09636": 312, "8754": 312, "0010": 312, "498": 312, "0031": 312, "8269": 312, "499": 312, "4082": 312, "6642": 312, "2284": 312, "501": 312, "9130": 312, "0008": 312, "502": 312, "83it": 312, "503": 312, "7624": 312, "0056": 312, "3858": 312, "504": 312, "0890": 312, "0042": 312, "505": 312, "7505": 312, "2157": 312, "506": 312, "8394": 312, "3413": 312, "507": 312, "9609": 312, "0041": 312, "6905": 312, "508": 312, "8467": 312, "4409": 312, "509": 312, "510": 312, "8128": 312, "3559": 312, "511": 312, "1479": 312, "0264": 312, "1589": 312, "566": 312, "513": 312, "2756": 312, "0046": 312, "5266": 312, "514": 312, "9873": 312, "0112": 312, "9314": 312, "515": 312, "3791": 312, "0721": 312, "516": 312, "4580": 312, "0758": 312, "6114": 312, "517": 312, "2431": 312, "518": 312, "1958": 312, "5553": 312, "8924": 312, "0097": 312, "520": 312, "3737": 312, "0234": 312, "521": 312, "9125": 312, "4623": 312, "3230": 312, "0589": 312, "3784": 312, "523": 312, "9482": 312, "0051": 312, "524": 312, "1979": 312, "0045": 312, "6401": 312, "525": 312, "1588": 312, "0048": 312, "6255": 312, "526": 312, "6084": 312, "3477": 312, "1475": 312, "0209": 312, "528": 312, "7611": 312, "1040": 312, "0099": 312, "0173": 312, "643": 312, "530": 312, "8189": 312, "4358": 312, "531": 312, "9897": 312, "532": 312, "1548": 312, "9751": 312, "533": 312, "6362": 312, "7495": 312, "534": 312, "1749": 312, "9513": 312, "535": 312, "7708": 312, "0371": 312, "536": 312, "2649": 312, "0437": 312, "537": 312, "5491": 312, "0276": 312, "6426": 312, "7294": 312, "078e": 312, "539": 312, "9928": 312, "540": 312, "7937": 312, "0124": 312, "9664": 312, "541": 312, "3342": 312, "542": 312, "2046": 312, "5496": 312, "0956": 312, "0059": 312, "545": 312, "9028": 312, "5843": 312, "546": 312, "0674": 312, "0178": 312, "797": 312, "2815": 312, "0599": 312, "1587": 312, "9276": 312, "8228": 312, "6164": 312, "551": 312, "6850": 312, "9167": 312, "3092": 312, "0670": 312, "9177": 312, "553": 312, "1599": 312, "0043": 312, "554": 312, "6367": 312, "555": 312, "3657": 312, "556": 312, "6694": 312, "2622": 312, "0372": 312, "4841": 312, "558": 312, "2707": 312, "0058": 312, "757": 312, "2267": 312, "5415": 312, "560": 312, "4556": 312, "0163": 312, "561": 312, "1839": 312, "0809": 312, "6262": 312, "562": 312, "0278": 312, "1112": 312, "6155": 312, "565": 312, "1427": 312, "3582": 312, "624": 312, "7870": 312, "9490": 312, "0439": 312, "8796": 312, "8026": 312, "612": 312, "569": 312, "3147": 312, "8486": 312, "570": 312, "7917": 312, "0129": 312, "571": 312, "9553": 312, "0020": 312, "6871": 312, "572": 312, "3132": 312, "0159": 312, "8646": 312, "573": 312, "5320": 312, "0269": 312, "574": 312, "2955": 312, "0245": 312, "575": 312, "3347": 312, "0179": 312, "9718": 312, "1629": 312, "804": 312, "577": 312, "0070": 312, "4335": 312, "578": 312, "579": 312, "3049": 312, "9063": 312, "580": 312, "8785": 312, "3295": 312, "5184": 312, "0546": 312, "582": 312, "4589": 312, "583": 312, "4697": 312, "2476": 312, "584": 312, "2397": 312, "585": 312, "4953": 312, "1775": 312, "586": 312, "2258": 312, "0110": 312, "7671": 312, "587": 312, "3981": 312, "8590": 312, "0007": 312, "589": 312, "9820": 312, "4221": 312, "590": 312, "1293": 312, "0116": 312, "868": 312, "1675": 312, "5931": 312, "592": 312, "2910": 312, "5219": 312, "2124": 312, "1730": 312, "737": 312, "594": 312, "2914": 312, "0206": 312, "595": 312, "0172": 312, "3982": 312, "0945": 312, "0121": 312, "4789": 312, "597": 312, "3805": 312, "598": 312, "3310": 312, "5065": 312, "6028": 312, "6316": 312, "6724": 312, "6523": 312, "601": 312, "0136": 312, "4298": 312, "602": 312, "3524": 312, "2629": 312, "603": 312, "2635": 312, "7839": 312, "604": 312, "6041": 312, "8027": 312, "4170": 312, "4675": 312, "606": 312, "3153": 312, "9316": 312, "607": 312, "0649": 312, "9722": 312, "7989": 312, "0329": 312, "609": 312, "1976": 312, "6852": 312, "610": 312, "4793": 312, "1255": 312, "611": 312, "4581": 312, "0394": 312, "2047": 312, "0326": 312, "613": 312, "8967": 312, "8619": 312, "614": 312, "5906": 312, "6491": 312, "615": 312, "6634": 312, "4394": 312, "616": 312, "0624": 312, "0061": 312, "5676": 312, "3259": 312, "0131": 312, "7733": 312, "618": [312, 315, 316], "7515": 312, "0189": 312, "5575": 312, "619": 312, "9313": 312, "6286": 312, "620": 312, "4325": 312, "7832": 312, "621": 312, "1134": 312, "622": 312, "4572": 312, "0500": 312, "5838": 312, "623": 312, "3818": 312, "8623": 312, "1253": 312, "6622": 312, "subject": 312, "saw": [312, 314], "explain": 313, "semat": 313, "r3mtransform": 313, "embodi": 313, "ai": 313, "env_transform": [313, 317], "wiser": 313, "conclud": 313, "_storag": [313, 314], "066": [313, 315], "2109": [313, 315], "pretrained_model": [313, 315], "supervis": [314, 317], "pull": 314, "temporarili": 314, "drastic": 314, "wish": 314, "ram": 314, "batteri": 314, "dataliststorag": 314, "datalazytensorstorag": 314, "tensordidct": 314, "basi": 314, "datalazymemmapstorag": 314, "buffer_list": 314, "lowest": 314, "medium": 314, "buffer_lazytensor": 314, "buffer_lazymemmap": 314, "fullest": 314, "organ": 314, "convini": 314, "mydata": 314, "background": 314, "question": [314, 316], "_i": 314, "artifici": 314, "0892946e": 314, "she": 314, "augment": 314, "proport": 314, "hist": 314, "barcontain": 314, "artist": 314, "revert": 314, "expens": 314, "reappear": 314, "unfold": 314, "problemat": 314, "window": 314, "4th": 314, "rb_tutori": [314, 315], "925": 315, "torchrl_demo": [315, 316], "848": 315, "torchrl_env": [315, 317], "2524": 315, "demo": 316, "icml": 316, "vmoen": 316, "fb": 316, "invest": 316, "platform": 316, "media": 316, "truli": 316, "predominantli": 316, "tensordict1": 316, "tensordict2": 316, "tensordict_sampl": 316, "_sampler": 316, "_sum_tre": 316, "modulenotfounderror": 316, "28791671991348267": 316, "gym_env": 316, "noopresetenv": [316, 317], "lazyconv2d": 316, "backbone_modul": 316, "params_expand": 316, "tensordict_exp": 316, "base_modul": 316, "0137": 316, "1524": 316, "0641": 316, "viewbackward0": 316, "asstridedbackward0": 316, "8728": 316, "1334": 316, "3494": 316, "6887": 316, "6402": 316, "_safetanhbackward": 316, "1132": 316, "1762": 316, "3430": 316, "2668": 316, "2918": 316, "6239": 316, "roughli": 316, "tensordicts_prealloc": 316, "tensordicts_stack": 316, "tensordict_rollout": [316, 317], "disclaim": 316, "concatmodul": 316, "loss_td": 316, "year": 316, "roadmap": 316, "compris": 316, "contributor": 316, "curiou": 316, "nascent": 316, "unsupervis": 317, "rom": 317, "licens": 317, "pygam": 317, "unifi": 317, "insid": 317, "_build_env": 317, "sphinx_gallery_start_ignor": 317, "filterwarn": 317, "sphinx_gallery_end_ignor": 317, "traceback": 317, "__w": 317, "typeerror": 317, "subscript": 317, "void": 317, "reproduct": 317, "tensordict_tprim": 317, "imshow": 317, "inconsist": 317, "pong": 317, "v5": 317, "swingup": 317, "wrapper1": 317, "wrapper2": 317, "obviou": 317, "truth": 317, "env0": 317, "env_transformed_bi": 317, "stanc": 317, "transformeddistribut": 317, "base_dist": 317, "concat": 317, "mofidi": 317, "transformedenviron": 317, "moderet": 317, "computation": 317, "legitim": 317, "incom": 317, "amongst": 317, "wor": 317, "convention": 317, "scope": 317, "markovian": 317, "constain": 317, "bar_": 317, "get_someth": 317, "aargh": 317, "foo_list": 317, "airraid": 317, "parallen": 317, "particularili": 317, "evolv": 317, "steadi": 317, "approx": 317, "_extra_st": 317, "observation_ssq": 317, "observation_sum": 317, "dispach": 317, "absor": 317, "2525": 317}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 2, 1, "", "BraxEnv"], [68, 2, 1, "", "BraxWrapper"], [69, 2, 1, "", "DMControlEnv"], [70, 2, 1, "", "DMControlWrapper"], [71, 0, 1, "", "EnvBase"], [72, 0, 1, "", "EnvCreator"], [73, 0, 1, "", "EnvMetaData"], [74, 2, 1, "", "GymEnv"], [75, 0, 1, "", "GymLikeEnv"], [76, 2, 1, "", "GymWrapper"], [77, 2, 1, "", "HabitatEnv"], [78, 2, 1, "", "IsaacGymEnv"], [79, 2, 1, "", "IsaacGymWrapper"], [80, 2, 1, "", "JumanjiEnv"], [81, 2, 1, "", "JumanjiWrapper"], [82, 2, 1, "", "MarlGroupMapType"], [83, 2, 1, "", "ModelBasedEnvBase"], [84, 2, 1, "", "MultiThreadedEnv"], [85, 2, 1, "", "MultiThreadedEnvWrapper"], [86, 2, 1, "", "OpenMLEnv"], [87, 0, 1, "", "ParallelEnv"], [88, 2, 1, "", "PettingZooEnv"], [89, 2, 1, "", "PettingZooWrapper"], [90, 2, 1, "", "RoboHiveEnv"], [91, 2, 1, "", "SMACv2Env"], [92, 2, 1, "", "SMACv2Wrapper"], [93, 0, 1, "", "SerialEnv"], [94, 2, 1, "", "VmasEnv"], [95, 2, 1, "", "VmasWrapper"], [96, 2, 1, "", "check_marl_grouping"], [83, 1, 1, "", "rand_step"], [83, 1, 1, "", "reset"], [83, 1, 1, "", "rollout"], [83, 1, 1, "", "set_seed"], [83, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[71, 3, 1, "", "action_key"], [71, 3, 1, "", "action_keys"], [71, 3, 1, "", "action_spec"], [71, 1, 1, "", "add_module"], [71, 1, 1, "", "apply"], [71, 3, 1, "", "batch_locked"], [71, 1, 1, "", "bfloat16"], [71, 1, 1, "", "buffers"], [71, 1, 1, "", "children"], [71, 1, 1, "", "compile"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 3, 1, "", "done_key"], [71, 3, 1, "", "done_keys"], [71, 3, 1, "", "done_spec"], [71, 1, 1, "", "double"], [71, 1, 1, "", "eval"], [71, 1, 1, "", "extra_repr"], [71, 1, 1, "", "fake_tensordict"], [71, 1, 1, "", "float"], [71, 1, 1, "", "forward"], [71, 1, 1, "", "get_buffer"], [71, 1, 1, "", "get_extra_state"], [71, 1, 1, "", "get_parameter"], [71, 1, 1, "", "get_submodule"], [71, 1, 1, "", "half"], [71, 3, 1, "", "input_spec"], [71, 1, 1, "", "ipu"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "modules"], [71, 1, 1, "", "named_buffers"], [71, 1, 1, "", "named_children"], [71, 1, 1, "", "named_modules"], [71, 1, 1, "", "named_parameters"], [71, 3, 1, "", "observation_spec"], [71, 3, 1, "", "output_spec"], [71, 1, 1, "", "parameters"], [71, 1, 1, "", "rand_action"], [71, 1, 1, "id0", "rand_step"], [71, 1, 1, "", "register_backward_hook"], [71, 1, 1, "", "register_buffer"], [71, 1, 1, "", "register_forward_hook"], [71, 1, 1, "", "register_forward_pre_hook"], [71, 1, 1, "", "register_full_backward_hook"], [71, 1, 1, "", "register_full_backward_pre_hook"], [71, 1, 1, "", "register_load_state_dict_post_hook"], [71, 1, 1, "", "register_module"], [71, 1, 1, "", "register_parameter"], [71, 1, 1, "", "register_state_dict_pre_hook"], [71, 1, 1, "", "requires_grad_"], [71, 1, 1, "id1", "reset"], [71, 3, 1, "", "reward_key"], [71, 3, 1, "", "reward_keys"], [71, 3, 1, "", "reward_spec"], [71, 1, 1, "id2", "rollout"], [71, 1, 1, "", "set_extra_state"], [71, 1, 1, "id3", "set_seed"], [71, 1, 1, "", "share_memory"], [71, 3, 1, "", "specs"], [71, 1, 1, "", "state_dict"], [71, 3, 1, "", "state_spec"], [71, 1, 1, "id4", "step"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_empty"], [71, 1, 1, "", "train"], [71, 1, 1, "", "type"], [71, 1, 1, "", "xpu"], [71, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[75, 3, 1, "", "action_key"], [75, 3, 1, "", "action_keys"], [75, 3, 1, "", "action_spec"], [75, 1, 1, "", "add_module"], [75, 1, 1, "", "apply"], [75, 3, 1, "", "batch_locked"], [75, 1, 1, "", "bfloat16"], [75, 1, 1, "", "buffers"], [75, 1, 1, "", "children"], [75, 1, 1, "", "close"], [75, 1, 1, "", "compile"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 3, 1, "", "done_key"], [75, 3, 1, "", "done_keys"], [75, 3, 1, "", "done_spec"], [75, 1, 1, "", "double"], [75, 1, 1, "", "eval"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "fake_tensordict"], [75, 1, 1, "", "float"], [75, 1, 1, "", "forward"], [75, 1, 1, "", "get_buffer"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "get_parameter"], [75, 1, 1, "", "get_submodule"], [75, 1, 1, "", "half"], [75, 3, 1, "", "input_spec"], [75, 1, 1, "", "ipu"], [75, 1, 1, "", "load_state_dict"], [75, 1, 1, "", "modules"], [75, 1, 1, "", "named_buffers"], [75, 1, 1, "", "named_children"], [75, 1, 1, "", "named_modules"], [75, 1, 1, "", "named_parameters"], [75, 3, 1, "", "observation_spec"], [75, 3, 1, "", "output_spec"], [75, 1, 1, "", "parameters"], [75, 1, 1, "", "rand_action"], [75, 1, 1, "", "rand_step"], [75, 1, 1, "", "read_action"], [75, 1, 1, "", "read_done"], [75, 1, 1, "", "read_obs"], [75, 1, 1, "", "read_reward"], [75, 1, 1, "", "register_backward_hook"], [75, 1, 1, "", "register_buffer"], [75, 1, 1, "", "register_forward_hook"], [75, 1, 1, "", "register_forward_pre_hook"], [75, 1, 1, "", "register_full_backward_hook"], [75, 1, 1, "", "register_full_backward_pre_hook"], [75, 1, 1, "", "register_load_state_dict_post_hook"], [75, 1, 1, "", "register_module"], [75, 1, 1, "", "register_parameter"], [75, 1, 1, "", "register_state_dict_pre_hook"], [75, 1, 1, "", "requires_grad_"], [75, 1, 1, "", "reset"], [75, 3, 1, "", "reward_key"], [75, 3, 1, "", "reward_keys"], [75, 3, 1, "", "reward_spec"], [75, 1, 1, "", "rollout"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "set_info_dict_reader"], [75, 1, 1, "", "set_seed"], [75, 1, 1, "", "share_memory"], [75, 3, 1, "", "specs"], [75, 1, 1, "", "state_dict"], [75, 3, 1, "", "state_spec"], [75, 1, 1, "", "step"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_empty"], [75, 1, 1, "", "train"], [75, 1, 1, "", "type"], [75, 1, 1, "", "xpu"], [75, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[87, 3, 1, "", "action_key"], [87, 3, 1, "", "action_keys"], [87, 3, 1, "", "action_spec"], [87, 1, 1, "", "add_module"], [87, 1, 1, "", "apply"], [87, 3, 1, "", "batch_locked"], [87, 1, 1, "", "bfloat16"], [87, 1, 1, "", "buffers"], [87, 1, 1, "", "children"], [87, 1, 1, "", "compile"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 3, 1, "", "done_key"], [87, 3, 1, "", "done_keys"], [87, 3, 1, "", "done_spec"], [87, 1, 1, "", "double"], [87, 1, 1, "", "eval"], [87, 1, 1, "", "extra_repr"], [87, 1, 1, "", "fake_tensordict"], [87, 1, 1, "", "float"], [87, 1, 1, "", "forward"], [87, 1, 1, "", "get_buffer"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "get_parameter"], [87, 1, 1, "", "get_submodule"], [87, 1, 1, "", "half"], [87, 3, 1, "", "input_spec"], [87, 1, 1, "", "ipu"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "modules"], [87, 1, 1, "", "named_buffers"], [87, 1, 1, "", "named_children"], [87, 1, 1, "", "named_modules"], [87, 1, 1, "", "named_parameters"], [87, 3, 1, "", "observation_spec"], [87, 3, 1, "", "output_spec"], [87, 1, 1, "", "parameters"], [87, 1, 1, "", "rand_action"], [87, 1, 1, "", "rand_step"], [87, 1, 1, "", "register_backward_hook"], [87, 1, 1, "", "register_buffer"], [87, 1, 1, "", "register_forward_hook"], [87, 1, 1, "", "register_forward_pre_hook"], [87, 1, 1, "", "register_full_backward_hook"], [87, 1, 1, "", "register_full_backward_pre_hook"], [87, 1, 1, "", "register_load_state_dict_post_hook"], [87, 1, 1, "", "register_module"], [87, 1, 1, "", "register_parameter"], [87, 1, 1, "", "register_state_dict_pre_hook"], [87, 1, 1, "", "requires_grad_"], [87, 1, 1, "", "reset"], [87, 3, 1, "", "reward_key"], [87, 3, 1, "", "reward_keys"], [87, 3, 1, "", "reward_spec"], [87, 1, 1, "", "rollout"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "", "set_seed"], [87, 1, 1, "", "share_memory"], [87, 3, 1, "", "specs"], [87, 1, 1, "", "state_dict"], [87, 3, 1, "", "state_spec"], [87, 1, 1, "", "step"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_empty"], [87, 1, 1, "", "train"], [87, 1, 1, "", "type"], [87, 1, 1, "", "update_kwargs"], [87, 1, 1, "", "xpu"], [87, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[93, 3, 1, "", "action_key"], [93, 3, 1, "", "action_keys"], [93, 3, 1, "", "action_spec"], [93, 1, 1, "", "add_module"], [93, 1, 1, "", "apply"], [93, 3, 1, "", "batch_locked"], [93, 1, 1, "", "bfloat16"], [93, 1, 1, "", "buffers"], [93, 1, 1, "", "children"], [93, 1, 1, "", "compile"], [93, 1, 1, "", "cpu"], [93, 1, 1, "", "cuda"], [93, 3, 1, "", "done_key"], [93, 3, 1, "", "done_keys"], [93, 3, 1, "", "done_spec"], [93, 1, 1, "", "double"], [93, 1, 1, "", "eval"], [93, 1, 1, "", "extra_repr"], [93, 1, 1, "", "fake_tensordict"], [93, 1, 1, "", "float"], [93, 1, 1, "", "forward"], [93, 1, 1, "", "get_buffer"], [93, 1, 1, "", "get_extra_state"], [93, 1, 1, "", "get_parameter"], [93, 1, 1, "", "get_submodule"], [93, 1, 1, "", "half"], [93, 3, 1, "", "input_spec"], [93, 1, 1, "", "ipu"], [93, 1, 1, "", "load_state_dict"], [93, 1, 1, "", "modules"], [93, 1, 1, "", "named_buffers"], [93, 1, 1, "", "named_children"], [93, 1, 1, "", "named_modules"], [93, 1, 1, "", "named_parameters"], [93, 3, 1, "", "observation_spec"], [93, 3, 1, "", "output_spec"], [93, 1, 1, "", "parameters"], [93, 1, 1, "", "rand_action"], [93, 1, 1, "", "rand_step"], [93, 1, 1, "", "register_backward_hook"], [93, 1, 1, "", "register_buffer"], [93, 1, 1, "", "register_forward_hook"], [93, 1, 1, "", "register_forward_pre_hook"], [93, 1, 1, "", "register_full_backward_hook"], [93, 1, 1, "", "register_full_backward_pre_hook"], [93, 1, 1, "", "register_load_state_dict_post_hook"], [93, 1, 1, "", "register_module"], [93, 1, 1, "", "register_parameter"], [93, 1, 1, "", "register_state_dict_pre_hook"], [93, 1, 1, "", "requires_grad_"], [93, 1, 1, "", "reset"], [93, 3, 1, "", "reward_key"], [93, 3, 1, "", "reward_keys"], [93, 3, 1, "", "reward_spec"], [93, 1, 1, "", "rollout"], [93, 1, 1, "", "set_extra_state"], [93, 1, 1, "", "set_seed"], [93, 1, 1, "", "share_memory"], [93, 3, 1, "", "specs"], [93, 1, 1, "", "state_dict"], [93, 3, 1, "", "state_spec"], [93, 1, 1, "", "step"], [93, 1, 1, "", "to"], [93, 1, 1, "", "to_empty"], [93, 1, 1, "", "train"], [93, 1, 1, "", "type"], [93, 1, 1, "", "update_kwargs"], [93, 1, 1, "", "xpu"], [93, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[97, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[98, 0, 1, "", "ActionMask"], [99, 0, 1, "", "BinarizeReward"], [100, 0, 1, "", "CatFrames"], [101, 0, 1, "", "CatTensors"], [102, 0, 1, "", "CenterCrop"], [103, 0, 1, "", "ClipTransform"], [104, 0, 1, "", "Compose"], [105, 0, 1, "", "DTypeCastTransform"], [106, 0, 1, "", "DeviceCastTransform"], [107, 0, 1, "", "DiscreteActionProjection"], [108, 0, 1, "", "DoubleToFloat"], [109, 0, 1, "", "ExcludeTransform"], [110, 0, 1, "", "FiniteTensorDictCheck"], [111, 0, 1, "", "FlattenObservation"], [112, 0, 1, "", "FrameSkipTransform"], [113, 0, 1, "", "GrayScale"], [114, 0, 1, "", "InitTracker"], [115, 0, 1, "", "KLRewardTransform"], [116, 0, 1, "", "NoopResetEnv"], [117, 0, 1, "", "ObservationNorm"], [118, 0, 1, "", "ObservationTransform"], [119, 0, 1, "", "PinMemoryTransform"], [120, 0, 1, "", "R3MTransform"], [121, 0, 1, "", "RandomCropTensorDict"], [122, 0, 1, "", "RenameTransform"], [123, 0, 1, "", "Resize"], [124, 0, 1, "", "Reward2GoTransform"], [125, 0, 1, "", "RewardClipping"], [126, 0, 1, "", "RewardScaling"], [127, 0, 1, "", "RewardSum"], [128, 0, 1, "", "SelectTransform"], [129, 0, 1, "", "SqueezeTransform"], [130, 0, 1, "", "StepCounter"], [131, 0, 1, "", "TargetReturn"], [132, 0, 1, "", "TensorDictPrimer"], [133, 0, 1, "", "TimeMaxPool"], [134, 0, 1, "", "ToTensorImage"], [135, 0, 1, "", "Transform"], [136, 0, 1, "", "TransformedEnv"], [137, 0, 1, "", "UnsqueezeTransform"], [138, 0, 1, "", "VC1Transform"], [139, 0, 1, "", "VIPRewardTransform"], [140, 0, 1, "", "VIPTransform"], [141, 0, 1, "", "VecNorm"], [142, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[99, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "reset"], [100, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[101, 1, 1, "", "forward"], [101, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[103, 1, 1, "", "transform_observation_spec"], [103, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "reset"], [104, 1, 1, "", "to"], [104, 1, 1, "", "transform_env_device"], [104, 1, 1, "", "transform_input_spec"], [104, 1, 1, "", "transform_observation_spec"], [104, 1, 1, "", "transform_output_spec"], [104, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[105, 1, 1, "", "forward"], [105, 1, 1, "", "transform_input_spec"], [105, 1, 1, "", "transform_observation_spec"], [105, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "transform_done_spec"], [106, 1, 1, "", "transform_env_device"], [106, 1, 1, "", "transform_input_spec"], [106, 1, 1, "", "transform_observation_spec"], [106, 1, 1, "", "transform_output_spec"], [106, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[107, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[109, 1, 1, "", "forward"], [109, 1, 1, "", "reset"], [109, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[110, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[113, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "reset"], [114, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[115, 1, 1, "", "forward"], [115, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[116, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[117, 1, 1, "", "init_stats"], [117, 1, 1, "", "transform_input_spec"], [117, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[119, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[120, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[121, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "transform_input_spec"], [122, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[124, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[125, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[126, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "reset"], [127, 1, 1, "", "transform_input_spec"], [127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "reset"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "reset"], [130, 1, 1, "", "transform_input_spec"], [130, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "reset"], [132, 1, 1, "", "to"], [132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "reset"], [133, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[135, 3, 1, "", "container"], [135, 1, 1, "", "forward"], [135, 3, 1, "", "parent"], [135, 1, 1, "", "reset"], [135, 1, 1, "", "to"], [135, 1, 1, "", "transform_done_spec"], [135, 1, 1, "", "transform_env_device"], [135, 1, 1, "", "transform_input_spec"], [135, 1, 1, "", "transform_observation_spec"], [135, 1, 1, "", "transform_output_spec"], [135, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[136, 3, 1, "", "batch_locked"], [136, 1, 1, "", "eval"], [136, 3, 1, "", "input_spec"], [136, 1, 1, "", "load_state_dict"], [136, 3, 1, "", "output_spec"], [136, 1, 1, "", "set_missing_tolerance"], [136, 1, 1, "", "set_seed"], [136, 1, 1, "", "state_dict"], [136, 1, 1, "", "to"], [136, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[137, 1, 1, "", "transform_input_spec"], [137, 1, 1, "", "transform_observation_spec"], [137, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[138, 1, 1, "", "forward"], [138, 1, 1, "", "make_noload_model"], [138, 1, 1, "", "to"], [138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[140, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[141, 1, 1, "", "build_td_for_shared_vecnorm"], [141, 1, 1, "", "forward"], [141, 1, 1, "", "get_extra_state"], [141, 1, 1, "", "set_extra_state"], [141, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[143, 2, 1, "", "check_env_specs"], [144, 2, 1, "", "exploration_mode"], [145, 2, 1, "", "exploration_type"], [146, 2, 1, "", "get_available_libraries"], [147, 2, 1, "", "make_composite_from_td"], [148, 2, 1, "", "set_exploration_mode"], [149, 2, 1, "", "set_exploration_type"], [150, 2, 1, "", "step_mdp"]], "torchrl.modules": [[151, 0, 1, "", "CEMPlanner"], [152, 0, 1, "", "ConvNet"], [153, 0, 1, "", "DTActor"], [154, 0, 1, "", "DdpgCnnActor"], [155, 0, 1, "", "DdpgCnnQNet"], [156, 0, 1, "", "DdpgMlpActor"], [157, 0, 1, "", "DdpgMlpQNet"], [158, 0, 1, "", "DecisionTransformer"], [159, 0, 1, "", "Delta"], [160, 0, 1, "", "DistributionalDQNnet"], [161, 0, 1, "", "DistributionalQValueHook"], [162, 0, 1, "", "DreamerActor"], [163, 0, 1, "", "DuelingCnnDQNet"], [164, 0, 1, "", "IndependentNormal"], [165, 0, 1, "", "LSTMModule"], [166, 0, 1, "", "LSTMNet"], [167, 0, 1, "", "MLP"], [168, 0, 1, "", "MPCPlannerBase"], [169, 0, 1, "", "MPPIPlanner"], [170, 0, 1, "", "MaskedCategorical"], [171, 0, 1, "", "MaskedOneHotCategorical"], [172, 0, 1, "", "MultiAgentMLP"], [173, 0, 1, "", "NoisyLazyLinear"], [174, 0, 1, "", "NoisyLinear"], [175, 0, 1, "", "NormalParamWrapper"], [176, 0, 1, "", "ObsDecoder"], [177, 0, 1, "", "ObsEncoder"], [178, 0, 1, "", "OneHotCategorical"], [179, 0, 1, "", "OnlineDTActor"], [180, 0, 1, "", "QMixer"], [181, 0, 1, "", "QValueHook"], [182, 0, 1, "", "RSSMPosterior"], [183, 0, 1, "", "RSSMPrior"], [184, 0, 1, "", "Squeeze2dLayer"], [185, 0, 1, "", "SqueezeLayer"], [186, 0, 1, "", "TanhDelta"], [187, 0, 1, "", "TanhNormal"], [188, 0, 1, "", "TruncatedNormal"], [189, 0, 1, "", "VDNMixer"], [190, 0, 1, "", "VmapModule"], [191, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[151, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[152, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[153, 1, 1, "", "default_config"], [153, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[154, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[155, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[156, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[157, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[158, 0, 1, "", "DTConfig"], [158, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[159, 1, 1, "", "log_prob"], [159, 3, 1, "", "mean"], [159, 3, 1, "", "mode"], [159, 1, 1, "", "rsample"], [159, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[160, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[162, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[163, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[164, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[165, 1, 1, "", "forward"], [165, 1, 1, "", "set_recurrent_mode"], [165, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[166, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[167, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[168, 1, 1, "", "forward"], [168, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[169, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[170, 1, 1, "", "log_prob"], [170, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[171, 1, 1, "", "log_prob"], [171, 1, 1, "", "rsample"], [171, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[172, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[173, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[175, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[176, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[177, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[178, 1, 1, "", "log_prob"], [178, 3, 1, "", "mode"], [178, 1, 1, "", "rsample"], [178, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[179, 1, 1, "", "default_config"], [179, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[180, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[182, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[183, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[185, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[186, 3, 1, "", "mean"], [186, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[187, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[188, 1, 1, "", "log_prob"], [188, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[189, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[190, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[192, 0, 1, "", "Actor"], [193, 0, 1, "", "ActorCriticOperator"], [194, 0, 1, "", "ActorCriticWrapper"], [195, 0, 1, "", "ActorValueOperator"], [196, 0, 1, "", "AdditiveGaussianWrapper"], [197, 0, 1, "", "DecisionTransformerInferenceWrapper"], [198, 0, 1, "", "DistributionalQValueActor"], [199, 0, 1, "", "DistributionalQValueModule"], [200, 0, 1, "", "EGreedyModule"], [201, 0, 1, "", "LMHeadActorValueOperator"], [202, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [203, 0, 1, "", "ProbabilisticActor"], [204, 0, 1, "", "QValueActor"], [205, 0, 1, "", "QValueModule"], [206, 0, 1, "", "SafeModule"], [207, 0, 1, "", "SafeProbabilisticModule"], [208, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [209, 0, 1, "", "SafeSequential"], [210, 0, 1, "", "TanhModule"], [211, 0, 1, "", "ValueOperator"], [212, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[193, 1, 1, "", "get_critic_operator"], [193, 1, 1, "", "get_policy_head"], [193, 1, 1, "", "get_value_head"], [193, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[194, 1, 1, "", "get_policy_head"], [194, 1, 1, "", "get_policy_operator"], [194, 1, 1, "", "get_value_head"], [194, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[195, 1, 1, "", "get_policy_head"], [195, 1, 1, "", "get_policy_operator"], [195, 1, 1, "", "get_value_head"], [195, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "mask_context"], [197, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[199, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[205, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[206, 1, 1, "", "random"], [206, 1, 1, "", "random_sample"], [206, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[207, 1, 1, "", "random"], [207, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[210, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[212, 1, 1, "", "get_reward_operator"], [212, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[213, 0, 1, "", "biased_softplus"], [214, 0, 1, "", "inv_softplus"], [215, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[213, 1, 1, "", "forward"]], "torchrl.objectives": [[216, 0, 1, "", "A2CLoss"], [217, 0, 1, "", "CQLLoss"], [218, 0, 1, "", "ClipPPOLoss"], [219, 0, 1, "", "DDPGLoss"], [220, 0, 1, "", "DQNLoss"], [221, 0, 1, "", "DTLoss"], [222, 0, 1, "", "DiscreteSACLoss"], [223, 0, 1, "", "DistributionalDQNLoss"], [224, 0, 1, "", "DreamerActorLoss"], [225, 0, 1, "", "DreamerModelLoss"], [226, 0, 1, "", "DreamerValueLoss"], [227, 0, 1, "", "HardUpdate"], [228, 0, 1, "", "IQLLoss"], [229, 0, 1, "", "KLPENPPOLoss"], [230, 0, 1, "", "LossModule"], [231, 0, 1, "", "OnlineDTLoss"], [232, 0, 1, "", "PPOLoss"], [233, 0, 1, "", "REDQLoss"], [234, 0, 1, "", "ReinforceLoss"], [235, 0, 1, "", "SACLoss"], [236, 0, 1, "", "SoftUpdate"], [237, 0, 1, "", "TD3Loss"], [238, 0, 1, "", "ValueEstimators"], [239, 0, 1, "", "default_value_kwargs"], [240, 0, 1, "", "distance_loss"], [241, 0, 1, "", "hold_out_net"], [242, 0, 1, "", "hold_out_params"], [244, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[218, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[221, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[225, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[226, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "loss_value_diff"], [228, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[229, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[230, 1, 1, "", "convert_to_functional"], [230, 1, 1, "", "forward"], [230, 1, 1, "", "make_value_estimator"], [230, 1, 1, "", "named_parameters"], [230, 1, 1, "", "parameters"], [230, 1, 1, "", "set_keys"], [230, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[231, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[243, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[245, 0, 1, "", "GAE"], [246, 0, 1, "", "TD0Estimator"], [247, 0, 1, "", "TD1Estimator"], [248, 0, 1, "", "TDLambdaEstimator"], [249, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "set_keys"], [249, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[250, 0, 1, "", "generalized_advantage_estimate"], [251, 0, 1, "", "reward2go"], [252, 0, 1, "", "td0_advantage_estimate"], [253, 0, 1, "", "td0_return_estimate"], [254, 0, 1, "", "td1_advantage_estimate"], [255, 0, 1, "", "td1_return_estimate"], [256, 0, 1, "", "td_lambda_advantage_estimate"], [257, 0, 1, "", "td_lambda_return_estimate"], [258, 0, 1, "", "vec_generalized_advantage_estimate"], [259, 0, 1, "", "vec_td1_advantage_estimate"], [260, 0, 1, "", "vec_td1_return_estimate"], [261, 0, 1, "", "vec_td_lambda_advantage_estimate"], [262, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[263, 2, 1, "", "TensorDictRecorder"], [264, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[265, 2, 1, "", "Logger"], [267, 2, 1, "", "generate_exp_name"], [268, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[266, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[269, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[270, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[271, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[272, 0, 1, "", "BatchSubSampler"], [273, 0, 1, "", "ClearCudaCache"], [274, 0, 1, "", "CountFramesLog"], [275, 0, 1, "", "LogReward"], [276, 0, 1, "", "OptimizerHook"], [277, 0, 1, "", "Recorder"], [278, 0, 1, "", "ReplayBufferTrainer"], [279, 0, 1, "", "RewardNormalizer"], [280, 0, 1, "", "SelectKeys"], [281, 0, 1, "", "Trainer"], [282, 0, 1, "", "TrainerHookBase"], [283, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[272, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[273, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[274, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[275, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[276, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[277, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[278, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[279, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[280, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[282, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[283, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[284, 2, 1, "", "correct_for_frame_skip"], [285, 2, 1, "", "get_stats_random_rollout"], [286, 2, 1, "", "make_collector_offpolicy"], [287, 2, 1, "", "make_collector_onpolicy"], [288, 2, 1, "", "make_dqn_loss"], [289, 2, 1, "", "make_redq_loss"], [290, 2, 1, "", "make_redq_model"], [291, 2, 1, "", "make_replay_buffer"], [292, 2, 1, "", "make_target_updater"], [293, 2, 1, "", "make_trainer"], [294, 2, 1, "", "parallel_env_constructor"], [295, 2, 1, "", "sync_async_collector"], [296, 2, 1, "", "sync_sync_collector"], [297, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 301, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317], "tutori": [0, 307, 311], "basic": [0, 314], "intermedi": [0, 8], "advanc": 0, "refer": [0, 299], "knowledg": [0, 300], "base": [0, 7, 300], "indic": 0, "tabl": 0, "collector": [1, 305, 306, 307, 308, 311, 316], "packag": [1, 2, 3, 301, 302, 303, 304], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 305, 306, 307, 311, 316], "distribut": [1, 301], "helper": [1, 3], "function": [1, 4, 302, 306, 307, 311, 316], "replai": [2, 305, 306, 307, 308, 311, 314, 316], "buffer": [2, 305, 306, 307, 308, 311, 314, 316], "compos": [2, 104], "store": [2, 306], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 302, 307, 311], "learn": [2, 4, 307, 311], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 301, 302, 303], "env": [3, 312, 316, 317], "vector": [3, 316], "multi": [3, 301, 302, 310, 311], "agent": [3, 4, 301, 302, 311], "environ": [3, 4, 6, 7, 305, 306, 307, 308, 310, 311, 312, 316, 317], "transform": [3, 135, 305, 307, 311, 312, 314, 316, 317], "clone": [3, 7], "mask": 3, "action": [3, 4, 308, 312], "record": [3, 277, 303, 305], "domain": [3, 301], "specif": [3, 301, 310], "librari": [3, 316], "thing": [4, 305, 312], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 316], "gener": [4, 301], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 305, 312], "algorithm": [4, 301], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 305, 306], "return": [4, 302], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 305, 307, 308, 310, 311, 312], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 316], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 310], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 305, 306, 307], "standard": 4, "explor": [4, 301, 305, 306], "valu": [4, 301, 302, 305, 307, 308], "loss": [4, 305, 306, 307, 308, 311], "earli": 4, "train": [4, 8, 302, 305, 307, 308, 311, 312], "roughli": 4, "uniformli": 4, "random": [4, 311], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 306], "increas": 4, "an": [4, 307, 308, 312], "dynam": [4, 314], "can": 4, "low": 4, "forward": [4, 305], "model": [4, 301, 305, 306, 308, 313, 316], "also": 4, "us": [4, 6, 9, 308, 313, 314, 316], "offlin": 4, "observ": [4, 305], "space": 4, "effect": [4, 312], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 317], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 316], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 311, 317], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 305], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 312], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 305, 314], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "braxenv": 67, "braxwrapp": 68, "dmcontrolenv": 69, "dmcontrolwrapp": 70, "envbas": [71, 312], "envcreat": 72, "envmetadata": 73, "gymenv": 74, "gymlikeenv": 75, "gymwrapp": 76, "habitatenv": 77, "isaacgymenv": 78, "isaacgymwrapp": 79, "jumanjienv": 80, "jumanjiwrapp": 81, "marlgroupmaptyp": 82, "modelbasedenvbas": 83, "multithreadedenv": 84, "multithreadedenvwrapp": 85, "openmlenv": 86, "parallelenv": 87, "pettingzooenv": 88, "pettingzoowrapp": 89, "robohiveenv": 90, "smacv2env": 91, "smacv2wrapp": 92, "serialenv": 93, "vmasenv": 94, "vmaswrapp": 95, "check_marl_group": 96, "dreamerenv": 97, "actionmask": 98, "binarizereward": 99, "catfram": [100, 314], "cattensor": 101, "centercrop": 102, "cliptransform": 103, "dtypecasttransform": 105, "devicecasttransform": 106, "discreteactionproject": 107, "doubletofloat": 108, "excludetransform": 109, "finitetensordictcheck": 110, "flattenobserv": 111, "frameskiptransform": 112, "grayscal": 113, "inittrack": 114, "klrewardtransform": 115, "noopresetenv": 116, "observationnorm": 117, "observationtransform": 118, "pinmemorytransform": 119, "r3mtransform": 120, "randomcroptensordict": 121, "renametransform": 122, "resiz": 123, "reward2gotransform": 124, "rewardclip": 125, "rewardsc": 126, "rewardsum": 127, "selecttransform": 128, "squeezetransform": 129, "stepcount": 130, "targetreturn": 131, "tensordictprim": 132, "timemaxpool": 133, "totensorimag": 134, "transformedenv": 136, "unsqueezetransform": 137, "vc1transform": 138, "viprewardtransform": 139, "viptransform": 140, "vecnorm": [141, 317], "gsdenois": 142, "check_env_spec": 143, "exploration_mod": 144, "exploration_typ": 145, "get_available_librari": 146, "make_composite_from_td": 147, "set_exploration_mod": 148, "set_exploration_typ": 149, "step_mdp": 150, "cemplann": 151, "convnet": 152, "dtactor": 153, "ddpgcnnactor": 154, "ddpgcnnqnet": 155, "ddpgmlpactor": 156, "ddpgmlpqnet": 157, "decisiontransform": 158, "delta": 159, "distributionaldqnnet": 160, "distributionalqvaluehook": 161, "dreameractor": 162, "duelingcnndqnet": 163, "independentnorm": 164, "lstmmodul": 165, "lstmnet": 166, "mlp": [167, 308], "mpcplannerbas": 168, "mppiplann": 169, "maskedcategor": 170, "maskedonehotcategor": 171, "multiagentmlp": 172, "noisylazylinear": 173, "noisylinear": 174, "normalparamwrapp": 175, "obsdecod": 176, "obsencod": 177, "onehotcategor": 178, "onlinedtactor": 179, "qmixer": [180, 302], "qvaluehook": 181, "rssmposterior": 182, "rssmprior": 183, "squeeze2dlay": 184, "squeezelay": 185, "tanhdelta": 186, "tanhnorm": 187, "truncatednorm": 188, "vdnmixer": 189, "vmapmodul": 190, "reset_nois": 191, "actor": [192, 301, 305], "actorcriticoper": 193, "actorcriticwrapp": 194, "actorvalueoper": 195, "additivegaussianwrapp": 196, "decisiontransformerinferencewrapp": 197, "distributionalqvalueactor": 198, "distributionalqvaluemodul": 199, "egreedymodul": 200, "lmheadactorvalueoper": 201, "ornsteinuhlenbeckprocesswrapp": 202, "probabilisticactor": 203, "qvalueactor": 204, "qvaluemodul": 205, "safemodul": [206, 301], "safeprobabilisticmodul": 207, "safeprobabilistictensordictsequenti": 208, "safesequenti": 209, "tanhmodul": 210, "valueoper": 211, "worldmodelwrapp": 212, "biased_softplu": 213, "inv_softplu": 214, "map": 215, "a2closs": 216, "cqlloss": 217, "clipppoloss": 218, "ddpgloss": 219, "dqnloss": 220, "dtloss": 221, "discretesacloss": 222, "distributionaldqnloss": 223, "dreameractorloss": 224, "dreamermodelloss": 225, "dreamervalueloss": 226, "hardupd": 227, "iqlloss": 228, "klpenppoloss": 229, "lossmodul": [230, 305], "onlinedtloss": 231, "ppoloss": 232, "redqloss": 233, "reinforceloss": 234, "sacloss": 235, "softupd": 236, "td3loss": 237, "valueestim": 238, "default_value_kwarg": 239, "distance_loss": 240, "hold_out_net": 241, "hold_out_param": 242, "qmixerloss": 243, "next_state_valu": 244, "gae": 245, "td0estim": 246, "td1estim": 247, "tdlambdaestim": 248, "valueestimatorbas": 249, "generalized_advantage_estim": 250, "reward2go": 251, "td0_advantage_estim": 252, "td0_return_estim": 253, "td1_advantage_estim": 254, "td1_return_estim": 255, "td_lambda_advantage_estim": 256, "td_lambda_return_estim": 257, "vec_generalized_advantage_estim": 258, "vec_td1_advantage_estim": 259, "vec_td1_return_estim": 260, "vec_td_lambda_advantage_estim": 261, "vec_td_lambda_return_estim": 262, "tensordictrecord": 263, "videorecord": 264, "logger": [265, 303], "csvlogger": 266, "generate_exp_nam": 267, "get_logg": 268, "mlflowlogg": 269, "tensorboardlogg": 270, "wandblogg": 271, "batchsubsampl": 272, "clearcudacach": 273, "countframeslog": 274, "logreward": 275, "optimizerhook": 276, "replaybuffertrain": 278, "rewardnorm": 279, "selectkei": 280, "trainer": [281, 303, 306], "trainerhookbas": 282, "updateweight": 283, "correct_for_frame_skip": 284, "get_stats_random_rollout": 285, "make_collector_offpolici": 286, "make_collector_onpolici": 287, "make_dqn_loss": 288, "make_redq_loss": 289, "make_redq_model": 290, "make_replay_buff": 291, "make_target_updat": 292, "make_train": 293, "parallel_env_constructor": 294, "sync_async_collector": 295, "sync_sync_collector": 296, "transformed_env_constructor": 297, "readm": [298, 309], "tuto": [298, 309], "api": 299, "contribut": [300, 316], "content": 300, "modul": [301, 305, 308, 316], "tensordict": [301, 314, 316], "wrapper": 301, "probabilist": 301, "q": [301, 306, 308], "oper": 301, "join": 301, "hook": [301, 303, 306], "regular": 301, "planner": 301, "object": [302, 305, 316], "dqn": [302, 306, 308], "ddpg": [302, 305], "sac": 302, "redq": 302, "iql": 302, "cql": 302, "dt": 302, "td3": 302, "ppo": [302, 307, 311], "a2c": 302, "dreamer": 302, "checkpoint": 303, "builder": 303, "_util": 304, "code": [305, 312], "setup": [305, 308], "The": 305, "__init__": 305, "method": 305, "estim": 305, "put": 305, "togeth": [305, 312], "call": 305, "parallel": [305, 310, 317], "execut": [305, 310, 312], "stat": 305, "build": [305, 306, 314], "evalu": 305, "batch": [305, 312, 314], "size": [305, 314], "construct": 305, "target": [305, 306], "network": [305, 306, 307, 308, 311], "updat": 305, "time": [305, 315], "experi": [305, 312], "result": [305, 307, 311], "conclus": [305, 306, 307, 308, 311, 312, 314], "A": [306, 314], "exampl": [306, 314], "comput": [306, 312, 315], "deep": 306, "collect": [306, 307], "paramet": [306, 307], "hyperparamet": [306, 307, 311], "regist": 306, "possibl": 306, "improv": 306, "defin": [307, 311], "loop": [307, 308, 311, 312], "next": [307, 311], "step": [307, 311, 317], "recurr": 308, "convolut": 308, "lstm": 308, "select": 308, "divers": 310, "rollout": [310, 311, 312, 317], "critic": 311, "pendulum": 312, "write": 312, "_step": 312, "reset": [312, 317], "simul": 312, "_reset": 312, "metadata": 312, "_spec": 312, "spec": [312, 317], "shape": 312, "seed": [312, 317], "wrap": 312, "class": [312, 316], "test": 312, "our": 312, "custom": [312, 314], "simpl": 312, "pretrain": 313, "vanilla": 314, "integr": 314, "tensorclass": 314, "sampl": 314, "iter": 314, "over": 314, "fix": 314, "priorit": 314, "save": 314, "raw": 314, "imag": 314, "more": 314, "complex": 314, "introduct": 316, "config": 316, "tensordictmodul": 316, "sequenc": 316, "program": 316, "ensembl": 316, "meta": 316, "special": 316, "state": 316, "frame_skip": 317, "deepmind": 317, "control": 317, "devic": 317, "run": 317, "close": 317, "access": 317, "attribut": 317, "kwarg": 317}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})