Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 69, 71, 72, 75, 83, 84, 86, 87, 88, 89, 93, 96, 100, 102, 104, 107, 109, 110, 112, 118, 119, 123, 124, 125, 127, 135, 136, 137, 138, 139, 141, 144, 146, 156, 158, 159, 160, 161, 169, 170, 171, 172, 176, 177, 181, 188, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 216, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 268, 271, 280, 281, 285, 286, 289, 298, 299, 300, 301, 304, 305, 306, 309, 310, 314, 315, 317, 318, 320, 321], "open": [0, 5, 7, 11, 310, 315, 320], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321], "reinforc": [0, 3, 9, 102, 158, 159, 160, 161, 165, 203, 206, 220, 221, 225, 227, 231, 232, 238, 239, 240, 303, 310, 313, 316, 319, 320], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 102, 158, 159, 160, 161, 165, 173, 178, 203, 206, 220, 221, 225, 227, 231, 232, 237, 238, 239, 240, 303, 305, 306, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 83, 134, 178, 196, 207, 215, 220, 234, 236, 276, 304, 305, 306, 307, 309, 310, 311, 315, 317, 318, 321], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 79, 84, 149, 303, 304, 305, 308, 309, 310, 311, 315, 316, 321], "pytorch": [0, 1, 2, 3, 137, 177, 178, 285, 304, 307, 309, 311, 312, 315, 316, 320, 321], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 71, 75, 77, 83, 84, 87, 88, 89, 93, 117, 119, 124, 134, 139, 146, 158, 160, 166, 176, 184, 186, 187, 193, 194, 203, 204, 206, 209, 211, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 247, 248, 249, 281, 294, 304, 305, 306, 309, 310, 312, 315, 316, 317, 318, 320, 321], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 71, 75, 83, 87, 88, 89, 93, 103, 104, 105, 107, 110, 113, 118, 119, 121, 123, 124, 127, 130, 131, 135, 139, 141, 143, 144, 154, 156, 162, 165, 169, 170, 171, 172, 174, 175, 176, 194, 196, 200, 203, 204, 206, 207, 208, 209, 214, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 272, 276, 282, 289, 294, 297, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "python": [0, 3, 5, 6, 7, 10, 21, 99, 174, 175, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 75, 102, 103, 113, 119, 123, 124, 137, 139, 141, 169, 171, 176, 177, 181, 196, 201, 202, 203, 207, 208, 210, 211, 222, 229, 233, 234, 236, 267, 284, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "low": [0, 25, 71, 75, 87, 93, 105, 109, 150, 203, 207, 214, 309, 310, 311, 315, 316, 320, 321], "high": [0, 9, 25, 41, 71, 75, 87, 93, 105, 109, 118, 150, 203, 207, 214, 249, 254, 262, 309, 310, 311, 315, 316, 318, 320, 321], "level": [0, 3, 4, 22, 26, 28, 102, 133, 233, 309, 310, 320], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 71, 120, 172, 253, 277, 286, 307, 311, 316, 320], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 71, 72, 75, 82, 83, 86, 87, 88, 89, 90, 93, 102, 105, 106, 107, 109, 110, 112, 113, 117, 118, 121, 123, 127, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 154, 155, 161, 163, 169, 170, 172, 174, 175, 178, 182, 184, 187, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 244, 247, 248, 249, 250, 251, 252, 253, 282, 297, 301, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 109, 194, 234, 305, 320], "effici": [0, 1, 2, 4, 8, 178, 305, 309, 310, 311, 312, 314, 315, 317, 318, 320], "modular": [0, 213, 318, 320], "document": [0, 5, 7, 18, 19, 21, 32, 71, 75, 87, 93, 139, 310, 320], "properli": [0, 71, 75, 87, 93, 311, 315, 316, 320], "test": [0, 3, 5, 141, 146, 169, 170, 281, 297, 311, 312, 320], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 79, 87, 88, 89, 93, 102, 106, 107, 110, 111, 119, 121, 123, 127, 129, 130, 131, 133, 134, 135, 138, 139, 141, 143, 153, 154, 155, 158, 159, 160, 161, 162, 165, 169, 170, 172, 173, 174, 175, 178, 179, 185, 186, 187, 196, 197, 201, 202, 203, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 255, 270, 273, 274, 275, 276, 280, 297, 299, 300, 305, 306, 307, 310, 311, 312, 315, 316, 317, 318, 320, 321], "code": [0, 3, 5, 7, 8, 123, 141, 169, 213, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321], "aim": [0, 3, 7, 28, 29, 123, 141, 143, 171, 288, 304, 305, 306, 309, 310, 320], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 84, 86, 88, 102, 119, 136, 138, 149, 165, 194, 202, 203, 210, 213, 227, 249, 250, 251, 252, 273, 305, 307, 310, 311, 312, 315, 316, 318, 320], "research": [0, 7, 9, 320], "most": [0, 3, 7, 8, 32, 109, 309, 310, 311, 315, 316, 317, 320, 321], "written": [0, 3, 34, 36, 39, 45, 52, 55, 71, 75, 87, 93, 102, 117, 130, 133, 136, 153, 154, 196, 206, 207, 210, 211, 215, 220, 222, 233, 236, 238, 248, 267, 268, 305, 306, 307, 309, 312, 314, 316, 320], "highli": [0, 2, 320, 321], "wai": [0, 3, 4, 79, 123, 125, 143, 236, 249, 250, 251, 252, 305, 309, 310, 311, 314, 315, 316, 317, 318, 320, 321], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 71, 72, 75, 79, 82, 87, 88, 89, 91, 92, 93, 99, 100, 102, 105, 106, 107, 109, 110, 118, 119, 123, 124, 127, 130, 133, 134, 135, 138, 139, 141, 143, 144, 154, 155, 168, 169, 172, 173, 176, 178, 179, 192, 194, 196, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 281, 294, 299, 300, 301, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "easili": [0, 3, 7, 294, 306, 309, 310, 311, 315, 320, 321], "swap": [0, 3, 311, 317, 320], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 165, 185, 202, 203, 209, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 280, 285, 309, 310, 311, 312, 314, 315, 316, 317, 320], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 71, 72, 75, 87, 88, 89, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 157, 158, 162, 165, 166, 183, 184, 185, 193, 201, 205, 214, 217, 219, 225, 235, 268, 282, 294, 301, 303, 310, 312, 313, 317, 319], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 82, 87, 88, 89, 93, 107, 110, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 193, 194, 200, 201, 203, 204, 206, 209, 214, 217, 233, 268, 309, 310, 312, 314, 315, 316, 317, 318, 320, 321], "write": [0, 3, 8, 23, 32, 37, 45, 75, 105, 121, 122, 130, 133, 154, 196, 210, 211, 213, 215, 221, 223, 224, 226, 232, 237, 239, 241, 248, 253, 268, 305, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 71, 75, 84, 87, 91, 92, 93, 130, 138, 144, 153, 154, 169, 206, 210, 211, 216, 220, 221, 222, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 309, 311, 312, 315, 316, 320, 321], "ones": [0, 15, 26, 32, 35, 41, 42, 71, 75, 87, 93, 103, 106, 107, 108, 110, 119, 123, 127, 134, 135, 138, 139, 141, 143, 174, 175, 194, 210, 220, 221, 223, 232, 236, 237, 239, 241, 255, 309, 311, 315, 316, 318, 320, 321], "littl": [0, 3, 43, 311, 312, 318, 320, 321], "effort": [0, 3, 316, 318, 320], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 71, 75, 77, 82, 83, 87, 88, 89, 93, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 123, 124, 125, 127, 130, 131, 133, 135, 136, 138, 139, 141, 142, 143, 144, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 247, 249, 250, 251, 252, 253, 267, 276, 278, 281, 282, 285, 287, 288, 289, 294, 297, 301, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "repo": [0, 6, 52, 102, 136, 141, 304, 315, 320], "attempt": [0, 200, 206, 224, 232, 247, 320], "align": [0, 320], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 71, 75, 87, 93, 103, 108, 139, 289, 301, 315, 320, 321], "ecosystem": [0, 320], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 71, 72, 75, 79, 87, 93, 102, 133, 135, 139, 169, 200, 203, 206, 211, 233, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 86, 144, 303, 309, 310, 317, 318, 320, 321], "pillar": [0, 320], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 107, 108, 109, 110, 114, 118, 119, 123, 124, 130, 133, 134, 138, 139, 141, 144, 146, 155, 169, 170, 172, 173, 200, 206, 228, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 276, 278, 281, 288, 289, 290, 291, 294, 297, 298, 299, 300, 301, 303, 304, 305, 313, 317, 318, 319], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 71, 75, 83, 87, 93, 107, 123, 135, 141, 143, 145, 156, 157, 162, 169, 171, 172, 173, 176, 183, 184, 193, 197, 198, 199, 205, 210, 216, 220, 221, 222, 224, 225, 228, 229, 230, 232, 233, 234, 236, 237, 239, 247, 285, 290, 291, 292, 293, 294, 303, 304, 307, 311, 313, 315, 316, 318, 319, 321], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 83, 86, 87, 88, 89, 93, 100, 102, 107, 108, 110, 111, 117, 119, 127, 133, 146, 150, 154, 155, 165, 169, 170, 173, 176, 185, 194, 196, 202, 204, 206, 207, 208, 210, 213, 214, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 276, 282, 285, 287, 290, 297, 299, 300, 301, 303, 305, 306, 307, 312, 316, 317, 318, 321], "util": [0, 3, 17, 23, 32, 40, 71, 75, 87, 88, 89, 93, 96, 123, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 162, 217, 218, 219, 234, 297, 303, 308, 309, 311, 315, 316, 320, 321], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 71, 72, 75, 87, 93, 103, 106, 113, 119, 123, 130, 135, 138, 139, 141, 143, 146, 168, 169, 173, 176, 179, 185, 191, 192, 201, 203, 207, 209, 210, 211, 248, 249, 250, 251, 252, 276, 288, 300, 305, 309, 310, 311, 315, 316, 317, 320, 321], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 71, 72, 75, 87, 93, 103, 106, 113, 119, 123, 130, 135, 138, 139, 141, 143, 146, 168, 169, 173, 176, 191, 192, 201, 207, 210, 211, 248, 258, 259, 260, 261, 263, 264, 265, 266, 300, 305, 309, 310, 311, 315, 316, 317, 320, 321], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 102, 127, 133, 206, 282, 285, 287, 290, 291, 297, 299, 300, 303, 307, 318, 321], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 71, 75, 83, 87, 93, 106, 107, 110, 123, 135, 138, 139, 141, 143, 144, 153, 154, 155, 156, 171, 173, 176, 196, 202, 203, 207, 209, 210, 215, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 255, 272, 276, 288, 294, 297, 298, 299, 300, 301, 305, 306, 307, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 71, 75, 87, 93, 117, 139, 171, 176, 309, 310, 311, 318, 320, 321], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 71, 75, 87, 88, 89, 93, 102, 107, 110, 117, 118, 119, 133, 134, 135, 138, 139, 144, 146, 154, 156, 170, 171, 176, 194, 212, 213, 220, 222, 233, 236, 244, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 276, 285, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "few": [0, 2, 8, 276, 311, 312, 315, 318, 320, 321], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 107, 110, 215, 236, 305, 309, 311, 312, 315, 316, 320, 321], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 210, 281, 285, 305, 309, 311, 312, 315, 316, 318, 320, 321], "standard": [0, 3, 119, 129, 144, 155, 166, 173, 177, 178, 200, 201, 241, 249, 250, 251, 252, 309, 310, 315, 318, 320], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 137, 285, 316, 318, 320, 321], "common": [0, 3, 4, 21, 75, 87, 93, 100, 197, 198, 199, 205, 220, 221, 222, 226, 232, 233, 236, 237, 238, 239, 241, 297, 304, 305, 307, 309, 311, 314, 315, 316, 317, 320, 321], "openai": [0, 7, 74, 76, 90, 311, 316, 320, 321], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 79, 87, 90, 93, 97, 99, 102, 105, 116, 117, 119, 121, 125, 127, 130, 135, 138, 144, 169, 294, 297, 304, 309, 310, 311, 312, 316, 317, 318, 320], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 71, 75, 79, 84, 87, 88, 89, 93, 102, 103, 105, 106, 107, 109, 110, 113, 119, 123, 124, 127, 133, 134, 135, 136, 138, 139, 141, 143, 144, 169, 170, 176, 196, 201, 202, 207, 208, 210, 211, 212, 213, 220, 222, 223, 226, 232, 233, 234, 236, 237, 238, 239, 240, 241, 249, 250, 251, 252, 253, 289, 307, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 93, 100, 101, 102, 103, 104, 105, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 190, 191, 192, 194, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 247, 248, 249, 250, 251, 252, 253, 255, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 273, 276, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 305, 312, 315, 316, 318, 320], "On": [0, 3, 7, 18, 19, 20, 21, 305, 310, 315], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 121, 133, 134, 139, 156, 172, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "come": [0, 1, 3, 8, 75, 82, 87, 93, 107, 110, 196, 197, 198, 199, 207, 215, 309, 310, 311, 312, 315, 318, 320, 321], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 71, 73, 75, 83, 87, 88, 89, 93, 99, 100, 102, 103, 106, 107, 110, 116, 117, 123, 127, 133, 134, 135, 136, 138, 139, 141, 143, 146, 151, 152, 154, 169, 172, 176, 200, 201, 210, 234, 236, 253, 276, 281, 282, 291, 301, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "re": [0, 3, 8, 32, 62, 71, 75, 87, 93, 169, 174, 175, 207, 211, 307, 309, 311, 312, 314, 316, 320, 321], "usabl": [0, 307, 312, 320], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 71, 72, 75, 87, 93, 99, 107, 110, 139, 144, 146, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 186, 187, 189, 192, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 294, 297, 303, 305, 309, 312, 314, 316, 318, 321], "cost": [0, 2, 27, 309, 310, 315, 316, 318], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 69, 71, 72, 75, 83, 86, 87, 88, 89, 93, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 182, 183, 184, 186, 187, 190, 191, 192, 193, 196, 197, 198, 199, 201, 207, 209, 210, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 244, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 285, 288, 290, 294, 297, 298, 299, 300, 301, 303, 305, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 71, 72, 75, 79, 82, 84, 87, 88, 89, 93, 107, 110, 144, 176, 203, 206, 209, 307, 309, 310, 312, 315, 316, 317, 318, 320, 321], "good": [0, 1, 4, 9, 309, 311, 312, 315, 320, 321], "runtim": [0, 3, 32, 71, 75, 87, 93, 316], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 71, 75, 87, 93, 96, 107, 110, 118, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 172, 173, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 229, 236, 281, 285, 306, 309, 310, 311, 312, 314, 315, 316, 321], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 71, 75, 82, 87, 88, 89, 91, 92, 93, 133, 144, 197, 198, 199, 206, 226, 234, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 305, 306, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 71, 75, 87, 93, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 121, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 154, 182, 196, 197, 198, 199, 202, 207, 210, 211, 213, 215, 216, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 268, 281, 285, 294, 305, 309, 310, 311, 312, 314, 315, 316, 317, 321], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 78, 79, 87, 88, 89, 93, 137, 141, 145, 165, 171, 177, 179, 196, 200, 202, 203, 210, 215, 220, 227, 234, 236, 249, 254, 262, 280, 304, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 321], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 306, 309, 310, 311, 315, 316, 320, 321], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 307, 309, 314, 317, 321], "beyond": 0, "api": [0, 3, 5, 88, 89, 90, 123, 143, 306, 307, 315, 316, 320, 321], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 71, 72, 75, 83, 87, 93, 96, 102, 103, 112, 117, 124, 146, 169, 196, 202, 203, 207, 208, 209, 210, 211, 305, 306, 310, 311, 312, 314, 315, 316, 317, 318, 321], "paper": [0, 123, 141, 143, 184, 193, 231, 294, 309, 311, 315], "ppo": [0, 4, 8, 207, 211, 222, 233, 236, 303, 305, 309, 310, 313, 319], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 84, 87, 93, 102, 105, 106, 111, 116, 117, 119, 125, 127, 130, 133, 135, 136, 138, 139, 144, 169, 297, 305, 310, 311, 313, 319, 320, 321], "your": [0, 2, 3, 7, 8, 10, 18, 32, 71, 75, 79, 82, 87, 88, 89, 93, 144, 301, 304, 305, 306, 310, 311, 312, 313, 315, 318, 319, 320], "introduct": [0, 306, 313, 315, 319, 321], "multi": [0, 7, 9, 28, 29, 32, 71, 75, 87, 91, 92, 93, 169, 170, 171, 176, 247, 249, 250, 251, 252, 303, 309, 310, 311, 312, 313, 316, 319, 320], "agent": [0, 9, 28, 29, 82, 88, 89, 91, 92, 94, 95, 96, 133, 134, 174, 175, 176, 178, 184, 193, 247, 303, 313, 316, 319], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 169, 172, 173, 210, 234, 267, 289, 290, 291, 294, 297, 299, 300, 301, 303, 305, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 116, 117, 119, 123, 124, 125, 127, 130, 131, 133, 134, 135, 137, 138, 139, 141, 143, 144, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 168, 169, 171, 172, 173, 175, 176, 178, 179, 182, 183, 184, 185, 191, 192, 193, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 262, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 295, 297, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 319, 321], "pretrain": [0, 313, 319], "recurr": [0, 169, 187, 310, 313, 318, 319], "dqn": [0, 165, 202, 203, 220, 221, 223, 224, 226, 227, 228, 231, 232, 234, 236, 237, 238, 239, 240, 241, 247, 292, 303, 305, 313, 319], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 71, 75, 87, 88, 89, 93, 107, 114, 123, 134, 139, 141, 143, 146, 158, 160, 169, 200, 204, 206, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 249, 285, 287, 297, 303, 307, 310, 313, 317, 318, 319, 321], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 71, 75, 83, 87, 93, 109, 117, 134, 151, 152, 165, 169, 176, 178, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 214, 220, 221, 222, 223, 226, 232, 233, 235, 236, 237, 238, 239, 241, 281, 287, 290, 291, 297, 299, 300, 305, 306, 307, 310, 313, 317, 318, 319, 320, 321], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 102, 109, 124, 127, 135, 221, 223, 224, 226, 232, 237, 239, 241, 282, 285, 295, 297, 303, 307, 313, 316, 317, 319], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 71, 75, 83, 87, 93, 102, 106, 109, 123, 124, 127, 135, 138, 139, 141, 143, 210, 213, 221, 223, 224, 226, 232, 237, 239, 241, 282, 285, 295, 297, 303, 307, 313, 316, 317, 319, 321], "task": [0, 3, 9, 28, 29, 40, 45, 69, 75, 78, 87, 88, 89, 90, 93, 123, 133, 141, 143, 232, 309, 310, 311, 312, 313, 315, 316, 319, 320, 321], "specif": [0, 2, 5, 8, 41, 42, 75, 162, 201, 285, 303, 306, 307, 311, 312, 313, 315, 318, 319], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 71, 75, 87, 93, 107, 110, 119, 123, 138, 139, 141, 144, 173, 184, 193, 196, 197, 207, 210, 211, 212, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 289, 290, 291, 296, 297, 301, 303, 305, 307, 310, 311, 312, 313, 315, 316, 318, 319, 321], "ddpg": [0, 158, 159, 160, 161, 223, 231, 240, 303, 305, 310, 313, 319], "loss": [0, 3, 8, 36, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 280, 285, 292, 293, 294, 297, 306, 307, 313, 316, 318, 319, 320], "trainer": [0, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 309, 313, 319], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 77, 78, 87, 90, 93, 105, 109, 114, 117, 123, 124, 125, 135, 138, 139, 141, 142, 144, 145, 146, 153, 155, 156, 165, 169, 171, 173, 174, 175, 176, 178, 179, 194, 200, 201, 202, 203, 204, 207, 208, 211, 213, 214, 217, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 244, 247, 249, 250, 251, 252, 253, 255, 269, 270, 273, 278, 285, 287, 294, 297, 306, 309, 311, 313, 315, 316, 319, 321], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 80, 81, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 116, 117, 119, 121, 123, 125, 127, 130, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 150, 153, 154, 155, 156, 157, 162, 165, 169, 170, 171, 173, 176, 179, 182, 183, 184, 185, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 242, 243, 247, 249, 250, 251, 252, 255, 276, 277, 278, 279, 280, 282, 283, 284, 287, 294, 297, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321], "packag": [0, 6, 7, 10, 99, 303, 304, 321], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 87, 93, 102, 103, 123, 127, 143, 156, 169, 170, 171, 176, 209, 213, 222, 224, 226, 227, 233, 236, 237, 241, 249, 250, 251, 252, 258, 259, 260, 261, 263, 264, 265, 266, 294, 301, 303, 309, 310, 311, 312, 314, 315, 316, 317, 318], "node": [0, 2, 18, 19, 20, 21, 22, 294, 303], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 88, 89, 117, 119, 155, 163, 164, 165, 166, 168, 173, 174, 175, 179, 182, 183, 186, 187, 190, 191, 192, 200, 201, 202, 203, 207, 211, 212, 220, 221, 222, 226, 227, 232, 233, 236, 237, 238, 239, 241, 303, 307, 310, 311, 315, 316, 320, 321], "helper": [0, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 309, 310, 312, 316], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 71, 75, 87, 93, 102, 138, 139, 144, 205, 229, 294, 303, 309, 310, 311, 312, 314, 315, 318, 320, 321], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 71, 75, 83, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 154, 187, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 221, 224, 226, 237, 239, 241, 247, 303, 316], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 91, 92, 93, 96, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 116, 117, 119, 121, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 153, 154, 155, 158, 159, 160, 161, 162, 165, 168, 169, 171, 172, 173, 175, 176, 177, 179, 182, 183, 184, 185, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 226, 227, 228, 232, 233, 234, 236, 237, 238, 239, 241, 243, 247, 248, 249, 250, 251, 252, 255, 267, 268, 276, 282, 285, 288, 289, 294, 295, 297, 298, 301, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "human": [0, 303, 316], "feedback": [0, 303, 320], "rlhf": [0, 34, 40, 45, 54, 117, 303, 305], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 72, 75, 87, 93, 100, 107, 110, 118, 125, 138, 139, 144, 146, 155, 172, 173, 281, 289, 290, 291, 294, 297, 299, 300, 301, 303, 312], "gymlikeenv": [0, 303], "envmetadata": [0, 303], "vector": [0, 1, 8, 24, 27, 33, 82, 88, 89, 109, 158, 160, 171, 249, 252, 262, 263, 264, 265, 266, 303, 309, 310, 312, 314, 315, 316, 317, 321], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 88, 89, 100, 124, 165, 174, 175, 185, 201, 202, 203, 204, 208, 209, 282, 303, 310, 312, 321], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 68, 71, 75, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 95, 100, 105, 107, 109, 110, 111, 114, 117, 118, 121, 125, 127, 131, 133, 139, 150, 153, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 171, 172, 173, 174, 175, 183, 184, 185, 187, 190, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 214, 215, 220, 221, 223, 224, 226, 232, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 294, 297, 301, 303, 305, 306, 307, 309, 310, 311, 314, 315, 317, 318, 320, 321], "record": [0, 32, 71, 75, 87, 93, 117, 236, 267, 268, 269, 270, 271, 272, 273, 274, 275, 297, 303, 310, 311], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 87, 93, 109, 135, 150, 196, 202, 203, 207, 208, 209, 210, 211, 212, 213, 303, 311, 312, 315, 316, 320, 321], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 71, 75, 82, 83, 87, 93, 99, 106, 109, 117, 123, 124, 134, 135, 138, 139, 141, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 247, 249, 250, 251, 252, 253, 285, 292, 293, 297, 303, 306, 307, 310, 311, 314, 315, 316, 317, 318], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 68, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 153, 154, 155, 164, 165, 169, 170, 172, 173, 184, 185, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 267, 276, 280, 281, 282, 284, 285, 294, 303, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 321], "actor": [0, 3, 4, 15, 21, 117, 155, 157, 158, 160, 165, 166, 173, 183, 185, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 247, 294, 303, 306, 310, 311, 312, 315, 317, 320], "explor": [0, 1, 145, 178, 196, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 220, 281, 290, 291, 297, 303, 311, 312, 315, 316], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 93, 99, 101, 102, 103, 105, 107, 109, 110, 118, 119, 123, 124, 127, 128, 130, 135, 136, 138, 139, 143, 144, 150, 154, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 276, 278, 279, 280, 281, 282, 285, 294, 297, 303, 307, 310, 314, 315, 316, 318, 320, 321], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 106, 107, 108, 111, 117, 119, 125, 130, 131, 133, 138, 154, 163, 174, 175, 182, 196, 207, 211, 215, 216, 237, 243, 249, 254, 262, 271, 285, 303, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321], "hook": [0, 32, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 185, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 303], "planner": [0, 155, 173, 303], "sac": [0, 226, 237, 239, 303], "redq": [0, 237, 293, 294, 303], "iql": [0, 232, 303, 315], "cql": [0, 221, 303], "dt": [0, 206, 303, 316], "td3": [0, 241, 303], "a2c": [0, 220, 303], "dreamer": [0, 98, 166, 228, 229, 230, 303, 305], "checkpoint": [0, 303], "builder": [0, 303, 310, 321], "logger": [0, 268, 270, 271, 272, 273, 274, 275, 279, 285, 297, 301, 303, 310], "_util": [0, 3, 11, 303], "implement_for": [0, 3, 303], "contribut": 0, "thing": [0, 3, 7, 8, 304, 311, 312, 315, 318, 321], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 71, 75, 87, 93, 109, 144, 163, 190, 304, 309, 316, 318], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 72, 75, 82, 84, 86, 87, 88, 89, 93, 100, 102, 106, 107, 109, 110, 117, 118, 119, 123, 124, 130, 134, 135, 138, 139, 141, 143, 144, 151, 152, 155, 165, 171, 172, 173, 174, 175, 177, 185, 191, 207, 210, 211, 213, 217, 222, 224, 227, 233, 236, 242, 247, 248, 249, 250, 251, 252, 267, 268, 282, 301, 304, 305, 307, 309, 310, 311, 312, 315, 316, 317, 318, 321], "debug": [0, 6, 8, 40, 304, 321], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 71, 75, 79, 87, 93, 103, 117, 123, 141, 144, 156, 171, 203, 209, 214, 222, 233, 236, 285, 304, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "habitat": [0, 3, 77, 304, 317], "lab": [0, 3, 69, 70, 304], "mujoco": [0, 6, 8, 90, 304, 311, 312], "error": [0, 1, 3, 7, 10, 11, 29, 32, 71, 75, 87, 93, 96, 124, 146, 304, 309, 311, 315, 321], "solut": [0, 3, 6, 7, 9, 21, 304, 305, 307, 320], "resourc": [0, 1, 21, 304, 309, 311, 315], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 71, 75, 87, 88, 93, 199, 234, 239, 249, 252, 304, 305, 309, 311, 312, 315, 316, 317, 321], "issu": [0, 4, 5, 8, 55, 56, 65, 79, 102, 124, 136, 196, 202, 203, 207, 208, 209, 210, 211, 304, 320], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 71, 75, 87, 93, 102, 109, 153, 174, 175, 314, 315, 318, 320], "search": [0, 154, 310], "page": [0, 7], "somewhat": [1, 306, 321], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 71, 75, 87, 93, 108, 139, 165, 185, 202, 203, 208, 209, 236, 282, 320, 321], "dataload": [1, 54, 62, 310, 311, 318], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 112, 127, 169, 182, 200, 204, 206, 305, 310, 318, 320, 321], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 117, 118, 119, 121, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 150, 153, 155, 156, 157, 158, 159, 161, 162, 165, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 217, 220, 221, 222, 223, 224, 226, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 247, 248, 249, 250, 251, 252, 255, 257, 258, 259, 263, 264, 266, 276, 281, 282, 283, 294, 297, 301, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 112, 117, 123, 131, 138, 139, 143, 169, 170, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 282, 285, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 90, 102, 119, 123, 143, 146, 206, 221, 223, 226, 237, 239, 241, 276, 282, 285, 287, 288, 289, 297, 307, 309, 312, 315, 316, 317, 318, 320, 321], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 71, 75, 87, 93, 109, 119, 130, 136, 153, 194, 213, 227, 229, 234, 255, 288, 307, 309, 310, 311, 315, 316, 321], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 88, 89, 93, 101, 106, 113, 123, 135, 138, 139, 140, 141, 143, 153, 169, 210, 211, 220, 221, 223, 224, 226, 227, 228, 229, 232, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 305, 309, 312, 315, 316, 318, 321], "static": [1, 11, 40, 45, 144, 232, 316, 318], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 71, 72, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 106, 107, 108, 109, 110, 117, 119, 121, 123, 127, 130, 133, 135, 138, 139, 141, 143, 144, 150, 154, 156, 157, 158, 159, 160, 162, 165, 167, 169, 170, 171, 174, 175, 176, 179, 183, 194, 201, 202, 203, 204, 206, 210, 214, 215, 220, 221, 222, 223, 226, 232, 233, 236, 237, 238, 239, 241, 248, 249, 250, 251, 252, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 276, 305, 306, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 71, 75, 77, 82, 87, 88, 89, 93, 134, 137, 146, 176, 205, 237, 306, 309, 311, 312, 315, 316, 317, 318, 321], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 71, 75, 87, 93, 107, 109, 110, 118, 125, 139, 151, 152, 169, 204, 206, 222, 233, 236, 268, 282, 287, 299, 300, 301, 305, 309, 310, 311, 312, 315, 316, 318], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 71, 75, 79, 84, 87, 88, 89, 93, 102, 106, 123, 133, 135, 137, 138, 139, 141, 143, 144, 146, 156, 169, 175, 176, 178, 184, 193, 197, 199, 200, 203, 204, 207, 210, 211, 214, 221, 232, 234, 239, 249, 250, 251, 252, 253, 294, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 71, 75, 83, 87, 93, 102, 106, 113, 123, 130, 135, 138, 139, 140, 141, 143, 194, 210, 211, 212, 234, 307, 311, 321], "two": [1, 3, 4, 8, 10, 32, 62, 71, 75, 87, 93, 119, 123, 143, 161, 169, 188, 211, 233, 244, 281, 285, 294, 306, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "main": [1, 2, 3, 5, 20, 22, 72, 211, 285, 305, 306, 309, 310, 314, 321], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 71, 75, 84, 87, 88, 93, 105, 106, 123, 131, 133, 135, 138, 139, 141, 143, 153, 156, 169, 171, 174, 175, 176, 177, 194, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 220, 221, 222, 223, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 247, 249, 250, 251, 252, 253, 257, 267, 278, 288, 294, 297, 298, 301, 309, 310, 311, 312, 315, 316, 318, 321], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 71, 75, 83, 87, 88, 89, 93, 96, 105, 107, 110, 117, 119, 121, 123, 130, 139, 141, 143, 144, 153, 164, 169, 171, 174, 175, 180, 185, 203, 208, 209, 211, 213, 214, 215, 234, 246, 249, 252, 267, 281, 282, 299, 300, 305, 309, 311, 314, 316, 317, 318, 320, 321], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 138, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 294, 298, 301, 305, 309, 310, 311, 315, 318], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 71, 75, 87, 93, 111, 119, 131, 156, 171, 176, 189, 196, 202, 207, 208, 210, 212, 213, 215, 234, 246, 281, 284, 285, 294, 306, 307, 309, 311, 312, 315, 316], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 83, 84, 87, 93, 100, 135, 169, 204, 212, 213, 289, 301, 305, 307, 310, 311, 312, 315, 318, 319, 321], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 68, 71, 72, 75, 81, 83, 87, 88, 89, 93, 100, 113, 116, 118, 119, 133, 134, 135, 136, 139, 153, 154, 155, 166, 169, 170, 172, 173, 200, 204, 206, 207, 211, 220, 228, 236, 248, 249, 250, 251, 252, 255, 256, 257, 267, 276, 281, 285, 307, 309, 310, 312, 314, 316, 317, 318, 320], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 71, 75, 87, 93, 123, 138, 141, 144, 213, 309, 316, 320], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 71, 75, 87, 93, 124, 134, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 224, 234, 249, 250, 251, 252, 253, 267, 298, 309, 310, 312, 316, 318, 321], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 71, 75, 83, 84, 86, 87, 88, 89, 93, 102, 109, 114, 118, 119, 129, 133, 136, 144, 155, 156, 163, 164, 166, 167, 168, 169, 171, 173, 176, 179, 180, 181, 184, 186, 187, 190, 191, 192, 193, 196, 200, 201, 204, 206, 207, 210, 211, 215, 219, 221, 226, 228, 232, 233, 235, 237, 239, 241, 276, 278, 281, 285, 287, 288, 289, 299, 300, 301, 305, 309, 310, 311, 312, 315, 316, 317, 321], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 71, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 169, 171, 177, 178, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 250, 251, 252, 282, 309, 311, 312, 315, 316, 318, 321], "deliv": [1, 16, 18, 19, 20, 309, 310, 320], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 71, 75, 82, 87, 88, 89, 93, 144, 169, 212, 213, 267, 276, 305, 310, 314, 316, 320], "user": [1, 2, 3, 5, 8, 21, 32, 52, 71, 75, 87, 93, 134, 139, 162, 170, 236, 298, 306, 307, 309, 310, 316, 320, 321], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 68, 71, 72, 75, 81, 82, 83, 84, 86, 87, 88, 89, 93, 100, 102, 106, 111, 113, 116, 118, 123, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 146, 154, 169, 195, 206, 267, 294, 309, 310, 311, 312, 314, 315, 320], "whenev": [1, 3, 32, 35, 38, 41, 42, 99, 116, 139, 234, 249, 250, 251, 252, 287, 305], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 71, 75, 87, 93, 133, 200, 204, 206, 309, 311, 315, 320, 321], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 107, 108, 110, 111, 118, 119, 121, 125, 127, 129, 131, 133, 135, 136, 138, 144, 153, 154, 155, 169, 173, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 294, 306, 309, 311, 312, 314, 315, 316, 318, 320, 321], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 68, 71, 75, 81, 83, 87, 88, 89, 91, 92, 93, 100, 102, 103, 105, 106, 111, 116, 119, 125, 131, 133, 134, 136, 138, 139, 142, 144, 153, 154, 155, 157, 162, 166, 169, 170, 171, 173, 180, 183, 184, 186, 187, 193, 197, 210, 216, 220, 222, 233, 234, 236, 237, 238, 247, 248, 249, 250, 251, 252, 253, 301, 305, 306, 309, 310, 311, 312, 315, 316, 321], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 71, 75, 79, 87, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 169, 177, 200, 202, 204, 208, 229, 310, 311, 312, 315, 316, 317, 318, 321], "predefin": [1, 310, 311, 318], "becaus": [1, 3, 4, 7, 40, 71, 75, 87, 93, 117, 133, 138, 161, 170, 176, 196, 202, 203, 207, 208, 209, 210, 211, 309, 310, 312, 314, 315, 316, 318, 321], "potenti": [1, 316, 318], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 71, 75, 87, 93, 119, 139, 142, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 179, 180, 181, 182, 183, 186, 187, 189, 191, 192, 194, 197, 200, 201, 203, 204, 206, 207, 209, 211, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 289, 306, 309, 311, 312, 314, 315, 317, 318], "heavi": [1, 8, 318], "crucial": [1, 200, 204, 206, 232, 234, 309, 310, 311, 312, 315, 316, 321], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 117, 157, 162, 183, 234, 236, 294, 305, 309, 310, 311, 315, 316], "hyperparamet": [1, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 309, 316, 318], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 135, 298, 301, 309, 318], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 69, 70, 71, 72, 75, 83, 84, 86, 87, 88, 89, 90, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 297, 298, 299, 300, 301, 305, 306, 309, 312, 315, 316, 317, 320], "take": [1, 3, 8, 23, 40, 71, 75, 87, 93, 105, 133, 134, 136, 138, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 205, 206, 209, 214, 217, 219, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 276, 287, 305, 307, 309, 310, 311, 315, 316, 318, 321], "consider": [1, 3, 8, 310, 315, 318], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 83, 87, 88, 89, 90, 93, 107, 110, 134, 139, 154, 156, 169, 171, 215, 221, 222, 223, 224, 226, 227, 233, 234, 236, 237, 239, 241, 247, 249, 252, 309, 310, 311, 315, 316, 321], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 82, 83, 87, 88, 89, 90, 93, 102, 105, 106, 107, 108, 111, 113, 117, 119, 124, 125, 127, 130, 131, 133, 134, 136, 138, 139, 144, 146, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 207, 209, 210, 211, 214, 217, 226, 231, 233, 234, 236, 237, 240, 248, 249, 250, 251, 252, 253, 268, 280, 281, 282, 285, 297, 299, 300, 301, 305, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "occur": [1, 8, 14, 28, 29, 103, 119, 124, 154, 196, 202, 203, 207, 208, 209, 210, 211, 229, 318, 321], "serial": [1, 3, 32, 71, 75, 87, 93, 144], "optim": [1, 2, 8, 32, 71, 75, 87, 93, 139, 155, 173, 177, 178, 221, 234, 235, 236, 239, 280, 285, 297, 306, 307, 311, 312, 315, 316], "parallel": [1, 3, 8, 17, 88, 89, 146, 220, 298, 299, 300, 301, 310, 311, 315], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 102, 127, 297, 300, 303, 311, 312, 315, 318], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 75, 77, 82, 83, 87, 88, 89, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 299, 300, 301, 305, 306, 307, 309, 310, 311, 312, 315, 318, 321], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 72, 84, 87, 93, 144, 299, 300, 301, 309, 311, 320, 321], "multisyncdatacollector": [1, 18, 19, 20, 21, 300, 303, 311, 320], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 82, 88, 89, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 305, 307, 311, 318, 320], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 79, 144, 206, 287, 305, 309, 315, 316], "aggreg": [1, 154, 156, 158, 159, 213], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 71, 72, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 153, 154, 169, 171, 185, 201, 203, 204, 209, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 249, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 287, 305, 310, 312, 316, 317, 320, 321], "final": [1, 3, 4, 21, 34, 36, 39, 40, 169, 200, 204, 205, 206, 212, 249, 281, 305, 309, 310, 311, 315, 316, 321], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 299, 303, 309, 310, 311, 320], "sever": [1, 8, 30, 32, 45, 71, 75, 87, 93, 103, 105, 139, 236, 309, 311, 318, 321], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 71, 75, 83, 84, 86, 87, 93, 102, 113, 119, 121, 124, 127, 135, 139, 140, 144, 154, 163, 164, 169, 170, 174, 175, 176, 177, 182, 184, 190, 194, 206, 210, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 276, 279, 282, 283, 284, 285, 287, 299, 300, 301, 307, 310, 311, 312, 314, 315, 317, 320, 321], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 124, 175, 182, 248, 289, 304, 309, 310, 311, 312, 315, 316, 318, 321], "continu": [1, 9, 25, 46, 71, 75, 87, 88, 89, 93, 150, 158, 159, 160, 161, 206, 213, 220, 221, 226, 232, 236, 237, 238, 239, 240, 241, 249, 254, 262, 305, 309, 311, 312, 315, 316, 318, 320, 321], "concomitantli": 1, "network": [1, 4, 8, 32, 71, 75, 82, 87, 88, 89, 93, 156, 158, 159, 160, 161, 164, 166, 167, 171, 176, 178, 180, 181, 184, 186, 187, 188, 193, 197, 198, 199, 210, 214, 221, 222, 223, 224, 226, 227, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 245, 247, 249, 250, 251, 252, 253, 296, 297, 305, 306, 307, 314, 316, 321], "impli": [1, 321], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 71, 75, 87, 91, 92, 93, 106, 123, 135, 138, 139, 141, 143, 169, 178, 210, 220, 221, 222, 226, 229, 287, 296, 305, 307, 309, 310, 311, 312, 314, 316, 318, 320], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 71, 75, 87, 93, 117, 119, 131, 139, 140, 144, 146, 171, 306, 307, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "slightli": [1, 305, 306, 312, 316, 317, 318, 321], "lag": [1, 13, 14, 16, 17, 309, 310, 311], "therefor": [1, 3, 7, 71, 75, 87, 93, 127, 134, 236, 247, 321], "although": [1, 8, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 307, 309, 310, 318], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 71, 75, 82, 83, 86, 87, 88, 89, 93, 100, 102, 117, 123, 127, 130, 133, 136, 138, 140, 143, 153, 154, 174, 175, 200, 204, 206, 207, 210, 211, 219, 220, 221, 222, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 306, 307, 309, 310, 311, 314, 315, 316, 318, 321], "asynchron": [1, 9, 14, 21, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210, 220, 299, 310, 311], "off": [1, 2, 4, 168, 192, 202, 239, 281, 290, 305, 307, 309, 310, 311, 315, 317, 321], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 71, 75, 87, 88, 89, 93, 107, 110, 113, 119, 134, 165, 169, 176, 177, 197, 199, 201, 203, 208, 220, 227, 232, 236, 281, 305, 307, 309, 310, 311, 312, 315, 316, 317, 318, 321], "remot": [1, 18, 19, 20, 21, 87, 93, 321], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 71, 75, 78, 83, 84, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 105, 107, 110, 111, 117, 121, 125, 130, 131, 133, 136, 146, 155, 169, 173, 206, 220, 289, 305, 309, 311, 312, 317, 318, 320], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 131, 237, 249, 250, 251, 252, 253, 306, 309, 311], "synchronis": [1, 72, 315], "either": [1, 5, 22, 32, 40, 54, 71, 75, 87, 93, 133, 134, 216, 241, 272, 307, 309, 310, 312, 317, 318, 320, 321], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 309, 315, 320], "update_at_each_batch": [1, 13, 14, 17, 309], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 69, 70, 71, 72, 73, 75, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 106, 109, 113, 116, 117, 118, 119, 123, 124, 125, 129, 131, 133, 135, 137, 138, 139, 140, 141, 143, 144, 146, 150, 153, 154, 155, 156, 158, 159, 160, 161, 167, 169, 171, 173, 174, 175, 176, 177, 178, 191, 192, 196, 197, 198, 199, 200, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 249, 250, 251, 252, 255, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 278, 279, 281, 282, 285, 301, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "second": [1, 8, 169, 203, 222, 233, 236, 239, 284, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 68, 71, 73, 75, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 110, 111, 117, 121, 122, 123, 125, 127, 131, 133, 135, 137, 138, 139, 141, 143, 150, 153, 155, 156, 157, 158, 159, 160, 161, 165, 167, 169, 170, 171, 173, 176, 177, 178, 183, 184, 185, 193, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 213, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 282, 287, 294, 295, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 71, 75, 87, 93, 113, 117, 138, 164, 165, 179, 197, 198, 199, 202, 203, 205, 210, 216, 220, 222, 223, 224, 227, 233, 236, 238, 247, 248, 249, 250, 251, 252, 285, 294, 303, 307, 309, 310, 311, 312, 314, 315, 316, 321], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 70, 71, 72, 75, 83, 87, 93, 102, 119, 135, 138, 144, 150, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 172, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 224, 226, 234, 247, 249, 250, 251, 252, 268, 272, 281, 289, 290, 291, 294, 297, 299, 300, 305, 306, 307, 309, 310, 311, 312, 316, 318, 321], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 106, 107, 108, 110, 111, 121, 123, 125, 127, 131, 133, 135, 138, 139, 141, 143, 150, 153, 155, 169, 173, 177, 178, 184, 185, 193, 196, 197, 198, 199, 201, 202, 203, 207, 208, 209, 210, 213, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 282, 294, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 71, 75, 79, 87, 93, 125, 161, 169, 171, 179, 194, 196, 200, 202, 210, 215, 234, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 304, 306, 309, 310, 311, 315, 316, 318, 320, 321], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 71, 72, 75, 79, 82, 86, 87, 88, 89, 93, 100, 102, 105, 107, 108, 109, 110, 118, 119, 123, 127, 130, 132, 138, 139, 140, 143, 144, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 176, 179, 180, 181, 182, 183, 185, 186, 187, 189, 194, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 214, 215, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 232, 233, 234, 236, 237, 238, 239, 240, 241, 247, 249, 250, 251, 252, 256, 257, 278, 280, 281, 285, 289, 294, 301, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 321], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 78, 79, 87, 93, 106, 117, 122, 123, 135, 138, 139, 141, 143, 210, 277, 309, 310, 311, 312, 315, 317, 321], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 87, 93, 103, 105, 109, 118, 127, 130, 133, 138, 144, 169, 170, 177, 178, 196, 202, 207, 208, 210, 211, 214, 222, 226, 233, 236, 237, 241, 255, 294, 301, 305, 307, 309, 310, 311, 315, 316, 318, 320], "infer": [1, 87, 93, 102, 134, 144, 169, 177, 201, 309, 311, 318], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 69, 70, 71, 75, 83, 87, 93, 118, 119, 139, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 212, 213, 214, 217, 281, 299, 300, 301, 304, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320], "dispatch": [1, 18, 19, 20, 21, 194], "avail": [1, 3, 4, 6, 21, 62, 79, 88, 89, 117, 165, 185, 207, 211, 234, 299, 300, 305, 309, 310, 311, 312, 315, 316, 318, 321], "speed": [1, 2, 4, 8, 27, 306, 309, 310, 311, 312, 315, 316, 318], "up": [1, 2, 3, 8, 9, 27, 40, 52, 136, 138, 236, 304, 305, 306, 309, 310, 311, 312, 315, 316, 318, 321], "avoid": [1, 32, 55, 56, 65, 71, 75, 87, 93, 99, 139, 144, 196, 210, 215, 222, 233, 236, 288, 311, 315], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 179, 305, 306, 309, 310, 315], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 68, 71, 73, 75, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 107, 110, 111, 113, 121, 123, 125, 127, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 150, 153, 155, 156, 157, 162, 163, 165, 169, 170, 171, 173, 174, 175, 176, 179, 182, 183, 184, 185, 186, 187, 190, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 215, 220, 221, 223, 224, 226, 232, 234, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 268, 276, 282, 294, 305, 310, 311, 312, 314, 315, 316, 320, 321], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 71, 72, 73, 75, 82, 84, 87, 88, 89, 93, 107, 110, 125, 138, 140, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 179, 180, 181, 183, 184, 186, 187, 189, 193, 194, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 222, 233, 234, 236, 249, 250, 251, 252, 253, 282, 299, 300, 301, 305, 309, 310, 311, 312, 314, 315, 316, 318, 321], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 71, 75, 79, 86, 87, 93, 102, 113, 140, 144, 154, 169, 201, 220, 222, 223, 226, 232, 233, 234, 236, 237, 238, 239, 241, 249, 250, 251, 252, 305, 306, 310, 311, 315, 318], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 71, 75, 87, 93, 144, 155, 170, 173, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 294, 303, 307, 309, 311, 312, 315, 317, 318, 321], "while": [1, 3, 7, 8, 32, 71, 75, 87, 93, 127, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 232, 233, 236, 305, 309, 311, 312, 315, 316, 317, 318, 320], "wait": [1, 20, 21, 22, 312, 316], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 71, 75, 87, 88, 89, 93, 99, 102, 109, 119, 125, 127, 130, 131, 133, 135, 139, 187, 212, 213, 214, 220, 221, 223, 224, 226, 232, 236, 239, 249, 256, 257, 305, 307, 309, 310, 311, 312, 314, 315, 316, 318, 321], "impact": [1, 107, 110, 310, 312, 315], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 71, 72, 75, 79, 87, 93, 102, 106, 123, 135, 138, 139, 141, 143, 144, 210, 301, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "manag": [1, 8, 245, 246, 249, 250, 251, 252, 281], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 71, 75, 87, 93, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 153, 154, 155, 164, 165, 169, 172, 173, 185, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 268, 279, 280, 281, 283, 284, 285, 289, 294, 306, 307, 309, 311, 312, 314, 315, 316, 318, 320, 321], "control": [1, 3, 5, 8, 16, 69, 70, 82, 88, 89, 109, 153, 158, 159, 160, 161, 169, 172, 173, 187, 194, 206, 210, 211, 212, 220, 222, 233, 236, 240, 249, 254, 262, 305, 307, 309, 310, 311, 315, 316, 318], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 71, 75, 79, 84, 87, 90, 93, 102, 103, 107, 110, 114, 117, 118, 119, 123, 124, 133, 135, 136, 138, 139, 141, 146, 168, 169, 174, 175, 192, 197, 198, 199, 201, 207, 210, 211, 213, 220, 221, 222, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 244, 247, 249, 250, 251, 252, 276, 280, 294, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 321], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 309, 310, 315, 320], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 71, 75, 87, 88, 89, 93, 102, 105, 107, 110, 114, 121, 134, 139, 169, 281, 285, 306, 309, 310, 311, 312, 315, 316, 318, 321], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 206, 309, 321], "usual": [1, 3, 4, 6, 7, 8, 52, 71, 75, 87, 93, 178, 236, 249, 250, 251, 252, 253, 267, 294, 304, 305, 307, 309, 310, 311, 312, 315, 318, 321], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 71, 72, 75, 82, 87, 88, 89, 93, 102, 107, 109, 110, 114, 118, 119, 138, 139, 144, 156, 169, 171, 174, 175, 176, 201, 206, 214, 309, 310, 311, 314, 315, 317, 318, 321], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 71, 73, 75, 87, 93, 102, 107, 110, 127, 303, 307, 310, 311, 312, 315, 317], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 69, 71, 75, 86, 87, 88, 89, 90, 93, 100, 102, 103, 107, 109, 110, 113, 117, 118, 119, 121, 123, 124, 127, 129, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 189, 190, 191, 192, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 214, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 294, 297, 301, 307, 309, 310, 311, 312, 317, 318, 320, 321], "behaviour": [1, 3, 21, 75, 103, 107, 110, 119, 124, 134, 153, 168, 169, 192, 281, 305, 310, 312, 316, 318], "besid": 1, "those": [1, 5, 7, 26, 28, 87, 93, 102, 107, 110, 119, 135, 136, 169, 207, 211, 212, 213, 287, 299, 300, 305, 309, 310, 315, 316, 321], "choos": [1, 82, 169, 236, 305, 306, 309, 310, 311, 315, 318], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 71, 75, 83, 86, 87, 88, 89, 91, 92, 93, 117, 123, 141, 156, 169, 171, 203, 208, 209, 219, 220, 221, 222, 223, 226, 232, 233, 234, 236, 237, 238, 239, 241, 285, 294, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 288, 309, 311, 320], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 102, 114, 200, 204, 206, 267, 268, 278, 281, 285, 288, 289, 309, 310, 311, 312, 315, 318, 320, 321], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 75, 86, 87, 93, 102, 105, 106, 109, 113, 116, 117, 119, 121, 122, 123, 130, 135, 138, 139, 141, 143, 144, 146, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 173, 176, 177, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 210, 211, 213, 214, 217, 222, 233, 236, 248, 249, 250, 251, 252, 267, 281, 307, 310, 311, 312, 315, 316, 317, 318, 321], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 102, 127, 288, 309, 310, 311, 312, 315, 318, 320], "each": [1, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 71, 72, 75, 87, 88, 89, 93, 123, 127, 130, 133, 134, 135, 136, 143, 144, 165, 169, 176, 180, 184, 185, 193, 200, 202, 203, 204, 209, 213, 255, 258, 259, 260, 261, 263, 264, 265, 266, 281, 282, 299, 300, 305, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 288, 309, 310], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 71, 75, 83, 87, 93, 109, 118, 119, 135, 146, 169, 204, 207, 210, 211, 221, 237, 281, 289, 305, 309, 310, 311, 312, 316, 317, 318, 320, 321], "rand_step": [1, 3, 67, 69, 70, 71, 72, 74, 75, 76, 80, 83, 84, 87, 93, 116, 135, 144, 316, 320, 321], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 309], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 309, 310, 311], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 71, 75, 87, 93, 124, 133, 138, 155, 169, 173, 206, 236, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 276, 303, 306, 309, 310, 311, 312, 316, 318, 320, 321], "pad": [1, 23, 37, 43, 52, 102, 156, 158, 159, 169, 170, 174, 175, 282], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 102, 103, 119, 121, 124, 130, 137, 169, 171, 174, 175, 178, 202, 207, 210, 211, 234, 305, 309, 310, 312, 315, 316, 318], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 71, 75, 87, 93, 102, 106, 123, 135, 137, 138, 139, 141, 143, 172, 210, 219, 227, 285, 304, 310, 311, 314, 315, 316, 318, 321], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 75, 124, 133, 154, 174, 175, 200, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 307, 312], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 71, 75, 87, 93, 114, 124, 144, 165, 174, 175, 185, 202, 203, 208, 209, 211, 244, 249, 282, 309, 311, 312, 315], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 96, 124, 139, 156, 171, 174, 175, 200, 206, 233, 249, 250, 251, 252, 282, 307, 321], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 281, 303, 309, 310], "strategi": [1, 16, 82, 175, 182, 204, 305, 307, 309, 310, 315, 318], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 71, 75, 87, 93, 123, 143, 305, 306, 309, 311, 315, 316, 318, 321], "tool": [1, 2, 3, 5, 312, 316, 318, 321], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 97, 99, 307, 309, 311, 312, 316], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 303], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 303], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 103, 106, 107, 108, 109, 110, 111, 117, 119, 121, 123, 125, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 150, 153, 154, 155, 156, 157, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 218, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 276, 283, 284, 294, 297, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "multiprocess": [1, 3, 18, 19, 20, 72, 73, 144, 310, 311, 316, 321], "synchron": [1, 13, 19, 21, 84, 299, 300, 310, 311], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 84, 87, 93, 107, 110, 134, 139, 144, 147, 151, 152, 163, 168, 169, 182, 190, 191, 192, 207, 211, 234, 281, 309, 310, 312, 315, 320, 321], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 200, 206, 279, 283, 309, 310, 315], "dedic": [1, 3, 18, 19, 20, 21, 197, 198, 199, 305, 309, 314, 315], "folder": [1, 310], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 71, 75, 87, 93, 124, 212, 213, 276, 285, 305, 309, 310, 311, 314, 320, 321], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 71, 72, 75, 83, 87, 88, 89, 93, 96, 102, 105, 106, 107, 108, 110, 112, 117, 118, 119, 123, 130, 135, 136, 138, 139, 141, 143, 144, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 210, 211, 213, 214, 217, 229, 234, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 280, 285, 288, 299, 300, 301, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 321], "variou": [1, 3, 13, 14, 16, 17, 169, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 242, 247, 299, 300, 309, 310, 311, 315, 321], "machin": [1, 7, 18, 19, 20, 32, 53, 79, 315], "One": [1, 2, 4, 8, 31, 33, 45, 102, 127, 141, 182, 200, 210, 214, 240, 244, 272, 309, 310, 318, 321], "wonder": 1, "why": [1, 3, 316, 321], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 84, 88, 89, 93, 298, 303, 309, 310, 311, 314, 320, 321], "instead": [1, 4, 7, 8, 11, 27, 32, 71, 75, 87, 93, 113, 135, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 220, 221, 222, 224, 226, 227, 232, 233, 236, 237, 238, 239, 247, 249, 253, 257, 301, 305, 316, 318, 321], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 71, 75, 87, 88, 89, 93, 106, 107, 108, 110, 123, 127, 131, 134, 135, 137, 138, 139, 141, 143, 168, 171, 187, 191, 192, 210, 213, 219, 220, 221, 223, 224, 226, 232, 234, 236, 237, 238, 239, 241, 287, 299, 300, 301, 305, 306, 309, 310, 311, 312, 314, 315, 316, 317, 318, 321], "lower": [1, 2, 17, 21, 25, 105, 144, 186, 187, 214, 311, 316], "io": [1, 84], "footprint": [1, 2, 318], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 63, 71, 75, 79, 82, 87, 88, 89, 93, 102, 105, 113, 123, 125, 136, 139, 143, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 208, 209, 210, 214, 217, 219, 226, 237, 238, 239, 241, 248, 253, 268, 285, 301, 305, 306, 309, 310, 311, 312, 315, 316, 318, 320, 321], "commun": [1, 2, 3, 304, 311, 321], "yet": [1, 234, 317], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 71, 73, 75, 83, 87, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 150, 154, 165, 185, 187, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 294, 305, 309, 310, 311, 312, 314, 315, 320], "plai": [1, 3, 88, 89, 102, 310, 311, 318, 321], "role": [1, 3, 310, 321], "opposit": 1, "direct": [1, 32, 71, 75, 87, 93, 234, 310], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 71, 75, 87, 88, 89, 93, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 202, 203, 204, 206, 208, 209, 214, 217, 309, 310, 311, 312, 316, 317, 318, 320, 321], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 84, 249, 250, 251, 252, 312, 315], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 72, 87, 93, 144, 169, 176, 197, 198, 199, 220, 222, 223, 226, 232, 233, 236, 237, 238, 239, 241, 301, 305, 311, 312, 314, 315, 320, 321], "among": [1, 3, 88, 89, 315], "achiev": [1, 3, 4, 32, 71, 75, 79, 87, 93, 134, 154, 282, 307, 309, 310, 311, 312, 315, 316, 321], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 87, 123, 138, 143, 225, 234, 306, 307, 309, 310, 311, 312, 318, 321], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 281, 306, 309, 311, 315, 318, 321], "gpu": [1, 7, 8, 32, 55, 56, 65, 71, 75, 79, 87, 93, 309, 311, 312, 315, 321], "nativ": [1, 7, 9, 71, 75, 87, 93, 102, 312, 318], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 168, 191, 192, 219, 304, 309, 310, 311, 312, 315, 317, 321], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 75, 119, 144, 155, 163, 166, 169, 170, 173, 190, 200, 207, 211, 234, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 305, 306, 309, 310, 311, 315, 316, 318, 320, 321], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 71, 75, 87, 93, 105, 106, 123, 131, 135, 138, 139, 141, 143, 169, 174, 175, 196, 200, 201, 202, 204, 206, 207, 208, 210, 211, 214, 220, 221, 222, 223, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 247, 249, 250, 251, 252, 253, 257, 298, 309, 310, 311, 315, 318, 321], "build": [1, 3, 7, 23, 26, 32, 71, 75, 87, 90, 93, 127, 144, 155, 169, 173, 205, 207, 211, 285, 292, 293, 295, 296, 305, 307, 311, 312, 315, 316, 317, 320, 321], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 71, 75, 83, 87, 93, 106, 109, 119, 123, 135, 138, 139, 141, 143, 153, 155, 165, 166, 173, 185, 189, 196, 202, 203, 204, 206, 209, 210, 211, 212, 213, 215, 219, 223, 224, 248, 249, 250, 251, 252, 253, 255, 277, 281, 297, 305, 307, 309, 310, 311, 315, 316, 321], "mani": [1, 3, 4, 38, 71, 220, 222, 226, 233, 236, 237, 241, 305, 309, 310, 311, 315, 316, 318, 321], "eg": [1, 3, 11, 55, 56, 57, 63, 65, 71, 75, 79, 87, 93, 109, 133, 201], "gymnasium": [1, 3, 5, 11, 71, 75, 87, 93, 97, 99, 111, 131, 133, 310, 311, 316, 320], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 71, 75, 83, 87, 93, 105, 108, 109, 131, 137, 141, 144, 169, 178, 179, 201, 203, 204, 209, 211, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 249, 282, 294, 299, 300, 305, 307, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "warn": [1, 3, 200, 204, 206, 310, 321], "quickli": [1, 3, 310, 315, 321], "becom": [1, 3, 4, 21, 315, 321], "quit": [1, 3, 305, 309, 310, 311, 315, 321], "annoi": [1, 3], "By": [1, 2, 3, 33, 71, 75, 87, 88, 89, 93, 194, 211, 234, 281, 301, 309, 317, 318, 321], "filter": [1, 3, 4, 45, 220, 221, 223, 226, 232, 236, 237, 239], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 71, 75, 87, 88, 89, 93, 135, 146, 174, 175, 177, 178, 196, 201, 202, 203, 206, 207, 208, 209, 210, 211, 245, 246, 307, 309, 310, 311, 312, 315, 316, 318, 320, 321], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 71, 72, 75, 79, 83, 87, 88, 89, 93, 97, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 118, 119, 123, 124, 127, 130, 131, 135, 136, 138, 139, 141, 143, 144, 153, 154, 156, 169, 170, 171, 174, 175, 176, 194, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 280, 282, 285, 287, 289, 294, 297, 301, 304, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "still": [1, 3, 9, 200, 233, 234, 309, 310, 312, 314, 316, 318, 321], "wish": [1, 3, 99, 318], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 71, 75, 78, 84, 87, 88, 89, 93, 106, 123, 135, 137, 138, 139, 141, 143, 145, 156, 168, 171, 176, 177, 184, 192, 193, 197, 199, 210, 211, 282, 309, 310, 311, 312, 315, 316, 318, 321], "displai": [1, 3, 7, 285, 307, 309, 310, 315, 316], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 68, 69, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 110, 111, 113, 116, 117, 118, 119, 121, 123, 124, 125, 127, 129, 131, 133, 135, 137, 138, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 158, 165, 168, 169, 171, 173, 174, 175, 176, 184, 185, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 220, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 247, 249, 250, 251, 252, 258, 259, 260, 261, 263, 264, 265, 266, 278, 279, 281, 282, 283, 285, 294, 301, 305, 307, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "central": [2, 309, 310, 315, 318], "part": [2, 4, 8, 32, 40, 71, 75, 87, 93, 119, 127, 130, 169, 215, 276, 301, 309, 311, 312, 316, 321], "algorithm": [2, 3, 8, 9, 13, 14, 83, 114, 220, 236, 237, 238, 239, 276, 290, 303, 306, 307, 309, 310, 311, 312, 315, 317, 318, 320], "implement": [2, 3, 9, 11, 16, 32, 63, 71, 75, 84, 87, 93, 106, 107, 108, 111, 117, 125, 131, 133, 138, 144, 168, 190, 191, 192, 220, 221, 225, 232, 234, 235, 236, 239, 294, 305, 307, 309, 310, 311, 312, 316, 320], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 62, 71, 72, 75, 79, 87, 93, 102, 117, 123, 125, 135, 141, 144, 155, 169, 170, 176, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "give": [2, 7, 41, 71, 75, 83, 87, 93, 102, 304, 306, 309, 310, 315, 316, 317, 320], "abil": [2, 234, 316, 318], "veri": [2, 3, 310, 316, 318, 320, 321], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 71, 75, 83, 86, 87, 93, 102, 124, 127, 147, 148, 151, 152, 155, 163, 168, 173, 174, 175, 182, 183, 186, 191, 192, 196, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220, 221, 222, 223, 224, 233, 235, 236, 241, 276, 282, 285, 288, 305, 309, 310, 311, 312, 315, 317, 320, 321], "latenc": 2, "especi": [2, 3, 7, 8, 103], "larger": [2, 4, 232], "volum": 2, "lazymemmapstorag": [2, 102, 303, 309, 310, 312, 317, 318], "advis": [2, 321], "due": [2, 3, 5, 317, 318, 321], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 318], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 71, 75, 87, 93, 186, 187, 234, 253, 309, 310, 312, 317, 318, 320, 321], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 71, 75, 87, 88, 89, 93, 107, 108, 110, 130, 132, 134, 140, 155, 210, 211, 234, 240, 305, 309, 311, 312], "file": [2, 6, 7, 8, 267, 307, 310, 315, 317, 318, 319], "locat": [2, 7, 45, 71, 75, 87, 93, 119, 129, 168, 179, 191, 192, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 309, 310, 311, 315, 318], "improv": [2, 4, 114, 220, 306, 315, 318], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 303, 318], "were": [2, 7, 87, 93, 311, 318], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 71, 75, 79, 87, 93, 100, 102, 127, 130, 136, 144, 154, 204, 207, 211, 233, 234, 236, 309, 310, 312], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 79, 84, 88, 89, 90, 102, 123, 141, 157, 158, 159, 160, 161, 162, 165, 166, 167, 173, 174, 175, 178, 180, 181, 183, 184, 186, 187, 193, 203, 206, 220, 221, 225, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 249, 254, 262, 294, 317, 320], "github": [2, 5, 6, 7, 10, 18, 19, 20, 88, 89, 90, 141, 320], "com": [2, 5, 6, 7, 10, 18, 19, 20, 79, 88, 89, 90, 320], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 71, 75, 82, 83, 87, 88, 89, 93, 106, 107, 108, 111, 117, 123, 125, 131, 133, 135, 138, 139, 141, 143, 144, 148, 152, 156, 171, 176, 178, 184, 193, 200, 202, 207, 210, 211, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 243, 247, 255, 294, 299, 305, 309, 310, 311, 315, 316, 318, 321], "1x": 2, "lazytensorstorag": [2, 41, 42, 127, 303, 311, 315, 318], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 71, 75, 78, 82, 84, 86, 87, 88, 89, 91, 92, 93, 100, 102, 106, 109, 111, 117, 119, 121, 123, 125, 127, 130, 131, 133, 135, 137, 138, 139, 141, 143, 150, 155, 156, 158, 159, 162, 165, 167, 169, 170, 171, 173, 176, 179, 182, 184, 194, 196, 197, 198, 199, 202, 203, 207, 209, 210, 213, 214, 215, 220, 221, 223, 224, 226, 227, 228, 229, 232, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 255, 258, 259, 260, 261, 263, 264, 265, 266, 268, 284, 305, 307, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "44x": 2, "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 87, 93, 118, 168, 191, 192, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 310, 311, 316, 318, 321], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 86, 102, 124, 156, 196, 200, 202, 210, 211, 215, 276, 309, 311, 318, 321], "pai": [2, 8, 309, 312], "attent": [2, 8, 309, 312, 321], "alwai": [2, 3, 20, 26, 28, 32, 54, 71, 75, 87, 93, 117, 118, 227, 234, 305, 306, 310, 311, 312, 315, 316, 318], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 135, 168, 184, 191, 192, 309, 312, 315, 316, 318, 320], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 93, 102, 103, 113, 119, 121, 124, 130, 132, 137, 140, 144, 156, 157, 162, 169, 171, 174, 175, 177, 178, 183, 184, 188, 189, 190, 191, 194, 202, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 301, 305, 309, 310, 311, 312, 315, 316, 318], "word": [2, 40, 52, 234, 309, 316, 321], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 71, 72, 75, 79, 84, 87, 88, 93, 102, 123, 138, 139, 141, 144, 150, 153, 156, 158, 159, 160, 161, 162, 167, 169, 171, 172, 176, 201, 211, 224, 227, 237, 247, 268, 282, 289, 290, 291, 297, 299, 300, 305, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "1m": [2, 288, 309, 311, 312], "multidimension": [2, 41, 58, 318], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 162, 169, 177, 194, 201, 212, 213, 220, 222, 227, 233, 236, 248, 285, 305, 307, 309, 310, 311, 312, 316, 318, 321], "desir": [2, 3, 32, 71, 75, 87, 93, 106, 119, 121, 123, 124, 135, 138, 139, 141, 143, 151, 152, 156, 171, 176, 196, 202, 203, 207, 208, 209, 210, 211, 305, 309, 315, 316], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 71, 75, 76, 79, 81, 84, 87, 93, 111, 119, 123, 124, 127, 133, 141, 146, 176, 177, 202, 211, 234, 236, 249, 250, 251, 252, 282, 291, 301, 305, 306, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "do": [2, 3, 4, 7, 75, 118, 124, 144, 153, 176, 177, 198, 249, 307, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "custom": [2, 3, 5, 32, 71, 75, 87, 93, 141, 176, 214, 227, 236, 242, 301, 305, 309, 310, 311, 312, 315], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 69, 71, 75, 82, 84, 87, 88, 89, 90, 93, 96, 109, 111, 125, 130, 131, 133, 139, 141, 154, 169, 202, 208, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 253, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 294, 307, 309, 310, 311, 312, 315, 316, 321], "randomcroptensordict": [2, 309], "here": [2, 3, 4, 7, 8, 9, 10, 71, 75, 79, 87, 88, 89, 93, 102, 305, 306, 309, 310, 311, 312, 315, 316, 318, 320, 321], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 71, 75, 87, 88, 89, 93, 220, 222, 231, 233, 236, 285, 304, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 67, 68, 69, 70, 74, 76, 77, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 94, 95, 97, 179, 194, 200, 201, 206, 211, 216, 249, 273, 274, 275, 301, 303, 311, 312, 315, 317, 321], "around": [2, 5, 7, 15, 17, 41, 42, 83, 211, 249, 309, 310, 315, 321], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 102, 146, 221, 232, 307, 317, 318, 320], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 71, 75, 87, 93, 111, 127, 131, 153, 154, 157, 158, 159, 160, 161, 167, 178, 183, 206, 210, 211, 212, 213, 220, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 301, 307, 309, 314, 315, 318, 320], "replaybuff": [2, 41, 42, 66, 102, 124, 127, 224, 227, 247, 295, 297, 303, 311, 315, 317, 318, 320], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 124, 224, 227, 247, 303, 309, 311, 315, 318], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 71, 75, 82, 87, 88, 89, 91, 92, 93, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 150, 165, 179, 196, 197, 198, 199, 202, 207, 208, 210, 211, 213, 214, 215, 216, 247, 281, 303, 305, 306, 309, 310, 311, 312, 317], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 109, 110, 111, 113, 116, 119, 121, 123, 124, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 220, 221, 223, 224, 226, 229, 230, 232, 234, 236, 237, 238, 239, 241, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 294, 305, 307, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 71, 75, 87, 93, 125, 135, 153, 171, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 242, 244, 247, 305, 307, 309, 311, 312, 315, 316, 318, 321], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 88, 89, 91, 92, 285, 304, 311, 312, 315, 321], "respons": [2, 3, 8, 285, 321], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 117, 197, 198, 199, 210, 232, 294, 303, 309, 316, 320], "repositori": [2, 7, 53], "latest": [2, 3, 10, 84, 88, 89, 282, 311, 315, 316, 320], "wheel": [2, 311], "publish": 2, "pypi": [2, 320], "openml": [2, 53, 86], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 71, 75, 79, 84, 87, 90, 93, 106, 123, 135, 138, 139, 141, 143, 171, 194, 210, 212, 213, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 305, 307, 309, 310, 311, 312, 315, 316, 318, 321], "parent": [2, 3, 21, 26, 28, 44, 71, 103, 106, 108, 113, 114, 119, 123, 130, 133, 135, 138, 140, 141, 197, 234, 236, 253, 309, 316, 320, 321], "subclass": [2, 3, 71, 75, 87, 93, 138, 146, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 210, 211, 212, 214, 217, 234, 236, 310, 312, 316, 318], "basic": [2, 83, 305, 311, 321], "properti": [2, 3, 32, 34, 36, 39, 71, 75, 83, 87, 93, 138, 139, 163, 168, 177, 182, 190, 191, 192, 234, 316, 318], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 68, 69, 70, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 111, 113, 115, 116, 117, 119, 120, 121, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 153, 157, 158, 159, 160, 161, 162, 165, 169, 170, 180, 181, 183, 185, 186, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 215, 216, 220, 221, 222, 223, 224, 226, 229, 232, 233, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 268, 294, 297, 305, 307, 310, 311, 312, 314, 315, 316, 318, 320, 321], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 107, 110, 111, 117, 119, 121, 125, 127, 131, 133, 135, 137, 144, 145, 146, 150, 153, 155, 157, 162, 163, 164, 169, 171, 173, 174, 175, 176, 177, 179, 182, 183, 184, 185, 190, 193, 196, 197, 198, 199, 201, 202, 203, 207, 208, 209, 210, 213, 214, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 276, 282, 285, 297, 305, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 106, 107, 108, 109, 110, 111, 117, 119, 121, 123, 125, 127, 131, 133, 135, 137, 138, 139, 141, 143, 146, 150, 153, 154, 155, 165, 169, 173, 177, 178, 184, 185, 193, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 213, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 255, 294, 305, 311, 312, 314, 315, 316, 318, 320, 321], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 102, 105, 111, 116, 117, 119, 121, 123, 125, 127, 130, 131, 133, 135, 136, 138, 143, 144, 150, 153, 154, 155, 165, 169, 171, 173, 176, 179, 184, 185, 193, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 220, 221, 222, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 278, 281, 294, 297, 305, 306, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 71, 72, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 156, 163, 169, 171, 176, 190, 196, 201, 202, 207, 208, 210, 211, 214, 215, 221, 226, 233, 235, 237, 239, 282, 287, 305, 309, 311, 314, 315, 316, 318, 320, 321], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 71, 75, 83, 86, 87, 88, 89, 90, 93, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 153, 154, 156, 158, 159, 160, 161, 164, 165, 169, 170, 171, 176, 177, 178, 185, 186, 187, 188, 189, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 279, 283, 288, 297, 305, 306, 307, 309, 310, 311, 312, 315, 316, 320, 321], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 86, 87, 88, 89, 90, 93, 102, 105, 106, 107, 108, 110, 111, 117, 119, 123, 125, 130, 131, 133, 136, 138, 141, 143, 146, 154, 156, 157, 158, 159, 162, 164, 165, 166, 169, 170, 171, 176, 179, 185, 194, 196, 197, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 268, 276, 305, 306, 309, 310, 311, 312, 314, 315, 316, 317, 320, 321], "send": [2, 3, 8, 320], "receiv": [2, 3, 32, 40, 71, 75, 87, 93, 134, 138, 171, 255, 306, 309, 311, 314, 316], "spawn": [2, 3, 4, 18, 22, 79, 84, 315], "check_env_spec": [2, 3, 303, 311, 315, 316], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 75, 87, 93, 102, 106, 107, 108, 111, 113, 117, 119, 123, 125, 126, 127, 131, 133, 135, 138, 139, 141, 143, 155, 170, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 253, 267, 298, 306, 307, 308, 310, 311, 312, 316, 318, 321], "saniti": [2, 3, 7, 146, 311], "utmost": 2, "techniqu": [2, 8, 310, 318], "commonli": [2, 321], "emploi": [2, 178], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 318], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 71, 75, 87, 93, 102, 107, 110, 133, 144, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 224, 227, 247, 305, 316, 320], "offer": [2, 3, 7, 305, 310, 316, 321], "facilit": [2, 3, 7, 122, 123, 141, 143, 197, 198, 199, 305, 309, 312, 316], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 134, 207, 211, 309, 311, 315, 316, 321], "extern": [2, 3, 107, 110, 321], "consist": [2, 3, 32, 35, 38, 41, 42, 71, 75, 87, 93, 117, 156, 171, 309, 310, 311, 316, 317, 321], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210, 309, 310, 321], "manner": [2, 75, 123, 141, 305, 309, 310, 311, 314, 316, 318], "handl": [3, 21, 32, 71, 75, 87, 93, 144, 169, 171, 285, 299, 300, 309, 310, 311, 315, 318], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 71, 75, 82, 87, 88, 89, 93, 102, 109, 119, 125, 134, 139, 140, 165, 169, 171, 173, 176, 185, 232, 236, 244, 249, 250, 251, 255, 256, 257, 281, 285, 287, 299, 300, 305, 306, 307, 309, 310, 311, 314, 315, 316, 317, 318, 321], "dm": [3, 309, 321], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 79, 83, 84, 85, 127, 135, 141, 142, 197, 205, 220, 221, 223, 224, 226, 228, 232, 236, 237, 238, 239, 241, 285, 294, 305, 306, 307, 309, 310, 312, 315, 316, 318, 321], "goal": [3, 4, 134, 309, 310, 311, 312, 315, 316], "abl": [3, 82, 88, 89, 309, 311, 312, 314, 315, 316, 318, 320], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 146, 270, 271, 272, 273, 274, 275, 304, 310, 311, 315, 318], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 71, 72, 75, 79, 87, 93, 154, 309, 311, 315, 316, 321], "simul": [3, 5, 7, 8, 90, 98, 155, 173, 305, 309, 311, 315], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 88, 89, 93, 123, 141, 146, 158, 169, 189, 211, 212, 213, 276, 288, 305, 307, 309, 310, 311, 312, 315, 316, 318, 320, 321], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 71, 75, 87, 93, 196, 202, 203, 207, 208, 209, 210, 211, 234, 249, 250, 251, 252, 253, 306, 309, 310, 316, 321], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 71, 72, 75, 87, 88, 89, 91, 92, 93, 102, 105, 116, 117, 119, 121, 125, 127, 130, 135, 138, 144, 169, 294, 297, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 71, 75, 83, 87, 93, 106, 109, 117, 123, 135, 138, 139, 141, 143, 155, 156, 158, 159, 160, 161, 164, 165, 166, 167, 169, 171, 173, 175, 176, 179, 184, 185, 193, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 215, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 294, 297, 305, 306, 309, 310, 311, 312, 314, 315, 316, 317, 320], "typic": [3, 4, 8, 32, 71, 75, 87, 93, 134, 221, 234, 236, 239, 305, 306, 307, 311, 315, 316], "organis": [3, 310, 316], "arbitrari": [3, 33, 87, 93, 305, 309, 310, 316], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 71, 75, 87, 93, 102, 133, 136, 154, 249, 250, 251, 252, 253, 307, 310, 311, 315, 316, 318, 320], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 71, 75, 87, 93, 107, 110, 154, 206, 249, 250, 251, 252, 253, 306, 309, 311, 312, 315, 316, 317, 318], "attribut": [3, 4, 32, 45, 71, 75, 87, 93, 123, 141, 169, 211, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 309, 312, 316], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 68, 71, 73, 75, 78, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 107, 110, 111, 121, 125, 127, 131, 133, 135, 138, 153, 154, 155, 162, 165, 169, 173, 184, 185, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 276, 282, 294, 305, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 71, 75, 82, 87, 88, 89, 93, 102, 124, 169, 193, 197, 198, 199, 216, 305, 310, 311, 312, 315], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 71, 75, 83, 86, 87, 90, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 146, 169, 176, 203, 206, 210, 213, 220, 221, 222, 223, 224, 226, 232, 233, 234, 236, 237, 238, 239, 241, 247, 289, 304, 305, 306, 307, 309, 311, 312, 315, 316, 318, 321], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 87, 93], "actual": [3, 4, 7, 17, 71, 75, 87, 93, 134, 288, 306, 309, 311, 315, 316], "just": [3, 4, 11, 71, 75, 82, 87, 88, 89, 93, 105, 154, 176, 276, 305, 307, 309, 310, 311, 312, 315, 316, 318, 320, 321], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 71, 75, 87, 93, 103, 108, 119, 153, 155, 173, 207, 211, 214, 220, 221, 222, 224, 233, 236, 237, 239, 241, 247, 249, 250, 251, 252, 294, 301, 307, 310, 311, 316, 321], "care": [3, 8, 71, 75, 87, 93, 138, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 309, 311, 315, 316, 318], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 168, 171, 176, 192, 210, 282, 309, 310, 311, 312, 316], "parametr": [3, 178, 211, 221, 232, 239, 309, 311], "hardwar": 3, "observation_spec": [3, 71, 75, 83, 87, 93, 100, 102, 103, 104, 105, 106, 107, 108, 110, 113, 115, 116, 117, 119, 121, 123, 126, 130, 133, 134, 135, 136, 137, 138, 140, 141, 155, 169, 173, 289, 297, 309, 311, 314, 315, 316, 321], "compositespec": [3, 28, 49, 71, 73, 75, 83, 87, 93, 100, 107, 108, 109, 110, 111, 117, 125, 131, 133, 134, 135, 138, 150, 154, 155, 173, 196, 200, 207, 213, 214, 303, 309, 311, 315, 316, 321], "pair": [3, 32, 34, 36, 39, 52, 71, 75, 87, 93, 127, 135, 197, 207, 211, 234, 249, 250, 251, 252, 253, 305, 306, 309, 310, 311, 314, 316, 321], "state_spec": [3, 71, 75, 83, 87, 93, 100, 311, 316, 321], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 71, 75, 86, 87, 93, 123, 136, 139, 141, 143, 309, 316], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 68, 71, 75, 81, 83, 87, 88, 89, 93, 100, 102, 107, 110, 117, 127, 165, 185, 187, 196, 202, 207, 208, 221, 224, 237, 239, 241, 297, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "reward_spec": [3, 71, 75, 83, 87, 93, 100, 101, 105, 106, 107, 108, 110, 128, 129, 130, 138, 140, 155, 173, 311, 315, 316, 321], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 100, 101, 105, 106, 107, 108, 110, 111, 117, 121, 125, 127, 128, 129, 130, 131, 133, 134, 138, 140, 142, 143, 144, 150, 153, 155, 173, 201, 216, 220, 221, 223, 224, 226, 229, 232, 234, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 278, 279, 281, 283, 301, 306, 307, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "done_spec": [3, 71, 75, 87, 93, 107, 108, 110, 138, 154, 311, 315, 316, 321], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 206, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 305, 315, 316, 317], "section": [3, 4, 310, 315], "termin": [3, 7, 32, 40, 52, 75, 88, 89, 91, 92, 94, 95, 154, 212, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "input_spec": [3, 71, 75, 83, 87, 93, 106, 107, 108, 109, 119, 121, 125, 130, 131, 133, 138, 139, 140, 142, 155, 173, 315, 316], "full_action_spec": [3, 71, 75, 87, 93, 315], "full_state_spec": [3, 71, 75, 87, 93], "lock": [3, 26, 28, 71, 75, 87, 93, 135, 144, 316], "modifi": [3, 7, 8, 26, 28, 32, 45, 71, 75, 87, 93, 106, 113, 117, 123, 135, 138, 139, 141, 143, 201, 206, 210, 288, 294, 309, 310, 311, 315, 316], "directli": [3, 4, 8, 71, 75, 83, 87, 93, 127, 234, 301, 305, 311, 315, 316, 318], "output_spec": [3, 71, 75, 87, 93, 106, 107, 108, 111, 117, 125, 131, 133, 138, 139, 315, 316], "full_observation_spec": [3, 71, 75, 87, 93], "full_reward_spec": [3, 71, 75, 87, 93, 315], "full_done_spec": [3, 71, 75, 87, 93, 154, 315], "importantli": [3, 207, 211], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 69, 70, 71, 74, 75, 80, 82, 83, 87, 91, 92, 93, 100, 102, 127, 133, 144, 155, 156, 157, 158, 159, 162, 165, 166, 167, 170, 171, 173, 176, 179, 180, 181, 182, 183, 184, 185, 193, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 215, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 267, 305, 309, 310, 311, 312, 315, 316, 318, 320, 321], "action_s": 3, "help": [3, 4, 32, 71, 75, 87, 93, 304, 306, 309, 310, 311, 312, 315], "prealloc": [3, 316], "With": [3, 82, 134, 307, 309, 310, 315, 318, 321], "necessarili": [3, 321], "instanti": [3, 21, 34, 36, 39, 79, 87, 93, 138, 176, 309, 310, 315, 316, 318, 321], "0s": [3, 135, 312], "stateless": [3, 138, 309, 316, 321], "set_se": [3, 13, 14, 16, 17, 21, 68, 71, 75, 81, 83, 87, 93, 119, 125, 136, 139, 316, 320, 321], "seed": [3, 13, 14, 16, 17, 21, 69, 71, 75, 83, 87, 88, 89, 93, 94, 95, 100, 107, 110, 139, 146, 285], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 68, 71, 72, 75, 81, 83, 87, 91, 92, 93, 94, 95, 102, 107, 110, 111, 116, 117, 121, 125, 127, 130, 131, 133, 134, 135, 144, 150, 153, 155, 169, 173, 187, 216, 220, 221, 223, 224, 226, 227, 232, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 279, 281, 283, 309, 310, 312, 314, 316, 317, 318, 320, 321], "determinist": [3, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 157, 166, 180, 187, 196, 210, 211, 214, 221, 305, 309, 310, 312, 316, 321], "preced": [3, 170, 312], "without": [3, 7, 9, 32, 40, 71, 75, 87, 93, 100, 107, 110, 137, 198, 199, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 248, 249, 250, 251, 252, 253, 297, 304, 305, 309, 310, 311, 315, 316, 318, 321], "risk": [3, 124], "overlap": [3, 41], "consecut": [3, 62, 79, 169, 206, 312, 315, 321], "reproduc": [3, 102, 146, 309, 311, 315], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 71, 75, 87, 93, 109, 128, 133, 134, 136, 190, 191, 192, 214, 221, 226, 232, 234, 235, 239, 282, 309, 310, 311, 312, 315, 318], "max_step": [3, 13, 71, 75, 83, 87, 93, 94, 95, 133, 315, 320, 321], "n": [3, 6, 7, 24, 27, 32, 33, 40, 71, 75, 87, 93, 102, 109, 113, 140, 173, 206, 211, 220, 226, 234, 248, 282, 305, 307, 310, 311, 312, 315, 318, 321], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 83, 117, 165, 169, 173, 184, 185, 193, 194, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 212, 213, 214, 216, 221, 223, 226, 228, 229, 230, 232, 234, 237, 239, 241, 247, 248, 249, 250, 251, 252, 281, 297, 305, 309, 311, 312, 314, 315, 316, 317], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 71, 72, 75, 87, 88, 89, 93, 100, 113, 123, 124, 127, 139, 141, 144, 146, 154, 156, 162, 171, 178, 201, 210, 211, 212, 213, 220, 221, 223, 224, 226, 232, 234, 236, 237, 238, 239, 241, 249, 273, 285, 304, 309, 310, 311, 315, 316, 318, 320, 321], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 71, 75, 77, 86, 87, 93, 102, 133, 141, 144, 169, 208, 220, 221, 223, 224, 226, 232, 234, 236, 237, 238, 239, 241, 244, 309, 312, 318, 320], "mark": [3, 16, 71, 75, 87, 93, 169], "trail": [3, 144], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 71, 72, 75, 82, 86, 87, 88, 89, 93, 99, 103, 124, 130, 135, 136, 144, 153, 166, 169, 170, 206, 222, 226, 229, 233, 234, 236, 237, 241, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 285, 305, 306, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "treat": 3, "figur": [3, 309, 311, 312, 315, 316, 321], "summar": [3, 316], "brief": [3, 311], "popul": [3, 38, 116, 135, 309, 311, 312, 316, 318], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 71, 75, 87, 93, 102, 104, 105, 107, 110, 113, 116, 119, 121, 123, 125, 127, 130, 133, 135, 143, 144, 153, 154, 174, 175, 201, 202, 208, 209, 221, 239, 249, 250, 251, 252, 305, 309, 311, 312, 315, 316, 317, 318, 321], "deliveri": 3, "step_mdp": [3, 169, 303, 312, 316, 320, 321], "design": [3, 13, 14, 32, 33, 71, 75, 87, 93, 102, 124, 139, 201, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 309, 310, 311, 312, 314, 315, 316, 318, 321], "metaclass": 3, "ensur": [3, 32, 35, 41, 58, 62, 71, 75, 87, 93, 102, 123, 133, 141, 144, 202, 305, 310, 311, 316, 318], "everi": [3, 8, 17, 26, 28, 32, 33, 63, 71, 75, 87, 93, 133, 134, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 285, 307, 309, 310, 311, 312, 315, 316], "flank": [3, 312], "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 71, 75, 83, 87, 88, 89, 93, 96, 102, 117, 133, 134, 138, 139, 144, 156, 174, 175, 176, 200, 202, 207, 208, 211, 214, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 247, 285, 297, 307, 309, 310, 311, 312, 315, 316, 317, 318, 321], "dual": 3, "strictli": [3, 8, 32, 71, 75, 87, 93, 139, 309, 311], "refer": [3, 7, 8, 9, 21, 32, 40, 71, 75, 87, 93, 139, 144, 155, 165, 166, 173, 174, 175, 180, 181, 186, 187, 203, 220, 227, 228, 229, 230, 236, 249, 254, 262, 309, 310, 311, 315, 317], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 71, 75, 87, 93, 100, 101, 102, 103, 104, 107, 109, 110, 113, 115, 116, 119, 120, 123, 124, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 141, 143, 144, 153, 156, 158, 159, 160, 161, 163, 165, 167, 170, 171, 174, 175, 176, 177, 178, 182, 184, 185, 190, 191, 192, 193, 210, 226, 231, 237, 240, 262, 268, 279, 281, 282, 290, 291, 294, 295, 297, 298, 299, 300, 301], "signal": [3, 17, 52, 75, 102, 133, 136, 154, 306, 309, 311, 315, 318, 321], "interpret": [3, 310], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 71, 75, 87, 93, 113, 119, 124, 136, 156, 169, 170, 171, 174, 175, 180, 188, 194, 200, 201, 204, 211, 310, 311, 312, 315, 316, 317, 318, 320, 321], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 71, 75, 87, 93, 102, 103, 133, 135, 139, 154, 156, 171, 174, 175, 176, 206, 208, 209, 217, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 289, 301, 304, 307, 311, 312, 316, 318, 321], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 71, 75, 87, 88, 89, 93, 111, 118, 127, 133, 154, 192, 255, 309, 311, 312, 314, 318, 320, 321], "carri": [3, 21, 45, 71, 75, 87, 93, 135, 234, 310, 312, 315, 316, 318], "look": [3, 5, 7, 8, 32, 71, 75, 82, 87, 88, 89, 93, 123, 124, 141, 207, 211, 212, 213, 306, 311, 312, 315, 316, 317, 318, 320, 321], "assess": [3, 96, 309], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 303], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 113], "reli": [3, 220, 306, 309, 311, 316, 321], "traj_id": [3, 13, 14, 16, 23, 127, 312, 318, 320], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 71, 75, 87, 93, 135, 139, 153, 212, 213, 304, 309, 312], "context": [3, 5, 8, 32, 71, 72, 75, 86, 87, 93, 135, 140, 176, 177, 201, 245, 246, 249, 250, 251, 252, 254, 262, 281, 305, 306, 309, 310, 311, 315, 316, 317, 318], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 79, 82, 87, 88, 89, 93, 107, 110, 124, 171, 184, 211, 212, 213, 217, 249, 250, 251, 252, 305, 309, 310, 311, 314, 315, 316, 317, 318, 321], "inittrack": [3, 169, 309, 312], "our": [3, 7, 8, 18, 102, 305, 309, 310, 311, 312, 314, 315, 317, 318, 320], "tutori": [3, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 71, 72, 75, 78, 87, 93, 156, 171, 176, 306, 307, 309, 310, 311, 312, 315, 316, 318], "scratch": [3, 8, 310, 316], "better": [3, 8, 9, 169, 306, 311, 316], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 71, 75, 82, 87, 88, 89, 91, 92, 93, 102, 113, 117, 121, 135, 136, 140, 144, 156, 166, 167, 169, 171, 177, 178, 211, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 301, 305, 309, 310, 311, 312, 316, 318, 321], "intens": [3, 8], "gym3": 3, "envpool": [3, 84, 85], "interfac": [3, 78, 86, 171, 177, 305, 309, 311, 316, 318], "simultan": [3, 20, 87, 93, 316], "often": [3, 8, 231, 285, 309, 310, 316, 318, 321], "competit": [3, 315], "advantag": [3, 8, 167, 220, 222, 233, 236, 238, 249, 250, 251, 252, 253, 254, 256, 258, 260, 262, 263, 265, 306, 307, 309, 310, 311, 312, 315, 316, 321], "scale": [3, 4, 52, 102, 117, 119, 129, 134, 137, 166, 168, 179, 186, 187, 191, 192, 197, 198, 199, 207, 211, 213, 220, 221, 232, 236, 237, 238, 239, 283, 289, 294, 301, 305, 309, 310, 311, 312, 315, 320], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 71, 75, 87, 88, 89, 93, 310, 311, 315, 316], "As": [3, 4, 71, 75, 82, 87, 88, 89, 93, 127, 211, 249, 305, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "inherit": [3, 172, 234, 307, 311, 315], "serialenv": [3, 71, 75, 87, 135, 303, 321], "enjoi": 3, "exact": 3, "Of": [3, 7, 304, 316, 321], "cours": [3, 4, 304, 311, 316, 321], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 71, 75, 83, 84, 87, 93, 123, 135, 139, 143, 144, 169, 174, 175, 204, 206, 207, 211, 224, 226, 247, 249, 250, 251, 252, 253, 309, 310, 311, 315, 316, 317], "count": [3, 72, 133, 206, 281, 285, 288, 309, 310, 311, 312, 318, 321], "def": [3, 11, 22, 32, 71, 72, 75, 83, 87, 93, 99, 100, 107, 110, 155, 165, 173, 215, 221, 223, 226, 232, 234, 237, 239, 241, 307, 309, 310, 314, 315, 316, 320, 321], "make_env": [3, 95, 144, 290, 291, 309, 310, 321], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 71, 72, 75, 77, 87, 93, 102, 105, 106, 116, 117, 119, 121, 125, 127, 130, 135, 136, 138, 139, 144, 169, 294, 297, 303, 305, 309, 310, 311, 312, 317, 318, 320, 321], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 71, 72, 75, 84, 87, 93, 102, 105, 111, 116, 117, 119, 125, 127, 130, 133, 135, 136, 138, 169, 244, 258, 259, 260, 261, 263, 264, 265, 266, 305, 310, 312, 316, 318, 320, 321], "from_pixel": [3, 69, 70, 102, 294, 309, 310, 312, 317, 318, 320, 321], "9": [3, 7, 32, 35, 38, 41, 82, 88, 89, 134, 144, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 242, 247, 306, 309, 310, 311, 312, 315, 316, 318, 319], "81": [3, 316], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 68, 71, 75, 78, 81, 83, 87, 90, 91, 92, 93, 100, 101, 102, 103, 105, 106, 108, 109, 117, 118, 119, 123, 127, 130, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 155, 156, 158, 159, 161, 162, 166, 168, 169, 171, 173, 175, 176, 177, 178, 179, 182, 186, 187, 190, 191, 192, 194, 196, 200, 201, 203, 204, 206, 209, 210, 213, 214, 217, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 251, 252, 255, 256, 257, 276, 283, 297, 301, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 71, 72, 75, 87, 88, 89, 93, 105, 114, 117, 119, 121, 131, 135, 139, 140, 144, 156, 165, 169, 171, 174, 175, 176, 185, 196, 202, 203, 207, 208, 209, 210, 211, 214, 215, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 240, 241, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 294, 309, 310, 311, 312, 314, 316, 317, 318, 320], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 99, 102, 103, 107, 108, 109, 110, 116, 119, 125, 127, 130, 133, 135, 136, 137, 144, 150, 153, 154, 156, 162, 165, 171, 174, 175, 176, 179, 182, 185, 196, 197, 198, 199, 201, 202, 204, 206, 208, 210, 213, 215, 234, 294, 297, 305, 307, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "simpli": [3, 6, 34, 36, 39, 45, 111, 131, 234, 305, 306, 309, 311, 315, 321], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 176, 177, 178, 184, 193, 214, 249, 250, 251, 252, 253, 255, 268, 305, 310, 318], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 119, 137, 310, 318], "d": [3, 35, 53, 54, 58, 211, 320], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 72, 87, 93, 100, 103, 107, 109, 110, 117, 119, 124, 134, 135, 137, 144, 196, 204, 207, 208, 211, 249, 250, 251, 252, 253, 272, 305, 309, 310, 311, 312, 315, 316, 318, 320, 321], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 310, 315, 316], "_reset": [3, 71, 75, 83, 87, 93, 100, 102, 107, 110, 154, 155, 173], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 107, 110, 111, 121, 125, 127, 131, 133, 135, 139, 153, 155, 165, 169, 173, 184, 185, 193, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 213, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 289, 294, 304, 305, 310, 311, 312, 314, 316, 318, 320, 321], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 68, 69, 70, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 107, 109, 110, 111, 113, 117, 118, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 158, 159, 168, 169, 171, 173, 176, 177, 178, 191, 192, 196, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 247, 249, 250, 251, 252, 255, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 278, 279, 281, 282, 283, 285, 294, 301, 310, 311, 312, 314, 315, 316, 318, 320, 321], "pixel": [3, 7, 26, 102, 104, 113, 115, 119, 121, 123, 126, 137, 141, 143, 158, 180, 181, 268, 294, 305, 309, 310, 312, 317, 318, 320, 321], "500": [3, 309, 310, 316, 320, 321], "uint8": [3, 47, 121, 137, 310, 318, 320, 321], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 93, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 115, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 220, 221, 223, 224, 226, 227, 228, 232, 234, 235, 236, 237, 238, 239, 240, 241, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 294, 297, 299, 300, 301, 305, 307, 309, 310, 311, 312, 315, 316, 318, 320, 321], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 107, 110, 111, 121, 125, 127, 131, 133, 135, 144, 153, 155, 165, 169, 173, 184, 185, 193, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 213, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 294, 305, 311, 312, 314, 316, 318, 320, 321], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 93, 107, 110, 144, 154, 169, 206, 207, 211, 309, 310, 314, 315, 321], "launch": [3, 13, 14, 18, 19, 20, 22, 87, 93], "start": [3, 4, 5, 13, 21, 45, 72, 82, 153, 280, 309, 310, 315, 316, 318, 321], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 71, 75, 87, 93, 135, 144, 212, 213, 311, 312, 315, 316, 321], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 71, 75, 87, 93, 127, 139, 200, 206, 283, 307, 310, 311, 312, 316, 318, 321], "great": [3, 7, 8, 320], "speedup": [3, 8, 321], "precis": [3, 107, 110, 153, 309, 311], "anoth": [3, 8, 34, 36, 39, 71, 75, 79, 87, 93, 107, 108, 110, 135, 138, 171, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 305, 306, 309, 311, 312, 314, 315, 316, 321], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 71, 75, 79, 87, 93, 124, 321], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 71, 72, 75, 84, 87, 93, 102, 107, 110, 123, 127, 136, 143, 144, 153, 202, 206, 210, 240, 249, 250, 251, 252, 253, 255, 285, 287, 301, 304, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 96, 102, 112, 118, 127, 136, 139, 146, 200, 204, 206, 309, 311, 315, 317, 318], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 78, 99, 102, 105, 107, 110, 117, 125, 144, 146, 150, 176, 179, 194, 249, 250, 251, 252, 276, 284, 314, 315, 318, 321], "mismatch": [3, 310], "mostli": [3, 17, 306, 318, 321], "purpos": [3, 7, 102, 297, 309, 311, 312, 315, 317, 321], "want": [3, 6, 7, 8, 119, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 305, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "subprocess": [3, 13, 14, 72, 87, 93], "addit": [3, 4, 32, 52, 71, 75, 84, 87, 93, 106, 123, 135, 138, 139, 141, 143, 200, 201, 210, 219, 234, 249, 306, 309, 310, 315, 318], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 84, 85, 318], "multithreadedenv": [3, 303], "underneath": 3, "higher": [3, 4, 105, 214, 309, 310, 311, 318, 321], "restrict": [3, 310, 317, 318, 321], "flexibl": [3, 9, 84, 242, 306, 307, 318, 321], "cover": [3, 304, 311, 316, 320], "popular": [3, 305, 312, 315], "atari": [3, 4, 102, 321], "classic": [3, 83, 89, 310], "benchmark_batched_env": 3, "py": [3, 99, 184, 193, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321], "pipelin": [3, 7, 305, 311], "seamlessli": [3, 316], "modif": [3, 5, 26, 28, 32, 71, 75, 87, 93, 113, 154, 234, 311, 316], "infrastructur": [3, 315], "view": [3, 8, 27, 32, 33, 71, 75, 87, 93, 100, 165, 171, 316, 318, 320, 321], "core": [3, 8, 294, 307, 312, 320], "decis": [3, 157, 183, 201, 225, 235, 312, 315, 318, 321], "act": [3, 4, 88, 89, 176, 221, 223, 232, 237, 239, 241, 312, 315], "world": [3, 5, 83, 216, 229, 315, 316, 321], "paradigm": [3, 17, 315], "decpodp": 3, "markov": [3, 321], "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 71, 75, 87, 93, 109, 118, 128, 139, 146, 156, 169, 171, 176, 203, 207, 211, 220, 222, 223, 226, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 244, 249, 281, 285, 306, 309, 310, 312, 315, 316, 321], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 71, 75, 83, 87, 93, 134, 139, 144, 234, 288, 305, 307, 309, 310, 311, 312, 315, 316, 318, 321], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 79, 87, 88, 89, 105, 130, 166, 176, 204, 285, 299, 300, 309, 310, 311, 312, 315, 318, 320], "accommod": [3, 13, 14, 16, 17], "thank": [3, 309], "carrier": [3, 311, 312, 318], "particular": [3, 32, 45, 52, 71, 75, 87, 93, 139, 306, 307, 310, 312, 314, 315, 318], "thu": [3, 233, 315], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 96, 305, 310, 311, 315], "hand": [3, 7, 21, 315, 316], "kept": [3, 13, 14, 16, 17, 62, 87, 93, 109, 131, 138, 146, 153, 168, 191, 192], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 71, 75, 87, 93, 107, 108, 110, 135, 137, 139, 146, 169, 171, 176, 207, 210, 211, 213, 214, 219, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 249, 250, 251, 252, 276, 287, 299, 300, 301, 305, 307, 309, 310, 311, 312, 315, 316, 318, 321], "let": [3, 6, 7, 32, 43, 71, 75, 87, 88, 89, 93, 102, 169, 176, 202, 281, 306, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "understand": [3, 8, 309, 310, 315], "go": [3, 7, 82, 124, 127, 201, 255, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "vma": [3, 94, 95, 315], "robot": [3, 5, 7, 123, 141, 143, 315], "what": [3, 8, 35, 44, 71, 75, 87, 93, 135, 153, 208, 304, 305, 306, 310, 311, 312, 315, 316, 317, 318, 320, 321], "vmasenv": [3, 303, 315], "balanc": [3, 309, 310], "num_env": [3, 21, 78, 94, 95, 315], "n_agent": [3, 94, 95, 176, 184, 193, 247, 315], "5": [3, 24, 26, 28, 35, 38, 41, 42, 72, 81, 84, 91, 92, 94, 95, 127, 133, 155, 156, 165, 166, 168, 170, 171, 173, 176, 180, 185, 191, 192, 201, 202, 208, 214, 233, 236, 238, 241, 305, 309, 310, 315, 316, 318, 319, 320, 321], "td": [3, 15, 26, 67, 68, 69, 70, 74, 76, 80, 81, 100, 103, 107, 108, 109, 110, 116, 117, 119, 127, 130, 134, 135, 137, 139, 144, 153, 155, 165, 169, 172, 173, 184, 185, 193, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 213, 215, 247, 250, 251, 252, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 276, 284, 294, 305, 306, 309, 312, 315, 316, 320, 321], "info": [3, 35, 38, 41, 42, 52, 53, 71, 75, 87, 88, 89, 90, 91, 92, 93, 94, 95, 141, 145, 315, 318], "ground_rew": 3, "pos_rew": [3, 315], "16": [3, 32, 71, 75, 87, 93, 102, 309, 312, 316, 318], "root": [3, 26, 28, 102, 136, 153, 168, 191, 192, 312, 315, 316, 318, 321], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 113, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 310, 316], "vari": [3, 88, 89, 124, 315], "creation": [3, 87, 93, 309, 321], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 71, 75, 87, 93, 123, 127, 130, 139, 143, 179, 185, 203, 207, 209, 210, 211, 249, 250, 251, 252, 276, 288, 309, 310, 311, 312, 315, 316, 318, 320, 321], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 72, 127, 137, 144, 233, 241, 306, 307, 309, 311, 312, 315, 316, 318, 320], "append": [3, 8, 35, 38, 41, 42, 52, 53, 72, 105, 127, 135, 169, 202, 208, 309, 310, 311, 312, 315, 316, 317, 318, 320], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 71, 75, 87, 93, 100, 154, 224, 226, 247, 303, 311, 315, 321], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 71, 75, 79, 82, 87, 88, 89, 91, 92, 93, 99, 144, 304, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "simpl": [3, 9, 32, 33, 71, 75, 87, 93, 158, 211, 224, 234, 238, 249, 305, 306, 309, 310, 311, 315, 321], "composit": [3, 26, 28, 71, 75, 87, 93, 311, 316], "prefix": [3, 23, 32, 34, 36, 39, 45, 71, 75, 87, 93, 139, 234, 267, 312, 321], "exactli": [3, 32, 71, 75, 77, 87, 93, 139, 309, 312, 315], "action_kei": [3, 15, 71, 75, 87, 93, 100, 109, 153, 155, 172, 173, 200, 204, 206, 315], "reward_kei": [3, 71, 75, 87, 93, 153, 155, 173, 279, 283, 315], "done_kei": [3, 71, 75, 87, 93, 127, 133, 153, 315], "automat": [3, 5, 55, 56, 65, 71, 75, 87, 88, 89, 93, 107, 110, 119, 196, 207, 305, 309, 311, 315, 316, 318, 320], "right": [3, 6, 7, 40, 170, 310, 311, 315, 316, 321], "sure": [3, 4, 7, 53, 63, 79, 127, 202, 301, 305, 309, 311, 312, 315, 316, 318, 320, 321], "set_kei": [3, 220, 221, 222, 224, 226, 227, 232, 233, 234, 236, 237, 238, 239, 247, 253, 315], "awai": [3, 311, 315], "eas": [3, 315], "access": [3, 7, 8, 32, 35, 53, 71, 75, 87, 93, 123, 141, 301, 304, 309, 315, 316, 318], "leaf": [3, 26, 28, 71, 75, 87, 93, 133, 211, 315], "abov": [3, 7, 32, 71, 75, 87, 93, 168, 191, 192, 219, 306, 307, 309, 311, 315, 316, 321], "would": [3, 32, 40, 71, 75, 87, 93, 169, 171, 307, 310, 311, 312, 316, 318, 321], "full": [3, 71, 75, 87, 93, 203, 276, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "raw": [3, 4, 40, 168, 191, 192, 310, 316], "logic": 3, "torchvis": [3, 123, 143, 320, 321], "transformedenv": [3, 13, 71, 72, 75, 87, 93, 100, 102, 105, 106, 107, 110, 111, 113, 116, 117, 118, 119, 121, 125, 127, 130, 131, 133, 135, 136, 138, 144, 169, 294, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "primit": [3, 4, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241], "built": [3, 5, 7, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 242, 247, 295, 297, 298, 301, 309, 310, 311, 312, 318, 321], "base_env": [3, 71, 75, 87, 93, 100, 105, 107, 109, 110, 117, 121, 133, 135, 136, 309, 310, 311, 317, 320, 321], "totensorimag": [3, 102, 310, 312, 318, 320, 321], "in_kei": [3, 13, 14, 16, 17, 21, 83, 101, 102, 103, 104, 105, 107, 109, 110, 113, 115, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 141, 143, 144, 155, 164, 169, 173, 184, 193, 194, 196, 197, 198, 199, 201, 202, 207, 208, 210, 211, 213, 214, 215, 220, 221, 222, 223, 224, 226, 232, 233, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 267, 268, 294, 297, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "resiz": [3, 102, 310, 312, 318, 321], "64": [3, 102, 158, 159, 167, 169, 176, 184, 247, 309, 310, 311, 312, 314, 316, 318, 320, 321], "now": [3, 7, 35, 102, 176, 309, 310, 311, 312, 314, 315, 317, 318, 321], "appar": [3, 278], "bring": [3, 311, 321], "signific": [3, 5, 8, 311, 321], "kind": [3, 38, 44, 153, 318], "consult": 3, "interest": [3, 207, 211, 305, 310, 311, 315, 316, 321], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 83, 101, 102, 103, 104, 105, 107, 110, 113, 115, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 141, 143, 144, 155, 164, 165, 169, 173, 184, 185, 193, 194, 196, 197, 198, 199, 201, 203, 207, 208, 209, 210, 211, 213, 214, 215, 220, 221, 222, 226, 232, 233, 236, 237, 238, 239, 247, 249, 250, 251, 252, 268, 281, 297, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "easi": [3, 5, 53, 200, 204, 206, 305, 306, 309, 310, 311, 315, 317, 318, 321], "graph": [3, 4, 8, 245, 246, 309, 316], "inv": [3, 105, 109, 121, 127, 316], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 87, 93, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 144, 191, 202, 249, 280, 307, 309, 310, 311, 316, 320, 321], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 107, 110, 121, 139, 196, 202, 210, 212, 213, 215, 220, 221, 223, 226, 232, 236, 237, 238, 239, 241, 310, 315], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 106, 109, 156, 213, 321], "taken": [3, 71, 75, 87, 93, 174, 175, 306, 309, 311, 312, 315, 316], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 102, 107, 110, 119, 127, 218, 232, 316], "in_keys_inv": [3, 105, 107, 110, 119, 120, 121, 125, 127, 138, 309, 314, 316, 321], "append_transform": [3, 35, 38, 41, 42, 52, 53, 123, 135, 141, 309, 312, 316, 320, 321], "doubletofloat": [3, 294, 309, 311, 314], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 107, 110, 111, 119, 121, 125, 127, 131, 133, 135, 137, 150, 153, 155, 165, 169, 173, 184, 185, 193, 196, 197, 198, 199, 201, 202, 206, 207, 208, 209, 210, 213, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 294, 305, 311, 312, 314, 315, 316, 318, 320, 321], "float64": [3, 32, 71, 75, 87, 93, 106, 107, 110, 123, 135, 138, 139, 141, 143, 210, 314, 321], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 107, 110, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 307, 309, 311, 318], "manipul": [3, 4, 8, 123, 141], "keep": [3, 4, 7, 8, 14, 42, 62, 119, 123, 143, 144, 153, 206, 278, 285, 309, 310, 311, 312, 315, 316, 318, 320, 321], "mind": [3, 315], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 109, 153, 204, 305, 318], "unexpect": [3, 32, 71, 75, 87, 93, 139, 321], "behviour": 3, "fortun": [3, 312], "eras": [3, 71, 75, 87, 93], "ident": [3, 13, 14, 16, 32, 87, 93, 176, 249, 250, 251, 252, 299, 300, 310, 315], "alreadi": [3, 8, 11, 32, 45, 71, 75, 87, 93, 135, 154, 211, 249, 250, 251, 252, 309, 311, 315], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 71, 72, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 144, 154, 201, 210, 282, 287, 288, 310, 311, 315, 316, 318], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 71, 75, 87, 93, 106, 107, 108, 110, 111, 117, 125, 131, 133, 138, 139, 144, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 306, 309, 311, 312, 315, 316, 317, 318, 321], "happen": [3, 71, 75, 87, 93, 200, 310, 317, 321], "catfram": [3, 310], "hold": [3, 245, 246, 316, 318], "notic": [3, 102, 311, 316], "parenthood": 3, "reason": [3, 4, 8, 32, 71, 75, 87, 88, 89, 93, 123, 141, 169, 306, 309, 310, 311, 316, 318], "henc": [3, 35, 124, 154, 305, 309, 311, 315, 316], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 316], "discret": [3, 24, 27, 30, 31, 33, 47, 71, 75, 87, 88, 89, 93, 109, 182, 185, 226, 227, 305, 310, 311, 315, 321], "might": [3, 37, 134, 272, 304, 309, 321], "throughout": [3, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 311, 321], "action_mask": [3, 88, 89, 91, 92, 100], "unavail": [3, 88, 89], "probabl": [3, 4, 8, 40, 163, 165, 169, 171, 174, 175, 182, 192, 204, 207, 211, 305, 310, 320], "categor": [3, 27, 31, 33, 88, 89, 100, 165, 182, 185, 202, 203, 208, 209, 224, 226, 247, 312], "probabilistictensordictmodul": [3, 117, 211, 212, 320], "tensordictsequenti": [3, 169, 202, 204, 212, 305, 309, 312, 314, 317, 320], "maskedcategor": [3, 175, 303], "linear": [3, 13, 14, 16, 17, 21, 32, 71, 75, 83, 87, 93, 106, 117, 123, 135, 138, 139, 141, 143, 155, 156, 165, 171, 173, 176, 177, 178, 179, 185, 186, 187, 196, 197, 198, 199, 204, 205, 206, 207, 208, 210, 213, 215, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 297, 305, 310, 314, 317, 320], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 174, 175, 182, 203, 226, 305], "dist": [3, 10, 174, 175, 182], "distribution_class": [3, 117, 197, 198, 199, 201, 207, 211, 213, 220, 221, 226, 232, 236, 237, 238, 239, 305, 309, 311, 315, 320], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 71, 75, 87, 88, 89, 93, 146, 169, 194, 197, 198, 199, 200, 206, 208, 216, 247, 305, 309, 310, 311, 312, 315, 321], "actionmask": 3, "updat": [3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 71, 75, 83, 87, 88, 89, 93, 100, 107, 109, 110, 133, 134, 139, 142, 144, 154, 155, 169, 173, 200, 204, 206, 207, 208, 209, 210, 211, 220, 221, 223, 224, 226, 227, 228, 231, 232, 234, 236, 237, 238, 239, 240, 241, 247, 249, 250, 251, 252, 253, 281, 285, 287, 290, 291, 296, 297, 307, 310, 311, 312, 315, 316, 318, 320, 321], "know": [3, 4, 9, 35, 38, 41, 42, 200, 237, 281, 309, 310, 311, 312, 315, 318], "your_base_env": 3, "mask_kei": [3, 100, 124], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 71, 75, 87, 93, 102, 117, 169, 177, 205, 220, 280, 311, 312, 315, 316, 318, 320], "enviorn": [3, 88, 89, 315], "itself": [3, 32, 71, 75, 87, 93, 97, 234, 311], "log": [3, 4, 8, 40, 163, 164, 165, 174, 175, 182, 192, 202, 203, 207, 211, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 278, 279, 281, 285, 297, 305, 306, 307, 309, 310, 311, 315, 316, 320], "mission": 3, "irrespect": [3, 210, 211], "dmcontrol": [3, 309], "jumanji": [3, 80, 81], "natur": [3, 309, 312], "special": [3, 305, 309, 312, 321], "statu": 3, "framework": [3, 4, 9, 22, 83, 320, 321], "Its": [3, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 144, 210, 253], "success": [3, 102, 138, 204, 310, 316, 318, 320], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 71, 75, 79, 87, 93, 117, 133, 138, 200, 206, 309, 310, 311, 312, 314, 315, 316, 318, 321], "foundat": [3, 5, 88, 89, 311, 315], "inspir": [3, 316], "howev": [3, 5, 7, 32, 71, 75, 87, 93, 102, 130, 134, 139, 305, 309, 310, 311, 312, 318, 321], "gone": [3, 4, 5], "sometim": [3, 312, 321], "hard": [3, 7, 231, 310, 321], "adopt": [3, 5, 309, 321], "prefer": [3, 17, 20, 35, 38, 41, 42, 124, 131, 236, 282, 305, 311, 315, 318], "moreov": 3, "maintain": [3, 5, 9, 316], "both": [3, 7, 32, 71, 72, 75, 87, 88, 89, 93, 102, 125, 139, 154, 156, 169, 171, 176, 197, 198, 199, 203, 209, 220, 222, 223, 226, 232, 233, 234, 236, 237, 238, 239, 241, 281, 305, 309, 311, 315, 316, 317, 318, 321], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 310, 311, 312, 315, 316, 318, 321], "decor": [3, 8, 11, 99, 234, 249, 250, 251, 252], "set_gym_backend": [3, 97, 303], "relev": [3, 40, 249, 250, 251, 252, 253, 316], "gym_backend": [3, 99, 303], "env1": [3, 314], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 71, 75, 87, 93, 99, 123, 143, 173, 285, 307, 310], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 99], "__init__": [3, 7, 83, 99, 100, 107, 110, 155, 165, 173, 215, 221, 223, 226, 232, 237, 239, 241, 307, 316, 317, 321], "env2": [3, 314], "_env": [3, 6, 321], "classic_control": 3, "pendulumenv": [3, 316], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 311], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 77, 84, 87, 93, 102, 124, 134, 135, 136, 138, 139, 147, 148, 153, 166, 170, 187, 206, 227, 271, 307, 309, 310, 311, 312, 315, 316, 320, 321], "tell": [3, 4, 7, 88, 89, 309, 312, 315], "mo_gymnasium": [3, 97], "handi": 3, "side": [3, 4, 321], "v0": [3, 74, 75, 76, 80, 81, 106, 139, 144, 297], "26": [3, 312, 316, 318], "fun": [3, 11, 99, 311, 315], "reveal": 4, "bug": [4, 320], "curv": 4, "won": [4, 32, 71, 72, 75, 87, 93, 123, 143, 285, 301, 310, 311], "exploit": 4, "video": [4, 9, 268, 281, 301, 315], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 71, 75, 79, 87, 93, 107, 110, 124, 130, 208, 310, 311, 312, 315, 316], "cv": 4, "flip": 4, "imag": [4, 7, 69, 104, 123, 137, 143, 171, 309, 310, 315, 317, 321], "correspondingli": 4, "prescript": 4, "tune": [4, 117, 315, 317], "coeffici": [4, 40, 117, 315], "bonu": [4, 220, 222, 233, 236], "beta": [4, 35, 41, 58, 232, 233, 309, 310, 318, 320], "altern": [4, 27, 84, 162, 174, 175, 219, 234, 309, 311, 315], "reduc": [4, 6, 27, 134, 310, 311], "downstream": [4, 309], "formul": [4, 315], "ob": [4, 8, 26, 28, 100, 107, 108, 110, 119, 137, 150, 153, 176, 208, 215, 221, 223, 226, 232, 237, 239, 241, 249, 250, 251, 252, 310, 314, 316, 320, 321], "rate": [4, 144, 248, 310, 311, 315], "gradient": [4, 32, 71, 75, 87, 93, 139, 168, 175, 178, 182, 191, 192, 220, 222, 223, 226, 232, 233, 234, 236, 237, 238, 239, 241, 248, 249, 250, 251, 252, 285, 309, 311, 315, 316], "norm": [4, 8, 285, 309, 310, 311, 315, 316], "easier": [4, 305, 309], "behavior": [4, 32, 71, 75, 87, 93, 139, 232, 311, 315], "local": [4, 7, 10, 16, 21, 32, 71, 75, 87, 93, 139, 176, 184, 193, 247, 273, 315], "optima": 4, "sens": [4, 316], "product": [4, 9, 299, 300], "sum": [4, 21, 31, 33, 130, 174, 175, 193, 229, 248, 255, 306, 309, 310, 311, 312, 315, 316, 321], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 130, 144, 206, 273, 278, 310, 312, 315, 316, 318], "stat": [4, 119, 289, 301, 310, 311], "w": [4, 102, 104, 126, 137, 206, 268, 310, 312, 318], "r": [4, 32, 100, 105, 119, 211, 219, 248, 305, 310, 316, 321], "yield": [4, 16, 21, 32, 71, 75, 87, 93, 234, 309], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 34, 36, 39, 71, 75, 87, 93, 139, 223, 224, 311, 315, 318], "futur": [4, 32, 71, 75, 87, 93, 123, 139, 143, 171, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 304, 320], "past": [4, 310, 318], "spars": [4, 312], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 71, 75, 87, 93, 130, 139, 177, 178, 206, 220, 222, 224, 227, 233, 236, 247, 310, 312, 318, 321], "intermedi": [4, 169, 203, 309, 317], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 309], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 71, 75, 87, 93, 171, 311, 315], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 71, 75, 87, 93, 102, 103, 107, 109, 110, 119, 127, 150, 153, 155, 169, 170, 174, 175, 176, 184, 193, 204, 206, 209, 217, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 255, 312, 320], "subtask": 4, "hierarch": [4, 320], "individu": [4, 18, 19, 20, 21, 32, 45, 71, 75, 87, 93, 309, 315], "select": [4, 15, 35, 38, 41, 42, 52, 53, 88, 89, 100, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 155, 169, 202, 208, 284, 309, 318], "fall": 4, "explicit": [4, 11, 45, 170, 318], "mechan": [4, 32, 71, 75, 87, 93, 139, 310, 316], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 71, 75, 87, 93, 232, 311, 315], "addition": 4, "timestep": [4, 40, 127, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 315], "realli": 4, "larg": [4, 27, 107, 110, 141, 310, 311, 315, 318], "target": [4, 8, 21, 32, 71, 72, 75, 87, 93, 134, 138, 210, 211, 220, 221, 222, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 247, 248, 249, 250, 251, 252, 253, 288, 296, 297, 306, 307, 312, 316], "huge": [4, 176, 312], "std": [4, 119, 144, 179, 183, 200, 309, 321], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 312, 313, 314, 317, 318, 319], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 71, 75, 87, 93, 119, 123, 135, 138, 139, 141, 145, 155, 173, 177, 178, 200, 204, 206, 220, 221, 223, 224, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 241, 247, 294, 301, 310, 312, 316, 321], "estim": [4, 117, 197, 198, 199, 220, 221, 222, 223, 224, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 306, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "encount": [4, 304, 310, 316], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 88, 89, 309, 311, 315, 321], "bonus": 4, "denser": 4, "prior": [4, 187, 229, 315], "freshli": 4, "proper": [4, 6, 7, 249, 250, 251, 252, 310, 311, 315, 318], "doesn": [4, 11, 84, 107, 110], "drop": [4, 62, 153], "meant": [4, 83], "encourag": [4, 309, 310, 318], "measur": [4, 311], "novelti": 4, "revisit": 4, "previous": [4, 311, 321], "diminish": 4, "decreas": 4, "ideal": [4, 119, 316], "down": [4, 13, 14, 16, 17, 312], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 310, 311, 312, 315, 316, 320, 321], "distil": 4, "nois": [4, 145, 178, 195, 206, 237, 241, 281, 301, 309], "exploratori": [4, 220, 222, 233, 236], "could": [4, 6, 310, 311, 315, 317, 321], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 221, 223, 224, 226, 227, 232, 237, 239, 241, 247, 307, 309, 310, 318], "schedul": [4, 7, 40, 281, 311, 316], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 123, 143, 221, 223, 226, 237, 239, 241, 309, 310, 315, 318, 321], "divers": [4, 87, 93], "bootstrap": [4, 227, 250, 256, 257, 309, 312], "noisi": [4, 177, 178, 195, 305], "unstabl": [4, 168, 191, 192], "inher": 4, "stochast": [4, 117, 166, 178, 180, 187, 221, 225, 226, 232, 235, 237, 239, 305, 311, 315], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 169, 173, 197, 198, 199, 234, 237, 307, 310], "pomdp": [4, 318], "previou": [4, 10, 32, 40, 41, 135, 154, 187, 201, 311, 312, 316, 321], "loos": [4, 305, 310, 311], "nonexist": 4, "architectur": [4, 162, 315], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 101, 102, 103, 104, 107, 109, 110, 113, 115, 119, 120, 124, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 144, 156, 163, 165, 171, 174, 175, 176, 182, 185, 189, 201, 212, 213, 225, 267, 268, 280, 281, 282, 284, 285, 294, 305, 309, 311, 312, 314, 315, 321], "rather": [4, 125, 309, 310, 311, 315], "lstm": [4, 169, 170, 179], "explicitli": [4, 310, 312, 315, 318], "rel": [4, 135, 163, 190, 309, 310, 315, 318], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 102, 310, 311, 318, 320, 321], "compens": 4, "descent": [4, 178], "1000": [4, 38, 71, 75, 87, 93, 102, 144, 204, 206, 207, 211, 231, 309, 310, 311, 312, 317, 318], "minimum": [4, 128, 166, 179, 190, 191, 192, 214, 217, 219, 221, 226, 234, 235, 239, 276, 309, 311, 315], "manual": [4, 18, 20, 21, 309, 312, 318], "deviat": [4, 119, 144, 155, 166, 173, 177, 178, 200, 236, 241, 309, 315], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "stabil": [4, 114], "stage": [4, 309, 316], "never": 4, "prevent": [4, 26, 28, 168, 191, 192, 233, 236, 283, 318], "solv": [4, 9, 10, 304, 309, 310, 311, 315, 316, 318], "entir": [4, 311, 316, 318], "submit": [4, 304, 320], "suffici": [4, 309], "recommend": [4, 7, 79, 315], "system": [4, 5, 311, 315, 316], "adequ": [4, 146, 311, 315], "infeas": 4, "allevi": [4, 305], "prune": 4, "develop": [4, 7, 79, 309, 320], "fire": [4, 32, 71, 75, 87, 93], "certain": [4, 18, 20, 21, 32, 45, 71, 75, 87, 93, 99, 114, 133, 139, 204, 233, 305, 309, 310, 311, 315, 321], "illeg": 4, "move": [4, 21, 32, 71, 75, 87, 93, 106, 108, 123, 135, 138, 139, 141, 143, 144, 153, 171, 210, 283, 309, 310, 312, 320, 321], "chess": 4, "combin": [4, 138, 310, 318], "grasp": 4, "releas": [4, 7, 10, 32, 71, 75, 87, 93, 139, 320], "top": [4, 155, 173], "p": [4, 72, 91, 92], "wherein": 4, "cumul": [4, 130, 134, 155, 255, 311], "q": [4, 9, 71, 75, 87, 93, 158, 159, 160, 161, 164, 165, 167, 184, 185, 193, 199, 203, 208, 209, 221, 223, 224, 226, 227, 231, 232, 237, 239, 241, 247, 294, 303, 309], "flow": [4, 309, 311, 315, 316, 318], "reparameter": [4, 163, 175, 182], "soft": [4, 231, 239, 240], "critic": [4, 8, 197, 205, 220, 222, 223, 226, 232, 233, 236, 237, 238, 239, 241, 309, 311], "clip": [4, 40, 105, 128, 222, 241, 285, 311, 315, 316], "oppos": [4, 45], "incorrect": 4, "thought": [4, 71, 75, 87, 93], "bound": [4, 17, 21, 25, 26, 32, 71, 75, 87, 93, 105, 118, 144, 186, 187, 196, 202, 203, 206, 207, 208, 209, 210, 211, 214, 241, 305, 309, 310, 311, 321], "region": 4, "squash": [4, 312, 320], "tanh": [4, 156, 168, 171, 176, 190, 191, 192, 214, 311, 315, 316, 317, 320], "correct": [4, 117, 134, 288, 311, 312], "prob": [4, 174, 175, 182, 311, 315], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 79, 108, 109, 117, 123, 139, 143, 207, 210, 211, 231, 234, 236, 294, 309, 314, 316, 321], "real": [5, 211, 306, 312, 316], "histor": 5, "wa": [5, 7, 71, 75, 87, 93, 139, 154, 231, 240, 255, 306, 310, 311, 314, 318, 320], "ceas": 5, "fork": 5, "farama": [5, 88, 89, 311, 316], "detail": [5, 6, 7, 32, 71, 75, 87, 88, 89, 93, 137, 139, 165, 203, 220, 227, 236, 304, 310, 314, 318], "usag": [5, 7, 52, 102, 169, 221, 232, 239, 242, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "known": [5, 7, 8, 256, 257, 309, 310], "bc": [5, 320], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 71, 75, 87, 93, 102, 127, 144, 310, 318, 320], "face": [5, 8, 9, 321], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 146, 196, 202, 203, 207, 208, 209, 210, 211, 311, 315], "13": [5, 10, 11, 90, 309, 312, 316, 318, 319], "construct": [5, 32, 35, 38, 41, 42, 71, 75, 87, 88, 93, 107, 110, 146, 169, 187, 211, 285, 305, 310, 311, 312, 316, 318, 321], "best": [5, 9, 79, 169, 315, 318, 320], "gymwrapp": [5, 71, 75, 87, 93, 111, 131, 133, 303, 311, 320], "feel": [5, 304, 320], "free": [5, 7, 107, 110, 220, 229, 236, 307, 311, 315, 320], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 109, 309, 310, 311, 312, 315, 318], "prepar": [6, 311], "conda": [6, 7, 304], "assum": [6, 26, 33, 40, 41, 42, 52, 75, 87, 93, 104, 113, 123, 124, 130, 135, 141, 143, 150, 169, 170, 194, 214, 224, 227, 239, 247, 258, 259, 260, 261, 263, 264, 265, 266, 268, 309, 311, 312, 314, 316], "7": [6, 10, 27, 33, 35, 38, 41, 155, 156, 170, 171, 173, 255, 309, 311, 316, 318, 319, 320], "cmake": 6, "14": [6, 11, 119, 309, 316, 318, 319], "activ": [6, 7, 9, 156, 162, 166, 171, 176, 222, 233, 236, 305, 320], "sim": 6, "bullet": 6, "physic": [6, 7, 90, 307, 309, 315, 316], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 304], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 312], "y": [6, 7, 86, 170, 194, 309, 311, 315], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 71, 75, 87, 93, 132, 234, 315, 321], "command": [6, 7, 10, 311, 315, 316, 321], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 303], "_has_habitat": 6, "available_env": [6, 67, 68, 69, 70, 71, 74, 75, 76, 80, 81, 87, 91, 92, 93, 321], "startswith": [6, 306, 309], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 70, 87, 93, 99, 301, 307, 309, 318], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 72, 234, 309], "env_nam": [6, 67, 69, 74, 80, 84, 90, 309, 311, 321], "llvmlite": 6, "config": [6, 7, 123, 143, 157, 162, 183, 289, 290, 291, 294, 295, 298], "var": [6, 7, 32, 71, 75, 87, 93, 139, 234], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 68, 71, 75, 87, 93, 156, 158, 159, 167, 171, 197, 198, 199, 207, 210, 213, 232, 309, 310, 316, 318, 319, 320], "bind": 6, "deactiv": [6, 7, 202], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 71, 75, 87, 93, 139, 234, 318], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 310], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 314, 316], "joint": [7, 310], "dynam": [7, 232, 311, 316], "contact": [7, 37], "engin": [7, 90, 316], "biomechan": 7, "graphic": 7, "anim": [7, 315], "area": 7, "demand": [7, 321], "fast": [7, 9, 68, 125, 237, 309, 310, 311], "accur": [7, 52, 310, 316, 318], "articul": 7, "recent": [7, 11, 310, 315, 317, 321], "acquir": [7, 311], "deepmind": [7, 8, 9, 69, 70, 311], "whomev": 7, "licenc": 7, "incorpor": [7, 200, 204, 206, 312, 316], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 93, 118, 138, 268, 305, 306, 309, 310, 311, 315, 318, 321], "legaci": 7, "pro": [7, 304], "tip": [7, 304], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 321], "sudo": [7, 304], "enabl": [7, 8, 52, 55, 56, 65, 169, 206, 281, 311, 315, 316, 318], "apt": [7, 315], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 310, 312], "fact": [7, 8, 309, 311, 315, 316, 317, 318, 321], "workflow": [7, 197, 198, 199], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 71, 75, 87, 93, 123, 141, 143, 312, 321], "binari": [7, 24, 27, 33, 101, 165, 185, 202, 203, 208, 209, 224, 226, 247], "setup": [7, 79], "mkdir": 7, "cd": 7, "tag": [7, 268, 273, 301], "earlier": [7, 309, 311, 312, 315, 318], "roboti": 7, "download": [7, 10, 79, 123, 143, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321], "html": [7, 84], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 87, 93], "obtain": [7, 40, 71, 75, 87, 93, 123, 134, 143, 155, 184, 282, 309, 311, 315], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54], "bin": [7, 165, 203, 305], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 161, 207, 211, 309, 311, 318], "nvidia": [7, 79], "older": [7, 11], "hack": [7, 309], "line": [7, 32, 71, 75, 87, 93, 310, 315, 317], "adatp": 7, "script": [7, 146, 294, 297, 301, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "unnot": [7, 124], "until": [7, 21, 136, 138, 311, 312, 315], "complet": [7, 9, 62, 75, 102, 133, 304, 306, 309, 311, 314], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 310, 318], "troubleshoot": 7, "gl": 7, "h": [7, 102, 104, 126, 137, 169, 173, 268, 310, 312, 318], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 72, 83, 88, 89, 91, 92, 94, 95, 100, 102, 134, 136, 137, 155, 157, 162, 170, 173, 183, 194, 204, 206, 214, 221, 224, 226, 236, 237, 238, 241, 247, 249, 250, 251, 252, 255, 276, 307, 309, 310, 311, 312, 315, 316, 318, 320, 321], "fatal": 7, "No": 7, "directori": [7, 45, 55, 273, 307], "devel": 7, "ubuntu": [7, 79], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 316, 318], "disappear": [7, 310, 312, 314], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 81, 91, 92, 119, 121, 156, 163, 170, 171, 176, 180, 190, 215, 294, 309, 310, 312, 316, 318, 320, 321], "glibcxx_3": 7, "29": [7, 311, 312, 316, 319], "compil": [7, 32, 71, 75, 87, 93], "libosmesa": 7, "libgcc": 7, "Then": [7, 311, 314], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 71, 75, 87, 93, 118, 139, 321], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 309, 312, 316], "114": [7, 316, 318], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 316], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 100, 146], "opengl": [7, 315], "global": [7, 32, 71, 75, 87, 88, 89, 93, 184, 193, 207, 211, 247, 307, 309, 315], "cuda_visible_devic": 7, "id": [7, 23, 40, 206, 237, 271, 294], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 316, 318], "correctli": [7, 32, 71, 75, 87, 93], "lgl": 7, "libegl": 7, "x11": [7, 315], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 75, 153, 200, 204, 206, 236, 285, 307, 309, 310, 314, 318], "sketch": [8, 307], "_": [8, 72, 79, 103, 107, 109, 110, 117, 119, 125, 137, 144, 196, 210, 215, 219, 220, 221, 223, 226, 232, 236, 237, 239, 241, 249, 250, 251, 252, 309, 310, 311, 312, 315, 316, 318, 320], "n_training_step": 8, "datapoint": [8, 45, 318], "onlin": [8, 13, 17, 102, 162, 183, 220, 225, 235, 236, 276, 301, 311, 312, 315, 318], "n_data_per_train": 8, "no_grad": [8, 32, 71, 75, 87, 93, 117, 249, 250, 251, 252, 311, 312, 315], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 282, 297, 309, 310, 311, 315, 318], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 127, 282, 307, 309, 310, 311, 312, 315, 317, 318, 320], "loss_fn": [8, 312, 320], "backward": [8, 32, 71, 75, 87, 93, 144, 220, 221, 223, 226, 232, 236, 237, 238, 239, 241, 309, 311, 312, 315, 316], "zero_grad": [8, 32, 71, 75, 87, 93, 307, 309, 311, 312, 315, 316], "backpropag": [8, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 315, 316], "differenti": [8, 45, 117, 249, 250, 251, 252, 312, 315, 316], "denomin": 8, "artifact": 8, "numer": [8, 38, 144, 168, 191, 192, 196, 202, 203, 207, 208, 209, 210, 211, 283, 311, 318, 321], "misconcept": 8, "save": [8, 32, 34, 36, 39, 71, 75, 87, 93, 267, 285, 307, 315], "freed": 8, "appear": [8, 33, 316, 318], "compuat": 8, "twice": 8, "fix": [8, 135, 221, 235, 239, 310, 316, 321], "retain_graph": 8, "discuss": [8, 9, 315], "inplac": [8, 32, 34, 36, 39, 71, 75, 87, 93, 139, 309], "accumul": 8, "onto": [8, 33, 150, 196, 200, 202, 203, 206, 207, 208, 209, 210, 211, 312, 316], "exclud": [8, 52, 102, 111, 153, 184, 315, 318], "forward": [8, 32, 71, 75, 87, 93, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 176, 177, 179, 180, 181, 183, 184, 186, 187, 189, 193, 194, 200, 201, 203, 204, 206, 209, 210, 211, 214, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 306, 316, 320], "submodul": [8, 32, 71, 75, 87, 93, 97, 234], "param": [8, 32, 40, 71, 75, 83, 87, 93, 106, 107, 108, 111, 117, 125, 131, 133, 138, 163, 165, 190, 201, 207, 210, 213, 215, 234, 243, 246, 249, 250, 251, 252, 253, 309, 315, 316, 317, 320], "grad": [8, 32, 71, 75, 87, 93, 309, 311], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 87, 88, 89, 93, 106, 123, 135, 138, 139, 141, 143, 179, 184, 210], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 102, 113, 124, 140, 228, 306, 311, 315, 316], "ask": [8, 309, 311, 312, 315, 317, 321], "much": [8, 13, 14, 35, 41, 58, 87, 93, 233, 236, 311, 315, 316, 318, 321], "render": [8, 281, 309, 310, 311], "upon": [8, 316], "factor": [8, 32, 127, 168, 178, 191, 192, 200, 204, 206, 221, 227, 228, 230, 240, 255, 309, 310, 315, 318, 321], "fit": [8, 11, 119, 306, 307, 309], "bottlneck": 8, "affect": [8, 32, 71, 75, 87, 93, 138, 139, 146, 249, 250, 251, 252], "brax": [8, 67, 68, 125, 321], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 71, 75, 87, 93, 112, 139, 174, 175, 223, 224, 276, 306, 307, 309, 311, 312, 315, 316, 318], "underli": [8, 71, 75, 87, 93, 234, 316], "tedeiou": 8, "priorit": [8, 35, 41, 58, 221, 223, 224, 226, 232, 237, 239, 241, 309, 310], "amount": [8, 206, 310, 318], "isn": [8, 34, 36, 39, 202, 210, 315], "contigu": [8, 71, 75, 87, 93, 150, 311, 315, 316, 318, 320, 321], "costli": [8, 316], "concaten": [8, 21, 30, 31, 102, 103, 119, 138, 171, 213, 309, 310, 315, 316, 318, 321], "constitut": [8, 310, 315, 316], "plain": 8, "profil": 8, "fulli": [8, 32, 71, 75, 87, 93, 310, 316, 318], "frequent": [8, 318], "program": [8, 232, 321], "functorch": [8, 10], "incl": 8, "suit": [8, 70, 311, 321], "mujoco_instal": 8, "valueerror": [8, 317], "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 210, 213, 234, 315, 316, 320], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 84, 156, 171, 176, 234, 311, 316, 320], "lost": 8, "permut": [8, 62, 121, 320, 321], "idea": [9, 237, 307, 312, 315], "introductori": 9, "intro": [9, 311, 312], "dai": [9, 320], "2022": [9, 10, 316, 320], "spin": 9, "deep": [9, 102, 158, 159, 160, 161, 164, 206, 220, 231, 239, 240, 309], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 119, 144, 309, 310, 311, 312], "reddit": 9, "reagent": 9, "orient": [9, 321], "baselines3": 9, "tf": 9, "bandit": [9, 86], "tensorflow": [9, 174, 175], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 71, 75, 87, 93, 117, 212, 213, 236, 305, 311, 312, 315, 316, 317, 321], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 320], "grade": 9, "factori": [9, 43], "throughput": [9, 309], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 71, 75, 87, 93, 105, 109, 150, 162, 165, 181, 185, 196, 200, 202, 203, 206, 207, 208, 209, 210, 211, 213, 214, 215, 224, 226, 241, 247, 305, 310, 311, 312, 315, 316, 320, 321], "mbrl": [9, 83, 305], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 316], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 311, 312, 315], "notebook": [10, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321], "24": [10, 309, 311, 316], "11": [10, 27, 33, 45, 55, 56, 65, 72, 137, 155, 173, 309, 311, 315, 316, 318], "12": [10, 55, 56, 65, 91, 92, 309, 311, 312, 316, 318], "pip": [10, 53, 315, 320, 321], "pip3": [10, 311, 312, 315], "extra": [10, 32, 71, 75, 87, 93, 102, 144, 153, 305, 311, 312, 318], "url": 10, "org": [10, 35, 58, 102, 123, 141, 157, 158, 159, 160, 161, 162, 165, 166, 167, 173, 174, 175, 178, 180, 181, 183, 184, 186, 187, 193, 203, 206, 220, 221, 225, 227, 228, 229, 230, 231, 232, 235, 236, 238, 239, 240, 249, 254, 262, 317], "whl": 10, "u": [10, 53, 316], "There": [10, 169, 305, 307, 311, 312, 315, 316, 318, 321], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 234], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 69, 71, 73, 75, 86, 87, 88, 89, 90, 93, 96, 97, 100, 101, 102, 103, 104, 107, 109, 110, 113, 115, 116, 117, 119, 120, 123, 124, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 143, 144, 147, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 184, 185, 193, 196, 202, 203, 207, 208, 209, 210, 211, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 247, 248, 249, 250, 251, 252, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 294, 295, 301, 310, 311], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 71, 72, 75, 83, 87, 93, 99, 219, 234, 290, 291, 299, 300, 301, 310], "from_vers": 11, "to_vers": 11, "intersect": [11, 133], "vs": [11, 169, 170, 320], "longer": [11, 310, 315, 318], "self": [11, 26, 28, 32, 34, 36, 39, 71, 75, 83, 87, 93, 100, 106, 107, 110, 123, 135, 138, 139, 141, 143, 155, 165, 173, 184, 193, 200, 204, 210, 215, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 307, 309, 310, 316, 317, 320], "x": [11, 23, 26, 32, 38, 40, 117, 137, 156, 165, 167, 169, 170, 171, 173, 176, 194, 202, 208, 217, 219, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 285, 309, 311, 316, 318, 320], "23": [11, 309, 311, 316], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 71, 72, 75, 87, 93, 99, 117, 135, 194, 202, 208, 228, 230, 249, 252, 260, 261, 265, 266, 297, 306, 309, 310, 315, 318, 320, 321], "import_modul": 11, "27": [11, 311, 316], "get_class_that_defined_method": 11, "f": [11, 75, 219, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 309, 310, 311, 312, 315, 316, 318, 321], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 88, 89, 93, 109, 119, 135, 139, 144, 168, 176, 191, 192, 202, 208, 214, 221, 229, 234, 235, 239, 281, 282, 307, 309, 310, 311, 312, 316, 321], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 141, 157, 183], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 71, 72, 75, 87, 88, 89, 93, 96, 117, 135, 139, 144, 156, 157, 158, 159, 160, 161, 162, 167, 170, 171, 183, 207, 211, 272, 273, 281, 290, 291, 294, 299, 300, 301, 309, 310, 311, 321], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 71, 75, 87, 93, 125, 139, 153, 169, 201, 234, 306, 309, 310, 312, 318], "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 106, 123, 132, 138, 139, 140, 142, 143, 155, 156, 164, 169, 171, 172, 173, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 247, 249, 250, 251, 252, 253, 275, 278, 282, 285, 301, 310], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 71, 73, 75, 87, 93, 100, 102, 103, 106, 107, 108, 111, 112, 113, 116, 117, 118, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 142, 144, 153, 154, 155, 169, 172, 173, 200, 201, 203, 204, 206, 209, 210, 211, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 241, 247, 248, 249, 250, 251, 252, 253, 285, 309, 316], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 72, 87, 93, 309, 320], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 71, 75, 83, 87, 88, 89, 93, 102, 103, 104, 109, 113, 114, 118, 119, 121, 123, 124, 126, 132, 133, 136, 139, 140, 141, 143, 146, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 220, 221, 222, 226, 228, 229, 233, 234, 235, 236, 237, 241, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 281, 282, 285, 287, 294, 295, 299, 300, 301, 310, 316], "200": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 94, 95, 127, 158, 159, 166, 186, 187, 309, 312, 316], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 102, 127, 285, 288, 297, 307, 309, 310, 311, 312, 315, 318, 320], "device_typ": [13, 16, 27, 30, 33, 156, 157, 158, 159, 160, 161, 167, 171, 177, 178, 183], "create_env_kwarg": [13, 14, 16, 17, 72, 84, 87, 93, 309], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 127, 310, 318], "explorationtyp": [13, 14, 16, 20, 21, 234, 281, 309, 310, 311, 312, 320], "interactiontyp": [13, 16, 18, 19, 20, 21, 148, 152, 207, 211, 281], "exploration_mod": [13, 16, 18, 19, 20, 303, 305], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 71, 75, 87, 93, 106, 107, 110, 117, 119, 123, 127, 128, 129, 134, 135, 137, 138, 139, 141, 143, 144, 163, 166, 168, 171, 174, 175, 177, 178, 186, 187, 190, 192, 200, 210, 214, 217, 218, 219, 220, 221, 226, 229, 230, 231, 232, 235, 237, 239, 240, 241, 248, 254, 255, 256, 257, 258, 259, 260, 261, 262, 283, 309, 310, 318, 321], "num_thread": [13, 14, 87, 93], "num_sub_thread": [13, 14, 87, 93], "datacollector": [13, 14, 16, 17, 207, 211, 236, 311], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 196, 200, 202, 203, 206, 207, 208, 209, 210, 211, 213, 305, 320], "stepcount": [13, 71, 75, 87, 93, 138, 309, 310, 311, 312, 315, 320], "env_mak": [13, 14, 16, 21, 297, 321], "50": [13, 14, 16, 21, 37, 40, 309, 311, 312, 316, 318], "2000": [13, 14, 16, 45, 78, 311, 318], "enumer": [13, 14, 16, 21, 32, 38, 42, 71, 75, 87, 93, 242, 306, 309, 310, 311, 312, 318, 320], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 121, 127, 133, 165, 185, 202, 203, 206, 208, 209, 305, 311, 312, 316, 318, 320, 321], "step_count": [13, 14, 16, 71, 75, 87, 93, 133, 311, 312, 320], "shutdown": [13, 14, 16, 17, 21, 309, 320], "del": [13, 14, 16, 309, 311, 314, 320, 321], "randompolici": [13, 14, 16, 18, 19, 20, 22, 102, 127, 303, 318], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 222, 233, 236, 276, 278, 281, 285, 288, 289, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321], "lifespan": [13, 14, 16, 18, 19, 20, 310], "divis": [13, 14, 16, 18, 19, 20, 315], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 109, 312, 318], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 71, 75, 87, 93, 135, 139, 207, 211, 281, 299, 300, 301, 307, 310, 311, 316, 321], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 71, 75, 87, 93, 311], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 310, 311, 315], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 138, 140, 176, 306, 307, 309, 310, 315, 318, 320], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 71, 75, 87, 93, 109, 111, 131, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 174, 175, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 249, 318, 321], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 305, 315, 316], "post": [13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 87, 93], "multistep": [13, 14, 16, 18, 19, 20, 21, 303, 310], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 119, 129, 168, 177, 186, 191, 192, 247, 305, 316, 318], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 236], "whole": [13, 14, 16, 26, 28, 32, 45, 71, 75, 87, 93, 139, 276, 309, 311], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 287, 297, 307, 309, 320], "async": [13, 14, 18, 19, 20, 21, 309, 320], "ratio": [13, 14, 40, 309, 311], "finish": [13, 14, 21, 75, 127, 321], "rest": [13, 14, 305, 311, 312, 316, 320], "earli": [13, 14, 75, 133, 320], "thread": [13, 14, 84, 87, 93], "equal": [13, 14, 84, 87, 93, 118, 119, 156, 164, 169, 171, 176, 240, 244, 276, 299, 300, 309, 311, 317], "plu": [13, 14, 40, 87, 93, 316], "safeti": [13, 14, 83, 87, 93], "harm": [13, 14, 87, 93], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 139, 144, 307, 309], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 139, 144, 301, 307, 309, 310, 321], "ordereddict": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 139, 144, 310], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 144, 169, 219, 220, 222, 233, 236, 285, 305, 315], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 71, 75, 87, 93, 139], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 71, 75, 87, 93, 114, 119, 133, 156, 171, 176, 232, 239, 318], "increment": [13, 14, 16, 17, 71, 75, 87, 93, 233], "env_fn": [13, 14, 16, 17, 72, 299, 300], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 71, 75, 87, 93, 105, 119, 127, 133, 203, 277, 297, 310, 311, 312, 314, 315, 316, 318, 320, 321], "300": [13, 14, 16, 17, 160, 161, 316], "out_se": [13, 14, 16, 17, 321], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 106, 123, 132, 135, 138, 139, 140, 142, 143, 155, 156, 158, 159, 160, 161, 164, 167, 168, 169, 171, 172, 173, 176, 182, 190, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 247, 248, 249, 250, 251, 252, 253, 268, 272, 273, 275, 278, 285, 290, 291, 294, 298, 299, 300, 306, 311, 315], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 71, 75, 87, 93, 100, 101, 102, 103, 104, 107, 109, 110, 113, 115, 116, 117, 119, 120, 124, 126, 127, 128, 129, 130, 134, 136, 137, 138, 144, 153, 158, 164, 165, 169, 170, 171, 176, 179, 183, 184, 185, 202, 203, 208, 209, 214, 220, 221, 223, 226, 228, 232, 234, 236, 237, 238, 239, 241, 249, 250, 251, 252, 268, 279, 281, 283, 292, 293, 309], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 68, 81, 83, 100, 107, 110, 155, 173, 220, 221, 223, 224, 226, 232, 236, 237, 239, 241, 316, 320, 321], "describ": [15, 44, 103, 138, 190, 191, 271, 306, 309, 311, 315, 316, 321], "tensor_spec": [15, 100, 154, 226, 236, 238], "boundedtensorspec": [15, 22, 26, 71, 75, 87, 93, 204, 206, 207, 214, 220, 221, 223, 232, 236, 237, 239, 241, 303, 311, 315, 316, 320, 321], "cube": 15, "envcreat": [16, 22, 297, 298, 301, 303, 309, 310, 320, 321], "interruptor": 16, "_interruptor": 16, "outsid": [16, 315], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 71, 75, 87, 93, 311, 315, 320, 321], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 75, 84, 117, 220, 222, 233, 236, 309, 314, 316, 320], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 122, 309, 320], "regular": [17, 34, 36, 39, 185, 203, 208, 209, 210, 211, 227, 287, 303, 307, 309, 310, 318, 321], "mere": 17, "greater": [17, 169, 309, 310, 320], "sent": [17, 55, 56, 65, 144], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 71, 75, 87, 93, 124, 144, 155, 156, 158, 160, 162, 164, 171, 173, 176, 196, 210, 215, 276, 282, 309, 311, 312, 316, 317, 318, 321], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 285], "string": [18, 19, 20, 32, 37, 45, 54, 71, 75, 87, 93, 99, 123, 133, 143, 169, 202, 207, 208, 219, 267, 284, 294, 306, 309, 311, 312], "respect": [18, 19, 20, 32, 71, 75, 87, 93, 101, 106, 107, 110, 123, 124, 135, 138, 139, 141, 143, 187, 210, 215, 280, 311, 312, 315], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 304, 310, 311, 314, 318], "serv": [18, 20, 21, 77, 318, 321], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 71, 75, 87, 93, 113], "seen": [18, 20, 21, 306, 309, 310, 312, 315, 318], "turn": [18, 20, 21, 115, 140, 202, 281, 306, 309, 310, 312, 316, 317], "mp": [18, 19, 20, 72, 144], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 309], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 236, 299, 300], "homonym": [18, 19, 20, 316], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 309], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 207, 211], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 299, 300, 309, 310], "coordin": 21, "hood": [21, 316], "init": [21, 32, 71, 75, 87, 93, 309, 310, 311], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 318], "similarli": [21, 32, 62, 71, 75, 87, 93, 212, 213, 232, 321], "num_cpu": 21, "num_gpu": 21, "1024": [21, 162, 318], "equat": [21, 75, 206, 219, 222, 240, 311, 316], "exce": [21, 311, 318], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 285, 309, 311, 312], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 91, 92, 94, 95, 156, 157, 158, 159, 162, 167, 171, 176, 180, 181, 183, 184, 193, 247, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "wherea": [22, 109, 234, 307], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 157, 162, 183, 201], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 72, 310], "__main__": [22, 72], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 109, 136, 190, 191, 192, 201, 206, 221, 222, 226, 235, 237, 239, 309, 311, 312, 315], "durat": [23, 315], "meta": [23, 44, 52, 73, 307, 311, 315, 318], "aren": [23, 312], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 144, 305, 309, 315], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 109, 181, 182, 186, 219, 305, 310, 311, 312, 316, 318], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 320], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 206, 214], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 214, 316], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 71, 75, 87, 93, 106, 107, 110, 117, 123, 135, 138, 139, 141, 143, 144, 210, 294, 321], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 105, 321], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 156, 171, 188, 189], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 71, 75, 87, 93, 301, 305], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 321], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 109, 169, 196, 200, 202, 203, 206, 207, 208, 209, 210, 211, 305, 320, 321], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 196, 202, 203, 207, 208, 209, 210, 211, 311, 315, 316, 318], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 135, 150, 316, 318], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 102, 132, 156, 188, 189, 309, 316, 318], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 102, 103, 121, 135, 140, 144, 170, 189, 194, 301, 310, 311, 316, 318], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 138, 139, 179, 190, 301], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 88, 89, 100, 109, 165, 182, 185, 202, 203, 208, 209, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 312], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 165, 185, 202, 208, 224, 226, 247, 303, 305], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 71, 75, 87, 93, 106, 107, 110, 123, 135, 138, 139, 141, 143, 144, 210, 219, 234, 309, 310, 311, 316, 318], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 135, 169, 312, 316, 317], "upper": [25, 118], "unnam": 26, "effect": [26, 32, 71, 75, 87, 93, 102, 139, 285, 309, 318, 321], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 71, 75, 87, 93, 156, 171, 312, 316, 319, 321], "composite_spec": 26, "observation_vector": [26, 103, 294, 309], "randn": [26, 34, 36, 39, 55, 56, 65, 119, 150, 157, 162, 165, 170, 174, 175, 179, 182, 183, 185, 196, 197, 198, 199, 201, 202, 207, 208, 210, 213, 214, 215, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 249, 250, 251, 252, 284, 305, 320, 321], "td_project": 26, "is_empti": [26, 28, 316], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 71, 75, 87, 93, 248, 315], "children": [26, 28, 32, 71, 75, 87, 93], "keysview": [26, 28], "reflect": [26, 28, 88, 89, 153, 234, 288, 310, 311, 312, 315], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 71, 75, 87, 93, 234], "succeed": [26, 28, 311, 316], "selected_kei": [26, 28, 131, 309], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 164, 165, 185, 202, 203, 208, 209, 226, 234, 247, 305, 312], "arang": [27, 33, 165, 175, 202, 276, 305, 318], "argmax": [27, 165, 185, 203, 209], "chosen_action_valu": [27, 33, 184, 185, 193, 208, 209, 247, 305, 312], "outcom": [27, 33, 163, 190], "lazi": [28, 29, 49, 50, 71, 75, 87, 93, 123, 141, 177, 212, 213, 309, 310, 314, 318, 321], "represent": [28, 29, 32, 71, 75, 87, 93, 123, 141, 143, 309, 316, 317, 321], "drawn": [28, 29, 135, 204, 207, 211, 311, 315], "lazystackedtensordict": [28, 71, 75, 83, 87, 93, 314, 320], "heterogen": [28, 29, 82, 88, 89, 146, 176, 309, 310], "semant": [28, 29, 305], "thrown": [29, 32, 71, 75, 87, 93, 318], "nvec": [30, 31], "cardin": [30, 31, 165, 185, 202, 203, 209, 311], "ax": [30, 177, 178], "m": [30, 32, 71, 75, 87, 93, 109, 211, 305, 310, 316], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 224, 226, 247, 303], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 303], "gamma": [32, 127, 173, 220, 221, 223, 224, 226, 227, 228, 230, 232, 234, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 297, 306, 309, 310, 311, 315, 320], "sutton": [32, 306, 315], "1988": 32, "predict": [32, 40, 166, 172, 173, 201, 216, 227, 229, 230, 248, 305, 309, 310], "tempor": [32, 169, 173, 250, 251, 256, 257], "44": [32, 312, 316], "discount": [32, 72, 127, 221, 227, 228, 230, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 306, 310, 311, 315], "ahead": [32, 321], "add_modul": [32, 71, 75, 87, 93], "child": [32, 71, 75, 87, 93], "fn": [32, 37, 71, 75, 87, 93, 179, 299, 300], "init_weight": [32, 71, 75, 87, 93], "fill_": [32, 71, 75, 87, 93, 310, 312, 321], "net": [32, 71, 75, 87, 93, 170, 176, 220, 221, 226, 232, 236, 237, 238, 239, 294, 297, 310, 316, 317, 320], "in_featur": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 158, 159, 160, 161, 170, 171, 176, 177, 178, 197, 210, 224, 320], "out_featur": [32, 71, 75, 83, 87, 93, 106, 123, 135, 138, 139, 141, 143, 155, 156, 158, 159, 160, 161, 166, 167, 169, 170, 171, 173, 176, 177, 178, 197, 202, 210, 224, 305, 309, 312, 320], "bia": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 166, 169, 171, 176, 177, 178, 179, 204, 206, 210, 217, 218, 219, 234, 306, 309, 310, 311, 312, 315, 320], "requires_grad": [32, 71, 75, 87, 93, 117], "bfloat16": [32, 71, 75, 87, 93], "datatyp": [32, 71, 75, 87, 93, 318], "member": [32, 71, 75, 87, 93, 234], "xdoctest": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210, 234], "skip": [32, 71, 75, 87, 93, 114, 139, 146, 207, 211, 234, 249, 250, 251, 252, 267, 268, 278, 281, 309, 310, 311, 316], "buf": [32, 71, 75, 87, 93], "20l": [32, 71, 75, 87, 93, 234], "1l": [32, 71, 75, 87, 93, 234], "5l": [32, 71, 75, 87, 93, 234], "__call__": [32, 37, 71, 75, 87, 93, 211, 307], "associ": [32, 71, 75, 87, 93, 186, 301, 309, 318], "doubl": [32, 46, 71, 75, 87, 93, 106, 107, 108, 110, 123, 135, 138, 139, 141, 143, 210, 224, 227, 231, 237, 240, 247, 309, 310, 311, 312, 321], "eval": [32, 71, 75, 87, 93, 139, 144, 309, 310, 311], "evalu": [32, 71, 75, 87, 93, 139, 163, 174, 175, 182, 192, 237, 290, 291, 310, 311], "dropout": [32, 71, 75, 87, 93, 139, 169, 171, 312], "batchnorm": [32, 71, 75, 87, 93, 139], "disabl": [32, 71, 75, 87, 93, 139, 168, 192, 309], "comparison": [32, 54, 71, 75, 87, 93, 139, 234, 309, 310], "similar": [32, 71, 75, 87, 88, 89, 93, 106, 123, 135, 138, 139, 141, 142, 143, 144, 197, 199, 207, 210, 211, 306, 309, 310, 311, 312, 316, 321], "confus": [32, 71, 75, 87, 93, 139], "extra_repr": [32, 71, 75, 87, 93], "shift": [32, 217, 249, 250, 251, 252, 311], "nontermin": 32, "original_reward": 32, "newli": [32, 71, 75, 87, 93], "OR": 32, "reshap": [32, 169, 171, 311, 315], "get_buff": [32, 71, 75, 87, 93], "throw": [32, 71, 75, 87, 93, 321], "docstr": [32, 71, 75, 87, 93], "get_submodul": [32, 71, 75, 87, 93], "explan": [32, 71, 75, 87, 93], "qualifi": [32, 71, 75, 87, 93], "referenc": [32, 71, 75, 87, 93], "attributeerror": [32, 71, 75, 87, 93], "invalid": [32, 71, 75, 87, 93, 96, 174, 175], "resolv": [32, 71, 75, 87, 93], "someth": [32, 71, 75, 82, 87, 93, 304, 310, 311, 316, 321], "get_extra_st": [32, 71, 75, 87, 93, 144], "set_extra_st": [32, 71, 75, 87, 93, 144], "picklabl": [32, 71, 75, 87, 93, 144], "guarante": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 144, 320], "pickl": [32, 71, 75, 87, 93, 144], "get_paramet": [32, 71, 75, 87, 93], "sai": [32, 71, 75, 87, 93, 317, 321], "net_b": [32, 71, 75, 87, 93], "net_c": [32, 71, 75, 87, 93], "conv": [32, 71, 75, 87, 93, 156, 310], "conv2d": [32, 71, 75, 87, 93, 156, 320], "kernel_s": [32, 71, 75, 87, 93, 156, 158, 159, 180, 310, 320], "stride": [32, 71, 75, 87, 93, 156, 158, 159, 167, 310, 320], "diagram": [32, 71, 75, 87, 93], "show": [32, 71, 75, 87, 93, 176, 305, 309, 311, 312, 315, 316, 318, 320], "degre": [32, 71, 75, 87, 93], "named_modul": [32, 71, 75, 87, 93], "o": [32, 71, 75, 87, 93], "transit": [32, 52, 71, 75, 87, 93, 216, 309, 312, 316, 318], "half": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210, 309], "ipu": [32, 71, 75, 87, 93], "strict": [32, 34, 36, 39, 71, 75, 87, 93, 139], "descend": [32, 71, 75, 87, 93, 139], "persist": [32, 71, 75, 87, 93, 139, 153], "enforc": [32, 62, 71, 75, 87, 93, 139, 212, 316], "preserv": [32, 71, 75, 87, 93, 139], "missing_kei": [32, 71, 75, 87, 93, 139], "unexpected_kei": [32, 71, 75, 87, 93, 139], "namedtupl": [32, 71, 75, 87, 93, 139], "duplic": [32, 62, 71, 75, 87, 93, 224, 227, 234, 247], "l": [32, 71, 75, 87, 93, 248, 311, 316], "idx": [32, 71, 75, 87, 93], "named_buff": [32, 71, 75, 87, 93], "remove_dupl": [32, 71, 75, 87, 93, 234], "prepend": [32, 71, 75, 87, 93, 234], "running_var": [32, 71, 75, 87, 93], "named_children": [32, 71, 75, 87, 93], "conv4": [32, 71, 75, 87, 93], "conv5": [32, 71, 75, 87, 93], "memo": [32, 71, 75, 87, 93], "named_paramet": [32, 71, 75, 87, 93, 117, 234], "register_backward_hook": [32, 71, 75, 87, 93], "removablehandl": [32, 71, 75, 87, 93], "deprec": [32, 71, 75, 87, 93, 139, 147, 151, 164, 220, 221, 222, 224, 226, 227, 232, 233, 236, 237, 238, 239, 247, 249, 250, 251, 252, 257, 321], "favor": [32, 71, 75, 87, 93, 311], "register_full_backward_hook": [32, 71, 75, 87, 93], "register_buff": [32, 71, 75, 87, 93], "running_mean": [32, 71, 75, 87, 93], "alongsid": [32, 71, 75, 87, 93, 315], "num_featur": [32, 71, 75, 87, 93], "register_forward_hook": [32, 71, 75, 87, 93, 165, 185], "with_kwarg": [32, 71, 75, 87, 93], "always_cal": [32, 71, 75, 87, 93], "posit": [32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 113, 114, 132, 133, 136, 139, 140, 179, 306, 311, 315, 316, 318], "signatur": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210, 234, 306, 309, 316], "register_module_forward_hook": [32, 71, 75, 87, 93], "regardless": [32, 71, 75, 87, 93, 222, 233, 236], "register_forward_pre_hook": [32, 71, 75, 87, 93], "invok": [32, 71, 75, 87, 93], "And": [32, 71, 75, 87, 93], "forward_pr": [32, 71, 75, 87, 93], "register_module_forward_pre_hook": [32, 71, 75, 87, 93], "grad_input": [32, 71, 75, 87, 93], "grad_output": [32, 71, 75, 87, 93], "subsequ": [32, 71, 75, 87, 93, 312], "technic": [32, 71, 75, 87, 93, 310, 312], "caller": [32, 71, 75, 87, 93], "register_module_full_backward_hook": [32, 71, 75, 87, 93], "register_full_backward_pre_hook": [32, 71, 75, 87, 93], "backward_pr": [32, 71, 75, 87, 93], "register_module_full_backward_pre_hook": [32, 71, 75, 87, 93], "register_load_state_dict_post_hook": [32, 71, 75, 87, 93], "incompatible_kei": [32, 71, 75, 87, 93], "clear": [32, 71, 75, 79, 87, 93, 277], "register_modul": [32, 71, 75, 87, 93, 307], "alia": [32, 71, 75, 87, 93], "register_paramet": [32, 71, 75, 87, 93], "register_state_dict_pre_hook": [32, 71, 75, 87, 93], "keep_var": [32, 34, 36, 39, 71, 75, 87, 93, 139], "made": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 206, 224, 234, 247, 309, 310, 312, 315, 317], "requires_grad_": [32, 71, 75, 87, 93], "autograd": [32, 71, 75, 87, 93, 139], "freez": [32, 71, 75, 87, 93], "finetun": [32, 71, 75, 87, 93], "gan": [32, 71, 75, 87, 93], "share_memori": [32, 71, 72, 75, 87, 93, 309], "share_memory_": [32, 71, 75, 87, 93, 320], "destin": [32, 34, 36, 39, 71, 75, 87, 93, 107, 108, 110, 139, 141, 144, 153, 268], "averag": [32, 71, 75, 87, 93, 139, 144, 206, 228, 229, 283, 309, 311], "shallow": [32, 71, 75, 87, 93, 139, 312], "pleas": [32, 71, 75, 87, 88, 89, 93, 102, 136, 139, 304], "detach": [32, 71, 75, 87, 93, 139, 234, 249, 250, 251, 252, 309], "non_block": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "memory_format": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "channels_last": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "complex": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210, 309, 310], "integr": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 161, 169, 173, 210, 305, 315, 316, 317], "unchang": [32, 71, 75, 87, 93, 106, 109, 123, 135, 138, 139, 141, 143, 204, 210, 282, 309, 318], "tri": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "pin": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "4d": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "ignore_w": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "1913": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "3420": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "5113": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "2325": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "torch_doctest_cuda1": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "gpu1": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "1914": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "5112": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210, 316], "2324": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "float16": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "cdoubl": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "3741": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "j": [32, 35, 58, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210, 307], "2382": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "5593": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210, 316], "4443": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "complex128": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "6122": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "1150": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 210], "to_empti": [32, 71, 75, 87, 93], "dst_type": [32, 71, 75, 87, 93], "xpu": [32, 71, 75, 87, 93], "set_to_non": [32, 71, 75, 87, 93], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 318], "discretebox": [33, 71, 75, 87, 93, 311, 315, 321], "chosen_data": [34, 54], "rewarddata": [34, 54, 303], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 86], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 316], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 71, 75, 87, 93, 107, 110, 123, 139, 143, 277], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 301], "determin": [34, 35, 36, 39, 41, 52, 58, 71, 75, 87, 93, 123, 143, 206, 310, 315], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 163, 190], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "flatten": [34, 36, 39, 113, 282, 312, 315], "to_tensordict": [34, 36, 39, 312], "memmap": [34, 36, 39, 55, 87, 93, 144, 282, 318], "unbind": [34, 36, 39, 169], "alpha": [35, 41, 58, 156, 221, 226, 235, 237, 239, 309, 318, 320], "ep": [35, 41, 58, 144, 206, 222, 240, 283, 309, 310, 312], "1e": [35, 41, 58, 144, 163, 166, 179, 190, 309, 310, 311, 315], "08": [35, 41, 58, 316], "collate_fn": [35, 38, 41, 42, 52, 53, 318, 320], "prefetch": [35, 38, 41, 42, 52, 53, 54, 309, 310, 312, 318], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 102, 123, 141, 157, 158, 159, 160, 161, 162, 165, 166, 167, 173, 178, 180, 181, 183, 184, 186, 187, 193, 203, 206, 220, 221, 225, 227, 228, 229, 230, 231, 232, 235, 236, 239, 240, 249, 254, 262, 317], "ab": [35, 58, 123, 141, 144, 157, 162, 166, 167, 173, 178, 180, 181, 183, 184, 186, 187, 193, 220, 221, 225, 228, 229, 230, 231, 232, 235, 236, 239, 317], "1511": [35, 58, 167], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 190, 207, 211, 303, 306], "null": [35, 41, 58, 101], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 318], "merg": [35, 38, 41, 42, 52, 53, 316], "mini": [35, 38, 41, 42, 52, 53, 315], "decid": [35, 38, 41, 42, 320], "rb": [35, 38, 41, 42, 52, 53, 102, 127, 310, 312, 315, 317, 318, 320], "meth": [35, 38, 41, 42, 234], "incompat": [35, 38, 41, 42, 318], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 318], "tensordictprioritizedreplaybuff": [35, 303, 320], "simplifi": [35, 316, 318], "manual_se": [35, 38, 41, 42, 100, 109, 119, 127, 136, 174, 175, 182, 196, 203, 204, 206, 214, 220, 221, 223, 232, 239, 315, 316, 320, 321], "_weight": [35, 41, 318, 320], "arrai": [35, 40, 309, 318], "update_prior": [35, 58, 282, 307, 310, 318, 320], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 140], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 134, 309, 318], "nonetyp": [36, 39, 310], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217], "text": [37, 40, 43, 206, 311], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 157, 162, 183], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 318], "inde": [37, 109, 311, 316], "writer": [38, 42, 52, 53, 60, 64, 303, 311], "randomsampl": [38, 42, 52, 53, 303, 309], "roundrobinwrit": [38, 42, 52, 53, 303], "Not": 38, "ref_model": 40, "reward_model": [40, 216], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 117], "kl": [40, 117, 229, 233], "penalti": [40, 233], "strai": 40, "far": [40, 168, 191, 192, 316, 321], "calcul": [40, 127], "gpt2rewardmodel": 40, "get_dataload": [40, 303], "promptdata": [40, 303], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 316, 318], "reward_kl": [40, 117], "reward_raw": 40, "sample_log_prob": [40, 197, 198, 199, 207, 211, 213, 236, 294, 311, 315, 320], "create_rollout_td": 40, "log_prob": [40, 163, 174, 175, 182, 192, 211], "log_ratio": 40, "kl_coef": 40, "replic": 40, "rindex": 40, "multipli": [40, 221, 222, 226, 233, 235, 236, 237, 239, 283, 309], "term": [40, 117, 177, 178, 219, 220, 226, 287, 310, 311, 315], "subtract": [40, 134], "ve": [40, 309, 312], "eo": 40, "limit": [40, 83, 102, 117, 309, 310, 312, 315, 316], "generation_config": 40, "generationconfig": 40, "ti": [40, 258, 259, 260, 261, 263, 264, 265, 266, 310], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 221, 224, 226, 227, 232, 234, 237, 239, 241, 247, 318, 320], "td_error": [41, 42, 221, 223, 224, 226, 227, 232, 234, 237, 239, 241, 247, 309, 318, 320], "reduct": [41, 58], "prioritizedreplaybuff": [41, 303, 320], "update_tensordict_prior": [41, 309, 318, 320], "prioritizedsampl": [41, 42, 224, 227, 247, 303, 309, 318], "min": [41, 58, 190, 191, 192, 201, 206, 221, 222, 226, 235, 237, 239, 310, 311, 315], "median": [41, 58, 207, 211], "len": [41, 55, 56, 65, 121, 156, 171, 176, 309, 316, 317, 318, 320], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 81, 150], "huggingfac": [43, 205], "co": [43, 316], "doc": [43, 310, 315, 317], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 303], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 84, 87, 93, 309, 310], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 75, 141, 153, 267, 318, 321], "condit": [45, 134, 202, 203, 208, 209, 219, 309, 316, 318], "elementwis": 45, "os": [45, 310], "cpu_count": 45, "vocabulari": 45, "loader": [45, 311], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 100, 102, 103, 104, 105, 107, 109, 110, 111, 113, 116, 119, 121, 124, 125, 127, 130, 131, 136, 141, 144, 153, 154, 200, 201, 204, 206, 211, 224, 247, 268], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 310], "batch_dimens": 45, "filder": 45, "tempfil": [45, 297, 309, 310], "randint": [45, 137, 318], "20": [45, 71, 75, 79, 87, 93, 201, 276, 311, 312, 315, 316, 319, 320, 321], "temporarydirectori": [45, 309, 310], "tmpdir": [45, 309, 310], "data_memmap": 45, "exclus": [48, 49, 113, 169, 174, 175, 202, 203, 208, 209, 240, 241, 249, 250, 251, 252, 253, 301, 305], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "env_kwarg": [52, 299, 300, 309], "metadata": [52, 311, 315, 321], "reconstruct": [52, 229, 309, 321], "recov": [52, 200, 206, 212, 232, 314], "regard": [52, 165, 203, 220, 227, 236, 309, 311, 316], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 84, 194, 299, 300, 306, 311, 312, 318, 320], "left": [52, 106, 107, 108, 111, 117, 123, 125, 131, 133, 136, 138, 141, 143, 204, 310, 311], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 75, 127, 130, 134, 155, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 310, 315], "absent": [52, 71, 75, 87, 93], "traj_split": 52, "observationnorm": [52, 144, 301, 309, 310, 311, 312, 320], "maze2d": 52, "umaz": 52, "loc": [52, 117, 119, 129, 168, 179, 191, 192, 197, 198, 199, 207, 211, 213, 220, 221, 232, 236, 237, 238, 239, 289, 294, 301, 305, 309, 310, 311, 312, 315, 320], "128": [52, 159, 162, 310, 312, 316, 317, 318], "public": [53, 123, 143], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 86], "adult_onehot": [53, 86], "mushroom_num": [53, 86], "mushroom_onehot": [53, 86], "covertyp": [53, 86], "shuttl": [53, 86], "magic": [53, 86], "infinit": [54, 318], "three": [54, 305, 307, 311, 315, 316, 318, 321], "block": [54, 305, 312], "pairwisedataset": [54, 303], "256": [54, 162, 310, 311, 315, 316], "scratch_dir": [55, 309, 318], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 201, 318, 321], "bar": [55, 56, 65, 201, 278, 279, 281, 285, 307, 310], "attach": [55, 56, 57, 63, 65, 310], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 174, 175, 309], "auto": [56, 65, 206, 221, 226, 235, 237, 239, 241, 306, 315], "zero_": [56, 65, 150], "max_capac": [58, 309, 318], "uniformli": [59, 234, 321], "roundrobin": [60, 64], "piec": [60, 64, 66, 309, 310, 311, 315, 316, 318], "consum": [62, 310, 311, 315, 318], "incomplet": 62, "unlik": [62, 227, 236, 310, 320], "fresh": 62, "caution": [62, 146, 321], "shuffl": [62, 315], "haven": [62, 317], "remain": [62, 108, 109, 117, 134, 178], "draw": [62, 204], "__len__": 63, "googl": [67, 68, 311, 312, 315], "ant": [67, 68, 78, 317], "get_environ": 68, "87": [68, 316], "acrobot": [68, 321], "fetch": [68, 117, 317, 318], "task_nam": 69, "cheetah": [69, 70, 309], "frame_skip": [69, 70, 74, 75, 80, 114, 278, 281, 288, 307, 309, 310, 311, 320], "dm_control": [70, 309, 314, 321], "continuousbox": [71, 75, 87, 93, 150, 311, 315, 316, 320, 321], "unboundedcontinuoustensorspec": [71, 75, 83, 87, 93, 100, 107, 110, 135, 150, 155, 173, 196, 210, 213, 215, 238, 303, 311, 312, 315, 316, 321], "another_act": [71, 75, 87, 93], "mutabl": [71, 75, 87, 93], "batch_lock": [71, 73, 75, 87, 93, 135, 139, 316], "immut": [71, 75, 87, 93, 125, 139], "done_keys_group": [71, 75, 87, 93], "outer": [71, 75, 87, 93, 307, 309, 310, 321], "inner": [71, 75, 87, 93, 109, 307, 310, 311, 315, 321], "another_don": [71, 75, 87, 93], "fake_tensordict": [71, 75, 87, 93, 310], "fake": [71, 75, 87, 93, 309, 310], "overridden": [71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 312], "afterward": [71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217, 321], "silent": [71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 179, 180, 181, 183, 186, 187, 189, 194, 200, 201, 203, 204, 206, 209, 214, 217], "braxenv": [71, 75, 87, 93, 125, 303], "envnam": [71, 75, 87, 93], "mimic": [71, 75, 87, 93], "renametransform": [71, 75, 87, 93], "pipeline_st": [71, 75, 87, 93], "15": [71, 75, 87, 93, 201, 206, 228, 309, 311, 316, 318, 320], "attibut": [71, 75, 87, 93], "speak": [71, 75, 87, 93, 309], "rand_act": [71, 75, 82, 87, 88, 89, 93], "_step": [71, 75, 87, 93, 100, 107, 110, 113, 125, 134], "privat": [71, 75, 87, 93, 316, 321], "reset_kei": [71, 75, 87, 93, 130], "partial": [71, 75, 87, 93, 285, 312], "multitask": [71, 75, 87, 93], "multiag": [71, 75, 82, 87, 88, 89, 93, 154, 176, 184, 193, 247], "another_reward": [71, 75, 87, 93], "callback": [71, 75, 87, 93, 315], "auto_reset": [71, 75, 87, 93, 316], "auto_cast_to_devic": [71, 75, 87, 93, 315], "break_when_any_don": [71, 75, 87, 93, 315], "return_contigu": [71, 75, 87, 93, 146, 314], "soon": [71, 75, 87, 88, 89, 93], "ndim": [71, 75, 87, 93], "concomitt": [71, 75, 87, 93], "workspac": [71, 75, 87, 93], "prevail": [71, 75, 87, 93, 130, 154], "creator": [72, 290, 291, 299, 300, 301], "substitut": [72, 144], "vecnorm": [72, 301], "env_creat": [72, 309], "test_env1": 72, "_td": 72, "observation_count": [72, 321], "test_env2": 72, "sleep": [72, 321], "ps": 72, "p1": 72, "p2": 72, "join": [72, 303, 310, 311], "9934": 72, "env_str": 73, "info_dict_read": 75, "set_info_dict_read": 75, "put": [75, 144, 301, 305, 310, 311, 312, 316], "read_act": 75, "read_don": 75, "reader": [75, 310], "interrupt": [75, 255], "nonsens": 75, "fallback": 75, "broken": [75, 146], "read_ob": 75, "dictat": [75, 207, 211, 236, 309, 316], "read_reward": 75, "baseinfodictread": 75, "info_dict": 75, "hoc": 75, "dict_read": 75, "default_info_dict_read": 75, "my_info_kei": 75, "some_env": 75, "placehold": [77, 139], "secur": 77, "behav": [77, 83, 182, 232, 317], "isaacgym": [78, 79], "isaacgymwrapp": [78, 303], "isaacgymenv": [79, 303], "webpag": 79, "isaac": 79, "essenc": 79, "04": [79, 309, 316], "snake": [80, 81], "6x6": [80, 81], "td1": [81, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 309], "12x12": 81, "tsp50": 81, "tsp100": 81, "qualnam": 82, "marl": [82, 96, 102, 136, 315], "leverag": [82, 88, 89, 309, 315, 321], "neural": [82, 88, 89, 156, 188, 210, 305, 310, 311, 312, 315, 316, 321], "group_map": [82, 88, 89, 96], "constructiuon": [82, 88, 89], "premad": [82, 88, 89, 247], "all_in_one_group": [82, 96], "agent_0": [82, 88, 89, 96], "agent_1": [82, 88, 89, 96], "agent_2": [82, 88, 89, 96], "agent_3": 82, "int8": [82, 88, 89], "one_group_per_ag": [82, 88, 89], "environn": 83, "constraint": [83, 311, 315], "mymbenv": [83, 155, 173], "world_model": [83, 155, 173, 229], "super": [83, 100, 107, 110, 155, 165, 173, 215, 221, 223, 226, 232, 237, 239, 241, 309, 316, 320], "hidden_observ": [83, 155, 173], "mlp": [83, 155, 156, 158, 159, 160, 161, 169, 170, 173, 176, 197, 202, 224, 294, 305, 310, 314, 317, 320], "worldmodelwrapp": [83, 155, 173], "activation_class": [83, 155, 156, 158, 159, 160, 161, 166, 167, 171, 173, 176, 310, 315, 320], "relu": [83, 155, 162, 173, 179, 219], "activate_last_lay": [83, 155, 161, 171, 173], "depth": [83, 155, 156, 158, 159, 160, 161, 166, 167, 171, 173, 176, 180, 181, 202, 305, 310, 314, 315], "run_type_check": 83, "readthedoc": 84, "en": 84, "python_interfac": 84, "task_id": 84, "106": [86, 316], "my_env_fun": [87, 93], "custom_attribute_list": [87, 93], "custom_attribut": [87, 93], "custom_method_list": [87, 93], "custom_method": [87, 93], "deploi": [87, 93], "slight": [87, 93, 310], "overhead": [87, 93], "share_individual_td": [87, 93], "shared_memori": [87, 93], "policy_proof": [87, 93], "ll": [87, 93, 309, 310, 311, 312, 315, 321], "hidden": [87, 93, 166, 169, 170, 180, 181, 186, 187, 197, 198, 199, 201, 210, 213, 222, 233, 236, 305, 312, 314, 320], "update_kwarg": [87, 93], "pettingzoo": [88, 89], "pet": [88, 89], "zoo": [88, 89], "guid": [88, 89, 91, 92, 134, 304, 309, 315], "__": [88, 89], "aecenv": [88, 89], "use_mask": [88, 89], "dead": [88, 89], "compulsori": [88, 89], "adversary_0": [88, 89], "adversari": [88, 89], "marlgroupmaptyp": [88, 89, 96, 303], "vectoris": [88, 89], "multiwalker_v9": 88, "return_st": [88, 89], "categorical_act": [88, 89, 91, 92], "n_piston": [88, 89], "21": [88, 89, 310, 314, 316, 319], "pistonball_v6": [88, 89], "piston": [88, 89], "piston_0": [88, 89], "piston_1": [88, 89], "piston_20": [88, 89], "aec": [88, 89], "tictactoe_v3": [88, 89], "player": [88, 89], "player_1": [88, 89], "player_2": [88, 89], "butterfli": 89, "parallel_env": [89, 309, 320, 321], "roboh": 90, "expos": [90, 107, 110, 212, 310], "vikashplu": 90, "read_info": 90, "pars": [90, 318], "smacv2": [91, 92], "starcraft": [91, 92], "challeng": [91, 92, 316, 317], "v2": [91, 92, 244, 258, 259, 260, 261, 263, 264, 265, 266, 294], "10gen_terran": [91, 92], "10gen_zerg": [91, 92], "10gen_protoss": [91, 92], "3m": [91, 92], "8m": [91, 92], "25m": [91, 92], "5m_vs_6m": [91, 92], "8m_vs_9m": [91, 92], "10m_vs_11m": [91, 92], "27m_vs_30m": [91, 92], "mmm": [91, 92], "mmm2": [91, 92], "2s3z": [91, 92], "3s5z": [91, 92], "3s5z_vs_3s6z": [91, 92], "3s_vs_3z": [91, 92], "3s_vs_4z": [91, 92], "3s_vs_5z": [91, 92], "1c3s5z": [91, 92], "2m_vs_1z": [91, 92], "corridor": [91, 92], "6h_vs_8z": [91, 92], "2s_vs_1sc": [91, 92], "so_many_banel": [91, 92], "bane_vs_ban": [91, 92], "2c_vs_64zg": [91, 92], "old": [91, 92, 233, 321], "smac": [91, 92], "map_nam": [91, 92], "18": [91, 92, 94, 95, 176, 309, 315, 316, 318, 321], "176": [91, 92, 312, 316], "battle_won": [91, 92], "dead_al": [91, 92], "dead_enemi": [91, 92], "episode_limit": [91, 92], "322": [91, 92, 316], "Or": [91, 92], "procedur": [91, 92], "distribution_config": [91, 92], "n_unit": [91, 92], "n_enemi": [91, 92], "team_gen": [91, 92], "dist_typ": [91, 92], "weighted_team": [91, 92], "unit_typ": [91, 92], "marin": [91, 92], "maraud": [91, 92], "medivac": [91, 92], "exception_unit_typ": [91, 92], "start_posit": [91, 92], "surrounded_and_reflect": [91, 92], "map_x": [91, 92], "map_i": [91, 92], "capability_config": [91, 92], "88": [91, 92, 309, 316, 318], "131": [91, 92, 316, 318], "starcraft2env": 92, "scenario": [94, 95, 309, 315, 316], "flock": [94, 95], "continuous_act": [94, 95, 315], "agent_collision_rew": [94, 95], "agent_distance_rew": [94, 95], "agent_nam": 96, "ca": 96, "environment4": 96, "get_group_map": 96, "sumbodul": 97, "model_bas": [98, 155, 173], "adapt": [100, 233, 309, 316], "masker": 100, "binarydiscretetensorspec": [100, 224, 226, 247, 303], "maskedenv": 100, "ones_lik": 100, "scatter": 100, "unsqueez": [100, 102, 103, 137, 140, 170, 309, 312, 315, 316], "_set_se": [100, 107, 110, 316], "transform_reward_spec": [101, 105, 106, 107, 108, 111, 117, 125, 128, 129, 131, 133, 138, 140], "as_invers": 102, "account": [102, 174, 175, 305, 310, 312, 318, 321], "movement": 102, "veloc": [102, 315, 316, 321], "propos": [102, 172, 231, 240, 294, 305, 312, 318], "pdf": [102, 157, 158, 159, 160, 161, 165, 183, 203, 206, 227, 237, 240, 249, 254, 262, 294], "1312": 102, "5602": 102, "uesd": 102, "unsqueezetransform": [102, 316, 318], "consumpt": 102, "followin": 102, "pictur": 102, "cartpol": [102, 310, 312, 318, 321], "pixels_trsf": [102, 318], "grayscal": [102, 310, 312, 318, 321], "tensordictreplaybuff": [102, 282, 297, 303, 309, 310, 312, 318], "data_exclud": [102, 318], "_buffer": 102, "transform_observation_spec": [102, 103, 104, 105, 106, 107, 108, 111, 113, 115, 116, 117, 119, 121, 125, 126, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 316], "del_kei": [103, 141, 314, 316], "unsqueeze_if_oor": 103, "observation_posit": 103, "observation_veloc": 103, "delet": 103, "key1": [103, 276, 284], "key2": [103, 276, 284], "crop": [104, 124, 268], "center": [104, 268], "width": [104, 126], "height": [104, 126], "squar": [104, 168, 191, 192, 268], "out_keys_inv": [105, 107, 110, 119, 120, 121, 125, 138, 316], "scalar": [105, 128, 159, 161, 177, 178, 200, 204, 206, 217, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 247, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 305, 310, 316], "permit": [105, 113, 140], "rewardsc": [106, 139, 309, 310, 312], "rewardclip": 106, "transformed_env": [106, 138, 139], "transform_env_devic": [106, 108, 138], "transform_input_spec": [106, 107, 108, 109, 119, 121, 125, 130, 133, 138, 140, 142], "transform_output_spec": [106, 107, 108, 111, 117, 125, 131, 133, 138], "untouch": [106, 107, 108, 111, 117, 125, 131, 133, 138], "transformfull_done_spec": [106, 107, 108, 111, 117, 125, 131, 133, 138], "dtype_in": 107, "dtype_out": 107, "scan": [107, 110, 212, 213], "resp": [107, 110], "anticip": [107, 110], "not_transform": [107, 110], "rule": [107, 110, 211, 305, 311], "constructedw": [107, 110], "myenv": [107, 110], "orig_devic": 108, "unspecifi": 108, "transform_done_spec": [108, 138], "num_actions_effect": 109, "max_act": 109, "include_forward": 109, "dimension": [109, 169, 249, 254, 262, 315], "num_act": [109, 226], "action_out": 109, "_call": [109, 113, 316], "excluded_kei": 111, "finit": [112, 318], "first_dim": 113, "last_dim": 113, "allow_positive_dim": [113, 140], "th": [113, 140, 316], "frameskip": 113, "repeatedli": [114, 311, 315], "init_kei": 116, "is_init": [116, 169, 206, 312], "tracker": 116, "coef": 117, "pi_curr": 117, "pi_0": 117, "constrain": [117, 169, 236], "overfit": 117, "fine": [117, 317], "probabilist": [117, 207, 303, 311, 320], "get_dist": [117, 211, 212], "mod": [117, 169, 214, 312], "normalparamextractor": [117, 305, 311, 315], "probabilisticactor": [117, 197, 198, 199, 201, 220, 221, 225, 226, 232, 235, 236, 237, 238, 239, 241, 305, 309, 311, 315], "tanhnorm": [117, 197, 198, 199, 207, 213, 220, 221, 232, 236, 237, 238, 239, 241, 303, 311, 315, 320], "n_ob": [117, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241], "n_act": [117, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241], "return_log_prob": [117, 197, 198, 199, 207, 211, 213, 238, 305, 311, 315, 320], "apply_": 117, "copy_": [117, 309], "formulat": 117, "diverg": [117, 169, 207, 211, 229, 233], "noop": [118, 320], "30": [118, 186, 187, 309, 311, 315, 316, 318], "trial": 118, "op": [118, 200, 204, 287], "randomli": [118, 119, 135, 204, 207, 211, 315, 316, 318], "noop_max": 118, "standard_norm": [119, 129, 309, 310, 312], "affin": [119, 129], "layer": [119, 144, 156, 158, 159, 166, 169, 171, 176, 177, 178, 180, 181, 188, 189, 195, 205, 214, 305, 310, 311, 312, 317], "normal": [119, 144, 156, 168, 171, 174, 175, 179, 191, 192, 200, 207, 211, 222, 233, 236, 281, 283, 301, 305, 307, 312, 315, 321], "set_default_tensor_typ": 119, "doubletensor": 119, "isclos": 119, "next_ob": [119, 249, 250, 251, 252, 320], "rubric": [119, 213], "init_stat": [119, 309, 310, 311, 312], "3752e": 119, "01": [119, 206, 217, 222, 233, 236, 309, 312, 316, 319], "5087e": 119, "03": [119, 309, 316, 319], "9294e": 119, "9636": 119, "5608": 119, "6408": 119, "num_it": [119, 310, 311], "reduce_dim": [119, 309, 310, 311, 312], "cat_dim": [119, 309, 310, 311, 312], "keep_dim": [119, 310, 312], "constant": [119, 134, 307, 309, 311, 312, 321], "statist": [119, 144, 238, 301, 309, 310, 311, 321], "approach": [119, 309, 311, 321], "gaussian": [119, 135, 155, 173, 177, 178, 183, 200, 311], "empir": [119, 155, 173, 207, 211, 309, 311, 315], "3d": 119, "third": [119, 203, 315], "reorder": 121, "in_keys_in": 121, "al": [121, 155, 321], "pong": [121, 321], "v5": [121, 321], "210": [121, 316, 321], "160": [121, 316, 321], "channel": [121, 180, 181, 310], "r3m": [123, 317], "resnet": [123, 141, 143], "visual": [123, 141, 143, 311, 316], "embed": [123, 141, 142, 143, 184, 196, 197, 198, 199, 210, 215, 317], "ego4d": [123, 141, 143], "univers": [123, 141, 143], "suraj": [123, 141], "nair": [123, 141], "aravind": [123, 141], "rajeswaran": [123, 141], "vikash": [123, 141, 143], "kumar": [123, 141, 143], "chelsea": [123, 141], "finn": [123, 141], "abhinav": [123, 141], "gupta": [123, 141], "2203": [123, 141, 173, 317], "12601": [123, 141, 317], "_init": [123, 141, 309, 317], "snippet": [123, 141, 309], "resnet50": [123, 143, 317], "model_nam": [123, 141, 143, 271], "resnet34": 123, "resnet18": 123, "r3m_vec": [123, 317], "feed": [123, 143, 234, 305, 309, 315, 318], "244": [123, 143, 316], "stack_imag": [123, 143, 317], "tread": [123, 143], "separet": [123, 143], "hub": [123, 143], "resnet50_weight": [123, 143], "imagenet1k_v1": [123, 143], "download_path": [123, 143], "tensor_pixels_kei": [123, 143], "dest": [123, 141, 143, 210], "sub_seq_len": 124, "sample_dim": [124, 309], "primarili": 124, "hesit": 124, "request": [124, 315], "robust": 124, "mix": [124, 184, 193, 247, 309, 315], "NOT": 124, "improp": 124, "create_copi": 125, "renam": [125, 127, 153, 309], "stuff": 125, "newnam": 125, "interpol": [126, 310, 312], "bilinear": [126, 312], "truncated_kei": [127, 133], "r2g": 127, "99": [127, 144, 173, 230, 243, 248, 255, 297, 309, 310, 311, 316, 320], "reward_to_go": 127, "bernoulli_": 127, "9010": 127, "9404": [127, 255], "9701": [127, 255], "9900": [127, 255], "0000": [127, 136, 204, 214, 255, 311, 312, 316, 320], "crash": 127, "clamp_min": 128, "clamp_max": 128, "clip_min": 128, "clip_max": 128, "episode_": 130, "reward1": 130, "reward2": 130, "episode_reward": [130, 315], "5926": 130, "4578": 130, "7885": 130, "keep_reward": 131, "keep_don": 131, "excludetransform": [131, 318], "squeeze_dim": 132, "step_count_kei": 133, "update_don": 133, "adaptec": 133, "accordingli": [133, 134, 208, 312], "completet": 133, "recognis": 133, "accompani": 133, "target_return": 134, "chosen": [134, 135, 184, 185, 193, 209, 294, 305], "conjunct": [134, 310], "hindsight": 134, "relabel": 134, "reward2gotransform": 134, "primer": [135, 312], "default_valu": [135, 312], "unit": [135, 155, 166, 180, 181, 186, 187, 311], "transfomedenv": 135, "mykei": 135, "__unless": 135, "exists__": 135, "dtype_or_devic": 135, "pool": 136, "increas": [136, 206, 315], "10th": 136, "0216": 136, "1149": 136, "1990": 136, "2749": 136, "3281": 136, "9290": 136, "3702": 136, "8978": 136, "from_int": 137, "255": [137, 316, 318], "ri": 137, "principl": 138, "cattransform": 138, "notabl": 138, "rewardsum": [138, 315], "cache_spec": 139, "anymor": [139, 210], "set_missing_toler": 139, "keyerror": [139, 315], "unsqueeze_dim": [140, 316], "danger": 140, "vc1": 141, "vc1_vec": 141, "small": [141, 309, 311, 315, 321], "untrain": 141, "make_noload_model": 141, "naiv": 141, "vip": [142, 143, 317], "toward": 143, "implicit": [143, 232, 318], "jason": 143, "ma": 143, "shagun": 143, "sodhani": 143, "dinesh": 143, "jayaraman": 143, "osbert": 143, "bastani": 143, "ami": 143, "zhang": 143, "vip_vec": 143, "shared_td": 144, "decai": [144, 200, 204, 240, 283, 309, 310, 312, 321], "9999": [144, 316], "0001": [144, 166, 179, 311, 316], "fly": [144, 233, 306, 311, 316, 318, 321], "to_observation_norm": 144, "underflow": [144, 283], "build_td_for_shared_vecnorm": 144, "memmori": 144, "memmap_": 144, "queue": [144, 318], "td_share": 144, "v": [144, 197, 232, 239, 305, 309, 310], "state_dim": [145, 157, 162, 183, 186, 187, 201], "action_dim": [145, 157, 158, 160, 162, 183, 201, 309, 314], "gsde": [145, 237, 301], "func": 145, "gsdemodul": 145, "check_dtyp": 146, "short": [146, 310, 311, 315], "discrep": [146, 220, 222, 223, 224, 233, 236, 238, 247], "imposs": 146, "probabilistictdmodul": [151, 152, 171, 207, 211, 248, 281], "next_tensordict": 153, "keep_oth": [153, 316], "exclude_reward": 153, "exclude_don": 153, "exclude_act": 153, "next_": 153, "funtion": [153, 316], "write_full_fals": 154, "leav": [154, 309], "cross": 155, "entropi": [155, 220, 221, 222, 226, 232, 233, 235, 236, 237, 239, 241, 315], "botev": 155, "et": 155, "2013": 155, "cem": 155, "plan": [155, 172, 173], "varianc": [155, 168, 179, 191, 192, 306, 309, 311, 315], "rank": 155, "k": 155, "repeat": [155, 311, 315, 316], "maximis": [155, 158, 160, 173, 305, 309, 310, 311, 315, 316], "horizon": [155, 173, 311], "modelbasedenv": [155, 173], "planning_horizon": [155, 173], "optim_step": [155, 173], "mpc": [155, 172, 173], "num_candid": [155, 173], "candid": [155, 173], "top_k": [155, 173], "modelbasedenvbas": [155, 172, 173, 303], "safemodul": [155, 172, 197, 199, 211, 220, 221, 226, 232, 236, 237, 238, 239, 241, 290, 291, 297, 303, 320], "next_hidden_observ": 155, "num_cel": [156, 158, 159, 160, 161, 166, 167, 169, 171, 176, 197, 310, 311, 312, 315, 320], "elu": [156, 158, 159, 160, 161, 166, 167, 310, 320], "activation_kwarg": [156, 171], "norm_class": [156, 158, 159, 171], "norm_kwarg": [156, 171], "bias_last_lay": [156, 158, 159, 160, 161, 167, 171], "aggregator_class": [156, 158, 159, 310, 312, 320], "squashdim": [156, 158, 320], "aggregator_kwarg": [156, 158, 159, 310, 312], "squeeze_output": [156, 158, 159, 310, 312], "convolut": [156, 158, 159, 188], "produc": [156, 171, 176, 182, 197, 199, 201, 268, 311, 312, 318, 321], "cell": [156, 171, 176, 311], "kernel": [156, 167, 170], "cnet": 156, "34": [156, 171, 316, 318, 319], "35": [156, 171, 309, 316], "rectangular": 156, "transformer_config": [157, 183, 201], "decisiontransform": [157, 183], "dtconfig": [157, 162, 183], "2202": [157, 162, 183, 235], "05607": [157, 162, 183, 235], "return_to_go": [157, 162, 183, 201], "conv_net_kwarg": [158, 159], "mlp_net_kwarg": [158, 159, 160], "use_avg_pool": [158, 159], "WITH": [158, 159, 160, 161, 206, 240], "1509": [158, 159, 160, 161, 173, 206, 231, 240, 316], "02971": [158, 159, 160, 161, 206, 240], "convnet": [158, 312, 320], "ndims_in": 158, "avgpool": [158, 159], "adaptiveavgpool2d": [159, 310, 312], "400": [160, 161, 311, 315, 316, 318], "mlp_net_kwargs_net1": 161, "mlp_net_kwargs_net2": 161, "decion": 162, "desdescrib": 162, "n_embd": 162, "n_layer": 162, "n_head": 162, "n_inner": 162, "n_posit": 162, "resid_pdrop": 162, "attn_pdrop": 162, "gpt2config": 162, "atol": [163, 190], "06": [163, 190, 309, 316], "rtol": [163, 190], "batch_shap": [163, 190], "event_shap": [163, 190], "absolut": [163, 190, 309], "densiti": [163, 174, 175, 182, 192], "mass": [163, 174, 175, 182, 192, 316], "rsampl": [163, 175, 182, 211], "sample_shap": [163, 174, 175, 182], "dqnet": 164, "atom": 164, "softmax": [164, 175, 182, 202, 203], "action_spac": [165, 185, 202, 203, 208, 209, 220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 312], "var_num": [165, 185, 202, 203, 209], "action_value_kei": [165, 185, 202, 203, 208, 209, 234, 247], "action_mask_kei": [165, 185, 202, 203, 204, 208, 209], "perspect": [165, 203, 227, 311], "1707": [165, 203, 227, 236], "06887": [165, 203, 227], "mult": [165, 176, 185, 202, 203, 208, 209], "functional_modul": [165, 185, 208, 210, 213, 305], "make_funct": [165, 185, 207, 208, 210, 213, 215, 234, 305, 320], "tensordict_modul": [165, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 223, 226, 232, 236, 237, 238, 239, 241, 305], "nbin": [165, 202, 305], "customdistributionalqv": 165, "log_softmax": [165, 202], "one_hot": [165, 175, 185], "qvalue_actor": [165, 185, 202, 208, 305], "std_bia": 166, "std_min_val": 166, "belief": [166, 180, 186, 187], "1912": [166, 228, 229, 230], "01603": [166, 228, 229, 230], "softplu": [166, 179, 217, 218, 219], "out_features_valu": 167, "cnn_kwarg": [167, 310], "mlp_kwarg": [167, 170, 310], "duel": 167, "cnn": [167, 310, 320], "06581": 167, "512": [167, 316, 318], "upscal": [168, 191, 192], "tanh_loc": [168, 191, 192], "event_dim": [168, 190, 191], "ultim": [168, 191, 192], "poor": [168, 191, 192], "explos": [168, 191, 192], "switch": [168, 192], "sigma": [168, 183, 191, 192, 200, 206, 311], "formula": [168, 191, 192, 220, 222, 233, 236, 306, 311], "embedd": [169, 170], "lstmcell": 169, "trust": 169, "correspont": 169, "input_s": [169, 170, 312], "hidden_s": [169, 170, 312], "num_lay": [169, 180, 181], "b_ih": 169, "b_hh": 169, "introduc": [169, 206, 309], "proj_siz": 169, "recurrent_state_h": [169, 312], "recurrent_state_c": [169, 312], "triplet": [169, 208, 209], "custom_kei": 169, "temporal_mod": 169, "set_temporal_mod": 169, "seq": [169, 312, 314], "lstm_modul": 169, "rs_h": 169, "rs_c": 169, "set_recurrent_mod": [169, 312], "batch_first": [169, 312], "hidden0": 169, "hidden1": 169, "policy_infer": 169, "policy_train": 169, "traj_td": 169, "td_inf": 169, "assert_clos": 169, "lstm_kwarg": 170, "next_observ": [170, 220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 314], "time_step": 170, "2d": [170, 315], "hidden0_in": 170, "hidden1_in": 170, "hidden0_out": 170, "hidden1_out": 170, "single_bias_last_lay": 171, "layer_class": 171, "layer_kwarg": 171, "perceptron": 171, "seamless": 171, "lazylinear": [171, 305, 311, 316, 317, 320], "42": [171, 220, 221, 223, 232, 239, 311, 316], "noisylinear": [171, 177, 303, 310], "noisylazylinear": [171, 303], "At": [172, 204, 310, 311, 312, 314, 316, 317], "mpcplanner": 172, "tensordict_out": [172, 321], "mppi": 173, "covari": 173, "william": [173, 238], "aldrich": 173, "theodor": 173, "01149": 173, "hansen": 173, "wang": 173, "su": 173, "04955": 173, "valueoper": [173, 197, 198, 199, 220, 221, 222, 223, 226, 232, 233, 236, 237, 238, 239, 241, 297, 305, 309, 311], "tdlambdaestim": [173, 303, 309], "value_net": [173, 224, 238, 249, 250, 251, 252, 311], "adv": 173, "lmbda": [173, 243, 249, 252, 254, 260, 261, 262, 265, 266, 306, 309, 311, 315], "95": [173, 243, 309, 311, 312, 316], "value_network": [173, 223, 224, 227, 232, 239, 249, 250, 251, 252, 306, 309, 311], "temperatur": [173, 221, 232], "neg_inf": [174, 175], "inf": [174, 175], "padding_valu": [174, 175], "www": [174, 175], "api_doc": [174, 175], "tf_agent": [174, 175], "event": [174, 175, 182, 258, 259, 260, 261, 263, 264, 265, 266, 318], "unnorm": [174, 175, 182], "sparse_mask": [174, 175], "dens": [174, 175], "0831": [174, 175], "1203": [174, 175], "0928": [174, 175], "1972": [174, 175], "grad_method": [175, 182], "reparamgradientstrategi": [175, 182], "passthrough": [175, 182], "proxi": [175, 182, 306], "relaxedonehot": [175, 182], "zeros_lik": [175, 316], "sample_non_valid": 175, "n_agent_input": [176, 315], "n_agent_output": [176, 315], "centralis": [176, 315], "share_param": [176, 315], "homogen": [176, 315], "toech": 176, "agent_network": 176, "modulelist": [176, 294, 320], "centalis": 176, "shown": [176, 305, 314, 315, 318], "std_init": [177, 178], "matrix": [177, 178], "initialize_paramet": 177, "isol": 177, "1706": [178, 193], "10295v3": 178, "induc": 178, "aid": 178, "scale_map": 179, "biased_softplus_1": 179, "scale_lb": [179, 186, 187], "exp": [179, 219], "module_norm": 179, "decod": 180, "1803": [180, 181, 184], "10122": [180, 181], "els": [180, 305, 307, 309, 310, 311, 312, 315, 316, 317], "rnn_hidden": 180, "latent": 181, "excacli": 182, "inres": 183, "mu": [183, 206, 311], "state_shap": [184, 247], "mixing_embed_dim": [184, 247], "qmix": [184, 315], "mixer": [184, 193, 247], "monoton": 184, "hyper": 184, "11485": 184, "qmixerloss": [184, 193], "qmix_vdn": [184, 193], "eventu": [184, 312, 316], "vdn": [184, 193], "greedi": [185, 203, 204, 209, 310, 312], "hidden_dim": [186, 187], "posterior": [186, 229], "rssm": [186, 187, 229], "1811": [186, 187], "04551": [186, 187], "obs_embed": 186, "rnn_hidden_dim": 187, "dream": 187, "tanhtransform": 191, "decomposit": 193, "05296": 193, "vmap": [194, 210, 213, 320], "hide": [194, 311, 315], "satisfi": [194, 305], "tensordictmodulebas": [194, 202, 208, 312], "vmap_dim": 194, "lam": 194, "sample_in": 194, "sample_in_td": 194, "vm": 194, "translat": [196, 207], "character": [196, 202, 207, 208, 210, 318], "overflow": [196, 202, 203, 207, 208, 209, 210, 211], "td_modul": [196, 197, 198, 199, 207, 210, 211, 213, 215, 320], "3635": 196, "0340": 196, "1476": 196, "3911": [196, 316], "1664": [196, 316], "5455": 196, "2247": 196, "4583": 196, "2916": 196, "2160": 196, "5337": 196, "5193": 196, "grad_fn": [196, 204, 320], "addmmbackward0": 196, "actorvalueoper": [197, 305], "get_policy_oper": [197, 198, 199, 222, 233, 236, 305], "standalon": [197, 198, 199], "tdmodul": [197, 198, 199, 297], "get_critic_oper": 197, "common_oper": [197, 199], "policy_oper": [197, 198, 199], "value_oper": [197, 198, 199], "normalparamwrapp": [197, 198, 199, 207, 213, 220, 221, 226, 232, 236, 237, 238, 239, 241, 303, 320], "module_hidden": [197, 199], "td_module_hidden": [197, 199], "module_act": [197, 199], "td_module_act": [197, 198, 199], "module_valu": [197, 198, 199], "td_module_valu": [197, 198, 199], "state_action_valu": [197, 215, 221, 239, 248, 294, 297, 305, 309, 320], "td_clone": [197, 198, 199], "tensordictmodulewrapp": [197, 290, 291, 297], "get_policy_head": [197, 198, 199], "safesequenti": [197, 198, 199, 247], "head": [197, 199, 222, 233, 236], "get_value_head": [197, 198, 199], "get_value_oper": [197, 198, 199, 222, 233, 236], "action_modul": 198, "state_valu": [198, 199, 215, 222, 233, 236, 237, 239, 249, 250, 251, 252, 254, 256, 258, 260, 262, 263, 265, 305, 309, 311, 315], "qualiti": [199, 305], "actorcriticoper": [199, 222, 233, 236, 305], "embeddig": 199, "refet": 199, "actorcriticwrapp": [199, 305, 309], "po": 200, "sigma_init": 200, "epsilon": [200, 204, 206, 240, 283, 310, 311, 312], "sigma_end": 200, "annealing_num_step": [200, 204, 206, 309, 310, 312], "captur": [200, 204, 206], "omiss": [200, 204, 206], "ommit": [200, 204, 206, 318], "inferec": 201, "set_tensor_kei": 201, "dt_inference_wrapp": 201, "baz": 201, "inference_context": 201, "obs_dim": 201, "tanhdelta": [201, 303, 309], "dtactor": 201, "actor_modul": [201, 320], "dist_class": 201, "dist_kwarg": 201, "distribution_kwarg": [201, 207, 211, 311, 315], "inference_actor": 201, "sequence_length": 201, "mask_context": 201, "qvaluemodul": [202, 208, 247, 312], "distributionaldqnnet": 202, "make_log_softmax": 202, "my_action_valu": [203, 209], "chanc": 203, "thid": 203, "threshold": [204, 221, 222, 311], "eps_init": [204, 206, 310, 312], "eps_end": [204, 206, 310], "explorative_polici": [204, 206], "9055": [204, 316], "9277": 204, "6295": 204, "2532": 204, "addbackward0": 204, "lmheadmodel": 205, "extract": [205, 309, 311], "actor_head": [205, 222, 233, 236], "base_model": 205, "lm_head": 205, "ornstein": 206, "uhlenbeck": 206, "ou": [206, 309], "correl": 206, "sort": 206, "noise_t": 206, "noise_": 206, "theta": [206, 311, 316], "sigma_t": 206, "sqrt": 206, "sigma_": 206, "anneal": 206, "ou_prev_nois": 206, "ou_step": 206, "x0": 206, "sigma_min": 206, "n_steps_ann": 206, "is_init_kei": 206, "_ou_prev_nois": 206, "_ou_step": 206, "default_interaction_typ": [207, 211], "interaction_typ": [207, 211], "set_interaction_typ": [207, 211], "cache_dist": [207, 211], "n_empirical_estim": [207, 211], "chose": 209, "functionalmodul": 210, "functionalmodulewithbuff": 210, "grucel": 210, "td_fmodul": 210, "td_function": 210, "td_state": 210, "ensembl": [210, 237], "params_repeat": 210, "td_vmap": [210, 213], "random_sampl": [210, 211], "suppli": 211, "fist": 211, "log_prob_kei": [211, 315], "probabilistictensordictsequenti": [212, 220, 222, 233, 236, 238, 290, 291, 320], "partial_toler": [212, 213, 314], "who": [212, 213], "AND": [212, 213], "tensordictsequenci": 213, "tensordictsequ": 213, "safeprobabilisticmodul": [213, 305], "spec1": 213, "net1": 213, "module1": 213, "td_module1": 213, "spec2": 213, "module2": 213, "td_module2": 213, "clamp": [214, 229, 285, 316], "boundari": [214, 311, 315], "resolut": 214, "simplest": [214, 309, 311, 312, 315, 318, 321], "9944": 214, "9991": 214, "3020": 214, "2299": [214, 316], "5418": 214, "2989": 214, "6849": 214, "3169": 214, "2690": 214, "9649": [214, 316], "5686": 214, "8602": 214, "0315": 214, "8455": [214, 316], "6027": 214, "4746": 214, "7843": 214, "7782": 214, "2111": 214, "5115": 214, "4687": 214, "5760": 214, "custommodul": 215, "cat": [215, 221, 223, 232, 237, 239, 241, 320], "imaginari": 216, "imagin": 216, "transition_model": 216, "get_reward_oper": 216, "get_transition_model_oper": 216, "min_val": [217, 219], "bias": [217, 306, 309], "_bia": 217, "invert": [218, 311], "surject": 219, "expln": 219, "biased_softplu": [219, 303], "beggin": 219, "biased_softplus_": 219, "syntax": [219, 309], "met": [219, 316], "1602": 220, "01783v2": 220, "entropy_bonu": [220, 222, 233, 236, 311], "favour": [220, 222, 233, 236], "samples_mc_entropi": [220, 222, 233, 235, 236], "mont": [220, 222, 233, 236, 309], "carlo": [220, 222, 233, 236, 309], "entropy_coef": [220, 222, 233, 236, 311, 315], "critic_coef": [220, 222, 233, 236, 311], "loss_critic_typ": [220, 222, 233, 236, 238, 311], "l1": [220, 222, 223, 224, 226, 233, 236, 237, 238, 241, 244, 247, 305, 309], "l2": [220, 222, 223, 224, 225, 226, 229, 230, 233, 236, 237, 238, 241, 244, 247, 309], "smooth_l1": [220, 221, 222, 223, 224, 226, 232, 233, 236, 237, 238, 239, 241, 244, 247, 311], "separate_loss": [220, 222, 223, 226, 232, 233, 236, 237, 238, 239, 241], "propag": [220, 222, 223, 226, 232, 233, 236, 237, 238, 239, 241, 249, 250, 251, 252, 311, 315], "advantage_kei": [220, 222, 233, 236, 238, 249, 250, 251, 252], "value_target_kei": [220, 222, 233, 236, 238, 249, 250, 251, 252, 311], "value_target": [220, 222, 233, 236, 238, 249, 250, 251, 252, 311, 315], "loss_crit": [220, 236, 311, 315], "loss_entropi": [220, 236, 311, 315], "loss_object": [220, 236, 311, 315], "recur": [220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241, 249, 250, 251, 252, 253], "next_reward": [220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241], "next_don": [220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241], "next_termin": [220, 221, 223, 224, 226, 232, 236, 237, 238, 239, 241], "loss_obj": 220, "sacloss": [220, 231, 240, 303], "select_out_kei": [220, 221, 223, 226, 232, 236, 237, 239, 241], "essenti": [220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 247, 310, 316, 318], "make_value_estim": [220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 242, 247, 306, 309, 310, 315], "value_typ": [220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 243, 247, 309], "valueestim": [220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 243, 247, 303, 306, 309, 315], "hyperparam": [220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 309, 316], "enum": [220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 243, 247, 309], "default_value_estim": [220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 309], "refin": [220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247], "default_value_kwarg": [220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 247, 303, 309], "dqnloss": [220, 221, 223, 226, 227, 228, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 247, 292, 303, 306, 310, 312], "dqn_loss": [220, 221, 223, 224, 226, 227, 228, 232, 234, 236, 237, 238, 239, 241, 242, 247], "conserv": 221, "2006": [221, 316], "04779": 221, "actor_network": [221, 223, 225, 226, 232, 235, 237, 239, 241, 309], "qvalue_network": [221, 226, 232, 237, 239, 241], "loss_funct": [221, 223, 224, 225, 226, 232, 237, 239, 241, 244, 247, 309], "alpha_init": [221, 226, 235, 237, 239], "min_alpha": [221, 226, 235, 237, 239], "max_alpha": [221, 226, 235, 237, 239], "fixed_alpha": [221, 226, 235, 237, 239], "target_entropi": [221, 226, 235, 237, 239], "prod": [221, 235, 239], "n_action": [221, 224, 235, 239], "delay_actor": [221, 223, 239, 241], "delay_qvalu": [221, 226, 237, 239, 241], "min_q_weight": 221, "max_q_backup": 221, "backup": 221, "deterministic_backup": 221, "num_random": 221, "with_lagrang": 221, "lagrang": 221, "lagrange_thresh": 221, "valueclass": [221, 223, 226, 232, 237, 239, 241], "qvalu": [221, 226, 232, 237, 239, 241, 294], "loss_actor": [221, 223, 226, 232, 237, 238, 239, 241, 280, 309, 320], "loss_alpha": [221, 226, 237, 239], "loss_alpha_prim": 221, "loss_qvalu": [221, 226, 232, 237, 239, 241], "clip_epsilon": [222, 311, 315], "normalize_advantag": [222, 233, 236, 315], "value_kei": [222, 233, 236, 249, 250, 251, 252, 309], "somemodul": [222, 233, 236], "someactor": [222, 233, 236], "value_head": [222, 233, 236], "somevalu": [222, 233, 236], "loss_modul": [222, 231, 233, 234, 236, 240, 285, 296, 297, 306, 307, 309, 310, 311, 315, 318], "ppoloss": [222, 233, 303], "delay_valu": [223, 224, 227, 238, 239, 247, 310, 312], "loss_valu": [223, 232, 238, 239, 309, 311, 315, 320], "pred_valu": [223, 241, 309, 320], "pred_value_max": [223, 309, 320], "target_valu": [223, 237, 241, 248, 306, 309, 320], "target_value_max": [223, 309, 320], "qvalueactor": [224, 247, 305, 310, 312], "mult_one_hot": [224, 226, 247], "loss_val": [224, 306, 309, 311, 312, 315, 318], "2106": 225, "01345": 225, "ste": 226, "num_qvalue_net": [226, 232, 237, 239, 241], "target_entropy_weight": 226, "onehotcategor": [226, 303], "disctount": 227, "distributionalqvalueactor": [227, 305], "input_tensordict": [227, 309], "actor_model": 228, "value_model": [228, 230], "model_based_env": 228, "dreamerenv": [228, 303], "imagination_horizon": 228, "unrol": [228, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266], "discount_loss": [228, 230], "lambda_kl": 229, "lambda_reco": 229, "lambda_reward": 229, "reco_loss": 229, "reward_loss": 229, "free_nat": 229, "nat": 229, "delayed_clamp": 229, "global_averag": 229, "value_loss": 230, "fake_data": 230, "ddpgloss": [231, 240, 297, 303, 309, 320], "td3loss": [231, 240, 303], "value_network_update_interv": 231, "contrast": [231, 318], "06461": 231, "2110": 232, "06169": 232, "expectil": 232, "tau": [232, 240, 309, 310], "antmaz": 232, "sticht": 232, "loss_value_diff": 232, "diff": 232, "old_polici": 233, "new_polici": 233, "distanc": [233, 244, 248, 249, 315], "apart": [233, 315], "dtarg": 233, "samples_mc_kl": 233, "analyt": 233, "decrement": 233, "loss_": [234, 280, 306, 309], "equip": [234, 312], "gh": 234, "_acceptedkei": 234, "dataclass": [234, 294], "_forward_value_estimator_kei": 234, "alter": [234, 305], "value_estim": [234, 249, 250, 251, 252, 253, 306, 309, 315], "myloss": 234, "action2": 234, "convert_to_funct": [234, 309], "expand_dim": 234, "create_target_param": [234, 309], "compare_against": [234, 309], "funs_to_decor": 234, "stuctur": 234, "_param": 234, "expans": 234, "resampl": 234, "_target_param": 234, "valueestimatorbas": [234, 303], "blend": 234, "upcom": [234, 258, 259, 260, 261, 263, 264, 265, 266, 309], "proxim": [236, 311, 315], "optimis": [236, 281, 311, 315], "flavour": [236, 315, 320], "clipppoloss": [236, 303, 311, 315], "klpenppoloss": [236, 303], "regularis": 236, "06347": 236, "gae": [236, 303, 306, 309, 311, 315], "ppo_loss": 236, "tdlambda": [236, 243, 306, 309], "base_lay": 236, "randn_lik": 236, "samplelogprob": 236, "openreview": [237, 294], "ay8zfzm0tdd": [237, 294], "sub_sample_len": 237, "subsampl": [237, 276, 307], "action_log_prob_actor": 237, "state_action_value_actor": [237, 241], "connectionist": 238, "1992": 238, "doi": 238, "1007": 238, "bf00992696": 238, "actor_net": [238, 309, 311], "1801": 239, "01290": 239, "applic": [239, 247, 316], "1812": 239, "05905": 239, "redqloss": [240, 303], "math": 240, "theta_t": [240, 316], "theta_": [240, 316], "polyak": 240, "policy_nois": 241, "noise_clip": 241, "next_state_valu": [241, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 303], "td0": [242, 309], "strict_shap": 244, "view_a": 244, "qmixer": [247, 303], "local_valu": 247, "visibl": [247, 315], "dafault": 247, "acceptedkei": 247, "global_valu": 247, "penultim": 247, "local_value_network": 247, "mixer_network": 247, "suggest": [247, 315], "value_modul": [247, 311, 320], "qnet": [247, 309], "next_val_kei": 248, "pred_next_v": 248, "usus": 248, "mse": 248, "q_valu": 248, "n_steps_to_next": 248, "value_next_st": 248, "1506": [249, 254, 262], "02438": [249, 254, 262], "exponenti": [249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 283], "average_ga": [249, 311], "skip_exist": [249, 250, 251, 252], "advang": 249, "gradient_mod": 249, "value_error": [249, 250, 251, 252, 253], "sign": 249, "unused_arg": 249, "target_param": [249, 250, 251, 252, 253, 309, 315], "98": [249, 250, 251, 252, 316], "94": [249, 252, 316], "unpack": [249, 250, 251, 252], "tensor_kei": [249, 250, 251, 252, 253], "next_valu": [249, 250, 251, 252, 253], "aka": [250, 310], "average_reward": [250, 251, 252], "tdestim": [250, 251, 253], "infti": 251, "valuefunctionbas": 253, "time_dim": [254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266], "old_stat": [254, 256, 258, 260, 262, 263, 265], "new_stat": [254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "did": [255, 310, 311, 318, 321], "rolling_gamma": [258, 259, 260, 261, 263, 264, 265, 266], "g1": [258, 259, 260, 261, 263, 264, 265, 266], "g2": [258, 259, 260, 261, 263, 264, 265, 266], "g3": [258, 259, 260, 261, 263, 264, 265, 266], "g4": [258, 259, 260, 261, 263, 264, 265, 266], "v3": [258, 259, 260, 261, 263, 264, 265, 266], "v4": [258, 259, 260, 261, 263, 264, 265, 266, 309, 311, 317], "out_file_bas": 267, "skip_reset": 267, "dump": 267, "interv": [267, 268, 277, 287, 310, 316], "center_crop": 268, "make_grid": 268, "Will": 268, "grid": 268, "exp_nam": [269, 270, 273, 274, 275, 297, 310], "log_dir": [269, 270, 272, 274, 310], "templat": 269, "csv": [270, 272, 310], "minim": [270, 318], "dependeci": 270, "experiment_nam": [271, 272], "uuid": [271, 310, 321], "date": 271, "logger_typ": 272, "logger_nam": 272, "tensorboard": [272, 274, 320], "wandb": [272, 275, 320], "mlflow": [272, 273], "wandb_kwarg": 272, "mlflow_kwarg": 272, "tracking_uri": 273, "uri": 273, "datastor": 273, "tb_log": 274, "tensoarboard": 274, "sub_traj_len": 276, "min_sub_traj_len": 276, "register_op": [276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 307, 310], "process_optim_batch": [276, 282, 283, 307], "td_out": [276, 284], "_process_optim_batch_hook": [276, 307], "batch_subsampl": 276, "clear_cuda": 277, "pre_optim_step": [277, 307], "counter": [278, 307], "log_pbar": [278, 279, 281, 283, 307, 310], "progress": [278, 279, 281, 285, 307, 310, 312, 321], "count_fram": 278, "pre_steps_log": [278, 279, 307], "count_frames_log": 278, "lognam": 279, "r_train": 279, "log_reward": [279, 310], "loss_compon": 280, "appl": 280, "omit": [280, 311, 316, 318], "optimizer_hook": 280, "record_interv": [281, 309, 310], "record_fram": [281, 288, 309, 310], "policy_explor": [281, 297, 309, 310], "log_kei": [281, 310], "suffix": 281, "underestim": 281, "suppos": [281, 307, 321], "set_exploration_typ": [281, 303, 311, 312, 320], "r_evalu": [281, 309], "flatten_tensordict": [282, 310], "max_dim": 282, "rb_trainer": 282, "batch_process": [282, 283, 284, 307], "post_loss": [282, 307], "999": [283, 310], "jitter": 283, "finfo": 283, "default_dtyp": 283, "get_default_dtyp": 283, "reward_norm": 283, "update_reward_stat": 283, "normalize_reward": 283, "make_train": [284, 303], "_process_batch_hook": [284, 307], "select_kei": [284, 307], "versatil": 285, "lossmodul": [285, 296, 297, 303], "optim_steps_per_batch": [285, 307, 310], "epoch": [285, 311, 315], "clip_grad_norm": 285, "clip_norm": 285, "progress_bar": 285, "tqdm": [285, 309, 311, 312, 315, 316], "save_trainer_interv": 285, "disk": [285, 307, 309, 310, 312, 318], "log_interv": [285, 310], "save_trainer_fil": [285, 307], "datacollectorbas": [287, 290, 291, 297, 303], "update_weights_interv": [287, 310], "sit": [287, 310], "update_weight": 287, "post_step": [287, 307], "cfg": [288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301], "dictconfig": [288, 289, 290, 291, 294, 295, 296, 297, 298, 301], "divid": [288, 305, 309, 315, 316], "unknowingli": 288, "annealing_fram": [288, 309], "init_env_step": [288, 289, 309], "proof_environ": [289, 294, 309], "sta": 289, "ot": 289, "actor_model_explor": [290, 291, 309], "make_env_kwarg": [290, 291], "targetnetupdat": [292, 293, 296, 297], "redqloss_deprec": 293, "actor_net_kwarg": 294, "qvalue_net_kwarg": 294, "observation_kei": 294, "dummi": [294, 309, 321], "parser_env_arg": 294, "parser_model_args_continu": 294, "cattensor": [294, 309, 314, 316, 321], "hydra": 294, "config_stor": 294, "configstor": 294, "halfcheetah": [294, 309], "config_field": 294, "config_cl": 294, "redqmodelconfig": 294, "envconfig": 294, "make_dataclass": 294, "cls_name": 294, "cs": 294, "config_path": 294, "config_nam": 294, "17": [294, 309, 311, 316], "replayargsconfig": 295, "target_net_updat": [297, 309, 310], "constitu": 297, "learnt": [297, 309, 311], "tensorboardlogg": [297, 303], "egreedywrapp": [297, 310, 312], "env_proof": 297, "obs_spec": 297, "net_valu": 297, "dir": [297, 307, 310], "gettempdir": 297, "argpars": [298, 301], "namespac": [298, 301], "parser": [298, 301], "transformed_env_constructor": [298, 303], "num_env_per_collector": [299, 300], "video_tag": 301, "norm_obs_onli": 301, "use_env_cr": 301, "custom_env_mak": 301, "custom_env": 301, "return_transformed_env": 301, "action_dim_gsd": 301, "state_dim_gsd": 301, "obs_norm_state_dict": 301, "wheter": 301, "maker": 301, "asyncdatacollector": 303, "distributedsyncdatacollector": 303, "submitit_delayed_launch": 303, "raycollector": 303, "samplerwithoutreplac": [303, 311, 315, 318], "tensorstorag": 303, "tensordictroundrobinwrit": 303, "d4rlexperiencereplai": 303, "openmlexperiencereplai": 303, "unboundeddiscretetensorspec": [303, 321], "lazystackedtensorspec": 303, "lazystackedcompositespec": 303, "prompttensordicttoken": 303, "rolloutfrommodel": 303, "tokenizeddatasetload": 303, "create_infinite_iter": 303, "consolidate_spec": 303, "check_no_exclusive_kei": 303, "contains_lazy_spec": 303, "check_marl_group": 303, "tensordictrecord": 303, "videorecord": [303, 311], "get_available_librari": 303, "set_exploration_mod": 303, "make_composite_from_td": [303, 316], "terminated_or_trunc": 303, "braxwrapp": 303, "dmcontrolenv": [303, 309, 314, 321], "dmcontrolwrapp": [303, 321], "jumanjienv": 303, "jumanjiwrapp": 303, "multithreadedenvwrapp": 303, "openmlenv": 303, "pettingzooenv": 303, "pettingzoowrapp": 303, "robohiveenv": 303, "smacv2env": 303, "smacv2wrapp": 303, "vmaswrapp": 303, "qvaluehook": 303, "distributionalqvaluehook": 303, "reset_nois": 303, "cemplann": 303, "mpcplannerbas": 303, "mppiplann": 303, "independentnorm": 303, "truncatednorm": 303, "maskedonehotcategor": 303, "inv_softplu": 303, "vmapmodul": 303, "distributionaldqnloss": [303, 310], "discretesacloss": 303, "iqlloss": 303, "cqlloss": 303, "dtloss": 303, "onlinedtloss": 303, "a2closs": 303, "reinforceloss": 303, "dreameractorloss": 303, "dreamermodelloss": 303, "dreamervalueloss": 303, "td0estim": [303, 309], "td1estim": [303, 309], "td0_return_estim": 303, "td0_advantage_estim": 303, "td1_return_estim": 303, "vec_td1_return_estim": 303, "td1_advantage_estim": 303, "vec_td1_advantage_estim": 303, "td_lambda_return_estim": 303, "vec_td_lambda_return_estim": 303, "td_lambda_advantage_estim": 303, "vec_td_lambda_advantage_estim": 303, "generalized_advantage_estim": 303, "vec_generalized_advantage_estim": 303, "reward2go": 303, "distance_loss": [303, 309], "hold_out_net": 303, "hold_out_param": [303, 309], "softupd": [303, 309, 310, 312], "hardupd": [303, 309], "batchsubsampl": [303, 307], "clearcudacach": 303, "countframeslog": 303, "logreward": [303, 307, 310], "optimizerhook": [303, 310], "replaybuffertrain": [303, 307, 310], "rewardnorm": 303, "selectkei": [303, 307], "trainerhookbas": [303, 307, 310], "updateweight": [303, 307, 310], "make_collector_offpolici": 303, "make_collector_onpolici": 303, "make_dqn_loss": 303, "make_redq_loss": 303, "make_redq_model": 303, "make_replay_buff": [303, 309], "make_target_updat": 303, "parallel_env_constructor": [303, 309], "sync_async_collector": 303, "sync_sync_collector": 303, "correct_for_frame_skip": 303, "get_stats_random_rollout": 303, "csvlogger": [303, 310], "mlflowlogg": 303, "wandblogg": 303, "get_logg": 303, "generate_exp_nam": 303, "journei": 304, "textbook": 304, "highlight": 304, "ever": [304, 315], "bump": 304, "think": [304, 311, 315, 321], "benefit": [304, 315, 318], "pr": 304, "ground": [305, 309, 316], "categori": [305, 307], "recycl": [305, 318], "impos": 305, "violat": 305, "noisier": 305, "Their": [305, 315], "sd": 305, "prob_modul": 305, "pick": [305, 309, 310], "tabl": [305, 310], "customari": 305, "hopefulli": [305, 310], "mathbb": [305, 310], "rightarrow": [305, 310], "soften": 305, "backbon": [305, 312, 314, 320], "make_actor": 305, "make_valu": 305, "shared_param": 305, "make_common": 305, "reusabl": [306, 309, 318], "swappabl": [306, 309], "characterist": [306, 309, 316], "trainabl": [306, 309, 317], "whatev": [306, 309], "convent": [306, 309, 312, 315, 316], "smth": [306, 309], "metric": [306, 309], "nutshel": [306, 309], "barto": [306, 315], "chapter": 306, "significantli": [306, 309, 310, 315], "next_stat": 306, "value_net_loss": 306, "pow": [306, 309], "therebi": 306, "room": 306, "convers": 306, "signifi": [306, 315], "underperform": 306, "thin": 306, "intric": 306, "believ": 307, "scheme": [307, 321], "substenti": 307, "_pre_steps_log_hook": 307, "_pre_optim_hook": 307, "sub_batch": 307, "_post_loss_hook": 307, "_post_optim_hook": 307, "post_optim": [307, 310], "_post_optim_log": 307, "post_optim_log": 307, "_post_steps_hook": 307, "_post_steps_log_hook": 307, "post_steps_log": 307, "comment": [307, 310, 320], "extens": [307, 318], "reserv": 307, "logginghook": 307, "logging_hook": 307, "save_dict": 307, "some_valu": 307, "torchsnapshot": 307, "ckpt_backend": 307, "pt": 307, "filepath": 307, "save_train": 307, "load_from_fil": 307, "perfectli": [307, 309, 316], "intern": 308, "author": [309, 310, 311, 312, 315, 316, 318], "vincent": [309, 310, 311, 312, 316, 318], "moen": [309, 310, 311, 312, 316, 318], "assembl": 309, "focus": 309, "straightforward": [309, 310, 318], "overview": [309, 311, 315, 320], "transpar": [309, 312], "understood": 309, "sota": [309, 310, 320], "illustr": [309, 310, 318], "device_count": [309, 310, 312, 317, 321], "loss_dict": 309, "modal": 309, "oblivi": [309, 311, 318], "elementari": 309, "didact": 309, "dilut": 309, "pessimist": [309, 310, 311], "target_actor_network_param": 309, "actor_in_kei": 309, "actor_crit": 309, "noth": [309, 311], "compromis": 309, "hp": 309, "hasattr": 309, "_value_estim": 309, "elif": [309, 310], "notimplementederror": 309, "unknown": 309, "_loss_actor": 309, "td_copi": 309, "actor_network_param": 309, "value_network_param": 309, "_loss_valu": 309, "pred_val": 309, "target_value_network_param": 309, "smooth": [309, 310], "loss_funt": 309, "glue": 309, "_forward": 309, "ndimens": 309, "remaind": 309, "focu": [309, 310, 311], "pixels_onli": [309, 310, 320, 321], "env_librari": 309, "env_task": 309, "env_arg": 309, "friendli": 309, "torchr": 309, "rescal": 309, "presum": 309, "make_transformed_env": 309, "reward_sc": 309, "double_to_float_list": 309, "double_to_float_inv_list": 309, "marker": 309, "env_per_collector": 309, "transform_state_dict": 309, "make_t_env": 309, "adjust": [309, 315, 316], "seem": [309, 312], "cheat": 309, "10m": 309, "cautiou": 309, "deal": [309, 311, 315, 318], "magnitud": 309, "thousand": [309, 312], "get_env_stat": 309, "proof_env": 309, "5000": [309, 311], "maxim": [309, 316], "recal": [309, 311], "ddpgmlpactor": 309, "ddpgmlpqnet": 309, "materi": 309, "ornsteinuhlenbeckprocesswrapp": 309, "make_ddpg_actor": 309, "q_net": 309, "moduless": 309, "sugges": 309, "1_000_000": [309, 312], "tight": 309, "10_000": [309, 311, 318], "traj_len": [309, 312], "make_record": 309, "recorder_obj": 309, "flavor": 309, "circular": 309, "buffer_s": [309, 310], "random_crop_len": 309, "prb": 309, "buffer_scratch_dir": 309, "temporari": 309, "dirrectori": 309, "trajecotri": 309, "25": [309, 311, 316], "sampel": 309, "dataflow": 309, "ceil_div": 309, "utd": [309, 312], "update_to_data": 309, "realiz": 309, "_must_": 309, "001": [309, 316], "outdat": 309, "trick": [309, 310], "despit": 309, "adam": [309, 310, 311, 312, 315, 316], "optimizer_actor": 309, "lr": [309, 310, 311, 312, 315, 316], "weight_decai": [309, 310], "optimizer_valu": 309, "total_collection_step": 309, "pretti": [309, 318], "rewards_ev": 309, "collected_fram": [309, 310], "pbar": [309, 311, 312, 315, 316], "r0": 309, "numel": [309, 311, 312, 317, 318], "current_fram": 309, "sampled_tensordict": 309, "gn1": 309, "clip_grad_norm_": [309, 311, 315, 316], "gn2": 309, "gn": [309, 316], "td_record": 309, "rn": 309, "rs": 309, "set_descript": [309, 311, 312, 315, 316], "2f": 309, "00": [309, 311, 312, 316, 319], "800": 309, "2168": 309, "49it": 309, "1600": 309, "829": [309, 316], "65it": [309, 316], "2400": 309, "02": [309, 310, 311, 312, 316, 319], "1243": 309, "28it": 309, "40": [309, 311, 316, 317], "4000": [309, 311], "2177": 309, "66it": [309, 316], "56": [309, 316], "5600": 309, "2907": 309, "74it": 309, "28": [309, 316], "55": [309, 316], "73": [309, 311, 316], "69": [309, 316], "338": [309, 316], "22": [309, 311, 316, 319], "537": [309, 316], "19": [309, 311, 312, 316], "6400": [309, 320], "1050": 309, "71it": 309, "58": [309, 316], "153": [309, 316], "90": [309, 311, 316], "236": [309, 316], "59": [309, 316, 319], "07": [309, 311, 312, 316], "72": [309, 316], "7200": 309, "713": 309, "50it": 309, "75": [309, 316, 318], "49": [309, 312, 314, 316, 319], "60": [309, 311, 315, 316, 318, 320], "85": [309, 316], "197": [309, 316, 319, 321], "53": [309, 316, 318], "09": [309, 316], "80": [309, 311, 316], "8000": [309, 311], "556": [309, 316], "84it": 309, "360": [309, 316], "63": [309, 316, 318], "311": [309, 316], "79": [309, 316], "54": [309, 316], "8800": 309, "484": [309, 316], "82": [309, 316], "84": [309, 312, 316], "157": [309, 316], "74": [309, 316], "284": [309, 316], "45": [309, 312, 316], "41": [309, 312, 316], "96": [309, 316], "9600": 309, "357": [309, 316], "76it": 309, "70": [309, 311, 316], "107": [309, 316], "249": [309, 316], "68": [309, 316], "10400it": 309, "01it": 309, "137": [309, 316, 319, 321], "62": [309, 316], "65": [309, 316], "plot": [309, 311, 312, 315, 316], "mention": [309, 312, 318, 321], "matplotlib": [309, 311, 312, 315, 316, 318, 321], "pyplot": [309, 311, 312, 315, 316, 318, 321], "plt": [309, 311, 312, 315, 316, 318, 321], "zip": [309, 313], "legend": 309, "xlabel": [309, 312, 315, 316], "ylabel": [309, 315], "tight_layout": 309, "concret": [309, 311], "takeawai": [309, 310], "minut": [309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "414": [309, 316, 319], "mb": [309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321], "coding_ddpg": [309, 319], "jupyt": [309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321], "ipynb": [309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321], "galleri": [309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321], "sphinx": [309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321], "customis": [310, 315], "road": 310, "aspect": 310, "highest": 310, "prerequisit": 310, "familiar": [310, 315, 321], "lookup": 310, "amort": [310, 311], "cart": 310, "pole": 310, "un": 310, "actuat": 310, "frictionless": 310, "upright": 310, "duelingcnndqnet": 310, "is_notebook": 310, "shell": 310, "get_ipython": 310, "__class__": 310, "zmqinteractiveshel": 310, "qtconsol": 310, "terminalinteractiveshel": 310, "ipython": [310, 315, 316], "nameerror": 310, "umbrella": 310, "misplac": 310, "misus": 310, "orchestr": 310, "everyth": [310, 312], "five": [310, 311], "64x64": 310, "motion": [310, 316], "obs_norm_sd": 310, "simpler": 310, "get_norm_stat": 310, "test_env": 310, "make_model": 310, "dummy_env": 310, "output_s": [310, 312], "init_bia": 310, "actor_explor": 310, "eps_greedy_v": 310, "eps_greedy_val_env": 310, "get_replay_buff": 310, "n_optim": 310, "themselv": 310, "simplic": [310, 311, 317, 318], "get_collector": 310, "data_collector": 310, "bunch": 310, "concept": [310, 318], "power": 310, "ubiquit": 310, "get_loss_modul": 310, "target_updat": 310, "995": [310, 316], "sensit": 310, "variat": 310, "2e": [310, 316], "wd": 310, "upd": 310, "harder": [310, 320], "5_000": 310, "500000": 310, "100000": 310, "005": 310, "mandatori": [310, 311, 315, 316], "fairer": 310, "budget": [310, 311], "dqn_exp_": 310, "uuid1": [310, 321], "9895": 310, "0737": 310, "tmp": [310, 318], "tmp2r3uiyaj": 310, "dqn_exp_5aba296c": 310, "61f9": 310, "11ee": [310, 321], "a9cc": [310, 321], "0242ac130002": [310, 321], "registr": 310, "cumbersom": 310, "buffer_hook": 310, "weight_updat": 310, "descript": [310, 311], "aliv": 310, "total_reward": 310, "traceback": [310, 315, 317], "__w": [310, 315, 317], "coding_dqn": [310, 319], "660": 310, "450": [310, 316], "typeerror": 310, "print_csv_files_in_fold": 310, "folder_path": 310, "csv_file": 310, "output_str": 310, "dirpath": 310, "walk": [310, 314], "endswith": 310, "strip": 310, "qvaluenetwork": 310, "worst": 310, "accuraci": 310, "fanci": 310, "299": [310, 316, 319], "1122": 310, "demonstr": [311, 315, 316, 321], "talk": 311, "repetit": 311, "six": 311, "sophist": [311, 315], "invent": 311, "theta_k": 311, "frac": 311, "pi_": 311, "exceed": 311, "discourag": [311, 316], "indispens": 311, "analyz": 311, "lingua": 311, "franca": 311, "defaultdict": [311, 316], "has_cuda": [311, 315, 321], "3e": [311, 312, 315], "max_grad_norm": [311, 315], "big": [311, 318, 321], "ourselv": [311, 321], "benefici": 311, "errat": 311, "hamper": [311, 318], "reactiv": 311, "xy": 311, "sub_batch_s": 311, "num_epoch": [311, 315], "entropy_ep": [311, 315], "generalist": 311, "interchang": [311, 317, 318], "panel": 311, "charact": 311, "inverteddoublependulum": 311, "transmit": 311, "stai": 311, "thumb": 311, "supplementari": [311, 321], "told": 311, "stringent": [311, 315], "nevertheless": [311, 318], "confid": [311, 315], "pack": [311, 321], "ran": 311, "f_": 311, "mu_": 311, "difficulti": [311, 321], "brought": [311, 312], "d_ob": 311, "d_action": 311, "policy_modul": [311, 315], "That": 311, "said": 311, "briefli": [311, 315], "refil": [311, 315], "capac": 311, "conveni": [311, 315, 316], "easiest": [311, 315], "mathemat": [311, 315], "tradeoff": [311, 315], "advantage_modul": 311, "lr_schedul": [311, 316], "cosineannealinglr": [311, 316], "eval_str": 311, "tensordict_data": [311, 315], "data_view": [311, 315], "subdata": [311, 315], "cum_reward_str": 311, "4f": [311, 312, 316], "stepcount_str": 311, "param_group": 311, "lr_str": 311, "eval_rollout": 311, "nice": 311, "389": [311, 316], "08it": [311, 316], "2346": 311, "0871": [311, 316], "0003": [311, 312, 316], "05": [311, 316], "390": [311, 316], "23it": 311, "1116": [311, 316], "3000": 311, "393": [311, 316, 318, 319], "06it": [311, 316], "1502": 311, "395": [311, 316], "67it": [311, 316], "1921": 311, "0002": [311, 312, 316], "397": [311, 316], "87it": 311, "2062": 311, "6000": 311, "80it": 311, "2118": [311, 316], "7000": 311, "394": [311, 316], "89it": 311, "2213": 311, "94it": 311, "2306": 311, "9000": 311, "53it": [311, 316], "2368": 311, "83it": [311, 316], "2456": 311, "cap": [311, 318], "figsiz": [311, 316], "subplot": [311, 316, 321], "titl": [311, 312, 315, 316], "bit": [311, 312, 315, 318], "202": [311, 316, 319], "coding_ppo": [311, 319], "rnn": 312, "lstmmodul": 312, "84x84": 312, "accessori": 312, "stamp": 312, "tensordictprim": 312, "se": 312, "assist": 312, "emb": 312, "n_cell": 312, "customiz": 312, "almost": 312, "bidirect": 312, "wouldn": 312, "make_tensordict_prim": 312, "interpolationmod": 312, "qval": 312, "stoch_polici": 312, "cudnn": 312, "opportun": 312, "coupl": [312, 316, 318], "uniniti": 312, "again": [312, 315, 317, 318, 321], "redund": 312, "strongli": 312, "million": 312, "sake": [312, 317, 318], "20_000": [312, 316], "longest": 312, "npai": 312, "recurrent_st": 312, "action_spread": 312, "1000000": 312, "43": [312, 316], "102": [312, 316], "13it": 312, "0007": [312, 316], "36": [312, 316], "37": [312, 316], "120": [312, 316], "30it": 312, "0005": 312, "150": [312, 316], "158": [312, 316], "75it": 312, "58it": 312, "47": [312, 316], "720": [312, 319], "1896": [312, 319], "dqn_with_rnn": [312, 319], "tutorials_python": 313, "tutorials_jupyt": 313, "distinct": 314, "humanoid": 314, "env1_obs_kei": 314, "observation_stand": 314, "env2_obs_kei": 314, "observation_walk": 314, "tdreset1": 314, "tdreset2": 314, "tdreset": 314, "67": [314, 316], "policy_common": 314, "policy_stand": 314, "policy_walk": 314, "But": 314, "exclusive_field": [314, 320], "stack_dim": [314, 320], "env1_mak": 314, "env2_mak": 314, "_single_task": 314, "td_rollout": 314, "460": [314, 316, 319], "121": [314, 316, 319, 321], "multi_task": [314, 319], "matteo": 315, "bettini": 315, "maddpg": 315, "navig": 315, "lidar": 315, "sensor": 315, "collis": 315, "tie": 315, "mappo": 315, "ippo": 315, "phase": [315, 318], "mathbf": 315, "pi": [315, 316], "_t": [315, 316], "fed": [315, 318], "approxim": [315, 321], "decentralis": 315, "literatur": 315, "overcom": 315, "stationari": 315, "concurr": 315, "analys": 315, "gui": 315, "visualis": 315, "multiagentmlp": 315, "divic": 315, "vmas_devic": 315, "6_000": 315, "team": [315, 320], "n_iter": 315, "minibatch_s": 315, "generalis": 315, "furthermor": 315, "simd": 315, "parallelis": 315, "warp": 315, "todai": 315, "circl": 315, "surround": 315, "dot": [315, 316], "collid": 315, "drag": 315, "elast": 315, "acceler": 315, "penalis": 315, "num_vmas_env": 315, "scenario_nam": 315, "four": [315, 316], "environmnet": 315, "final_rew": 315, "agent_collis": 315, "multiagent_ppo": [315, 319], "293": [315, 316], "919": 315, "stress": 315, "paramount": 315, "n_rollout_step": 315, "evolut": 315, "yourself": 315, "utilis": 315, "n_actions_per_ag": 315, "n_obs_per_ag": 315, "share_parameters_polici": 315, "policy_net": 315, "denot": 315, "unbatched_action_spec": 315, "carefulli": [315, 321], "grant": 315, "converg": 315, "cooper": 315, "share_parameters_crit": 315, "critic_net": 315, "fantast": 315, "minibatch": 315, "desc": 315, "episode_reward_mean": 315, "episode_reward_mean_list": 315, "critic_param": 315, "target_critic_param": 315, "refresh": 315, "xvfb": 315, "pyvirtualdisplai": 315, "1400": [315, 316], "900": 315, "pil": 315, "rendering_callback": 315, "fromarrai": 315, "rgb_arrai": [315, 316], "gif": 315, "save_al": 315, "append_imag": 315, "profici": 315, "master": 315, "440": [315, 316, 319], "1074": 315, "freeli": 316, "touch": 316, "undertaken": 316, "broader": 316, "wider": 316, "algebra": 316, "acquaint": 316, "avenu": 316, "_apply_to_composit": 316, "default_x": 316, "default_i": 316, "torqu": 316, "upward": 316, "angular": 316, "sin": 316, "rad": 316, "sec": 316, "gravit": 316, "angl": 316, "deleg": 316, "new_th": 316, "new_thdot": 316, "thdot": 316, "g_forc": 316, "max_torqu": 316, "angle_norm": 316, "max_spe": 316, "albeit": 316, "gen_param": 316, "high_th": 316, "high_thdot": 316, "low_th": 316, "low_thdot": 316, "rng": 316, "lazili": 316, "trivial": 316, "neither": 316, "shortcut": [316, 321], "irrelev": 316, "_make_spec": 316, "td_param": 316, "pseudo": 316, "render_mod": 316, "render_fp": 316, "random_": 316, "_make_step": 316, "staticmethod": 316, "complic": [316, 318, 321], "showcas": 316, "skeleton": 316, "_apply_transform": [316, 321], "_inv_apply_transform": [316, 321], "subset": [316, 317], "unitari": 316, "sine": 316, "cosin": 316, "sintransform": 316, "costransform": 316, "t_sin": 316, "t_co": 316, "cat_transform": 316, "mdp": 316, "convin": 316, "simple_rollout": 316, "_data": 316, "unexplor": 316, "assumpt": [316, 318], "recreat": 316, "init_td": 316, "traj_return": 316, "last_reward": 316, "is_ipython": 316, "inlin": 316, "get_backend": 316, "ion": 316, "gcf": 316, "clear_output": 316, "625": 316, "0488": 316, "0748": 316, "519": 316, "41it": 316, "0499": 316, "4472": 316, "073": 316, "55it": 316, "0685": 316, "0408": 316, "552": 316, "60it": 316, "5154": 316, "9086": 316, "527": 316, "63it": 316, "9385": 316, "155": 316, "2568": 316, "4981": 316, "223": 316, "8929": 316, "4491": 316, "581": 316, "68it": 316, "3233": 316, "0664": 316, "596": 316, "1021": 316, "5263": 316, "9579": 316, "5807": 316, "8075": 316, "212": 316, "2009": 316, "5525": 316, "914": 316, "2894": 316, "0115": 316, "52": [316, 319], "31": 316, "0977": 316, "1845": 316, "1830": 316, "4858": 316, "233": 316, "2863": 316, "0297": 316, "464": 316, "4617": 316, "5997": 316, "904": 316, "1647": 316, "0777": 316, "901": 316, "4709": 316, "6813": 316, "8317": 316, "3221": 316, "5554": 316, "276": 316, "69it": 316, "3353": 316, "701": 316, "8570": 316, "6656": 316, "463": 316, "7779": 316, "6911": 316, "875": 316, "70it": 316, "0796": 316, "7082": 316, "308": 316, "0421": 316, "1496": 316, "5037": 316, "1755": 316, "5029": 316, "9454": 316, "665": 316, "9330": 316, "444": 316, "0995": 316, "6294": 316, "3146": 316, "2909": 316, "461": 316, "9720": 316, "1298": 316, "91": [316, 318], "9923": 316, "0345": 316, "3438": 316, "3688": 316, "424": 316, "6953": 316, "5233": 316, "411": 316, "4288": 316, "8011": 316, "5329": 316, "2677": 316, "71": 316, "6969": 316, "7010": 316, "376": 316, "9352": 316, "7707": 316, "6178": 316, "5646": 316, "348": 316, "7304": 316, "9407": 316, "942": 316, "39": 316, "3882": 316, "7604": 316, "3507": 316, "8928": 316, "258": 316, "6978": 316, "4641": 316, "549": 316, "6047": 316, "544": 316, "5005": 316, "4136": 316, "2993": 316, "3222": 316, "4046": 316, "7314": 316, "275": 316, "6331": 316, "9318": 316, "961": 316, "8331": 316, "1604": 316, "48": 316, "4099": 316, "4761": 316, "125": [316, 318], "4262": 316, "6363": 316, "382": 316, "3593": 316, "7377": 316, "51": [316, 318], "2847": 316, "3443": 316, "867": 316, "3592": 316, "4760": 316, "441": 316, "9950": 316, "8021": 316, "77": 316, "3528": 316, "1214": 316, "708": 316, "4023": 316, "3583": 316, "041": 316, "3801": 316, "0310": 316, "57": [316, 318, 319, 320], "4244": 316, "2039": 316, "4850": 316, "8748": 316, "706": 316, "4897": 316, "9210": 316, "8964": 316, "61": 316, "0832": 316, "3934": 316, "456": 316, "8971": 316, "2933": 316, "3377": 316, "6996": 316, "2274": 316, "8916": 316, "098": 316, "2660": 316, "9110": 316, "66": 316, "4503": 316, "6956": 316, "9172": 316, "4026": 316, "946": 316, "9229": 316, "5205": 316, "294": 316, "8872": 316, "6637": 316, "019": 316, "9281": 316, "2082": 316, "724": 316, "8561": 316, "6574": 316, "4138": 316, "5230": 316, "385": 316, "4065": 316, "5642": 316, "921": 316, "9786": 316, "4129": 316, "5831": 316, "266": 316, "76": [316, 318], "7723": 316, "4152": 316, "608": 316, "0898": 316, "78": 316, "5155": 316, "5376": 316, "5616": 316, "4094": 316, "283": 316, "5333": 316, "4803": 316, "895": 316, "6566": 316, "2588": 316, "662": 316, "4732": 316, "7503": 316, "068": 316, "83": 316, "0714": 316, "3370": 316, "059": 316, "8612": 316, "1915": 316, "3855": 316, "0349": 316, "86": 316, "9644": 316, "4538": 316, "445": 316, "0392": 316, "4080": 316, "1648": 316, "9599": 316, "143": [316, 318], "89": [316, 318], "4284": 316, "5946": 316, "2590": 316, "9181": 316, "4621": 316, "9075": 316, "674": 316, "92": 316, "1772": 316, "9444": 316, "351": 316, "93": 316, "9391": 316, "5595": 316, "8673": 316, "6240": 316, "5919": 316, "0018": 316, "1071": 316, "9127": 316, "251": 316, "97": 316, "9799": 316, "3131": 316, "9612": 316, "9705": 316, "8741": 316, "2230": 316, "0972": 316, "0337": 316, "0350": 316, "0654": 316, "2441": 316, "4596": 316, "362": 316, "103": 316, "4362": 316, "171": 316, "104": 316, "4041": 316, "6907": 316, "105": 316, "4664": 316, "2760": 316, "0299": 316, "9712": 316, "349": 316, "3332": 316, "4479": 316, "772": 316, "108": 316, "4357": 316, "9591": 316, "543": 316, "109": [316, 318], "6216": 316, "1353": 316, "692": 316, "110": 316, "6261": 316, "7086": 316, "496": 316, "111": 316, "7758": 316, "9818": 316, "112": [316, 318], "7772": 316, "5055": 316, "113": 316, "5840": 316, "3180": 316, "2976": 316, "2083": 316, "115": [316, 318], "5275": 316, "6873": 316, "116": 316, "64it": 316, "4107": 316, "1624": 316, "117": [316, 318], "6372": 316, "2571": 316, "118": 316, "4039": 316, "4428": 316, "119": 316, "4728": 316, "5628": 316, "6767": 316, "2466": 316, "522": 316, "5873": 316, "5072": 316, "122": [316, 318, 321], "6548": 316, "3766": 316, "123": 316, "5134": 316, "1955": 316, "124": 316, "2481": 316, "0591": 316, "4500": 316, "3368": 316, "126": 316, "9708": 316, "7059": 316, "127": [316, 318], "3031": 316, "2534": 316, "843": 316, "3327": 316, "6193": 316, "129": 316, "4831": 316, "1172": 316, "2593": 316, "4219": 316, "962": 316, "4800": 316, "8380": 316, "899": 316, "132": 316, "2721": 316, "9048": 316, "166": 316, "133": 316, "2419": 316, "5248": 316, "134": 316, "2139": 316, "4278": 316, "135": 316, "0690": 316, "5140": 316, "136": 316, "1140": 316, "7402": 316, "5356": 316, "1636": 316, "138": 316, "0671": 316, "8798": 316, "139": 316, "8918": 316, "3298": 316, "307": 316, "140": 316, "1779": 316, "141": [316, 318], "1771": 316, "3624": 316, "936": 316, "142": 316, "1683": 316, "4810": 316, "9373": 316, "4435": 316, "144": 316, "4396": 316, "8092": 316, "145": 316, "2572": 316, "146": 316, "4212": 316, "0260": 316, "147": 316, "0939": 316, "6478": 316, "605": 316, "148": 316, "6606": 316, "7289": 316, "149": 316, "14it": 316, "9300": 316, "7193": 316, "563": 316, "52it": 316, "1166": 316, "8514": 316, "384": [316, 318, 319], "151": 316, "9108": 316, "0672": 316, "292": 316, "152": [316, 318], "8591": 316, "3768": 316, "24it": 316, "9976": 316, "154": 316, "36it": 316, "0576": 316, "0067": 316, "935": 316, "46it": 316, "4199": 316, "1722": 316, "156": 316, "8310": 316, "3466": 316, "57it": 316, "8631": 316, "2492": 316, "8763": 316, "1277": 316, "159": 316, "62it": 316, "5562": 316, "7446": 316, "1082": 316, "9830": 316, "161": 316, "0946": 316, "5229": 316, "162": 316, "4574": 316, "6900": 316, "163": 316, "2229": 316, "0318": 316, "482": 316, "164": 316, "0543": 316, "0817": 316, "761": 316, "165": 316, "2809": 316, "5118": 316, "366": 316, "1142": 316, "5635": 316, "167": 316, "1949": 316, "2327": 316, "982": 316, "168": 316, "0967": 316, "0387": 316, "457": 316, "169": 316, "0782": 316, "2150": 316, "170": 316, "5222": 316, "3725": 316, "9288": 316, "9837": 316, "172": 316, "1416": 316, "1099": 316, "173": 316, "8620": 316, "8475": 316, "174": 316, "1807": 316, "4375": 316, "175": 316, "1148": 316, "0645": 316, "2751": 316, "8313": 316, "177": 316, "9286": 316, "9770": 316, "178": 316, "5735": 316, "2837": 316, "179": 316, "2926": 316, "9489": 316, "180": 316, "1507": 316, "181": 316, "8724": 316, "3567": 316, "182": 316, "3574": 316, "6140": 316, "183": [316, 318], "7895": 316, "2518": 316, "184": 316, "6146": 316, "185": [316, 318], "8776": 316, "7358": 316, "186": 316, "3722": 316, "8428": 316, "187": 316, "2656": 316, "7955": 316, "188": 316, "0092": 316, "7106": 316, "189": 316, "2264": 316, "6919": 316, "190": 316, "1438": 316, "1362": 316, "191": 316, "0618": 316, "8217": 316, "192": 316, "9420": 316, "6765": 316, "193": 316, "7745": 316, "0709": 316, "194": 316, "9478": 316, "6867": 316, "195": 316, "6507": 316, "6225": 316, "196": 316, "2244": 316, "2195": 316, "5385": 316, "9263": 316, "198": 316, "1878": 316, "2374": 316, "199": 316, "8054": 316, "3504": 316, "557": 316, "0766": 316, "6825": 316, "201": 316, "2011": 316, "8393": 316, "0803": 316, "7815": 316, "203": 316, "8363": 316, "2460": 316, "204": 316, "8643": 316, "2191": 316, "593": 316, "205": 316, "0773": 316, "1343": 316, "206": 316, "8657": 316, "207": 316, "9304": 316, "7584": 316, "208": 316, "8752": 316, "2307": 316, "209": 316, "5250": 316, "4869": 316, "7837": 316, "5762": 316, "211": 316, "6661": 316, "8600": 316, "2502": 316, "1752": 316, "213": 316, "3075": 316, "8871": 316, "214": 316, "9406": 316, "8090": 316, "215": 316, "6291": 316, "8923": 316, "876": 316, "216": 316, "9504": 316, "21e": 316, "217": 316, "7431": 316, "7880": 316, "218": 316, "4463": 316, "5432": 316, "219": 316, "3793": 316, "3313": 316, "220": 316, "8843": 316, "0369": 316, "065": 316, "221": 316, "4828": 316, "8391": 316, "222": 316, "6265": 316, "2913": 316, "947": 316, "5541": 316, "1252": 316, "224": 316, "7342": 316, "2396": 316, "225": 316, "5936": 316, "1924": 316, "226": 316, "9975": 316, "2045": 316, "227": 316, "8367": 316, "9540": 316, "228": 316, "7259": 316, "6743": 316, "229": 316, "4827": 316, "7528": 316, "230": 316, "7361": 316, "8756": 316, "231": 316, "7646": 316, "232": 316, "5426": 316, "8385": 316, "5662": 316, "8585": 316, "234": 316, "8234": 316, "7930": 316, "235": 316, "2648": 316, "9309": 316, "6817": 316, "237": 316, "0943": 316, "1533": 316, "238": 316, "3045": 316, "0483": 316, "239": 316, "4128": 316, "2528": 316, "240": [316, 320, 321], "6415": 316, "0201": 316, "241": 316, "4437": 316, "4365": 316, "242": 316, "0358": 316, "4943": 316, "243": 316, "1272": 316, "5003": 316, "1180": 316, "2637": 316, "245": 316, "7197": 316, "0873": 316, "246": 316, "2917": 316, "247": 316, "0160": 316, "0738": 316, "248": 316, "3689": 316, "0120": 316, "5570": 316, "0475": 316, "250": [316, 317], "4423": 316, "2220": 316, "6803": 316, "252": 316, "1465": 316, "7214": 316, "253": 316, "8801": 316, "7034": 316, "254": 316, "9136": 316, "4076": 316, "7589": 316, "5013": 316, "8150": 316, "2241": 316, "257": 316, "0753": 316, "8081": 316, "1951": 316, "8314": 316, "259": 316, "0038": 316, "260": 316, "0889": 316, "4616": 316, "261": 316, "0655": 316, "262": 316, "8333": 316, "9476": 316, "263": 316, "7554": 316, "3798": 316, "264": 316, "3717": 316, "3947": 316, "529": 316, "265": 316, "3060": 316, "6495": 316, "7467": 316, "8889": 316, "267": 316, "8457": 316, "591": [316, 319], "268": 316, "7137": 316, "0536": 316, "771": 316, "269": 316, "1651": 316, "388": 316, "270": 316, "8246": 316, "5709": 316, "281": 316, "271": 316, "7502": 316, "0521": 316, "032": 316, "272": 316, "5475": 316, "7253": 316, "273": 316, "2856": 316, "7130": 316, "274": 316, "2778": 316, "4122": 316, "8368": 316, "1841": 316, "9622": 316, "1603": 316, "003e": 316, "277": 316, "0247": 316, "346": 316, "278": 316, "2238": 316, "6418": 316, "279": 316, "0626": 316, "2538": 316, "280": 316, "0149": 316, "7380": 316, "2167": 316, "8911": 316, "282": 316, "8725": 316, "1983": 316, "8142": 316, "3709": 316, "4989": 316, "285": 316, "6464": 316, "6210": 316, "286": 316, "9726": 316, "0820": 316, "287": 316, "6975": 316, "9091": 316, "288": 316, "4926": 316, "4791": 316, "289": 316, "0905": 316, "3500": 316, "290": 316, "2287": 316, "291": 316, "9918": 316, "5543": 316, "9245": 316, "6444": 316, "631": 316, "0448": 316, "4769": 316, "8566": 316, "7208": 316, "295": 316, "0966": 316, "296": 316, "5303": 316, "1537": 316, "023": 316, "297": 316, "2682": 316, "564": 316, "298": 316, "4318": 316, "5063": 316, "7475": 316, "4190": 316, "8186": 316, "5077": 316, "301": 316, "1883": 316, "5291": 316, "472": 316, "302": 316, "1256": 316, "3998": 316, "303": [316, 317], "3622": 316, "0930": 316, "626": 316, "304": 316, "9500": 316, "0075": 316, "5664": 316, "305": 316, "5697": 316, "3024": 316, "306": 316, "3117": 316, "0052": 316, "006": 316, "0981": 316, "9312": 316, "3873": 316, "309": 316, "0411": 316, "2650": 316, "310": 316, "1656": 316, "0228": 316, "004": 316, "1196": 316, "2478": 316, "312": 316, "7353": 316, "0812": 316, "313": 316, "3022": 316, "758": 316, "314": 316, "1406": 316, "4626": 316, "315": 316, "2156": 316, "851": 316, "316": 316, "1953": 316, "3774": 316, "317": 316, "6385": 316, "9917": 316, "318": 316, "2764": 316, "905": 316, "319": 316, "6391": 316, "9317": 316, "320": [316, 321], "9748": 316, "2679": 316, "321": 316, "8495": 316, "5125": 316, "8177": 316, "6602": 316, "323": 316, "0704": 316, "5776": 316, "324": 316, "9833": [316, 320], "1339": 316, "402": 316, "325": 316, "1238": 316, "326": 316, "9299": 316, "0227": 316, "327": 316, "7727": 316, "1607": 316, "336": 316, "328": 316, "3958": 316, "3223": 316, "763": 316, "329": 316, "4742": 316, "1797": 316, "330": 316, "0144": 316, "0085": 316, "791": 316, "331": 316, "8284": 316, "0428": 316, "332": 316, "0098": 316, "7365": 316, "333": 316, "4566": 316, "0781": 316, "086": 316, "334": 316, "3355": 316, "0230": 316, "335": 316, "9346": 316, "0423": 316, "076": 316, "3711": 316, "1335": 316, "6855": 316, "337": 316, "0304": 316, "0023": 316, "8459": 316, "9998": 316, "4399": 316, "339": 316, "2303": 316, "1346": 316, "340": 316, "2915": 316, "7116": 316, "341": 316, "5560": 316, "0487": 316, "342": 316, "5119": 316, "061": 316, "343": 316, "3305": 316, "3705": 316, "957": 316, "344": 316, "6068": 316, "2112": 316, "345": 316, "5731": 316, "3897": 316, "0376": 316, "347": 316, "0434": 316, "012": 316, "1300": 316, "1215": 316, "0968": 316, "0885": 316, "350": 316, "1348": 316, "0073": 316, "5052": 316, "4184": 316, "2817": 316, "352": 316, "8887": 316, "353": 316, "4779": 316, "1009": 316, "354": 316, "0604": 316, "599": 316, "355": 316, "4486": 316, "1176": 316, "656": 316, "356": 316, "2436": 316, "0668": 316, "8849": 316, "0012": 316, "358": 316, "7511": 316, "8804": 316, "359": 316, "8870": 316, "6728": 316, "8841": 316, "5508": 316, "361": 316, "5242": 316, "0268": 316, "3232": 316, "0013": 316, "6185": 316, "363": 316, "1378": 316, "0204": 316, "364": 316, "0355": 316, "685": 316, "365": 316, "4884": 316, "0231": 316, "0770": 316, "0014": 316, "6793": 316, "367": 316, "9834": 316, "863": 316, "368": 316, "6709": 316, "462": 316, "369": 316, "5199": 316, "9790": 316, "370": 316, "9401": 316, "7802": 316, "371": 316, "6723": 316, "372": 316, "2678": 316, "6201": 316, "373": 316, "2184": 316, "7385": 316, "374": 316, "6344": 316, "617": 316, "375": 316, "9945": 316, "0772": 316, "567": 316, "7576": 316, "0398": 316, "377": 316, "3396": 316, "0022": 316, "094": 316, "378": 316, "3073": 316, "4018": 316, "379": 316, "1869": 316, "380": 316, "0481": 316, "1117": 316, "381": 316, "6823": 316, "981": 316, "8305": 316, "0210": 316, "383": 316, "4908": 316, "0272": 316, "538": 316, "3267": 316, "0111": 316, "7965": 316, "1796": 316, "0039": 316, "5396": 316, "386": 316, "3757": 316, "0490": 316, "387": 316, "1394": 316, "4187": 316, "2986": 316, "7954": 316, "1274": 316, "0063": 316, "813": 316, "8706": 316, "0114": 316, "391": 316, "6922": 316, "0004": 316, "2423": 316, "392": 316, "9115": 316, "2602": 316, "2449": 316, "0783": 316, "0631": 316, "0057": 316, "7444": 316, "3339": 316, "0167": 316, "396": 316, "4806": 316, "4171": 316, "067": 316, "398": 316, "2618": 316, "5809": 316, "399": 316, "0054": 316, "3364": 316, "8733": 316, "0184": 316, "401": 316, "9137": 316, "0113": 316, "025": 316, "0386": 316, "0625": 316, "403": 316, "1332": 316, "0582": 316, "7816": 316, "404": 316, "8341": 316, "0941": 316, "854": 316, "405": 316, "8615": 316, "588": 316, "406": 316, "3849": 316, "008": 316, "407": 316, "9395": 316, "0765": 316, "055": 316, "408": 316, "2685": 316, "2235": 316, "688": 316, "409": 316, "3052": 316, "4249": 316, "410": 316, "20it": 316, "6806": 316, "6383": 316, "3721": 316, "9981": 316, "412": 316, "86it": 316, "1862": 316, "822": 316, "413": 316, "9811": 316, "0171": 316, "013": 316, "25it": 316, "0252": 316, "0049": 316, "6205": 316, "415": 316, "38it": 316, "1108": 316, "4921": 316, "416": 316, "47it": 316, "9142": 316, "8130": 316, "417": 316, "1725": 316, "0036": 316, "3196": 316, "418": 316, "7795": 316, "0242": 316, "799": 316, "419": 316, "61it": 316, "7737": 316, "0138": 316, "420": 316, "1462": 316, "0053": 316, "421": 316, "9226": 316, "6139": 316, "422": 316, "9889": 316, "0403": 316, "423": 316, "6194": 316, "0032": 316, "3989": 316, "0104": 316, "425": 316, "9960": 316, "0009": 316, "6009": 316, "426": [316, 319, 320], "2697": 316, "0914": 316, "427": 316, "4256": 316, "1114": 316, "428": 316, "9862": 316, "1932": 316, "429": 316, "0637": 316, "0623": 316, "082": 316, "430": 316, "9906": 316, "2031": 316, "431": 316, "9948": 316, "0895": 316, "432": 316, "1970": 316, "0256": 316, "433": 316, "4231": 316, "0449": 316, "644": 316, "434": 316, "1039": 316, "1973": 316, "435": 316, "4561": 316, "1225": 316, "436": 316, "0211": 316, "2125": 316, "437": 316, "3866": 316, "0050": 316, "7202": 316, "438": 316, "6388": 316, "0072": 316, "439": 316, "1187": 316, "0015": 316, "5116": 316, "0432": 316, "0025": 316, "7809": 316, "1925": 316, "0103": 316, "442": 316, "9570": 316, "443": 316, "5601": 316, "0165": 316, "0047": 316, "6061": 316, "2746": 316, "0027": 316, "7887": 316, "446": 316, "1835": 316, "0035": 316, "855": 316, "447": 316, "8420": 316, "548": 316, "448": 316, "2653": 316, "0126": 316, "9736": 316, "449": 316, "0594": 316, "0119": 316, "6196": 316, "4509": 316, "0373": 316, "451": 316, "0620": 316, "992": 316, "452": 316, "6898": 316, "3235": 316, "687": 316, "453": 316, "5879": 316, "454": 316, "8406": 316, "0694": 316, "455": 316, "8259": 316, "0235": 316, "8500": 316, "0024": 316, "4054": 316, "458": 316, "2027": 316, "0894": 316, "459": 316, "5966": 316, "6942": 316, "0016": 316, "4254": 316, "6703": 316, "0145": 316, "8124": 316, "0218": 316, "9196": 316, "0188": 316, "8986": 316, "0884": 316, "0084": 316, "5624": 316, "465": 316, "8862": 316, "0006": 316, "5384": 316, "466": 316, "5837": 316, "467": 316, "8954": 316, "0101": 316, "6751": 316, "468": 316, "8063": 316, "0122": 316, "9635": 316, "469": 316, "0692": 316, "4216": 316, "470": 316, "1227": 316, "0586": 316, "162e": 316, "471": 316, "9690": 316, "0074": 316, "4166": 316, "6324": 316, "473": 316, "0778": 316, "474": 316, "8548": 316, "0017": 316, "4408": 316, "475": 316, "8125": 316, "1515": 316, "476": 316, "2733": 316, "0044": 316, "2836": 316, "477": 316, "7497": 316, "7681": 316, "478": 316, "8547": 316, "0105": 316, "7212": 316, "479": 316, "9848": 316, "0019": 316, "6498": 316, "480": 316, "1987": 316, "0011": 316, "5473": 316, "481": 316, "8991": 316, "0033": 316, "6091": 316, "09it": 316, "9189": 316, "5771": 316, "483": 316, "6781": 316, "7542": 316, "5959": 316, "0064": 316, "4295": 316, "485": 316, "2547": 316, "486": 316, "0636": 316, "547": 316, "487": 316, "0065": 316, "488": 316, "1694": 316, "0083": 316, "5759": 316, "489": 316, "0493": 316, "0021": 316, "7805": 316, "490": 316, "0950": 316, "497": 316, "491": 316, "9717": 316, "3672": 316, "492": 316, "0207": 316, "493": 316, "8266": 316, "0069": 316, "5365": 316, "494": 316, "2623": 316, "5078": 316, "495": 316, "4545": 316, "09636": 316, "8754": 316, "0010": 316, "498": 316, "0031": 316, "8269": 316, "499": 316, "4082": 316, "6642": 316, "2284": 316, "501": 316, "9130": 316, "0008": 316, "502": 316, "2944": 316, "503": 316, "7624": 316, "0056": 316, "3858": 316, "504": 316, "0890": 316, "0042": 316, "505": 316, "7505": 316, "2157": 316, "506": 316, "8394": 316, "3413": 316, "507": 316, "9609": 316, "0041": 316, "6905": 316, "508": 316, "8467": 316, "4409": 316, "509": 316, "510": 316, "8128": 316, "3559": 316, "511": 316, "1479": 316, "0264": 316, "1589": 316, "566": 316, "513": 316, "2756": 316, "0046": 316, "5266": 316, "514": 316, "9873": 316, "0112": 316, "9314": 316, "515": 316, "3791": 316, "0721": 316, "516": 316, "4580": 316, "0758": 316, "6114": 316, "517": 316, "2431": 316, "518": 316, "1958": 316, "5553": 316, "8924": 316, "0097": 316, "520": 316, "3737": 316, "0234": 316, "521": 316, "9125": 316, "4623": 316, "3230": 316, "0589": 316, "3784": 316, "523": 316, "9482": 316, "0051": 316, "524": 316, "1979": 316, "0045": 316, "6401": 316, "525": 316, "1588": 316, "0048": 316, "6255": 316, "526": 316, "6084": 316, "3477": 316, "1475": 316, "0209": 316, "3456": 316, "528": 316, "7611": 316, "1040": 316, "0099": 316, "0173": 316, "643": 316, "530": 316, "8189": 316, "4358": 316, "531": 316, "9897": 316, "532": 316, "1548": 316, "9751": 316, "533": 316, "6362": 316, "7495": 316, "534": 316, "1749": 316, "9513": 316, "535": 316, "7708": 316, "0371": 316, "536": 316, "2649": 316, "0437": 316, "5491": 316, "0276": 316, "6426": 316, "7294": 316, "078e": 316, "539": 316, "9928": 316, "576": 316, "540": 316, "7937": 316, "0124": 316, "9664": 316, "541": 316, "3342": 316, "542": 316, "2046": 316, "5496": 316, "0956": 316, "0059": 316, "545": 316, "9028": 316, "5843": 316, "546": 316, "0674": 316, "0178": 316, "797": 316, "2815": 316, "0599": 316, "1587": 316, "9276": 316, "8228": 316, "6164": 316, "551": 316, "6850": 316, "9167": 316, "3092": 316, "0670": 316, "9177": 316, "553": 316, "1599": 316, "0043": 316, "554": 316, "4672": 316, "6367": 316, "555": 316, "19it": 316, "3657": 316, "6694": 316, "2622": 316, "0372": 316, "4841": 316, "558": [316, 317, 319], "07it": 316, "2707": 316, "0058": 316, "757": 316, "559": 316, "2267": 316, "5415": 316, "560": 316, "37it": 316, "4556": 316, "0163": 316, "561": 316, "1839": 316, "0809": 316, "6262": 316, "562": 316, "0278": 316, "1112": 316, "6155": 316, "565": 316, "1427": 316, "3582": 316, "624": 316, "7870": 316, "9490": 316, "0439": 316, "8796": 316, "568": 316, "8026": 316, "2720": 316, "612": 316, "569": 316, "3147": 316, "8486": 316, "570": 316, "7917": 316, "0129": 316, "571": 316, "9553": 316, "0020": 316, "6871": 316, "572": 316, "3132": 316, "0159": 316, "8646": 316, "573": 316, "5320": 316, "0269": 316, "574": 316, "2955": 316, "0245": 316, "575": 316, "3347": 316, "0179": 316, "9718": 316, "1629": 316, "804": 316, "577": 316, "4164": 316, "0070": 316, "4335": 316, "578": 316, "579": 316, "3049": 316, "9063": 316, "580": 316, "8785": 316, "3295": 316, "5184": 316, "0546": 316, "582": 316, "4589": 316, "583": 316, "4697": 316, "2476": 316, "584": 316, "2397": 316, "585": 316, "4953": 316, "1775": 316, "586": 316, "2258": 316, "0110": 316, "7671": 316, "587": 316, "3981": 316, "8590": 316, "589": 316, "9820": 316, "4221": 316, "590": 316, "1293": 316, "0116": 316, "868": 316, "1675": 316, "5931": 316, "592": 316, "2910": 316, "5219": 316, "2124": 316, "1730": 316, "737": 316, "594": 316, "2914": 316, "0206": 316, "595": 316, "0172": 316, "3982": 316, "0945": 316, "0121": 316, "4789": 316, "597": 316, "3805": 316, "4074": 316, "598": 316, "3310": 316, "5065": 316, "6028": 316, "6316": 316, "6724": 316, "6523": 316, "601": 316, "0136": 316, "4298": 316, "602": 316, "3524": 316, "2629": 316, "603": 316, "2635": 316, "7839": 316, "604": 316, "6041": 316, "8027": 316, "4170": 316, "4675": 316, "606": 316, "3153": 316, "9316": 316, "607": 316, "0649": 316, "9722": 316, "7989": 316, "0329": 316, "609": 316, "1976": 316, "6852": 316, "610": 316, "4793": 316, "1255": 316, "611": 316, "4581": 316, "0394": 316, "2047": 316, "0326": 316, "613": 316, "8967": 316, "8619": 316, "614": 316, "5906": 316, "6491": 316, "615": 316, "6634": 316, "4394": 316, "616": 316, "0624": 316, "0061": 316, "5676": 316, "3259": 316, "0131": 316, "7733": 316, "618": 316, "7515": 316, "0189": 316, "5575": 316, "619": 316, "9313": 316, "6286": 316, "620": 316, "4325": 316, "7832": 316, "621": 316, "1134": 316, "622": 316, "4572": 316, "0500": 316, "5838": 316, "623": 316, "3818": 316, "8623": 316, "1253": 316, "6622": 316, "subject": 316, "saw": [316, 318], "explain": 317, "semat": 317, "r3mtransform": 317, "embodi": 317, "ai": 317, "env_transform": [317, 321], "pretrained_model": [317, 319], "got": 317, "wiser": 317, "conclud": 317, "_storag": [317, 318], "731": [317, 319], "supervis": [318, 321], "pull": 318, "temporarili": 318, "drastic": 318, "ram": [318, 321], "batteri": 318, "dataliststorag": 318, "datalazytensorstorag": 318, "tensordidct": 318, "basi": 318, "datalazymemmapstorag": 318, "buffer_list": 318, "lowest": 318, "medium": 318, "buffer_lazytensor": 318, "buffer_lazymemmap": 318, "fullest": 318, "organ": 318, "convini": 318, "mydata": 318, "background": 318, "question": [318, 320], "_i": 318, "artifici": 318, "0892946e": 318, "she": 318, "augment": 318, "proport": 318, "hist": 318, "barcontain": 318, "artist": 318, "revert": 318, "expens": 318, "reappear": 318, "unfold": 318, "problemat": 318, "window": 318, "4th": 318, "rb_tutori": [318, 319], "874": 319, "torchrl_demo": [319, 320], "torchrl_env": [319, 321], "1121": 319, "1073": 319, "demo": 320, "icml": 320, "vmoen": 320, "fb": 320, "invest": 320, "platform": 320, "media": 320, "truli": 320, "predominantli": 320, "tensordict1": 320, "tensordict2": 320, "tensordict_sampl": 320, "_sampler": 320, "_sum_tre": 320, "modulenotfounderror": 320, "28791671991348267": 320, "06984968483448029": 320, "gym_env": 320, "noopresetenv": [320, 321], "lazyconv2d": 320, "backbone_modul": 320, "params_expand": 320, "tensordict_exp": 320, "base_modul": 320, "0137": 320, "1524": 320, "0641": 320, "viewbackward0": 320, "asstridedbackward0": 320, "8728": 320, "1334": 320, "3494": 320, "6887": 320, "6402": 320, "_safetanhbackward": 320, "1132": 320, "1762": 320, "3430": 320, "2668": 320, "2918": 320, "6239": 320, "roughli": 320, "tensordicts_prealloc": 320, "tensordicts_stack": 320, "tensordict_rollout": [320, 321], "disclaim": 320, "concatmodul": 320, "loss_td": 320, "year": 320, "roadmap": 320, "compris": 320, "contributor": 320, "curiou": 320, "nascent": 320, "unsupervis": 321, "rom": 321, "licens": 321, "pygam": 321, "unifi": 321, "insid": 321, "_build_env": 321, "sphinx_gallery_start_ignor": 321, "filterwarn": 321, "sphinx_gallery_end_ignor": 321, "adventur": 321, "airraid": 321, "alien": 321, "amidar": 321, "assault": 321, "7060": 321, "deserv": 321, "__episode__": 321, "__trajectory__": 321, "void": 321, "reproduct": 321, "tensordict_tprim": 321, "imshow": 321, "axesimag": 321, "0x7fc79693c040": 321, "inconsist": 321, "0x7fc75c4bd120": 321, "swingup": 321, "wrapper1": 321, "wrapper2": 321, "obviou": 321, "truth": 321, "env0": 321, "env_transformed_bi": 321, "stanc": 321, "transformeddistribut": 321, "base_dist": 321, "concat": 321, "mofidi": 321, "transformedenviron": 321, "moderet": 321, "computation": 321, "legitim": 321, "incom": 321, "amongst": 321, "wor": 321, "convention": 321, "scope": 321, "markovian": 321, "3288080526": 321, "constain": 321, "bar_": 321, "get_someth": 321, "bar_d5ef36aa": 321, "61f8": 321, "aargh": 321, "foo_list": 321, "batched_env": 321, "_dispatch_caller_parallel": 321, "0x7fc7a04b6a30": 321, "bar_dd681d34": 321, "8fe2": 321, "bar_dd6b6e9": 321, "9872": 321, "bar_dd6e64b": 321, "9ee6": 321, "parallen": 321, "particularili": 321, "evolv": 321, "steadi": 321, "approx": 321, "5120": 321, "2949": 321, "0810": 321, "8352": 321, "9430": 321, "9208": 321, "_extra_st": 321, "observation_ssq": 321, "observation_sum": 321, "1188": 321, "0857": 321, "1591": 321, "2759": 321, "0883": 321, "2152": 321, "dispach": 321, "absor": 321}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 2, 1, "", "BraxEnv"], [68, 2, 1, "", "BraxWrapper"], [69, 2, 1, "", "DMControlEnv"], [70, 2, 1, "", "DMControlWrapper"], [71, 0, 1, "", "EnvBase"], [72, 0, 1, "", "EnvCreator"], [73, 0, 1, "", "EnvMetaData"], [74, 2, 1, "", "GymEnv"], [75, 0, 1, "", "GymLikeEnv"], [76, 2, 1, "", "GymWrapper"], [77, 2, 1, "", "HabitatEnv"], [78, 2, 1, "", "IsaacGymEnv"], [79, 2, 1, "", "IsaacGymWrapper"], [80, 2, 1, "", "JumanjiEnv"], [81, 2, 1, "", "JumanjiWrapper"], [82, 2, 1, "", "MarlGroupMapType"], [83, 2, 1, "", "ModelBasedEnvBase"], [84, 2, 1, "", "MultiThreadedEnv"], [85, 2, 1, "", "MultiThreadedEnvWrapper"], [86, 2, 1, "", "OpenMLEnv"], [87, 0, 1, "", "ParallelEnv"], [88, 2, 1, "", "PettingZooEnv"], [89, 2, 1, "", "PettingZooWrapper"], [90, 2, 1, "", "RoboHiveEnv"], [91, 2, 1, "", "SMACv2Env"], [92, 2, 1, "", "SMACv2Wrapper"], [93, 0, 1, "", "SerialEnv"], [94, 2, 1, "", "VmasEnv"], [95, 2, 1, "", "VmasWrapper"], [96, 2, 1, "", "check_marl_grouping"], [97, 2, 1, "", "gym_backend"], [83, 1, 1, "", "rand_step"], [83, 1, 1, "", "reset"], [83, 1, 1, "", "rollout"], [99, 2, 1, "", "set_gym_backend"], [83, 1, 1, "", "set_seed"], [83, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[71, 3, 1, "", "action_key"], [71, 3, 1, "", "action_keys"], [71, 3, 1, "", "action_spec"], [71, 1, 1, "", "add_module"], [71, 1, 1, "", "apply"], [71, 3, 1, "", "batch_locked"], [71, 1, 1, "", "bfloat16"], [71, 1, 1, "", "buffers"], [71, 1, 1, "", "children"], [71, 1, 1, "", "compile"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 3, 1, "", "done_key"], [71, 3, 1, "", "done_keys"], [71, 3, 1, "", "done_keys_groups"], [71, 3, 1, "", "done_spec"], [71, 1, 1, "", "double"], [71, 1, 1, "", "eval"], [71, 1, 1, "", "extra_repr"], [71, 1, 1, "", "fake_tensordict"], [71, 1, 1, "", "float"], [71, 1, 1, "", "forward"], [71, 3, 1, "", "full_action_spec"], [71, 3, 1, "", "full_done_spec"], [71, 3, 1, "", "full_reward_spec"], [71, 3, 1, "", "full_state_spec"], [71, 1, 1, "", "get_buffer"], [71, 1, 1, "", "get_extra_state"], [71, 1, 1, "", "get_parameter"], [71, 1, 1, "", "get_submodule"], [71, 1, 1, "", "half"], [71, 3, 1, "", "input_spec"], [71, 1, 1, "", "ipu"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "modules"], [71, 1, 1, "", "named_buffers"], [71, 1, 1, "", "named_children"], [71, 1, 1, "", "named_modules"], [71, 1, 1, "", "named_parameters"], [71, 3, 1, "", "observation_spec"], [71, 3, 1, "", "output_spec"], [71, 1, 1, "", "parameters"], [71, 1, 1, "", "rand_action"], [71, 1, 1, "id0", "rand_step"], [71, 1, 1, "", "register_backward_hook"], [71, 1, 1, "", "register_buffer"], [71, 1, 1, "", "register_forward_hook"], [71, 1, 1, "", "register_forward_pre_hook"], [71, 1, 1, "", "register_full_backward_hook"], [71, 1, 1, "", "register_full_backward_pre_hook"], [71, 1, 1, "", "register_load_state_dict_post_hook"], [71, 1, 1, "", "register_module"], [71, 1, 1, "", "register_parameter"], [71, 1, 1, "", "register_state_dict_pre_hook"], [71, 1, 1, "", "requires_grad_"], [71, 1, 1, "id1", "reset"], [71, 3, 1, "", "reset_keys"], [71, 3, 1, "", "reward_key"], [71, 3, 1, "", "reward_keys"], [71, 3, 1, "", "reward_spec"], [71, 1, 1, "id2", "rollout"], [71, 1, 1, "", "set_extra_state"], [71, 1, 1, "id3", "set_seed"], [71, 1, 1, "", "share_memory"], [71, 3, 1, "", "specs"], [71, 1, 1, "", "state_dict"], [71, 3, 1, "", "state_spec"], [71, 1, 1, "id4", "step"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_empty"], [71, 1, 1, "", "train"], [71, 1, 1, "", "type"], [71, 1, 1, "", "xpu"], [71, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[75, 3, 1, "", "action_key"], [75, 3, 1, "", "action_keys"], [75, 3, 1, "", "action_spec"], [75, 1, 1, "", "add_module"], [75, 1, 1, "", "apply"], [75, 3, 1, "", "batch_locked"], [75, 1, 1, "", "bfloat16"], [75, 1, 1, "", "buffers"], [75, 1, 1, "", "children"], [75, 1, 1, "", "close"], [75, 1, 1, "", "compile"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 3, 1, "", "done_key"], [75, 3, 1, "", "done_keys"], [75, 3, 1, "", "done_keys_groups"], [75, 3, 1, "", "done_spec"], [75, 1, 1, "", "double"], [75, 1, 1, "", "eval"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "fake_tensordict"], [75, 1, 1, "", "float"], [75, 1, 1, "", "forward"], [75, 3, 1, "", "full_action_spec"], [75, 3, 1, "", "full_done_spec"], [75, 3, 1, "", "full_reward_spec"], [75, 3, 1, "", "full_state_spec"], [75, 1, 1, "", "get_buffer"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "get_parameter"], [75, 1, 1, "", "get_submodule"], [75, 1, 1, "", "half"], [75, 3, 1, "", "input_spec"], [75, 1, 1, "", "ipu"], [75, 1, 1, "", "load_state_dict"], [75, 1, 1, "", "modules"], [75, 1, 1, "", "named_buffers"], [75, 1, 1, "", "named_children"], [75, 1, 1, "", "named_modules"], [75, 1, 1, "", "named_parameters"], [75, 3, 1, "", "observation_spec"], [75, 3, 1, "", "output_spec"], [75, 1, 1, "", "parameters"], [75, 1, 1, "", "rand_action"], [75, 1, 1, "", "rand_step"], [75, 1, 1, "", "read_action"], [75, 1, 1, "", "read_done"], [75, 1, 1, "", "read_obs"], [75, 1, 1, "", "read_reward"], [75, 1, 1, "", "register_backward_hook"], [75, 1, 1, "", "register_buffer"], [75, 1, 1, "", "register_forward_hook"], [75, 1, 1, "", "register_forward_pre_hook"], [75, 1, 1, "", "register_full_backward_hook"], [75, 1, 1, "", "register_full_backward_pre_hook"], [75, 1, 1, "", "register_load_state_dict_post_hook"], [75, 1, 1, "", "register_module"], [75, 1, 1, "", "register_parameter"], [75, 1, 1, "", "register_state_dict_pre_hook"], [75, 1, 1, "", "requires_grad_"], [75, 1, 1, "", "reset"], [75, 3, 1, "", "reset_keys"], [75, 3, 1, "", "reward_key"], [75, 3, 1, "", "reward_keys"], [75, 3, 1, "", "reward_spec"], [75, 1, 1, "", "rollout"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "set_info_dict_reader"], [75, 1, 1, "", "set_seed"], [75, 1, 1, "", "share_memory"], [75, 3, 1, "", "specs"], [75, 1, 1, "", "state_dict"], [75, 3, 1, "", "state_spec"], [75, 1, 1, "", "step"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_empty"], [75, 1, 1, "", "train"], [75, 1, 1, "", "type"], [75, 1, 1, "", "xpu"], [75, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[87, 3, 1, "", "action_key"], [87, 3, 1, "", "action_keys"], [87, 3, 1, "", "action_spec"], [87, 1, 1, "", "add_module"], [87, 1, 1, "", "apply"], [87, 3, 1, "", "batch_locked"], [87, 1, 1, "", "bfloat16"], [87, 1, 1, "", "buffers"], [87, 1, 1, "", "children"], [87, 1, 1, "", "compile"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 3, 1, "", "done_key"], [87, 3, 1, "", "done_keys"], [87, 3, 1, "", "done_keys_groups"], [87, 3, 1, "", "done_spec"], [87, 1, 1, "", "double"], [87, 1, 1, "", "eval"], [87, 1, 1, "", "extra_repr"], [87, 1, 1, "", "fake_tensordict"], [87, 1, 1, "", "float"], [87, 1, 1, "", "forward"], [87, 3, 1, "", "full_action_spec"], [87, 3, 1, "", "full_done_spec"], [87, 3, 1, "", "full_reward_spec"], [87, 3, 1, "", "full_state_spec"], [87, 1, 1, "", "get_buffer"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "get_parameter"], [87, 1, 1, "", "get_submodule"], [87, 1, 1, "", "half"], [87, 3, 1, "", "input_spec"], [87, 1, 1, "", "ipu"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "modules"], [87, 1, 1, "", "named_buffers"], [87, 1, 1, "", "named_children"], [87, 1, 1, "", "named_modules"], [87, 1, 1, "", "named_parameters"], [87, 3, 1, "", "observation_spec"], [87, 3, 1, "", "output_spec"], [87, 1, 1, "", "parameters"], [87, 1, 1, "", "rand_action"], [87, 1, 1, "", "rand_step"], [87, 1, 1, "", "register_backward_hook"], [87, 1, 1, "", "register_buffer"], [87, 1, 1, "", "register_forward_hook"], [87, 1, 1, "", "register_forward_pre_hook"], [87, 1, 1, "", "register_full_backward_hook"], [87, 1, 1, "", "register_full_backward_pre_hook"], [87, 1, 1, "", "register_load_state_dict_post_hook"], [87, 1, 1, "", "register_module"], [87, 1, 1, "", "register_parameter"], [87, 1, 1, "", "register_state_dict_pre_hook"], [87, 1, 1, "", "requires_grad_"], [87, 1, 1, "", "reset"], [87, 3, 1, "", "reset_keys"], [87, 3, 1, "", "reward_key"], [87, 3, 1, "", "reward_keys"], [87, 3, 1, "", "reward_spec"], [87, 1, 1, "", "rollout"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "", "set_seed"], [87, 1, 1, "", "share_memory"], [87, 3, 1, "", "specs"], [87, 1, 1, "", "state_dict"], [87, 3, 1, "", "state_spec"], [87, 1, 1, "", "step"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_empty"], [87, 1, 1, "", "train"], [87, 1, 1, "", "type"], [87, 1, 1, "", "update_kwargs"], [87, 1, 1, "", "xpu"], [87, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[93, 3, 1, "", "action_key"], [93, 3, 1, "", "action_keys"], [93, 3, 1, "", "action_spec"], [93, 1, 1, "", "add_module"], [93, 1, 1, "", "apply"], [93, 3, 1, "", "batch_locked"], [93, 1, 1, "", "bfloat16"], [93, 1, 1, "", "buffers"], [93, 1, 1, "", "children"], [93, 1, 1, "", "compile"], [93, 1, 1, "", "cpu"], [93, 1, 1, "", "cuda"], [93, 3, 1, "", "done_key"], [93, 3, 1, "", "done_keys"], [93, 3, 1, "", "done_keys_groups"], [93, 3, 1, "", "done_spec"], [93, 1, 1, "", "double"], [93, 1, 1, "", "eval"], [93, 1, 1, "", "extra_repr"], [93, 1, 1, "", "fake_tensordict"], [93, 1, 1, "", "float"], [93, 1, 1, "", "forward"], [93, 3, 1, "", "full_action_spec"], [93, 3, 1, "", "full_done_spec"], [93, 3, 1, "", "full_reward_spec"], [93, 3, 1, "", "full_state_spec"], [93, 1, 1, "", "get_buffer"], [93, 1, 1, "", "get_extra_state"], [93, 1, 1, "", "get_parameter"], [93, 1, 1, "", "get_submodule"], [93, 1, 1, "", "half"], [93, 3, 1, "", "input_spec"], [93, 1, 1, "", "ipu"], [93, 1, 1, "", "load_state_dict"], [93, 1, 1, "", "modules"], [93, 1, 1, "", "named_buffers"], [93, 1, 1, "", "named_children"], [93, 1, 1, "", "named_modules"], [93, 1, 1, "", "named_parameters"], [93, 3, 1, "", "observation_spec"], [93, 3, 1, "", "output_spec"], [93, 1, 1, "", "parameters"], [93, 1, 1, "", "rand_action"], [93, 1, 1, "", "rand_step"], [93, 1, 1, "", "register_backward_hook"], [93, 1, 1, "", "register_buffer"], [93, 1, 1, "", "register_forward_hook"], [93, 1, 1, "", "register_forward_pre_hook"], [93, 1, 1, "", "register_full_backward_hook"], [93, 1, 1, "", "register_full_backward_pre_hook"], [93, 1, 1, "", "register_load_state_dict_post_hook"], [93, 1, 1, "", "register_module"], [93, 1, 1, "", "register_parameter"], [93, 1, 1, "", "register_state_dict_pre_hook"], [93, 1, 1, "", "requires_grad_"], [93, 1, 1, "", "reset"], [93, 3, 1, "", "reset_keys"], [93, 3, 1, "", "reward_key"], [93, 3, 1, "", "reward_keys"], [93, 3, 1, "", "reward_spec"], [93, 1, 1, "", "rollout"], [93, 1, 1, "", "set_extra_state"], [93, 1, 1, "", "set_seed"], [93, 1, 1, "", "share_memory"], [93, 3, 1, "", "specs"], [93, 1, 1, "", "state_dict"], [93, 3, 1, "", "state_spec"], [93, 1, 1, "", "step"], [93, 1, 1, "", "to"], [93, 1, 1, "", "to_empty"], [93, 1, 1, "", "train"], [93, 1, 1, "", "type"], [93, 1, 1, "", "update_kwargs"], [93, 1, 1, "", "xpu"], [93, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[98, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[100, 0, 1, "", "ActionMask"], [101, 0, 1, "", "BinarizeReward"], [102, 0, 1, "", "CatFrames"], [103, 0, 1, "", "CatTensors"], [104, 0, 1, "", "CenterCrop"], [105, 0, 1, "", "ClipTransform"], [106, 0, 1, "", "Compose"], [107, 0, 1, "", "DTypeCastTransform"], [108, 0, 1, "", "DeviceCastTransform"], [109, 0, 1, "", "DiscreteActionProjection"], [110, 0, 1, "", "DoubleToFloat"], [111, 0, 1, "", "ExcludeTransform"], [112, 0, 1, "", "FiniteTensorDictCheck"], [113, 0, 1, "", "FlattenObservation"], [114, 0, 1, "", "FrameSkipTransform"], [115, 0, 1, "", "GrayScale"], [116, 0, 1, "", "InitTracker"], [117, 0, 1, "", "KLRewardTransform"], [118, 0, 1, "", "NoopResetEnv"], [119, 0, 1, "", "ObservationNorm"], [120, 0, 1, "", "ObservationTransform"], [121, 0, 1, "", "PermuteTransform"], [122, 0, 1, "", "PinMemoryTransform"], [123, 0, 1, "", "R3MTransform"], [124, 0, 1, "", "RandomCropTensorDict"], [125, 0, 1, "", "RenameTransform"], [126, 0, 1, "", "Resize"], [127, 0, 1, "", "Reward2GoTransform"], [128, 0, 1, "", "RewardClipping"], [129, 0, 1, "", "RewardScaling"], [130, 0, 1, "", "RewardSum"], [131, 0, 1, "", "SelectTransform"], [132, 0, 1, "", "SqueezeTransform"], [133, 0, 1, "", "StepCounter"], [134, 0, 1, "", "TargetReturn"], [135, 0, 1, "", "TensorDictPrimer"], [136, 0, 1, "", "TimeMaxPool"], [137, 0, 1, "", "ToTensorImage"], [138, 0, 1, "", "Transform"], [139, 0, 1, "", "TransformedEnv"], [140, 0, 1, "", "UnsqueezeTransform"], [141, 0, 1, "", "VC1Transform"], [142, 0, 1, "", "VIPRewardTransform"], [143, 0, 1, "", "VIPTransform"], [144, 0, 1, "", "VecNorm"], [145, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[101, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "reset"], [102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[105, 1, 1, "", "transform_observation_spec"], [105, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "reset"], [106, 1, 1, "", "to"], [106, 1, 1, "", "transform_env_device"], [106, 1, 1, "", "transform_input_spec"], [106, 1, 1, "", "transform_observation_spec"], [106, 1, 1, "", "transform_output_spec"], [106, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "transform_input_spec"], [107, 1, 1, "", "transform_observation_spec"], [107, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "transform_done_spec"], [108, 1, 1, "", "transform_env_device"], [108, 1, 1, "", "transform_input_spec"], [108, 1, 1, "", "transform_observation_spec"], [108, 1, 1, "", "transform_output_spec"], [108, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[109, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "reset"], [111, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[114, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[115, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "reset"], [116, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[118, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[119, 1, 1, "", "init_stats"], [119, 1, 1, "", "transform_input_spec"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[121, 1, 1, "", "transform_input_spec"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[122, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[123, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[124, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[127, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[128, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[129, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "reset"], [130, 1, 1, "", "transform_input_spec"], [130, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "reset"], [133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_observation_spec"], [133, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "reset"], [134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "reset"], [135, 1, 1, "", "to"], [135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "reset"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[138, 3, 1, "", "container"], [138, 1, 1, "", "forward"], [138, 3, 1, "", "parent"], [138, 1, 1, "", "reset"], [138, 1, 1, "", "to"], [138, 1, 1, "", "transform_done_spec"], [138, 1, 1, "", "transform_env_device"], [138, 1, 1, "", "transform_input_spec"], [138, 1, 1, "", "transform_observation_spec"], [138, 1, 1, "", "transform_output_spec"], [138, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[139, 3, 1, "", "batch_locked"], [139, 1, 1, "", "eval"], [139, 3, 1, "", "input_spec"], [139, 1, 1, "", "load_state_dict"], [139, 3, 1, "", "output_spec"], [139, 1, 1, "", "set_missing_tolerance"], [139, 1, 1, "", "set_seed"], [139, 1, 1, "", "state_dict"], [139, 1, 1, "", "to"], [139, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[140, 1, 1, "", "transform_input_spec"], [140, 1, 1, "", "transform_observation_spec"], [140, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "make_noload_model"], [141, 1, 1, "", "to"], [141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "reset"], [142, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[143, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[144, 1, 1, "", "build_td_for_shared_vecnorm"], [144, 1, 1, "", "forward"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[146, 2, 1, "", "check_env_specs"], [147, 2, 1, "", "exploration_mode"], [148, 2, 1, "", "exploration_type"], [149, 2, 1, "", "get_available_libraries"], [150, 2, 1, "", "make_composite_from_td"], [151, 2, 1, "", "set_exploration_mode"], [152, 2, 1, "", "set_exploration_type"], [153, 2, 1, "", "step_mdp"], [154, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[155, 0, 1, "", "CEMPlanner"], [156, 0, 1, "", "ConvNet"], [157, 0, 1, "", "DTActor"], [158, 0, 1, "", "DdpgCnnActor"], [159, 0, 1, "", "DdpgCnnQNet"], [160, 0, 1, "", "DdpgMlpActor"], [161, 0, 1, "", "DdpgMlpQNet"], [162, 0, 1, "", "DecisionTransformer"], [163, 0, 1, "", "Delta"], [164, 0, 1, "", "DistributionalDQNnet"], [165, 0, 1, "", "DistributionalQValueHook"], [166, 0, 1, "", "DreamerActor"], [167, 0, 1, "", "DuelingCnnDQNet"], [168, 0, 1, "", "IndependentNormal"], [169, 0, 1, "", "LSTMModule"], [170, 0, 1, "", "LSTMNet"], [171, 0, 1, "", "MLP"], [172, 0, 1, "", "MPCPlannerBase"], [173, 0, 1, "", "MPPIPlanner"], [174, 0, 1, "", "MaskedCategorical"], [175, 0, 1, "", "MaskedOneHotCategorical"], [176, 0, 1, "", "MultiAgentMLP"], [177, 0, 1, "", "NoisyLazyLinear"], [178, 0, 1, "", "NoisyLinear"], [179, 0, 1, "", "NormalParamWrapper"], [180, 0, 1, "", "ObsDecoder"], [181, 0, 1, "", "ObsEncoder"], [182, 0, 1, "", "OneHotCategorical"], [183, 0, 1, "", "OnlineDTActor"], [184, 0, 1, "", "QMixer"], [185, 0, 1, "", "QValueHook"], [186, 0, 1, "", "RSSMPosterior"], [187, 0, 1, "", "RSSMPrior"], [188, 0, 1, "", "Squeeze2dLayer"], [189, 0, 1, "", "SqueezeLayer"], [190, 0, 1, "", "TanhDelta"], [191, 0, 1, "", "TanhNormal"], [192, 0, 1, "", "TruncatedNormal"], [193, 0, 1, "", "VDNMixer"], [194, 0, 1, "", "VmapModule"], [195, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[155, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[156, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[157, 1, 1, "", "default_config"], [157, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[158, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[159, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[160, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[161, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[162, 0, 1, "", "DTConfig"], [162, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[163, 1, 1, "", "log_prob"], [163, 3, 1, "", "mean"], [163, 3, 1, "", "mode"], [163, 1, 1, "", "rsample"], [163, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[164, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[166, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[167, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[168, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "set_recurrent_mode"], [169, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[170, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[171, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[173, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[174, 1, 1, "", "log_prob"], [174, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[175, 1, 1, "", "log_prob"], [175, 1, 1, "", "rsample"], [175, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[176, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[177, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[179, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[180, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[181, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[182, 1, 1, "", "log_prob"], [182, 3, 1, "", "mode"], [182, 1, 1, "", "rsample"], [182, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[183, 1, 1, "", "default_config"], [183, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[184, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[186, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[187, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[189, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[190, 3, 1, "", "mean"], [190, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[191, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[192, 1, 1, "", "log_prob"], [192, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[193, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[194, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[196, 0, 1, "", "Actor"], [197, 0, 1, "", "ActorCriticOperator"], [198, 0, 1, "", "ActorCriticWrapper"], [199, 0, 1, "", "ActorValueOperator"], [200, 0, 1, "", "AdditiveGaussianWrapper"], [201, 0, 1, "", "DecisionTransformerInferenceWrapper"], [202, 0, 1, "", "DistributionalQValueActor"], [203, 0, 1, "", "DistributionalQValueModule"], [204, 0, 1, "", "EGreedyModule"], [205, 0, 1, "", "LMHeadActorValueOperator"], [206, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [207, 0, 1, "", "ProbabilisticActor"], [208, 0, 1, "", "QValueActor"], [209, 0, 1, "", "QValueModule"], [210, 0, 1, "", "SafeModule"], [211, 0, 1, "", "SafeProbabilisticModule"], [212, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [213, 0, 1, "", "SafeSequential"], [214, 0, 1, "", "TanhModule"], [215, 0, 1, "", "ValueOperator"], [216, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[197, 1, 1, "", "get_critic_operator"], [197, 1, 1, "", "get_policy_head"], [197, 1, 1, "", "get_value_head"], [197, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[198, 1, 1, "", "get_policy_head"], [198, 1, 1, "", "get_policy_operator"], [198, 1, 1, "", "get_value_head"], [198, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[199, 1, 1, "", "get_policy_head"], [199, 1, 1, "", "get_policy_operator"], [199, 1, 1, "", "get_value_head"], [199, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "mask_context"], [201, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[203, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[209, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[210, 1, 1, "", "random"], [210, 1, 1, "", "random_sample"], [210, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[211, 1, 1, "", "random"], [211, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[214, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[216, 1, 1, "", "get_reward_operator"], [216, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[217, 0, 1, "", "biased_softplus"], [218, 0, 1, "", "inv_softplus"], [219, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[217, 1, 1, "", "forward"]], "torchrl.objectives": [[220, 0, 1, "", "A2CLoss"], [221, 0, 1, "", "CQLLoss"], [222, 0, 1, "", "ClipPPOLoss"], [223, 0, 1, "", "DDPGLoss"], [224, 0, 1, "", "DQNLoss"], [225, 0, 1, "", "DTLoss"], [226, 0, 1, "", "DiscreteSACLoss"], [227, 0, 1, "", "DistributionalDQNLoss"], [228, 0, 1, "", "DreamerActorLoss"], [229, 0, 1, "", "DreamerModelLoss"], [230, 0, 1, "", "DreamerValueLoss"], [231, 0, 1, "", "HardUpdate"], [232, 0, 1, "", "IQLLoss"], [233, 0, 1, "", "KLPENPPOLoss"], [234, 0, 1, "", "LossModule"], [235, 0, 1, "", "OnlineDTLoss"], [236, 0, 1, "", "PPOLoss"], [237, 0, 1, "", "REDQLoss"], [238, 0, 1, "", "ReinforceLoss"], [239, 0, 1, "", "SACLoss"], [240, 0, 1, "", "SoftUpdate"], [241, 0, 1, "", "TD3Loss"], [242, 0, 1, "", "ValueEstimators"], [243, 0, 1, "", "default_value_kwargs"], [244, 0, 1, "", "distance_loss"], [245, 0, 1, "", "hold_out_net"], [246, 0, 1, "", "hold_out_params"], [248, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[222, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[225, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[229, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[230, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "loss_value_diff"], [232, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[233, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[234, 1, 1, "", "convert_to_functional"], [234, 1, 1, "", "forward"], [234, 1, 1, "", "make_value_estimator"], [234, 1, 1, "", "named_parameters"], [234, 1, 1, "", "parameters"], [234, 1, 1, "", "set_keys"], [234, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[235, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[247, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[249, 0, 1, "", "GAE"], [250, 0, 1, "", "TD0Estimator"], [251, 0, 1, "", "TD1Estimator"], [252, 0, 1, "", "TDLambdaEstimator"], [253, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "set_keys"], [253, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[254, 0, 1, "", "generalized_advantage_estimate"], [255, 0, 1, "", "reward2go"], [256, 0, 1, "", "td0_advantage_estimate"], [257, 0, 1, "", "td0_return_estimate"], [258, 0, 1, "", "td1_advantage_estimate"], [259, 0, 1, "", "td1_return_estimate"], [260, 0, 1, "", "td_lambda_advantage_estimate"], [261, 0, 1, "", "td_lambda_return_estimate"], [262, 0, 1, "", "vec_generalized_advantage_estimate"], [263, 0, 1, "", "vec_td1_advantage_estimate"], [264, 0, 1, "", "vec_td1_return_estimate"], [265, 0, 1, "", "vec_td_lambda_advantage_estimate"], [266, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[267, 2, 1, "", "TensorDictRecorder"], [268, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[269, 2, 1, "", "Logger"], [271, 2, 1, "", "generate_exp_name"], [272, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[270, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[273, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[274, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[275, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[276, 0, 1, "", "BatchSubSampler"], [277, 0, 1, "", "ClearCudaCache"], [278, 0, 1, "", "CountFramesLog"], [279, 0, 1, "", "LogReward"], [280, 0, 1, "", "OptimizerHook"], [281, 0, 1, "", "Recorder"], [282, 0, 1, "", "ReplayBufferTrainer"], [283, 0, 1, "", "RewardNormalizer"], [284, 0, 1, "", "SelectKeys"], [285, 0, 1, "", "Trainer"], [286, 0, 1, "", "TrainerHookBase"], [287, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[276, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[277, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[278, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[279, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[280, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[281, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[282, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[283, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[284, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[286, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[287, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[288, 2, 1, "", "correct_for_frame_skip"], [289, 2, 1, "", "get_stats_random_rollout"], [290, 2, 1, "", "make_collector_offpolicy"], [291, 2, 1, "", "make_collector_onpolicy"], [292, 2, 1, "", "make_dqn_loss"], [293, 2, 1, "", "make_redq_loss"], [294, 2, 1, "", "make_redq_model"], [295, 2, 1, "", "make_replay_buffer"], [296, 2, 1, "", "make_target_updater"], [297, 2, 1, "", "make_trainer"], [298, 2, 1, "", "parallel_env_constructor"], [299, 2, 1, "", "sync_async_collector"], [300, 2, 1, "", "sync_sync_collector"], [301, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 305, 306, 307, 308, 309, 310, 311, 315, 316, 320, 321], "tutori": [0, 311, 315], "basic": [0, 318], "intermedi": [0, 8], "advanc": 0, "refer": [0, 303], "knowledg": [0, 304], "base": [0, 7, 304], "indic": 0, "tabl": 0, "collector": [1, 309, 310, 311, 312, 315, 320], "packag": [1, 2, 3, 305, 306, 307, 308], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 309, 310, 311, 315, 320], "distribut": [1, 305], "helper": [1, 3], "function": [1, 4, 306, 310, 311, 315, 320], "replai": [2, 309, 310, 311, 312, 315, 318, 320], "buffer": [2, 309, 310, 311, 312, 315, 318, 320], "compos": [2, 106], "store": [2, 310], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 306, 311, 315], "learn": [2, 4, 311, 315], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 305, 306, 307], "env": [3, 316, 320, 321], "vector": [3, 320], "multi": [3, 305, 306, 314, 315], "agent": [3, 4, 305, 306, 315], "environ": [3, 4, 6, 7, 309, 310, 311, 312, 314, 315, 316, 320, 321], "transform": [3, 138, 309, 311, 315, 316, 318, 320, 321], "clone": [3, 7], "mask": 3, "action": [3, 4, 312, 316], "record": [3, 281, 307, 309], "domain": [3, 305], "specif": [3, 305, 314], "librari": [3, 320], "thing": [4, 309, 316], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 320], "gener": [4, 305], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 309, 316], "algorithm": [4, 305], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 309, 310], "return": [4, 306], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 309, 311, 312, 314, 315, 316], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 320], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 314], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 309, 310, 311], "standard": 4, "explor": [4, 305, 309, 310], "valu": [4, 305, 306, 309, 311, 312], "loss": [4, 309, 310, 311, 312, 315], "earli": 4, "train": [4, 8, 306, 309, 311, 312, 315, 316], "roughli": 4, "uniformli": 4, "random": [4, 315], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 310], "increas": 4, "an": [4, 311, 312, 316], "dynam": [4, 318], "can": 4, "low": 4, "forward": [4, 309], "model": [4, 305, 309, 310, 312, 317, 320], "also": 4, "us": [4, 6, 9, 312, 317, 318, 320], "offlin": 4, "observ": [4, 309], "space": 4, "effect": [4, 316], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 321], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 320], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 315, 321], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 309], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 316], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 309, 318], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "braxenv": 67, "braxwrapp": 68, "dmcontrolenv": 69, "dmcontrolwrapp": 70, "envbas": [71, 316], "envcreat": 72, "envmetadata": 73, "gymenv": 74, "gymlikeenv": 75, "gymwrapp": 76, "habitatenv": 77, "isaacgymenv": 78, "isaacgymwrapp": 79, "jumanjienv": 80, "jumanjiwrapp": 81, "marlgroupmaptyp": 82, "modelbasedenvbas": 83, "multithreadedenv": 84, "multithreadedenvwrapp": 85, "openmlenv": 86, "parallelenv": 87, "pettingzooenv": 88, "pettingzoowrapp": 89, "robohiveenv": 90, "smacv2env": 91, "smacv2wrapp": 92, "serialenv": 93, "vmasenv": 94, "vmaswrapp": 95, "check_marl_group": 96, "gym_backend": 97, "dreamerenv": 98, "set_gym_backend": 99, "actionmask": 100, "binarizereward": 101, "catfram": [102, 318], "cattensor": 103, "centercrop": 104, "cliptransform": 105, "dtypecasttransform": 107, "devicecasttransform": 108, "discreteactionproject": 109, "doubletofloat": 110, "excludetransform": 111, "finitetensordictcheck": 112, "flattenobserv": 113, "frameskiptransform": 114, "grayscal": 115, "inittrack": 116, "klrewardtransform": 117, "noopresetenv": 118, "observationnorm": 119, "observationtransform": 120, "permutetransform": 121, "pinmemorytransform": 122, "r3mtransform": 123, "randomcroptensordict": 124, "renametransform": 125, "resiz": 126, "reward2gotransform": 127, "rewardclip": 128, "rewardsc": 129, "rewardsum": 130, "selecttransform": 131, "squeezetransform": 132, "stepcount": 133, "targetreturn": 134, "tensordictprim": 135, "timemaxpool": 136, "totensorimag": 137, "transformedenv": 139, "unsqueezetransform": 140, "vc1transform": 141, "viprewardtransform": 142, "viptransform": 143, "vecnorm": [144, 321], "gsdenois": 145, "check_env_spec": 146, "exploration_mod": 147, "exploration_typ": 148, "get_available_librari": 149, "make_composite_from_td": 150, "set_exploration_mod": 151, "set_exploration_typ": 152, "step_mdp": 153, "terminated_or_trunc": 154, "cemplann": 155, "convnet": 156, "dtactor": 157, "ddpgcnnactor": 158, "ddpgcnnqnet": 159, "ddpgmlpactor": 160, "ddpgmlpqnet": 161, "decisiontransform": 162, "delta": 163, "distributionaldqnnet": 164, "distributionalqvaluehook": 165, "dreameractor": 166, "duelingcnndqnet": 167, "independentnorm": 168, "lstmmodul": 169, "lstmnet": 170, "mlp": [171, 312], "mpcplannerbas": 172, "mppiplann": 173, "maskedcategor": 174, "maskedonehotcategor": 175, "multiagentmlp": 176, "noisylazylinear": 177, "noisylinear": 178, "normalparamwrapp": 179, "obsdecod": 180, "obsencod": 181, "onehotcategor": 182, "onlinedtactor": 183, "qmixer": [184, 306], "qvaluehook": 185, "rssmposterior": 186, "rssmprior": 187, "squeeze2dlay": 188, "squeezelay": 189, "tanhdelta": 190, "tanhnorm": 191, "truncatednorm": 192, "vdnmixer": 193, "vmapmodul": 194, "reset_nois": 195, "actor": [196, 305, 309], "actorcriticoper": 197, "actorcriticwrapp": 198, "actorvalueoper": 199, "additivegaussianwrapp": 200, "decisiontransformerinferencewrapp": 201, "distributionalqvalueactor": 202, "distributionalqvaluemodul": 203, "egreedymodul": 204, "lmheadactorvalueoper": 205, "ornsteinuhlenbeckprocesswrapp": 206, "probabilisticactor": 207, "qvalueactor": 208, "qvaluemodul": 209, "safemodul": [210, 305], "safeprobabilisticmodul": 211, "safeprobabilistictensordictsequenti": 212, "safesequenti": 213, "tanhmodul": 214, "valueoper": 215, "worldmodelwrapp": 216, "biased_softplu": 217, "inv_softplu": 218, "map": 219, "a2closs": 220, "cqlloss": 221, "clipppoloss": 222, "ddpgloss": 223, "dqnloss": 224, "dtloss": 225, "discretesacloss": 226, "distributionaldqnloss": 227, "dreameractorloss": 228, "dreamermodelloss": 229, "dreamervalueloss": 230, "hardupd": 231, "iqlloss": 232, "klpenppoloss": 233, "lossmodul": [234, 309], "onlinedtloss": 235, "ppoloss": 236, "redqloss": 237, "reinforceloss": 238, "sacloss": 239, "softupd": 240, "td3loss": 241, "valueestim": 242, "default_value_kwarg": 243, "distance_loss": 244, "hold_out_net": 245, "hold_out_param": 246, "qmixerloss": 247, "next_state_valu": 248, "gae": 249, "td0estim": 250, "td1estim": 251, "tdlambdaestim": 252, "valueestimatorbas": 253, "generalized_advantage_estim": 254, "reward2go": 255, "td0_advantage_estim": 256, "td0_return_estim": 257, "td1_advantage_estim": 258, "td1_return_estim": 259, "td_lambda_advantage_estim": 260, "td_lambda_return_estim": 261, "vec_generalized_advantage_estim": 262, "vec_td1_advantage_estim": 263, "vec_td1_return_estim": 264, "vec_td_lambda_advantage_estim": 265, "vec_td_lambda_return_estim": 266, "tensordictrecord": 267, "videorecord": 268, "logger": [269, 307], "csvlogger": 270, "generate_exp_nam": 271, "get_logg": 272, "mlflowlogg": 273, "tensorboardlogg": 274, "wandblogg": 275, "batchsubsampl": 276, "clearcudacach": 277, "countframeslog": 278, "logreward": 279, "optimizerhook": 280, "replaybuffertrain": 282, "rewardnorm": 283, "selectkei": 284, "trainer": [285, 307, 310], "trainerhookbas": 286, "updateweight": 287, "correct_for_frame_skip": 288, "get_stats_random_rollout": 289, "make_collector_offpolici": 290, "make_collector_onpolici": 291, "make_dqn_loss": 292, "make_redq_loss": 293, "make_redq_model": 294, "make_replay_buff": 295, "make_target_updat": 296, "make_train": 297, "parallel_env_constructor": 298, "sync_async_collector": 299, "sync_sync_collector": 300, "transformed_env_constructor": 301, "readm": [302, 313], "tuto": [302, 313], "api": 303, "contribut": [304, 320], "content": 304, "modul": [305, 309, 312, 320], "tensordict": [305, 318, 320], "wrapper": 305, "probabilist": 305, "q": [305, 310, 312], "oper": 305, "join": 305, "hook": [305, 307, 310], "regular": 305, "planner": 305, "object": [306, 309, 320], "dqn": [306, 310, 312], "ddpg": [306, 309], "sac": 306, "redq": 306, "iql": 306, "cql": 306, "dt": 306, "td3": 306, "ppo": [306, 311, 315], "a2c": 306, "dreamer": 306, "checkpoint": 307, "builder": 307, "_util": 308, "code": [309, 316], "setup": [309, 312], "The": 309, "__init__": 309, "method": 309, "estim": 309, "put": 309, "togeth": [309, 316], "call": 309, "parallel": [309, 314, 321], "execut": [309, 314, 316], "stat": 309, "build": [309, 310, 318], "evalu": 309, "batch": [309, 316, 318], "size": [309, 318], "construct": 309, "target": [309, 310], "network": [309, 310, 311, 312, 315], "updat": 309, "time": [309, 319], "experi": [309, 316], "result": [309, 311, 315], "conclus": [309, 310, 311, 312, 315, 316, 318], "A": [310, 318], "exampl": [310, 318], "comput": [310, 316, 319], "deep": 310, "collect": [310, 311], "paramet": [310, 311], "hyperparamet": [310, 311, 315], "regist": 310, "possibl": 310, "improv": 310, "defin": [311, 315], "loop": [311, 312, 315, 316], "next": [311, 315], "step": [311, 315, 321], "recurr": 312, "convolut": 312, "lstm": 312, "select": 312, "divers": 314, "rollout": [314, 315, 316, 321], "critic": 315, "pendulum": 316, "write": 316, "_step": 316, "reset": [316, 321], "simul": 316, "_reset": 316, "metadata": 316, "_spec": 316, "spec": [316, 321], "shape": 316, "seed": [316, 321], "wrap": 316, "class": [316, 320], "test": 316, "our": 316, "custom": [316, 318], "simpl": 316, "pretrain": 317, "vanilla": 318, "integr": 318, "tensorclass": 318, "sampl": 318, "iter": 318, "over": 318, "fix": 318, "priorit": 318, "save": 318, "raw": 318, "imag": 318, "more": 318, "complex": 318, "introduct": 320, "config": 320, "tensordictmodul": 320, "sequenc": 320, "program": 320, "ensembl": 320, "meta": 320, "special": 320, "state": 320, "frame_skip": 321, "deepmind": 321, "control": 321, "devic": 321, "run": 321, "close": 321, "access": 321, "attribut": 321, "kwarg": 321}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})