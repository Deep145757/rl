Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 69, 71, 72, 75, 83, 84, 86, 87, 88, 89, 93, 96, 100, 102, 104, 107, 109, 110, 112, 118, 119, 123, 124, 125, 127, 135, 136, 137, 138, 139, 141, 144, 146, 156, 158, 159, 160, 161, 169, 170, 171, 172, 176, 177, 178, 182, 189, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 217, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 269, 272, 281, 282, 286, 287, 290, 299, 300, 301, 302, 305, 306, 307, 310, 311, 315, 316, 318, 319, 321, 322], "open": [0, 5, 7, 11, 311, 316, 321], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322], "reinforc": [0, 3, 9, 102, 158, 159, 160, 161, 165, 204, 207, 221, 222, 226, 228, 232, 233, 239, 240, 241, 304, 311, 314, 317, 320, 321], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 102, 158, 159, 160, 161, 165, 173, 179, 204, 207, 221, 222, 226, 228, 232, 233, 238, 239, 240, 241, 304, 306, 307, 310, 311, 313, 314, 315, 317, 319, 320, 321, 322], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 83, 134, 179, 197, 208, 216, 221, 235, 237, 277, 305, 306, 307, 308, 310, 311, 312, 316, 318, 319, 322], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 79, 84, 149, 304, 305, 306, 309, 310, 311, 312, 316, 317, 322], "pytorch": [0, 1, 2, 3, 137, 178, 179, 286, 305, 308, 310, 312, 313, 316, 317, 321, 322], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 71, 75, 77, 83, 84, 87, 88, 89, 93, 117, 119, 124, 134, 139, 146, 158, 160, 166, 176, 177, 185, 187, 188, 194, 195, 204, 205, 207, 210, 212, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 248, 249, 250, 282, 295, 305, 306, 307, 310, 311, 313, 316, 317, 318, 319, 321, 322], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 71, 75, 83, 87, 88, 89, 93, 103, 104, 105, 107, 110, 113, 118, 119, 121, 123, 124, 127, 130, 131, 135, 139, 141, 143, 144, 154, 156, 162, 165, 169, 170, 171, 172, 174, 175, 176, 177, 195, 197, 201, 204, 205, 207, 208, 209, 210, 215, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 273, 277, 283, 290, 295, 298, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "python": [0, 3, 5, 6, 7, 10, 21, 99, 174, 175, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 75, 102, 103, 113, 119, 123, 124, 137, 139, 141, 169, 171, 176, 177, 178, 182, 197, 202, 203, 204, 208, 209, 211, 212, 223, 230, 234, 235, 237, 268, 285, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "low": [0, 25, 71, 75, 87, 93, 105, 109, 150, 204, 208, 215, 310, 311, 312, 316, 317, 321, 322], "high": [0, 9, 25, 41, 71, 75, 87, 93, 105, 109, 118, 150, 204, 208, 215, 250, 255, 263, 310, 311, 312, 316, 317, 319, 321, 322], "level": [0, 3, 4, 22, 26, 28, 102, 133, 234, 310, 311, 321], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 71, 120, 172, 254, 278, 287, 308, 312, 317, 321], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 71, 72, 75, 82, 83, 86, 87, 88, 89, 90, 93, 102, 105, 106, 107, 109, 110, 112, 113, 117, 118, 121, 123, 127, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 154, 155, 161, 163, 169, 170, 172, 174, 175, 176, 179, 183, 185, 188, 202, 203, 205, 207, 208, 209, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 245, 248, 249, 250, 251, 252, 253, 254, 283, 298, 302, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 109, 195, 235, 306, 321], "effici": [0, 1, 2, 4, 8, 179, 306, 310, 311, 312, 313, 315, 316, 318, 319, 321], "modular": [0, 214, 319, 321], "document": [0, 5, 7, 18, 19, 21, 32, 71, 75, 87, 93, 139, 311, 321], "properli": [0, 71, 75, 87, 93, 312, 316, 317, 321], "test": [0, 3, 5, 141, 146, 169, 170, 282, 298, 312, 313, 321], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 79, 87, 88, 89, 93, 102, 106, 107, 110, 111, 119, 121, 123, 127, 129, 130, 131, 133, 134, 135, 138, 139, 141, 143, 153, 154, 155, 158, 159, 160, 161, 162, 165, 169, 170, 172, 173, 174, 175, 176, 179, 180, 186, 187, 188, 197, 198, 202, 203, 204, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 256, 271, 274, 275, 276, 277, 281, 298, 300, 301, 306, 307, 308, 311, 312, 313, 316, 317, 318, 319, 321, 322], "code": [0, 3, 5, 7, 8, 123, 141, 169, 214, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322], "aim": [0, 3, 7, 28, 29, 123, 141, 143, 171, 289, 305, 306, 307, 310, 311, 321], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 84, 86, 88, 102, 119, 136, 138, 149, 165, 195, 203, 204, 211, 214, 228, 250, 251, 252, 253, 274, 306, 308, 311, 312, 313, 316, 317, 319, 321], "research": [0, 7, 9, 321], "most": [0, 3, 7, 8, 32, 109, 310, 311, 312, 317, 318, 321, 322], "written": [0, 3, 34, 36, 39, 45, 52, 55, 71, 75, 87, 93, 102, 117, 130, 133, 136, 153, 154, 197, 207, 208, 211, 212, 216, 221, 223, 234, 237, 239, 249, 268, 269, 306, 307, 308, 310, 313, 315, 317, 321], "highli": [0, 2, 321, 322], "wai": [0, 3, 4, 79, 123, 125, 143, 237, 250, 251, 252, 253, 306, 310, 311, 312, 315, 316, 317, 318, 319, 321, 322], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 71, 72, 75, 79, 82, 87, 88, 89, 91, 92, 93, 99, 100, 102, 105, 106, 107, 109, 110, 118, 119, 123, 124, 127, 130, 133, 134, 135, 138, 139, 141, 143, 144, 154, 155, 168, 169, 172, 173, 176, 177, 179, 180, 193, 195, 197, 201, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 282, 295, 300, 301, 302, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "easili": [0, 3, 7, 295, 307, 310, 311, 312, 316, 321, 322], "swap": [0, 3, 312, 318, 321], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 165, 186, 203, 204, 210, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 281, 286, 310, 311, 312, 313, 315, 316, 317, 318, 321], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 71, 72, 75, 87, 88, 89, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 157, 158, 162, 165, 166, 184, 185, 186, 194, 202, 206, 215, 218, 220, 226, 236, 269, 283, 295, 302, 304, 311, 313, 314, 318, 320], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 82, 87, 88, 89, 93, 107, 110, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 194, 195, 201, 202, 204, 205, 207, 210, 215, 218, 234, 269, 310, 311, 313, 315, 316, 317, 318, 319, 321, 322], "write": [0, 3, 8, 23, 32, 37, 45, 75, 105, 121, 122, 130, 133, 154, 197, 211, 212, 214, 216, 222, 224, 225, 227, 233, 238, 240, 242, 249, 254, 269, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 71, 75, 84, 87, 91, 92, 93, 130, 138, 144, 153, 154, 169, 207, 211, 212, 217, 221, 222, 223, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 310, 312, 313, 316, 317, 321, 322], "ones": [0, 15, 26, 32, 35, 41, 42, 71, 75, 87, 93, 103, 106, 107, 108, 110, 119, 123, 127, 134, 135, 138, 139, 141, 143, 174, 175, 195, 211, 221, 222, 224, 233, 237, 238, 240, 242, 256, 310, 312, 316, 317, 319, 321, 322], "littl": [0, 3, 43, 312, 313, 319, 321, 322], "effort": [0, 3, 317, 319, 321], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 71, 75, 77, 82, 83, 87, 88, 89, 93, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 123, 124, 125, 127, 130, 131, 133, 135, 136, 138, 139, 141, 142, 143, 144, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 248, 250, 251, 252, 253, 254, 268, 277, 279, 282, 283, 286, 288, 289, 290, 295, 298, 302, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "repo": [0, 6, 52, 102, 136, 141, 305, 316, 321], "attempt": [0, 201, 207, 225, 233, 248, 321], "align": [0, 321], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 71, 75, 87, 93, 103, 108, 139, 290, 302, 316, 321, 322], "ecosystem": [0, 321], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 71, 72, 75, 79, 87, 93, 102, 133, 135, 139, 169, 176, 201, 204, 207, 212, 234, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 86, 144, 304, 310, 311, 318, 319, 321, 322], "pillar": [0, 321], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 107, 108, 109, 110, 114, 118, 119, 123, 124, 130, 133, 134, 138, 139, 141, 144, 146, 155, 169, 170, 172, 173, 201, 207, 229, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 277, 279, 282, 289, 290, 291, 292, 295, 298, 299, 300, 301, 302, 304, 305, 306, 314, 318, 319, 320], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 71, 75, 83, 87, 93, 107, 123, 135, 141, 143, 145, 156, 157, 162, 169, 171, 172, 173, 177, 184, 185, 194, 198, 199, 200, 206, 211, 217, 221, 222, 223, 225, 226, 229, 230, 231, 233, 234, 235, 237, 238, 240, 248, 286, 291, 292, 293, 294, 295, 304, 305, 308, 312, 314, 316, 317, 319, 320, 322], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 83, 86, 87, 88, 89, 93, 100, 102, 107, 108, 110, 111, 117, 119, 127, 133, 146, 150, 154, 155, 165, 169, 170, 173, 176, 177, 186, 195, 197, 203, 205, 207, 208, 209, 211, 214, 215, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 277, 283, 286, 288, 291, 298, 300, 301, 302, 304, 306, 307, 308, 313, 317, 318, 319, 322], "util": [0, 3, 17, 23, 32, 40, 71, 75, 87, 88, 89, 93, 96, 123, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 162, 218, 219, 220, 235, 298, 304, 309, 310, 312, 316, 317, 321, 322], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 71, 72, 75, 87, 93, 103, 106, 113, 119, 123, 130, 135, 138, 139, 141, 143, 146, 168, 169, 173, 177, 180, 186, 192, 193, 202, 204, 208, 210, 211, 212, 249, 250, 251, 252, 253, 277, 289, 301, 306, 310, 311, 312, 316, 317, 318, 321, 322], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 71, 72, 75, 87, 93, 103, 106, 113, 119, 123, 130, 135, 138, 139, 141, 143, 146, 168, 169, 173, 177, 192, 193, 202, 208, 211, 212, 249, 259, 260, 261, 262, 264, 265, 266, 267, 301, 306, 310, 311, 312, 316, 317, 318, 321, 322], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 102, 127, 133, 207, 283, 286, 288, 291, 292, 298, 300, 301, 304, 308, 319, 322], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 71, 75, 83, 87, 93, 106, 107, 110, 123, 135, 138, 139, 141, 143, 144, 153, 154, 155, 156, 171, 173, 177, 197, 203, 204, 208, 210, 211, 216, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 256, 273, 277, 289, 295, 298, 299, 300, 301, 302, 306, 307, 308, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 71, 75, 87, 93, 117, 139, 171, 177, 310, 311, 312, 319, 321, 322], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 71, 75, 87, 88, 89, 93, 102, 107, 110, 117, 118, 119, 133, 134, 135, 138, 139, 144, 146, 154, 156, 170, 171, 176, 177, 195, 213, 214, 221, 223, 234, 237, 245, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 277, 286, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "few": [0, 2, 8, 277, 312, 313, 316, 319, 321, 322], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 107, 110, 216, 237, 306, 310, 312, 313, 316, 317, 321, 322], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 211, 282, 286, 306, 310, 312, 313, 316, 317, 319, 321, 322], "standard": [0, 3, 119, 129, 144, 155, 166, 173, 178, 179, 201, 202, 242, 250, 251, 252, 253, 310, 311, 316, 319, 321], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 137, 286, 317, 319, 321, 322], "common": [0, 3, 4, 21, 75, 87, 93, 100, 198, 199, 200, 206, 221, 222, 223, 227, 233, 234, 237, 238, 239, 240, 242, 298, 305, 306, 308, 310, 312, 315, 316, 317, 318, 321, 322], "openai": [0, 7, 74, 76, 90, 312, 317, 321, 322], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 79, 87, 90, 93, 97, 99, 102, 105, 116, 117, 119, 121, 125, 127, 130, 135, 138, 144, 169, 295, 298, 305, 310, 311, 312, 313, 317, 318, 319, 321], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 71, 75, 79, 84, 87, 88, 89, 93, 102, 103, 105, 106, 107, 109, 110, 113, 119, 123, 124, 127, 133, 134, 135, 136, 138, 139, 141, 143, 144, 169, 170, 176, 177, 197, 202, 203, 208, 209, 211, 212, 213, 214, 221, 223, 224, 227, 233, 234, 235, 237, 238, 239, 240, 241, 242, 250, 251, 252, 253, 254, 290, 308, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 93, 100, 101, 102, 103, 104, 105, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 195, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 274, 277, 279, 280, 281, 282, 283, 284, 286, 290, 291, 292, 293, 294, 295, 297, 298, 300, 301, 302, 306, 313, 316, 317, 319, 321], "On": [0, 3, 7, 18, 19, 20, 21, 306, 311, 316], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 121, 133, 134, 139, 156, 172, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "come": [0, 1, 3, 8, 75, 82, 87, 93, 107, 110, 197, 198, 199, 200, 208, 216, 310, 311, 312, 313, 316, 319, 321, 322], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 71, 73, 75, 83, 87, 88, 89, 93, 99, 100, 102, 103, 106, 107, 110, 116, 117, 123, 127, 133, 134, 135, 136, 138, 139, 141, 143, 146, 151, 152, 154, 169, 172, 176, 177, 201, 202, 211, 235, 237, 254, 277, 282, 283, 292, 302, 305, 306, 307, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "re": [0, 3, 8, 32, 62, 71, 75, 87, 93, 169, 174, 175, 208, 212, 308, 310, 312, 313, 315, 317, 321, 322], "usabl": [0, 308, 313, 321], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 71, 72, 75, 87, 93, 99, 107, 110, 139, 144, 146, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 174, 175, 176, 177, 180, 181, 182, 183, 184, 187, 188, 190, 193, 195, 198, 199, 200, 201, 202, 204, 205, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 295, 298, 304, 306, 310, 313, 315, 317, 319, 322], "cost": [0, 2, 27, 310, 311, 316, 317, 319], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 69, 71, 72, 75, 83, 86, 87, 88, 89, 93, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 183, 184, 185, 187, 188, 191, 192, 193, 194, 197, 198, 199, 200, 202, 208, 210, 211, 212, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 286, 289, 291, 295, 298, 299, 300, 301, 302, 304, 306, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 71, 72, 75, 79, 82, 84, 87, 88, 89, 93, 107, 110, 144, 176, 177, 204, 207, 210, 308, 310, 311, 313, 316, 317, 318, 319, 321, 322], "good": [0, 1, 4, 9, 310, 312, 313, 316, 321, 322], "runtim": [0, 3, 32, 71, 75, 87, 93, 317], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 71, 75, 87, 93, 96, 107, 110, 118, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 172, 173, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 230, 237, 282, 286, 307, 310, 311, 312, 313, 315, 316, 317, 322], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 71, 75, 82, 87, 88, 89, 91, 92, 93, 133, 144, 198, 199, 200, 207, 227, 235, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 306, 307, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 71, 75, 87, 93, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 121, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 154, 183, 197, 198, 199, 200, 203, 208, 211, 212, 214, 216, 217, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 269, 282, 286, 295, 306, 310, 311, 312, 313, 315, 316, 317, 318, 322], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 78, 79, 87, 88, 89, 93, 137, 141, 145, 165, 171, 178, 180, 197, 201, 203, 204, 211, 216, 221, 228, 235, 237, 250, 255, 263, 281, 305, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 322], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 307, 310, 311, 312, 316, 317, 321, 322], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 308, 310, 315, 318, 322], "beyond": 0, "api": [0, 3, 5, 88, 89, 90, 123, 143, 307, 308, 316, 317, 321, 322], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 71, 72, 75, 83, 87, 93, 96, 102, 103, 112, 117, 124, 146, 169, 197, 203, 204, 208, 209, 210, 211, 212, 306, 307, 311, 312, 313, 315, 316, 317, 318, 319, 322], "paper": [0, 123, 141, 143, 185, 194, 232, 295, 310, 312, 316], "ppo": [0, 4, 8, 208, 212, 223, 234, 237, 304, 306, 310, 311, 314, 320], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 84, 87, 93, 102, 105, 106, 111, 116, 117, 119, 125, 127, 130, 133, 135, 136, 138, 139, 144, 169, 298, 306, 311, 312, 314, 320, 321, 322], "your": [0, 2, 3, 7, 8, 10, 18, 32, 71, 75, 79, 82, 87, 88, 89, 93, 144, 302, 305, 306, 307, 311, 312, 313, 314, 316, 319, 320, 321], "introduct": [0, 307, 314, 316, 320, 322], "multi": [0, 7, 9, 28, 29, 32, 71, 75, 87, 91, 92, 93, 169, 170, 171, 176, 177, 248, 250, 251, 252, 253, 304, 310, 311, 312, 313, 314, 317, 320, 321], "agent": [0, 9, 28, 29, 82, 88, 89, 91, 92, 94, 95, 96, 133, 134, 174, 175, 176, 177, 179, 185, 194, 248, 304, 314, 317, 320], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 169, 172, 173, 211, 235, 268, 290, 291, 292, 295, 298, 300, 301, 302, 304, 306, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 116, 117, 119, 123, 124, 125, 127, 130, 131, 133, 134, 135, 137, 138, 139, 141, 143, 144, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 168, 169, 171, 172, 173, 175, 176, 177, 179, 180, 183, 184, 185, 186, 192, 193, 194, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 296, 298, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 320, 322], "pretrain": [0, 314, 320], "recurr": [0, 169, 188, 311, 314, 319, 320], "dqn": [0, 165, 203, 204, 221, 222, 224, 225, 227, 228, 229, 232, 233, 235, 237, 238, 239, 240, 241, 242, 248, 293, 304, 306, 314, 320], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 71, 75, 87, 88, 89, 93, 107, 114, 123, 134, 139, 141, 143, 146, 158, 160, 169, 201, 205, 207, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 250, 286, 288, 298, 304, 308, 311, 314, 318, 319, 320, 322], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 71, 75, 83, 87, 93, 109, 117, 134, 151, 152, 165, 169, 176, 177, 179, 186, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 221, 222, 223, 224, 227, 233, 234, 236, 237, 238, 239, 240, 242, 282, 288, 291, 292, 298, 300, 301, 306, 307, 308, 311, 314, 318, 319, 320, 321, 322], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 102, 109, 124, 127, 135, 222, 224, 225, 227, 233, 238, 240, 242, 283, 286, 296, 298, 304, 308, 314, 317, 318, 320], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 71, 75, 83, 87, 93, 102, 106, 109, 123, 124, 127, 135, 138, 139, 141, 143, 211, 214, 222, 224, 225, 227, 233, 238, 240, 242, 283, 286, 296, 298, 304, 308, 314, 317, 318, 320, 322], "task": [0, 3, 9, 28, 29, 40, 45, 69, 75, 78, 87, 88, 89, 90, 93, 123, 133, 141, 143, 233, 310, 311, 312, 313, 314, 316, 317, 320, 321, 322], "specif": [0, 2, 5, 8, 41, 42, 75, 162, 202, 286, 304, 307, 308, 312, 313, 314, 316, 319, 320], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 71, 75, 87, 93, 107, 110, 119, 123, 138, 139, 141, 144, 173, 185, 194, 197, 198, 208, 211, 212, 213, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 290, 291, 292, 297, 298, 302, 304, 306, 308, 311, 312, 313, 314, 316, 317, 319, 320, 322], "ddpg": [0, 158, 159, 160, 161, 224, 232, 241, 304, 306, 311, 314, 320], "loss": [0, 3, 8, 36, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 281, 286, 293, 294, 295, 298, 307, 308, 314, 317, 319, 320, 321], "trainer": [0, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 310, 314, 320], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 77, 78, 87, 90, 93, 105, 109, 114, 117, 123, 124, 125, 135, 138, 139, 141, 142, 144, 145, 146, 153, 155, 156, 165, 169, 171, 173, 174, 175, 177, 179, 180, 195, 201, 202, 203, 204, 205, 208, 209, 212, 214, 215, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 245, 248, 250, 251, 252, 253, 254, 256, 270, 271, 274, 279, 286, 288, 295, 298, 307, 310, 312, 314, 316, 317, 320, 322], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 80, 81, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 116, 117, 119, 121, 123, 125, 127, 130, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 150, 153, 154, 155, 156, 157, 162, 165, 169, 170, 171, 173, 176, 177, 180, 183, 184, 185, 186, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 243, 244, 248, 250, 251, 252, 253, 256, 277, 278, 279, 280, 281, 283, 284, 285, 288, 295, 298, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322], "packag": [0, 6, 7, 10, 99, 304, 305, 322], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 87, 93, 102, 103, 123, 127, 143, 156, 169, 170, 171, 177, 210, 214, 223, 225, 227, 228, 234, 237, 238, 242, 250, 251, 252, 253, 259, 260, 261, 262, 264, 265, 266, 267, 295, 302, 304, 310, 311, 312, 313, 315, 316, 317, 318, 319], "node": [0, 2, 18, 19, 20, 21, 22, 295, 304], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 88, 89, 117, 119, 155, 163, 164, 165, 166, 168, 173, 174, 175, 180, 183, 184, 187, 188, 191, 192, 193, 201, 202, 203, 204, 208, 212, 213, 221, 222, 223, 227, 228, 233, 234, 237, 238, 239, 240, 242, 304, 308, 311, 312, 316, 317, 321, 322], "helper": [0, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 310, 311, 313, 317], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 71, 75, 87, 93, 102, 138, 139, 144, 206, 230, 295, 304, 310, 311, 312, 313, 315, 316, 319, 321, 322], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 71, 75, 83, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 154, 188, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 222, 225, 227, 238, 240, 242, 248, 304, 317], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 91, 92, 93, 96, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 116, 117, 119, 121, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 153, 154, 155, 158, 159, 160, 161, 162, 165, 168, 169, 171, 172, 173, 175, 176, 177, 178, 180, 183, 184, 185, 186, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 227, 228, 229, 233, 234, 235, 237, 238, 239, 240, 242, 244, 248, 249, 250, 251, 252, 253, 256, 268, 269, 277, 283, 286, 289, 290, 295, 296, 298, 299, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "human": [0, 304, 317], "feedback": [0, 304, 321], "rlhf": [0, 34, 40, 45, 54, 117, 304, 306], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 72, 75, 87, 93, 100, 107, 110, 118, 125, 138, 139, 144, 146, 155, 172, 173, 282, 290, 291, 292, 295, 298, 300, 301, 302, 304, 313], "gymlikeenv": [0, 304], "envmetadata": [0, 304], "vector": [0, 1, 8, 24, 27, 33, 82, 88, 89, 109, 158, 160, 171, 250, 253, 263, 264, 265, 266, 267, 304, 310, 311, 313, 315, 316, 317, 318, 322], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 88, 89, 100, 124, 165, 174, 175, 186, 202, 203, 204, 205, 209, 210, 283, 304, 311, 313, 322], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 68, 71, 75, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 95, 100, 105, 107, 109, 110, 111, 114, 117, 118, 121, 125, 127, 131, 133, 139, 150, 153, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 184, 185, 186, 188, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 215, 216, 221, 222, 224, 225, 227, 233, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 295, 298, 302, 304, 306, 307, 308, 310, 311, 312, 315, 316, 318, 319, 321, 322], "record": [0, 32, 71, 75, 87, 93, 117, 237, 268, 269, 270, 271, 272, 273, 274, 275, 276, 298, 304, 311, 312], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 87, 93, 109, 135, 150, 197, 203, 204, 208, 209, 210, 211, 212, 213, 214, 304, 312, 313, 316, 317, 321, 322], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 71, 75, 82, 83, 87, 93, 99, 106, 109, 117, 123, 124, 134, 135, 138, 139, 141, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 248, 250, 251, 252, 253, 254, 286, 293, 294, 298, 304, 307, 308, 311, 312, 315, 316, 317, 318, 319], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 68, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 153, 154, 155, 164, 165, 169, 170, 172, 173, 185, 186, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 268, 277, 281, 282, 283, 285, 286, 295, 304, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 322], "actor": [0, 3, 4, 15, 21, 117, 155, 157, 158, 160, 165, 166, 173, 184, 186, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 248, 295, 304, 307, 311, 312, 313, 316, 318, 321], "explor": [0, 1, 145, 179, 197, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 221, 282, 291, 292, 298, 304, 312, 313, 316, 317], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 93, 99, 101, 102, 103, 105, 107, 109, 110, 118, 119, 123, 124, 127, 128, 130, 135, 136, 138, 139, 143, 144, 150, 154, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 277, 279, 280, 281, 282, 283, 286, 295, 298, 304, 308, 311, 315, 316, 317, 319, 321, 322], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 106, 107, 108, 111, 117, 119, 125, 130, 131, 133, 138, 154, 163, 174, 175, 183, 197, 208, 212, 216, 217, 238, 244, 250, 255, 263, 272, 286, 304, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322], "hook": [0, 32, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 186, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 304], "planner": [0, 155, 173, 304], "sac": [0, 227, 238, 240, 304], "redq": [0, 238, 294, 295, 304], "iql": [0, 233, 304, 316], "cql": [0, 222, 304], "dt": [0, 207, 304, 317], "td3": [0, 242, 304], "a2c": [0, 221, 304], "dreamer": [0, 98, 166, 229, 230, 231, 304, 306], "checkpoint": [0, 304], "builder": [0, 304, 311, 322], "logger": [0, 269, 271, 272, 273, 274, 275, 276, 280, 286, 298, 302, 304, 311], "_util": [0, 3, 11, 304], "implement_for": [0, 3, 304], "contribut": 0, "thing": [0, 3, 7, 8, 305, 312, 313, 316, 319, 322], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 71, 75, 87, 93, 109, 144, 163, 176, 191, 305, 310, 317, 319], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 72, 75, 82, 84, 86, 87, 88, 89, 93, 100, 102, 106, 107, 109, 110, 117, 118, 119, 123, 124, 130, 134, 135, 138, 139, 141, 143, 144, 151, 152, 155, 165, 171, 172, 173, 174, 175, 178, 186, 192, 208, 211, 212, 214, 218, 223, 225, 228, 234, 237, 243, 248, 249, 250, 251, 252, 253, 268, 269, 283, 302, 305, 306, 308, 310, 311, 312, 313, 316, 317, 318, 319, 322], "debug": [0, 6, 8, 40, 305, 322], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 71, 75, 79, 87, 93, 103, 117, 123, 141, 144, 156, 171, 204, 210, 215, 223, 234, 237, 286, 305, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "habitat": [0, 3, 77, 305, 318], "lab": [0, 3, 69, 70, 305], "mujoco": [0, 6, 8, 90, 305, 312, 313], "error": [0, 1, 3, 7, 10, 11, 29, 32, 71, 75, 87, 93, 96, 124, 146, 305, 310, 312, 316, 322], "solut": [0, 3, 6, 7, 9, 21, 305, 306, 308, 321], "resourc": [0, 1, 21, 305, 310, 312, 316], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 71, 75, 87, 88, 93, 200, 235, 240, 250, 253, 305, 306, 310, 312, 313, 316, 317, 318, 322], "issu": [0, 4, 5, 8, 55, 56, 65, 79, 102, 124, 136, 197, 203, 204, 208, 209, 210, 211, 212, 305, 321], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 71, 75, 87, 93, 102, 109, 153, 174, 175, 315, 316, 319, 321], "search": [0, 154, 311], "page": [0, 7], "somewhat": [1, 307, 322], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 71, 75, 87, 93, 108, 139, 165, 186, 203, 204, 209, 210, 237, 283, 321, 322], "dataload": [1, 54, 62, 311, 312, 319], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 112, 127, 169, 183, 201, 205, 207, 306, 311, 319, 321, 322], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 117, 118, 119, 121, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 150, 153, 155, 156, 157, 158, 159, 161, 162, 165, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 218, 221, 222, 223, 224, 225, 227, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 264, 265, 267, 277, 282, 283, 284, 295, 298, 302, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 112, 117, 123, 131, 138, 139, 143, 169, 170, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 283, 286, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 90, 102, 119, 123, 143, 146, 207, 222, 224, 227, 238, 240, 242, 277, 283, 286, 288, 289, 290, 298, 308, 310, 313, 316, 317, 318, 319, 321, 322], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 71, 75, 87, 93, 109, 119, 130, 136, 153, 195, 214, 228, 230, 235, 256, 289, 308, 310, 311, 312, 316, 317, 322], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 88, 89, 93, 101, 106, 113, 123, 135, 138, 139, 140, 141, 143, 153, 169, 176, 211, 212, 221, 222, 224, 225, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 306, 310, 313, 316, 317, 319, 322], "static": [1, 11, 40, 45, 144, 233, 317, 319], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 71, 72, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 106, 107, 108, 109, 110, 117, 119, 121, 123, 127, 130, 133, 135, 138, 139, 141, 143, 144, 150, 154, 156, 157, 158, 159, 160, 162, 165, 167, 169, 170, 171, 174, 175, 176, 177, 180, 184, 195, 202, 203, 204, 205, 207, 211, 215, 216, 221, 222, 223, 224, 227, 233, 234, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 277, 306, 307, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 71, 75, 77, 82, 87, 88, 89, 93, 134, 137, 146, 177, 206, 238, 307, 310, 312, 313, 316, 317, 318, 319, 322], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 71, 75, 87, 93, 107, 109, 110, 118, 125, 139, 151, 152, 169, 205, 207, 223, 234, 237, 269, 283, 288, 300, 301, 302, 306, 310, 311, 312, 313, 316, 317, 319], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 71, 75, 79, 84, 87, 88, 89, 93, 102, 106, 123, 133, 135, 137, 138, 139, 141, 143, 144, 146, 156, 169, 175, 176, 177, 179, 185, 194, 198, 200, 201, 204, 205, 208, 211, 212, 215, 222, 233, 235, 240, 250, 251, 252, 253, 254, 295, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 71, 75, 83, 87, 93, 102, 106, 113, 123, 130, 135, 138, 139, 140, 141, 143, 195, 211, 212, 213, 235, 308, 312, 322], "two": [1, 3, 4, 8, 10, 32, 62, 71, 75, 87, 93, 119, 123, 143, 161, 169, 189, 212, 234, 245, 282, 286, 295, 307, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "main": [1, 2, 3, 5, 20, 22, 72, 212, 286, 306, 307, 310, 311, 315, 322], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 71, 75, 84, 87, 88, 93, 105, 106, 123, 131, 133, 135, 138, 139, 141, 143, 153, 156, 169, 171, 174, 175, 176, 177, 178, 195, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 248, 250, 251, 252, 253, 254, 258, 268, 279, 289, 295, 298, 299, 302, 310, 311, 312, 313, 316, 317, 319, 322], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 71, 75, 83, 87, 88, 89, 93, 96, 105, 107, 110, 117, 119, 121, 123, 130, 139, 141, 143, 144, 153, 164, 169, 171, 174, 175, 181, 186, 204, 209, 210, 212, 214, 215, 216, 235, 247, 250, 253, 268, 282, 283, 300, 301, 306, 310, 312, 315, 317, 318, 319, 321, 322], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 138, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 295, 299, 302, 306, 310, 311, 312, 316, 319], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 71, 75, 87, 93, 111, 119, 131, 156, 171, 176, 177, 190, 197, 203, 208, 209, 211, 213, 214, 216, 235, 247, 282, 285, 286, 295, 307, 308, 310, 312, 313, 316, 317], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 83, 84, 87, 93, 100, 135, 169, 205, 213, 214, 290, 302, 306, 308, 311, 312, 313, 316, 319, 320, 322], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 68, 71, 72, 75, 81, 83, 87, 88, 89, 93, 100, 113, 116, 118, 119, 133, 134, 135, 136, 139, 153, 154, 155, 166, 169, 170, 172, 173, 201, 205, 207, 208, 212, 221, 229, 237, 249, 250, 251, 252, 253, 256, 257, 258, 268, 277, 282, 286, 308, 310, 311, 313, 315, 317, 318, 319, 321], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 71, 75, 87, 93, 123, 138, 141, 144, 214, 310, 317, 321], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 71, 75, 87, 93, 124, 134, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 225, 235, 250, 251, 252, 253, 254, 268, 299, 310, 311, 313, 317, 319, 322], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 71, 75, 83, 84, 86, 87, 88, 89, 93, 102, 109, 114, 118, 119, 129, 133, 136, 144, 155, 156, 163, 164, 166, 167, 168, 169, 171, 173, 176, 177, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 197, 201, 202, 205, 207, 208, 211, 212, 216, 220, 222, 227, 229, 233, 234, 236, 238, 240, 242, 277, 279, 282, 286, 288, 289, 290, 300, 301, 302, 306, 310, 311, 312, 313, 316, 317, 318, 322], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 71, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 169, 171, 178, 179, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 251, 252, 253, 283, 310, 312, 313, 316, 317, 319, 322], "deliv": [1, 16, 18, 19, 20, 310, 311, 321], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 71, 75, 82, 87, 88, 89, 93, 144, 169, 213, 214, 268, 277, 306, 311, 315, 317, 321], "user": [1, 2, 3, 5, 8, 21, 32, 52, 71, 75, 87, 93, 134, 139, 162, 170, 237, 299, 307, 308, 310, 311, 317, 321, 322], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 68, 71, 72, 75, 81, 82, 83, 84, 86, 87, 88, 89, 93, 100, 102, 106, 111, 113, 116, 118, 123, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 146, 154, 169, 196, 207, 268, 295, 310, 311, 312, 313, 315, 316, 321], "whenev": [1, 3, 32, 35, 38, 41, 42, 99, 116, 139, 235, 250, 251, 252, 253, 288, 306], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 71, 75, 87, 93, 133, 201, 205, 207, 310, 312, 316, 321, 322], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 107, 108, 110, 111, 118, 119, 121, 125, 127, 129, 131, 133, 135, 136, 138, 144, 153, 154, 155, 169, 173, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 295, 307, 310, 312, 313, 315, 316, 317, 319, 321, 322], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 68, 71, 75, 81, 83, 87, 88, 89, 91, 92, 93, 100, 102, 103, 105, 106, 111, 116, 119, 125, 131, 133, 134, 136, 138, 139, 142, 144, 153, 154, 155, 157, 162, 166, 169, 170, 171, 173, 181, 184, 185, 187, 188, 194, 198, 211, 217, 221, 223, 234, 235, 237, 238, 239, 248, 249, 250, 251, 252, 253, 254, 302, 306, 307, 310, 311, 312, 313, 316, 317, 322], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 71, 75, 79, 87, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 169, 178, 201, 203, 205, 209, 230, 311, 312, 313, 316, 317, 318, 319, 322], "predefin": [1, 311, 312, 319], "becaus": [1, 3, 4, 7, 40, 71, 75, 87, 93, 117, 133, 138, 161, 170, 177, 197, 203, 204, 208, 209, 210, 211, 212, 310, 311, 313, 315, 316, 317, 319, 322], "potenti": [1, 317, 319], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 71, 75, 87, 93, 119, 139, 142, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 187, 188, 190, 192, 193, 195, 198, 201, 202, 204, 205, 207, 208, 210, 212, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 290, 307, 310, 312, 313, 315, 316, 318, 319], "heavi": [1, 8, 319], "crucial": [1, 201, 205, 207, 233, 235, 310, 311, 312, 313, 316, 317, 322], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 117, 157, 162, 184, 235, 237, 295, 306, 310, 311, 312, 316, 317], "hyperparamet": [1, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 310, 317, 319], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 135, 299, 302, 310, 319], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 69, 70, 71, 72, 75, 83, 84, 86, 87, 88, 89, 90, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 298, 299, 300, 301, 302, 306, 307, 310, 313, 316, 317, 318, 321], "take": [1, 3, 8, 23, 40, 71, 75, 87, 93, 105, 133, 134, 136, 138, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 206, 207, 210, 215, 218, 220, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 277, 288, 306, 308, 310, 311, 312, 316, 317, 319, 322], "consider": [1, 3, 8, 311, 316, 319], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 83, 87, 88, 89, 90, 93, 107, 110, 134, 139, 154, 156, 169, 171, 216, 222, 223, 224, 225, 227, 228, 234, 235, 237, 238, 240, 242, 248, 250, 253, 310, 311, 312, 316, 317, 322], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 82, 83, 87, 88, 89, 90, 93, 102, 105, 106, 107, 108, 111, 113, 117, 119, 124, 125, 127, 130, 131, 133, 134, 136, 138, 139, 144, 146, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 208, 210, 211, 212, 215, 218, 227, 232, 234, 235, 237, 238, 241, 249, 250, 251, 252, 253, 254, 269, 281, 282, 283, 286, 298, 300, 301, 302, 306, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "occur": [1, 8, 14, 28, 29, 103, 119, 124, 154, 197, 203, 204, 208, 209, 210, 211, 212, 230, 319, 322], "serial": [1, 3, 32, 71, 75, 87, 93, 144], "optim": [1, 2, 8, 32, 71, 75, 87, 93, 139, 155, 173, 178, 179, 222, 235, 236, 237, 240, 281, 286, 298, 307, 308, 312, 313, 316, 317], "parallel": [1, 3, 8, 17, 88, 89, 146, 221, 299, 300, 301, 302, 311, 312, 316], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 102, 127, 298, 301, 304, 312, 313, 316, 319], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 75, 77, 82, 83, 87, 88, 89, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 301, 302, 306, 307, 308, 310, 311, 312, 313, 316, 319, 322], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 72, 84, 87, 93, 144, 300, 301, 302, 310, 312, 321, 322], "multisyncdatacollector": [1, 18, 19, 20, 21, 301, 304, 312, 321], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 82, 88, 89, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 306, 308, 312, 319, 321], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 79, 144, 176, 207, 288, 306, 310, 316, 317], "aggreg": [1, 154, 156, 158, 159, 214], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 71, 72, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 153, 154, 169, 171, 176, 186, 202, 204, 205, 210, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 250, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 288, 306, 311, 313, 317, 318, 321, 322], "final": [1, 3, 4, 21, 34, 36, 39, 40, 169, 176, 201, 205, 206, 207, 213, 250, 282, 306, 310, 311, 312, 316, 317, 322], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 300, 304, 310, 311, 312, 321], "sever": [1, 8, 30, 32, 45, 71, 75, 87, 93, 103, 105, 139, 237, 310, 312, 319, 322], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 71, 75, 83, 84, 86, 87, 93, 102, 113, 119, 121, 124, 127, 135, 139, 140, 144, 154, 163, 164, 169, 170, 174, 175, 176, 177, 178, 183, 185, 191, 195, 207, 211, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 277, 280, 283, 284, 285, 286, 288, 300, 301, 302, 308, 311, 312, 313, 315, 316, 318, 321, 322], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 124, 175, 183, 249, 290, 305, 310, 311, 312, 313, 316, 317, 319, 322], "continu": [1, 9, 25, 46, 71, 75, 87, 88, 89, 93, 150, 158, 159, 160, 161, 207, 214, 221, 222, 227, 233, 237, 238, 239, 240, 241, 242, 250, 255, 263, 306, 310, 312, 313, 316, 317, 319, 321, 322], "concomitantli": 1, "network": [1, 4, 8, 32, 71, 75, 82, 87, 88, 89, 93, 156, 158, 159, 160, 161, 164, 166, 167, 171, 176, 177, 179, 181, 182, 185, 187, 188, 189, 194, 198, 199, 200, 211, 215, 222, 223, 224, 225, 227, 228, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 246, 248, 250, 251, 252, 253, 254, 297, 298, 306, 307, 308, 315, 317, 322], "impli": [1, 322], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 71, 75, 87, 91, 92, 93, 106, 123, 135, 138, 139, 141, 143, 169, 176, 179, 211, 221, 222, 223, 227, 230, 288, 297, 306, 308, 310, 311, 312, 313, 315, 317, 319, 321], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 71, 75, 87, 93, 117, 119, 131, 139, 140, 144, 146, 171, 176, 307, 308, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322], "slightli": [1, 306, 307, 313, 317, 318, 319, 322], "lag": [1, 13, 14, 16, 17, 310, 311, 312], "therefor": [1, 3, 7, 71, 75, 87, 93, 127, 134, 237, 248, 322], "although": [1, 8, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 308, 310, 311, 319], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 71, 75, 82, 83, 86, 87, 88, 89, 93, 100, 102, 117, 123, 127, 130, 133, 136, 138, 140, 143, 153, 154, 174, 175, 176, 201, 205, 207, 208, 211, 212, 220, 221, 222, 223, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 307, 308, 310, 311, 312, 315, 316, 317, 319, 322], "asynchron": [1, 9, 14, 21, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 221, 300, 311, 312], "off": [1, 2, 4, 168, 193, 203, 240, 282, 291, 306, 308, 310, 311, 312, 316, 318, 322], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 71, 75, 87, 88, 89, 93, 107, 110, 113, 119, 134, 165, 169, 177, 178, 198, 200, 202, 204, 209, 221, 228, 233, 237, 282, 306, 308, 310, 311, 312, 313, 316, 317, 318, 319, 322], "remot": [1, 18, 19, 20, 21, 87, 93, 322], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 71, 75, 78, 83, 84, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 105, 107, 110, 111, 117, 121, 125, 130, 131, 133, 136, 146, 155, 169, 173, 207, 221, 290, 306, 310, 312, 313, 318, 319, 321], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 131, 238, 250, 251, 252, 253, 254, 307, 310, 312], "synchronis": [1, 72, 316], "either": [1, 5, 22, 32, 40, 54, 71, 75, 87, 93, 133, 134, 217, 242, 273, 308, 310, 311, 313, 318, 319, 321, 322], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 310, 316, 321], "update_at_each_batch": [1, 13, 14, 17, 310], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 69, 70, 71, 72, 73, 75, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 106, 109, 113, 116, 117, 118, 119, 123, 124, 125, 129, 131, 133, 135, 137, 138, 139, 140, 141, 143, 144, 146, 150, 153, 154, 155, 156, 158, 159, 160, 161, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 192, 193, 197, 198, 199, 200, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 250, 251, 252, 253, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 279, 280, 282, 283, 286, 302, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "second": [1, 8, 169, 204, 223, 234, 237, 240, 285, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 68, 71, 73, 75, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 110, 111, 117, 121, 122, 123, 125, 127, 131, 133, 135, 137, 138, 139, 141, 143, 150, 153, 155, 156, 157, 158, 159, 160, 161, 165, 167, 169, 170, 171, 173, 176, 177, 178, 179, 184, 185, 186, 194, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 214, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 283, 288, 295, 296, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 71, 75, 87, 93, 113, 117, 138, 164, 165, 180, 198, 199, 200, 203, 204, 206, 211, 217, 221, 223, 224, 225, 228, 234, 237, 239, 248, 249, 250, 251, 252, 253, 286, 295, 304, 308, 310, 311, 312, 313, 315, 316, 317, 322], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 70, 71, 72, 75, 83, 87, 93, 102, 119, 135, 138, 144, 150, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 172, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 218, 225, 227, 235, 248, 250, 251, 252, 253, 269, 273, 282, 290, 291, 292, 295, 298, 300, 301, 306, 307, 308, 310, 311, 312, 313, 317, 319, 322], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 106, 107, 108, 110, 111, 121, 123, 125, 127, 131, 133, 135, 138, 139, 141, 143, 150, 153, 155, 169, 173, 178, 179, 185, 186, 194, 197, 198, 199, 200, 202, 203, 204, 208, 209, 210, 211, 214, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 283, 295, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 71, 75, 79, 87, 93, 125, 161, 169, 171, 180, 195, 197, 201, 203, 211, 216, 235, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 305, 307, 310, 311, 312, 316, 317, 319, 321, 322], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 71, 72, 75, 79, 82, 86, 87, 88, 89, 93, 100, 102, 105, 107, 108, 109, 110, 118, 119, 123, 127, 130, 132, 138, 139, 140, 143, 144, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 190, 195, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 233, 234, 235, 237, 238, 239, 240, 241, 242, 248, 250, 251, 252, 253, 257, 258, 279, 281, 282, 286, 290, 295, 302, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 322], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 78, 79, 87, 93, 106, 117, 122, 123, 135, 138, 139, 141, 143, 211, 278, 310, 311, 312, 313, 316, 318, 322], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 87, 93, 103, 105, 109, 118, 127, 130, 133, 138, 144, 169, 170, 176, 178, 179, 197, 203, 208, 209, 211, 212, 215, 223, 227, 234, 237, 238, 242, 256, 295, 302, 306, 308, 310, 311, 312, 316, 317, 319, 321], "infer": [1, 87, 93, 102, 134, 144, 169, 178, 202, 310, 312, 319], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 69, 70, 71, 75, 83, 87, 93, 118, 119, 139, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 213, 214, 215, 218, 282, 300, 301, 302, 305, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321], "dispatch": [1, 18, 19, 20, 21, 195], "avail": [1, 3, 4, 6, 21, 62, 79, 88, 89, 117, 165, 186, 208, 212, 235, 300, 301, 306, 310, 311, 312, 313, 316, 317, 319, 322], "speed": [1, 2, 4, 8, 27, 307, 310, 311, 312, 313, 316, 317, 319], "up": [1, 2, 3, 8, 9, 27, 40, 52, 136, 138, 237, 305, 306, 307, 310, 311, 312, 313, 316, 317, 319, 322], "avoid": [1, 32, 55, 56, 65, 71, 75, 87, 93, 99, 139, 144, 197, 211, 216, 223, 234, 237, 289, 312, 316], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 180, 306, 307, 310, 311, 316], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 68, 71, 73, 75, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 107, 110, 111, 113, 121, 123, 125, 127, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 150, 153, 155, 156, 157, 162, 163, 165, 169, 170, 171, 173, 174, 175, 176, 177, 180, 183, 184, 185, 186, 187, 188, 191, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 216, 221, 222, 224, 225, 227, 233, 235, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 269, 277, 283, 295, 306, 311, 312, 313, 315, 316, 317, 321, 322], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 71, 72, 73, 75, 82, 84, 87, 88, 89, 93, 107, 110, 125, 138, 140, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 178, 180, 181, 182, 184, 185, 187, 188, 190, 194, 195, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 223, 234, 235, 237, 250, 251, 252, 253, 254, 283, 300, 301, 302, 306, 310, 311, 312, 313, 315, 316, 317, 319, 322], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 71, 75, 79, 86, 87, 93, 102, 113, 140, 144, 154, 169, 202, 221, 223, 224, 227, 233, 234, 235, 237, 238, 239, 240, 242, 250, 251, 252, 253, 306, 307, 311, 312, 316, 319], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 71, 75, 87, 93, 144, 155, 170, 173, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 295, 304, 308, 310, 312, 313, 316, 318, 319, 322], "while": [1, 3, 7, 8, 32, 71, 75, 87, 93, 127, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 233, 234, 237, 306, 310, 312, 313, 316, 317, 318, 319, 321], "wait": [1, 20, 21, 22, 313, 317], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 71, 75, 87, 88, 89, 93, 99, 102, 109, 119, 125, 127, 130, 131, 133, 135, 139, 188, 213, 214, 215, 221, 222, 224, 225, 227, 233, 237, 240, 250, 257, 258, 306, 308, 310, 311, 312, 313, 315, 316, 317, 319, 322], "impact": [1, 107, 110, 311, 313, 316], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 71, 72, 75, 79, 87, 93, 102, 106, 123, 135, 138, 139, 141, 143, 144, 211, 302, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "manag": [1, 8, 246, 247, 250, 251, 252, 253, 282], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 71, 75, 87, 93, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 153, 154, 155, 164, 165, 169, 172, 173, 186, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 269, 280, 281, 282, 284, 285, 286, 290, 295, 307, 308, 310, 312, 313, 315, 316, 317, 319, 321, 322], "control": [1, 3, 5, 8, 16, 69, 70, 82, 88, 89, 109, 153, 158, 159, 160, 161, 169, 172, 173, 188, 195, 207, 211, 212, 213, 221, 223, 234, 237, 241, 250, 255, 263, 306, 308, 310, 311, 312, 316, 317, 319], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 71, 75, 79, 84, 87, 90, 93, 102, 103, 107, 110, 114, 117, 118, 119, 123, 124, 133, 135, 136, 138, 139, 141, 146, 168, 169, 174, 175, 176, 193, 198, 199, 200, 202, 208, 211, 212, 214, 221, 222, 223, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 245, 248, 250, 251, 252, 253, 277, 281, 295, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 322], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 310, 311, 316, 321], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 71, 75, 87, 88, 89, 93, 102, 105, 107, 110, 114, 121, 134, 139, 169, 282, 286, 307, 310, 311, 312, 313, 316, 317, 319, 322], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 207, 310, 322], "usual": [1, 3, 4, 6, 7, 8, 52, 71, 75, 87, 93, 179, 237, 250, 251, 252, 253, 254, 268, 295, 305, 306, 308, 310, 311, 312, 313, 316, 319, 322], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 71, 72, 75, 82, 87, 88, 89, 93, 102, 107, 109, 110, 114, 118, 119, 138, 139, 144, 156, 169, 171, 174, 175, 176, 177, 202, 207, 215, 310, 311, 312, 315, 316, 318, 319, 322], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 71, 73, 75, 87, 93, 102, 107, 110, 127, 304, 308, 311, 312, 313, 316, 318], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 69, 71, 75, 86, 87, 88, 89, 90, 93, 100, 102, 103, 107, 109, 110, 113, 117, 118, 119, 121, 123, 124, 127, 129, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 190, 191, 192, 193, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 295, 298, 302, 308, 310, 311, 312, 313, 318, 319, 321, 322], "behaviour": [1, 3, 21, 75, 103, 107, 110, 119, 124, 134, 153, 168, 169, 193, 282, 306, 311, 313, 317, 319], "besid": 1, "those": [1, 5, 7, 26, 28, 87, 93, 102, 107, 110, 119, 135, 136, 169, 208, 212, 213, 214, 288, 300, 301, 306, 310, 311, 316, 317, 322], "choos": [1, 82, 169, 237, 306, 307, 310, 311, 312, 316, 319], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 71, 75, 83, 86, 87, 88, 89, 91, 92, 93, 117, 123, 141, 156, 169, 171, 204, 209, 210, 220, 221, 222, 223, 224, 227, 233, 234, 235, 237, 238, 239, 240, 242, 286, 295, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 289, 310, 312, 321], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 102, 114, 201, 205, 207, 268, 269, 279, 282, 286, 289, 290, 310, 311, 312, 313, 316, 319, 321, 322], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 75, 86, 87, 93, 102, 105, 106, 109, 113, 116, 117, 119, 121, 122, 123, 130, 135, 138, 139, 141, 143, 144, 146, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 173, 176, 177, 178, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 211, 212, 214, 215, 218, 223, 234, 237, 249, 250, 251, 252, 253, 268, 282, 308, 311, 312, 313, 316, 317, 318, 319, 322], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 102, 127, 289, 310, 311, 312, 313, 316, 319, 321], "each": [1, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 71, 72, 75, 87, 88, 89, 93, 123, 127, 130, 133, 134, 135, 136, 143, 144, 165, 169, 176, 177, 181, 185, 186, 194, 201, 203, 204, 205, 210, 214, 256, 259, 260, 261, 262, 264, 265, 266, 267, 282, 283, 300, 301, 306, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 289, 310, 311], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 71, 75, 83, 87, 93, 109, 118, 119, 135, 146, 169, 205, 208, 211, 212, 222, 238, 282, 290, 306, 310, 311, 312, 313, 317, 318, 319, 321, 322], "rand_step": [1, 3, 67, 69, 70, 71, 72, 74, 75, 76, 80, 83, 84, 87, 93, 116, 135, 144, 317, 321, 322], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 310], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 310, 311, 312], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 71, 75, 87, 93, 124, 133, 138, 155, 169, 173, 207, 237, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 277, 304, 307, 310, 311, 312, 313, 317, 319, 321, 322], "pad": [1, 23, 37, 43, 52, 102, 156, 158, 159, 169, 170, 174, 175, 176, 283], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 102, 103, 119, 121, 124, 130, 137, 169, 171, 174, 175, 179, 203, 208, 211, 212, 235, 306, 310, 311, 313, 316, 317, 319], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 71, 75, 87, 93, 102, 106, 123, 135, 137, 138, 139, 141, 143, 172, 211, 220, 228, 286, 305, 311, 312, 315, 316, 317, 319, 322], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 75, 124, 133, 154, 174, 175, 201, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 308, 313], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 71, 75, 87, 93, 114, 124, 144, 165, 174, 175, 186, 203, 204, 209, 210, 212, 245, 250, 283, 310, 312, 313, 316], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 96, 124, 139, 156, 171, 174, 175, 201, 207, 234, 250, 251, 252, 253, 283, 308, 322], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 282, 304, 310, 311], "strategi": [1, 16, 82, 175, 183, 205, 306, 308, 310, 311, 316, 319], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 71, 75, 87, 93, 123, 143, 306, 307, 310, 312, 316, 317, 319, 322], "tool": [1, 2, 3, 5, 313, 317, 319, 322], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 97, 99, 308, 310, 312, 313, 317], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 304], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 304], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 103, 106, 107, 108, 109, 110, 111, 117, 119, 121, 123, 125, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 150, 153, 154, 155, 156, 157, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 219, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 277, 284, 285, 295, 298, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "multiprocess": [1, 3, 18, 19, 20, 72, 73, 144, 311, 312, 317, 322], "synchron": [1, 13, 19, 21, 84, 300, 301, 311, 312], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 84, 87, 93, 107, 110, 134, 139, 144, 147, 151, 152, 163, 168, 169, 183, 191, 192, 193, 208, 212, 235, 282, 310, 311, 313, 316, 321, 322], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 201, 207, 280, 284, 310, 311, 316], "dedic": [1, 3, 18, 19, 20, 21, 198, 199, 200, 306, 310, 315, 316], "folder": [1, 311], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 71, 75, 87, 93, 124, 213, 214, 277, 286, 306, 310, 311, 312, 315, 321, 322], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 71, 72, 75, 83, 87, 88, 89, 93, 96, 102, 105, 106, 107, 108, 110, 112, 117, 118, 119, 123, 130, 135, 136, 138, 139, 141, 143, 144, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 211, 212, 214, 215, 218, 230, 235, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 281, 286, 289, 300, 301, 302, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 321, 322], "variou": [1, 3, 13, 14, 16, 17, 169, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 243, 248, 300, 301, 310, 311, 312, 316, 322], "machin": [1, 7, 18, 19, 20, 32, 53, 79, 316], "One": [1, 2, 4, 8, 31, 33, 45, 102, 127, 141, 183, 201, 211, 215, 241, 245, 273, 310, 311, 319, 322], "wonder": 1, "why": [1, 3, 317, 322], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 84, 88, 89, 93, 299, 304, 310, 311, 312, 315, 321, 322], "instead": [1, 4, 7, 8, 11, 27, 32, 71, 75, 87, 93, 113, 135, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 221, 222, 223, 225, 227, 228, 233, 234, 237, 238, 239, 240, 248, 250, 254, 258, 302, 306, 317, 319, 322], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 71, 75, 87, 88, 89, 93, 106, 107, 108, 110, 123, 127, 131, 134, 135, 137, 138, 139, 141, 143, 168, 171, 176, 188, 192, 193, 211, 214, 220, 221, 222, 224, 225, 227, 233, 235, 237, 238, 239, 240, 242, 288, 300, 301, 302, 306, 307, 310, 311, 312, 313, 315, 316, 317, 318, 319, 322], "lower": [1, 2, 17, 21, 25, 105, 144, 187, 188, 215, 312, 317], "io": [1, 84], "footprint": [1, 2, 319], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 63, 71, 75, 79, 82, 87, 88, 89, 93, 102, 105, 113, 123, 125, 136, 139, 143, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 178, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 209, 210, 211, 215, 218, 220, 227, 238, 239, 240, 242, 249, 254, 269, 286, 302, 306, 307, 310, 311, 312, 313, 316, 317, 319, 321, 322], "commun": [1, 2, 3, 305, 312, 322], "yet": [1, 235, 318], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 71, 73, 75, 83, 87, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 150, 154, 165, 186, 188, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 295, 306, 310, 311, 312, 313, 315, 316, 321], "plai": [1, 3, 88, 89, 102, 311, 312, 319, 322], "role": [1, 3, 311, 322], "opposit": 1, "direct": [1, 32, 71, 75, 87, 93, 235, 311], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 71, 75, 87, 88, 89, 93, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 203, 204, 205, 207, 209, 210, 215, 218, 310, 311, 312, 313, 317, 318, 319, 321, 322], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 84, 250, 251, 252, 253, 313, 316], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 72, 87, 93, 144, 169, 176, 177, 198, 199, 200, 221, 223, 224, 227, 233, 234, 237, 238, 239, 240, 242, 302, 306, 312, 313, 315, 316, 321, 322], "among": [1, 3, 88, 89, 316], "achiev": [1, 3, 4, 32, 71, 75, 79, 87, 93, 134, 154, 283, 308, 310, 311, 312, 313, 316, 317, 322], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 87, 123, 138, 143, 226, 235, 307, 308, 310, 311, 312, 313, 319, 322], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 282, 307, 310, 312, 316, 319, 322], "gpu": [1, 7, 8, 32, 55, 56, 65, 71, 75, 79, 87, 93, 310, 312, 313, 316, 322], "nativ": [1, 7, 9, 71, 75, 87, 93, 102, 313, 319], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 168, 192, 193, 220, 305, 310, 311, 312, 313, 316, 318, 322], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 75, 119, 144, 155, 163, 166, 169, 170, 173, 191, 201, 208, 212, 235, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 306, 307, 310, 311, 312, 316, 317, 319, 321, 322], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 71, 75, 87, 93, 105, 106, 123, 131, 135, 138, 139, 141, 143, 169, 174, 175, 197, 201, 202, 203, 205, 207, 208, 209, 211, 212, 215, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 248, 250, 251, 252, 253, 254, 258, 299, 310, 311, 312, 316, 319, 322], "build": [1, 3, 7, 23, 26, 32, 71, 75, 87, 90, 93, 127, 144, 155, 169, 173, 206, 208, 212, 286, 293, 294, 296, 297, 306, 308, 312, 313, 316, 317, 318, 321, 322], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 71, 75, 83, 87, 93, 106, 109, 119, 123, 135, 138, 139, 141, 143, 153, 155, 165, 166, 173, 186, 190, 197, 203, 204, 205, 207, 210, 211, 212, 213, 214, 216, 220, 224, 225, 249, 250, 251, 252, 253, 254, 256, 278, 282, 298, 306, 308, 310, 311, 312, 316, 317, 322], "mani": [1, 3, 4, 38, 71, 221, 223, 227, 234, 237, 238, 242, 306, 310, 311, 312, 316, 317, 319, 322], "eg": [1, 3, 11, 55, 56, 57, 63, 65, 71, 75, 79, 87, 93, 109, 133, 176, 202], "gymnasium": [1, 3, 5, 11, 71, 75, 87, 93, 97, 99, 111, 131, 133, 311, 312, 317, 321], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 71, 75, 83, 87, 93, 105, 108, 109, 131, 137, 141, 144, 169, 179, 180, 202, 204, 205, 210, 212, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 250, 283, 295, 300, 301, 306, 308, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322], "warn": [1, 3, 201, 205, 207, 311, 322], "quickli": [1, 3, 311, 316, 322], "becom": [1, 3, 4, 21, 316, 322], "quit": [1, 3, 306, 310, 311, 312, 316, 322], "annoi": [1, 3], "By": [1, 2, 3, 33, 71, 75, 87, 88, 89, 93, 195, 212, 235, 282, 302, 310, 318, 319, 322], "filter": [1, 3, 4, 45, 221, 222, 224, 227, 233, 237, 238, 240], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 71, 75, 87, 88, 89, 93, 135, 146, 174, 175, 178, 179, 197, 202, 203, 204, 207, 208, 209, 210, 211, 212, 246, 247, 308, 310, 311, 312, 313, 316, 317, 319, 321, 322], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 71, 72, 75, 79, 83, 87, 88, 89, 93, 97, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 118, 119, 123, 124, 127, 130, 131, 135, 136, 138, 139, 141, 143, 144, 153, 154, 156, 169, 170, 171, 174, 175, 176, 177, 195, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 264, 265, 266, 267, 281, 283, 286, 288, 290, 295, 298, 302, 305, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "still": [1, 3, 9, 201, 234, 235, 310, 311, 313, 315, 317, 319, 322], "wish": [1, 3, 99, 319], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 71, 75, 78, 84, 87, 88, 89, 93, 106, 123, 135, 137, 138, 139, 141, 143, 145, 156, 168, 171, 177, 178, 185, 193, 194, 198, 200, 211, 212, 283, 310, 311, 312, 313, 316, 317, 319, 322], "displai": [1, 3, 7, 286, 308, 310, 311, 316, 317], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 68, 69, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 110, 111, 113, 116, 117, 118, 119, 121, 123, 124, 125, 127, 129, 131, 133, 135, 137, 138, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 158, 165, 168, 169, 171, 173, 174, 175, 176, 177, 185, 186, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 248, 250, 251, 252, 253, 259, 260, 261, 262, 264, 265, 266, 267, 279, 280, 282, 283, 284, 286, 295, 302, 306, 308, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "central": [2, 176, 310, 311, 316, 319], "part": [2, 4, 8, 32, 40, 71, 75, 87, 93, 119, 127, 130, 169, 216, 277, 302, 310, 312, 313, 317, 322], "algorithm": [2, 3, 8, 9, 13, 14, 83, 114, 221, 237, 238, 239, 240, 277, 291, 304, 307, 308, 310, 311, 312, 313, 316, 318, 319, 321], "implement": [2, 3, 9, 11, 16, 32, 63, 71, 75, 84, 87, 93, 106, 107, 108, 111, 117, 125, 131, 133, 138, 144, 168, 191, 192, 193, 221, 222, 226, 233, 235, 236, 237, 240, 295, 306, 308, 310, 311, 312, 313, 317, 321], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 62, 71, 72, 75, 79, 87, 93, 102, 117, 123, 125, 135, 141, 144, 155, 169, 170, 176, 177, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "give": [2, 7, 41, 71, 75, 83, 87, 93, 102, 305, 307, 310, 311, 316, 317, 318, 321], "abil": [2, 235, 317, 319], "veri": [2, 3, 311, 317, 319, 321, 322], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 71, 75, 83, 86, 87, 93, 102, 124, 127, 147, 148, 151, 152, 155, 163, 168, 173, 174, 175, 183, 184, 187, 192, 193, 197, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221, 222, 223, 224, 225, 234, 236, 237, 242, 277, 283, 286, 289, 306, 310, 311, 312, 313, 316, 318, 321, 322], "latenc": 2, "especi": [2, 3, 7, 8, 103], "larger": [2, 4, 233], "volum": 2, "lazymemmapstorag": [2, 102, 304, 310, 311, 313, 318, 319], "advis": [2, 322], "due": [2, 3, 5, 318, 319, 322], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 319], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 71, 75, 87, 93, 187, 188, 235, 254, 310, 311, 313, 318, 319, 321, 322], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 71, 75, 87, 88, 89, 93, 107, 108, 110, 130, 132, 134, 140, 155, 211, 212, 235, 241, 306, 310, 312, 313], "file": [2, 6, 7, 8, 268, 308, 311, 318, 319, 320], "locat": [2, 7, 45, 71, 75, 87, 93, 119, 129, 168, 180, 192, 193, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 310, 311, 312, 316, 319], "improv": [2, 4, 114, 221, 307, 316, 319], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 304, 319], "were": [2, 7, 87, 93, 312, 319], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 71, 75, 79, 87, 93, 100, 102, 127, 130, 136, 144, 154, 205, 208, 212, 234, 235, 237, 310, 311, 313], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 79, 84, 88, 89, 90, 102, 123, 141, 157, 158, 159, 160, 161, 162, 165, 166, 167, 173, 174, 175, 179, 181, 182, 184, 185, 187, 188, 194, 204, 207, 221, 222, 226, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 250, 255, 263, 295, 318, 321], "github": [2, 5, 6, 7, 10, 18, 19, 20, 88, 89, 90, 141, 321], "com": [2, 5, 6, 7, 10, 18, 19, 20, 79, 88, 89, 90, 321], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 71, 75, 82, 83, 87, 88, 89, 93, 106, 107, 108, 111, 117, 123, 125, 131, 133, 135, 138, 139, 141, 143, 144, 148, 152, 156, 171, 176, 177, 179, 185, 194, 201, 203, 208, 211, 212, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 244, 248, 256, 295, 300, 306, 310, 311, 312, 316, 317, 319, 322], "1x": 2, "lazytensorstorag": [2, 41, 42, 127, 304, 312, 316, 319], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 71, 75, 78, 82, 84, 86, 87, 88, 89, 91, 92, 93, 100, 102, 106, 109, 111, 117, 119, 121, 123, 125, 127, 130, 131, 133, 135, 137, 138, 139, 141, 143, 150, 155, 156, 158, 159, 162, 165, 167, 169, 170, 171, 173, 176, 177, 180, 183, 185, 195, 197, 198, 199, 200, 203, 204, 208, 210, 211, 214, 215, 216, 221, 222, 224, 225, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 256, 259, 260, 261, 262, 264, 265, 266, 267, 269, 285, 306, 308, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322], "44x": 2, "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 87, 93, 118, 168, 192, 193, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 311, 312, 317, 319, 322], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 86, 102, 124, 156, 197, 201, 203, 211, 212, 216, 277, 310, 312, 319, 322], "pai": [2, 8, 310, 313], "attent": [2, 8, 310, 313, 322], "alwai": [2, 3, 20, 26, 28, 32, 54, 71, 75, 87, 93, 117, 118, 228, 235, 306, 307, 311, 312, 313, 316, 317, 319], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 135, 168, 185, 192, 193, 310, 313, 316, 317, 319, 321], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 93, 102, 103, 113, 119, 121, 124, 130, 132, 137, 140, 144, 156, 157, 162, 169, 171, 174, 175, 176, 178, 179, 184, 185, 189, 190, 191, 192, 195, 203, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 302, 306, 310, 311, 312, 313, 316, 317, 319], "word": [2, 40, 52, 235, 310, 317, 322], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 71, 72, 75, 79, 84, 87, 88, 93, 102, 123, 138, 139, 141, 144, 150, 153, 156, 158, 159, 160, 161, 162, 167, 169, 171, 172, 176, 177, 202, 212, 225, 228, 238, 248, 269, 283, 290, 291, 292, 298, 300, 301, 306, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322], "1m": [2, 289, 310, 312, 313], "multidimension": [2, 41, 58, 319], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 162, 169, 178, 195, 202, 213, 214, 221, 223, 228, 234, 237, 249, 286, 306, 308, 310, 311, 312, 313, 317, 319, 322], "desir": [2, 3, 32, 71, 75, 87, 93, 106, 119, 121, 123, 124, 135, 138, 139, 141, 143, 151, 152, 156, 171, 177, 197, 203, 204, 208, 209, 210, 211, 212, 306, 310, 316, 317], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 71, 75, 76, 79, 81, 84, 87, 93, 111, 119, 123, 124, 127, 133, 141, 146, 176, 177, 178, 203, 212, 235, 237, 250, 251, 252, 253, 283, 292, 302, 306, 307, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "do": [2, 3, 4, 7, 75, 118, 124, 144, 153, 177, 178, 199, 250, 308, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "custom": [2, 3, 5, 32, 71, 75, 87, 93, 141, 176, 177, 215, 228, 237, 243, 302, 306, 310, 311, 312, 313, 316], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 69, 71, 75, 82, 84, 87, 88, 89, 90, 93, 96, 109, 111, 125, 130, 131, 133, 139, 141, 154, 169, 203, 209, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 254, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 295, 308, 310, 311, 312, 313, 316, 317, 322], "randomcroptensordict": [2, 310], "here": [2, 3, 4, 7, 8, 9, 10, 71, 75, 79, 87, 88, 89, 93, 102, 306, 307, 310, 311, 312, 313, 316, 317, 319, 321, 322], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 71, 75, 87, 88, 89, 93, 221, 223, 232, 234, 237, 286, 305, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 67, 68, 69, 70, 74, 76, 77, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 94, 95, 97, 180, 195, 201, 202, 207, 212, 217, 250, 274, 275, 276, 302, 304, 312, 313, 316, 318, 322], "around": [2, 5, 7, 15, 17, 41, 42, 83, 212, 250, 310, 311, 316, 322], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 102, 146, 222, 233, 308, 318, 319, 321], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 71, 75, 87, 93, 111, 127, 131, 153, 154, 157, 158, 159, 160, 161, 167, 179, 184, 207, 211, 212, 213, 214, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 302, 308, 310, 315, 316, 319, 321], "replaybuff": [2, 41, 42, 66, 102, 124, 127, 225, 228, 248, 296, 298, 304, 312, 316, 318, 319, 321], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 124, 225, 228, 248, 304, 310, 312, 316, 319], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 71, 75, 82, 87, 88, 89, 91, 92, 93, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 150, 165, 180, 197, 198, 199, 200, 203, 208, 209, 211, 212, 214, 215, 216, 217, 248, 282, 304, 306, 307, 310, 311, 312, 313, 318], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 109, 110, 111, 113, 116, 119, 121, 123, 124, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 221, 222, 224, 225, 227, 230, 231, 233, 235, 237, 238, 239, 240, 242, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 295, 306, 308, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 71, 75, 87, 93, 125, 135, 153, 171, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 243, 245, 248, 306, 308, 310, 312, 313, 316, 317, 319, 322], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 88, 89, 91, 92, 286, 305, 312, 313, 316, 322], "respons": [2, 3, 8, 286, 322], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 117, 198, 199, 200, 211, 233, 295, 304, 310, 317, 321], "repositori": [2, 7, 53], "latest": [2, 3, 10, 84, 88, 89, 283, 312, 316, 317, 321], "wheel": [2, 312], "publish": 2, "pypi": [2, 321], "openml": [2, 53, 86], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 71, 75, 79, 84, 87, 90, 93, 106, 123, 135, 138, 139, 141, 143, 171, 195, 211, 213, 214, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 306, 308, 310, 311, 312, 313, 316, 317, 319, 322], "parent": [2, 3, 21, 26, 28, 44, 71, 103, 106, 108, 113, 114, 119, 123, 130, 133, 135, 138, 140, 141, 198, 235, 237, 254, 310, 317, 321, 322], "subclass": [2, 3, 71, 75, 87, 93, 138, 146, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 211, 212, 213, 215, 218, 235, 237, 311, 313, 317, 319], "basic": [2, 83, 306, 312, 322], "properti": [2, 3, 32, 34, 36, 39, 71, 75, 83, 87, 93, 138, 139, 163, 168, 178, 183, 191, 192, 193, 235, 317, 319], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 68, 69, 70, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 111, 113, 115, 116, 117, 119, 120, 121, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 153, 157, 158, 159, 160, 161, 162, 165, 169, 170, 176, 181, 182, 184, 186, 187, 197, 198, 199, 200, 202, 203, 205, 207, 208, 209, 216, 217, 221, 222, 223, 224, 225, 227, 230, 233, 234, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 269, 295, 298, 306, 308, 311, 312, 313, 315, 316, 317, 319, 321, 322], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 107, 110, 111, 117, 119, 121, 125, 127, 131, 133, 135, 137, 144, 145, 146, 150, 153, 155, 157, 162, 163, 164, 169, 171, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 191, 194, 197, 198, 199, 200, 202, 203, 204, 208, 209, 210, 211, 214, 215, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 277, 283, 286, 298, 306, 310, 311, 312, 313, 315, 316, 318, 319, 321, 322], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 106, 107, 108, 109, 110, 111, 117, 119, 121, 123, 125, 127, 131, 133, 135, 137, 138, 139, 141, 143, 146, 150, 153, 154, 155, 165, 169, 173, 178, 179, 185, 186, 194, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 214, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 256, 295, 306, 312, 313, 315, 316, 317, 319, 321, 322], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 102, 105, 111, 116, 117, 119, 121, 123, 125, 127, 130, 131, 133, 135, 136, 138, 143, 144, 150, 153, 154, 155, 165, 169, 171, 173, 176, 177, 180, 185, 186, 194, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 221, 222, 223, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 279, 282, 295, 298, 306, 307, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 71, 72, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 119, 121, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 156, 163, 169, 171, 176, 177, 191, 197, 202, 203, 208, 209, 211, 212, 215, 216, 222, 227, 234, 236, 238, 240, 283, 288, 306, 310, 312, 315, 316, 317, 319, 321, 322], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 71, 75, 83, 86, 87, 88, 89, 90, 93, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 153, 154, 156, 158, 159, 160, 161, 164, 165, 169, 170, 171, 176, 177, 178, 179, 186, 187, 188, 189, 190, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 280, 284, 289, 298, 306, 307, 308, 310, 311, 312, 313, 316, 317, 321, 322], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 86, 87, 88, 89, 90, 93, 102, 105, 106, 107, 108, 110, 111, 117, 119, 123, 125, 130, 131, 133, 136, 138, 141, 143, 146, 154, 156, 157, 158, 159, 162, 164, 165, 166, 169, 170, 171, 176, 177, 180, 186, 195, 197, 198, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 269, 277, 306, 307, 310, 311, 312, 313, 315, 316, 317, 318, 321, 322], "send": [2, 3, 8, 321], "receiv": [2, 3, 32, 40, 71, 75, 87, 93, 134, 138, 171, 256, 307, 310, 312, 315, 317], "spawn": [2, 3, 4, 18, 22, 79, 84, 316], "check_env_spec": [2, 3, 304, 312, 316, 317], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 75, 87, 93, 102, 106, 107, 108, 111, 113, 117, 119, 123, 125, 126, 127, 131, 133, 135, 138, 139, 141, 143, 155, 170, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 254, 268, 299, 307, 308, 309, 311, 312, 313, 317, 319, 322], "saniti": [2, 3, 7, 146, 312], "utmost": 2, "techniqu": [2, 8, 311, 319], "commonli": [2, 322], "emploi": [2, 179], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 319], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 71, 75, 87, 93, 102, 107, 110, 133, 144, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 225, 228, 248, 306, 317, 321], "offer": [2, 3, 7, 306, 311, 317, 322], "facilit": [2, 3, 7, 122, 123, 141, 143, 198, 199, 200, 306, 310, 313, 317], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 134, 208, 212, 310, 312, 316, 317, 322], "extern": [2, 3, 107, 110, 322], "consist": [2, 3, 32, 35, 38, 41, 42, 71, 75, 87, 93, 117, 156, 171, 310, 311, 312, 317, 318, 322], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 310, 311, 322], "manner": [2, 75, 123, 141, 306, 310, 311, 312, 315, 317, 319], "handl": [3, 21, 32, 71, 75, 87, 93, 144, 169, 171, 286, 300, 301, 310, 311, 312, 316, 319], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 71, 75, 82, 87, 88, 89, 93, 102, 109, 119, 125, 134, 139, 140, 165, 169, 171, 173, 176, 177, 186, 233, 237, 245, 250, 251, 252, 256, 257, 258, 282, 286, 288, 300, 301, 306, 307, 308, 310, 311, 312, 315, 316, 317, 318, 319, 322], "dm": [3, 310, 322], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 79, 83, 84, 85, 127, 135, 141, 142, 176, 198, 206, 221, 222, 224, 225, 227, 229, 233, 237, 238, 239, 240, 242, 286, 295, 306, 307, 308, 310, 311, 313, 316, 317, 319, 322], "goal": [3, 4, 134, 310, 311, 312, 313, 316, 317], "abl": [3, 82, 88, 89, 310, 312, 313, 315, 316, 317, 319, 321], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 146, 271, 272, 273, 274, 275, 276, 305, 311, 312, 316, 319], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 71, 72, 75, 79, 87, 93, 154, 310, 312, 316, 317, 322], "simul": [3, 5, 7, 8, 90, 98, 155, 173, 306, 310, 312, 316], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 88, 89, 93, 123, 141, 146, 158, 169, 190, 212, 213, 214, 277, 289, 306, 308, 310, 311, 312, 313, 316, 317, 319, 321, 322], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 71, 75, 87, 93, 197, 203, 204, 208, 209, 210, 211, 212, 235, 250, 251, 252, 253, 254, 307, 310, 311, 317, 322], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 71, 72, 75, 87, 88, 89, 91, 92, 93, 102, 105, 116, 117, 119, 121, 125, 127, 130, 135, 138, 144, 169, 295, 298, 310, 311, 312, 313, 315, 316, 318, 319, 321, 322], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 71, 75, 83, 87, 93, 106, 109, 117, 123, 135, 138, 139, 141, 143, 155, 156, 158, 159, 160, 161, 164, 165, 166, 167, 169, 171, 173, 175, 176, 177, 180, 185, 186, 194, 197, 198, 199, 200, 202, 203, 205, 207, 208, 209, 211, 212, 213, 214, 216, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 295, 298, 306, 307, 310, 311, 312, 313, 315, 316, 317, 318, 321], "typic": [3, 4, 8, 32, 71, 75, 87, 93, 134, 222, 235, 237, 240, 306, 307, 308, 312, 316, 317], "organis": [3, 311, 317], "arbitrari": [3, 33, 87, 93, 306, 310, 311, 317], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 71, 75, 87, 93, 102, 133, 136, 154, 250, 251, 252, 253, 254, 308, 311, 312, 316, 317, 319, 321], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 71, 75, 87, 93, 107, 110, 154, 176, 207, 250, 251, 252, 253, 254, 307, 310, 312, 313, 316, 317, 318, 319], "attribut": [3, 4, 32, 45, 71, 75, 87, 93, 123, 141, 169, 212, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 310, 313, 317], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 68, 71, 73, 75, 78, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 107, 110, 111, 121, 125, 127, 131, 133, 135, 138, 153, 154, 155, 162, 165, 169, 173, 185, 186, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 277, 283, 295, 306, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 71, 75, 82, 87, 88, 89, 93, 102, 124, 169, 194, 198, 199, 200, 217, 306, 311, 312, 313], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 71, 75, 83, 86, 87, 90, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 146, 169, 176, 177, 204, 207, 211, 214, 221, 222, 223, 224, 225, 227, 233, 234, 235, 237, 238, 239, 240, 242, 248, 290, 305, 306, 307, 308, 310, 312, 313, 316, 317, 319, 322], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 87, 93], "actual": [3, 4, 7, 17, 71, 75, 87, 93, 134, 289, 307, 310, 312, 316, 317], "just": [3, 4, 11, 71, 75, 82, 87, 88, 89, 93, 105, 154, 177, 277, 306, 308, 310, 311, 312, 313, 316, 317, 319, 321, 322], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 71, 75, 87, 93, 103, 108, 119, 153, 155, 173, 208, 212, 215, 221, 222, 223, 225, 234, 237, 238, 240, 242, 248, 250, 251, 252, 253, 295, 302, 308, 311, 312, 317, 322], "care": [3, 8, 71, 75, 87, 93, 138, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 310, 312, 316, 317, 319], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 168, 171, 177, 193, 211, 283, 310, 311, 312, 313, 317], "parametr": [3, 179, 212, 222, 233, 240, 310, 312], "hardwar": 3, "observation_spec": [3, 71, 75, 83, 87, 93, 100, 102, 103, 104, 105, 106, 107, 108, 110, 113, 115, 116, 117, 119, 121, 123, 126, 130, 133, 134, 135, 136, 137, 138, 140, 141, 155, 169, 173, 290, 298, 310, 312, 315, 316, 317, 322], "compositespec": [3, 28, 49, 71, 73, 75, 83, 87, 93, 100, 107, 108, 109, 110, 111, 117, 125, 131, 133, 134, 135, 138, 150, 154, 155, 173, 197, 201, 208, 214, 215, 304, 310, 312, 316, 317, 322], "pair": [3, 32, 34, 36, 39, 52, 71, 75, 87, 93, 127, 135, 198, 208, 212, 235, 250, 251, 252, 253, 254, 306, 307, 310, 311, 312, 315, 317, 322], "state_spec": [3, 71, 75, 83, 87, 93, 100, 312, 317, 322], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 71, 75, 86, 87, 93, 123, 136, 139, 141, 143, 310, 317], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 68, 71, 75, 81, 83, 87, 88, 89, 93, 100, 102, 107, 110, 117, 127, 165, 186, 188, 197, 203, 208, 209, 222, 225, 238, 240, 242, 298, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "reward_spec": [3, 71, 75, 83, 87, 93, 100, 101, 105, 106, 107, 108, 110, 128, 129, 130, 138, 140, 155, 173, 312, 316, 317, 322], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 100, 101, 105, 106, 107, 108, 110, 111, 117, 121, 125, 127, 128, 129, 130, 131, 133, 134, 138, 140, 142, 143, 144, 150, 153, 155, 173, 202, 217, 221, 222, 224, 225, 227, 230, 233, 235, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 279, 280, 282, 284, 302, 307, 308, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "done_spec": [3, 71, 75, 87, 93, 107, 108, 110, 138, 154, 312, 316, 317, 322], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 207, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 306, 316, 317, 318], "section": [3, 4, 311, 316], "termin": [3, 7, 32, 40, 52, 75, 88, 89, 91, 92, 94, 95, 154, 213, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322], "input_spec": [3, 71, 75, 83, 87, 93, 106, 107, 108, 109, 119, 121, 125, 130, 131, 133, 138, 139, 140, 142, 155, 173, 317], "full_action_spec": [3, 71, 75, 87, 93, 316], "full_state_spec": [3, 71, 75, 87, 93], "lock": [3, 26, 28, 71, 75, 87, 93, 135, 144, 317], "modifi": [3, 7, 8, 26, 28, 32, 45, 71, 75, 87, 93, 106, 113, 117, 123, 135, 138, 139, 141, 143, 202, 207, 211, 289, 295, 310, 311, 312, 316, 317], "directli": [3, 4, 8, 71, 75, 83, 87, 93, 127, 235, 302, 306, 312, 316, 317, 319], "output_spec": [3, 71, 75, 87, 93, 106, 107, 108, 111, 117, 125, 131, 133, 138, 139, 317], "full_observation_spec": [3, 71, 75, 87, 93], "full_reward_spec": [3, 71, 75, 87, 93, 316], "full_done_spec": [3, 71, 75, 87, 93, 154, 316], "importantli": [3, 208, 212], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 69, 70, 71, 74, 75, 80, 82, 83, 87, 91, 92, 93, 100, 102, 127, 133, 144, 155, 156, 157, 158, 159, 162, 165, 166, 167, 170, 171, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 194, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 216, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 268, 306, 310, 311, 312, 313, 316, 317, 319, 321, 322], "action_s": 3, "help": [3, 4, 32, 71, 75, 87, 93, 305, 307, 310, 311, 312, 313, 316], "prealloc": [3, 317], "With": [3, 82, 134, 308, 310, 311, 316, 319, 322], "necessarili": [3, 322], "instanti": [3, 21, 34, 36, 39, 79, 87, 93, 138, 177, 310, 311, 316, 317, 319, 322], "0s": [3, 135, 313], "stateless": [3, 138, 310, 317, 322], "set_se": [3, 13, 14, 16, 17, 21, 68, 71, 75, 81, 83, 87, 93, 119, 125, 136, 139, 317, 321, 322], "seed": [3, 13, 14, 16, 17, 21, 69, 71, 75, 83, 87, 88, 89, 93, 94, 95, 100, 107, 110, 139, 146, 286], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 68, 71, 72, 75, 81, 83, 87, 91, 92, 93, 94, 95, 102, 107, 110, 111, 116, 117, 121, 125, 127, 130, 131, 133, 134, 135, 144, 150, 153, 155, 169, 173, 188, 217, 221, 222, 224, 225, 227, 228, 233, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 280, 282, 284, 310, 311, 313, 315, 317, 318, 319, 321, 322], "determinist": [3, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 157, 166, 181, 188, 197, 211, 212, 215, 222, 306, 310, 311, 313, 317, 322], "preced": [3, 170, 313], "without": [3, 7, 9, 32, 40, 71, 75, 87, 93, 100, 107, 110, 137, 199, 200, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 254, 298, 305, 306, 310, 311, 312, 316, 317, 319, 322], "risk": [3, 124], "overlap": [3, 41], "consecut": [3, 62, 79, 169, 207, 313, 316, 322], "reproduc": [3, 102, 146, 310, 312, 316], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 71, 75, 87, 93, 109, 128, 133, 134, 136, 191, 192, 193, 215, 222, 227, 233, 235, 236, 240, 283, 310, 311, 312, 313, 316, 319], "max_step": [3, 13, 71, 75, 83, 87, 93, 94, 95, 133, 316, 321, 322], "n": [3, 6, 7, 24, 27, 32, 33, 40, 71, 75, 87, 93, 102, 109, 113, 140, 173, 207, 212, 221, 227, 235, 249, 283, 306, 308, 311, 312, 313, 316, 319, 322], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 83, 117, 165, 169, 173, 185, 186, 194, 195, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 213, 214, 215, 217, 222, 224, 227, 229, 230, 231, 233, 235, 238, 240, 242, 248, 249, 250, 251, 252, 253, 282, 298, 306, 310, 312, 313, 315, 316, 317, 318], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 71, 72, 75, 87, 88, 89, 93, 100, 113, 123, 124, 127, 139, 141, 144, 146, 154, 156, 162, 171, 179, 202, 211, 212, 213, 214, 221, 222, 224, 225, 227, 233, 235, 237, 238, 239, 240, 242, 250, 274, 286, 305, 310, 311, 312, 316, 317, 319, 321, 322], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 71, 75, 77, 86, 87, 93, 102, 133, 141, 144, 169, 209, 221, 222, 224, 225, 227, 233, 235, 237, 238, 239, 240, 242, 245, 310, 313, 319, 321], "mark": [3, 16, 71, 75, 87, 93, 169], "trail": [3, 144], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 71, 72, 75, 82, 86, 87, 88, 89, 93, 99, 103, 124, 130, 135, 136, 144, 153, 166, 169, 170, 207, 223, 227, 230, 234, 235, 237, 238, 242, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 286, 306, 307, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "treat": 3, "figur": [3, 310, 312, 313, 316, 317, 322], "summar": [3, 317], "brief": [3, 312], "popul": [3, 38, 116, 135, 310, 312, 313, 317, 319], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 71, 75, 87, 93, 102, 104, 105, 107, 110, 113, 116, 119, 121, 123, 125, 127, 130, 133, 135, 143, 144, 153, 154, 174, 175, 202, 203, 209, 210, 222, 240, 250, 251, 252, 253, 306, 310, 312, 313, 316, 317, 318, 319, 322], "deliveri": 3, "step_mdp": [3, 169, 304, 313, 317, 321, 322], "design": [3, 13, 14, 32, 33, 71, 75, 87, 93, 102, 124, 139, 202, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 310, 311, 312, 313, 315, 316, 317, 319, 322], "metaclass": 3, "ensur": [3, 32, 35, 41, 58, 62, 71, 75, 87, 93, 102, 123, 133, 141, 144, 203, 306, 311, 312, 317, 319], "everi": [3, 8, 17, 26, 28, 32, 33, 63, 71, 75, 87, 93, 133, 134, 144, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 286, 308, 310, 311, 312, 313, 316, 317], "flank": [3, 313], "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 71, 75, 83, 87, 88, 89, 93, 96, 102, 117, 133, 134, 138, 139, 144, 156, 174, 175, 176, 177, 201, 203, 208, 209, 212, 215, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 248, 286, 298, 308, 310, 311, 312, 313, 316, 317, 318, 319, 322], "dual": 3, "strictli": [3, 8, 32, 71, 75, 87, 93, 139, 310, 312], "refer": [3, 7, 8, 9, 21, 32, 40, 71, 75, 87, 93, 139, 144, 155, 165, 166, 173, 174, 175, 176, 181, 182, 187, 188, 204, 221, 228, 229, 230, 231, 237, 250, 255, 263, 310, 311, 312, 316, 318], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 58, 71, 75, 87, 93, 100, 101, 102, 103, 104, 107, 109, 110, 113, 115, 116, 119, 120, 123, 124, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 141, 143, 144, 153, 156, 158, 159, 160, 161, 163, 165, 167, 170, 171, 174, 175, 176, 177, 178, 179, 183, 185, 186, 191, 192, 193, 194, 211, 227, 232, 238, 241, 263, 269, 280, 282, 283, 291, 292, 295, 296, 298, 299, 300, 301, 302], "signal": [3, 17, 52, 75, 102, 133, 136, 154, 307, 310, 312, 316, 319, 322], "interpret": [3, 311], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 71, 75, 87, 93, 113, 119, 124, 136, 156, 169, 170, 171, 174, 175, 181, 189, 195, 201, 202, 205, 212, 311, 312, 313, 316, 317, 318, 319, 321, 322], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 71, 75, 87, 93, 102, 103, 133, 135, 139, 154, 156, 171, 174, 175, 177, 207, 209, 210, 218, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 290, 302, 305, 308, 312, 313, 317, 319, 322], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 71, 75, 87, 88, 89, 93, 111, 118, 127, 133, 154, 193, 256, 310, 312, 313, 315, 319, 321, 322], "carri": [3, 21, 45, 71, 75, 87, 93, 135, 235, 311, 313, 316, 317, 319], "look": [3, 5, 7, 8, 32, 71, 75, 82, 87, 88, 89, 93, 123, 124, 141, 208, 212, 213, 214, 307, 312, 313, 316, 317, 318, 319, 321, 322], "assess": [3, 96, 310], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 304], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 113], "reli": [3, 221, 307, 310, 312, 317, 322], "traj_id": [3, 13, 14, 16, 23, 127, 313, 319, 321], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 71, 75, 87, 93, 135, 139, 153, 213, 214, 305, 310, 313], "context": [3, 5, 8, 32, 71, 72, 75, 86, 87, 93, 135, 140, 177, 178, 202, 246, 247, 250, 251, 252, 253, 255, 263, 282, 306, 307, 310, 311, 312, 316, 317, 318, 319], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 79, 82, 87, 88, 89, 93, 107, 110, 124, 171, 185, 212, 213, 214, 218, 250, 251, 252, 253, 306, 310, 311, 312, 315, 316, 317, 318, 319, 322], "inittrack": [3, 169, 310, 313], "our": [3, 7, 8, 18, 102, 306, 310, 311, 312, 313, 315, 316, 318, 319, 321], "tutori": [3, 310, 311, 313, 314, 315, 317, 318, 319, 320, 322], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 71, 72, 75, 78, 87, 93, 156, 171, 177, 307, 308, 310, 311, 312, 313, 316, 317, 319], "scratch": [3, 8, 311, 317], "better": [3, 8, 9, 169, 307, 312, 317], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 71, 75, 82, 87, 88, 89, 91, 92, 93, 102, 113, 117, 121, 135, 136, 140, 144, 156, 166, 167, 169, 171, 178, 179, 212, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 302, 306, 310, 311, 312, 313, 317, 319, 322], "intens": [3, 8], "gym3": 3, "envpool": [3, 84, 85], "interfac": [3, 78, 86, 171, 178, 306, 310, 312, 317, 319], "simultan": [3, 20, 87, 93, 317], "often": [3, 8, 232, 286, 310, 311, 317, 319, 322], "competit": [3, 316], "advantag": [3, 8, 167, 221, 223, 234, 237, 239, 250, 251, 252, 253, 254, 255, 257, 259, 261, 263, 264, 266, 307, 308, 310, 311, 312, 313, 316, 317, 322], "scale": [3, 4, 52, 102, 117, 119, 129, 134, 137, 166, 168, 180, 187, 188, 192, 193, 198, 199, 200, 208, 212, 214, 221, 222, 233, 237, 238, 239, 240, 284, 290, 295, 302, 306, 310, 311, 312, 313, 316, 321], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 71, 75, 87, 88, 89, 93, 311, 312, 316, 317], "As": [3, 4, 71, 75, 82, 87, 88, 89, 93, 127, 212, 250, 306, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322], "inherit": [3, 172, 235, 308, 312, 316], "serialenv": [3, 71, 75, 87, 135, 304, 322], "enjoi": 3, "exact": 3, "Of": [3, 7, 305, 317, 322], "cours": [3, 4, 305, 312, 317, 322], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 71, 75, 83, 84, 87, 93, 123, 135, 139, 143, 144, 169, 174, 175, 205, 207, 208, 212, 225, 227, 248, 250, 251, 252, 253, 254, 310, 311, 312, 316, 317, 318], "count": [3, 72, 133, 207, 282, 286, 289, 310, 311, 312, 313, 319, 322], "def": [3, 11, 22, 32, 71, 72, 75, 83, 87, 93, 99, 100, 107, 110, 155, 165, 173, 216, 222, 224, 227, 233, 235, 238, 240, 242, 308, 310, 311, 315, 316, 317, 321, 322], "make_env": [3, 95, 144, 291, 292, 310, 311, 322], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 71, 72, 75, 77, 87, 93, 102, 105, 106, 116, 117, 119, 121, 125, 127, 130, 135, 136, 138, 139, 144, 169, 295, 298, 304, 306, 310, 311, 312, 313, 318, 319, 321, 322], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 71, 72, 75, 84, 87, 93, 102, 105, 111, 116, 117, 119, 125, 127, 130, 133, 135, 136, 138, 169, 245, 259, 260, 261, 262, 264, 265, 266, 267, 306, 311, 313, 317, 319, 321, 322], "from_pixel": [3, 69, 70, 102, 295, 310, 311, 313, 318, 319, 321, 322], "9": [3, 7, 32, 35, 38, 41, 82, 88, 89, 134, 144, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 243, 248, 307, 310, 311, 312, 313, 316, 317, 319, 320], "81": [3, 310, 317], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 68, 71, 75, 78, 81, 83, 87, 90, 91, 92, 93, 100, 101, 102, 103, 105, 106, 108, 109, 117, 118, 119, 123, 127, 130, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 155, 156, 158, 159, 161, 162, 166, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 183, 187, 188, 191, 192, 193, 195, 197, 201, 202, 204, 205, 207, 210, 211, 214, 215, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 248, 249, 250, 251, 252, 253, 256, 257, 258, 277, 284, 298, 302, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 71, 72, 75, 87, 88, 89, 93, 105, 114, 117, 119, 121, 131, 135, 139, 140, 144, 156, 165, 169, 171, 174, 175, 176, 177, 186, 197, 203, 204, 208, 209, 210, 211, 212, 215, 216, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 241, 242, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 295, 310, 311, 312, 313, 315, 317, 318, 319, 321], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 99, 102, 103, 107, 108, 109, 110, 116, 119, 125, 127, 130, 133, 135, 136, 137, 144, 150, 153, 154, 156, 162, 165, 171, 174, 175, 176, 177, 180, 183, 186, 197, 198, 199, 200, 202, 203, 205, 207, 209, 211, 214, 216, 235, 295, 298, 306, 308, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "simpli": [3, 6, 34, 36, 39, 45, 111, 131, 235, 306, 307, 310, 312, 316, 322], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 176, 177, 178, 179, 185, 194, 215, 250, 251, 252, 253, 254, 256, 269, 306, 311, 319], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 119, 137, 311, 319], "d": [3, 35, 53, 54, 58, 212, 321], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 72, 87, 93, 100, 103, 107, 109, 110, 117, 119, 124, 134, 135, 137, 144, 197, 205, 208, 209, 212, 250, 251, 252, 253, 254, 273, 306, 310, 311, 312, 313, 316, 317, 319, 321, 322], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 311, 316, 317], "_reset": [3, 71, 75, 83, 87, 93, 100, 102, 107, 110, 154, 155, 173], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 107, 110, 111, 121, 125, 127, 131, 133, 135, 139, 153, 155, 165, 169, 173, 185, 186, 194, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 214, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 290, 295, 305, 306, 311, 312, 313, 315, 316, 317, 319, 321, 322], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 68, 69, 70, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 107, 109, 110, 111, 113, 117, 118, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 140, 141, 143, 144, 146, 153, 154, 155, 156, 158, 159, 168, 169, 171, 173, 176, 177, 178, 179, 192, 193, 197, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 248, 250, 251, 252, 253, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 279, 280, 282, 283, 284, 286, 295, 302, 311, 312, 313, 315, 316, 317, 319, 321, 322], "pixel": [3, 7, 26, 102, 104, 113, 115, 119, 121, 123, 126, 137, 141, 143, 158, 181, 182, 269, 295, 306, 310, 311, 313, 318, 319, 321, 322], "500": [3, 310, 311, 317, 321, 322], "uint8": [3, 47, 121, 137, 311, 319, 321, 322], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 93, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 115, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 221, 222, 224, 225, 227, 228, 229, 233, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 280, 281, 282, 283, 284, 285, 286, 290, 291, 292, 295, 298, 300, 301, 302, 306, 308, 310, 311, 312, 313, 316, 317, 319, 321, 322], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 107, 110, 111, 121, 125, 127, 131, 133, 135, 144, 153, 155, 165, 169, 173, 185, 186, 194, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 214, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 295, 306, 312, 313, 315, 316, 317, 319, 321, 322], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 93, 107, 110, 144, 154, 169, 207, 208, 212, 310, 311, 315, 316, 322], "launch": [3, 13, 14, 18, 19, 20, 22, 87, 93], "start": [3, 4, 5, 13, 21, 45, 72, 82, 153, 281, 310, 311, 316, 317, 319, 322], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 71, 75, 87, 93, 135, 144, 213, 214, 312, 313, 316, 317, 322], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 71, 75, 87, 93, 127, 139, 201, 207, 284, 308, 311, 312, 313, 317, 319, 322], "great": [3, 7, 8, 321], "speedup": [3, 8, 322], "precis": [3, 107, 110, 153, 310, 312], "anoth": [3, 8, 34, 36, 39, 71, 75, 79, 87, 93, 107, 108, 110, 135, 138, 171, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 306, 307, 310, 312, 313, 315, 316, 317, 322], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 71, 75, 79, 87, 93, 124, 322], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 71, 72, 75, 84, 87, 93, 102, 107, 110, 123, 127, 136, 143, 144, 153, 203, 207, 211, 241, 250, 251, 252, 253, 254, 256, 286, 288, 302, 305, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 96, 102, 112, 118, 127, 136, 139, 146, 201, 205, 207, 310, 312, 316, 318, 319], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 78, 99, 102, 105, 107, 110, 117, 125, 144, 146, 150, 177, 180, 195, 250, 251, 252, 253, 277, 285, 315, 319, 322], "mismatch": [3, 311], "mostli": [3, 17, 307, 319, 322], "purpos": [3, 7, 102, 298, 310, 312, 313, 316, 318, 322], "want": [3, 6, 7, 8, 119, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 306, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322], "subprocess": [3, 13, 14, 72, 87, 93], "addit": [3, 4, 32, 52, 71, 75, 84, 87, 93, 106, 123, 135, 138, 139, 141, 143, 201, 202, 211, 220, 235, 250, 307, 310, 311, 316, 319], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 84, 85, 319], "multithreadedenv": [3, 304], "underneath": 3, "higher": [3, 4, 105, 215, 310, 311, 312, 319, 322], "restrict": [3, 311, 318, 319, 322], "flexibl": [3, 9, 84, 243, 307, 308, 319, 322], "cover": [3, 305, 312, 317, 321], "popular": [3, 306, 313, 316], "atari": [3, 4, 102, 322], "classic": [3, 83, 89, 311], "benchmark_batched_env": 3, "py": [3, 99, 185, 194, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322], "pipelin": [3, 7, 306, 312], "seamlessli": [3, 317], "modif": [3, 5, 26, 28, 32, 71, 75, 87, 93, 113, 154, 235, 312, 317], "infrastructur": [3, 316], "view": [3, 8, 27, 32, 33, 71, 75, 87, 93, 100, 165, 171, 317, 319, 321, 322], "core": [3, 8, 295, 308, 313, 321], "decis": [3, 157, 184, 202, 226, 236, 313, 316, 319, 322], "act": [3, 4, 88, 89, 177, 222, 224, 233, 238, 240, 242, 313, 316], "world": [3, 5, 83, 217, 230, 316, 317, 322], "paradigm": [3, 17, 316], "decpodp": 3, "markov": [3, 322], "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 71, 75, 87, 93, 109, 118, 128, 139, 146, 156, 169, 171, 176, 177, 204, 208, 212, 221, 223, 224, 227, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 245, 250, 282, 286, 307, 310, 311, 313, 316, 317, 322], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 71, 75, 83, 87, 93, 134, 139, 144, 235, 289, 306, 308, 310, 311, 312, 313, 316, 317, 319, 322], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 79, 87, 88, 89, 105, 130, 166, 176, 177, 205, 286, 300, 301, 310, 311, 312, 313, 316, 319, 321], "accommod": [3, 13, 14, 16, 17], "thank": [3, 310], "carrier": [3, 312, 313, 319], "particular": [3, 32, 45, 52, 71, 75, 87, 93, 139, 307, 308, 311, 313, 315, 316, 319], "thu": [3, 234, 316], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 96, 306, 311, 312, 316], "hand": [3, 7, 21, 316, 317], "kept": [3, 13, 14, 16, 17, 62, 87, 93, 109, 131, 138, 146, 153, 168, 192, 193], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 71, 75, 87, 93, 107, 108, 110, 135, 137, 139, 146, 169, 171, 177, 208, 211, 212, 214, 215, 220, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 250, 251, 252, 253, 277, 288, 300, 301, 302, 306, 308, 310, 311, 312, 313, 316, 317, 319, 322], "let": [3, 6, 7, 32, 43, 71, 75, 87, 88, 89, 93, 102, 169, 176, 177, 203, 282, 307, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "understand": [3, 8, 310, 311, 316], "go": [3, 7, 82, 124, 127, 202, 256, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "vma": [3, 94, 95, 316], "robot": [3, 5, 7, 123, 141, 143, 316], "what": [3, 8, 35, 44, 71, 75, 87, 93, 135, 153, 209, 305, 306, 307, 311, 312, 313, 316, 317, 318, 319, 321, 322], "vmasenv": [3, 304, 316], "balanc": [3, 310, 311], "num_env": [3, 21, 78, 94, 95, 316], "n_agent": [3, 94, 95, 176, 177, 185, 194, 248, 316], "5": [3, 24, 26, 28, 35, 38, 41, 42, 72, 81, 84, 91, 92, 94, 95, 127, 133, 155, 156, 165, 166, 168, 170, 171, 173, 176, 177, 181, 186, 192, 193, 202, 203, 209, 215, 234, 237, 239, 242, 306, 310, 311, 313, 316, 317, 319, 320, 321, 322], "td": [3, 15, 26, 67, 68, 69, 70, 74, 76, 80, 81, 100, 103, 107, 108, 109, 110, 116, 117, 119, 127, 130, 134, 135, 137, 139, 144, 153, 155, 165, 169, 172, 173, 185, 186, 194, 197, 198, 199, 200, 202, 203, 205, 207, 208, 209, 211, 214, 216, 248, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 277, 285, 295, 306, 307, 310, 313, 316, 317, 321, 322], "info": [3, 35, 38, 41, 42, 52, 53, 71, 75, 87, 88, 89, 90, 91, 92, 93, 94, 95, 141, 145, 316, 319], "ground_rew": 3, "pos_rew": [3, 316], "16": [3, 32, 71, 75, 87, 93, 102, 310, 313, 316, 317, 319], "root": [3, 26, 28, 102, 136, 153, 168, 192, 193, 313, 316, 317, 319, 322], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 113, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 311, 317], "vari": [3, 88, 89, 124, 316], "creation": [3, 87, 93, 310, 322], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 71, 75, 87, 93, 123, 127, 130, 139, 143, 180, 186, 204, 208, 210, 211, 212, 250, 251, 252, 253, 277, 289, 310, 311, 312, 313, 316, 317, 319, 321, 322], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 72, 127, 137, 144, 234, 242, 307, 308, 310, 312, 313, 316, 317, 319, 321], "append": [3, 8, 35, 38, 41, 42, 52, 53, 72, 105, 127, 135, 169, 203, 209, 310, 311, 312, 313, 316, 317, 318, 319, 321], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 71, 75, 87, 93, 100, 154, 225, 227, 248, 304, 312, 316, 322], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 71, 75, 79, 82, 87, 88, 89, 91, 92, 93, 99, 144, 305, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "simpl": [3, 9, 32, 33, 71, 75, 87, 93, 158, 212, 225, 235, 239, 250, 306, 307, 310, 311, 312, 316, 322], "composit": [3, 26, 28, 71, 75, 87, 93, 312, 317], "prefix": [3, 23, 32, 34, 36, 39, 45, 71, 75, 87, 93, 139, 235, 268, 313, 322], "exactli": [3, 32, 71, 75, 77, 87, 93, 139, 310, 313, 316], "action_kei": [3, 15, 71, 75, 87, 93, 100, 109, 153, 155, 172, 173, 201, 205, 207, 316], "reward_kei": [3, 71, 75, 87, 93, 153, 155, 173, 280, 284, 316], "done_kei": [3, 71, 75, 87, 93, 127, 133, 153, 316], "automat": [3, 5, 55, 56, 65, 71, 75, 87, 88, 89, 93, 107, 110, 119, 197, 208, 306, 310, 312, 316, 317, 319, 321], "right": [3, 6, 7, 40, 170, 311, 312, 316, 317, 322], "sure": [3, 4, 7, 53, 63, 79, 127, 203, 302, 306, 310, 312, 313, 316, 317, 319, 321, 322], "set_kei": [3, 221, 222, 223, 225, 227, 228, 233, 234, 235, 237, 238, 239, 240, 248, 254, 316], "awai": [3, 312, 316], "eas": [3, 316], "access": [3, 7, 8, 32, 35, 53, 71, 75, 87, 93, 123, 141, 302, 305, 310, 316, 317, 319], "leaf": [3, 26, 28, 71, 75, 87, 93, 133, 212], "abov": [3, 7, 32, 71, 75, 87, 93, 168, 192, 193, 220, 307, 308, 310, 312, 316, 317, 322], "would": [3, 32, 40, 71, 75, 87, 93, 169, 171, 176, 308, 311, 312, 313, 317, 319, 322], "full": [3, 71, 75, 87, 93, 204, 277, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "raw": [3, 4, 40, 168, 192, 193, 311, 317], "logic": 3, "torchvis": [3, 123, 143, 321, 322], "transformedenv": [3, 13, 71, 72, 75, 87, 93, 100, 102, 105, 106, 107, 110, 111, 113, 116, 117, 118, 119, 121, 125, 127, 130, 131, 133, 135, 136, 138, 144, 169, 295, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "primit": [3, 4, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242], "built": [3, 5, 7, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 243, 248, 296, 298, 299, 302, 310, 311, 312, 313, 319, 322], "base_env": [3, 71, 75, 87, 93, 100, 105, 107, 109, 110, 117, 121, 133, 135, 136, 310, 311, 312, 318, 321, 322], "totensorimag": [3, 102, 311, 313, 319, 321, 322], "in_kei": [3, 13, 14, 16, 17, 21, 83, 101, 102, 103, 104, 105, 107, 109, 110, 113, 115, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 141, 143, 144, 155, 164, 169, 173, 185, 194, 195, 197, 198, 199, 200, 202, 203, 208, 209, 211, 212, 214, 215, 216, 221, 222, 223, 224, 225, 227, 233, 234, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 268, 269, 295, 298, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "resiz": [3, 102, 311, 313, 319, 322], "64": [3, 102, 158, 159, 167, 169, 177, 185, 248, 310, 311, 312, 313, 315, 317, 319, 321, 322], "now": [3, 7, 35, 102, 177, 310, 311, 312, 313, 315, 316, 318, 319, 322], "appar": [3, 279], "bring": [3, 312, 322], "signific": [3, 5, 8, 312, 322], "kind": [3, 38, 44, 153, 319], "consult": 3, "interest": [3, 208, 212, 306, 311, 312, 316, 317, 322], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 83, 101, 102, 103, 104, 105, 107, 110, 113, 115, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 141, 143, 144, 155, 164, 165, 169, 173, 185, 186, 194, 195, 197, 198, 199, 200, 202, 204, 208, 209, 210, 211, 212, 214, 215, 216, 221, 222, 223, 227, 233, 234, 237, 238, 239, 240, 248, 250, 251, 252, 253, 269, 282, 298, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "easi": [3, 5, 53, 201, 205, 207, 306, 307, 310, 311, 312, 316, 318, 319, 322], "graph": [3, 4, 8, 246, 247, 310, 317], "inv": [3, 105, 109, 121, 127, 317], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 87, 93, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 144, 192, 203, 250, 281, 308, 310, 311, 312, 317, 321, 322], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 107, 110, 121, 139, 197, 203, 211, 213, 214, 216, 221, 222, 224, 227, 233, 237, 238, 239, 240, 242, 311, 316], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 106, 109, 156, 214, 322], "taken": [3, 71, 75, 87, 93, 174, 175, 307, 310, 312, 313, 316, 317], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 102, 107, 110, 119, 127, 219, 233, 317], "in_keys_inv": [3, 105, 107, 110, 119, 120, 121, 125, 127, 138, 310, 315, 317, 322], "append_transform": [3, 35, 38, 41, 42, 52, 53, 123, 135, 141, 310, 313, 317, 321, 322], "doubletofloat": [3, 295, 310, 312, 315], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 107, 110, 111, 119, 121, 125, 127, 131, 133, 135, 137, 150, 153, 155, 165, 169, 173, 185, 186, 194, 197, 198, 199, 200, 202, 203, 207, 208, 209, 210, 211, 214, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 295, 306, 312, 313, 315, 316, 317, 319, 321, 322], "float64": [3, 32, 71, 75, 87, 93, 106, 107, 110, 123, 135, 138, 139, 141, 143, 211, 315, 322], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 107, 110, 139, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 308, 310, 312, 319], "manipul": [3, 4, 8, 123, 141], "keep": [3, 4, 7, 8, 14, 42, 62, 119, 123, 143, 144, 153, 207, 279, 286, 310, 311, 312, 313, 316, 317, 319, 321, 322], "mind": [3, 316], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 109, 153, 205, 306, 319], "unexpect": [3, 32, 71, 75, 87, 93, 139, 322], "behviour": 3, "fortun": [3, 313], "eras": [3, 71, 75, 87, 93], "ident": [3, 13, 14, 16, 32, 87, 93, 176, 177, 250, 251, 252, 253, 300, 301, 311, 316], "alreadi": [3, 8, 11, 32, 45, 71, 75, 87, 93, 135, 154, 212, 250, 251, 252, 253, 310, 312, 316], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 71, 72, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 144, 154, 202, 211, 283, 288, 289, 311, 312, 316, 317, 319], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 71, 75, 87, 93, 106, 107, 108, 110, 111, 117, 125, 131, 133, 138, 139, 144, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 307, 310, 312, 313, 316, 317, 318, 319, 322], "happen": [3, 71, 75, 87, 93, 201, 311, 318, 322], "catfram": [3, 311], "hold": [3, 246, 247, 317, 319], "notic": [3, 102, 312, 317], "parenthood": 3, "reason": [3, 4, 8, 32, 71, 75, 87, 88, 89, 93, 123, 141, 169, 307, 310, 311, 312, 317, 319], "henc": [3, 35, 124, 154, 176, 306, 310, 312, 316, 317], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 317], "discret": [3, 24, 27, 30, 31, 33, 47, 71, 75, 87, 88, 89, 93, 109, 183, 186, 227, 228, 306, 311, 312, 316, 322], "might": [3, 37, 134, 273, 305, 310, 322], "throughout": [3, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 312, 322], "action_mask": [3, 88, 89, 91, 92, 100], "unavail": [3, 88, 89], "probabl": [3, 4, 8, 40, 163, 165, 169, 171, 174, 175, 183, 193, 205, 208, 212, 306, 311, 321], "categor": [3, 27, 31, 33, 88, 89, 100, 165, 183, 186, 203, 204, 209, 210, 225, 227, 248, 313], "probabilistictensordictmodul": [3, 117, 212, 213, 321], "tensordictsequenti": [3, 169, 203, 205, 213, 306, 310, 313, 315, 318, 321], "maskedcategor": [3, 175, 304], "linear": [3, 13, 14, 16, 17, 21, 32, 71, 75, 83, 87, 93, 106, 117, 123, 135, 138, 139, 141, 143, 155, 156, 165, 171, 173, 176, 177, 178, 179, 180, 186, 187, 188, 197, 198, 199, 200, 205, 206, 207, 208, 209, 211, 214, 216, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 298, 306, 311, 315, 318, 321], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 174, 175, 183, 204, 227, 306], "dist": [3, 10, 174, 175, 183], "distribution_class": [3, 117, 198, 199, 200, 202, 208, 212, 214, 221, 222, 227, 233, 237, 238, 239, 240, 306, 310, 312, 316, 321], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 71, 75, 87, 88, 89, 93, 146, 169, 195, 198, 199, 200, 201, 207, 209, 217, 248, 306, 310, 311, 312, 313, 316, 322], "actionmask": 3, "updat": [3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 71, 75, 83, 87, 88, 89, 93, 100, 107, 109, 110, 133, 134, 139, 142, 144, 154, 155, 169, 173, 201, 205, 207, 208, 209, 210, 211, 212, 221, 222, 224, 225, 227, 228, 229, 232, 233, 235, 237, 238, 239, 240, 241, 242, 248, 250, 251, 252, 253, 254, 282, 286, 288, 291, 292, 297, 298, 308, 311, 312, 313, 316, 317, 319, 321, 322], "know": [3, 4, 9, 35, 38, 41, 42, 201, 238, 282, 310, 311, 312, 313, 316, 319], "your_base_env": 3, "mask_kei": [3, 100, 124], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 71, 75, 87, 93, 102, 117, 169, 178, 206, 221, 281, 312, 313, 316, 317, 319, 321], "enviorn": [3, 88, 89, 316], "itself": [3, 32, 71, 75, 87, 93, 97, 235, 312], "log": [3, 4, 8, 40, 163, 164, 165, 174, 175, 183, 193, 203, 204, 208, 212, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 279, 280, 282, 286, 298, 306, 307, 308, 310, 311, 312, 316, 317, 321], "mission": 3, "irrespect": [3, 211, 212], "dmcontrol": [3, 310], "jumanji": [3, 80, 81], "natur": [3, 310, 313], "special": [3, 306, 310, 313, 322], "statu": 3, "framework": [3, 4, 9, 22, 83, 321, 322], "Its": [3, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 144, 211, 254], "success": [3, 102, 138, 205, 311, 317, 319, 321], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 71, 75, 79, 87, 93, 117, 133, 138, 201, 207, 310, 311, 312, 313, 315, 316, 317, 319, 322], "foundat": [3, 5, 88, 89, 312, 316], "inspir": [3, 317], "howev": [3, 5, 7, 32, 71, 75, 87, 93, 102, 130, 134, 139, 306, 310, 311, 312, 313, 319, 322], "gone": [3, 4, 5], "sometim": [3, 313, 322], "hard": [3, 7, 232, 311, 322], "adopt": [3, 5, 310, 322], "prefer": [3, 17, 20, 35, 38, 41, 42, 124, 131, 237, 283, 306, 312, 316, 319], "moreov": 3, "maintain": [3, 5, 9, 317], "both": [3, 7, 32, 71, 72, 75, 87, 88, 89, 93, 102, 125, 139, 154, 156, 169, 171, 176, 177, 198, 199, 200, 204, 210, 221, 223, 224, 227, 233, 234, 235, 237, 238, 239, 240, 242, 282, 306, 310, 312, 316, 317, 318, 319, 322], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 311, 312, 313, 316, 317, 319, 322], "decor": [3, 8, 11, 99, 235, 250, 251, 252, 253], "set_gym_backend": [3, 97, 304], "relev": [3, 40, 250, 251, 252, 253, 254, 317], "gym_backend": [3, 99, 304], "env1": [3, 315], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 71, 75, 87, 93, 99, 123, 143, 173, 286, 308, 311], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 99], "__init__": [3, 7, 83, 99, 100, 107, 110, 155, 165, 173, 216, 222, 224, 227, 233, 238, 240, 242, 308, 317, 318, 322], "env2": [3, 315], "_env": [3, 6, 322], "classic_control": 3, "pendulumenv": [3, 317], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 312], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 77, 84, 87, 93, 102, 124, 134, 135, 136, 138, 139, 147, 148, 153, 166, 170, 188, 207, 228, 272, 308, 310, 311, 312, 313, 316, 317, 321, 322], "tell": [3, 4, 7, 88, 89, 310, 313, 316], "mo_gymnasium": [3, 97], "handi": 3, "side": [3, 4, 322], "v0": [3, 74, 75, 76, 80, 81, 106, 139, 144, 298], "26": [3, 312, 317, 319], "fun": [3, 11, 99, 312, 316], "reveal": 4, "bug": [4, 321], "curv": 4, "won": [4, 32, 71, 72, 75, 87, 93, 123, 143, 286, 302, 311, 312], "exploit": 4, "video": [4, 9, 269, 282, 302, 316], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 71, 75, 79, 87, 93, 107, 110, 124, 130, 209, 311, 312, 313, 316, 317], "cv": 4, "flip": 4, "imag": [4, 7, 69, 104, 123, 137, 143, 171, 310, 311, 316, 318, 322], "correspondingli": 4, "prescript": 4, "tune": [4, 117, 316, 318], "coeffici": [4, 40, 117, 316], "bonu": [4, 221, 223, 234, 237], "beta": [4, 35, 41, 58, 233, 234, 310, 311, 319, 321], "altern": [4, 27, 84, 162, 174, 175, 176, 220, 235, 310, 312, 316], "reduc": [4, 6, 27, 134, 311, 312], "downstream": [4, 310], "formul": [4, 316], "ob": [4, 8, 26, 28, 100, 107, 108, 110, 119, 137, 150, 153, 176, 177, 209, 216, 222, 224, 227, 233, 238, 240, 242, 250, 251, 252, 253, 311, 315, 317, 321, 322], "rate": [4, 144, 249, 311, 312, 316], "gradient": [4, 32, 71, 75, 87, 93, 139, 168, 175, 179, 183, 192, 193, 221, 223, 224, 227, 233, 234, 235, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 286, 310, 312, 316, 317], "norm": [4, 8, 286, 310, 311, 312, 316, 317], "easier": [4, 306, 310], "behavior": [4, 32, 71, 75, 87, 93, 139, 233, 312, 316], "local": [4, 7, 10, 16, 21, 32, 71, 75, 87, 93, 139, 176, 177, 185, 194, 248, 274, 316], "optima": 4, "sens": [4, 317], "product": [4, 9, 300, 301], "sum": [4, 21, 31, 33, 130, 174, 175, 194, 230, 249, 256, 307, 310, 311, 312, 313, 316, 317, 322], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 130, 144, 207, 274, 279, 311, 313, 316, 317, 319], "stat": [4, 119, 290, 302, 311, 312], "w": [4, 102, 104, 126, 137, 207, 269, 311, 313, 319], "r": [4, 32, 100, 105, 119, 212, 220, 249, 306, 311, 317, 322], "yield": [4, 16, 21, 32, 71, 75, 87, 93, 235, 310], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 34, 36, 39, 71, 75, 87, 93, 139, 224, 225, 312, 316, 319], "futur": [4, 32, 71, 75, 87, 93, 123, 139, 143, 171, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 305, 321], "past": [4, 311, 319], "spars": [4, 313], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 71, 75, 87, 93, 130, 139, 178, 179, 207, 221, 223, 225, 228, 234, 237, 248, 311, 313, 319, 322], "intermedi": [4, 169, 204, 310, 318], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 310], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 71, 75, 87, 93, 171, 312, 316], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 71, 75, 87, 93, 102, 103, 107, 109, 110, 119, 127, 150, 153, 155, 169, 170, 174, 175, 177, 185, 194, 205, 207, 210, 218, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 256, 313, 321], "subtask": 4, "hierarch": [4, 321], "individu": [4, 18, 19, 20, 21, 32, 45, 71, 75, 87, 93, 310, 316], "select": [4, 15, 35, 38, 41, 42, 52, 53, 88, 89, 100, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 155, 169, 203, 209, 285, 310, 319], "fall": 4, "explicit": [4, 11, 45, 170, 319], "mechan": [4, 32, 71, 75, 87, 93, 139, 311, 317], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 71, 75, 87, 93, 233, 312, 316], "addition": 4, "timestep": [4, 40, 127, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 316], "realli": 4, "larg": [4, 27, 107, 110, 141, 311, 312, 316, 319], "target": [4, 8, 21, 32, 71, 72, 75, 87, 93, 134, 138, 211, 212, 221, 222, 223, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 289, 297, 298, 307, 308, 313, 317], "huge": [4, 177, 313], "std": [4, 119, 144, 180, 184, 201, 310, 322], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 313, 314, 315, 318, 319, 320], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 71, 75, 87, 93, 119, 123, 135, 138, 139, 141, 145, 155, 173, 178, 179, 201, 205, 207, 221, 222, 224, 225, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 242, 248, 295, 302, 311, 313, 317, 322], "estim": [4, 117, 198, 199, 200, 221, 222, 223, 224, 225, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 307, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "encount": [4, 305, 311, 317], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 88, 89, 310, 312, 316, 322], "bonus": 4, "denser": 4, "prior": [4, 188, 230, 316], "freshli": 4, "proper": [4, 6, 7, 250, 251, 252, 253, 311, 312, 316, 319], "doesn": [4, 11, 84, 107, 110], "drop": [4, 62, 153], "meant": [4, 83], "encourag": [4, 310, 311, 319], "measur": [4, 312], "novelti": 4, "revisit": 4, "previous": [4, 312, 322], "diminish": 4, "decreas": 4, "ideal": [4, 119, 317], "down": [4, 13, 14, 16, 17, 313], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 311, 312, 313, 316, 317, 321, 322], "distil": 4, "nois": [4, 145, 179, 196, 207, 238, 242, 282, 302, 310], "exploratori": [4, 221, 223, 234, 237], "could": [4, 6, 311, 312, 316, 318, 322], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 222, 224, 225, 227, 228, 233, 238, 240, 242, 248, 308, 310, 311, 319], "schedul": [4, 7, 40, 282, 312, 317], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 123, 143, 222, 224, 227, 238, 240, 242, 310, 311, 316, 319, 322], "divers": [4, 87, 93], "bootstrap": [4, 228, 251, 257, 258, 310, 313], "noisi": [4, 178, 179, 196, 306], "unstabl": [4, 168, 192, 193], "inher": 4, "stochast": [4, 117, 166, 179, 181, 188, 222, 226, 227, 233, 236, 238, 240, 306, 312, 316], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 169, 173, 198, 199, 200, 235, 238, 308, 311], "pomdp": [4, 319], "previou": [4, 10, 32, 40, 41, 135, 154, 188, 202, 312, 313, 317, 322], "loos": [4, 306, 311, 312], "nonexist": 4, "architectur": [4, 162, 316], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 101, 102, 103, 104, 107, 109, 110, 113, 115, 119, 120, 124, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 144, 156, 163, 165, 171, 174, 175, 176, 177, 183, 186, 190, 202, 213, 214, 226, 268, 269, 281, 282, 283, 285, 286, 295, 306, 310, 312, 313, 315, 316, 322], "rather": [4, 125, 310, 311, 312, 316], "lstm": [4, 169, 170, 180], "explicitli": [4, 311, 313, 316, 319], "rel": [4, 135, 163, 191, 310, 311, 316, 319], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 102, 311, 312, 319, 321, 322], "compens": 4, "descent": [4, 179], "1000": [4, 38, 71, 75, 87, 93, 102, 144, 205, 207, 208, 212, 232, 310, 311, 312, 313, 318, 319], "minimum": [4, 128, 166, 180, 191, 192, 193, 215, 218, 220, 222, 227, 235, 236, 240, 277, 310, 312, 316], "manual": [4, 18, 20, 21, 310, 313, 319], "deviat": [4, 119, 144, 155, 166, 173, 178, 179, 201, 237, 242, 310, 316], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "stabil": [4, 114], "stage": [4, 310, 317], "never": 4, "prevent": [4, 26, 28, 168, 192, 193, 234, 237, 284, 319], "solv": [4, 9, 10, 305, 310, 311, 312, 316, 317, 319], "entir": [4, 176, 312, 317, 319], "submit": [4, 305, 321], "suffici": [4, 310], "recommend": [4, 7, 79, 316], "system": [4, 5, 312, 316, 317], "adequ": [4, 146, 312, 316], "infeas": 4, "allevi": [4, 306], "prune": 4, "develop": [4, 7, 79, 310, 321], "fire": [4, 32, 71, 75, 87, 93], "certain": [4, 18, 20, 21, 32, 45, 71, 75, 87, 93, 99, 114, 133, 139, 205, 234, 306, 310, 311, 312, 316, 322], "illeg": 4, "move": [4, 21, 32, 71, 75, 87, 93, 106, 108, 123, 135, 138, 139, 141, 143, 144, 153, 171, 211, 284, 310, 311, 313, 321, 322], "chess": 4, "combin": [4, 138, 311, 319], "grasp": 4, "releas": [4, 7, 10, 32, 71, 75, 87, 93, 139, 321], "top": [4, 155, 173], "p": [4, 72, 91, 92], "wherein": 4, "cumul": [4, 130, 134, 155, 256, 312], "q": [4, 9, 71, 75, 87, 93, 158, 159, 160, 161, 164, 165, 167, 185, 186, 194, 200, 204, 209, 210, 222, 224, 225, 227, 228, 232, 233, 238, 240, 242, 248, 295, 304, 310], "flow": [4, 310, 312, 316, 317, 319], "reparameter": [4, 163, 175, 183], "soft": [4, 232, 240, 241], "critic": [4, 8, 198, 206, 221, 223, 224, 227, 233, 234, 237, 238, 239, 240, 242, 310, 312], "clip": [4, 40, 105, 128, 223, 242, 286, 312, 316, 317], "oppos": [4, 45], "incorrect": 4, "thought": [4, 71, 75, 87, 93], "bound": [4, 17, 21, 25, 26, 32, 71, 75, 87, 93, 105, 118, 144, 187, 188, 197, 203, 204, 207, 208, 209, 210, 211, 212, 215, 242, 306, 310, 311, 312, 322], "region": 4, "squash": [4, 313, 321], "tanh": [4, 156, 168, 171, 177, 191, 192, 193, 215, 312, 316, 317, 318, 321], "correct": [4, 117, 134, 289, 312, 313], "prob": [4, 174, 175, 183, 312, 316], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 79, 108, 109, 117, 123, 139, 143, 208, 211, 212, 232, 235, 237, 295, 310, 315, 317, 322], "real": [5, 212, 307, 313, 317], "histor": 5, "wa": [5, 7, 71, 75, 87, 93, 139, 154, 232, 241, 256, 307, 311, 312, 315, 319, 321], "ceas": 5, "fork": 5, "farama": [5, 88, 89, 312, 317], "detail": [5, 6, 7, 32, 71, 75, 87, 88, 89, 93, 137, 139, 165, 204, 221, 228, 237, 305, 311, 315, 319], "usag": [5, 7, 52, 102, 169, 222, 233, 240, 243, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "known": [5, 7, 8, 257, 258, 310, 311], "bc": [5, 321], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 71, 75, 87, 93, 102, 127, 144, 311, 319, 321], "face": [5, 8, 9, 322], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 146, 197, 203, 204, 208, 209, 210, 211, 212, 312, 316], "13": [5, 10, 11, 90, 310, 313, 317, 319], "construct": [5, 32, 35, 38, 41, 42, 71, 75, 87, 88, 93, 107, 110, 146, 169, 188, 212, 286, 306, 311, 312, 313, 317, 319, 322], "best": [5, 9, 79, 169, 316, 319, 321], "gymwrapp": [5, 71, 75, 87, 93, 111, 131, 133, 304, 312, 321], "feel": [5, 305, 321], "free": [5, 7, 107, 110, 221, 230, 237, 308, 312, 316, 321], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 109, 310, 311, 312, 313, 316, 319], "prepar": [6, 312], "conda": [6, 7, 305], "assum": [6, 26, 33, 40, 41, 42, 52, 75, 87, 93, 104, 113, 123, 124, 130, 135, 141, 143, 150, 169, 170, 195, 215, 225, 228, 240, 248, 259, 260, 261, 262, 264, 265, 266, 267, 269, 310, 312, 313, 315, 317], "7": [6, 10, 27, 33, 35, 38, 41, 155, 156, 170, 171, 173, 176, 256, 310, 312, 316, 317, 319, 321], "cmake": 6, "14": [6, 11, 119, 310, 312, 313, 317, 319], "activ": [6, 7, 9, 156, 162, 166, 171, 176, 177, 223, 234, 237, 306, 321], "sim": 6, "bullet": 6, "physic": [6, 7, 90, 308, 310, 316, 317], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 305], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 313], "y": [6, 7, 86, 170, 176, 195, 310, 312, 316], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 71, 75, 87, 93, 132, 235, 316, 322], "command": [6, 7, 10, 312, 316, 317, 322], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 304], "_has_habitat": 6, "available_env": [6, 67, 68, 69, 70, 71, 74, 75, 76, 80, 81, 87, 91, 92, 93, 322], "startswith": [6, 307, 310], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 70, 87, 93, 99, 302, 308, 310, 319], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 72, 235, 310], "env_nam": [6, 67, 69, 74, 80, 84, 90, 310, 312, 322], "llvmlite": 6, "config": [6, 7, 123, 143, 157, 162, 184, 290, 291, 292, 295, 296, 299], "var": [6, 7, 32, 71, 75, 87, 93, 139, 235], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 68, 71, 75, 87, 93, 156, 158, 159, 167, 171, 198, 199, 200, 208, 211, 214, 233, 310, 311, 316, 317, 319, 320, 321], "bind": 6, "deactiv": [6, 7, 203], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 71, 75, 87, 93, 139, 235, 319], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 311], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 315, 317], "joint": [7, 311], "dynam": [7, 233, 312, 317], "contact": [7, 37], "engin": [7, 90, 317], "biomechan": 7, "graphic": 7, "anim": [7, 316], "area": 7, "demand": [7, 322], "fast": [7, 9, 68, 125, 238, 310, 311, 312], "accur": [7, 52, 311, 317, 319], "articul": 7, "recent": [7, 11, 311, 318, 322], "acquir": [7, 312], "deepmind": [7, 8, 9, 69, 70, 312], "whomev": 7, "licenc": 7, "incorpor": [7, 201, 205, 207, 313, 317], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 93, 118, 138, 269, 306, 307, 310, 311, 312, 316, 319, 322], "legaci": 7, "pro": [7, 305], "tip": [7, 305], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 322], "sudo": [7, 305], "enabl": [7, 8, 52, 55, 56, 65, 169, 207, 282, 312, 316, 317, 319], "apt": [7, 316], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 311, 313], "fact": [7, 8, 310, 312, 316, 317, 318, 319, 322], "workflow": [7, 198, 199, 200], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 71, 75, 87, 93, 123, 141, 143, 313, 322], "binari": [7, 24, 27, 33, 101, 165, 186, 203, 204, 209, 210, 225, 227, 248], "setup": [7, 79], "mkdir": 7, "cd": 7, "tag": [7, 269, 274, 302], "earlier": [7, 310, 312, 313, 316, 319], "roboti": 7, "download": [7, 10, 79, 123, 143, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322], "html": [7, 84], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 87, 93], "obtain": [7, 40, 71, 75, 87, 93, 123, 134, 143, 155, 185, 283, 310, 312, 316], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54], "bin": [7, 165, 204, 306], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 161, 208, 212, 310, 312, 319], "nvidia": [7, 79], "older": [7, 11], "hack": [7, 310], "line": [7, 32, 71, 75, 87, 93, 311, 316, 318], "adatp": 7, "script": [7, 146, 295, 298, 302, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "unnot": [7, 124], "until": [7, 21, 136, 138, 312, 313, 316], "complet": [7, 9, 62, 75, 102, 133, 305, 307, 310, 312, 315], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 311, 319], "troubleshoot": 7, "gl": 7, "h": [7, 102, 104, 126, 137, 169, 173, 269, 311, 313, 319], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 72, 83, 88, 89, 91, 92, 94, 95, 100, 102, 134, 136, 137, 155, 157, 162, 170, 173, 184, 195, 205, 207, 215, 222, 225, 227, 237, 238, 239, 242, 248, 250, 251, 252, 253, 256, 277, 308, 310, 311, 312, 313, 316, 317, 319, 321, 322], "fatal": 7, "No": 7, "directori": [7, 45, 55, 274, 308], "devel": 7, "ubuntu": [7, 79], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 310, 312, 317, 319, 320], "disappear": [7, 311, 313, 315], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 81, 91, 92, 119, 121, 156, 163, 170, 171, 176, 177, 181, 191, 216, 295, 310, 311, 316, 317, 319, 320, 321, 322], "glibcxx_3": 7, "29": [7, 312, 313, 317, 320], "compil": [7, 32, 71, 75, 87, 93], "libosmesa": 7, "libgcc": 7, "Then": [7, 312, 315], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 71, 75, 87, 93, 118, 139, 322], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 310, 313, 317], "114": [7, 317], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 310, 317, 319], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 100, 146], "opengl": [7, 316], "global": [7, 32, 71, 75, 87, 88, 89, 93, 185, 194, 208, 212, 248, 308, 310, 316], "cuda_visible_devic": 7, "id": [7, 23, 40, 207, 238, 272, 295], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 317], "correctli": [7, 32, 71, 75, 87, 93], "lgl": 7, "libegl": 7, "x11": [7, 316], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 75, 153, 201, 205, 207, 237, 286, 308, 310, 311, 315, 319], "sketch": [8, 308], "_": [8, 72, 79, 103, 107, 109, 110, 117, 119, 125, 137, 144, 197, 211, 216, 220, 221, 222, 224, 227, 233, 237, 238, 240, 242, 250, 251, 252, 253, 310, 311, 312, 313, 316, 317, 319, 321], "n_training_step": 8, "datapoint": [8, 45, 319], "onlin": [8, 13, 17, 102, 162, 184, 221, 226, 236, 237, 277, 302, 312, 313, 316, 319], "n_data_per_train": 8, "no_grad": [8, 32, 71, 75, 87, 93, 117, 250, 251, 252, 253, 312, 313, 316], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 283, 298, 310, 311, 312, 316, 319], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 127, 283, 308, 310, 311, 312, 313, 316, 318, 319, 321], "loss_fn": [8, 313, 321], "backward": [8, 32, 71, 75, 87, 93, 144, 221, 222, 224, 227, 233, 237, 238, 239, 240, 242, 310, 312, 313, 316, 317], "zero_grad": [8, 32, 71, 75, 87, 93, 308, 310, 312, 313, 316, 317], "backpropag": [8, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 316, 317], "differenti": [8, 45, 117, 250, 251, 252, 253, 313, 316, 317], "denomin": 8, "artifact": 8, "numer": [8, 38, 144, 168, 192, 193, 197, 203, 204, 208, 209, 210, 211, 212, 284, 312, 319, 322], "misconcept": 8, "save": [8, 32, 34, 36, 39, 71, 75, 87, 93, 268, 286, 308, 316], "freed": 8, "appear": [8, 33, 317, 319], "compuat": 8, "twice": 8, "fix": [8, 135, 222, 236, 240, 311, 317, 322], "retain_graph": 8, "discuss": [8, 9, 316], "inplac": [8, 32, 34, 36, 39, 71, 75, 87, 93, 139, 310], "accumul": 8, "onto": [8, 33, 150, 197, 201, 203, 204, 207, 208, 209, 210, 211, 212, 313, 317], "exclud": [8, 52, 102, 111, 153, 185, 316, 319], "forward": [8, 32, 71, 75, 87, 93, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 176, 177, 178, 180, 181, 182, 184, 185, 187, 188, 190, 194, 195, 201, 202, 204, 205, 207, 210, 211, 212, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 307, 317, 321], "submodul": [8, 32, 71, 75, 87, 93, 97, 235], "param": [8, 32, 40, 71, 75, 83, 87, 93, 106, 107, 108, 111, 117, 125, 131, 133, 138, 163, 165, 191, 202, 208, 211, 214, 216, 235, 244, 247, 250, 251, 252, 253, 254, 310, 316, 317, 318, 321], "grad": [8, 32, 71, 75, 87, 93, 310, 312], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 87, 88, 89, 93, 106, 123, 135, 138, 139, 141, 143, 180, 185, 211], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 102, 113, 124, 140, 229, 307, 312, 316, 317], "ask": [8, 310, 312, 313, 316, 318, 322], "much": [8, 13, 14, 35, 41, 58, 87, 93, 234, 237, 312, 316, 317, 319, 322], "render": [8, 282, 310, 311, 312], "upon": [8, 317], "factor": [8, 32, 127, 168, 179, 192, 193, 201, 205, 207, 222, 228, 229, 231, 241, 256, 310, 311, 316, 319, 322], "fit": [8, 11, 119, 307, 308, 310], "bottlneck": 8, "affect": [8, 32, 71, 75, 87, 93, 138, 139, 146, 250, 251, 252, 253], "brax": [8, 67, 68, 125, 322], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 71, 75, 87, 93, 112, 139, 174, 175, 224, 225, 277, 307, 308, 310, 312, 313, 316, 317, 319], "underli": [8, 71, 75, 87, 93, 235, 317], "tedeiou": 8, "priorit": [8, 35, 41, 58, 222, 224, 225, 227, 233, 238, 240, 242, 310, 311], "amount": [8, 207, 311, 319], "isn": [8, 34, 36, 39, 203, 211, 316], "contigu": [8, 71, 75, 87, 93, 150, 312, 316, 317, 319, 321, 322], "costli": [8, 317], "concaten": [8, 21, 30, 31, 102, 103, 119, 138, 171, 214, 310, 311, 316, 317, 319, 322], "constitut": [8, 311, 316, 317], "plain": 8, "profil": 8, "fulli": [8, 32, 71, 75, 87, 93, 311, 317, 319], "frequent": [8, 319], "program": [8, 233, 322], "functorch": [8, 10], "incl": 8, "suit": [8, 70, 312, 322], "mujoco_instal": 8, "valueerror": [8, 318], "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 211, 214, 235, 316, 317, 321], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 84, 156, 171, 176, 177, 235, 312, 317, 321], "lost": 8, "permut": [8, 62, 121, 321, 322], "idea": [9, 238, 308, 313, 316], "introductori": 9, "intro": [9, 312, 313], "dai": [9, 321], "2022": [9, 10, 317, 321], "spin": 9, "deep": [9, 102, 158, 159, 160, 161, 164, 207, 221, 232, 240, 241, 310], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 119, 144, 310, 311, 312, 313], "reddit": 9, "reagent": 9, "orient": [9, 322], "baselines3": 9, "tf": 9, "bandit": [9, 86], "tensorflow": [9, 174, 175], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 71, 75, 87, 93, 117, 213, 214, 237, 306, 312, 313, 316, 317, 318, 322], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 321], "grade": 9, "factori": [9, 43], "throughput": [9, 310], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 71, 75, 87, 93, 105, 109, 150, 162, 165, 176, 182, 186, 197, 201, 203, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 225, 227, 242, 248, 306, 311, 312, 313, 316, 317, 321, 322], "mbrl": [9, 83, 306], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 317, 320], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 312, 313, 316], "notebook": [10, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322], "24": [10, 310, 312, 317, 319, 320], "11": [10, 27, 33, 45, 55, 56, 65, 72, 137, 155, 173, 310, 312, 316, 317, 319], "12": [10, 55, 56, 65, 91, 92, 310, 312, 313, 316, 317, 319, 320], "pip": [10, 53, 316, 321, 322], "pip3": [10, 312, 313, 316], "extra": [10, 32, 71, 75, 87, 93, 102, 144, 153, 306, 312, 313, 319], "url": 10, "org": [10, 35, 58, 102, 123, 141, 157, 158, 159, 160, 161, 162, 165, 166, 167, 173, 174, 175, 179, 181, 182, 184, 185, 187, 188, 194, 204, 207, 221, 222, 226, 228, 229, 230, 231, 232, 233, 236, 237, 239, 240, 241, 250, 255, 263, 318], "whl": 10, "u": [10, 53, 317], "There": [10, 169, 306, 308, 312, 313, 316, 317, 319, 322], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 235], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 69, 71, 73, 75, 86, 87, 88, 89, 90, 93, 96, 97, 100, 101, 102, 103, 104, 107, 109, 110, 113, 115, 116, 117, 119, 120, 123, 124, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 143, 144, 147, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 185, 186, 194, 197, 203, 204, 208, 209, 210, 211, 212, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 248, 249, 250, 251, 252, 253, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 295, 296, 302, 311, 312], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 71, 72, 75, 83, 87, 93, 99, 220, 235, 291, 292, 300, 301, 302, 311], "from_vers": 11, "to_vers": 11, "intersect": [11, 133], "vs": [11, 169, 170, 321], "longer": [11, 311, 316, 319], "self": [11, 26, 28, 32, 34, 36, 39, 71, 75, 83, 87, 93, 100, 106, 107, 110, 123, 135, 138, 139, 141, 143, 155, 165, 173, 185, 194, 201, 205, 211, 216, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 308, 310, 311, 317, 318, 321], "x": [11, 23, 26, 32, 38, 40, 117, 137, 156, 165, 167, 169, 170, 171, 173, 176, 177, 195, 203, 209, 218, 220, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 286, 310, 312, 317, 319, 321], "23": [11, 313, 316, 317, 320], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 71, 72, 75, 87, 93, 99, 117, 135, 195, 203, 209, 229, 231, 250, 253, 261, 262, 266, 267, 298, 307, 310, 311, 316, 319, 321, 322], "import_modul": 11, "27": [11, 317, 319], "get_class_that_defined_method": 11, "f": [11, 75, 220, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 310, 311, 312, 313, 316, 317, 319, 322], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 88, 89, 93, 109, 119, 135, 139, 144, 168, 176, 177, 192, 193, 203, 209, 215, 222, 230, 235, 236, 240, 282, 283, 308, 310, 311, 312, 313, 317, 322], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 141, 157, 184], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 71, 72, 75, 87, 88, 89, 93, 96, 117, 135, 139, 144, 156, 157, 158, 159, 160, 161, 162, 167, 170, 171, 184, 208, 212, 273, 274, 282, 291, 292, 295, 300, 301, 302, 310, 311, 312, 322], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 71, 75, 87, 93, 125, 139, 153, 169, 202, 235, 307, 310, 311, 313, 319], "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 106, 123, 132, 138, 139, 140, 142, 143, 155, 156, 164, 169, 171, 172, 173, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 248, 250, 251, 252, 253, 254, 276, 279, 283, 286, 302, 311], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 71, 73, 75, 87, 93, 100, 102, 103, 106, 107, 108, 111, 112, 113, 116, 117, 118, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 138, 142, 144, 153, 154, 155, 169, 172, 173, 201, 202, 204, 205, 207, 210, 211, 212, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 254, 286, 310, 317], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 72, 87, 93, 310, 321], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 71, 75, 83, 87, 88, 89, 93, 102, 103, 104, 109, 113, 114, 118, 119, 121, 123, 124, 126, 132, 133, 136, 139, 140, 141, 143, 146, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 221, 222, 223, 227, 229, 230, 234, 235, 236, 237, 238, 242, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 277, 278, 279, 282, 283, 286, 288, 295, 296, 300, 301, 302, 311, 317], "200": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 94, 95, 127, 158, 159, 166, 187, 188, 310, 313, 317], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 102, 127, 286, 289, 298, 308, 310, 311, 312, 313, 316, 319, 321], "device_typ": [13, 16, 27, 30, 33, 156, 157, 158, 159, 160, 161, 167, 171, 178, 179, 184], "create_env_kwarg": [13, 14, 16, 17, 72, 84, 87, 93, 310], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 127, 311, 319], "explorationtyp": [13, 14, 16, 20, 21, 235, 282, 310, 311, 312, 313, 321], "interactiontyp": [13, 16, 18, 19, 20, 21, 148, 152, 208, 212, 282], "exploration_mod": [13, 16, 18, 19, 20, 304, 306], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 71, 75, 87, 93, 106, 107, 110, 117, 119, 123, 127, 128, 129, 134, 135, 137, 138, 139, 141, 143, 144, 163, 166, 168, 171, 174, 175, 178, 179, 187, 188, 191, 193, 201, 211, 215, 218, 219, 220, 221, 222, 227, 230, 231, 232, 233, 236, 238, 240, 241, 242, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 284, 310, 311, 319, 322], "num_thread": [13, 14, 87, 93], "num_sub_thread": [13, 14, 87, 93], "datacollector": [13, 14, 16, 17, 208, 212, 237, 312], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 197, 201, 203, 204, 207, 208, 209, 210, 211, 212, 214, 306, 321], "stepcount": [13, 71, 75, 87, 93, 138, 310, 311, 312, 313, 316, 321], "env_mak": [13, 14, 16, 21, 298, 322], "50": [13, 14, 16, 21, 37, 40, 312, 313, 315, 316, 317, 319, 320], "2000": [13, 14, 16, 45, 78, 312, 319], "enumer": [13, 14, 16, 21, 32, 38, 42, 71, 75, 87, 93, 243, 307, 310, 311, 312, 313, 319, 321], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 121, 127, 133, 165, 186, 203, 204, 207, 209, 210, 306, 312, 313, 317, 319, 321, 322], "step_count": [13, 14, 16, 71, 75, 87, 93, 133, 312, 313, 321], "shutdown": [13, 14, 16, 17, 21, 310, 321], "del": [13, 14, 16, 310, 312, 315, 321, 322], "randompolici": [13, 14, 16, 18, 19, 20, 22, 102, 127, 304, 319], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 223, 234, 237, 277, 279, 282, 286, 289, 290, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322], "lifespan": [13, 14, 16, 18, 19, 20, 311], "divis": [13, 14, 16, 18, 19, 20, 316], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 109, 313, 319], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 71, 75, 87, 93, 135, 139, 208, 212, 282, 300, 301, 302, 308, 311, 312, 317, 322], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 71, 75, 87, 93, 312], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 311, 312, 316], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 138, 140, 177, 307, 308, 310, 311, 316, 319, 321], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 71, 75, 87, 93, 109, 111, 131, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 174, 175, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 250, 319, 322], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 306, 316, 317], "post": [13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 87, 93], "multistep": [13, 14, 16, 18, 19, 20, 21, 304, 311], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 119, 129, 168, 178, 187, 192, 193, 248, 306, 317, 319], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 237], "whole": [13, 14, 16, 26, 28, 32, 45, 71, 75, 87, 93, 139, 277, 310, 312], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 288, 298, 308, 310, 321], "async": [13, 14, 18, 19, 20, 21, 310, 321], "ratio": [13, 14, 40, 310, 312], "finish": [13, 14, 21, 75, 127, 322], "rest": [13, 14, 306, 312, 313, 317, 321], "earli": [13, 14, 75, 133, 321], "thread": [13, 14, 84, 87, 93], "equal": [13, 14, 84, 87, 93, 118, 119, 156, 164, 169, 171, 177, 241, 245, 277, 300, 301, 310, 312, 318], "plu": [13, 14, 40, 87, 93, 317], "safeti": [13, 14, 83, 87, 93], "harm": [13, 14, 87, 93], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 139, 144, 308, 310], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 139, 144, 302, 308, 310, 311, 322], "ordereddict": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 139, 144, 311], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 144, 169, 220, 221, 223, 234, 237, 286, 306, 316], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 71, 75, 87, 93, 139], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 71, 75, 87, 93, 114, 119, 133, 156, 171, 176, 177, 233, 240, 319], "increment": [13, 14, 16, 17, 71, 75, 87, 93, 234], "env_fn": [13, 14, 16, 17, 72, 300, 301], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 71, 75, 87, 93, 105, 119, 127, 133, 176, 204, 278, 298, 311, 312, 313, 315, 316, 317, 319, 321, 322], "300": [13, 14, 16, 17, 160, 161, 317], "out_se": [13, 14, 16, 17, 322], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 106, 123, 132, 135, 138, 139, 140, 142, 143, 155, 156, 158, 159, 160, 161, 164, 167, 168, 169, 171, 172, 173, 176, 177, 183, 191, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 248, 249, 250, 251, 252, 253, 254, 269, 273, 274, 276, 279, 286, 291, 292, 295, 299, 300, 301, 307, 312, 316], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 71, 75, 87, 93, 100, 101, 102, 103, 104, 107, 109, 110, 113, 115, 116, 117, 119, 120, 124, 126, 127, 128, 129, 130, 134, 136, 137, 138, 144, 153, 158, 164, 165, 169, 170, 171, 177, 180, 184, 185, 186, 203, 204, 209, 210, 215, 221, 222, 224, 227, 229, 233, 235, 237, 238, 239, 240, 242, 250, 251, 252, 253, 269, 280, 282, 284, 293, 294, 310], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 68, 81, 83, 100, 107, 110, 155, 173, 221, 222, 224, 225, 227, 233, 237, 238, 240, 242, 317, 321, 322], "describ": [15, 44, 103, 138, 191, 192, 272, 307, 310, 312, 316, 317, 322], "tensor_spec": [15, 100, 154, 227, 237, 239], "boundedtensorspec": [15, 22, 26, 71, 75, 87, 93, 205, 207, 208, 215, 221, 222, 224, 233, 237, 238, 240, 242, 304, 312, 316, 317, 321, 322], "cube": 15, "envcreat": [16, 22, 298, 299, 302, 304, 310, 311, 321, 322], "interruptor": 16, "_interruptor": 16, "outsid": [16, 316], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 71, 75, 87, 93, 312, 316, 321, 322], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 75, 84, 117, 221, 223, 234, 237, 310, 315, 317, 321], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 122, 310, 321], "regular": [17, 34, 36, 39, 186, 204, 209, 210, 211, 212, 228, 288, 304, 308, 310, 311, 319, 322], "mere": 17, "greater": [17, 169, 310, 311, 321], "sent": [17, 55, 56, 65, 144], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 71, 75, 87, 93, 124, 144, 155, 156, 158, 160, 162, 164, 171, 173, 176, 177, 197, 211, 216, 277, 283, 310, 312, 313, 317, 318, 319, 322], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 286], "string": [18, 19, 20, 32, 37, 45, 54, 71, 75, 87, 93, 99, 123, 133, 143, 169, 203, 208, 209, 220, 268, 285, 295, 307, 310, 312, 313], "respect": [18, 19, 20, 32, 71, 75, 87, 93, 101, 106, 107, 110, 123, 124, 135, 138, 139, 141, 143, 176, 188, 211, 216, 281, 312, 313, 316], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 305, 311, 312, 315, 319], "serv": [18, 20, 21, 77, 319, 322], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 71, 75, 87, 93, 113], "seen": [18, 20, 21, 307, 310, 311, 313, 316, 319], "turn": [18, 20, 21, 115, 140, 203, 282, 307, 310, 311, 313, 317, 318], "mp": [18, 19, 20, 72, 144], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 310], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 237, 300, 301], "homonym": [18, 19, 20, 317], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 310], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 208, 212], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 300, 301, 310, 311], "coordin": 21, "hood": [21, 317], "init": [21, 32, 71, 75, 87, 93, 310, 311, 312], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 319], "similarli": [21, 32, 62, 71, 75, 87, 93, 176, 213, 214, 233, 322], "num_cpu": 21, "num_gpu": 21, "1024": [21, 162, 319], "equat": [21, 75, 207, 220, 223, 241, 312, 317], "exce": [21, 312, 319], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 286, 310, 312, 313], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 91, 92, 94, 95, 156, 157, 158, 159, 162, 167, 171, 176, 177, 181, 182, 184, 185, 194, 248, 310, 311, 312, 313, 317, 318, 319, 320, 321, 322], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "wherea": [22, 109, 235, 308], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 157, 162, 184, 202], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 72, 311], "__main__": [22, 72], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 109, 136, 191, 192, 193, 202, 207, 222, 223, 227, 236, 238, 240, 310, 312, 313, 316], "durat": [23, 316], "meta": [23, 44, 52, 73, 308, 312, 316, 319], "aren": [23, 313], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 144, 306, 310, 316], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 109, 182, 183, 187, 220, 306, 311, 312, 313, 317, 319], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 321], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 207, 215], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 215, 317], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 71, 75, 87, 93, 106, 107, 110, 117, 123, 135, 138, 139, 141, 143, 144, 211, 295, 322], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 105, 322], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 156, 171, 189, 190], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 71, 75, 87, 93, 302, 306], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 322], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 109, 169, 197, 201, 203, 204, 207, 208, 209, 210, 211, 212, 306, 321, 322], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 197, 203, 204, 208, 209, 210, 211, 212, 312, 316, 317, 319], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 135, 150, 317, 319], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 102, 132, 156, 189, 190, 310, 317, 319], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 102, 103, 121, 135, 140, 144, 170, 190, 195, 302, 311, 312, 317, 319], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 138, 139, 180, 191, 302], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 88, 89, 100, 109, 165, 183, 186, 203, 204, 209, 210, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 313], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 165, 186, 203, 209, 225, 227, 248, 304, 306], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 71, 75, 87, 93, 106, 107, 110, 123, 135, 138, 139, 141, 143, 144, 211, 220, 235, 310, 311, 312, 317, 319], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 135, 169, 313, 317, 318], "upper": [25, 118], "unnam": 26, "effect": [26, 32, 71, 75, 87, 93, 102, 139, 286, 310, 319, 322], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 71, 75, 87, 93, 156, 171, 312, 317], "composite_spec": 26, "observation_vector": [26, 103, 295, 310], "randn": [26, 34, 36, 39, 55, 56, 65, 119, 150, 157, 162, 165, 170, 174, 175, 176, 180, 183, 184, 186, 197, 198, 199, 200, 202, 203, 208, 209, 211, 214, 215, 216, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 250, 251, 252, 253, 285, 306, 321, 322], "td_project": 26, "is_empti": [26, 28, 317], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 71, 75, 87, 93, 249, 316], "children": [26, 28, 32, 71, 75, 87, 93], "keysview": [26, 28], "reflect": [26, 28, 88, 89, 153, 235, 289, 311, 312, 313, 316], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 71, 75, 87, 93, 235], "succeed": [26, 28, 312, 316, 317], "selected_kei": [26, 28, 131, 310], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 164, 165, 186, 203, 204, 209, 210, 227, 235, 248, 306, 313], "arang": [27, 33, 165, 175, 203, 277, 306, 319], "argmax": [27, 165, 186, 204, 210], "chosen_action_valu": [27, 33, 185, 186, 194, 209, 210, 248, 306, 313], "outcom": [27, 33, 163, 191], "lazi": [28, 29, 49, 50, 71, 75, 87, 93, 123, 141, 178, 213, 214, 310, 311, 315, 319, 322], "represent": [28, 29, 32, 71, 75, 87, 93, 123, 141, 143, 310, 317, 318, 322], "drawn": [28, 29, 135, 205, 208, 212, 312, 316], "lazystackedtensordict": [28, 71, 75, 83, 87, 93, 315, 321], "heterogen": [28, 29, 82, 88, 89, 146, 176, 177, 310, 311], "semant": [28, 29, 306], "thrown": [29, 32, 71, 75, 87, 93, 319], "nvec": [30, 31], "cardin": [30, 31, 165, 186, 203, 204, 210, 312], "ax": [30, 178, 179], "m": [30, 32, 71, 75, 87, 93, 109, 212, 306, 311, 317], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 225, 227, 248, 304], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 304], "gamma": [32, 127, 173, 221, 222, 224, 225, 227, 228, 229, 231, 233, 235, 237, 238, 239, 240, 242, 243, 244, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 298, 307, 310, 311, 312, 316, 321], "sutton": [32, 307, 316], "1988": 32, "predict": [32, 40, 166, 172, 173, 202, 217, 228, 230, 231, 249, 306, 310, 311], "tempor": [32, 169, 173, 251, 252, 257, 258], "44": [32, 317, 319], "discount": [32, 72, 127, 222, 228, 229, 231, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 307, 311, 312, 316], "ahead": [32, 322], "add_modul": [32, 71, 75, 87, 93], "child": [32, 71, 75, 87, 93], "fn": [32, 37, 71, 75, 87, 93, 180, 300, 301], "init_weight": [32, 71, 75, 87, 93], "fill_": [32, 71, 75, 87, 93, 311, 313, 322], "net": [32, 71, 75, 87, 93, 170, 177, 221, 222, 227, 233, 237, 238, 239, 240, 295, 298, 311, 317, 318, 321], "in_featur": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 158, 159, 160, 161, 170, 171, 177, 178, 179, 198, 211, 225, 321], "out_featur": [32, 71, 75, 83, 87, 93, 106, 123, 135, 138, 139, 141, 143, 155, 156, 158, 159, 160, 161, 166, 167, 169, 170, 171, 173, 176, 177, 178, 179, 198, 203, 211, 225, 306, 310, 313, 321], "bia": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 156, 166, 169, 171, 177, 178, 179, 180, 205, 207, 211, 218, 219, 220, 235, 307, 310, 311, 312, 313, 316, 321], "requires_grad": [32, 71, 75, 87, 93, 117], "bfloat16": [32, 71, 75, 87, 93], "datatyp": [32, 71, 75, 87, 93, 319], "member": [32, 71, 75, 87, 93, 235], "xdoctest": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 235], "skip": [32, 71, 75, 87, 93, 114, 139, 146, 208, 212, 235, 250, 251, 252, 253, 268, 269, 279, 282, 310, 311, 312, 317], "buf": [32, 71, 75, 87, 93], "20l": [32, 71, 75, 87, 93, 235], "1l": [32, 71, 75, 87, 93, 235], "5l": [32, 71, 75, 87, 93, 235], "__call__": [32, 37, 71, 75, 87, 93, 212, 308], "associ": [32, 71, 75, 87, 93, 187, 302, 310, 319], "doubl": [32, 46, 71, 75, 87, 93, 106, 107, 108, 110, 123, 135, 138, 139, 141, 143, 211, 225, 228, 232, 238, 241, 248, 310, 311, 312, 313, 322], "eval": [32, 71, 75, 87, 93, 139, 144, 310, 311, 312], "evalu": [32, 71, 75, 87, 93, 139, 163, 174, 175, 183, 193, 238, 291, 292, 311, 312], "dropout": [32, 71, 75, 87, 93, 139, 169, 171, 313], "batchnorm": [32, 71, 75, 87, 93, 139], "disabl": [32, 71, 75, 87, 93, 139, 168, 193, 310], "comparison": [32, 54, 71, 75, 87, 93, 139, 235, 310, 311], "similar": [32, 71, 75, 87, 88, 89, 93, 106, 123, 135, 138, 139, 141, 142, 143, 144, 198, 200, 208, 211, 212, 307, 310, 311, 312, 313, 317, 322], "confus": [32, 71, 75, 87, 93, 139], "extra_repr": [32, 71, 75, 87, 93], "shift": [32, 218, 250, 251, 252, 253, 312], "nontermin": 32, "original_reward": 32, "newli": [32, 71, 75, 87, 93], "OR": 32, "reshap": [32, 169, 171, 312, 316], "get_buff": [32, 71, 75, 87, 93], "throw": [32, 71, 75, 87, 93, 322], "docstr": [32, 71, 75, 87, 93], "get_submodul": [32, 71, 75, 87, 93], "explan": [32, 71, 75, 87, 93], "qualifi": [32, 71, 75, 87, 93], "referenc": [32, 71, 75, 87, 93], "attributeerror": [32, 71, 75, 87, 93], "invalid": [32, 71, 75, 87, 93, 96, 174, 175], "resolv": [32, 71, 75, 87, 93], "someth": [32, 71, 75, 82, 87, 93, 305, 311, 312, 317, 322], "get_extra_st": [32, 71, 75, 87, 93, 144], "set_extra_st": [32, 71, 75, 87, 93, 144], "picklabl": [32, 71, 75, 87, 93, 144], "guarante": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 144, 321], "pickl": [32, 71, 75, 87, 93, 144], "get_paramet": [32, 71, 75, 87, 93], "sai": [32, 71, 75, 87, 93, 176, 318, 322], "net_b": [32, 71, 75, 87, 93], "net_c": [32, 71, 75, 87, 93], "conv": [32, 71, 75, 87, 93, 156, 311], "conv2d": [32, 71, 75, 87, 93, 156, 176, 321], "kernel_s": [32, 71, 75, 87, 93, 156, 158, 159, 176, 181, 311, 321], "stride": [32, 71, 75, 87, 93, 156, 158, 159, 167, 176, 311, 321], "diagram": [32, 71, 75, 87, 93], "show": [32, 71, 75, 87, 93, 177, 306, 310, 312, 313, 316, 317, 319, 321], "degre": [32, 71, 75, 87, 93], "named_modul": [32, 71, 75, 87, 93], "o": [32, 71, 75, 87, 93], "transit": [32, 52, 71, 75, 87, 93, 217, 310, 313, 317, 319], "half": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 310], "ipu": [32, 71, 75, 87, 93], "strict": [32, 34, 36, 39, 71, 75, 87, 93, 139], "descend": [32, 71, 75, 87, 93, 139], "persist": [32, 71, 75, 87, 93, 139, 153], "enforc": [32, 62, 71, 75, 87, 93, 139, 213, 317], "preserv": [32, 71, 75, 87, 93, 139], "missing_kei": [32, 71, 75, 87, 93, 139], "unexpected_kei": [32, 71, 75, 87, 93, 139], "namedtupl": [32, 71, 75, 87, 93, 139], "duplic": [32, 62, 71, 75, 87, 93, 225, 228, 235, 248], "l": [32, 71, 75, 87, 93, 249, 312, 317], "idx": [32, 71, 75, 87, 93], "named_buff": [32, 71, 75, 87, 93], "remove_dupl": [32, 71, 75, 87, 93, 235], "prepend": [32, 71, 75, 87, 93, 235], "running_var": [32, 71, 75, 87, 93], "named_children": [32, 71, 75, 87, 93], "conv4": [32, 71, 75, 87, 93], "conv5": [32, 71, 75, 87, 93], "memo": [32, 71, 75, 87, 93], "named_paramet": [32, 71, 75, 87, 93, 117, 235], "register_backward_hook": [32, 71, 75, 87, 93], "removablehandl": [32, 71, 75, 87, 93], "deprec": [32, 71, 75, 87, 93, 139, 147, 151, 164, 221, 222, 223, 225, 227, 228, 233, 234, 237, 238, 239, 240, 248, 250, 251, 252, 253, 258, 322], "favor": [32, 71, 75, 87, 93, 312], "register_full_backward_hook": [32, 71, 75, 87, 93], "register_buff": [32, 71, 75, 87, 93], "running_mean": [32, 71, 75, 87, 93], "alongsid": [32, 71, 75, 87, 93, 316], "num_featur": [32, 71, 75, 87, 93], "register_forward_hook": [32, 71, 75, 87, 93, 165, 186], "with_kwarg": [32, 71, 75, 87, 93], "always_cal": [32, 71, 75, 87, 93], "posit": [32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 113, 114, 132, 133, 136, 139, 140, 180, 307, 312, 316, 317, 319], "signatur": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 235, 307, 310, 317], "register_module_forward_hook": [32, 71, 75, 87, 93], "regardless": [32, 71, 75, 87, 93, 223, 234, 237], "register_forward_pre_hook": [32, 71, 75, 87, 93], "invok": [32, 71, 75, 87, 93], "And": [32, 71, 75, 87, 93], "forward_pr": [32, 71, 75, 87, 93], "register_module_forward_pre_hook": [32, 71, 75, 87, 93], "grad_input": [32, 71, 75, 87, 93], "grad_output": [32, 71, 75, 87, 93], "subsequ": [32, 71, 75, 87, 93, 313], "technic": [32, 71, 75, 87, 93, 311, 313], "caller": [32, 71, 75, 87, 93], "register_module_full_backward_hook": [32, 71, 75, 87, 93], "register_full_backward_pre_hook": [32, 71, 75, 87, 93], "backward_pr": [32, 71, 75, 87, 93], "register_module_full_backward_pre_hook": [32, 71, 75, 87, 93], "register_load_state_dict_post_hook": [32, 71, 75, 87, 93], "incompatible_kei": [32, 71, 75, 87, 93], "clear": [32, 71, 75, 79, 87, 93, 278], "register_modul": [32, 71, 75, 87, 93, 308], "alia": [32, 71, 75, 87, 93], "register_paramet": [32, 71, 75, 87, 93], "register_state_dict_pre_hook": [32, 71, 75, 87, 93], "keep_var": [32, 34, 36, 39, 71, 75, 87, 93, 139], "made": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 207, 225, 235, 248, 310, 311, 313, 316, 318], "requires_grad_": [32, 71, 75, 87, 93], "autograd": [32, 71, 75, 87, 93, 139], "freez": [32, 71, 75, 87, 93], "finetun": [32, 71, 75, 87, 93], "gan": [32, 71, 75, 87, 93], "share_memori": [32, 71, 72, 75, 87, 93, 310], "share_memory_": [32, 71, 75, 87, 93, 321], "destin": [32, 34, 36, 39, 71, 75, 87, 93, 107, 108, 110, 139, 141, 144, 153, 269], "averag": [32, 71, 75, 87, 93, 139, 144, 207, 229, 230, 284, 310, 312], "shallow": [32, 71, 75, 87, 93, 139, 313], "pleas": [32, 71, 75, 87, 88, 89, 93, 102, 136, 139, 305], "detach": [32, 71, 75, 87, 93, 139, 235, 250, 251, 252, 253, 310], "non_block": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "memory_format": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "channels_last": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "complex": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 310, 311], "integr": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 161, 169, 173, 211, 306, 316, 317, 318], "unchang": [32, 71, 75, 87, 93, 106, 109, 123, 135, 138, 139, 141, 143, 205, 211, 283, 310, 319], "tri": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "pin": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "4d": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "ignore_w": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "1913": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "3420": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "5113": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "2325": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 310], "torch_doctest_cuda1": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "gpu1": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "1914": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "5112": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 317], "2324": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "float16": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "cdoubl": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "3741": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "j": [32, 35, 58, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 308], "2382": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "5593": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211, 317], "4443": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "complex128": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "6122": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "1150": [32, 71, 75, 87, 93, 106, 123, 135, 138, 139, 141, 143, 211], "to_empti": [32, 71, 75, 87, 93], "dst_type": [32, 71, 75, 87, 93], "xpu": [32, 71, 75, 87, 93], "set_to_non": [32, 71, 75, 87, 93], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63, 176], "uniqu": [33, 319], "discretebox": [33, 71, 75, 87, 93, 312, 316, 322], "chosen_data": [34, 54], "rewarddata": [34, 54, 304], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 86], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 317], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 71, 75, 87, 93, 107, 110, 123, 139, 143, 278], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 302], "determin": [34, 35, 36, 39, 41, 52, 58, 71, 75, 87, 93, 123, 143, 176, 207, 311, 316], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 163, 191], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "flatten": [34, 36, 39, 113, 283, 313, 316], "to_tensordict": [34, 36, 39, 313], "memmap": [34, 36, 39, 55, 87, 93, 144, 283, 319], "unbind": [34, 36, 39, 169], "alpha": [35, 41, 58, 156, 176, 222, 227, 236, 238, 240, 310, 319, 321], "ep": [35, 41, 58, 144, 207, 223, 241, 284, 310, 311, 313], "1e": [35, 41, 58, 144, 163, 166, 180, 191, 310, 311, 312, 316], "08": [35, 41, 58, 313, 316, 317], "collate_fn": [35, 38, 41, 42, 52, 53, 319, 321], "prefetch": [35, 38, 41, 42, 52, 53, 54, 310, 311, 313, 319], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 102, 123, 141, 157, 158, 159, 160, 161, 162, 165, 166, 167, 173, 179, 181, 182, 184, 185, 187, 188, 194, 204, 207, 221, 222, 226, 228, 229, 230, 231, 232, 233, 236, 237, 240, 241, 250, 255, 263, 318], "ab": [35, 58, 123, 141, 144, 157, 162, 166, 167, 173, 179, 181, 182, 184, 185, 187, 188, 194, 221, 222, 226, 229, 230, 231, 232, 233, 236, 237, 240, 318], "1511": [35, 58, 167], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 191, 208, 212, 304, 307], "null": [35, 41, 58, 101], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 319], "merg": [35, 38, 41, 42, 52, 53, 317], "mini": [35, 38, 41, 42, 52, 53, 316], "decid": [35, 38, 41, 42, 321], "rb": [35, 38, 41, 42, 52, 53, 102, 127, 311, 313, 316, 318, 319, 321], "meth": [35, 38, 41, 42, 235], "incompat": [35, 38, 41, 42, 319], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 319], "tensordictprioritizedreplaybuff": [35, 304, 321], "simplifi": [35, 317, 319], "manual_se": [35, 38, 41, 42, 100, 109, 119, 127, 136, 174, 175, 183, 197, 204, 205, 207, 215, 221, 222, 224, 233, 240, 316, 317, 321, 322], "_weight": [35, 41, 319, 321], "arrai": [35, 40, 310, 319], "update_prior": [35, 58, 283, 308, 311, 319, 321], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 140], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 134, 310, 319], "nonetyp": [36, 39, 311], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218], "text": [37, 40, 43, 207, 312], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 157, 162, 184], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 319], "inde": [37, 109, 312, 317], "writer": [38, 42, 52, 53, 60, 64, 304, 312], "randomsampl": [38, 42, 52, 53, 304, 310], "roundrobinwrit": [38, 42, 52, 53, 304], "Not": 38, "ref_model": 40, "reward_model": [40, 217], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 117], "kl": [40, 117, 230, 234], "penalti": [40, 234], "strai": 40, "far": [40, 168, 192, 193, 317, 322], "calcul": [40, 127], "gpt2rewardmodel": 40, "get_dataload": [40, 304], "promptdata": [40, 304], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 317, 319], "reward_kl": [40, 117], "reward_raw": 40, "sample_log_prob": [40, 198, 199, 200, 208, 212, 214, 237, 295, 312, 316, 321], "create_rollout_td": 40, "log_prob": [40, 163, 174, 175, 183, 193, 212], "log_ratio": 40, "kl_coef": 40, "replic": 40, "rindex": 40, "multipli": [40, 222, 223, 227, 234, 236, 237, 238, 240, 284, 310], "term": [40, 117, 178, 179, 220, 221, 227, 288, 311, 312, 316], "subtract": [40, 134], "ve": [40, 310, 313], "eo": 40, "limit": [40, 83, 102, 117, 310, 311, 313, 316, 317], "generation_config": 40, "generationconfig": 40, "ti": [40, 259, 260, 261, 262, 264, 265, 266, 267, 311], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 222, 225, 227, 228, 233, 235, 238, 240, 242, 248, 319, 321], "td_error": [41, 42, 222, 224, 225, 227, 228, 233, 235, 238, 240, 242, 248, 310, 319, 321], "reduct": [41, 58], "prioritizedreplaybuff": [41, 304, 321], "update_tensordict_prior": [41, 310, 319, 321], "prioritizedsampl": [41, 42, 225, 228, 248, 304, 310, 319], "min": [41, 58, 191, 192, 193, 202, 207, 222, 223, 227, 236, 238, 240, 311, 312, 316], "median": [41, 58, 208, 212], "len": [41, 55, 56, 65, 121, 156, 171, 177, 310, 317, 318, 319, 321], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 81, 150], "huggingfac": [43, 206], "co": [43, 317], "doc": [43, 311, 316, 318], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 304], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 84, 87, 93, 310, 311], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 75, 141, 153, 268, 319, 322], "condit": [45, 134, 203, 204, 209, 210, 220, 310, 317, 319], "elementwis": 45, "os": [45, 311], "cpu_count": 45, "vocabulari": 45, "loader": [45, 312], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 100, 102, 103, 104, 105, 107, 109, 110, 111, 113, 116, 119, 121, 124, 125, 127, 130, 131, 136, 141, 144, 153, 154, 201, 202, 205, 207, 212, 225, 248, 269], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 311], "batch_dimens": 45, "filder": 45, "tempfil": [45, 298, 310, 311], "randint": [45, 137, 319], "20": [45, 71, 75, 79, 87, 93, 202, 277, 310, 312, 313, 316, 317, 320, 321, 322], "temporarydirectori": [45, 310, 311], "tmpdir": [45, 310, 311], "data_memmap": 45, "exclus": [48, 49, 113, 169, 174, 175, 203, 204, 209, 210, 241, 242, 250, 251, 252, 253, 254, 302, 306], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "env_kwarg": [52, 300, 301, 310], "metadata": [52, 312, 316, 322], "reconstruct": [52, 230, 310, 322], "recov": [52, 201, 207, 213, 233, 315], "regard": [52, 165, 204, 221, 228, 237, 310, 312, 317], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 84, 195, 300, 301, 307, 312, 313, 319, 321], "left": [52, 106, 107, 108, 111, 117, 123, 125, 131, 133, 136, 138, 141, 143, 205, 311, 312], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 75, 127, 130, 134, 155, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 311, 316], "absent": [52, 71, 75, 87, 93], "traj_split": 52, "observationnorm": [52, 144, 302, 310, 311, 312, 313, 321], "maze2d": 52, "umaz": 52, "loc": [52, 117, 119, 129, 168, 180, 192, 193, 198, 199, 200, 208, 212, 214, 221, 222, 233, 237, 238, 239, 240, 290, 295, 302, 306, 310, 311, 312, 313, 316, 321], "128": [52, 159, 162, 311, 313, 317, 318, 319, 320], "public": [53, 123, 143], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 86], "adult_onehot": [53, 86], "mushroom_num": [53, 86], "mushroom_onehot": [53, 86], "covertyp": [53, 86], "shuttl": [53, 86], "magic": [53, 86], "infinit": [54, 319], "three": [54, 306, 308, 312, 316, 317, 319, 322], "block": [54, 306, 313], "pairwisedataset": [54, 304], "256": [54, 162, 311, 312, 316, 317], "scratch_dir": [55, 310, 319], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 202, 319, 322], "bar": [55, 56, 65, 202, 279, 280, 282, 286, 308, 311], "attach": [55, 56, 57, 63, 65, 311], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 174, 175, 310], "auto": [56, 65, 207, 222, 227, 236, 238, 240, 242, 307, 316], "zero_": [56, 65, 150], "max_capac": [58, 310, 319], "uniformli": [59, 235, 322], "roundrobin": [60, 64], "piec": [60, 64, 66, 310, 311, 312, 316, 317, 319], "consum": [62, 311, 312, 316, 319], "incomplet": 62, "unlik": [62, 228, 237, 311, 321], "fresh": 62, "caution": [62, 146, 322], "shuffl": [62, 316], "haven": [62, 318], "remain": [62, 108, 109, 117, 134, 179], "draw": [62, 205], "__len__": 63, "googl": [67, 68, 312, 313, 316], "ant": [67, 68, 78, 318], "get_environ": 68, "87": [68, 310, 317, 319], "acrobot": [68, 322], "fetch": [68, 117, 318, 319], "task_nam": 69, "cheetah": [69, 70, 310], "frame_skip": [69, 70, 74, 75, 80, 114, 279, 282, 289, 308, 310, 311, 312, 321], "dm_control": [70, 310, 315, 322], "continuousbox": [71, 75, 87, 93, 150, 312, 316, 317, 321, 322], "unboundedcontinuoustensorspec": [71, 75, 83, 87, 93, 100, 107, 110, 135, 150, 155, 173, 197, 211, 214, 216, 239, 304, 312, 313, 316, 317, 322], "another_act": [71, 75, 87, 93], "mutabl": [71, 75, 87, 93], "batch_lock": [71, 73, 75, 87, 93, 135, 139, 317], "immut": [71, 75, 87, 93, 125, 139], "done_keys_group": [71, 75, 87, 93], "outer": [71, 75, 87, 93, 308, 310, 311, 322], "inner": [71, 75, 87, 93, 109, 308, 311, 312, 316, 322], "another_don": [71, 75, 87, 93], "fake_tensordict": [71, 75, 87, 93, 311], "fake": [71, 75, 87, 93, 310, 311], "overridden": [71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 313], "afterward": [71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218, 322], "silent": [71, 75, 87, 93, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 176, 177, 180, 181, 182, 184, 187, 188, 190, 195, 201, 202, 204, 205, 207, 210, 215, 218], "braxenv": [71, 75, 87, 93, 125, 304], "envnam": [71, 75, 87, 93], "mimic": [71, 75, 87, 93], "renametransform": [71, 75, 87, 93], "pipeline_st": [71, 75, 87, 93], "15": [71, 75, 87, 93, 202, 207, 229, 310, 312, 313, 316, 317, 319], "attibut": [71, 75, 87, 93], "speak": [71, 75, 87, 93, 310], "rand_act": [71, 75, 82, 87, 88, 89, 93], "_step": [71, 75, 87, 93, 100, 107, 110, 113, 125, 134], "privat": [71, 75, 87, 93, 317, 322], "reset_kei": [71, 75, 87, 93, 130], "partial": [71, 75, 87, 93, 286, 313], "multitask": [71, 75, 87, 93], "multiag": [71, 75, 82, 87, 88, 89, 93, 154, 177, 185, 194, 248], "another_reward": [71, 75, 87, 93], "callback": [71, 75, 87, 93, 316], "auto_reset": [71, 75, 87, 93, 317], "auto_cast_to_devic": [71, 75, 87, 93, 316], "break_when_any_don": [71, 75, 87, 93, 316], "return_contigu": [71, 75, 87, 93, 146, 315], "soon": [71, 75, 87, 88, 89, 93], "ndim": [71, 75, 87, 93], "concomitt": [71, 75, 87, 93], "workspac": [71, 75, 87, 93], "prevail": [71, 75, 87, 93, 130, 154], "creator": [72, 291, 292, 300, 301, 302], "substitut": [72, 144], "vecnorm": [72, 302], "env_creat": [72, 310], "test_env1": 72, "_td": 72, "observation_count": [72, 322], "test_env2": 72, "sleep": [72, 322], "ps": 72, "p1": 72, "p2": 72, "join": [72, 304, 311, 312], "9934": 72, "env_str": 73, "info_dict_read": 75, "set_info_dict_read": 75, "put": [75, 144, 302, 306, 311, 312, 313, 317], "read_act": 75, "read_don": 75, "reader": [75, 311], "interrupt": [75, 256], "nonsens": 75, "fallback": 75, "broken": [75, 146], "read_ob": 75, "dictat": [75, 208, 212, 237, 310, 317], "read_reward": 75, "baseinfodictread": 75, "info_dict": 75, "hoc": 75, "dict_read": 75, "default_info_dict_read": 75, "my_info_kei": 75, "some_env": 75, "placehold": [77, 139], "secur": 77, "behav": [77, 83, 183, 233, 318], "isaacgym": [78, 79], "isaacgymwrapp": [78, 304], "isaacgymenv": [79, 304], "webpag": 79, "isaac": 79, "essenc": 79, "04": [79, 310, 312, 317, 320], "snake": [80, 81], "6x6": [80, 81], "td1": [81, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 310], "12x12": 81, "tsp50": 81, "tsp100": 81, "qualnam": 82, "marl": [82, 96, 102, 136, 176, 316], "leverag": [82, 88, 89, 310, 316, 322], "neural": [82, 88, 89, 156, 189, 211, 306, 311, 312, 313, 316, 317, 322], "group_map": [82, 88, 89, 96], "constructiuon": [82, 88, 89], "premad": [82, 88, 89, 248], "all_in_one_group": [82, 96], "agent_0": [82, 88, 89, 96], "agent_1": [82, 88, 89, 96], "agent_2": [82, 88, 89, 96], "agent_3": 82, "int8": [82, 88, 89], "one_group_per_ag": [82, 88, 89], "environn": 83, "constraint": [83, 312, 316], "mymbenv": [83, 155, 173], "world_model": [83, 155, 173, 230], "super": [83, 100, 107, 110, 155, 165, 173, 216, 222, 224, 227, 233, 238, 240, 242, 310, 317, 321], "hidden_observ": [83, 155, 173], "mlp": [83, 155, 156, 158, 159, 160, 161, 169, 170, 173, 177, 198, 203, 225, 295, 306, 311, 315, 318, 321], "worldmodelwrapp": [83, 155, 173], "activation_class": [83, 155, 156, 158, 159, 160, 161, 166, 167, 171, 173, 176, 177, 311, 316, 321], "relu": [83, 155, 162, 173, 180, 220], "activate_last_lay": [83, 155, 161, 171, 173], "depth": [83, 155, 156, 158, 159, 160, 161, 166, 167, 171, 173, 176, 177, 181, 182, 203, 306, 311, 315, 316], "run_type_check": 83, "readthedoc": 84, "en": 84, "python_interfac": 84, "task_id": 84, "106": [86, 317], "my_env_fun": [87, 93], "custom_attribute_list": [87, 93], "custom_attribut": [87, 93], "custom_method_list": [87, 93], "custom_method": [87, 93], "deploi": [87, 93], "slight": [87, 93, 311], "overhead": [87, 93], "share_individual_td": [87, 93], "shared_memori": [87, 93], "policy_proof": [87, 93], "ll": [87, 93, 310, 311, 312, 313, 316, 322], "hidden": [87, 93, 166, 169, 170, 181, 182, 187, 188, 198, 199, 200, 202, 211, 214, 223, 234, 237, 306, 313, 315, 321], "update_kwarg": [87, 93], "pettingzoo": [88, 89], "pet": [88, 89], "zoo": [88, 89], "guid": [88, 89, 91, 92, 134, 305, 310, 316], "__": [88, 89], "aecenv": [88, 89], "use_mask": [88, 89], "dead": [88, 89], "compulsori": [88, 89], "adversary_0": [88, 89], "adversari": [88, 89], "marlgroupmaptyp": [88, 89, 96, 304], "vectoris": [88, 89], "multiwalker_v9": 88, "return_st": [88, 89], "categorical_act": [88, 89, 91, 92], "n_piston": [88, 89], "21": [88, 89, 310, 315, 316, 317], "pistonball_v6": [88, 89], "piston": [88, 89], "piston_0": [88, 89], "piston_1": [88, 89], "piston_20": [88, 89], "aec": [88, 89], "tictactoe_v3": [88, 89], "player": [88, 89], "player_1": [88, 89], "player_2": [88, 89], "butterfli": 89, "parallel_env": [89, 310, 321, 322], "roboh": 90, "expos": [90, 107, 110, 213, 311], "vikashplu": 90, "read_info": 90, "pars": [90, 319], "smacv2": [91, 92], "starcraft": [91, 92], "challeng": [91, 92, 317, 318], "v2": [91, 92, 245, 259, 260, 261, 262, 264, 265, 266, 267, 295], "10gen_terran": [91, 92], "10gen_zerg": [91, 92], "10gen_protoss": [91, 92], "3m": [91, 92], "8m": [91, 92], "25m": [91, 92], "5m_vs_6m": [91, 92], "8m_vs_9m": [91, 92], "10m_vs_11m": [91, 92], "27m_vs_30m": [91, 92], "mmm": [91, 92], "mmm2": [91, 92], "2s3z": [91, 92], "3s5z": [91, 92], "3s5z_vs_3s6z": [91, 92], "3s_vs_3z": [91, 92], "3s_vs_4z": [91, 92], "3s_vs_5z": [91, 92], "1c3s5z": [91, 92], "2m_vs_1z": [91, 92], "corridor": [91, 92], "6h_vs_8z": [91, 92], "2s_vs_1sc": [91, 92], "so_many_banel": [91, 92], "bane_vs_ban": [91, 92], "2c_vs_64zg": [91, 92], "old": [91, 92, 234, 322], "smac": [91, 92], "map_nam": [91, 92], "18": [91, 92, 94, 95, 177, 310, 313, 316, 317, 322], "176": [91, 92, 317], "battle_won": [91, 92], "dead_al": [91, 92], "dead_enemi": [91, 92], "episode_limit": [91, 92], "322": [91, 92, 317], "Or": [91, 92, 176], "procedur": [91, 92], "distribution_config": [91, 92], "n_unit": [91, 92], "n_enemi": [91, 92], "team_gen": [91, 92], "dist_typ": [91, 92], "weighted_team": [91, 92], "unit_typ": [91, 92], "marin": [91, 92], "maraud": [91, 92], "medivac": [91, 92], "exception_unit_typ": [91, 92], "start_posit": [91, 92], "surrounded_and_reflect": [91, 92], "map_x": [91, 92], "map_i": [91, 92], "capability_config": [91, 92], "88": [91, 92, 310, 317, 319], "131": [91, 92, 317, 319], "starcraft2env": 92, "scenario": [94, 95, 310, 316, 317], "flock": [94, 95], "continuous_act": [94, 95, 316], "agent_collision_rew": [94, 95], "agent_distance_rew": [94, 95], "agent_nam": 96, "ca": 96, "environment4": 96, "get_group_map": 96, "sumbodul": 97, "model_bas": [98, 155, 173], "adapt": [100, 234, 310, 317], "masker": 100, "binarydiscretetensorspec": [100, 225, 227, 248, 304], "maskedenv": 100, "ones_lik": 100, "scatter": 100, "unsqueez": [100, 102, 103, 137, 140, 170, 310, 313, 316, 317], "_set_se": [100, 107, 110, 317], "transform_reward_spec": [101, 105, 106, 107, 108, 111, 117, 125, 128, 129, 131, 133, 138, 140], "as_invers": 102, "account": [102, 174, 175, 306, 311, 313, 319, 322], "movement": 102, "veloc": [102, 316, 317, 322], "propos": [102, 172, 232, 241, 295, 306, 313, 319], "pdf": [102, 157, 158, 159, 160, 161, 165, 184, 204, 207, 228, 238, 241, 250, 255, 263, 295], "1312": 102, "5602": 102, "uesd": 102, "unsqueezetransform": [102, 317, 319], "consumpt": 102, "followin": 102, "pictur": 102, "cartpol": [102, 311, 313, 319, 322], "pixels_trsf": [102, 319], "grayscal": [102, 311, 313, 319, 322], "tensordictreplaybuff": [102, 283, 298, 304, 310, 311, 313, 319], "data_exclud": [102, 319], "_buffer": 102, "transform_observation_spec": [102, 103, 104, 105, 106, 107, 108, 111, 113, 115, 116, 117, 119, 121, 125, 126, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 317], "del_kei": [103, 141, 315, 317], "unsqueeze_if_oor": 103, "observation_posit": 103, "observation_veloc": 103, "delet": 103, "key1": [103, 277, 285], "key2": [103, 277, 285], "crop": [104, 124, 269], "center": [104, 269], "width": [104, 126], "height": [104, 126], "squar": [104, 168, 192, 193, 269], "out_keys_inv": [105, 107, 110, 119, 120, 121, 125, 138, 317], "scalar": [105, 128, 159, 161, 178, 179, 201, 205, 207, 218, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 248, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 306, 311, 317], "permit": [105, 113, 140], "rewardsc": [106, 139, 310, 311, 313], "rewardclip": 106, "transformed_env": [106, 138, 139], "transform_env_devic": [106, 108, 138], "transform_input_spec": [106, 107, 108, 109, 119, 121, 125, 130, 133, 138, 140, 142], "transform_output_spec": [106, 107, 108, 111, 117, 125, 131, 133, 138], "untouch": [106, 107, 108, 111, 117, 125, 131, 133, 138], "transformfull_done_spec": [106, 107, 108, 111, 117, 125, 131, 133, 138], "dtype_in": 107, "dtype_out": 107, "scan": [107, 110, 213, 214], "resp": [107, 110], "anticip": [107, 110], "not_transform": [107, 110], "rule": [107, 110, 212, 306, 312], "constructedw": [107, 110], "myenv": [107, 110], "orig_devic": 108, "unspecifi": 108, "transform_done_spec": [108, 138], "num_actions_effect": 109, "max_act": 109, "include_forward": 109, "dimension": [109, 169, 250, 255, 263, 316], "num_act": [109, 227], "action_out": 109, "_call": [109, 113, 317], "excluded_kei": 111, "finit": [112, 319], "first_dim": 113, "last_dim": 113, "allow_positive_dim": [113, 140], "th": [113, 140, 317], "frameskip": 113, "repeatedli": [114, 312, 316], "init_kei": 116, "is_init": [116, 169, 207, 313], "tracker": 116, "coef": 117, "pi_curr": 117, "pi_0": 117, "constrain": [117, 169, 237], "overfit": 117, "fine": [117, 318], "probabilist": [117, 208, 304, 312, 321], "get_dist": [117, 212, 213], "mod": [117, 169, 215, 313], "normalparamextractor": [117, 306, 312, 316], "probabilisticactor": [117, 198, 199, 200, 202, 221, 222, 226, 227, 233, 236, 237, 238, 239, 240, 242, 306, 310, 312, 316], "tanhnorm": [117, 198, 199, 200, 208, 214, 221, 222, 233, 237, 238, 239, 240, 242, 304, 312, 316, 321], "n_ob": [117, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242], "n_act": [117, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242], "return_log_prob": [117, 198, 199, 200, 208, 212, 214, 239, 306, 312, 316, 321], "apply_": 117, "copy_": [117, 310], "formulat": 117, "diverg": [117, 169, 208, 212, 230, 234], "noop": [118, 321], "30": [118, 187, 188, 312, 316, 317], "trial": 118, "op": [118, 201, 205, 288], "randomli": [118, 119, 135, 205, 208, 212, 316, 317, 319], "noop_max": 118, "standard_norm": [119, 129, 310, 311, 313], "affin": [119, 129], "layer": [119, 144, 156, 158, 159, 166, 169, 171, 176, 177, 178, 179, 181, 182, 189, 190, 196, 206, 215, 306, 311, 312, 313, 318], "normal": [119, 144, 156, 168, 171, 174, 175, 180, 192, 193, 201, 208, 212, 223, 234, 237, 282, 284, 302, 306, 308, 313, 316, 322], "set_default_tensor_typ": 119, "doubletensor": 119, "isclos": 119, "next_ob": [119, 250, 251, 252, 253, 321], "rubric": [119, 214], "init_stat": [119, 310, 311, 312, 313], "3752e": 119, "01": [119, 207, 218, 223, 234, 237, 310, 313, 316, 317, 320], "5087e": 119, "03": [119, 310, 316, 317, 320], "9294e": 119, "9636": 119, "5608": 119, "6408": 119, "num_it": [119, 311, 312], "reduce_dim": [119, 310, 311, 312, 313], "cat_dim": [119, 310, 311, 312, 313], "keep_dim": [119, 311, 313], "constant": [119, 134, 308, 310, 312, 313, 322], "statist": [119, 144, 239, 302, 310, 311, 312, 322], "approach": [119, 310, 312, 322], "gaussian": [119, 135, 155, 173, 178, 179, 184, 201, 312], "empir": [119, 155, 173, 208, 212, 310, 312, 316], "3d": 119, "third": [119, 204, 316], "reorder": 121, "in_keys_in": 121, "al": [121, 155, 322], "pong": [121, 322], "v5": [121, 322], "210": [121, 317, 322], "160": [121, 317, 322], "channel": [121, 176, 181, 182, 311], "r3m": [123, 318], "resnet": [123, 141, 143], "visual": [123, 141, 143, 312, 317], "embed": [123, 141, 142, 143, 185, 197, 198, 199, 200, 211, 216, 318], "ego4d": [123, 141, 143], "univers": [123, 141, 143], "suraj": [123, 141], "nair": [123, 141], "aravind": [123, 141], "rajeswaran": [123, 141], "vikash": [123, 141, 143], "kumar": [123, 141, 143], "chelsea": [123, 141], "finn": [123, 141], "abhinav": [123, 141], "gupta": [123, 141], "2203": [123, 141, 173, 318], "12601": [123, 141, 318], "_init": [123, 141, 310, 318], "snippet": [123, 141, 310], "resnet50": [123, 143, 318], "model_nam": [123, 141, 143, 272], "resnet34": 123, "resnet18": 123, "r3m_vec": [123, 318], "feed": [123, 143, 235, 306, 310, 316, 319], "244": [123, 143, 317], "stack_imag": [123, 143, 318], "tread": [123, 143], "separet": [123, 143], "hub": [123, 143], "resnet50_weight": [123, 143], "imagenet1k_v1": [123, 143], "download_path": [123, 143], "tensor_pixels_kei": [123, 143], "dest": [123, 141, 143, 211], "sub_seq_len": 124, "sample_dim": [124, 310], "primarili": 124, "hesit": 124, "request": 124, "robust": 124, "mix": [124, 185, 194, 248, 310, 316], "NOT": 124, "improp": 124, "create_copi": 125, "renam": [125, 127, 153, 310], "stuff": 125, "newnam": 125, "interpol": [126, 311, 313], "bilinear": [126, 313], "truncated_kei": [127, 133], "r2g": 127, "99": [127, 144, 173, 231, 244, 249, 256, 298, 310, 311, 312, 317, 321], "reward_to_go": 127, "bernoulli_": 127, "9010": 127, "9404": [127, 256], "9701": [127, 256], "9900": [127, 256], "0000": [127, 136, 205, 215, 256, 312, 313, 317, 321], "crash": 127, "clamp_min": 128, "clamp_max": 128, "clip_min": 128, "clip_max": 128, "episode_": 130, "reward1": 130, "reward2": 130, "episode_reward": [130, 316], "5926": 130, "4578": 130, "7885": 130, "keep_reward": 131, "keep_don": 131, "excludetransform": [131, 319], "squeeze_dim": 132, "step_count_kei": 133, "update_don": 133, "adaptec": 133, "accordingli": [133, 134, 209, 313], "completet": 133, "recognis": 133, "accompani": 133, "target_return": 134, "chosen": [134, 135, 185, 186, 194, 210, 295, 306], "conjunct": [134, 311], "hindsight": 134, "relabel": 134, "reward2gotransform": 134, "primer": [135, 313], "default_valu": [135, 313], "unit": [135, 155, 166, 181, 182, 187, 188, 312], "transfomedenv": 135, "mykei": 135, "__unless": 135, "exists__": 135, "dtype_or_devic": 135, "pool": 136, "increas": [136, 207, 316], "10th": 136, "0216": 136, "1149": 136, "1990": 136, "2749": 136, "3281": 136, "9290": 136, "3702": 136, "8978": 136, "from_int": 137, "255": [137, 317, 319], "ri": 137, "principl": 138, "cattransform": 138, "notabl": 138, "rewardsum": [138, 316], "cache_spec": 139, "anymor": [139, 211], "set_missing_toler": 139, "keyerror": 139, "unsqueeze_dim": [140, 317], "danger": 140, "vc1": 141, "vc1_vec": 141, "small": [141, 310, 312, 316, 322], "untrain": 141, "make_noload_model": 141, "naiv": 141, "vip": [142, 143, 318], "toward": 143, "implicit": [143, 233, 319], "jason": 143, "ma": 143, "shagun": 143, "sodhani": 143, "dinesh": 143, "jayaraman": 143, "osbert": 143, "bastani": 143, "ami": 143, "zhang": 143, "vip_vec": 143, "shared_td": 144, "decai": [144, 201, 205, 241, 284, 310, 311, 313, 322], "9999": [144, 317], "0001": [144, 166, 180, 312, 317], "fly": [144, 234, 307, 312, 317, 319, 322], "to_observation_norm": 144, "underflow": [144, 284], "build_td_for_shared_vecnorm": 144, "memmori": 144, "memmap_": 144, "queue": [144, 319], "td_share": 144, "v": [144, 198, 233, 240, 306, 310, 311], "state_dim": [145, 157, 162, 184, 187, 188, 202], "action_dim": [145, 157, 158, 160, 162, 184, 202, 310, 315], "gsde": [145, 238, 302], "func": 145, "gsdemodul": 145, "check_dtyp": 146, "short": [146, 311, 312, 316], "discrep": [146, 221, 223, 224, 225, 234, 237, 239, 248], "imposs": 146, "probabilistictdmodul": [151, 152, 171, 208, 212, 249, 282], "next_tensordict": 153, "keep_oth": [153, 317], "exclude_reward": 153, "exclude_don": 153, "exclude_act": 153, "next_": 153, "funtion": [153, 317], "write_full_fals": 154, "leav": [154, 310], "cross": 155, "entropi": [155, 221, 222, 223, 227, 233, 234, 236, 237, 238, 240, 242, 316], "botev": 155, "et": 155, "2013": 155, "cem": 155, "plan": [155, 172, 173], "varianc": [155, 168, 180, 192, 193, 307, 310, 312, 316], "rank": 155, "k": 155, "repeat": [155, 312, 316, 317], "maximis": [155, 158, 160, 173, 306, 310, 311, 312, 316, 317], "horizon": [155, 173, 312], "modelbasedenv": [155, 173], "planning_horizon": [155, 173], "optim_step": [155, 173], "mpc": [155, 172, 173], "num_candid": [155, 173], "candid": [155, 173], "top_k": [155, 173], "modelbasedenvbas": [155, 172, 173, 304], "safemodul": [155, 172, 198, 200, 212, 221, 222, 227, 233, 237, 238, 239, 240, 242, 291, 292, 298, 304, 321], "next_hidden_observ": 155, "num_cel": [156, 158, 159, 160, 161, 166, 167, 169, 171, 176, 177, 198, 311, 312, 313, 316, 321], "elu": [156, 158, 159, 160, 161, 166, 167, 176, 311, 321], "activation_kwarg": [156, 171], "norm_class": [156, 158, 159, 171], "norm_kwarg": [156, 171], "bias_last_lay": [156, 158, 159, 160, 161, 167, 171], "aggregator_class": [156, 158, 159, 311, 313, 321], "squashdim": [156, 158, 176, 321], "aggregator_kwarg": [156, 158, 159, 311, 313], "squeeze_output": [156, 158, 159, 311, 313], "convolut": [156, 158, 159, 176, 189], "produc": [156, 171, 177, 183, 198, 200, 202, 269, 312, 313, 319, 322], "cell": [156, 171, 176, 177, 312], "kernel": [156, 167, 170, 176], "cnet": 156, "34": [156, 171, 310, 317], "35": [156, 171, 310, 317], "rectangular": 156, "transformer_config": [157, 184, 202], "decisiontransform": [157, 184], "dtconfig": [157, 162, 184], "2202": [157, 162, 184, 236], "05607": [157, 162, 184, 236], "return_to_go": [157, 162, 184, 202], "conv_net_kwarg": [158, 159], "mlp_net_kwarg": [158, 159, 160], "use_avg_pool": [158, 159], "WITH": [158, 159, 160, 161, 207, 241], "1509": [158, 159, 160, 161, 173, 207, 232, 241, 317], "02971": [158, 159, 160, 161, 207, 241], "convnet": [158, 176, 313, 321], "ndims_in": 158, "avgpool": [158, 159], "adaptiveavgpool2d": [159, 311, 313], "400": [160, 161, 312, 316, 317, 319], "mlp_net_kwargs_net1": 161, "mlp_net_kwargs_net2": 161, "decion": 162, "desdescrib": 162, "n_embd": 162, "n_layer": 162, "n_head": 162, "n_inner": 162, "n_posit": 162, "resid_pdrop": 162, "attn_pdrop": 162, "gpt2config": 162, "atol": [163, 191], "06": [163, 191, 310, 317], "rtol": [163, 191], "batch_shap": [163, 191], "event_shap": [163, 191], "absolut": [163, 191, 310], "densiti": [163, 174, 175, 183, 193], "mass": [163, 174, 175, 183, 193, 317], "rsampl": [163, 175, 183, 212], "sample_shap": [163, 174, 175, 183], "dqnet": 164, "atom": 164, "softmax": [164, 175, 183, 203, 204], "action_spac": [165, 186, 203, 204, 209, 210, 221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 313], "var_num": [165, 186, 203, 204, 210], "action_value_kei": [165, 186, 203, 204, 209, 210, 235, 248], "action_mask_kei": [165, 186, 203, 204, 205, 209, 210], "perspect": [165, 204, 228, 312], "1707": [165, 204, 228, 237], "06887": [165, 204, 228], "mult": [165, 177, 186, 203, 204, 209, 210], "functional_modul": [165, 186, 209, 211, 214, 306], "make_funct": [165, 186, 208, 209, 211, 214, 216, 235, 306, 321], "tensordict_modul": [165, 186, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 224, 227, 233, 237, 238, 239, 240, 242, 306], "nbin": [165, 203, 306], "customdistributionalqv": 165, "log_softmax": [165, 203], "one_hot": [165, 175, 186], "qvalue_actor": [165, 186, 203, 209, 306], "std_bia": 166, "std_min_val": 166, "belief": [166, 181, 187, 188], "1912": [166, 229, 230, 231], "01603": [166, 229, 230, 231], "softplu": [166, 180, 218, 219, 220], "out_features_valu": 167, "cnn_kwarg": [167, 311], "mlp_kwarg": [167, 170, 311], "duel": 167, "cnn": [167, 176, 311, 321], "06581": 167, "512": [167, 317, 319], "upscal": [168, 192, 193], "tanh_loc": [168, 192, 193], "event_dim": [168, 191, 192], "ultim": [168, 192, 193], "poor": [168, 192, 193], "explos": [168, 192, 193], "switch": [168, 193], "sigma": [168, 184, 192, 193, 201, 207, 312], "formula": [168, 192, 193, 221, 223, 234, 237, 307, 312], "embedd": [169, 170], "lstmcell": 169, "trust": 169, "correspont": 169, "input_s": [169, 170, 313], "hidden_s": [169, 170, 313], "num_lay": [169, 181, 182], "b_ih": 169, "b_hh": 169, "introduc": [169, 207, 310], "proj_siz": 169, "recurrent_state_h": [169, 313], "recurrent_state_c": [169, 313], "triplet": [169, 209, 210], "custom_kei": 169, "temporal_mod": 169, "set_temporal_mod": 169, "seq": [169, 313, 315], "lstm_modul": 169, "rs_h": 169, "rs_c": 169, "set_recurrent_mod": [169, 313], "batch_first": [169, 313], "hidden0": 169, "hidden1": 169, "policy_infer": 169, "policy_train": 169, "traj_td": 169, "td_inf": 169, "assert_clos": 169, "lstm_kwarg": 170, "next_observ": [170, 221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 315], "time_step": 170, "2d": [170, 316], "hidden0_in": 170, "hidden1_in": 170, "hidden0_out": 170, "hidden1_out": 170, "single_bias_last_lay": 171, "layer_class": 171, "layer_kwarg": 171, "perceptron": 171, "seamless": 171, "lazylinear": [171, 306, 312, 317, 318, 321], "42": [171, 221, 222, 224, 233, 240, 310, 317, 319], "noisylinear": [171, 178, 304, 311], "noisylazylinear": [171, 304], "At": [172, 205, 311, 312, 313, 315, 317, 318], "mpcplanner": 172, "tensordict_out": [172, 322], "mppi": 173, "covari": 173, "william": [173, 239], "aldrich": 173, "theodor": 173, "01149": 173, "hansen": 173, "wang": 173, "su": 173, "04955": 173, "valueoper": [173, 198, 199, 200, 221, 222, 223, 224, 227, 233, 234, 237, 238, 239, 240, 242, 298, 306, 310, 312], "tdlambdaestim": [173, 304, 310], "value_net": [173, 225, 239, 250, 251, 252, 253, 312], "adv": 173, "lmbda": [173, 244, 250, 253, 255, 261, 262, 263, 266, 267, 307, 310, 312, 316], "95": [173, 244, 312, 313, 317], "value_network": [173, 224, 225, 228, 233, 240, 250, 251, 252, 253, 307, 310, 312], "temperatur": [173, 222, 233], "neg_inf": [174, 175], "inf": [174, 175], "padding_valu": [174, 175], "www": [174, 175], "api_doc": [174, 175], "tf_agent": [174, 175], "event": [174, 175, 183, 259, 260, 261, 262, 264, 265, 266, 267, 319], "unnorm": [174, 175, 183], "sparse_mask": [174, 175], "dens": [174, 175], "0831": [174, 175], "1203": [174, 175, 322], "0928": [174, 175], "1972": [174, 175], "grad_method": [175, 183], "reparamgradientstrategi": [175, 183], "passthrough": [175, 183], "proxi": [175, 183, 307], "relaxedonehot": [175, 183], "zeros_lik": [175, 317], "sample_non_valid": 175, "centralis": [176, 177, 316], "share_param": [176, 177, 316], "basi": [176, 319], "homogen": [176, 177, 316], "agent_network": [176, 177], "modulelist": [176, 177, 295, 321], "lazyconv2d": [176, 321], "2592": 176, "decentralis": [176, 316], "28": [176, 310, 317], "n_agent_input": [177, 316], "n_agent_output": [177, 316], "toech": 177, "centalis": 177, "shown": [177, 306, 315, 316, 319], "std_init": [178, 179], "matrix": [178, 179], "initialize_paramet": 178, "isol": 178, "1706": [179, 194], "10295v3": 179, "induc": 179, "aid": 179, "scale_map": 180, "biased_softplus_1": 180, "scale_lb": [180, 187, 188], "exp": [180, 220], "module_norm": 180, "decod": 181, "1803": [181, 182, 185], "10122": [181, 182], "els": [181, 306, 308, 310, 311, 312, 313, 316, 317, 318], "rnn_hidden": 181, "latent": 182, "excacli": 183, "inres": 184, "mu": [184, 207, 312], "state_shap": [185, 248], "mixing_embed_dim": [185, 248], "qmix": [185, 316], "mixer": [185, 194, 248], "monoton": 185, "hyper": 185, "11485": 185, "qmixerloss": [185, 194], "qmix_vdn": [185, 194], "eventu": [185, 313, 317], "vdn": [185, 194], "greedi": [186, 204, 205, 210, 311, 313], "hidden_dim": [187, 188], "posterior": [187, 230], "rssm": [187, 188, 230], "1811": [187, 188], "04551": [187, 188], "obs_embed": 187, "rnn_hidden_dim": 188, "dream": 188, "tanhtransform": 192, "decomposit": 194, "05296": 194, "vmap": [195, 211, 214, 321], "hide": [195, 312, 316], "satisfi": [195, 306], "tensordictmodulebas": [195, 203, 209, 313], "vmap_dim": 195, "lam": 195, "sample_in": 195, "sample_in_td": 195, "vm": 195, "translat": [197, 208], "character": [197, 203, 208, 209, 211, 319], "overflow": [197, 203, 204, 208, 209, 210, 211, 212], "td_modul": [197, 198, 199, 200, 208, 211, 212, 214, 216, 321], "3635": 197, "0340": 197, "1476": 197, "3911": [197, 317], "1664": [197, 317], "5455": 197, "2247": 197, "4583": 197, "2916": 197, "2160": 197, "5337": 197, "5193": 197, "grad_fn": [197, 205, 321], "addmmbackward0": 197, "actorvalueoper": [198, 306], "get_policy_oper": [198, 199, 200, 223, 234, 237, 306], "standalon": [198, 199, 200], "tdmodul": [198, 199, 200, 298], "get_critic_oper": 198, "common_oper": [198, 200], "policy_oper": [198, 199, 200], "value_oper": [198, 199, 200], "normalparamwrapp": [198, 199, 200, 208, 214, 221, 222, 227, 233, 237, 238, 239, 240, 242, 304, 321], "module_hidden": [198, 200], "td_module_hidden": [198, 200], "module_act": [198, 200], "td_module_act": [198, 199, 200], "module_valu": [198, 199, 200], "td_module_valu": [198, 199, 200], "state_action_valu": [198, 216, 222, 240, 249, 295, 298, 306, 310, 321], "td_clone": [198, 199, 200], "tensordictmodulewrapp": [198, 291, 292, 298], "get_policy_head": [198, 199, 200], "safesequenti": [198, 199, 200, 248], "head": [198, 200, 223, 234, 237], "get_value_head": [198, 199, 200], "get_value_oper": [198, 199, 200, 223, 234, 237], "action_modul": 199, "state_valu": [199, 200, 216, 223, 234, 237, 238, 240, 250, 251, 252, 253, 255, 257, 259, 261, 263, 264, 266, 306, 310, 312, 316], "qualiti": [200, 306], "actorcriticoper": [200, 223, 234, 237, 306], "embeddig": 200, "refet": 200, "actorcriticwrapp": [200, 306, 310], "po": 201, "sigma_init": 201, "epsilon": [201, 205, 207, 241, 284, 311, 312, 313], "sigma_end": 201, "annealing_num_step": [201, 205, 207, 310, 311, 313], "captur": [201, 205, 207], "omiss": [201, 205, 207], "ommit": [201, 205, 207, 319], "inferec": 202, "set_tensor_kei": 202, "dt_inference_wrapp": 202, "baz": 202, "inference_context": 202, "obs_dim": 202, "tanhdelta": [202, 304, 310], "dtactor": 202, "actor_modul": [202, 321], "dist_class": 202, "dist_kwarg": 202, "distribution_kwarg": [202, 208, 212, 312, 316], "inference_actor": 202, "sequence_length": 202, "mask_context": 202, "qvaluemodul": [203, 209, 248, 313], "distributionaldqnnet": 203, "make_log_softmax": 203, "my_action_valu": [204, 210], "chanc": 204, "thid": 204, "threshold": [205, 222, 223, 312], "eps_init": [205, 207, 311, 313], "eps_end": [205, 207, 311], "explorative_polici": [205, 207], "9055": [205, 317], "9277": 205, "6295": 205, "2532": 205, "addbackward0": 205, "lmheadmodel": 206, "extract": [206, 310, 312], "actor_head": [206, 223, 234, 237], "base_model": 206, "lm_head": 206, "ornstein": 207, "uhlenbeck": 207, "ou": [207, 310], "correl": 207, "sort": 207, "noise_t": 207, "noise_": 207, "theta": [207, 312, 317], "sigma_t": 207, "sqrt": 207, "sigma_": 207, "anneal": 207, "ou_prev_nois": 207, "ou_step": 207, "x0": 207, "sigma_min": 207, "n_steps_ann": 207, "is_init_kei": 207, "_ou_prev_nois": 207, "_ou_step": 207, "default_interaction_typ": [208, 212], "interaction_typ": [208, 212], "set_interaction_typ": [208, 212], "cache_dist": [208, 212], "n_empirical_estim": [208, 212], "chose": 210, "functionalmodul": 211, "functionalmodulewithbuff": 211, "grucel": 211, "td_fmodul": 211, "td_function": 211, "td_state": 211, "ensembl": [211, 238], "params_repeat": 211, "td_vmap": [211, 214], "random_sampl": [211, 212], "suppli": 212, "fist": 212, "log_prob_kei": [212, 316], "probabilistictensordictsequenti": [213, 221, 223, 234, 237, 239, 291, 292, 321], "partial_toler": [213, 214, 315], "who": [213, 214], "AND": [213, 214], "tensordictsequenci": 214, "tensordictsequ": 214, "safeprobabilisticmodul": [214, 306], "spec1": 214, "net1": 214, "module1": 214, "td_module1": 214, "spec2": 214, "module2": 214, "td_module2": 214, "clamp": [215, 230, 286, 317], "boundari": [215, 312, 316], "resolut": 215, "simplest": [215, 310, 312, 313, 316, 319, 322], "9944": 215, "9991": 215, "3020": 215, "2299": [215, 317], "5418": 215, "2989": 215, "6849": 215, "3169": 215, "2690": 215, "9649": [215, 317], "5686": 215, "8602": 215, "0315": 215, "8455": [215, 317], "6027": 215, "4746": 215, "7843": 215, "7782": 215, "2111": 215, "5115": 215, "4687": 215, "5760": 215, "custommodul": 216, "cat": [216, 222, 224, 233, 238, 240, 242, 321], "imaginari": 217, "imagin": 217, "transition_model": 217, "get_reward_oper": 217, "get_transition_model_oper": 217, "min_val": [218, 220], "bias": [218, 307, 310], "_bia": 218, "invert": [219, 312], "surject": 220, "expln": 220, "biased_softplu": [220, 304], "beggin": 220, "biased_softplus_": 220, "syntax": [220, 310], "met": [220, 317], "1602": 221, "01783v2": 221, "entropy_bonu": [221, 223, 234, 237, 312], "favour": [221, 223, 234, 237], "samples_mc_entropi": [221, 223, 234, 236, 237], "mont": [221, 223, 234, 237, 310], "carlo": [221, 223, 234, 237, 310], "entropy_coef": [221, 223, 234, 237, 312, 316], "critic_coef": [221, 223, 234, 237, 312], "loss_critic_typ": [221, 223, 234, 237, 239, 312], "l1": [221, 223, 224, 225, 227, 234, 237, 238, 239, 242, 245, 248, 306, 310], "l2": [221, 223, 224, 225, 226, 227, 230, 231, 234, 237, 238, 239, 242, 245, 248, 310], "smooth_l1": [221, 222, 223, 224, 225, 227, 233, 234, 237, 238, 239, 240, 242, 245, 248, 312], "separate_loss": [221, 223, 224, 227, 233, 234, 237, 238, 239, 240, 242], "propag": [221, 223, 224, 227, 233, 234, 237, 238, 239, 240, 242, 250, 251, 252, 253, 312, 316], "advantage_kei": [221, 223, 234, 237, 239, 250, 251, 252, 253], "value_target_kei": [221, 223, 234, 237, 239, 250, 251, 252, 253, 312], "value_target": [221, 223, 234, 237, 239, 250, 251, 252, 253, 312, 316], "loss_crit": [221, 237, 312, 316], "loss_entropi": [221, 237, 312, 316], "loss_object": [221, 237, 312, 316], "recur": [221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 250, 251, 252, 253, 254], "next_reward": [221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 250, 251, 252, 253], "next_don": [221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 250, 251, 252, 253], "next_termin": [221, 222, 224, 225, 227, 233, 237, 238, 239, 240, 242, 250, 251, 252, 253], "loss_obj": 221, "sacloss": [221, 232, 241, 304], "select_out_kei": [221, 222, 224, 227, 233, 237, 238, 240, 242], "essenti": [221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 242, 248, 311, 317, 319], "make_value_estim": [221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 243, 248, 307, 310, 311, 316], "value_typ": [221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 244, 248, 310], "valueestim": [221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 244, 248, 304, 307, 310, 316], "hyperparam": [221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 310, 317], "enum": [221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 244, 248, 310], "default_value_estim": [221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 310], "refin": [221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248], "default_value_kwarg": [221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 248, 304, 310], "dqnloss": [221, 222, 224, 227, 228, 229, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 248, 293, 304, 307, 311, 313], "dqn_loss": [221, 222, 224, 225, 227, 228, 229, 233, 235, 237, 238, 239, 240, 242, 243, 248], "conserv": 222, "2006": [222, 317], "04779": 222, "actor_network": [222, 224, 226, 227, 233, 236, 238, 240, 242, 310], "qvalue_network": [222, 227, 233, 238, 240, 242], "loss_funct": [222, 224, 225, 226, 227, 233, 238, 240, 242, 245, 248, 310], "alpha_init": [222, 227, 236, 238, 240], "min_alpha": [222, 227, 236, 238, 240], "max_alpha": [222, 227, 236, 238, 240], "fixed_alpha": [222, 227, 236, 238, 240], "target_entropi": [222, 227, 236, 238, 240], "prod": [222, 236, 240], "n_action": [222, 225, 236, 240], "delay_actor": [222, 224, 240, 242], "delay_qvalu": [222, 227, 238, 240, 242], "min_q_weight": 222, "max_q_backup": 222, "backup": 222, "deterministic_backup": 222, "num_random": 222, "with_lagrang": 222, "lagrang": 222, "lagrange_thresh": 222, "valueclass": [222, 224, 227, 233, 238, 240, 242], "qvalu": [222, 227, 233, 238, 240, 242, 295], "loss_actor": [222, 224, 227, 233, 238, 239, 240, 242, 281, 310, 321], "loss_alpha": [222, 227, 238, 240], "loss_alpha_prim": 222, "loss_qvalu": [222, 227, 233, 238, 240, 242], "clip_epsilon": [223, 312, 316], "normalize_advantag": [223, 234, 237, 316], "value_kei": [223, 234, 237, 250, 251, 252, 253, 310], "somemodul": [223, 234, 237], "someactor": [223, 234, 237], "value_head": [223, 234, 237], "somevalu": [223, 234, 237], "loss_modul": [223, 232, 234, 235, 237, 241, 286, 297, 298, 307, 308, 310, 311, 312, 316, 319], "ppoloss": [223, 234, 304], "delay_valu": [224, 225, 228, 239, 240, 248, 311, 313], "loss_valu": [224, 233, 239, 240, 310, 312, 316, 321], "pred_valu": [224, 242, 310, 321], "pred_value_max": [224, 310, 321], "target_valu": [224, 238, 242, 249, 307, 310, 321], "target_value_max": [224, 310, 321], "qvalueactor": [225, 248, 306, 311, 313], "mult_one_hot": [225, 227, 248], "loss_val": [225, 307, 310, 312, 313, 316, 319], "2106": 226, "01345": 226, "ste": 227, "num_qvalue_net": [227, 233, 238, 240, 242], "target_entropy_weight": 227, "onehotcategor": [227, 304], "disctount": 228, "distributionalqvalueactor": [228, 306], "input_tensordict": [228, 310], "actor_model": 229, "value_model": [229, 231], "model_based_env": 229, "dreamerenv": [229, 304], "imagination_horizon": 229, "unrol": [229, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267], "discount_loss": [229, 231], "lambda_kl": 230, "lambda_reco": 230, "lambda_reward": 230, "reco_loss": 230, "reward_loss": 230, "free_nat": 230, "nat": 230, "delayed_clamp": 230, "global_averag": 230, "value_loss": 231, "fake_data": 231, "ddpgloss": [232, 241, 298, 304, 310, 321], "td3loss": [232, 241, 304], "value_network_update_interv": 232, "contrast": [232, 319], "06461": 232, "2110": 233, "06169": 233, "expectil": 233, "tau": [233, 241, 310, 311], "antmaz": 233, "sticht": 233, "loss_value_diff": 233, "diff": 233, "old_polici": 234, "new_polici": 234, "distanc": [234, 245, 249, 250, 316], "apart": [234, 316], "dtarg": 234, "samples_mc_kl": 234, "analyt": 234, "decrement": 234, "loss_": [235, 281, 307, 310], "equip": [235, 313], "gh": 235, "_acceptedkei": 235, "dataclass": [235, 295], "_forward_value_estimator_kei": 235, "alter": [235, 306], "value_estim": [235, 250, 251, 252, 253, 254, 307, 310, 316], "myloss": 235, "action2": 235, "convert_to_funct": [235, 310], "expand_dim": 235, "create_target_param": [235, 310], "compare_against": [235, 310], "funs_to_decor": 235, "stuctur": 235, "_param": 235, "expans": 235, "resampl": 235, "_target_param": 235, "valueestimatorbas": [235, 304], "blend": 235, "upcom": [235, 259, 260, 261, 262, 264, 265, 266, 267, 310], "proxim": [237, 312, 316], "optimis": [237, 282, 312, 316], "flavour": [237, 316, 321], "clipppoloss": [237, 304, 312, 316], "klpenppoloss": [237, 304], "regularis": 237, "06347": 237, "gae": [237, 304, 307, 310, 312, 316], "ppo_loss": 237, "tdlambda": [237, 244, 307, 310], "base_lay": 237, "randn_lik": 237, "samplelogprob": 237, "openreview": [238, 295], "ay8zfzm0tdd": [238, 295], "sub_sample_len": 238, "subsampl": [238, 277, 308], "action_log_prob_actor": 238, "state_action_value_actor": [238, 242], "connectionist": 239, "1992": 239, "doi": 239, "1007": 239, "bf00992696": 239, "actor_net": [239, 310, 312], "1801": 240, "01290": 240, "applic": [240, 248, 317], "1812": 240, "05905": 240, "redqloss": [241, 304], "math": 241, "theta_t": [241, 317], "theta_": [241, 317], "polyak": 241, "policy_nois": 242, "noise_clip": 242, "next_state_valu": [242, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 304], "td0": [243, 310], "strict_shap": 245, "view_a": 245, "qmixer": [248, 304], "local_valu": 248, "visibl": [248, 316], "dafault": 248, "acceptedkei": 248, "global_valu": 248, "penultim": 248, "local_value_network": 248, "mixer_network": 248, "suggest": [248, 316], "value_modul": [248, 312, 321], "qnet": [248, 310], "next_val_kei": 249, "pred_next_v": 249, "usus": 249, "mse": 249, "q_valu": 249, "n_steps_to_next": 249, "value_next_st": 249, "1506": [250, 255, 263], "02438": [250, 255, 263], "exponenti": [250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 284], "average_ga": [250, 312], "skip_exist": [250, 251, 252, 253], "advang": 250, "gradient_mod": 250, "value_error": [250, 251, 252, 253, 254], "sign": 250, "unused_arg": 250, "target_param": [250, 251, 252, 253, 254, 310, 316], "98": [250, 251, 252, 253, 310, 317], "94": [250, 253, 316, 317, 319], "unpack": [250, 251, 252, 253], "tensor_kei": [250, 251, 252, 253, 254], "next_valu": [250, 251, 252, 253, 254], "aka": [251, 311], "average_reward": [251, 252, 253], "tdestim": [251, 252, 254], "infti": 252, "valuefunctionbas": 254, "time_dim": [255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267], "old_stat": [255, 257, 259, 261, 263, 264, 266], "new_stat": [255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "did": [256, 311, 312, 319, 322], "rolling_gamma": [259, 260, 261, 262, 264, 265, 266, 267], "g1": [259, 260, 261, 262, 264, 265, 266, 267], "g2": [259, 260, 261, 262, 264, 265, 266, 267], "g3": [259, 260, 261, 262, 264, 265, 266, 267], "g4": [259, 260, 261, 262, 264, 265, 266, 267], "v3": [259, 260, 261, 262, 264, 265, 266, 267], "v4": [259, 260, 261, 262, 264, 265, 266, 267, 310, 312, 318], "out_file_bas": 268, "skip_reset": 268, "dump": 268, "interv": [268, 269, 278, 288, 311, 317], "center_crop": 269, "make_grid": 269, "Will": 269, "grid": 269, "exp_nam": [270, 271, 274, 275, 276, 298, 311], "log_dir": [270, 271, 273, 275, 311], "templat": 270, "csv": [271, 273, 311], "minim": [271, 319], "dependeci": 271, "experiment_nam": [272, 273], "uuid": [272, 311, 322], "date": 272, "logger_typ": 273, "logger_nam": 273, "tensorboard": [273, 275, 321], "wandb": [273, 276, 321], "mlflow": [273, 274], "wandb_kwarg": 273, "mlflow_kwarg": 273, "tracking_uri": 274, "uri": 274, "datastor": 274, "tb_log": 275, "tensoarboard": 275, "sub_traj_len": 277, "min_sub_traj_len": 277, "register_op": [277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 308, 311], "process_optim_batch": [277, 283, 284, 308], "td_out": [277, 285], "_process_optim_batch_hook": [277, 308], "batch_subsampl": 277, "clear_cuda": 278, "pre_optim_step": [278, 308], "counter": [279, 308], "log_pbar": [279, 280, 282, 284, 308, 311], "progress": [279, 280, 282, 286, 308, 311, 313, 322], "count_fram": 279, "pre_steps_log": [279, 280, 308], "count_frames_log": 279, "lognam": 280, "r_train": 280, "log_reward": [280, 311], "loss_compon": 281, "appl": 281, "omit": [281, 312, 317, 319], "optimizer_hook": 281, "record_interv": [282, 310, 311], "record_fram": [282, 289, 310, 311], "policy_explor": [282, 298, 310, 311], "log_kei": [282, 311], "suffix": 282, "underestim": 282, "suppos": [282, 308, 322], "set_exploration_typ": [282, 304, 312, 313, 321], "r_evalu": [282, 310], "flatten_tensordict": [283, 311], "max_dim": 283, "rb_trainer": 283, "batch_process": [283, 284, 285, 308], "post_loss": [283, 308], "999": [284, 311], "jitter": 284, "finfo": 284, "default_dtyp": 284, "get_default_dtyp": 284, "reward_norm": 284, "update_reward_stat": 284, "normalize_reward": 284, "make_train": [285, 304], "_process_batch_hook": [285, 308], "select_kei": [285, 308], "versatil": 286, "lossmodul": [286, 297, 298, 304], "optim_steps_per_batch": [286, 308, 311], "epoch": [286, 312, 316], "clip_grad_norm": 286, "clip_norm": 286, "progress_bar": 286, "tqdm": [286, 310, 312, 313, 316, 317], "save_trainer_interv": 286, "disk": [286, 308, 310, 311, 313, 319], "log_interv": [286, 311], "save_trainer_fil": [286, 308], "datacollectorbas": [288, 291, 292, 298, 304], "update_weights_interv": [288, 311], "sit": [288, 311], "update_weight": 288, "post_step": [288, 308], "cfg": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302], "dictconfig": [289, 290, 291, 292, 295, 296, 297, 298, 299, 302], "divid": [289, 306, 310, 316, 317], "unknowingli": 289, "annealing_fram": [289, 310], "init_env_step": [289, 290, 310], "proof_environ": [290, 295, 310], "sta": 290, "ot": 290, "actor_model_explor": [291, 292, 310], "make_env_kwarg": [291, 292], "targetnetupdat": [293, 294, 297, 298], "redqloss_deprec": 294, "actor_net_kwarg": 295, "qvalue_net_kwarg": 295, "observation_kei": 295, "dummi": [295, 310, 322], "parser_env_arg": 295, "parser_model_args_continu": 295, "cattensor": [295, 310, 315, 317, 322], "hydra": 295, "config_stor": 295, "configstor": 295, "halfcheetah": [295, 310], "config_field": 295, "config_cl": 295, "redqmodelconfig": 295, "envconfig": 295, "make_dataclass": 295, "cls_name": 295, "cs": 295, "config_path": 295, "config_nam": 295, "17": [295, 310, 312, 317], "replayargsconfig": 296, "target_net_updat": [298, 310, 311], "constitu": 298, "learnt": [298, 310, 312], "tensorboardlogg": [298, 304], "egreedywrapp": [298, 311, 313], "env_proof": 298, "obs_spec": 298, "net_valu": 298, "dir": [298, 308, 311], "gettempdir": 298, "argpars": [299, 302], "namespac": [299, 302], "parser": [299, 302], "transformed_env_constructor": [299, 304], "num_env_per_collector": [300, 301], "video_tag": 302, "norm_obs_onli": 302, "use_env_cr": 302, "custom_env_mak": 302, "custom_env": 302, "return_transformed_env": 302, "action_dim_gsd": 302, "state_dim_gsd": 302, "obs_norm_state_dict": 302, "wheter": 302, "maker": 302, "asyncdatacollector": 304, "distributedsyncdatacollector": 304, "submitit_delayed_launch": 304, "raycollector": 304, "samplerwithoutreplac": [304, 312, 316, 319], "tensorstorag": 304, "tensordictroundrobinwrit": 304, "d4rlexperiencereplai": 304, "openmlexperiencereplai": 304, "unboundeddiscretetensorspec": [304, 322], "lazystackedtensorspec": 304, "lazystackedcompositespec": 304, "prompttensordicttoken": 304, "rolloutfrommodel": 304, "tokenizeddatasetload": 304, "create_infinite_iter": 304, "consolidate_spec": 304, "check_no_exclusive_kei": 304, "contains_lazy_spec": 304, "check_marl_group": 304, "tensordictrecord": 304, "videorecord": [304, 312], "get_available_librari": 304, "set_exploration_mod": 304, "make_composite_from_td": [304, 317], "terminated_or_trunc": 304, "braxwrapp": 304, "dmcontrolenv": [304, 310, 315, 322], "dmcontrolwrapp": [304, 322], "jumanjienv": 304, "jumanjiwrapp": 304, "multithreadedenvwrapp": 304, "openmlenv": 304, "pettingzooenv": 304, "pettingzoowrapp": 304, "robohiveenv": 304, "smacv2env": 304, "smacv2wrapp": 304, "vmaswrapp": 304, "qvaluehook": 304, "distributionalqvaluehook": 304, "reset_nois": 304, "cemplann": 304, "mpcplannerbas": 304, "mppiplann": 304, "independentnorm": 304, "truncatednorm": 304, "maskedonehotcategor": 304, "inv_softplu": 304, "vmapmodul": 304, "distributionaldqnloss": [304, 311], "discretesacloss": 304, "iqlloss": 304, "cqlloss": 304, "dtloss": 304, "onlinedtloss": 304, "a2closs": 304, "reinforceloss": 304, "dreameractorloss": 304, "dreamermodelloss": 304, "dreamervalueloss": 304, "td0estim": [304, 310], "td1estim": [304, 310], "td0_return_estim": 304, "td0_advantage_estim": 304, "td1_return_estim": 304, "vec_td1_return_estim": 304, "td1_advantage_estim": 304, "vec_td1_advantage_estim": 304, "td_lambda_return_estim": 304, "vec_td_lambda_return_estim": 304, "td_lambda_advantage_estim": 304, "vec_td_lambda_advantage_estim": 304, "generalized_advantage_estim": 304, "vec_generalized_advantage_estim": 304, "reward2go": 304, "distance_loss": [304, 310], "hold_out_net": 304, "hold_out_param": [304, 310], "softupd": [304, 310, 311, 313], "hardupd": [304, 310], "batchsubsampl": [304, 308], "clearcudacach": 304, "countframeslog": 304, "logreward": [304, 308, 311], "optimizerhook": [304, 311], "replaybuffertrain": [304, 308, 311], "rewardnorm": 304, "selectkei": [304, 308], "trainerhookbas": [304, 308, 311], "updateweight": [304, 308, 311], "make_collector_offpolici": 304, "make_collector_onpolici": 304, "make_dqn_loss": 304, "make_redq_loss": 304, "make_redq_model": 304, "make_replay_buff": [304, 310], "make_target_updat": 304, "parallel_env_constructor": [304, 310], "sync_async_collector": 304, "sync_sync_collector": 304, "correct_for_frame_skip": 304, "get_stats_random_rollout": 304, "csvlogger": [304, 311], "mlflowlogg": 304, "wandblogg": 304, "get_logg": 304, "generate_exp_nam": 304, "journei": 305, "textbook": 305, "highlight": 305, "ever": [305, 316], "bump": 305, "think": [305, 312, 316, 322], "benefit": [305, 316, 319], "pr": 305, "ground": [306, 310, 317], "categori": [306, 308], "recycl": [306, 319], "impos": 306, "violat": 306, "noisier": 306, "Their": [306, 316], "sd": 306, "prob_modul": 306, "pick": [306, 310, 311], "tabl": [306, 311], "customari": 306, "hopefulli": [306, 311], "mathbb": [306, 311], "rightarrow": [306, 311], "soften": 306, "backbon": [306, 313, 315, 321], "make_actor": 306, "make_valu": 306, "shared_param": 306, "make_common": 306, "reusabl": [307, 310, 319], "swappabl": [307, 310], "characterist": [307, 310, 317], "trainabl": [307, 310, 318], "whatev": [307, 310], "convent": [307, 310, 313, 316, 317], "smth": [307, 310], "metric": [307, 310], "nutshel": [307, 310], "barto": [307, 316], "chapter": 307, "significantli": [307, 310, 311, 316], "next_stat": 307, "value_net_loss": 307, "pow": [307, 310], "therebi": 307, "room": 307, "convers": 307, "signifi": [307, 316], "underperform": 307, "thin": 307, "intric": 307, "believ": 308, "scheme": [308, 322], "substenti": 308, "_pre_steps_log_hook": 308, "_pre_optim_hook": 308, "sub_batch": 308, "_post_loss_hook": 308, "_post_optim_hook": 308, "post_optim": [308, 311], "_post_optim_log": 308, "post_optim_log": 308, "_post_steps_hook": 308, "_post_steps_log_hook": 308, "post_steps_log": 308, "comment": [308, 311, 321], "extens": [308, 319], "reserv": 308, "logginghook": 308, "logging_hook": 308, "save_dict": 308, "some_valu": 308, "torchsnapshot": 308, "ckpt_backend": 308, "pt": 308, "filepath": 308, "save_train": 308, "load_from_fil": 308, "perfectli": [308, 310, 317], "intern": 309, "author": [310, 311, 312, 313, 316, 317, 319], "vincent": [310, 311, 312, 313, 317, 319], "moen": [310, 311, 312, 313, 317, 319], "assembl": 310, "focus": 310, "straightforward": [310, 311, 319], "overview": [310, 312, 316, 321], "transpar": [310, 313], "understood": 310, "sota": [310, 311, 321], "illustr": [310, 311, 319], "device_count": [310, 311, 313, 318, 322], "loss_dict": 310, "modal": 310, "oblivi": [310, 312, 319], "elementari": 310, "didact": 310, "dilut": 310, "pessimist": [310, 311, 312], "target_actor_network_param": 310, "actor_in_kei": 310, "actor_crit": 310, "noth": [310, 312], "compromis": 310, "hp": 310, "hasattr": 310, "_value_estim": 310, "elif": [310, 311], "notimplementederror": 310, "unknown": 310, "_loss_actor": 310, "td_copi": 310, "actor_network_param": 310, "value_network_param": 310, "_loss_valu": 310, "pred_val": 310, "target_value_network_param": 310, "smooth": [310, 311], "loss_funt": 310, "glue": 310, "_forward": 310, "ndimens": 310, "remaind": 310, "focu": [310, 311, 312], "pixels_onli": [310, 311, 321, 322], "env_librari": 310, "env_task": 310, "env_arg": 310, "friendli": 310, "torchr": 310, "rescal": 310, "presum": 310, "make_transformed_env": 310, "reward_sc": 310, "double_to_float_list": 310, "double_to_float_inv_list": 310, "marker": 310, "env_per_collector": 310, "transform_state_dict": 310, "make_t_env": 310, "adjust": [310, 316, 317], "seem": [310, 313], "cheat": 310, "10m": 310, "cautiou": 310, "deal": [310, 312, 316, 319], "magnitud": 310, "thousand": [310, 313], "get_env_stat": 310, "proof_env": 310, "5000": [310, 312], "maxim": [310, 317], "recal": [310, 312], "ddpgmlpactor": 310, "ddpgmlpqnet": 310, "materi": 310, "ornsteinuhlenbeckprocesswrapp": 310, "make_ddpg_actor": 310, "q_net": 310, "moduless": 310, "sugges": 310, "1_000_000": [310, 313], "tight": 310, "10_000": [310, 312, 319], "traj_len": [310, 313], "make_record": 310, "recorder_obj": 310, "flavor": 310, "circular": 310, "buffer_s": [310, 311], "random_crop_len": 310, "prb": 310, "buffer_scratch_dir": 310, "temporari": 310, "dirrectori": 310, "trajecotri": 310, "25": [310, 313, 317], "sampel": 310, "dataflow": 310, "ceil_div": 310, "utd": [310, 313], "update_to_data": 310, "realiz": 310, "_must_": 310, "001": [310, 317], "outdat": 310, "trick": [310, 311], "despit": 310, "adam": [310, 311, 312, 313, 316, 317], "optimizer_actor": 310, "lr": [310, 311, 312, 313, 316, 317], "weight_decai": [310, 311], "optimizer_valu": 310, "total_collection_step": 310, "pretti": [310, 319], "rewards_ev": 310, "collected_fram": [310, 311], "pbar": [310, 312, 313, 316, 317], "r0": 310, "numel": [310, 312, 313, 318, 319], "current_fram": 310, "sampled_tensordict": 310, "gn1": 310, "clip_grad_norm_": [310, 312, 316, 317], "gn2": 310, "gn": [310, 317], "td_record": 310, "rn": 310, "rs": 310, "set_descript": [310, 312, 313, 316, 317], "2f": 310, "00": [310, 312, 313, 316, 317, 320], "800": 310, "2246": 310, "21it": 310, "1600": 310, "09": [310, 317], "853": 310, "89it": 310, "2400": 310, "05": [310, 312, 317], "1313": 310, "02it": 310, "40": [310, 312, 316, 317, 318], "4000": [310, 312], "02": [310, 311, 312, 313, 317, 320], "98it": [310, 313], "48": [310, 312, 317], "4800": [310, 317], "2905": 310, "00it": 310, "56": [310, 317], "5600": 310, "3239": 310, "34it": 310, "31": [310, 312, 316, 317, 319], "37": [310, 313, 317], "134": [310, 317, 319], "89": [310, 317], "535": [310, 317], "6400": [310, 321], "950": 310, "32it": 310, "19": [310, 312, 313, 317, 319], "103": [310, 317, 319], "60": [310, 312, 316, 317, 321], "328": [310, 317], "36": [310, 313, 317, 320, 322], "72": [310, 317], "7200": 310, "642": 310, "52it": [310, 317], "79": [310, 317, 319], "63": [310, 317], "148": [310, 317], "80": [310, 312, 316, 317], "8000": [310, 312], "525": [310, 317], "55": [310, 316, 317, 319], "186": [310, 317], "276": [310, 317], "8800": 310, "471": [310, 317], "85": [310, 317], "92": [310, 317, 320], "153": [310, 317], "82": [310, 317], "96": [310, 316, 317], "9600": 310, "361": [310, 317], "51it": [310, 312, 317], "53": [310, 317, 320], "49": [310, 313, 317, 320], "299": [310, 317], "71": [310, 317], "90": [310, 312, 316, 317, 319], "10400it": 310, "364": [310, 317], "04it": 310, "292": [310, 317], "22": [310, 311, 312, 317, 320], "plot": [310, 312, 313, 316, 317], "mention": [310, 313, 319, 322], "matplotlib": [310, 312, 313, 316, 317, 319, 322], "pyplot": [310, 312, 313, 316, 317, 319, 322], "plt": [310, 312, 313, 316, 317, 319, 322], "zip": [310, 314], "legend": 310, "xlabel": [310, 313, 316, 317], "ylabel": [310, 316], "tight_layout": 310, "concret": [310, 312], "takeawai": [310, 311], "minut": [310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "428": [310, 317, 320], "mb": [310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322], "coding_ddpg": [310, 320], "jupyt": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322], "ipynb": [310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322], "galleri": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322], "sphinx": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322], "customis": [311, 316], "road": 311, "aspect": 311, "highest": 311, "prerequisit": 311, "familiar": [311, 316, 322], "lookup": 311, "amort": [311, 312], "cart": 311, "pole": 311, "un": 311, "actuat": 311, "frictionless": 311, "upright": 311, "duelingcnndqnet": 311, "is_notebook": 311, "shell": 311, "get_ipython": 311, "__class__": 311, "zmqinteractiveshel": 311, "qtconsol": 311, "terminalinteractiveshel": 311, "ipython": [311, 316, 317], "nameerror": 311, "umbrella": 311, "misplac": 311, "misus": 311, "orchestr": 311, "everyth": [311, 313], "five": [311, 312], "64x64": 311, "motion": [311, 317], "obs_norm_sd": 311, "simpler": 311, "get_norm_stat": 311, "test_env": 311, "make_model": 311, "dummy_env": 311, "output_s": [311, 313], "init_bia": 311, "actor_explor": 311, "eps_greedy_v": 311, "eps_greedy_val_env": 311, "get_replay_buff": 311, "n_optim": 311, "themselv": 311, "simplic": [311, 312, 318, 319], "get_collector": 311, "data_collector": 311, "bunch": 311, "concept": [311, 319], "power": 311, "ubiquit": 311, "get_loss_modul": 311, "target_updat": 311, "995": [311, 317], "sensit": 311, "variat": 311, "2e": [311, 317], "wd": 311, "upd": 311, "harder": [311, 321], "5_000": 311, "500000": 311, "100000": 311, "005": 311, "mandatori": [311, 312, 316, 317], "fairer": 311, "budget": [311, 312], "dqn_exp_": 311, "uuid1": [311, 322], "9895": 311, "0737": 311, "tmp": [311, 319], "tmpkq3gio2": 311, "dqn_exp_601b26f0": 311, "62c0": 311, "11ee": [311, 322], "ad60": [311, 322], "0242ac120002": [311, 322], "registr": 311, "cumbersom": 311, "buffer_hook": 311, "weight_updat": 311, "descript": [311, 312], "aliv": 311, "total_reward": 311, "traceback": [311, 318], "__w": [311, 318], "coding_dqn": [311, 320], "660": 311, "450": [311, 317], "typeerror": 311, "print_csv_files_in_fold": 311, "folder_path": 311, "csv_file": 311, "output_str": 311, "dirpath": 311, "walk": [311, 315], "endswith": 311, "strip": 311, "qvaluenetwork": 311, "worst": 311, "accuraci": 311, "fanci": 311, "043": [311, 320], "1085": 311, "demonstr": [312, 316, 317, 322], "talk": 312, "repetit": 312, "six": 312, "sophist": [312, 316], "invent": 312, "theta_k": 312, "frac": 312, "pi_": 312, "exceed": 312, "discourag": [312, 317], "indispens": 312, "analyz": 312, "lingua": 312, "franca": 312, "defaultdict": [312, 317], "has_cuda": [312, 316, 322], "3e": [312, 313, 316], "max_grad_norm": [312, 316], "big": [312, 319, 322], "ourselv": [312, 322], "benefici": 312, "errat": 312, "hamper": [312, 319], "reactiv": 312, "xy": 312, "sub_batch_s": 312, "num_epoch": [312, 316], "entropy_ep": [312, 316], "generalist": 312, "interchang": [312, 318, 319], "panel": 312, "charact": 312, "inverteddoublependulum": 312, "transmit": 312, "stai": 312, "thumb": 312, "supplementari": [312, 322], "told": 312, "stringent": [312, 316], "nevertheless": [312, 319], "confid": [312, 316], "pack": [312, 322], "ran": 312, "f_": 312, "mu_": 312, "difficulti": [312, 322], "brought": [312, 313], "d_ob": 312, "d_action": 312, "policy_modul": [312, 316], "That": 312, "said": 312, "briefli": [312, 316], "refil": [312, 316], "capac": 312, "conveni": [312, 316, 317], "easiest": [312, 316], "mathemat": [312, 316], "tradeoff": [312, 316], "advantage_modul": 312, "lr_schedul": [312, 317], "cosineannealinglr": [312, 317], "eval_str": 312, "tensordict_data": [312, 316], "data_view": [312, 316], "subdata": [312, 316], "cum_reward_str": 312, "4f": [312, 313, 317], "stepcount_str": 312, "param_group": 312, "lr_str": 312, "eval_rollout": 312, "nice": 312, "394": [312, 317], "53it": [312, 317], "73": [312, 317], "2462": 312, "0886": 312, "0003": [312, 313, 317], "70it": [312, 317], "1027": 312, "3000": 312, "07": [312, 317], "398": [312, 317], "49it": [312, 317], "1581": 312, "401": [312, 317], "1945": 312, "0002": [312, 313, 317], "403": [312, 317], "10it": [312, 317], "2147": 312, "6000": 312, "396": [312, 317], "20it": [312, 317], "2236": 312, "70": [312, 316, 317], "7000": 312, "42it": 312, "2281": 312, "45": [312, 313, 317], "31it": [312, 313, 317], "2404": 312, "9000": 312, "405": [312, 317], "14it": 312, "2499": 312, "406": [312, 317], "91it": 312, "2497": 312, "cap": [312, 319], "figsiz": [312, 317], "subplot": [312, 317, 322], "titl": [312, 313, 316, 317], "bit": [312, 313, 316, 319], "848": [312, 320], "coding_ppo": [312, 320], "rnn": 313, "lstmmodul": 313, "84x84": 313, "accessori": 313, "stamp": 313, "tensordictprim": 313, "se": 313, "84": [313, 317], "assist": 313, "emb": 313, "n_cell": 313, "customiz": 313, "almost": 313, "bidirect": 313, "wouldn": 313, "make_tensordict_prim": 313, "interpolationmod": 313, "qval": 313, "stoch_polici": 313, "cudnn": 313, "opportun": 313, "coupl": [313, 317, 319], "uniniti": 313, "again": [313, 316, 318, 319, 322], "redund": 313, "strongli": 313, "million": 313, "sake": [313, 318, 319], "20_000": [313, 317], "longest": 313, "npai": 313, "recurrent_st": 313, "action_spread": 313, "1000000": 313, "105": [313, 317], "0006": [313, 317], "47": [313, 316, 317], "120": [313, 317], "0004": [313, 317], "150": [313, 317], "157": [313, 317], "76it": 313, "175": [313, 317], "57": [313, 317], "58it": [313, 317], "41": [313, 317], "716": [313, 320], "1860": 313, "dqn_with_rnn": [313, 320], "tutorials_python": 314, "tutorials_jupyt": 314, "distinct": 315, "humanoid": 315, "env1_obs_kei": 315, "observation_stand": 315, "env2_obs_kei": 315, "observation_walk": 315, "tdreset1": 315, "tdreset2": 315, "tdreset": 315, "67": [315, 317, 319], "policy_common": 315, "policy_stand": 315, "policy_walk": 315, "But": 315, "exclusive_field": [315, 321], "stack_dim": [315, 321], "env1_mak": 315, "env2_mak": 315, "_single_task": 315, "td_rollout": 315, "155": [315, 317, 320], "121": [315, 317, 320, 322], "multi_task": [315, 320], "matteo": 316, "bettini": 316, "maddpg": 316, "navig": 316, "lidar": 316, "sensor": 316, "collis": 316, "tie": 316, "mappo": 316, "ippo": 316, "phase": [316, 319], "mathbf": 316, "pi": [316, 317], "_t": [316, 317], "fed": [316, 319], "approxim": [316, 322], "literatur": 316, "overcom": 316, "stationari": 316, "concurr": 316, "analys": 316, "gui": 316, "visualis": 316, "multiagentmlp": 316, "divic": 316, "vmas_devic": 316, "6_000": 316, "team": [316, 321], "n_iter": 316, "minibatch_s": 316, "generalis": 316, "furthermor": 316, "simd": 316, "parallelis": 316, "warp": 316, "todai": 316, "circl": 316, "surround": 316, "dot": [316, 317], "collid": 316, "drag": 316, "elast": 316, "acceler": 316, "penalis": 316, "num_vmas_env": 316, "scenario_nam": 316, "four": [316, 317], "environmnet": 316, "final_rew": 316, "agent_collis": 316, "stress": 316, "paramount": 316, "n_rollout_step": 316, "evolut": 316, "yourself": 316, "utilis": 316, "n_actions_per_ag": 316, "n_obs_per_ag": 316, "share_parameters_polici": 316, "policy_net": 316, "denot": 316, "unbatched_action_spec": 316, "carefulli": [316, 322], "grant": 316, "converg": 316, "cooper": 316, "share_parameters_crit": 316, "critic_net": 316, "fantast": 316, "minibatch": 316, "desc": 316, "episode_reward_mean": 316, "episode_reward_mean_list": 316, "get_item_shap": 316, "critic_param": 316, "target_critic_param": 316, "refresh": 316, "3641679584980011": 316, "4940122067928314": 316, "0600677728652954": 316, "4344534873962402": 316, "1100871562957764": 316, "39": [316, 317, 319], "304917335510254": 316, "93": [316, 317, 321], "6943857669830322": 316, "871443748474121": 316, "8500826358795166": 316, "759843587875366": 316, "xvfb": 316, "pyvirtualdisplai": 316, "1400": [316, 317], "900": 316, "pil": 316, "rendering_callback": 316, "fromarrai": 316, "rgb_arrai": [316, 317], "gif": 316, "save_al": 316, "append_imag": 316, "profici": 316, "master": 316, "611": [316, 317, 320], "multiagent_ppo": [316, 320], "freeli": 317, "touch": 317, "undertaken": 317, "broader": 317, "wider": 317, "algebra": 317, "acquaint": 317, "avenu": 317, "_apply_to_composit": 317, "default_x": 317, "default_i": 317, "torqu": 317, "upward": 317, "angular": 317, "sin": 317, "rad": 317, "sec": 317, "gravit": 317, "angl": 317, "deleg": 317, "new_th": 317, "new_thdot": 317, "thdot": 317, "g_forc": 317, "max_torqu": 317, "angle_norm": 317, "max_spe": 317, "albeit": 317, "gen_param": 317, "high_th": 317, "high_thdot": 317, "low_th": 317, "low_thdot": 317, "rng": 317, "lazili": 317, "trivial": 317, "neither": 317, "shortcut": [317, 322], "irrelev": 317, "_make_spec": 317, "td_param": 317, "pseudo": 317, "render_mod": 317, "render_fp": 317, "random_": 317, "_make_step": 317, "staticmethod": 317, "complic": [317, 319, 322], "showcas": 317, "skeleton": 317, "_apply_transform": [317, 322], "_inv_apply_transform": [317, 322], "subset": [317, 318], "unitari": 317, "sine": 317, "cosin": 317, "sintransform": 317, "costransform": 317, "t_sin": 317, "t_co": 317, "cat_transform": 317, "mdp": 317, "convin": 317, "simple_rollout": 317, "_data": 317, "unexplor": 317, "assumpt": [317, 319], "recreat": 317, "init_td": 317, "traj_return": 317, "last_reward": 317, "is_ipython": 317, "inlin": 317, "get_backend": 317, "ion": 317, "gcf": 317, "clear_output": 317, "625": 317, "0488": 317, "0748": 317, "519": 317, "0499": 317, "4472": 317, "073": 317, "57it": 317, "0685": 317, "0408": 317, "552": 317, "5154": 317, "9086": 317, "527": 317, "60it": 317, "9385": 317, "2568": 317, "4981": 317, "223": 317, "8929": 317, "4491": 317, "581": 317, "61it": 317, "3233": 317, "0664": 317, "596": 317, "63it": 317, "1021": 317, "5263": 317, "9579": 317, "62it": 317, "5807": 317, "8075": 317, "212": 317, "2009": 317, "5525": 317, "914": 317, "2894": 317, "0115": 317, "52": 317, "0977": 317, "1845": 317, "1830": 317, "4858": 317, "233": 317, "2863": 317, "0297": 317, "464": 317, "4617": 317, "5997": 317, "904": 317, "1647": 317, "0777": 317, "901": 317, "4709": 317, "6813": 317, "8317": 317, "3221": 317, "5554": 317, "3353": 317, "701": 317, "8570": 317, "6656": 317, "463": 317, "7779": 317, "6911": 317, "875": 317, "0796": 317, "7082": 317, "308": 317, "0421": 317, "1496": 317, "64it": 317, "5037": 317, "1755": 317, "62": 317, "65it": 317, "5029": 317, "9454": 317, "665": 317, "9330": 317, "2118": 317, "444": 317, "0995": 317, "6294": 317, "69": 317, "3146": 317, "2909": 317, "461": 317, "9720": 317, "1298": 317, "91": [317, 319], "9923": 317, "0345": 317, "3438": 317, "3688": 317, "424": 317, "6953": 317, "5233": 317, "411": 317, "4288": 317, "8011": 317, "5329": 317, "2677": 317, "6969": 317, "7010": 317, "376": 317, "9352": 317, "7707": 317, "6178": 317, "5646": 317, "348": 317, "7304": 317, "9407": 317, "942": 317, "3882": 317, "7604": 317, "3507": 317, "8928": 317, "258": 317, "6978": 317, "4641": 317, "549": 317, "6047": 317, "544": 317, "43": [317, 319], "5005": 317, "4136": 317, "2993": 317, "3222": 317, "4046": 317, "7314": 317, "275": 317, "66it": 317, "6331": 317, "9318": 317, "961": 317, "8331": 317, "1604": 317, "4099": 317, "4761": 317, "125": [317, 319], "4262": 317, "6363": 317, "382": 317, "3593": 317, "7377": 317, "51": [317, 319], "2847": 317, "3443": 317, "867": 317, "3592": 317, "4760": 317, "441": 317, "9950": 317, "8021": 317, "77": 317, "54": 317, "3528": 317, "1214": 317, "708": 317, "4023": 317, "3583": 317, "041": 317, "3801": 317, "0310": 317, "4244": 317, "2039": 317, "58": 317, "4850": 317, "8748": 317, "706": 317, "59": 317, "4897": 317, "9210": 317, "8964": 317, "61": 317, "0832": 317, "3934": 317, "456": 317, "8971": 317, "2933": 317, "74": 317, "3377": 317, "6996": 317, "2274": 317, "8916": 317, "098": 317, "65": 317, "2660": 317, "9110": 317, "66": 317, "4503": 317, "6956": 317, "9172": 317, "4026": 317, "946": 317, "68": 317, "9229": 317, "5205": 317, "294": 317, "8872": 317, "6637": 317, "019": 317, "9281": 317, "2082": 317, "724": 317, "8561": 317, "6574": 317, "357": 317, "4138": 317, "5230": 317, "385": 317, "4065": 317, "5642": 317, "921": 317, "9786": 317, "75": [317, 319], "4129": 317, "5831": 317, "266": 317, "76": [317, 319], "7723": 317, "4152": 317, "608": 317, "0898": 317, "389": 317, "78": 317, "67it": 317, "5155": 317, "5376": 317, "5616": 317, "4094": 317, "283": 317, "5333": 317, "4803": 317, "895": 317, "6566": 317, "2588": 317, "662": 317, "4732": 317, "7503": 317, "068": 317, "83": 317, "0714": 317, "3370": 317, "059": 317, "8612": 317, "1915": 317, "3855": 317, "0349": 317, "86": 317, "9644": 317, "4538": 317, "445": 317, "0392": 317, "4080": 317, "1648": 317, "9599": 317, "143": 317, "4284": 317, "5946": 317, "2590": 317, "9181": 317, "4621": 317, "9075": 317, "674": 317, "1772": 317, "9444": 317, "351": 317, "9391": 317, "5595": 317, "8673": 317, "6240": 317, "5919": 317, "0018": 317, "1071": 317, "9127": 317, "251": 317, "97": 317, "9799": 317, "3131": 317, "9612": 317, "9705": 317, "8741": 317, "2230": 317, "0972": 317, "0337": 317, "0350": 317, "0654": 317, "102": 317, "2441": 317, "4596": 317, "362": 317, "4362": 317, "171": 317, "104": 317, "4041": 317, "6907": 317, "4664": 317, "2760": 317, "0299": 317, "9712": 317, "349": 317, "107": 317, "3332": 317, "4479": 317, "772": 317, "108": 317, "4357": 317, "9591": 317, "543": 317, "109": 317, "6216": 317, "1353": 317, "692": 317, "110": 317, "6261": 317, "7086": 317, "496": 317, "111": 317, "7758": 317, "9818": 317, "112": [317, 319], "7772": 317, "5055": 317, "113": [317, 320], "5840": 317, "3180": 317, "2976": 317, "2083": 317, "115": [317, 319], "5275": 317, "6873": 317, "116": [317, 319], "4107": 317, "1624": 317, "117": 317, "6372": 317, "2571": 317, "118": 317, "4039": 317, "4428": 317, "119": 317, "4728": 317, "5628": 317, "6767": 317, "2466": 317, "522": 317, "5873": 317, "5072": 317, "122": [317, 322], "6548": 317, "3766": 317, "123": 317, "5134": 317, "1955": 317, "124": 317, "2481": 317, "0591": 317, "4500": 317, "3368": 317, "126": 317, "9708": 317, "7059": 317, "127": [317, 319], "3031": 317, "2534": 317, "843": 317, "3327": 317, "6193": 317, "129": [317, 322], "4831": 317, "1172": 317, "2593": 317, "4219": 317, "962": 317, "8380": 317, "899": 317, "132": 317, "2721": 317, "9048": 317, "166": 317, "133": 317, "2419": 317, "5248": 317, "2139": 317, "4278": 317, "135": 317, "0690": 317, "5140": 317, "136": [317, 319], "1140": 317, "7402": 317, "137": 317, "5356": 317, "1636": 317, "138": 317, "0671": 317, "8798": 317, "139": 317, "8918": 317, "3298": 317, "307": 317, "140": 317, "1779": 317, "141": 317, "1771": 317, "3624": 317, "936": 317, "142": 317, "1683": 317, "4810": 317, "9373": 317, "4435": 317, "144": 317, "4396": 317, "8092": 317, "145": 317, "2572": 317, "146": [317, 319], "4212": 317, "0260": 317, "147": 317, "0939": 317, "6478": 317, "605": 317, "6606": 317, "7289": 317, "149": 317, "9300": 317, "7193": 317, "563": 317, "1166": 317, "8514": 317, "384": [317, 319, 320], "151": 317, "09it": 317, "9108": 317, "0672": 317, "152": 317, "48it": 317, "8591": 317, "3768": 317, "78it": 317, "9976": 317, "154": [317, 319], "01it": 317, "0576": 317, "0067": 317, "935": 317, "18it": 317, "4199": 317, "1722": 317, "156": [317, 319], "8310": 317, "3466": 317, "40it": 317, "8631": 317, "2492": 317, "158": 317, "8763": 317, "1277": 317, "159": 317, "5562": 317, "7446": 317, "56it": 317, "1082": 317, "9830": 317, "161": 317, "0946": 317, "5229": 317, "162": 317, "4574": 317, "6900": 317, "163": 317, "2229": 317, "0318": 317, "482": 317, "164": 317, "0543": 317, "0817": 317, "761": 317, "165": 317, "2809": 317, "5118": 317, "366": 317, "68it": 317, "1142": 317, "5635": 317, "167": 317, "69it": 317, "1949": 317, "2327": 317, "982": 317, "168": 317, "0967": 317, "0387": 317, "457": 317, "169": 317, "0782": 317, "2150": 317, "170": 317, "5222": 317, "3725": 317, "9288": 317, "9837": 317, "172": 317, "1416": 317, "1099": 317, "173": [317, 319], "8620": 317, "8475": 317, "174": 317, "1807": 317, "4375": 317, "1148": 317, "0645": 317, "2751": 317, "8313": 317, "177": 317, "9286": 317, "9770": 317, "178": 317, "5735": 317, "2837": 317, "179": 317, "2926": 317, "9489": 317, "180": 317, "71it": 317, "1507": [317, 322], "181": 317, "8724": 317, "3567": 317, "182": 317, "3574": 317, "6140": 317, "183": 317, "7895": 317, "2518": 317, "184": 317, "6146": 317, "185": 317, "8776": 317, "7358": 317, "3722": 317, "8428": 317, "187": 317, "2656": 317, "7955": 317, "188": 317, "0092": 317, "7106": 317, "829": 317, "189": 317, "2264": 317, "6919": 317, "190": 317, "1438": 317, "1362": 317, "191": 317, "0618": 317, "8217": 317, "192": 317, "9420": 317, "6765": 317, "193": 317, "7745": 317, "0709": 317, "194": 317, "9478": 317, "6867": 317, "195": 317, "6507": 317, "6225": 317, "196": 317, "2244": 317, "2195": 317, "197": 317, "5385": 317, "9263": 317, "198": 317, "1878": 317, "2374": 317, "199": 317, "8054": 317, "3504": 317, "557": [317, 320], "0766": 317, "6825": 317, "201": 317, "2011": 317, "8393": 317, "202": 317, "0803": 317, "7815": 317, "203": 317, "8363": 317, "2460": 317, "204": 317, "8643": 317, "2191": 317, "593": 317, "205": 317, "0773": 317, "1343": 317, "206": 317, "8657": 317, "207": 317, "9304": 317, "7584": 317, "208": 317, "8752": 317, "2307": 317, "209": 317, "5250": 317, "4869": 317, "7837": 317, "5762": 317, "211": 317, "6661": 317, "8600": 317, "2502": 317, "1752": 317, "213": 317, "3075": 317, "8871": 317, "214": 317, "9406": 317, "8090": 317, "215": 317, "6291": 317, "8923": 317, "876": 317, "216": 317, "9504": 317, "21e": 317, "217": 317, "7431": 317, "7880": 317, "218": 317, "4463": 317, "5432": 317, "219": 317, "3793": 317, "3313": 317, "220": 317, "8843": 317, "0369": 317, "065": 317, "221": 317, "4828": 317, "8391": 317, "222": 317, "6265": 317, "2913": 317, "947": 317, "5541": 317, "1252": 317, "224": 317, "7342": 317, "2396": 317, "225": 317, "5936": 317, "1924": 317, "226": 317, "9975": 317, "2045": 317, "227": 317, "8367": 317, "9540": 317, "228": 317, "7259": 317, "6743": 317, "229": 317, "4827": 317, "7528": 317, "230": 317, "7361": 317, "8756": 317, "231": 317, "7646": 317, "1116": 317, "232": 317, "5426": 317, "8385": 317, "5662": 317, "8585": 317, "234": 317, "8234": 317, "7930": 317, "235": 317, "2648": 317, "9309": 317, "236": 317, "6817": 317, "237": 317, "0943": 317, "1533": 317, "238": 317, "3045": 317, "0483": 317, "239": 317, "72it": 317, "4128": 317, "2528": 317, "240": [317, 321, 322], "6415": 317, "0201": 317, "241": 317, "4437": 317, "4365": 317, "242": 317, "0358": 317, "4943": 317, "243": 317, "1272": 317, "5003": 317, "1180": 317, "2637": 317, "245": 317, "7197": 317, "0873": 317, "246": 317, "2917": 317, "247": 317, "0160": 317, "0738": 317, "248": 317, "3689": 317, "0120": 317, "249": 317, "5570": 317, "0475": 317, "250": [317, 318], "4423": 317, "2220": 317, "6803": 317, "252": 317, "1465": 317, "7214": 317, "253": 317, "8801": 317, "7034": 317, "254": 317, "9136": 317, "4076": 317, "7589": 317, "5013": 317, "8150": 317, "2241": 317, "257": 317, "0753": 317, "8081": 317, "1951": 317, "8314": 317, "259": 317, "0038": 317, "260": 317, "0889": 317, "4616": 317, "261": 317, "0655": 317, "262": 317, "8333": 317, "9476": 317, "263": 317, "7554": 317, "3798": 317, "264": 317, "3717": 317, "3947": 317, "529": 317, "265": 317, "3060": 317, "6495": 317, "7467": 317, "8889": 317, "267": 317, "8457": 317, "591": 317, "268": 317, "7137": 317, "0536": 317, "771": 317, "269": 317, "1651": 317, "388": 317, "270": 317, "8246": 317, "5709": 317, "281": 317, "271": 317, "7502": 317, "0521": 317, "032": 317, "272": 317, "5475": 317, "7253": 317, "273": 317, "2856": 317, "7130": 317, "274": 317, "2778": 317, "4122": 317, "8368": 317, "1841": 317, "9622": 317, "1603": 317, "003e": 317, "277": 317, "0247": 317, "346": 317, "278": 317, "2238": 317, "6418": 317, "279": 317, "0626": 317, "2538": 317, "280": 317, "0149": 317, "7380": 317, "2167": 317, "8911": 317, "282": 317, "8725": 317, "1983": 317, "8142": 317, "3709": 317, "284": 317, "4989": 317, "285": 317, "6464": 317, "6210": 317, "286": 317, "9726": 317, "0820": 317, "287": 317, "6975": 317, "9091": 317, "288": 317, "4926": 317, "4791": 317, "289": 317, "0905": 317, "3500": 317, "290": 317, "2287": 317, "291": 317, "9918": 317, "5543": 317, "9245": 317, "6444": 317, "631": 317, "293": 317, "0448": 317, "4769": 317, "8566": 317, "7208": 317, "295": 317, "0966": 317, "296": 317, "5303": 317, "1537": 317, "023": 317, "297": 317, "2682": 317, "564": 317, "298": 317, "4318": 317, "5063": 317, "7475": 317, "4190": 317, "8186": 317, "5077": 317, "301": [317, 320, 322], "1883": 317, "5291": 317, "472": 317, "302": 317, "1256": 317, "3998": 317, "303": [317, 318], "3622": 317, "0930": 317, "626": 317, "304": 317, "9500": 317, "0075": 317, "5664": 317, "305": 317, "5697": 317, "3024": 317, "306": 317, "3117": 317, "0052": 317, "006": 317, "0981": 317, "9312": 317, "3873": 317, "309": 317, "0411": 317, "2650": 317, "310": 317, "1656": 317, "0228": 317, "004": 317, "311": 317, "1196": 317, "2478": 317, "312": 317, "7353": 317, "0812": 317, "313": 317, "3022": 317, "758": 317, "314": 317, "1406": 317, "4626": 317, "315": 317, "2156": 317, "851": 317, "316": 317, "1953": 317, "3774": 317, "317": 317, "6385": 317, "9917": 317, "318": 317, "2764": 317, "905": 317, "319": 317, "6391": 317, "9317": 317, "320": [317, 322], "9748": 317, "2679": 317, "321": 317, "8495": 317, "5125": 317, "8177": 317, "6602": 317, "323": 317, "0704": 317, "5776": 317, "324": 317, "9833": [317, 321], "1339": 317, "402": 317, "325": 317, "1238": 317, "326": 317, "9299": 317, "0227": 317, "327": 317, "7727": 317, "1607": 317, "336": 317, "3958": 317, "3223": 317, "763": 317, "329": 317, "4742": 317, "1797": 317, "330": 317, "0144": 317, "0085": 317, "791": 317, "331": 317, "8284": 317, "0428": 317, "332": 317, "0098": 317, "7365": 317, "333": 317, "4566": 317, "0781": 317, "086": 317, "334": 317, "3355": 317, "0230": 317, "335": 317, "9346": 317, "0423": 317, "076": 317, "3711": 317, "1335": 317, "6855": 317, "337": 317, "0304": 317, "0023": 317, "8459": 317, "338": 317, "9998": 317, "4399": 317, "339": 317, "2303": 317, "1346": 317, "340": 317, "2915": 317, "7116": 317, "341": 317, "5560": 317, "0487": 317, "342": 317, "5119": 317, "061": 317, "343": 317, "3305": 317, "3705": 317, "957": 317, "344": 317, "6068": 317, "2112": 317, "345": 317, "5731": 317, "3897": 317, "0376": 317, "347": 317, "0434": 317, "012": 317, "1300": 317, "1215": 317, "0968": 317, "0885": 317, "350": 317, "1348": 317, "0073": 317, "5052": 317, "4184": 317, "2817": 317, "352": 317, "8887": 317, "353": 317, "4779": 317, "1009": 317, "354": 317, "0604": 317, "599": 317, "355": 317, "4486": 317, "1176": 317, "656": 317, "356": 317, "2436": 317, "0668": 317, "8849": 317, "0012": 317, "358": 317, "7511": 317, "8804": 317, "359": 317, "8870": 317, "6728": 317, "360": 317, "8841": 317, "5508": 317, "5242": 317, "0268": 317, "3232": 317, "0013": 317, "6185": 317, "363": 317, "1378": 317, "0204": 317, "0355": 317, "685": 317, "365": 317, "4884": 317, "0231": 317, "0770": 317, "0014": 317, "6793": 317, "367": 317, "9834": 317, "863": 317, "368": 317, "6709": 317, "462": 317, "369": 317, "5199": 317, "9790": 317, "370": 317, "9401": 317, "7802": 317, "371": 317, "6723": 317, "372": 317, "2678": 317, "6201": 317, "373": 317, "2184": 317, "7385": 317, "374": 317, "6344": 317, "617": 317, "375": 317, "9945": 317, "0772": 317, "567": 317, "7576": 317, "0398": 317, "377": 317, "3396": 317, "0022": 317, "094": 317, "378": 317, "3073": 317, "4018": 317, "379": 317, "1869": 317, "380": 317, "0481": 317, "1117": 317, "381": 317, "6823": 317, "981": 317, "8305": 317, "0210": 317, "383": 317, "4908": 317, "0272": 317, "538": 317, "3267": 317, "0111": 317, "7965": 317, "1796": 317, "0039": 317, "5396": 317, "386": 317, "3757": 317, "0490": 317, "387": 317, "1394": 317, "4187": 317, "2986": 317, "7954": 317, "1274": 317, "0063": 317, "813": 317, "390": 317, "8706": 317, "0114": 317, "391": 317, "6922": 317, "2423": 317, "392": 317, "9115": 317, "2602": 317, "393": 317, "2449": 317, "0783": 317, "0631": 317, "0057": 317, "7444": 317, "395": 317, "3339": 317, "0167": 317, "4806": 317, "397": 317, "4171": 317, "067": 317, "2618": 317, "5809": 317, "399": 317, "0054": 317, "3364": 317, "8733": 317, "0184": 317, "9137": 317, "0113": 317, "025": 317, "0386": 317, "0625": 317, "1332": 317, "0582": 317, "7816": 317, "404": 317, "8341": 317, "0941": 317, "854": 317, "8615": 317, "588": 317, "3849": 317, "008": 317, "407": 317, "9395": 317, "0765": 317, "055": 317, "408": 317, "2685": 317, "2235": 317, "688": 317, "409": 317, "3052": 317, "4249": 317, "410": 317, "6806": 317, "6383": 317, "3721": 317, "9981": 317, "412": 317, "1862": 317, "822": 317, "413": 317, "9811": 317, "0171": 317, "013": 317, "414": 317, "22it": 317, "0252": 317, "0049": 317, "6205": 317, "415": 317, "1108": 317, "4921": 317, "416": 317, "87it": 317, "9142": 317, "8130": 317, "417": 317, "1725": 317, "0036": 317, "3196": 317, "418": 317, "25it": 317, "7795": 317, "0242": 317, "799": 317, "419": 317, "37it": 317, "7737": 317, "0138": 317, "420": 317, "47it": 317, "1462": 317, "0053": 317, "421": 317, "9226": 317, "6139": 317, "422": 317, "9889": 317, "0403": 317, "423": 317, "6194": 317, "0032": 317, "3989": 317, "0104": 317, "425": 317, "9960": 317, "0009": 317, "6009": 317, "426": 317, "2697": 317, "0914": 317, "427": 317, "4256": 317, "1114": 317, "9862": 317, "1932": 317, "429": 317, "0637": 317, "0623": 317, "082": 317, "430": 317, "9906": 317, "2031": 317, "431": 317, "9948": 317, "0895": 317, "432": 317, "1970": 317, "0256": 317, "433": 317, "4231": 317, "0449": 317, "644": 317, "434": 317, "1039": 317, "1973": 317, "435": 317, "4561": 317, "1225": 317, "436": 317, "0211": 317, "2125": 317, "437": 317, "3866": 317, "0050": 317, "7202": 317, "438": 317, "6388": 317, "0072": 317, "439": 317, "1187": 317, "0015": 317, "5116": 317, "440": 317, "0432": 317, "0025": 317, "7809": 317, "1925": 317, "0103": 317, "442": 317, "9570": 317, "443": 317, "0871": 317, "5601": 317, "0165": 317, "0047": 317, "6061": 317, "2746": 317, "0027": 317, "7887": 317, "446": 317, "1835": 317, "0035": 317, "855": 317, "447": 317, "8420": 317, "548": 317, "448": 317, "2653": 317, "0126": 317, "9736": 317, "449": 317, "0594": 317, "0119": 317, "6196": 317, "4509": 317, "0373": 317, "451": 317, "0620": 317, "992": 317, "452": 317, "6898": 317, "3235": 317, "687": 317, "453": 317, "5879": 317, "454": 317, "8406": 317, "0694": 317, "455": 317, "8259": 317, "0235": 317, "8500": 317, "0024": 317, "4054": 317, "458": 317, "2027": 317, "0894": 317, "459": 317, "5966": 317, "460": 317, "6942": 317, "0016": 317, "4254": 317, "6703": 317, "0145": 317, "8124": 317, "0218": 317, "9196": 317, "0188": 317, "8986": 317, "0884": 317, "0084": 317, "5624": 317, "465": 317, "8862": 317, "5384": 317, "466": 317, "5837": 317, "467": 317, "8954": 317, "0101": 317, "6751": 317, "468": 317, "8063": 317, "0122": 317, "9635": 317, "469": 317, "0692": 317, "4216": 317, "470": 317, "1227": 317, "0586": 317, "162e": 317, "9690": 317, "0074": 317, "4166": 317, "6324": 317, "473": 317, "0778": 317, "474": 317, "8548": 317, "0017": 317, "4408": 317, "475": 317, "8125": 317, "1515": 317, "476": 317, "2733": 317, "0044": 317, "2836": 317, "477": 317, "7497": 317, "7681": 317, "478": 317, "8547": 317, "0105": 317, "7212": 317, "479": 317, "9848": 317, "0019": 317, "6498": 317, "480": 317, "1987": 317, "0011": 317, "5473": 317, "481": 317, "8991": 317, "0033": 317, "6091": 317, "9189": 317, "5771": 317, "483": 317, "6781": 317, "7542": 317, "484": 317, "5959": 317, "0064": 317, "4295": 317, "485": 317, "2547": 317, "486": 317, "0636": 317, "547": 317, "487": 317, "26it": 317, "0065": 317, "488": 317, "38it": 317, "1694": 317, "0083": 317, "5759": 317, "489": 317, "46it": 317, "0493": 317, "0021": 317, "7805": 317, "490": 317, "0950": 317, "497": 317, "491": 317, "9717": 317, "3672": 317, "492": 317, "0207": 317, "493": 317, "8266": 317, "0069": 317, "5365": 317, "494": 317, "2623": 317, "5078": 317, "495": 317, "4545": 317, "09636": 317, "8754": 317, "0010": 317, "498": 317, "0031": 317, "8269": 317, "499": 317, "4082": 317, "6642": 317, "2284": 317, "501": 317, "9130": 317, "0008": 317, "502": 317, "2944": 317, "503": 317, "7624": 317, "0056": 317, "3858": 317, "504": 317, "0890": 317, "0042": 317, "505": 317, "7505": 317, "2157": 317, "506": 317, "8394": 317, "3413": 317, "507": 317, "9609": 317, "0041": 317, "6905": 317, "508": 317, "8467": 317, "4409": 317, "509": 317, "510": 317, "8128": 317, "3559": 317, "511": 317, "1479": 317, "0264": 317, "1589": 317, "566": 317, "513": 317, "2756": 317, "0046": 317, "5266": 317, "514": 317, "9873": 317, "0112": 317, "9314": 317, "515": 317, "3791": 317, "0721": 317, "516": 317, "4580": 317, "0758": 317, "6114": 317, "517": 317, "2431": 317, "518": 317, "1958": 317, "5553": 317, "8924": 317, "0097": 317, "520": 317, "3737": 317, "0234": 317, "521": 317, "9125": 317, "4623": 317, "3230": 317, "0589": 317, "3784": 317, "523": 317, "9482": 317, "0051": 317, "524": 317, "1979": 317, "0045": 317, "6401": 317, "1588": 317, "0048": 317, "6255": 317, "526": 317, "6084": 317, "3477": 317, "1475": 317, "0209": 317, "3456": 317, "528": 317, "7611": 317, "1040": 317, "0099": 317, "0173": 317, "643": 317, "530": 317, "8189": 317, "4358": 317, "531": 317, "9897": 317, "532": 317, "1548": 317, "9751": 317, "533": 317, "6362": 317, "7495": 317, "534": 317, "1749": 317, "9513": 317, "7708": 317, "0371": 317, "536": 317, "2649": 317, "0437": 317, "537": 317, "5491": 317, "0276": 317, "6426": 317, "7294": 317, "078e": 317, "539": 317, "9928": 317, "576": 317, "540": 317, "7937": 317, "0124": 317, "9664": 317, "541": 317, "3342": 317, "542": 317, "2046": 317, "5496": 317, "0956": 317, "0059": 317, "545": 317, "9028": 317, "5843": 317, "546": 317, "0674": 317, "0178": 317, "797": 317, "2815": 317, "0599": 317, "1587": 317, "9276": 317, "8228": 317, "6164": 317, "551": 317, "6850": 317, "9167": 317, "3092": 317, "0670": 317, "9177": 317, "553": 317, "1599": 317, "0043": 317, "554": 317, "4672": 317, "6367": 317, "555": 317, "3657": 317, "556": 317, "6694": 317, "2622": 317, "0372": 317, "4841": 317, "558": [317, 318], "2707": 317, "0058": 317, "757": 317, "559": 317, "2267": 317, "5415": 317, "560": 317, "4556": 317, "0163": 317, "561": 317, "1839": 317, "0809": 317, "6262": 317, "562": 317, "0278": 317, "27it": 317, "1112": 317, "6155": 317, "565": 317, "1427": 317, "3582": 317, "624": 317, "55it": 317, "7870": 317, "9490": 317, "59it": 317, "0439": 317, "8796": 317, "568": 317, "8026": 317, "2720": 317, "612": 317, "569": 317, "3147": 317, "8486": 317, "570": 317, "7917": 317, "0129": 317, "571": 317, "9553": 317, "0020": 317, "6871": 317, "572": 317, "3132": 317, "0159": 317, "8646": 317, "573": 317, "5320": 317, "0269": 317, "574": 317, "2955": 317, "0245": 317, "575": 317, "3347": 317, "0179": 317, "9718": 317, "1629": 317, "804": 317, "577": 317, "4164": 317, "0070": 317, "4335": 317, "578": 317, "579": 317, "3049": 317, "9063": 317, "580": 317, "8785": 317, "3295": 317, "5184": 317, "0546": 317, "582": 317, "4589": 317, "583": 317, "4697": 317, "2476": 317, "584": 317, "2397": 317, "585": 317, "4953": 317, "1775": 317, "586": 317, "2258": 317, "0110": 317, "7671": 317, "587": 317, "3981": 317, "8590": 317, "0007": 317, "589": 317, "9820": 317, "4221": 317, "590": 317, "1293": 317, "0116": 317, "868": 317, "1675": 317, "5931": 317, "592": 317, "2910": 317, "5219": 317, "2124": 317, "1730": 317, "737": 317, "594": 317, "2914": 317, "0206": 317, "595": 317, "0172": 317, "3982": 317, "0945": 317, "0121": 317, "4789": 317, "597": 317, "3805": 317, "4074": 317, "598": 317, "3310": 317, "5065": 317, "6028": 317, "6316": 317, "6724": 317, "6523": 317, "601": 317, "0136": 317, "4298": 317, "602": 317, "3524": 317, "2629": 317, "603": 317, "2635": 317, "7839": 317, "604": 317, "6041": 317, "8027": 317, "4170": 317, "4675": 317, "606": 317, "3153": 317, "9316": 317, "607": 317, "0649": 317, "9722": 317, "7989": 317, "0329": 317, "609": 317, "1976": 317, "6852": 317, "610": 317, "4793": 317, "1255": 317, "4581": 317, "0394": 317, "2047": 317, "0326": 317, "613": 317, "8967": 317, "8619": 317, "614": 317, "5906": 317, "6491": 317, "615": 317, "6634": 317, "4394": 317, "616": 317, "0624": 317, "0061": 317, "5676": 317, "3259": 317, "0131": 317, "7733": 317, "618": 317, "7515": 317, "0189": 317, "5575": 317, "619": 317, "9313": 317, "6286": 317, "620": 317, "4325": 317, "7832": 317, "621": 317, "1134": 317, "622": 317, "4572": 317, "0500": 317, "5838": 317, "623": 317, "3818": 317, "8623": 317, "1253": 317, "6622": 317, "subject": 317, "saw": [317, 319], "explain": 318, "semat": 318, "r3mtransform": 318, "embodi": 318, "ai": 318, "env_transform": [318, 322], "pretrained_model": [318, 320], "got": 318, "wiser": 318, "conclud": 318, "_storag": [318, 319], "788": [318, 320], "supervis": [319, 322], "pull": 319, "temporarili": 319, "drastic": 319, "ram": [319, 322], "batteri": 319, "dataliststorag": 319, "datalazytensorstorag": 319, "tensordidct": 319, "datalazymemmapstorag": 319, "buffer_list": 319, "lowest": 319, "medium": 319, "buffer_lazytensor": 319, "buffer_lazymemmap": 319, "fullest": 319, "organ": 319, "convini": 319, "mydata": 319, "background": 319, "question": [319, 321], "_i": 319, "artifici": 319, "0892946e": 319, "she": 319, "augment": 319, "proport": 319, "hist": 319, "barcontain": 319, "artist": 319, "revert": 319, "expens": 319, "reappear": 319, "unfold": 319, "problemat": 319, "window": 319, "4th": 319, "722": [319, 320], "rb_tutori": [319, 320], "torchrl_demo": [320, 321], "814": [320, 321], "torchrl_env": [320, 322], "1859": 320, "1084": 320, "demo": 321, "icml": 321, "vmoen": 321, "fb": 321, "invest": 321, "platform": 321, "media": 321, "truli": 321, "predominantli": 321, "tensordict1": 321, "tensordict2": 321, "tensordict_sampl": 321, "_sampler": 321, "_sum_tre": 321, "modulenotfounderror": 321, "28791671991348267": 321, "gym_env": 321, "noopresetenv": [321, 322], "backbone_modul": 321, "params_expand": 321, "tensordict_exp": 321, "base_modul": 321, "0137": 321, "1524": 321, "0641": 321, "viewbackward0": 321, "asstridedbackward0": 321, "8728": 321, "1334": 321, "3494": 321, "6887": 321, "6402": 321, "_safetanhbackward": 321, "1132": 321, "1762": 321, "3430": 321, "2668": 321, "2918": 321, "6239": 321, "roughli": 321, "tensordicts_prealloc": 321, "tensordicts_stack": 321, "tensordict_rollout": [321, 322], "disclaim": 321, "concatmodul": 321, "loss_td": 321, "year": 321, "roadmap": 321, "compris": 321, "contributor": 321, "curiou": 321, "nascent": 321, "unsupervis": 322, "rom": 322, "licens": 322, "pygam": 322, "unifi": 322, "insid": 322, "_build_env": 322, "sphinx_gallery_start_ignor": 322, "filterwarn": 322, "sphinx_gallery_end_ignor": 322, "adventur": 322, "airraid": 322, "alien": 322, "amidar": 322, "assault": 322, "8325": 322, "deserv": 322, "__episode__": 322, "__trajectory__": 322, "void": 322, "reproduct": 322, "tensordict_tprim": 322, "imshow": 322, "axesimag": 322, "0x7f064cfd1fd0": 322, "inconsist": 322, "0x7f058176d120": 322, "swingup": 322, "wrapper1": 322, "wrapper2": 322, "obviou": 322, "truth": 322, "env0": 322, "env_transformed_bi": 322, "stanc": 322, "transformeddistribut": 322, "base_dist": 322, "concat": 322, "mofidi": 322, "transformedenviron": 322, "moderet": 322, "computation": 322, "legitim": 322, "incom": 322, "amongst": 322, "wor": 322, "convention": 322, "scope": 322, "markovian": 322, "3288080526": 322, "constain": 322, "bar_": 322, "get_someth": 322, "bar_92b84576": 322, "62bf": 322, "aargh": 322, "foo_list": 322, "batched_env": 322, "_dispatch_caller_parallel": 322, "0x7f058327f940": 322, "bar_9a451ad0": 322, "88ba": 322, "bar_9a4501bc": 322, "bab6": 322, "bar_9a459e74": 322, "bbba": 322, "parallen": 322, "particularili": 322, "evolv": 322, "steadi": 322, "approx": 322, "3215": 322, "1966": 322, "9921": 322, "0920": 322, "_extra_st": 322, "observation_ssq": 322, "observation_sum": 322, "1971": 322, "0565": 322, "1442": 322, "1137": 322, "2541": 322, "3192": 322, "dispach": 322, "absor": 322}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 2, 1, "", "BraxEnv"], [68, 2, 1, "", "BraxWrapper"], [69, 2, 1, "", "DMControlEnv"], [70, 2, 1, "", "DMControlWrapper"], [71, 0, 1, "", "EnvBase"], [72, 0, 1, "", "EnvCreator"], [73, 0, 1, "", "EnvMetaData"], [74, 2, 1, "", "GymEnv"], [75, 0, 1, "", "GymLikeEnv"], [76, 2, 1, "", "GymWrapper"], [77, 2, 1, "", "HabitatEnv"], [78, 2, 1, "", "IsaacGymEnv"], [79, 2, 1, "", "IsaacGymWrapper"], [80, 2, 1, "", "JumanjiEnv"], [81, 2, 1, "", "JumanjiWrapper"], [82, 2, 1, "", "MarlGroupMapType"], [83, 2, 1, "", "ModelBasedEnvBase"], [84, 2, 1, "", "MultiThreadedEnv"], [85, 2, 1, "", "MultiThreadedEnvWrapper"], [86, 2, 1, "", "OpenMLEnv"], [87, 0, 1, "", "ParallelEnv"], [88, 2, 1, "", "PettingZooEnv"], [89, 2, 1, "", "PettingZooWrapper"], [90, 2, 1, "", "RoboHiveEnv"], [91, 2, 1, "", "SMACv2Env"], [92, 2, 1, "", "SMACv2Wrapper"], [93, 0, 1, "", "SerialEnv"], [94, 2, 1, "", "VmasEnv"], [95, 2, 1, "", "VmasWrapper"], [96, 2, 1, "", "check_marl_grouping"], [97, 2, 1, "", "gym_backend"], [83, 1, 1, "", "rand_step"], [83, 1, 1, "", "reset"], [83, 1, 1, "", "rollout"], [99, 2, 1, "", "set_gym_backend"], [83, 1, 1, "", "set_seed"], [83, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[71, 3, 1, "", "action_key"], [71, 3, 1, "", "action_keys"], [71, 3, 1, "", "action_spec"], [71, 1, 1, "", "add_module"], [71, 1, 1, "", "apply"], [71, 3, 1, "", "batch_locked"], [71, 1, 1, "", "bfloat16"], [71, 1, 1, "", "buffers"], [71, 1, 1, "", "children"], [71, 1, 1, "", "compile"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 3, 1, "", "done_key"], [71, 3, 1, "", "done_keys"], [71, 3, 1, "", "done_keys_groups"], [71, 3, 1, "", "done_spec"], [71, 1, 1, "", "double"], [71, 1, 1, "", "eval"], [71, 1, 1, "", "extra_repr"], [71, 1, 1, "", "fake_tensordict"], [71, 1, 1, "", "float"], [71, 1, 1, "", "forward"], [71, 3, 1, "", "full_action_spec"], [71, 3, 1, "", "full_done_spec"], [71, 3, 1, "", "full_reward_spec"], [71, 3, 1, "", "full_state_spec"], [71, 1, 1, "", "get_buffer"], [71, 1, 1, "", "get_extra_state"], [71, 1, 1, "", "get_parameter"], [71, 1, 1, "", "get_submodule"], [71, 1, 1, "", "half"], [71, 3, 1, "", "input_spec"], [71, 1, 1, "", "ipu"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "modules"], [71, 1, 1, "", "named_buffers"], [71, 1, 1, "", "named_children"], [71, 1, 1, "", "named_modules"], [71, 1, 1, "", "named_parameters"], [71, 3, 1, "", "observation_spec"], [71, 3, 1, "", "output_spec"], [71, 1, 1, "", "parameters"], [71, 1, 1, "", "rand_action"], [71, 1, 1, "id0", "rand_step"], [71, 1, 1, "", "register_backward_hook"], [71, 1, 1, "", "register_buffer"], [71, 1, 1, "", "register_forward_hook"], [71, 1, 1, "", "register_forward_pre_hook"], [71, 1, 1, "", "register_full_backward_hook"], [71, 1, 1, "", "register_full_backward_pre_hook"], [71, 1, 1, "", "register_load_state_dict_post_hook"], [71, 1, 1, "", "register_module"], [71, 1, 1, "", "register_parameter"], [71, 1, 1, "", "register_state_dict_pre_hook"], [71, 1, 1, "", "requires_grad_"], [71, 1, 1, "id1", "reset"], [71, 3, 1, "", "reset_keys"], [71, 3, 1, "", "reward_key"], [71, 3, 1, "", "reward_keys"], [71, 3, 1, "", "reward_spec"], [71, 1, 1, "id2", "rollout"], [71, 1, 1, "", "set_extra_state"], [71, 1, 1, "id3", "set_seed"], [71, 1, 1, "", "share_memory"], [71, 3, 1, "", "specs"], [71, 1, 1, "", "state_dict"], [71, 3, 1, "", "state_spec"], [71, 1, 1, "id4", "step"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_empty"], [71, 1, 1, "", "train"], [71, 1, 1, "", "type"], [71, 1, 1, "", "xpu"], [71, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[75, 3, 1, "", "action_key"], [75, 3, 1, "", "action_keys"], [75, 3, 1, "", "action_spec"], [75, 1, 1, "", "add_module"], [75, 1, 1, "", "apply"], [75, 3, 1, "", "batch_locked"], [75, 1, 1, "", "bfloat16"], [75, 1, 1, "", "buffers"], [75, 1, 1, "", "children"], [75, 1, 1, "", "close"], [75, 1, 1, "", "compile"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 3, 1, "", "done_key"], [75, 3, 1, "", "done_keys"], [75, 3, 1, "", "done_keys_groups"], [75, 3, 1, "", "done_spec"], [75, 1, 1, "", "double"], [75, 1, 1, "", "eval"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "fake_tensordict"], [75, 1, 1, "", "float"], [75, 1, 1, "", "forward"], [75, 3, 1, "", "full_action_spec"], [75, 3, 1, "", "full_done_spec"], [75, 3, 1, "", "full_reward_spec"], [75, 3, 1, "", "full_state_spec"], [75, 1, 1, "", "get_buffer"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "get_parameter"], [75, 1, 1, "", "get_submodule"], [75, 1, 1, "", "half"], [75, 3, 1, "", "input_spec"], [75, 1, 1, "", "ipu"], [75, 1, 1, "", "load_state_dict"], [75, 1, 1, "", "modules"], [75, 1, 1, "", "named_buffers"], [75, 1, 1, "", "named_children"], [75, 1, 1, "", "named_modules"], [75, 1, 1, "", "named_parameters"], [75, 3, 1, "", "observation_spec"], [75, 3, 1, "", "output_spec"], [75, 1, 1, "", "parameters"], [75, 1, 1, "", "rand_action"], [75, 1, 1, "", "rand_step"], [75, 1, 1, "", "read_action"], [75, 1, 1, "", "read_done"], [75, 1, 1, "", "read_obs"], [75, 1, 1, "", "read_reward"], [75, 1, 1, "", "register_backward_hook"], [75, 1, 1, "", "register_buffer"], [75, 1, 1, "", "register_forward_hook"], [75, 1, 1, "", "register_forward_pre_hook"], [75, 1, 1, "", "register_full_backward_hook"], [75, 1, 1, "", "register_full_backward_pre_hook"], [75, 1, 1, "", "register_load_state_dict_post_hook"], [75, 1, 1, "", "register_module"], [75, 1, 1, "", "register_parameter"], [75, 1, 1, "", "register_state_dict_pre_hook"], [75, 1, 1, "", "requires_grad_"], [75, 1, 1, "", "reset"], [75, 3, 1, "", "reset_keys"], [75, 3, 1, "", "reward_key"], [75, 3, 1, "", "reward_keys"], [75, 3, 1, "", "reward_spec"], [75, 1, 1, "", "rollout"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "set_info_dict_reader"], [75, 1, 1, "", "set_seed"], [75, 1, 1, "", "share_memory"], [75, 3, 1, "", "specs"], [75, 1, 1, "", "state_dict"], [75, 3, 1, "", "state_spec"], [75, 1, 1, "", "step"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_empty"], [75, 1, 1, "", "train"], [75, 1, 1, "", "type"], [75, 1, 1, "", "xpu"], [75, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[87, 3, 1, "", "action_key"], [87, 3, 1, "", "action_keys"], [87, 3, 1, "", "action_spec"], [87, 1, 1, "", "add_module"], [87, 1, 1, "", "apply"], [87, 3, 1, "", "batch_locked"], [87, 1, 1, "", "bfloat16"], [87, 1, 1, "", "buffers"], [87, 1, 1, "", "children"], [87, 1, 1, "", "compile"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 3, 1, "", "done_key"], [87, 3, 1, "", "done_keys"], [87, 3, 1, "", "done_keys_groups"], [87, 3, 1, "", "done_spec"], [87, 1, 1, "", "double"], [87, 1, 1, "", "eval"], [87, 1, 1, "", "extra_repr"], [87, 1, 1, "", "fake_tensordict"], [87, 1, 1, "", "float"], [87, 1, 1, "", "forward"], [87, 3, 1, "", "full_action_spec"], [87, 3, 1, "", "full_done_spec"], [87, 3, 1, "", "full_reward_spec"], [87, 3, 1, "", "full_state_spec"], [87, 1, 1, "", "get_buffer"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "get_parameter"], [87, 1, 1, "", "get_submodule"], [87, 1, 1, "", "half"], [87, 3, 1, "", "input_spec"], [87, 1, 1, "", "ipu"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "modules"], [87, 1, 1, "", "named_buffers"], [87, 1, 1, "", "named_children"], [87, 1, 1, "", "named_modules"], [87, 1, 1, "", "named_parameters"], [87, 3, 1, "", "observation_spec"], [87, 3, 1, "", "output_spec"], [87, 1, 1, "", "parameters"], [87, 1, 1, "", "rand_action"], [87, 1, 1, "", "rand_step"], [87, 1, 1, "", "register_backward_hook"], [87, 1, 1, "", "register_buffer"], [87, 1, 1, "", "register_forward_hook"], [87, 1, 1, "", "register_forward_pre_hook"], [87, 1, 1, "", "register_full_backward_hook"], [87, 1, 1, "", "register_full_backward_pre_hook"], [87, 1, 1, "", "register_load_state_dict_post_hook"], [87, 1, 1, "", "register_module"], [87, 1, 1, "", "register_parameter"], [87, 1, 1, "", "register_state_dict_pre_hook"], [87, 1, 1, "", "requires_grad_"], [87, 1, 1, "", "reset"], [87, 3, 1, "", "reset_keys"], [87, 3, 1, "", "reward_key"], [87, 3, 1, "", "reward_keys"], [87, 3, 1, "", "reward_spec"], [87, 1, 1, "", "rollout"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "", "set_seed"], [87, 1, 1, "", "share_memory"], [87, 3, 1, "", "specs"], [87, 1, 1, "", "state_dict"], [87, 3, 1, "", "state_spec"], [87, 1, 1, "", "step"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_empty"], [87, 1, 1, "", "train"], [87, 1, 1, "", "type"], [87, 1, 1, "", "update_kwargs"], [87, 1, 1, "", "xpu"], [87, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[93, 3, 1, "", "action_key"], [93, 3, 1, "", "action_keys"], [93, 3, 1, "", "action_spec"], [93, 1, 1, "", "add_module"], [93, 1, 1, "", "apply"], [93, 3, 1, "", "batch_locked"], [93, 1, 1, "", "bfloat16"], [93, 1, 1, "", "buffers"], [93, 1, 1, "", "children"], [93, 1, 1, "", "compile"], [93, 1, 1, "", "cpu"], [93, 1, 1, "", "cuda"], [93, 3, 1, "", "done_key"], [93, 3, 1, "", "done_keys"], [93, 3, 1, "", "done_keys_groups"], [93, 3, 1, "", "done_spec"], [93, 1, 1, "", "double"], [93, 1, 1, "", "eval"], [93, 1, 1, "", "extra_repr"], [93, 1, 1, "", "fake_tensordict"], [93, 1, 1, "", "float"], [93, 1, 1, "", "forward"], [93, 3, 1, "", "full_action_spec"], [93, 3, 1, "", "full_done_spec"], [93, 3, 1, "", "full_reward_spec"], [93, 3, 1, "", "full_state_spec"], [93, 1, 1, "", "get_buffer"], [93, 1, 1, "", "get_extra_state"], [93, 1, 1, "", "get_parameter"], [93, 1, 1, "", "get_submodule"], [93, 1, 1, "", "half"], [93, 3, 1, "", "input_spec"], [93, 1, 1, "", "ipu"], [93, 1, 1, "", "load_state_dict"], [93, 1, 1, "", "modules"], [93, 1, 1, "", "named_buffers"], [93, 1, 1, "", "named_children"], [93, 1, 1, "", "named_modules"], [93, 1, 1, "", "named_parameters"], [93, 3, 1, "", "observation_spec"], [93, 3, 1, "", "output_spec"], [93, 1, 1, "", "parameters"], [93, 1, 1, "", "rand_action"], [93, 1, 1, "", "rand_step"], [93, 1, 1, "", "register_backward_hook"], [93, 1, 1, "", "register_buffer"], [93, 1, 1, "", "register_forward_hook"], [93, 1, 1, "", "register_forward_pre_hook"], [93, 1, 1, "", "register_full_backward_hook"], [93, 1, 1, "", "register_full_backward_pre_hook"], [93, 1, 1, "", "register_load_state_dict_post_hook"], [93, 1, 1, "", "register_module"], [93, 1, 1, "", "register_parameter"], [93, 1, 1, "", "register_state_dict_pre_hook"], [93, 1, 1, "", "requires_grad_"], [93, 1, 1, "", "reset"], [93, 3, 1, "", "reset_keys"], [93, 3, 1, "", "reward_key"], [93, 3, 1, "", "reward_keys"], [93, 3, 1, "", "reward_spec"], [93, 1, 1, "", "rollout"], [93, 1, 1, "", "set_extra_state"], [93, 1, 1, "", "set_seed"], [93, 1, 1, "", "share_memory"], [93, 3, 1, "", "specs"], [93, 1, 1, "", "state_dict"], [93, 3, 1, "", "state_spec"], [93, 1, 1, "", "step"], [93, 1, 1, "", "to"], [93, 1, 1, "", "to_empty"], [93, 1, 1, "", "train"], [93, 1, 1, "", "type"], [93, 1, 1, "", "update_kwargs"], [93, 1, 1, "", "xpu"], [93, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[98, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[100, 0, 1, "", "ActionMask"], [101, 0, 1, "", "BinarizeReward"], [102, 0, 1, "", "CatFrames"], [103, 0, 1, "", "CatTensors"], [104, 0, 1, "", "CenterCrop"], [105, 0, 1, "", "ClipTransform"], [106, 0, 1, "", "Compose"], [107, 0, 1, "", "DTypeCastTransform"], [108, 0, 1, "", "DeviceCastTransform"], [109, 0, 1, "", "DiscreteActionProjection"], [110, 0, 1, "", "DoubleToFloat"], [111, 0, 1, "", "ExcludeTransform"], [112, 0, 1, "", "FiniteTensorDictCheck"], [113, 0, 1, "", "FlattenObservation"], [114, 0, 1, "", "FrameSkipTransform"], [115, 0, 1, "", "GrayScale"], [116, 0, 1, "", "InitTracker"], [117, 0, 1, "", "KLRewardTransform"], [118, 0, 1, "", "NoopResetEnv"], [119, 0, 1, "", "ObservationNorm"], [120, 0, 1, "", "ObservationTransform"], [121, 0, 1, "", "PermuteTransform"], [122, 0, 1, "", "PinMemoryTransform"], [123, 0, 1, "", "R3MTransform"], [124, 0, 1, "", "RandomCropTensorDict"], [125, 0, 1, "", "RenameTransform"], [126, 0, 1, "", "Resize"], [127, 0, 1, "", "Reward2GoTransform"], [128, 0, 1, "", "RewardClipping"], [129, 0, 1, "", "RewardScaling"], [130, 0, 1, "", "RewardSum"], [131, 0, 1, "", "SelectTransform"], [132, 0, 1, "", "SqueezeTransform"], [133, 0, 1, "", "StepCounter"], [134, 0, 1, "", "TargetReturn"], [135, 0, 1, "", "TensorDictPrimer"], [136, 0, 1, "", "TimeMaxPool"], [137, 0, 1, "", "ToTensorImage"], [138, 0, 1, "", "Transform"], [139, 0, 1, "", "TransformedEnv"], [140, 0, 1, "", "UnsqueezeTransform"], [141, 0, 1, "", "VC1Transform"], [142, 0, 1, "", "VIPRewardTransform"], [143, 0, 1, "", "VIPTransform"], [144, 0, 1, "", "VecNorm"], [145, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[101, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "reset"], [102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[105, 1, 1, "", "transform_observation_spec"], [105, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "reset"], [106, 1, 1, "", "to"], [106, 1, 1, "", "transform_env_device"], [106, 1, 1, "", "transform_input_spec"], [106, 1, 1, "", "transform_observation_spec"], [106, 1, 1, "", "transform_output_spec"], [106, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "transform_input_spec"], [107, 1, 1, "", "transform_observation_spec"], [107, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "transform_done_spec"], [108, 1, 1, "", "transform_env_device"], [108, 1, 1, "", "transform_input_spec"], [108, 1, 1, "", "transform_observation_spec"], [108, 1, 1, "", "transform_output_spec"], [108, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[109, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "reset"], [111, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[114, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[115, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "reset"], [116, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[118, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[119, 1, 1, "", "init_stats"], [119, 1, 1, "", "transform_input_spec"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[121, 1, 1, "", "transform_input_spec"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[122, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[123, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[124, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[127, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[128, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[129, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "reset"], [130, 1, 1, "", "transform_input_spec"], [130, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "reset"], [133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_observation_spec"], [133, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "reset"], [134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "reset"], [135, 1, 1, "", "to"], [135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "reset"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[138, 3, 1, "", "container"], [138, 1, 1, "", "forward"], [138, 3, 1, "", "parent"], [138, 1, 1, "", "reset"], [138, 1, 1, "", "to"], [138, 1, 1, "", "transform_done_spec"], [138, 1, 1, "", "transform_env_device"], [138, 1, 1, "", "transform_input_spec"], [138, 1, 1, "", "transform_observation_spec"], [138, 1, 1, "", "transform_output_spec"], [138, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[139, 3, 1, "", "batch_locked"], [139, 1, 1, "", "eval"], [139, 3, 1, "", "input_spec"], [139, 1, 1, "", "load_state_dict"], [139, 3, 1, "", "output_spec"], [139, 1, 1, "", "set_missing_tolerance"], [139, 1, 1, "", "set_seed"], [139, 1, 1, "", "state_dict"], [139, 1, 1, "", "to"], [139, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[140, 1, 1, "", "transform_input_spec"], [140, 1, 1, "", "transform_observation_spec"], [140, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "make_noload_model"], [141, 1, 1, "", "to"], [141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "reset"], [142, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[143, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[144, 1, 1, "", "build_td_for_shared_vecnorm"], [144, 1, 1, "", "forward"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[146, 2, 1, "", "check_env_specs"], [147, 2, 1, "", "exploration_mode"], [148, 2, 1, "", "exploration_type"], [149, 2, 1, "", "get_available_libraries"], [150, 2, 1, "", "make_composite_from_td"], [151, 2, 1, "", "set_exploration_mode"], [152, 2, 1, "", "set_exploration_type"], [153, 2, 1, "", "step_mdp"], [154, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[155, 0, 1, "", "CEMPlanner"], [156, 0, 1, "", "ConvNet"], [157, 0, 1, "", "DTActor"], [158, 0, 1, "", "DdpgCnnActor"], [159, 0, 1, "", "DdpgCnnQNet"], [160, 0, 1, "", "DdpgMlpActor"], [161, 0, 1, "", "DdpgMlpQNet"], [162, 0, 1, "", "DecisionTransformer"], [163, 0, 1, "", "Delta"], [164, 0, 1, "", "DistributionalDQNnet"], [165, 0, 1, "", "DistributionalQValueHook"], [166, 0, 1, "", "DreamerActor"], [167, 0, 1, "", "DuelingCnnDQNet"], [168, 0, 1, "", "IndependentNormal"], [169, 0, 1, "", "LSTMModule"], [170, 0, 1, "", "LSTMNet"], [171, 0, 1, "", "MLP"], [172, 0, 1, "", "MPCPlannerBase"], [173, 0, 1, "", "MPPIPlanner"], [174, 0, 1, "", "MaskedCategorical"], [175, 0, 1, "", "MaskedOneHotCategorical"], [176, 0, 1, "", "MultiAgentConvNet"], [177, 0, 1, "", "MultiAgentMLP"], [178, 0, 1, "", "NoisyLazyLinear"], [179, 0, 1, "", "NoisyLinear"], [180, 0, 1, "", "NormalParamWrapper"], [181, 0, 1, "", "ObsDecoder"], [182, 0, 1, "", "ObsEncoder"], [183, 0, 1, "", "OneHotCategorical"], [184, 0, 1, "", "OnlineDTActor"], [185, 0, 1, "", "QMixer"], [186, 0, 1, "", "QValueHook"], [187, 0, 1, "", "RSSMPosterior"], [188, 0, 1, "", "RSSMPrior"], [189, 0, 1, "", "Squeeze2dLayer"], [190, 0, 1, "", "SqueezeLayer"], [191, 0, 1, "", "TanhDelta"], [192, 0, 1, "", "TanhNormal"], [193, 0, 1, "", "TruncatedNormal"], [194, 0, 1, "", "VDNMixer"], [195, 0, 1, "", "VmapModule"], [196, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[155, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[156, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[157, 1, 1, "", "default_config"], [157, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[158, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[159, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[160, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[161, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[162, 0, 1, "", "DTConfig"], [162, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[163, 1, 1, "", "log_prob"], [163, 3, 1, "", "mean"], [163, 3, 1, "", "mode"], [163, 1, 1, "", "rsample"], [163, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[164, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[166, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[167, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[168, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "set_recurrent_mode"], [169, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[170, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[171, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[173, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[174, 1, 1, "", "log_prob"], [174, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[175, 1, 1, "", "log_prob"], [175, 1, 1, "", "rsample"], [175, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[176, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[177, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[178, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[180, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[181, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[182, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[183, 1, 1, "", "log_prob"], [183, 3, 1, "", "mode"], [183, 1, 1, "", "rsample"], [183, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[184, 1, 1, "", "default_config"], [184, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[185, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[187, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[188, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[190, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[191, 3, 1, "", "mean"], [191, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[192, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[193, 1, 1, "", "log_prob"], [193, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[194, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[195, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[197, 0, 1, "", "Actor"], [198, 0, 1, "", "ActorCriticOperator"], [199, 0, 1, "", "ActorCriticWrapper"], [200, 0, 1, "", "ActorValueOperator"], [201, 0, 1, "", "AdditiveGaussianWrapper"], [202, 0, 1, "", "DecisionTransformerInferenceWrapper"], [203, 0, 1, "", "DistributionalQValueActor"], [204, 0, 1, "", "DistributionalQValueModule"], [205, 0, 1, "", "EGreedyModule"], [206, 0, 1, "", "LMHeadActorValueOperator"], [207, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [208, 0, 1, "", "ProbabilisticActor"], [209, 0, 1, "", "QValueActor"], [210, 0, 1, "", "QValueModule"], [211, 0, 1, "", "SafeModule"], [212, 0, 1, "", "SafeProbabilisticModule"], [213, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [214, 0, 1, "", "SafeSequential"], [215, 0, 1, "", "TanhModule"], [216, 0, 1, "", "ValueOperator"], [217, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[198, 1, 1, "", "get_critic_operator"], [198, 1, 1, "", "get_policy_head"], [198, 1, 1, "", "get_value_head"], [198, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[199, 1, 1, "", "get_policy_head"], [199, 1, 1, "", "get_policy_operator"], [199, 1, 1, "", "get_value_head"], [199, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[200, 1, 1, "", "get_policy_head"], [200, 1, 1, "", "get_policy_operator"], [200, 1, 1, "", "get_value_head"], [200, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "mask_context"], [202, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[204, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[210, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[211, 1, 1, "", "random"], [211, 1, 1, "", "random_sample"], [211, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[212, 1, 1, "", "random"], [212, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[215, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[217, 1, 1, "", "get_reward_operator"], [217, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[218, 0, 1, "", "biased_softplus"], [219, 0, 1, "", "inv_softplus"], [220, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[218, 1, 1, "", "forward"]], "torchrl.objectives": [[221, 0, 1, "", "A2CLoss"], [222, 0, 1, "", "CQLLoss"], [223, 0, 1, "", "ClipPPOLoss"], [224, 0, 1, "", "DDPGLoss"], [225, 0, 1, "", "DQNLoss"], [226, 0, 1, "", "DTLoss"], [227, 0, 1, "", "DiscreteSACLoss"], [228, 0, 1, "", "DistributionalDQNLoss"], [229, 0, 1, "", "DreamerActorLoss"], [230, 0, 1, "", "DreamerModelLoss"], [231, 0, 1, "", "DreamerValueLoss"], [232, 0, 1, "", "HardUpdate"], [233, 0, 1, "", "IQLLoss"], [234, 0, 1, "", "KLPENPPOLoss"], [235, 0, 1, "", "LossModule"], [236, 0, 1, "", "OnlineDTLoss"], [237, 0, 1, "", "PPOLoss"], [238, 0, 1, "", "REDQLoss"], [239, 0, 1, "", "ReinforceLoss"], [240, 0, 1, "", "SACLoss"], [241, 0, 1, "", "SoftUpdate"], [242, 0, 1, "", "TD3Loss"], [243, 0, 1, "", "ValueEstimators"], [244, 0, 1, "", "default_value_kwargs"], [245, 0, 1, "", "distance_loss"], [246, 0, 1, "", "hold_out_net"], [247, 0, 1, "", "hold_out_params"], [249, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[223, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[226, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[230, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[231, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "loss_value_diff"], [233, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[234, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[235, 1, 1, "", "convert_to_functional"], [235, 1, 1, "", "forward"], [235, 1, 1, "", "make_value_estimator"], [235, 1, 1, "", "named_parameters"], [235, 1, 1, "", "parameters"], [235, 1, 1, "", "set_keys"], [235, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[236, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[242, 1, 1, "", "forward"], [242, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[248, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[250, 0, 1, "", "GAE"], [251, 0, 1, "", "TD0Estimator"], [252, 0, 1, "", "TD1Estimator"], [253, 0, 1, "", "TDLambdaEstimator"], [254, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "set_keys"], [254, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[255, 0, 1, "", "generalized_advantage_estimate"], [256, 0, 1, "", "reward2go"], [257, 0, 1, "", "td0_advantage_estimate"], [258, 0, 1, "", "td0_return_estimate"], [259, 0, 1, "", "td1_advantage_estimate"], [260, 0, 1, "", "td1_return_estimate"], [261, 0, 1, "", "td_lambda_advantage_estimate"], [262, 0, 1, "", "td_lambda_return_estimate"], [263, 0, 1, "", "vec_generalized_advantage_estimate"], [264, 0, 1, "", "vec_td1_advantage_estimate"], [265, 0, 1, "", "vec_td1_return_estimate"], [266, 0, 1, "", "vec_td_lambda_advantage_estimate"], [267, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[268, 2, 1, "", "TensorDictRecorder"], [269, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[270, 2, 1, "", "Logger"], [272, 2, 1, "", "generate_exp_name"], [273, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[271, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[274, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[275, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[276, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[277, 0, 1, "", "BatchSubSampler"], [278, 0, 1, "", "ClearCudaCache"], [279, 0, 1, "", "CountFramesLog"], [280, 0, 1, "", "LogReward"], [281, 0, 1, "", "OptimizerHook"], [282, 0, 1, "", "Recorder"], [283, 0, 1, "", "ReplayBufferTrainer"], [284, 0, 1, "", "RewardNormalizer"], [285, 0, 1, "", "SelectKeys"], [286, 0, 1, "", "Trainer"], [287, 0, 1, "", "TrainerHookBase"], [288, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[277, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[278, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[279, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[280, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[281, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[282, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[283, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[284, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[285, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[287, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[288, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[289, 2, 1, "", "correct_for_frame_skip"], [290, 2, 1, "", "get_stats_random_rollout"], [291, 2, 1, "", "make_collector_offpolicy"], [292, 2, 1, "", "make_collector_onpolicy"], [293, 2, 1, "", "make_dqn_loss"], [294, 2, 1, "", "make_redq_loss"], [295, 2, 1, "", "make_redq_model"], [296, 2, 1, "", "make_replay_buffer"], [297, 2, 1, "", "make_target_updater"], [298, 2, 1, "", "make_trainer"], [299, 2, 1, "", "parallel_env_constructor"], [300, 2, 1, "", "sync_async_collector"], [301, 2, 1, "", "sync_sync_collector"], [302, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 306, 307, 308, 309, 310, 311, 312, 316, 317, 321, 322], "tutori": [0, 312, 316], "basic": [0, 319], "intermedi": [0, 8], "advanc": 0, "refer": [0, 304], "knowledg": [0, 305], "base": [0, 7, 305], "indic": 0, "tabl": 0, "collector": [1, 310, 311, 312, 313, 316, 321], "packag": [1, 2, 3, 306, 307, 308, 309], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 310, 311, 312, 316, 321], "distribut": [1, 306], "helper": [1, 3], "function": [1, 4, 307, 311, 312, 316, 321], "replai": [2, 310, 311, 312, 313, 316, 319, 321], "buffer": [2, 310, 311, 312, 313, 316, 319, 321], "compos": [2, 106], "store": [2, 311], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 307, 312, 316], "learn": [2, 4, 312, 316], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 306, 307, 308], "env": [3, 317, 321, 322], "vector": [3, 321], "multi": [3, 306, 307, 315, 316], "agent": [3, 4, 306, 307, 316], "environ": [3, 4, 6, 7, 310, 311, 312, 313, 315, 316, 317, 321, 322], "transform": [3, 138, 310, 312, 316, 317, 319, 321, 322], "clone": [3, 7], "mask": 3, "action": [3, 4, 313, 317], "record": [3, 282, 308, 310], "domain": [3, 306], "specif": [3, 306, 315], "librari": [3, 321], "thing": [4, 310, 317], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 321], "gener": [4, 306], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 310, 317], "algorithm": [4, 306], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 310, 311], "return": [4, 307], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 310, 312, 313, 315, 316, 317], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 321], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 315], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 310, 311, 312], "standard": 4, "explor": [4, 306, 310, 311], "valu": [4, 306, 307, 310, 312, 313], "loss": [4, 310, 311, 312, 313, 316], "earli": 4, "train": [4, 8, 307, 310, 312, 313, 316, 317], "roughli": 4, "uniformli": 4, "random": [4, 316], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 311], "increas": 4, "an": [4, 312, 313, 317], "dynam": [4, 319], "can": 4, "low": 4, "forward": [4, 310], "model": [4, 306, 310, 311, 313, 318, 321], "also": 4, "us": [4, 6, 9, 313, 318, 319, 321], "offlin": 4, "observ": [4, 310], "space": 4, "effect": [4, 317], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 322], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 321], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 316, 322], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 310], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 317], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 310, 319], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "braxenv": 67, "braxwrapp": 68, "dmcontrolenv": 69, "dmcontrolwrapp": 70, "envbas": [71, 317], "envcreat": 72, "envmetadata": 73, "gymenv": 74, "gymlikeenv": 75, "gymwrapp": 76, "habitatenv": 77, "isaacgymenv": 78, "isaacgymwrapp": 79, "jumanjienv": 80, "jumanjiwrapp": 81, "marlgroupmaptyp": 82, "modelbasedenvbas": 83, "multithreadedenv": 84, "multithreadedenvwrapp": 85, "openmlenv": 86, "parallelenv": 87, "pettingzooenv": 88, "pettingzoowrapp": 89, "robohiveenv": 90, "smacv2env": 91, "smacv2wrapp": 92, "serialenv": 93, "vmasenv": 94, "vmaswrapp": 95, "check_marl_group": 96, "gym_backend": 97, "dreamerenv": 98, "set_gym_backend": 99, "actionmask": 100, "binarizereward": 101, "catfram": [102, 319], "cattensor": 103, "centercrop": 104, "cliptransform": 105, "dtypecasttransform": 107, "devicecasttransform": 108, "discreteactionproject": 109, "doubletofloat": 110, "excludetransform": 111, "finitetensordictcheck": 112, "flattenobserv": 113, "frameskiptransform": 114, "grayscal": 115, "inittrack": 116, "klrewardtransform": 117, "noopresetenv": 118, "observationnorm": 119, "observationtransform": 120, "permutetransform": 121, "pinmemorytransform": 122, "r3mtransform": 123, "randomcroptensordict": 124, "renametransform": 125, "resiz": 126, "reward2gotransform": 127, "rewardclip": 128, "rewardsc": 129, "rewardsum": 130, "selecttransform": 131, "squeezetransform": 132, "stepcount": 133, "targetreturn": 134, "tensordictprim": 135, "timemaxpool": 136, "totensorimag": 137, "transformedenv": 139, "unsqueezetransform": 140, "vc1transform": 141, "viprewardtransform": 142, "viptransform": 143, "vecnorm": [144, 322], "gsdenois": 145, "check_env_spec": 146, "exploration_mod": 147, "exploration_typ": 148, "get_available_librari": 149, "make_composite_from_td": 150, "set_exploration_mod": 151, "set_exploration_typ": 152, "step_mdp": 153, "terminated_or_trunc": 154, "cemplann": 155, "convnet": 156, "dtactor": 157, "ddpgcnnactor": 158, "ddpgcnnqnet": 159, "ddpgmlpactor": 160, "ddpgmlpqnet": 161, "decisiontransform": 162, "delta": 163, "distributionaldqnnet": 164, "distributionalqvaluehook": 165, "dreameractor": 166, "duelingcnndqnet": 167, "independentnorm": 168, "lstmmodul": 169, "lstmnet": 170, "mlp": [171, 313], "mpcplannerbas": 172, "mppiplann": 173, "maskedcategor": 174, "maskedonehotcategor": 175, "multiagentconvnet": 176, "multiagentmlp": 177, "noisylazylinear": 178, "noisylinear": 179, "normalparamwrapp": 180, "obsdecod": 181, "obsencod": 182, "onehotcategor": 183, "onlinedtactor": 184, "qmixer": [185, 307], "qvaluehook": 186, "rssmposterior": 187, "rssmprior": 188, "squeeze2dlay": 189, "squeezelay": 190, "tanhdelta": 191, "tanhnorm": 192, "truncatednorm": 193, "vdnmixer": 194, "vmapmodul": 195, "reset_nois": 196, "actor": [197, 306, 310], "actorcriticoper": 198, "actorcriticwrapp": 199, "actorvalueoper": 200, "additivegaussianwrapp": 201, "decisiontransformerinferencewrapp": 202, "distributionalqvalueactor": 203, "distributionalqvaluemodul": 204, "egreedymodul": 205, "lmheadactorvalueoper": 206, "ornsteinuhlenbeckprocesswrapp": 207, "probabilisticactor": 208, "qvalueactor": 209, "qvaluemodul": 210, "safemodul": [211, 306], "safeprobabilisticmodul": 212, "safeprobabilistictensordictsequenti": 213, "safesequenti": 214, "tanhmodul": 215, "valueoper": 216, "worldmodelwrapp": 217, "biased_softplu": 218, "inv_softplu": 219, "map": 220, "a2closs": 221, "cqlloss": 222, "clipppoloss": 223, "ddpgloss": 224, "dqnloss": 225, "dtloss": 226, "discretesacloss": 227, "distributionaldqnloss": 228, "dreameractorloss": 229, "dreamermodelloss": 230, "dreamervalueloss": 231, "hardupd": 232, "iqlloss": 233, "klpenppoloss": 234, "lossmodul": [235, 310], "onlinedtloss": 236, "ppoloss": 237, "redqloss": 238, "reinforceloss": 239, "sacloss": 240, "softupd": 241, "td3loss": 242, "valueestim": 243, "default_value_kwarg": 244, "distance_loss": 245, "hold_out_net": 246, "hold_out_param": 247, "qmixerloss": 248, "next_state_valu": 249, "gae": 250, "td0estim": 251, "td1estim": 252, "tdlambdaestim": 253, "valueestimatorbas": 254, "generalized_advantage_estim": 255, "reward2go": 256, "td0_advantage_estim": 257, "td0_return_estim": 258, "td1_advantage_estim": 259, "td1_return_estim": 260, "td_lambda_advantage_estim": 261, "td_lambda_return_estim": 262, "vec_generalized_advantage_estim": 263, "vec_td1_advantage_estim": 264, "vec_td1_return_estim": 265, "vec_td_lambda_advantage_estim": 266, "vec_td_lambda_return_estim": 267, "tensordictrecord": 268, "videorecord": 269, "logger": [270, 308], "csvlogger": 271, "generate_exp_nam": 272, "get_logg": 273, "mlflowlogg": 274, "tensorboardlogg": 275, "wandblogg": 276, "batchsubsampl": 277, "clearcudacach": 278, "countframeslog": 279, "logreward": 280, "optimizerhook": 281, "replaybuffertrain": 283, "rewardnorm": 284, "selectkei": 285, "trainer": [286, 308, 311], "trainerhookbas": 287, "updateweight": 288, "correct_for_frame_skip": 289, "get_stats_random_rollout": 290, "make_collector_offpolici": 291, "make_collector_onpolici": 292, "make_dqn_loss": 293, "make_redq_loss": 294, "make_redq_model": 295, "make_replay_buff": 296, "make_target_updat": 297, "make_train": 298, "parallel_env_constructor": 299, "sync_async_collector": 300, "sync_sync_collector": 301, "transformed_env_constructor": 302, "readm": [303, 314], "tuto": [303, 314], "api": 304, "contribut": [305, 321], "content": 305, "modul": [306, 310, 313, 321], "tensordict": [306, 319, 321], "wrapper": 306, "probabilist": 306, "q": [306, 311, 313], "oper": 306, "join": 306, "hook": [306, 308, 311], "regular": 306, "planner": 306, "object": [307, 310, 321], "dqn": [307, 311, 313], "ddpg": [307, 310], "sac": 307, "redq": 307, "iql": 307, "cql": 307, "dt": 307, "td3": 307, "ppo": [307, 312, 316], "a2c": 307, "dreamer": 307, "checkpoint": 308, "builder": 308, "_util": 309, "code": [310, 317], "setup": [310, 313], "The": 310, "__init__": 310, "method": 310, "estim": 310, "put": 310, "togeth": [310, 317], "call": 310, "parallel": [310, 315, 322], "execut": [310, 315, 317], "stat": 310, "build": [310, 311, 319], "evalu": 310, "batch": [310, 317, 319], "size": [310, 319], "construct": 310, "target": [310, 311], "network": [310, 311, 312, 313, 316], "updat": 310, "time": [310, 320], "experi": [310, 317], "result": [310, 312, 316], "conclus": [310, 311, 312, 313, 316, 317, 319], "A": [311, 319], "exampl": [311, 319], "comput": [311, 317, 320], "deep": 311, "collect": [311, 312], "paramet": [311, 312], "hyperparamet": [311, 312, 316], "regist": 311, "possibl": 311, "improv": 311, "defin": [312, 316], "loop": [312, 313, 316, 317], "next": [312, 316], "step": [312, 316, 322], "recurr": 313, "convolut": 313, "lstm": 313, "select": 313, "divers": 315, "rollout": [315, 316, 317, 322], "critic": 316, "pendulum": 317, "write": 317, "_step": 317, "reset": [317, 322], "simul": 317, "_reset": 317, "metadata": 317, "_spec": 317, "spec": [317, 322], "shape": 317, "seed": [317, 322], "wrap": 317, "class": [317, 321], "test": 317, "our": 317, "custom": [317, 319], "simpl": 317, "pretrain": 318, "vanilla": 319, "integr": 319, "tensorclass": 319, "sampl": 319, "iter": 319, "over": 319, "fix": 319, "priorit": 319, "save": 319, "raw": 319, "imag": 319, "more": 319, "complex": 319, "introduct": 321, "config": 321, "tensordictmodul": 321, "sequenc": 321, "program": 321, "ensembl": 321, "meta": 321, "special": 321, "state": 321, "frame_skip": 322, "deepmind": 322, "control": 322, "devic": 322, "run": 322, "close": 322, "access": 322, "attribut": 322, "kwarg": 322}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})