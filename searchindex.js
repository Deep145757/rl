Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.gym.MOGymEnv", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper", "reference/generated/torchrl.envs.libs.gym.gym_backend", "reference/generated/torchrl.envs.libs.gym.set_gym_backend", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.MOGymEnv.rst", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.gym_backend.rst", "reference/generated/torchrl.envs.libs.gym.set_gym_backend.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "MOGymEnv", "MOGymWrapper", "gym_backend", "set_gym_backend", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 88, 92, 94, 96, 98, 100, 101, 103, 109, 110, 113, 114, 115, 117, 125, 127, 128, 129, 131, 134, 136, 145, 147, 148, 149, 150, 158, 159, 160, 161, 165, 166, 170, 177, 178, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 205, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 257, 260, 269, 270, 274, 275, 278, 287, 288, 289, 290, 293, 294, 295, 298, 299, 303, 304, 306, 307, 309, 310], "open": [0, 5, 7, 11, 299, 304, 309], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310], "reinforc": [0, 3, 9, 94, 147, 148, 149, 150, 154, 192, 195, 209, 210, 214, 216, 220, 221, 227, 228, 229, 292, 299, 302, 305, 308, 309], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 94, 147, 148, 149, 150, 154, 162, 167, 192, 195, 209, 210, 214, 216, 220, 221, 226, 227, 228, 229, 292, 294, 295, 298, 299, 301, 302, 303, 305, 307, 308, 309, 310], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 71, 124, 167, 185, 196, 204, 209, 223, 225, 265, 293, 294, 295, 296, 298, 299, 300, 304, 306, 307, 310], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 72, 139, 292, 293, 294, 297, 298, 299, 300, 304, 305, 310], "pytorch": [0, 1, 2, 3, 127, 166, 167, 274, 293, 296, 298, 300, 301, 304, 305, 306, 309, 310], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 67, 70, 71, 72, 73, 74, 85, 108, 110, 114, 124, 129, 136, 147, 149, 155, 165, 173, 175, 176, 182, 183, 192, 195, 198, 200, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 237, 238, 270, 283, 293, 294, 295, 298, 299, 301, 304, 305, 306, 307, 309, 310], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 67, 70, 71, 72, 73, 74, 95, 96, 98, 101, 104, 109, 110, 113, 114, 117, 120, 125, 129, 131, 133, 134, 145, 151, 154, 158, 159, 160, 161, 163, 164, 165, 183, 185, 189, 192, 193, 195, 196, 197, 198, 203, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 257, 261, 265, 271, 278, 283, 286, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "python": [0, 3, 5, 6, 7, 10, 21, 84, 163, 164, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 70, 94, 95, 104, 110, 113, 114, 127, 129, 131, 158, 160, 165, 166, 170, 185, 190, 191, 192, 196, 197, 199, 200, 211, 218, 222, 223, 225, 256, 273, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "low": [0, 100, 192, 203, 298, 299, 305, 309], "high": [0, 9, 41, 100, 109, 192, 203, 238, 243, 251, 298, 299, 307, 309], "level": [0, 3, 4, 22, 26, 28, 94, 222, 298, 299, 309], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 67, 111, 161, 242, 266, 275, 296, 300, 305, 309], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 67, 68, 70, 71, 72, 73, 74, 88, 97, 98, 100, 101, 103, 104, 108, 109, 113, 120, 125, 127, 128, 129, 130, 131, 133, 134, 140, 144, 150, 152, 158, 159, 161, 163, 164, 167, 171, 173, 176, 190, 191, 195, 196, 197, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 233, 236, 237, 238, 239, 240, 241, 242, 271, 286, 290, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 100, 183, 223, 294, 309], "effici": [0, 1, 2, 4, 8, 167, 294, 298, 299, 300, 301, 303, 304, 306, 307, 309], "modular": [0, 202, 307, 309], "document": [0, 5, 7, 18, 19, 21, 32, 67, 70, 72, 73, 74, 129, 299, 309], "properli": [0, 67, 70, 72, 73, 74, 300, 304, 305, 309], "test": [0, 3, 5, 131, 136, 158, 159, 270, 286, 300, 301, 309], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 72, 73, 74, 94, 97, 98, 101, 102, 110, 113, 117, 119, 121, 124, 125, 128, 129, 131, 133, 143, 144, 147, 148, 149, 150, 151, 158, 159, 161, 162, 163, 164, 167, 168, 174, 175, 176, 185, 186, 190, 192, 195, 196, 198, 199, 200, 202, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 244, 259, 262, 263, 264, 265, 269, 286, 288, 289, 294, 295, 296, 299, 300, 301, 304, 305, 306, 307, 309, 310], "code": [0, 3, 5, 7, 8, 113, 131, 158, 202, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310], "aim": [0, 3, 7, 28, 29, 113, 131, 133, 160, 277, 293, 294, 295, 298, 299, 309], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 72, 88, 110, 128, 139, 154, 183, 191, 192, 199, 202, 216, 238, 239, 240, 241, 262, 294, 296, 300, 301, 304, 305, 307, 309], "research": [0, 7, 9, 309], "most": [0, 3, 7, 8, 32, 100, 298, 300, 305, 309, 310], "written": [0, 3, 34, 36, 39, 45, 52, 55, 67, 70, 72, 73, 74, 94, 108, 120, 123, 126, 143, 185, 195, 196, 199, 200, 204, 209, 211, 222, 225, 227, 237, 256, 257, 294, 295, 296, 298, 301, 303, 305, 309], "highli": [0, 2, 309, 310], "wai": [0, 3, 4, 113, 115, 133, 225, 238, 239, 240, 241, 294, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 67, 68, 70, 72, 73, 74, 84, 92, 94, 97, 98, 100, 101, 109, 110, 113, 114, 117, 120, 124, 125, 128, 129, 131, 133, 134, 144, 157, 158, 161, 162, 165, 167, 168, 181, 183, 185, 189, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 270, 283, 288, 289, 290, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "easili": [0, 3, 7, 283, 295, 298, 299, 300, 304, 309, 310], "swap": [0, 3, 300, 306, 309], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 154, 174, 191, 192, 198, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 269, 274, 298, 299, 300, 301, 303, 304, 305, 306, 309], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 146, 147, 151, 154, 155, 172, 173, 174, 182, 190, 194, 203, 206, 208, 214, 224, 257, 271, 283, 290, 292, 299, 301, 302, 306, 308], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 72, 73, 74, 98, 101, 129, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 182, 183, 189, 190, 192, 193, 195, 198, 203, 206, 222, 257, 298, 299, 301, 303, 304, 305, 306, 307, 309, 310], "write": [0, 3, 8, 23, 32, 37, 45, 70, 112, 185, 199, 200, 202, 204, 210, 212, 213, 215, 221, 226, 228, 230, 237, 242, 257, 294, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 67, 70, 72, 73, 74, 120, 128, 134, 143, 158, 195, 199, 200, 205, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 298, 300, 301, 304, 305, 309, 310], "ones": [0, 15, 26, 32, 35, 41, 42, 67, 70, 72, 73, 74, 95, 97, 98, 99, 101, 110, 113, 117, 124, 125, 128, 129, 131, 133, 163, 164, 183, 199, 209, 210, 212, 221, 225, 226, 228, 230, 244, 298, 300, 304, 305, 307, 309, 310], "littl": [0, 3, 43, 300, 301, 307, 309, 310], "effort": [0, 3, 305, 307, 309], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 84, 85, 92, 94, 95, 97, 98, 99, 100, 101, 103, 105, 107, 108, 110, 113, 114, 115, 117, 120, 121, 125, 126, 128, 129, 131, 132, 133, 134, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 238, 239, 240, 241, 242, 256, 265, 267, 270, 271, 274, 276, 277, 278, 283, 286, 290, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "repo": [0, 6, 52, 131, 293, 304, 309], "attempt": [0, 189, 193, 195, 213, 221, 236, 309], "align": [0, 309], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 67, 70, 72, 73, 74, 95, 99, 129, 278, 290, 304, 309, 310], "ecosystem": [0, 309], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 67, 68, 70, 72, 73, 74, 94, 125, 129, 158, 189, 192, 193, 195, 200, 222, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 88, 134, 292, 298, 299, 306, 307, 309, 310], "pillar": [0, 309], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 105, 109, 110, 113, 114, 124, 128, 129, 131, 134, 136, 144, 158, 159, 161, 162, 189, 193, 195, 217, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 265, 267, 270, 277, 278, 279, 280, 283, 286, 287, 288, 289, 290, 292, 293, 294, 302, 306, 307, 308], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 67, 70, 71, 72, 73, 74, 98, 113, 125, 131, 133, 135, 145, 146, 151, 158, 160, 161, 162, 165, 172, 173, 182, 186, 187, 188, 194, 199, 205, 209, 210, 211, 213, 214, 217, 218, 219, 221, 222, 223, 225, 226, 228, 236, 274, 279, 280, 281, 282, 283, 292, 293, 296, 300, 302, 304, 305, 307, 308, 310], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 88, 92, 94, 98, 99, 101, 108, 110, 117, 123, 136, 140, 144, 154, 158, 159, 162, 165, 174, 183, 185, 191, 193, 195, 196, 197, 199, 202, 203, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 265, 271, 274, 276, 279, 286, 288, 289, 290, 292, 294, 295, 296, 301, 305, 306, 307, 310], "util": [0, 3, 17, 23, 32, 40, 67, 70, 72, 73, 74, 113, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 151, 206, 207, 208, 223, 286, 292, 297, 298, 300, 304, 305, 309, 310], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 67, 68, 70, 72, 73, 74, 95, 97, 104, 110, 113, 120, 125, 128, 129, 131, 133, 136, 157, 158, 162, 165, 168, 174, 180, 181, 190, 192, 196, 198, 199, 200, 237, 238, 239, 240, 241, 265, 277, 289, 294, 298, 299, 300, 304, 305, 306, 309, 310], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 67, 68, 70, 72, 73, 74, 95, 97, 104, 110, 113, 120, 125, 128, 129, 131, 133, 136, 157, 158, 162, 165, 180, 181, 190, 196, 199, 200, 237, 247, 248, 249, 250, 252, 253, 254, 255, 289, 294, 298, 299, 300, 304, 305, 306, 309, 310], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 94, 117, 123, 195, 271, 274, 276, 279, 280, 286, 288, 289, 292, 296, 307, 310], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 67, 70, 71, 72, 73, 74, 97, 98, 101, 113, 125, 128, 129, 131, 133, 134, 143, 144, 145, 160, 162, 165, 185, 191, 192, 196, 198, 199, 204, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 244, 261, 265, 277, 283, 286, 287, 288, 289, 290, 294, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 67, 70, 72, 73, 74, 108, 129, 160, 165, 298, 299, 300, 307, 309, 310], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 67, 70, 72, 73, 74, 94, 98, 101, 108, 109, 110, 124, 125, 128, 129, 134, 136, 145, 159, 160, 165, 183, 201, 202, 209, 211, 222, 225, 233, 236, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 274, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "few": [0, 2, 8, 265, 300, 301, 304, 307, 309, 310], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 98, 101, 204, 225, 294, 298, 300, 301, 304, 305, 309, 310], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 145, 199, 270, 274, 294, 298, 300, 301, 304, 305, 307, 309, 310], "standard": [0, 3, 110, 119, 134, 144, 155, 162, 166, 167, 189, 190, 230, 238, 239, 240, 241, 298, 299, 304, 307, 309], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 127, 274, 305, 307, 309, 310], "common": [0, 3, 4, 21, 70, 73, 74, 92, 186, 187, 188, 194, 209, 210, 211, 215, 221, 222, 225, 226, 227, 228, 230, 286, 293, 294, 296, 298, 300, 303, 304, 306, 309, 310], "openai": [0, 7, 79, 80, 300, 305, 309, 310], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 94, 107, 108, 110, 115, 117, 125, 128, 134, 158, 283, 286, 293, 298, 299, 300, 301, 305, 306, 307, 309], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 94, 95, 97, 98, 100, 101, 104, 110, 113, 114, 117, 124, 125, 128, 129, 131, 133, 134, 158, 159, 165, 185, 190, 191, 196, 197, 199, 200, 201, 202, 209, 211, 212, 215, 221, 222, 223, 225, 226, 227, 228, 229, 230, 238, 239, 240, 241, 242, 278, 296, 298, 299, 300, 301, 303, 304, 305, 307, 309, 310], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 68, 70, 71, 72, 73, 74, 77, 88, 92, 93, 94, 95, 96, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 183, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 262, 265, 267, 268, 269, 270, 271, 272, 274, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 294, 301, 304, 305, 307, 309], "On": [0, 3, 7, 18, 19, 20, 21, 294, 299, 304], "end": [0, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 124, 129, 145, 161, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "come": [0, 1, 3, 8, 73, 74, 98, 101, 185, 186, 187, 188, 196, 204, 298, 299, 300, 301, 304, 307, 309, 310], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 84, 92, 95, 97, 98, 101, 107, 108, 113, 123, 124, 125, 128, 129, 131, 133, 136, 141, 142, 158, 161, 165, 189, 190, 199, 223, 225, 242, 265, 270, 271, 280, 290, 293, 294, 295, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "re": [0, 3, 8, 32, 62, 67, 70, 72, 73, 74, 158, 163, 164, 196, 200, 296, 298, 300, 301, 303, 305, 309, 310], "usabl": [0, 296, 301, 309], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 84, 98, 101, 129, 134, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 170, 171, 172, 175, 176, 178, 181, 183, 186, 187, 188, 189, 190, 192, 193, 195, 196, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 283, 286, 292, 294, 298, 301, 303, 305, 307, 310], "cost": [0, 2, 27, 298, 299, 304, 305, 307], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 143, 144, 146, 147, 148, 149, 150, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 171, 172, 173, 175, 176, 179, 180, 181, 182, 185, 186, 187, 188, 190, 196, 198, 199, 200, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 233, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 274, 277, 279, 283, 286, 287, 288, 289, 290, 292, 294, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 67, 68, 70, 72, 73, 74, 134, 165, 192, 195, 198, 296, 298, 299, 301, 304, 305, 306, 307, 309, 310], "good": [0, 1, 4, 9, 298, 300, 301, 304, 309, 310], "runtim": [0, 3, 32, 67, 70, 72, 73, 74, 305], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 67, 70, 72, 73, 74, 98, 101, 109, 129, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 218, 225, 270, 274, 295, 298, 299, 300, 301, 303, 304, 305, 310], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 67, 70, 72, 73, 74, 134, 186, 187, 188, 195, 215, 223, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 294, 295, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 112, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 131, 132, 134, 171, 185, 186, 187, 188, 191, 196, 199, 200, 202, 204, 205, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 257, 270, 274, 283, 294, 298, 299, 300, 301, 303, 304, 305, 306, 310], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 127, 131, 135, 154, 160, 166, 168, 185, 189, 191, 192, 193, 199, 204, 209, 216, 223, 225, 238, 243, 251, 269, 293, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 310], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 295, 298, 299, 300, 304, 305, 309, 310], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 296, 298, 303, 306, 310], "beyond": 0, "api": [0, 3, 5, 113, 133, 295, 296, 304, 305, 309, 310], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 67, 68, 70, 71, 72, 73, 74, 94, 95, 103, 108, 114, 136, 158, 185, 191, 192, 196, 197, 198, 199, 200, 294, 295, 299, 300, 301, 303, 304, 305, 306, 307, 310], "paper": [0, 113, 131, 133, 173, 182, 220, 283, 298, 300, 304], "ppo": [0, 4, 8, 196, 200, 211, 222, 225, 292, 294, 298, 299, 302, 308], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 94, 97, 107, 108, 110, 115, 117, 125, 128, 129, 134, 158, 286, 294, 299, 300, 302, 308, 309, 310], "your": [0, 2, 3, 7, 8, 10, 18, 32, 67, 70, 72, 73, 74, 134, 290, 293, 294, 295, 299, 300, 301, 302, 304, 307, 308, 309], "introduct": [0, 295, 302, 304, 308, 310], "multi": [0, 7, 9, 28, 29, 32, 67, 70, 72, 73, 74, 158, 159, 160, 165, 236, 238, 239, 240, 241, 292, 298, 299, 300, 301, 302, 305, 308, 309], "agent": [0, 9, 28, 29, 124, 163, 164, 165, 167, 173, 182, 236, 292, 302, 305, 308], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 158, 161, 162, 199, 223, 256, 278, 279, 280, 283, 286, 288, 289, 290, 292, 294, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 67, 68, 70, 71, 72, 73, 74, 77, 84, 88, 92, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 110, 113, 114, 115, 117, 124, 125, 127, 128, 129, 131, 133, 134, 136, 141, 142, 143, 144, 145, 146, 147, 148, 151, 154, 155, 157, 158, 160, 161, 162, 164, 165, 167, 168, 171, 172, 173, 174, 180, 181, 182, 183, 185, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 251, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 284, 286, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 308, 310], "pretrain": [0, 302, 308], "recurr": [0, 158, 176, 299, 302, 307, 308], "dqn": [0, 154, 191, 192, 209, 210, 212, 213, 215, 216, 217, 220, 221, 223, 225, 226, 227, 228, 229, 230, 236, 281, 292, 294, 302, 308], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 67, 70, 72, 73, 74, 98, 105, 113, 124, 129, 131, 133, 136, 147, 149, 158, 189, 193, 195, 209, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 238, 274, 276, 286, 292, 296, 299, 302, 306, 307, 308, 310], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 67, 70, 71, 72, 73, 74, 100, 108, 124, 141, 142, 154, 158, 165, 167, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 209, 210, 211, 212, 215, 221, 222, 224, 225, 226, 227, 228, 230, 270, 276, 279, 280, 286, 288, 289, 294, 295, 296, 299, 302, 306, 307, 308, 309, 310], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 94, 100, 114, 117, 125, 210, 212, 213, 215, 221, 226, 228, 230, 271, 274, 284, 286, 292, 296, 302, 305, 306, 308], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 94, 97, 100, 113, 114, 117, 125, 128, 129, 131, 133, 199, 202, 210, 212, 213, 215, 221, 226, 228, 230, 271, 274, 284, 286, 292, 296, 302, 305, 306, 308, 310], "task": [0, 3, 9, 28, 29, 40, 45, 73, 74, 77, 113, 131, 133, 221, 298, 299, 300, 301, 302, 304, 305, 308, 309, 310], "specif": [0, 2, 5, 8, 41, 42, 70, 151, 190, 274, 292, 295, 296, 300, 301, 302, 304, 307, 308], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 98, 101, 110, 113, 128, 129, 131, 134, 162, 173, 182, 185, 186, 196, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 278, 279, 280, 285, 286, 290, 292, 294, 296, 299, 300, 301, 302, 304, 305, 307, 308, 310], "ddpg": [0, 147, 148, 149, 150, 212, 220, 229, 292, 294, 299, 302, 308], "loss": [0, 3, 8, 36, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 269, 274, 281, 282, 283, 286, 295, 296, 302, 305, 307, 308, 309], "trainer": [0, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 298, 302, 308], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 85, 100, 105, 108, 113, 114, 115, 125, 128, 129, 131, 132, 134, 135, 136, 143, 144, 145, 154, 158, 160, 162, 163, 164, 165, 167, 168, 183, 189, 190, 191, 192, 193, 196, 197, 200, 202, 203, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 233, 236, 238, 239, 240, 241, 242, 244, 258, 259, 262, 267, 274, 276, 283, 286, 295, 298, 300, 302, 304, 305, 308, 310], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 101, 107, 108, 110, 113, 115, 117, 124, 125, 127, 128, 129, 131, 133, 134, 140, 143, 144, 145, 146, 151, 154, 158, 159, 160, 162, 165, 168, 171, 172, 173, 174, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 231, 232, 236, 238, 239, 240, 241, 244, 265, 266, 267, 268, 269, 271, 272, 273, 276, 283, 286, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310], "packag": [0, 6, 7, 10, 84, 292, 293, 310], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 94, 95, 113, 133, 145, 158, 159, 160, 165, 198, 202, 211, 213, 215, 216, 222, 225, 226, 230, 238, 239, 240, 241, 247, 248, 249, 250, 252, 253, 254, 255, 283, 290, 292, 298, 299, 300, 301, 303, 304, 305, 306, 307], "node": [0, 2, 18, 19, 20, 21, 22, 283, 292], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 108, 110, 144, 152, 153, 154, 155, 157, 162, 163, 164, 168, 171, 172, 175, 176, 179, 180, 181, 189, 190, 191, 192, 196, 200, 201, 209, 210, 211, 215, 216, 221, 222, 225, 226, 227, 228, 230, 292, 296, 299, 300, 304, 305, 309, 310], "helper": [0, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 298, 299, 301, 305], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 67, 70, 72, 73, 74, 94, 128, 129, 134, 194, 218, 283, 292, 298, 299, 300, 301, 303, 304, 307, 309, 310], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 67, 70, 71, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 176, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 210, 213, 215, 226, 228, 230, 236, 292, 305], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 84, 92, 94, 95, 98, 99, 100, 101, 102, 107, 108, 110, 113, 114, 115, 117, 121, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 140, 143, 144, 147, 148, 149, 150, 151, 154, 157, 158, 160, 161, 162, 164, 165, 166, 168, 171, 172, 173, 174, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 215, 216, 217, 221, 222, 223, 225, 226, 227, 228, 230, 232, 236, 237, 238, 239, 240, 241, 256, 257, 265, 271, 274, 277, 278, 283, 284, 286, 287, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "human": [0, 292, 305], "feedback": [0, 292, 309], "rlhf": [0, 34, 40, 45, 54, 108, 292, 294], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 68, 70, 72, 73, 74, 92, 98, 101, 109, 115, 128, 129, 134, 136, 144, 161, 162, 270, 278, 279, 280, 283, 286, 288, 289, 290, 292, 301], "gymlikeenv": [0, 292], "envmetadata": [0, 292], "vector": [0, 1, 8, 24, 27, 33, 100, 147, 149, 160, 238, 241, 251, 252, 253, 254, 255, 292, 298, 299, 301, 303, 304, 305, 306, 310], "record": [0, 32, 67, 70, 72, 73, 74, 108, 225, 256, 257, 258, 259, 260, 261, 262, 263, 264, 286, 292, 299, 300], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 67, 70, 72, 73, 74, 100, 125, 140, 185, 191, 192, 196, 197, 198, 199, 200, 201, 202, 292, 300, 301, 304, 305, 309, 310], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 67, 70, 71, 72, 73, 74, 84, 97, 100, 108, 113, 114, 124, 125, 128, 129, 131, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 236, 238, 239, 240, 241, 242, 274, 281, 282, 286, 292, 295, 296, 299, 300, 303, 304, 305, 306, 307], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 143, 144, 153, 154, 158, 159, 161, 162, 173, 174, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 256, 265, 269, 270, 271, 273, 274, 283, 292, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 310], "actor": [0, 4, 15, 21, 108, 144, 146, 147, 149, 154, 155, 162, 172, 174, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 236, 283, 292, 295, 299, 300, 301, 304, 306, 309], "explor": [0, 1, 135, 167, 185, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 209, 270, 279, 280, 286, 292, 300, 301, 304, 305], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 84, 93, 94, 95, 98, 100, 101, 109, 110, 113, 114, 117, 118, 120, 125, 126, 128, 129, 133, 134, 140, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 265, 267, 268, 269, 270, 271, 274, 283, 286, 292, 296, 299, 303, 304, 305, 307, 309, 310], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 67, 68, 70, 71, 72, 73, 74, 97, 99, 108, 110, 115, 120, 121, 128, 152, 163, 164, 171, 185, 196, 200, 204, 205, 226, 232, 238, 243, 251, 260, 274, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310], "hook": [0, 32, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 174, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 292], "planner": [0, 144, 162, 292], "sac": [0, 215, 226, 228, 292], "redq": [0, 226, 282, 283, 292], "iql": [0, 221, 292, 304], "cql": [0, 210, 292], "dt": [0, 195, 292, 305], "td3": [0, 230, 292], "a2c": [0, 209, 292], "dreamer": [0, 91, 155, 217, 218, 219, 292, 294], "checkpoint": [0, 292, 306], "builder": [0, 292, 299, 310], "logger": [0, 257, 259, 260, 261, 262, 263, 264, 268, 274, 286, 290, 292, 299], "_util": [0, 3, 11, 292], "implement_for": [0, 3, 292], "contribut": 0, "thing": [0, 3, 7, 8, 293, 300, 301, 304, 307, 310], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 67, 70, 72, 73, 74, 100, 134, 152, 179, 293, 298, 305, 307], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 68, 70, 72, 73, 74, 88, 92, 94, 97, 98, 100, 101, 108, 109, 110, 113, 114, 120, 124, 125, 128, 129, 131, 133, 134, 141, 142, 144, 160, 161, 162, 163, 164, 166, 174, 180, 196, 199, 200, 202, 206, 211, 213, 216, 222, 225, 231, 236, 237, 238, 239, 240, 241, 256, 257, 271, 290, 293, 294, 296, 298, 299, 300, 301, 304, 305, 306, 307, 310], "debug": [0, 6, 8, 40, 293, 310], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 67, 70, 72, 73, 74, 95, 108, 113, 131, 134, 145, 160, 192, 198, 203, 211, 222, 225, 274, 293, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "habitat": [0, 3, 85, 293, 306], "lab": [0, 3, 77, 78, 293], "mujoco": [0, 6, 8, 293, 300, 301], "error": [0, 1, 3, 7, 10, 11, 29, 32, 67, 70, 72, 73, 74, 114, 136, 293, 298, 300, 304, 310], "solut": [0, 3, 6, 7, 9, 21, 293, 294, 296, 309], "resourc": [0, 1, 21, 293, 298, 300, 304], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 67, 70, 72, 73, 74, 188, 223, 228, 238, 241, 293, 294, 298, 300, 301, 304, 305, 306, 310], "issu": [0, 4, 5, 8, 55, 56, 65, 114, 185, 191, 192, 196, 197, 198, 199, 200, 293, 309], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 67, 70, 72, 73, 74, 94, 100, 143, 163, 164, 303, 304, 307, 309], "search": [0, 299], "page": [0, 7], "somewhat": [1, 295, 310], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 67, 70, 72, 73, 74, 99, 129, 225, 271, 309, 310], "dataload": [1, 54, 62, 299, 300, 307], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 103, 117, 158, 171, 189, 193, 195, 294, 299, 307, 309, 310], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 105, 108, 109, 110, 113, 114, 115, 117, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 143, 144, 145, 146, 147, 148, 150, 151, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 206, 209, 210, 211, 212, 213, 215, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 236, 237, 238, 239, 240, 241, 244, 246, 247, 248, 252, 253, 255, 265, 270, 271, 272, 283, 286, 290, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 103, 108, 113, 128, 129, 133, 158, 159, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 271, 274, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 94, 110, 113, 133, 136, 195, 210, 212, 215, 226, 228, 230, 265, 271, 274, 276, 277, 278, 286, 296, 298, 301, 304, 305, 306, 307, 309, 310], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 67, 70, 72, 73, 74, 100, 110, 126, 143, 183, 202, 216, 218, 223, 244, 277, 296, 298, 299, 300, 304, 305, 310], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 93, 97, 104, 113, 125, 128, 129, 130, 131, 133, 143, 158, 199, 200, 209, 210, 212, 213, 215, 216, 217, 218, 221, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 294, 298, 301, 304, 305, 307, 310], "static": [1, 11, 40, 45, 134, 221, 305, 307], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 67, 68, 70, 72, 73, 74, 88, 89, 90, 95, 97, 98, 99, 100, 101, 108, 110, 113, 117, 125, 128, 129, 131, 133, 134, 140, 145, 146, 147, 148, 149, 151, 154, 156, 158, 159, 160, 163, 164, 165, 168, 172, 183, 190, 191, 192, 193, 195, 199, 203, 204, 209, 210, 211, 212, 215, 221, 222, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 265, 294, 295, 298, 299, 300, 301, 303, 304, 305, 307, 309, 310], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 67, 70, 72, 73, 74, 85, 124, 127, 136, 165, 194, 226, 295, 298, 300, 301, 304, 305, 306, 307, 310], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 67, 70, 72, 73, 74, 98, 100, 101, 109, 115, 129, 141, 142, 158, 195, 211, 222, 225, 257, 271, 276, 288, 289, 290, 294, 298, 299, 300, 301, 304, 305, 307], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 94, 97, 113, 125, 127, 128, 129, 131, 133, 134, 136, 145, 158, 164, 165, 167, 173, 182, 186, 188, 189, 192, 196, 199, 200, 203, 210, 221, 223, 228, 238, 239, 240, 241, 242, 283, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 67, 70, 71, 72, 73, 74, 94, 97, 104, 113, 120, 125, 128, 129, 130, 131, 133, 183, 199, 200, 201, 223, 296, 300, 310], "two": [1, 3, 4, 8, 10, 32, 62, 67, 70, 72, 73, 74, 110, 113, 133, 150, 158, 177, 200, 222, 233, 270, 274, 283, 295, 298, 299, 300, 301, 303, 304, 305, 307, 309, 310], "main": [1, 2, 3, 5, 20, 22, 68, 200, 274, 294, 295, 298, 299, 303, 310], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 143, 145, 158, 160, 163, 164, 165, 166, 183, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 236, 238, 239, 240, 241, 242, 256, 267, 277, 283, 286, 287, 290, 298, 299, 300, 301, 304, 305, 307, 310], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 67, 70, 71, 72, 73, 74, 98, 101, 108, 110, 113, 120, 129, 131, 133, 134, 143, 153, 158, 160, 163, 164, 169, 174, 192, 197, 198, 200, 202, 203, 204, 223, 235, 238, 241, 256, 270, 271, 288, 289, 294, 298, 300, 303, 305, 306, 307, 309, 310], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 128, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 283, 287, 290, 294, 298, 299, 300, 304, 307], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 67, 70, 72, 73, 74, 102, 110, 121, 145, 160, 165, 178, 185, 191, 196, 197, 199, 201, 202, 204, 223, 235, 270, 273, 274, 283, 295, 296, 298, 300, 301, 304, 305], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 92, 125, 158, 201, 202, 278, 290, 294, 296, 299, 300, 301, 304, 307, 308, 310], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 68, 70, 71, 72, 73, 74, 76, 87, 92, 104, 107, 109, 110, 123, 124, 125, 126, 129, 143, 144, 155, 158, 159, 161, 162, 189, 193, 195, 196, 200, 209, 217, 225, 237, 238, 239, 240, 241, 244, 245, 246, 256, 265, 270, 274, 296, 298, 299, 301, 303, 305, 306, 307, 309], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 67, 70, 72, 73, 74, 113, 128, 131, 134, 202, 298, 305, 309], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 67, 70, 72, 73, 74, 114, 124, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 213, 223, 238, 239, 240, 241, 242, 256, 287, 298, 299, 301, 305, 307, 310], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 67, 70, 71, 72, 73, 74, 88, 94, 100, 105, 109, 110, 119, 123, 126, 134, 144, 145, 152, 153, 155, 156, 157, 158, 160, 162, 165, 168, 169, 170, 173, 175, 176, 179, 180, 181, 182, 185, 189, 190, 193, 195, 196, 199, 200, 204, 208, 210, 215, 217, 221, 222, 224, 226, 228, 230, 265, 267, 270, 274, 276, 277, 278, 288, 289, 290, 294, 298, 299, 300, 301, 304, 305, 306, 310], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 67, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 158, 160, 166, 167, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 239, 240, 241, 271, 298, 300, 301, 304, 305, 307, 310], "deliv": [1, 16, 18, 19, 20, 298, 299, 309], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 67, 70, 72, 73, 74, 134, 158, 201, 202, 256, 265, 294, 299, 303, 305, 309], "user": [1, 2, 3, 5, 8, 21, 32, 52, 67, 70, 72, 73, 74, 124, 129, 151, 159, 225, 287, 295, 296, 298, 299, 305, 309, 310], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 92, 94, 97, 102, 104, 107, 109, 113, 120, 121, 123, 124, 125, 126, 128, 131, 132, 134, 136, 158, 184, 195, 256, 283, 298, 299, 300, 301, 303, 304, 309], "whenev": [1, 3, 32, 35, 38, 41, 42, 84, 107, 129, 223, 238, 239, 240, 241, 276, 294], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 67, 70, 72, 73, 74, 189, 193, 195, 298, 300, 304, 309, 310], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 98, 99, 101, 109, 110, 115, 117, 119, 121, 123, 125, 128, 134, 143, 144, 158, 162, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 283, 295, 298, 300, 301, 303, 304, 305, 306, 307, 309, 310], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 67, 70, 71, 72, 73, 74, 76, 87, 92, 94, 95, 97, 102, 107, 110, 115, 121, 123, 124, 128, 129, 132, 134, 143, 144, 146, 151, 155, 158, 159, 160, 162, 169, 172, 173, 175, 176, 182, 186, 199, 205, 209, 211, 222, 223, 225, 226, 227, 236, 237, 238, 239, 240, 241, 242, 244, 290, 294, 295, 298, 299, 300, 301, 304, 305, 310], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 109, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 158, 166, 189, 191, 193, 197, 218, 299, 300, 301, 304, 305, 306, 307, 310], "predefin": [1, 299, 300, 307], "becaus": [1, 3, 4, 7, 40, 67, 70, 72, 73, 74, 108, 128, 150, 159, 165, 185, 191, 192, 196, 197, 198, 199, 200, 298, 299, 301, 303, 304, 305, 307, 310], "potenti": [1, 305, 307], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 67, 70, 72, 73, 74, 110, 129, 132, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 168, 169, 170, 171, 172, 175, 176, 178, 180, 181, 183, 186, 189, 190, 192, 193, 195, 196, 198, 200, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 278, 295, 298, 300, 301, 303, 304, 306, 307], "heavi": [1, 8, 307], "crucial": [1, 189, 193, 195, 221, 223, 298, 299, 300, 301, 304, 305, 310], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 108, 146, 151, 172, 223, 225, 283, 294, 298, 299, 300, 304, 305], "hyperparamet": [1, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 298, 305, 307], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 125, 287, 290, 298, 307], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 77, 78, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 286, 287, 288, 289, 290, 294, 295, 298, 301, 304, 305, 306, 309], "take": [1, 3, 8, 23, 40, 67, 70, 72, 73, 74, 123, 124, 126, 128, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 194, 195, 198, 203, 206, 208, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 276, 294, 296, 298, 299, 300, 304, 305, 307, 310], "consider": [1, 3, 8, 299, 304, 307], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 71, 72, 73, 74, 98, 101, 124, 129, 145, 158, 160, 204, 210, 211, 212, 213, 215, 216, 222, 223, 225, 226, 228, 230, 236, 238, 241, 298, 299, 300, 304, 305, 310], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 71, 72, 73, 74, 94, 97, 99, 104, 108, 110, 114, 115, 117, 120, 121, 123, 124, 128, 129, 134, 136, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 196, 198, 199, 200, 203, 206, 215, 220, 222, 223, 225, 226, 229, 237, 238, 239, 240, 241, 242, 257, 269, 270, 271, 274, 286, 288, 289, 290, 294, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "occur": [1, 8, 14, 28, 29, 95, 110, 114, 185, 191, 192, 196, 197, 198, 199, 200, 218, 307, 310], "serial": [1, 3, 32, 67, 70, 72, 73, 74, 134], "optim": [1, 2, 8, 32, 67, 70, 72, 73, 74, 129, 144, 162, 166, 167, 210, 223, 224, 225, 228, 269, 274, 286, 295, 296, 300, 301, 304, 305], "parallel": [1, 3, 8, 17, 136, 209, 287, 288, 289, 290, 299, 300, 304], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 94, 117, 286, 289, 292, 300, 301, 304, 307], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 288, 289, 290, 294, 295, 296, 298, 299, 300, 301, 304, 307, 310], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 68, 72, 73, 74, 134, 288, 289, 290, 298, 300, 309, 310], "multisyncdatacollector": [1, 18, 19, 20, 21, 289, 292, 300, 309], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 294, 296, 300, 307, 309], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 134, 195, 276, 294, 298, 304, 305], "aggreg": [1, 145, 147, 148, 202], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 67, 68, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 109, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 143, 158, 160, 174, 190, 192, 198, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 238, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 276, 294, 299, 301, 305, 306, 309, 310], "final": [1, 3, 4, 21, 34, 36, 39, 40, 158, 189, 193, 194, 195, 201, 238, 270, 294, 298, 299, 300, 304, 305, 310], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 288, 292, 298, 299, 300, 309], "sever": [1, 8, 30, 32, 45, 67, 70, 72, 73, 74, 95, 129, 225, 298, 300, 307, 310], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 94, 104, 110, 114, 117, 125, 129, 130, 134, 152, 153, 158, 159, 163, 164, 165, 166, 171, 173, 179, 183, 195, 199, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 265, 268, 271, 272, 273, 274, 276, 288, 289, 290, 296, 299, 300, 301, 303, 304, 306, 309, 310], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 114, 164, 171, 237, 278, 293, 298, 299, 300, 301, 304, 305, 307, 310], "continu": [1, 9, 25, 46, 67, 70, 72, 73, 74, 140, 147, 148, 149, 150, 195, 202, 209, 210, 215, 221, 225, 226, 227, 228, 229, 230, 238, 243, 251, 294, 298, 300, 301, 304, 305, 307, 309, 310], "concomitantli": 1, "network": [1, 4, 8, 32, 67, 70, 72, 73, 74, 145, 147, 148, 149, 150, 153, 155, 156, 160, 165, 167, 169, 170, 173, 175, 176, 177, 182, 186, 187, 188, 199, 203, 210, 211, 212, 213, 215, 216, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 234, 236, 238, 239, 240, 241, 242, 285, 286, 294, 295, 296, 303, 305, 310], "impli": [1, 310], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 158, 167, 199, 209, 210, 211, 215, 218, 276, 285, 294, 296, 298, 299, 300, 301, 303, 305, 307, 309], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 67, 70, 72, 73, 74, 108, 110, 121, 129, 130, 134, 136, 160, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "slightli": [1, 294, 295, 301, 305, 306, 307, 310], "lag": [1, 13, 14, 16, 17, 298, 299, 300], "therefor": [1, 3, 7, 67, 70, 72, 73, 74, 117, 124, 225, 236, 310], "although": [1, 8, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 296, 298, 299, 307], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 88, 92, 94, 108, 113, 120, 123, 126, 128, 130, 133, 143, 163, 164, 189, 193, 195, 196, 199, 200, 208, 209, 210, 211, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 295, 296, 298, 299, 300, 303, 304, 305, 307, 310], "asynchron": [1, 9, 14, 21, 32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199, 209, 288, 299, 300], "off": [1, 2, 4, 157, 181, 191, 228, 270, 279, 294, 296, 298, 299, 300, 304, 306, 310], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 67, 70, 72, 73, 74, 98, 101, 104, 110, 124, 154, 158, 165, 166, 186, 188, 190, 192, 197, 209, 216, 221, 225, 270, 294, 296, 298, 299, 300, 301, 304, 305, 306, 307, 310], "remot": [1, 18, 19, 20, 21, 73, 74, 310], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 67, 70, 71, 72, 73, 74, 89, 90, 92, 94, 98, 101, 108, 115, 136, 144, 158, 162, 195, 209, 278, 294, 298, 300, 301, 306, 307, 309], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 121, 226, 238, 239, 240, 241, 242, 295, 298, 300], "synchronis": [1, 68, 304], "either": [1, 5, 22, 32, 40, 54, 67, 70, 72, 73, 74, 124, 205, 230, 261, 296, 298, 299, 301, 306, 307, 309, 310], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 298, 304, 309], "update_at_each_batch": [1, 13, 14, 17, 298], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 89, 90, 92, 94, 95, 97, 100, 104, 107, 108, 109, 110, 113, 114, 115, 119, 123, 125, 127, 128, 129, 130, 131, 133, 134, 136, 140, 143, 144, 145, 147, 148, 149, 150, 156, 158, 160, 162, 163, 164, 165, 166, 167, 180, 181, 185, 186, 187, 188, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 238, 239, 240, 241, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 267, 268, 270, 271, 274, 290, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "second": [1, 8, 158, 192, 211, 222, 225, 228, 273, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 98, 99, 101, 108, 112, 113, 115, 117, 125, 127, 128, 129, 131, 133, 140, 143, 144, 145, 146, 147, 148, 149, 150, 154, 156, 158, 159, 160, 162, 165, 166, 167, 172, 173, 174, 182, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 202, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 271, 276, 283, 284, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 67, 70, 72, 73, 74, 104, 108, 128, 153, 154, 168, 186, 187, 188, 191, 192, 194, 199, 205, 209, 211, 212, 213, 216, 222, 225, 227, 236, 237, 238, 239, 240, 241, 274, 283, 292, 296, 298, 299, 300, 301, 303, 304, 305, 310], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 67, 68, 70, 71, 72, 73, 74, 78, 94, 110, 125, 128, 134, 140, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 206, 213, 215, 223, 236, 238, 239, 240, 241, 257, 261, 270, 278, 279, 280, 283, 286, 288, 289, 294, 295, 296, 298, 300, 301, 305, 307, 310], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 98, 99, 101, 113, 115, 117, 125, 128, 129, 131, 133, 140, 143, 144, 158, 162, 166, 167, 173, 174, 182, 185, 186, 187, 188, 190, 191, 192, 196, 197, 198, 199, 202, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 271, 283, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 67, 70, 72, 73, 74, 115, 150, 158, 160, 168, 183, 185, 189, 191, 193, 199, 204, 223, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 293, 295, 298, 299, 300, 304, 305, 307, 309, 310], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 67, 68, 70, 72, 73, 74, 88, 92, 94, 98, 99, 100, 101, 109, 110, 113, 122, 128, 129, 130, 133, 134, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 165, 168, 169, 170, 171, 172, 174, 175, 176, 178, 183, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 204, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 238, 239, 240, 241, 245, 246, 267, 269, 270, 274, 278, 283, 290, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 310], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 97, 108, 112, 113, 125, 128, 129, 131, 133, 199, 266, 298, 299, 300, 301, 304, 306, 310], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 73, 74, 95, 100, 109, 120, 128, 134, 158, 159, 166, 167, 185, 191, 196, 197, 199, 200, 203, 211, 215, 222, 225, 226, 230, 244, 283, 290, 294, 296, 298, 299, 300, 304, 305, 307, 309], "infer": [1, 73, 74, 94, 124, 134, 158, 166, 190, 298, 300, 307], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 67, 70, 71, 72, 73, 74, 77, 78, 109, 110, 129, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 201, 202, 203, 206, 270, 288, 289, 290, 293, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309], "dispatch": [1, 18, 19, 20, 21, 183], "avail": [1, 3, 4, 6, 21, 62, 108, 154, 174, 196, 200, 223, 288, 289, 294, 298, 299, 300, 301, 304, 305, 307, 310], "speed": [1, 2, 4, 8, 27, 295, 298, 299, 300, 301, 304, 305, 307], "up": [1, 2, 3, 8, 9, 27, 40, 52, 128, 225, 293, 294, 295, 298, 299, 300, 301, 304, 305, 307, 310], "avoid": [1, 32, 55, 56, 65, 67, 70, 72, 73, 74, 84, 129, 134, 185, 199, 204, 211, 222, 225, 277, 300, 304], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 168, 294, 295, 298, 299, 304], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 95, 98, 101, 104, 113, 115, 117, 122, 125, 127, 128, 129, 130, 133, 134, 140, 143, 144, 145, 146, 151, 152, 154, 158, 159, 160, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 176, 179, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 204, 209, 210, 212, 213, 215, 221, 223, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 257, 265, 271, 283, 294, 299, 300, 301, 303, 304, 305, 306, 309, 310], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 67, 68, 69, 70, 72, 73, 74, 98, 101, 115, 128, 130, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 166, 168, 169, 170, 172, 173, 175, 176, 178, 182, 183, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 211, 222, 223, 225, 238, 239, 240, 241, 242, 271, 288, 289, 290, 294, 298, 299, 300, 301, 303, 304, 305, 307, 310], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 88, 94, 104, 130, 134, 158, 190, 209, 211, 212, 215, 221, 222, 223, 225, 226, 227, 228, 230, 238, 239, 240, 241, 294, 295, 299, 300, 304, 307], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 67, 70, 72, 73, 74, 134, 144, 159, 162, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 283, 292, 296, 298, 300, 301, 304, 306, 307, 310], "while": [1, 3, 7, 8, 32, 67, 70, 72, 73, 74, 117, 129, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 221, 222, 225, 294, 298, 300, 301, 304, 305, 306, 307, 309], "wait": [1, 20, 21, 22, 301, 305], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 67, 70, 72, 73, 74, 84, 94, 100, 110, 115, 117, 120, 121, 125, 129, 176, 201, 202, 203, 209, 210, 212, 213, 215, 221, 225, 228, 238, 245, 246, 294, 296, 298, 299, 300, 301, 303, 304, 305, 307, 310], "impact": [1, 98, 101, 299, 301, 304], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 67, 68, 70, 72, 73, 74, 94, 97, 113, 125, 128, 129, 131, 133, 134, 199, 290, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "manag": [1, 8, 234, 235, 238, 239, 240, 241, 270], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 67, 70, 72, 73, 74, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 143, 144, 153, 158, 161, 162, 174, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 257, 268, 269, 270, 272, 273, 274, 278, 283, 295, 296, 298, 300, 301, 303, 304, 305, 307, 309, 310], "control": [1, 3, 5, 8, 16, 77, 78, 100, 143, 147, 148, 149, 150, 158, 161, 162, 176, 183, 195, 199, 200, 201, 209, 211, 222, 225, 229, 238, 243, 251, 294, 296, 298, 299, 300, 304, 305, 307], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 67, 70, 72, 73, 74, 94, 95, 105, 108, 109, 110, 113, 114, 123, 125, 126, 128, 129, 131, 136, 157, 158, 163, 164, 181, 186, 187, 188, 190, 196, 199, 200, 202, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 233, 236, 238, 239, 240, 241, 265, 269, 283, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 310], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 298, 299, 304, 309], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 67, 70, 72, 73, 74, 94, 98, 101, 105, 124, 129, 158, 270, 274, 295, 298, 299, 300, 301, 304, 305, 307, 310], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 195, 298, 310], "usual": [1, 3, 4, 6, 7, 8, 52, 67, 70, 72, 73, 74, 167, 225, 238, 239, 240, 241, 242, 256, 283, 293, 294, 296, 298, 299, 300, 301, 304, 307, 310], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 67, 68, 70, 72, 73, 74, 94, 98, 100, 101, 105, 109, 110, 128, 129, 134, 145, 158, 160, 163, 164, 165, 190, 195, 203, 298, 299, 300, 303, 304, 306, 307, 310], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 67, 69, 70, 72, 73, 74, 94, 98, 101, 117, 292, 296, 299, 300, 301, 304, 306], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 72, 73, 74, 77, 88, 92, 94, 95, 100, 104, 108, 109, 110, 113, 114, 117, 119, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 179, 180, 181, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 236, 237, 238, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 286, 290, 296, 298, 299, 300, 301, 306, 307, 309, 310], "behaviour": [1, 3, 21, 70, 95, 98, 101, 110, 114, 124, 143, 157, 158, 181, 270, 294, 299, 301, 305, 307], "besid": 1, "those": [1, 5, 7, 26, 28, 73, 74, 98, 101, 110, 125, 158, 196, 200, 201, 202, 276, 288, 289, 294, 298, 299, 304, 305, 310], "choos": [1, 158, 225, 294, 295, 298, 299, 300, 304, 307], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 67, 70, 71, 72, 73, 74, 88, 108, 113, 131, 145, 158, 160, 192, 197, 198, 208, 209, 210, 211, 212, 215, 221, 222, 223, 225, 226, 227, 228, 230, 274, 283, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 307, 309, 310], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 277, 298, 300, 309], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 94, 105, 189, 193, 195, 256, 257, 267, 270, 274, 277, 278, 298, 299, 300, 301, 304, 307, 309, 310], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 70, 72, 73, 74, 88, 94, 97, 100, 104, 107, 108, 110, 112, 113, 120, 123, 125, 128, 129, 131, 133, 134, 136, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 162, 165, 166, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 199, 200, 202, 203, 206, 211, 222, 225, 237, 238, 239, 240, 241, 256, 270, 296, 299, 300, 301, 304, 305, 307, 310], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 94, 117, 277, 298, 299, 300, 301, 304, 307, 309], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 67, 68, 70, 72, 73, 74, 113, 120, 123, 124, 125, 126, 133, 134, 154, 158, 165, 169, 173, 174, 182, 189, 191, 192, 198, 202, 244, 247, 248, 249, 250, 252, 253, 254, 255, 270, 271, 288, 289, 294, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 277, 298, 299], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 67, 70, 71, 72, 73, 74, 100, 109, 110, 125, 136, 158, 196, 199, 200, 210, 226, 270, 278, 294, 298, 299, 300, 301, 305, 306, 307, 309, 310], "rand_step": [1, 3, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 107, 125, 134, 305, 309, 310], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 298], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 298, 299, 300], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 67, 70, 72, 73, 74, 114, 128, 144, 158, 162, 195, 225, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 292, 295, 298, 299, 300, 301, 305, 307, 309, 310], "pad": [1, 23, 37, 43, 52, 94, 145, 147, 148, 158, 159, 163, 164, 271], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 94, 95, 110, 114, 120, 127, 158, 160, 163, 164, 167, 191, 196, 199, 200, 223, 294, 298, 299, 301, 304, 305, 307], "mask": [1, 4, 23, 27, 30, 31, 33, 92, 114, 163, 164, 190, 271, 299, 301, 310], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 67, 70, 72, 73, 74, 94, 97, 113, 125, 127, 128, 129, 131, 133, 161, 199, 208, 216, 274, 293, 299, 300, 303, 304, 305, 307, 310], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 70, 114, 163, 164, 189, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 296, 301], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 67, 70, 72, 73, 74, 105, 114, 134, 154, 163, 164, 174, 191, 192, 197, 198, 200, 233, 238, 271, 298, 300, 301, 304], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 114, 129, 145, 160, 163, 164, 189, 193, 195, 222, 238, 239, 240, 241, 271, 296, 310], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 270, 292, 298, 299], "strategi": [1, 16, 164, 171, 294, 296, 298, 299, 304, 307], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 67, 70, 72, 73, 74, 113, 133, 294, 295, 298, 300, 304, 305, 307, 310], "tool": [1, 2, 3, 5, 301, 305, 307, 310], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 83, 84, 296, 298, 300, 301, 305], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 292], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 292], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 95, 97, 98, 99, 100, 101, 108, 110, 113, 115, 117, 119, 124, 125, 127, 128, 129, 131, 133, 134, 140, 143, 144, 145, 146, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 207, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 244, 265, 272, 273, 283, 286, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "multiprocess": [1, 18, 19, 20, 68, 69, 134, 299, 300, 305, 310], "synchron": [1, 13, 19, 21, 72, 288, 289, 299, 300], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 98, 101, 124, 129, 134, 137, 141, 142, 152, 157, 158, 171, 179, 180, 181, 196, 200, 223, 270, 298, 299, 301, 304, 309, 310], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 189, 193, 195, 268, 272, 298, 299, 304], "dedic": [1, 3, 18, 19, 20, 21, 186, 187, 188, 294, 298, 303, 304], "folder": [1, 299], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 67, 70, 72, 73, 74, 114, 201, 202, 265, 274, 294, 298, 299, 300, 303, 309, 310], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 67, 68, 70, 71, 72, 73, 74, 94, 97, 98, 99, 101, 103, 108, 109, 110, 113, 120, 125, 126, 128, 129, 131, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 199, 200, 202, 203, 206, 218, 223, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 269, 274, 277, 288, 289, 290, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310], "variou": [1, 3, 13, 14, 16, 17, 158, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 236, 288, 289, 298, 299, 300, 304, 310], "machin": [1, 7, 18, 19, 20, 32, 53, 304], "One": [1, 2, 4, 8, 31, 33, 45, 94, 117, 131, 171, 189, 193, 199, 203, 229, 233, 261, 298, 299, 307, 310], "wonder": 1, "why": [1, 3, 305, 310], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 72, 74, 287, 292, 298, 299, 300, 303, 309, 310], "instead": [1, 4, 7, 8, 11, 27, 32, 67, 70, 72, 73, 74, 104, 125, 129, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 209, 210, 211, 213, 215, 216, 221, 222, 225, 226, 227, 228, 236, 238, 242, 290, 294, 305, 307, 310], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 67, 70, 72, 73, 74, 97, 98, 99, 101, 113, 121, 124, 125, 127, 128, 129, 131, 133, 157, 160, 176, 180, 181, 199, 202, 208, 209, 210, 212, 213, 215, 221, 223, 225, 226, 227, 228, 230, 276, 288, 289, 290, 294, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 310], "lower": [1, 2, 17, 21, 25, 134, 175, 176, 203, 300, 305], "io": [1, 72], "footprint": [1, 2, 307], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 63, 67, 70, 72, 73, 74, 94, 104, 113, 115, 129, 133, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 166, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 197, 198, 199, 203, 206, 208, 215, 226, 227, 228, 230, 237, 242, 257, 274, 290, 294, 295, 298, 299, 300, 301, 304, 305, 307, 309, 310], "commun": [1, 2, 3, 293, 300, 310], "yet": [1, 223, 306], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 67, 69, 70, 71, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 140, 154, 174, 176, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 283, 294, 298, 299, 300, 301, 303, 304, 309], "plai": [1, 3, 94, 299, 300, 307, 310], "role": [1, 3, 299, 310], "opposit": 1, "direct": [1, 32, 67, 70, 72, 73, 74, 223, 299], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 191, 192, 193, 195, 197, 198, 203, 206, 298, 299, 300, 301, 305, 306, 307, 309, 310], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 72, 238, 239, 240, 241, 301, 304], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 68, 73, 74, 134, 158, 165, 186, 187, 188, 209, 211, 212, 215, 221, 222, 225, 226, 227, 228, 230, 290, 294, 300, 301, 303, 304, 309, 310], "among": [1, 3, 304], "achiev": [1, 3, 4, 32, 67, 70, 72, 73, 74, 124, 271, 296, 298, 299, 300, 301, 304, 305, 310], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 52, 53, 73, 113, 128, 133, 214, 223, 295, 296, 298, 299, 300, 301, 307, 310], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 270, 295, 298, 300, 304, 307, 310], "gpu": [1, 7, 8, 32, 55, 56, 65, 67, 70, 72, 73, 74, 298, 300, 301, 304, 310], "nativ": [1, 7, 9, 67, 70, 72, 73, 74, 94, 301, 307], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 157, 180, 181, 208, 293, 298, 299, 300, 301, 304, 306, 310], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 110, 134, 144, 152, 155, 158, 159, 162, 179, 189, 196, 200, 223, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 294, 295, 298, 299, 300, 304, 305, 307, 309, 310], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 158, 163, 164, 185, 189, 190, 191, 193, 195, 196, 197, 199, 200, 203, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 236, 238, 239, 240, 241, 242, 287, 298, 299, 300, 304, 307, 310], "build": [1, 3, 7, 23, 26, 32, 67, 70, 72, 73, 74, 134, 144, 158, 162, 194, 196, 200, 274, 281, 282, 284, 285, 294, 296, 300, 301, 304, 305, 306, 309, 310], "central": [2, 298, 299, 304, 307], "part": [2, 4, 8, 32, 40, 67, 70, 72, 73, 74, 110, 117, 120, 158, 204, 265, 290, 298, 300, 301, 305, 310], "algorithm": [2, 3, 8, 9, 13, 14, 71, 105, 209, 225, 226, 227, 228, 265, 279, 292, 295, 296, 298, 299, 300, 301, 304, 306, 307, 309], "implement": [2, 3, 9, 11, 16, 32, 63, 67, 70, 72, 73, 74, 97, 99, 108, 115, 128, 134, 157, 179, 180, 181, 209, 210, 214, 221, 223, 224, 225, 228, 283, 294, 296, 298, 299, 300, 301, 305, 309], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 52, 62, 67, 68, 70, 72, 73, 74, 94, 108, 113, 115, 125, 131, 134, 144, 158, 159, 165, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "give": [2, 7, 41, 67, 70, 71, 72, 73, 74, 94, 293, 295, 298, 299, 304, 305, 306, 309], "abil": [2, 223, 305, 307], "veri": [2, 3, 299, 305, 307, 309, 310], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 94, 114, 117, 137, 138, 141, 142, 144, 152, 157, 162, 163, 164, 171, 172, 175, 180, 181, 185, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 209, 210, 211, 212, 213, 222, 224, 225, 230, 265, 271, 274, 277, 294, 298, 299, 300, 301, 304, 306, 309, 310], "latenc": 2, "especi": [2, 3, 7, 8, 95], "larger": [2, 4, 221], "volum": 2, "lazymemmapstorag": [2, 94, 292, 298, 299, 301, 306, 307], "advis": [2, 310], "due": [2, 3, 5, 306, 307, 310], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 306, 307], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 67, 70, 72, 73, 74, 175, 176, 223, 242, 298, 299, 301, 306, 307, 309, 310], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 98, 99, 101, 120, 122, 124, 130, 144, 199, 200, 223, 229, 294, 298, 300, 301], "file": [2, 6, 7, 8, 256, 296, 299, 307, 308], "locat": [2, 7, 45, 70, 110, 119, 157, 168, 180, 181, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 298, 299, 300, 304, 307], "improv": [2, 4, 105, 209, 295, 304, 307], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 292, 307], "were": [2, 7, 73, 74, 300, 307], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 92, 134, 196, 200, 222, 223, 225, 298, 299, 301], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 72, 94, 113, 131, 146, 147, 148, 149, 150, 151, 154, 155, 156, 162, 163, 164, 167, 169, 170, 172, 173, 175, 176, 182, 192, 195, 209, 210, 214, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 238, 243, 251, 283, 306, 309], "github": [2, 5, 6, 7, 10, 18, 19, 20, 131, 306, 309], "com": [2, 5, 6, 7, 10, 18, 19, 20, 306, 309], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 67, 70, 71, 72, 73, 74, 97, 99, 108, 113, 115, 125, 128, 129, 131, 133, 134, 138, 142, 145, 160, 165, 167, 173, 182, 189, 191, 193, 196, 199, 200, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 232, 236, 244, 283, 288, 294, 298, 299, 300, 304, 305, 307, 310], "1x": 2, "lazytensorstorag": [2, 41, 42, 117, 292, 300, 304, 307], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 88, 92, 94, 97, 100, 108, 110, 113, 115, 117, 125, 127, 128, 129, 131, 133, 140, 144, 145, 147, 148, 151, 154, 156, 158, 159, 160, 162, 165, 168, 171, 173, 183, 185, 186, 187, 188, 191, 192, 196, 198, 199, 202, 203, 204, 209, 210, 212, 213, 215, 216, 217, 218, 221, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 244, 247, 248, 249, 250, 252, 253, 254, 255, 257, 273, 294, 296, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 109, 157, 180, 181, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 299, 300, 305, 307, 310], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 88, 94, 114, 145, 185, 189, 191, 199, 200, 204, 265, 298, 300, 307, 310], "pai": [2, 8, 298, 301], "attent": [2, 8, 298, 301], "alwai": [2, 3, 20, 26, 28, 32, 54, 67, 70, 72, 73, 74, 108, 109, 216, 223, 294, 295, 299, 300, 301, 304, 305, 307], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 125, 157, 173, 180, 181, 298, 301, 304, 305, 307, 309], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 94, 95, 104, 110, 114, 122, 127, 130, 134, 145, 146, 151, 158, 160, 163, 164, 166, 167, 172, 173, 177, 178, 179, 180, 183, 191, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 290, 294, 298, 299, 300, 301, 304, 305, 307], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 99, 100, 121, 127, 131, 134, 158, 167, 168, 190, 192, 198, 200, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 238, 271, 283, 288, 289, 294, 296, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "word": [2, 40, 52, 223, 298, 305, 310], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 67, 68, 70, 72, 73, 74, 94, 113, 120, 128, 129, 131, 134, 140, 143, 145, 147, 148, 149, 150, 151, 156, 158, 160, 161, 165, 190, 200, 213, 216, 226, 236, 257, 271, 278, 279, 280, 286, 288, 289, 294, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "1m": [2, 277, 298, 300, 301, 306], "multidimension": [2, 41, 58, 307], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 151, 158, 166, 183, 190, 201, 202, 209, 211, 216, 222, 225, 237, 274, 294, 296, 298, 299, 300, 301, 305, 307, 310], "desir": [2, 3, 32, 67, 70, 72, 73, 74, 97, 110, 113, 114, 125, 128, 129, 131, 133, 141, 142, 145, 160, 165, 185, 191, 192, 196, 197, 198, 199, 200, 294, 298, 304, 305], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 67, 70, 72, 73, 74, 80, 82, 87, 110, 113, 114, 117, 131, 136, 165, 166, 191, 200, 223, 225, 238, 239, 240, 241, 271, 280, 290, 294, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "do": [2, 3, 4, 7, 70, 109, 114, 134, 143, 165, 166, 187, 238, 296, 298, 299, 300, 301, 303, 304, 305, 307, 309, 310], "custom": [2, 3, 5, 32, 67, 70, 72, 73, 74, 131, 165, 203, 216, 225, 231, 290, 294, 298, 299, 300, 301, 304], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 67, 70, 72, 73, 74, 77, 100, 102, 115, 120, 121, 129, 131, 158, 197, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 242, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 283, 296, 298, 299, 300, 301, 304, 305, 310], "randomcroptensordict": [2, 298], "here": [2, 3, 4, 7, 8, 9, 10, 67, 70, 72, 73, 74, 94, 294, 295, 298, 299, 300, 301, 304, 305, 307, 309, 310], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 67, 70, 72, 73, 74, 209, 211, 220, 222, 225, 274, 293, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 168, 183, 189, 190, 193, 195, 200, 205, 238, 262, 263, 264, 290, 292, 300, 301, 304, 306, 310], "around": [2, 5, 7, 15, 17, 41, 42, 71, 200, 238, 298, 299, 304, 310], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 94, 136, 210, 221, 296, 306, 307, 309], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 67, 70, 72, 73, 74, 102, 120, 121, 143, 146, 147, 148, 149, 150, 156, 167, 172, 195, 199, 200, 201, 202, 209, 210, 211, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 290, 296, 298, 303, 304, 307, 309], "replaybuff": [2, 41, 42, 66, 94, 114, 117, 213, 216, 236, 284, 286, 292, 300, 304, 306, 307, 309], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 114, 213, 216, 236, 292, 298, 300, 304, 307], "By": [2, 3, 33, 67, 70, 72, 73, 74, 183, 200, 223, 270, 290, 298, 306, 307, 310], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 67, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 134, 140, 154, 168, 185, 186, 187, 188, 191, 196, 197, 199, 200, 202, 203, 204, 205, 236, 270, 292, 294, 295, 298, 299, 300, 301, 306], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 94, 95, 97, 98, 100, 101, 104, 107, 110, 113, 114, 115, 117, 119, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 212, 213, 215, 218, 219, 221, 223, 225, 226, 227, 228, 230, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 283, 294, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 67, 70, 72, 73, 74, 115, 125, 143, 160, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 231, 233, 236, 294, 296, 298, 300, 301, 304, 305, 307, 310], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 274, 293, 300, 301, 304, 310], "respons": [2, 3, 8, 274, 310], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 108, 186, 187, 188, 199, 221, 283, 292, 298, 305, 309], "repositori": [2, 7, 53], "latest": [2, 10, 72, 271, 300, 304, 305, 309], "wheel": [2, 300], "publish": 2, "pypi": [2, 309], "openml": [2, 53, 88], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 160, 183, 199, 201, 202, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 294, 296, 298, 299, 300, 301, 304, 305, 307, 310], "parent": [2, 3, 21, 26, 28, 44, 67, 95, 97, 99, 104, 105, 110, 113, 125, 128, 130, 131, 186, 223, 225, 242, 298, 305, 309, 310], "subclass": [2, 3, 67, 70, 72, 73, 74, 128, 136, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 199, 200, 201, 203, 206, 223, 225, 299, 301, 305, 307], "basic": [2, 71, 294, 300, 310], "properti": [2, 3, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 128, 129, 152, 157, 166, 171, 179, 180, 181, 223, 305, 307], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 104, 106, 107, 108, 110, 111, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 143, 146, 147, 148, 149, 150, 151, 154, 158, 159, 169, 170, 172, 174, 175, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 204, 205, 209, 210, 211, 212, 213, 215, 218, 221, 222, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 257, 283, 286, 294, 296, 299, 300, 301, 303, 304, 305, 307, 309, 310], "action": [2, 3, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 67, 70, 71, 72, 73, 74, 76, 87, 89, 90, 92, 98, 100, 101, 105, 108, 109, 115, 117, 121, 129, 140, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 158, 160, 161, 162, 163, 164, 172, 173, 174, 176, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 203, 204, 209, 210, 212, 213, 215, 221, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 283, 286, 290, 294, 295, 296, 298, 299, 300, 303, 304, 306, 307, 309, 310], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 67, 70, 72, 73, 74, 88, 90, 95, 98, 101, 108, 110, 115, 117, 125, 127, 134, 135, 136, 140, 143, 144, 146, 151, 152, 153, 158, 160, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 179, 182, 185, 186, 187, 188, 190, 191, 192, 196, 197, 198, 199, 202, 203, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 233, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 265, 271, 274, 286, 294, 298, 299, 300, 301, 303, 304, 306, 307, 309, 310], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 97, 98, 99, 100, 101, 108, 110, 113, 115, 117, 125, 127, 128, 129, 131, 133, 136, 140, 143, 144, 154, 158, 162, 166, 167, 173, 174, 182, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 202, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 244, 283, 294, 300, 301, 303, 304, 305, 306, 307, 309, 310], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 67, 68, 70, 71, 72, 73, 74, 82, 83, 84, 92, 94, 107, 108, 110, 113, 115, 117, 125, 128, 133, 134, 140, 143, 144, 154, 158, 160, 162, 165, 168, 173, 174, 182, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 209, 210, 211, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 267, 270, 283, 286, 294, 295, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 67, 68, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 145, 152, 158, 160, 165, 179, 185, 190, 196, 197, 199, 200, 203, 204, 210, 215, 222, 224, 226, 228, 271, 276, 294, 298, 300, 303, 304, 305, 307, 309, 310], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 67, 70, 71, 72, 73, 74, 88, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 143, 145, 147, 148, 149, 150, 153, 158, 159, 160, 165, 166, 167, 174, 175, 176, 177, 178, 183, 185, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 268, 272, 277, 286, 294, 295, 296, 298, 299, 300, 301, 304, 305, 309, 310], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74, 88, 94, 97, 98, 99, 101, 108, 110, 113, 115, 126, 128, 131, 133, 136, 145, 146, 147, 148, 151, 153, 154, 155, 158, 159, 160, 165, 168, 174, 183, 185, 186, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 257, 265, 294, 295, 298, 299, 300, 301, 303, 304, 305, 306, 309, 310], "send": [2, 3, 8, 309], "receiv": [2, 3, 32, 40, 67, 70, 72, 73, 74, 124, 128, 160, 244, 295, 298, 300, 303, 305], "spawn": [2, 3, 4, 18, 22, 72, 304], "check_env_spec": [2, 3, 292, 300, 304, 305], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 70, 72, 73, 74, 94, 97, 99, 104, 108, 110, 113, 115, 116, 117, 125, 128, 129, 131, 133, 144, 159, 185, 186, 187, 188, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 242, 256, 287, 295, 296, 297, 299, 300, 301, 305, 307, 310], "saniti": [2, 3, 7, 136, 300], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 67, 70, 71, 72, 73, 74, 97, 100, 110, 113, 125, 128, 129, 131, 133, 143, 144, 154, 155, 162, 174, 178, 185, 191, 192, 195, 198, 199, 200, 201, 202, 204, 208, 212, 213, 237, 238, 239, 240, 241, 242, 244, 266, 270, 286, 294, 296, 298, 299, 300, 304, 305, 310], "techniqu": [2, 8, 299, 307], "commonli": [2, 310], "emploi": [2, 167], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 307], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 94, 98, 101, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 213, 216, 236, 294, 305, 309], "offer": [2, 3, 7, 294, 299, 305, 310], "facilit": [2, 3, 7, 112, 113, 131, 133, 186, 187, 188, 294, 298, 301, 305], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 124, 196, 200, 298, 300, 304, 305, 310], "extern": [2, 3, 98, 101, 310], "consist": [2, 3, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 108, 145, 160, 298, 299, 300, 305, 306, 310], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199, 298, 299, 310], "manner": [2, 70, 113, 131, 294, 298, 299, 300, 303, 305, 307], "handl": [3, 21, 32, 67, 70, 72, 73, 74, 134, 158, 160, 274, 288, 289, 298, 299, 300, 304, 307], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 67, 70, 72, 73, 74, 94, 100, 110, 115, 124, 129, 130, 154, 158, 160, 162, 165, 174, 221, 225, 233, 238, 239, 240, 245, 246, 270, 274, 276, 288, 289, 294, 295, 296, 298, 299, 300, 303, 304, 305, 306, 307, 310], "dm": [3, 298, 310], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 71, 72, 117, 125, 131, 132, 186, 194, 209, 210, 212, 213, 215, 217, 221, 225, 226, 227, 228, 230, 274, 283, 294, 295, 296, 298, 299, 301, 304, 305, 307, 310], "goal": [3, 4, 124, 298, 299, 300, 301, 304, 305], "abl": [3, 298, 300, 301, 303, 304, 305, 307, 309], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 136, 259, 260, 261, 262, 263, 264, 293, 299, 300, 304, 307], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 298, 300, 304, 305, 310], "simul": [3, 5, 7, 8, 91, 144, 162, 294, 298, 300, 304], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 113, 131, 136, 147, 158, 178, 200, 201, 202, 265, 277, 294, 296, 298, 299, 300, 301, 304, 305, 307, 309, 310], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 67, 70, 72, 73, 74, 125, 136, 163, 164, 166, 167, 185, 190, 191, 192, 195, 196, 197, 198, 199, 200, 234, 235, 296, 298, 299, 300, 301, 304, 305, 307, 309, 310], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 67, 70, 72, 73, 74, 185, 191, 192, 196, 197, 198, 199, 200, 223, 238, 239, 240, 241, 242, 295, 298, 299, 305, 310], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 107, 108, 110, 115, 117, 125, 128, 134, 158, 283, 286, 298, 299, 300, 301, 303, 304, 306, 307, 309, 310], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 67, 70, 71, 72, 73, 74, 97, 100, 108, 113, 125, 128, 129, 131, 133, 144, 145, 147, 148, 149, 150, 153, 154, 155, 156, 158, 160, 162, 164, 165, 168, 173, 174, 182, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 204, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 283, 286, 294, 295, 298, 299, 300, 301, 303, 304, 305, 306, 309], "typic": [3, 4, 8, 32, 67, 70, 72, 73, 74, 124, 210, 223, 225, 228, 294, 295, 296, 300, 304, 305], "organis": [3, 299, 305], "arbitrari": [3, 33, 73, 74, 294, 298, 299, 305], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 67, 70, 72, 73, 74, 238, 239, 240, 241, 242, 296, 299, 300, 304, 305, 307, 309], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 98, 101, 195, 238, 239, 240, 241, 242, 295, 298, 300, 301, 304, 305, 306, 307], "attribut": [3, 4, 32, 45, 67, 70, 72, 73, 74, 113, 123, 131, 158, 200, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 298, 301, 305], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 94, 98, 101, 115, 117, 125, 128, 143, 144, 151, 154, 158, 162, 173, 174, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 265, 271, 283, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 67, 70, 72, 73, 74, 94, 114, 158, 182, 186, 187, 188, 205, 294, 299, 300, 301, 304], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 67, 70, 71, 72, 73, 74, 88, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 110, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 136, 158, 165, 192, 195, 199, 202, 209, 210, 211, 212, 213, 215, 221, 222, 223, 225, 226, 227, 228, 230, 236, 278, 293, 294, 295, 296, 298, 300, 301, 304, 305, 307, 310], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74], "actual": [3, 4, 7, 17, 67, 70, 72, 73, 74, 124, 277, 295, 298, 300, 304, 305], "just": [3, 4, 67, 70, 72, 73, 74, 165, 265, 294, 296, 298, 299, 300, 301, 304, 305, 307, 309, 310], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 67, 70, 72, 73, 74, 95, 99, 110, 143, 144, 162, 196, 200, 203, 209, 210, 211, 213, 222, 225, 226, 228, 230, 236, 238, 239, 240, 241, 283, 290, 296, 299, 300, 305, 310], "care": [3, 8, 67, 70, 72, 73, 74, 128, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 298, 300, 304, 305, 307], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 67, 70, 72, 73, 74, 97, 113, 125, 127, 128, 129, 131, 133, 135, 145, 157, 160, 165, 166, 173, 181, 182, 186, 188, 199, 200, 271, 298, 299, 300, 301, 304, 305, 307, 310], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 145, 157, 160, 165, 181, 199, 271, 298, 299, 300, 301, 305], "parametr": [3, 167, 200, 210, 221, 228, 298, 300], "hardwar": 3, "observation_spec": [3, 67, 70, 71, 72, 73, 74, 92, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 110, 113, 116, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 144, 158, 162, 278, 286, 298, 300, 303, 304, 305, 310], "compositespec": [3, 28, 49, 67, 69, 70, 71, 72, 73, 74, 92, 98, 99, 100, 101, 108, 115, 123, 124, 125, 128, 140, 144, 162, 185, 189, 193, 196, 202, 203, 292, 298, 300, 304, 305, 310], "pair": [3, 32, 34, 36, 39, 52, 67, 70, 72, 73, 74, 125, 186, 196, 200, 223, 238, 239, 240, 241, 242, 294, 295, 298, 299, 300, 303, 305, 310], "state_spec": [3, 67, 70, 71, 72, 73, 74, 92, 300, 305, 310], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 88, 113, 126, 129, 131, 133, 298, 305], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 67, 70, 71, 72, 73, 74, 76, 87, 92, 94, 98, 101, 108, 117, 154, 174, 176, 185, 191, 196, 197, 210, 213, 226, 228, 230, 286, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "reward_spec": [3, 67, 70, 71, 72, 73, 74, 92, 93, 97, 98, 99, 101, 118, 119, 120, 128, 130, 144, 162, 300, 304, 305, 310], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 93, 97, 98, 99, 101, 108, 115, 117, 118, 119, 120, 121, 124, 128, 130, 132, 133, 134, 140, 143, 144, 162, 190, 205, 209, 210, 212, 213, 215, 218, 221, 223, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 267, 268, 270, 272, 290, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "done_spec": [3, 67, 70, 72, 73, 74, 98, 99, 101, 128, 300, 304, 305, 310], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 195, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 294, 304, 305, 306], "input_spec": [3, 67, 70, 71, 72, 73, 74, 97, 98, 99, 100, 110, 115, 120, 121, 123, 128, 129, 130, 144, 162, 304, 305], "full_action_spec": [3, 67, 70, 72, 73, 74, 304], "full_state_spec": [3, 67, 70, 72, 73, 74], "lock": [3, 26, 28, 67, 70, 72, 73, 74, 125, 134, 305], "modifi": [3, 7, 8, 26, 28, 32, 45, 67, 70, 72, 73, 74, 97, 104, 108, 113, 125, 128, 129, 131, 133, 190, 195, 199, 277, 283, 298, 299, 300, 304, 305], "directli": [3, 4, 8, 67, 70, 71, 72, 73, 74, 117, 223, 290, 294, 300, 304, 305, 307], "output_spec": [3, 67, 70, 72, 73, 74, 97, 99, 108, 115, 128, 129, 304, 305], "full_observation_spec": [3, 67, 70, 72, 73, 74], "full_reward_spec": [3, 67, 70, 72, 73, 74, 304], "full_done_spec": [3, 67, 70, 72, 73, 74, 304], "importantli": [3, 196, 200], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 67, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 86, 92, 94, 117, 134, 144, 145, 146, 147, 148, 151, 154, 155, 156, 159, 160, 162, 165, 168, 169, 170, 171, 172, 173, 174, 182, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 204, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 256, 294, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "action_s": 3, "help": [3, 4, 32, 67, 70, 72, 73, 74, 293, 295, 298, 299, 300, 301, 304], "prealloc": [3, 305], "With": [3, 124, 296, 298, 299, 304, 307, 310], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 83, 95, 96, 98, 99, 100, 101, 102, 104, 108, 109, 110, 113, 114, 120, 121, 125, 128, 129, 131, 133, 134, 143, 145, 158, 159, 160, 163, 164, 165, 183, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 252, 253, 254, 255, 269, 271, 274, 276, 278, 283, 286, 290, 293, 298, 299, 300, 301, 303, 304, 305, 307, 309, 310], "instanti": [3, 21, 34, 36, 39, 73, 74, 128, 165, 298, 299, 304, 305, 307, 310], "0s": [3, 125, 301], "stateless": [3, 128, 298, 305, 310], "set_se": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 76, 87, 110, 115, 129, 305, 309, 310], "seed": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 77, 89, 90, 92, 98, 101, 129, 136, 274], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 67, 68, 70, 71, 72, 73, 74, 76, 87, 89, 90, 94, 98, 101, 107, 108, 115, 117, 124, 125, 134, 140, 143, 144, 158, 162, 176, 205, 209, 210, 212, 213, 215, 216, 221, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 268, 270, 272, 298, 299, 301, 303, 305, 306, 307, 309, 310], "determinist": [3, 32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 146, 155, 169, 176, 185, 193, 199, 200, 203, 210, 294, 298, 299, 301, 305, 310], "preced": [3, 159, 301], "without": [3, 7, 9, 32, 40, 67, 70, 72, 73, 74, 92, 98, 101, 127, 187, 188, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 242, 286, 293, 294, 298, 299, 300, 304, 305, 307, 310], "risk": [3, 114], "overlap": [3, 41], "consecut": [3, 62, 158, 195, 301, 304, 310], "still": [3, 9, 123, 189, 222, 223, 298, 299, 301, 303, 305, 307, 310], "reproduc": [3, 94, 136, 298, 300, 304], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 25, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 67, 70, 72, 73, 74, 100, 118, 123, 124, 126, 140, 179, 180, 181, 196, 203, 210, 215, 221, 223, 224, 228, 271, 298, 299, 300, 301, 304, 305, 307, 309, 310], "max_step": [3, 13, 67, 70, 71, 72, 73, 74, 89, 90, 123, 304, 309, 310], "n": [3, 6, 7, 24, 27, 32, 33, 40, 67, 70, 72, 73, 74, 94, 100, 104, 130, 162, 195, 200, 209, 215, 223, 237, 271, 294, 296, 299, 300, 301, 304, 307, 310], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 71, 108, 158, 162, 173, 174, 182, 183, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 205, 210, 212, 215, 217, 218, 219, 221, 223, 226, 228, 230, 236, 237, 238, 239, 240, 241, 270, 286, 294, 298, 300, 301, 303, 304, 305, 306], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 92, 104, 113, 114, 117, 129, 131, 134, 136, 145, 151, 160, 167, 190, 199, 200, 201, 202, 209, 210, 212, 213, 215, 221, 223, 225, 226, 227, 228, 230, 238, 262, 274, 293, 298, 299, 300, 304, 305, 307, 309, 310], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 67, 70, 72, 73, 74, 85, 88, 94, 131, 134, 158, 197, 209, 210, 212, 213, 215, 221, 223, 225, 226, 227, 228, 230, 233, 298, 301, 307, 309], "mark": [3, 16, 67, 70, 72, 73, 74, 158], "trail": [3, 134], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 67, 68, 70, 72, 73, 74, 84, 88, 95, 114, 125, 126, 134, 143, 155, 158, 159, 195, 211, 215, 218, 222, 223, 225, 226, 230, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 274, 294, 295, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "treat": 3, "figur": [3, 298, 300, 301, 304, 305, 310], "summar": [3, 305], "brief": [3, 300], "popul": [3, 38, 107, 125, 298, 300, 301, 305, 307], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 67, 70, 72, 73, 74, 94, 96, 98, 101, 104, 107, 110, 113, 115, 117, 123, 125, 133, 134, 143, 163, 164, 190, 197, 198, 210, 228, 238, 239, 240, 241, 294, 298, 300, 301, 304, 305, 306, 307], "deliveri": 3, "step_mdp": [3, 158, 292, 301, 305, 309, 310], "nasium": 3, "recent": [3, 7, 11, 310], "shift": [3, 32, 206, 238, 239, 240, 241, 300], "termin": [3, 7, 32, 40, 52, 201, 298, 299, 300, 305, 309], "trust": [3, 158], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 67, 70, 72, 73, 74, 109, 123, 181, 244, 298, 300, 310], "refer": [3, 7, 8, 9, 21, 32, 40, 67, 70, 72, 73, 74, 129, 134, 144, 154, 155, 162, 163, 164, 169, 170, 175, 176, 192, 209, 216, 217, 218, 219, 225, 238, 243, 251, 298, 300, 304], "stepcount": [3, 13, 67, 70, 72, 73, 74, 128, 298, 299, 300, 301, 304, 309], "chosen": [3, 124, 125, 173, 174, 182, 198, 283, 294], "someth": [3, 32, 67, 70, 72, 73, 74, 293, 299, 300, 305, 310], "els": [3, 169, 294, 296, 298, 299, 300, 301, 304, 305, 306], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 67, 70, 72, 73, 74, 110, 117, 192, 266, 286, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "truncated_kei": [3, 123], "look": [3, 5, 7, 8, 32, 67, 70, 72, 73, 74, 113, 114, 131, 196, 200, 201, 202, 295, 300, 301, 304, 305, 306, 307, 309, 310], "assess": [3, 298], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 292], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 104], "reli": [3, 209, 295, 298, 300, 305, 310], "traj_id": [3, 13, 14, 16, 23, 117, 301, 307, 309], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 67, 70, 72, 73, 74, 125, 129, 143, 201, 202, 293, 298, 301], "context": [3, 5, 8, 32, 67, 68, 70, 72, 73, 74, 88, 125, 130, 165, 166, 190, 234, 235, 238, 239, 240, 241, 243, 251, 270, 294, 295, 298, 299, 300, 304, 305, 306, 307], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 73, 74, 98, 101, 114, 160, 173, 200, 201, 202, 206, 238, 239, 240, 241, 294, 298, 299, 300, 303, 304, 305, 306, 307, 310], "inittrack": [3, 158, 298, 301], "our": [3, 7, 8, 18, 94, 294, 298, 299, 300, 301, 303, 304, 306, 307, 309], "tutori": [3, 298, 299, 301, 302, 303, 305, 306, 307, 308, 310], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 67, 68, 70, 72, 73, 74, 145, 160, 165, 295, 296, 298, 299, 300, 301, 304, 305, 307], "design": [3, 13, 14, 32, 33, 67, 70, 72, 73, 74, 94, 114, 129, 190, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 298, 299, 300, 301, 303, 304, 305, 307, 310], "scratch": [3, 8, 299, 305], "better": [3, 8, 9, 158, 295, 300, 305], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 67, 70, 72, 73, 74, 94, 104, 108, 125, 130, 134, 145, 155, 156, 158, 160, 166, 167, 200, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 290, 294, 298, 299, 300, 301, 305, 307, 310], "intens": [3, 8], "gym3": 3, "envpool": [3, 72], "interfac": [3, 88, 160, 166, 294, 298, 300, 305, 307], "simultan": [3, 20, 73, 74, 305], "often": [3, 8, 220, 274, 298, 299, 305, 307, 310], "competit": [3, 304], "advantag": [3, 8, 156, 209, 211, 222, 225, 227, 238, 239, 240, 241, 242, 243, 245, 247, 249, 251, 252, 254, 295, 296, 298, 299, 300, 301, 304, 305, 310], "scale": [3, 4, 52, 94, 108, 110, 119, 124, 127, 155, 157, 168, 175, 176, 180, 181, 186, 187, 188, 196, 200, 202, 209, 210, 221, 225, 226, 227, 228, 272, 278, 283, 290, 294, 298, 299, 300, 301, 304, 309], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 67, 70, 71, 72, 73, 74, 94, 108, 124, 128, 129, 134, 145, 163, 164, 165, 189, 193, 196, 197, 200, 203, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 236, 274, 286, 296, 298, 299, 300, 301, 304, 305, 306, 307, 310], "own": [3, 13, 14, 17, 22, 32, 67, 70, 72, 73, 74, 299, 300, 304, 305], "As": [3, 4, 67, 70, 72, 73, 74, 117, 200, 238, 294, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "inherit": [3, 161, 223, 296, 300, 304], "serialenv": [3, 67, 70, 72, 73, 125, 292, 310], "enjoi": 3, "exact": 3, "Of": [3, 7, 293, 305, 310], "cours": [3, 4, 293, 300, 305, 310], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 67, 70, 71, 72, 73, 74, 113, 125, 129, 133, 134, 158, 163, 164, 195, 196, 200, 213, 215, 236, 238, 239, 240, 241, 242, 298, 299, 300, 304, 305, 306], "count": [3, 68, 123, 195, 270, 274, 277, 298, 299, 300, 301, 307, 310], "def": [3, 11, 22, 32, 67, 68, 70, 71, 72, 73, 74, 84, 92, 98, 101, 144, 154, 162, 204, 210, 212, 215, 221, 223, 226, 228, 230, 296, 298, 299, 303, 304, 305, 309, 310], "make_env": [3, 90, 134, 279, 280, 298, 299, 310], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 85, 94, 97, 107, 108, 110, 115, 117, 125, 128, 129, 134, 158, 283, 286, 292, 294, 298, 299, 300, 301, 306, 307, 309, 310], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 67, 68, 70, 72, 73, 74, 94, 107, 108, 110, 115, 117, 125, 128, 158, 233, 247, 248, 249, 250, 252, 253, 254, 255, 294, 299, 301, 305, 307, 309, 310], "from_pixel": [3, 77, 78, 94, 283, 298, 299, 301, 306, 307, 309, 310], "9": [3, 7, 32, 35, 38, 41, 124, 134, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 231, 236, 295, 298, 299, 300, 304, 305, 307, 308], "81": [3, 299, 305, 306], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 92, 93, 94, 95, 97, 99, 100, 108, 109, 110, 113, 117, 124, 125, 127, 128, 129, 131, 133, 134, 136, 144, 145, 147, 148, 150, 151, 155, 157, 158, 160, 162, 164, 165, 166, 167, 168, 171, 175, 176, 179, 180, 181, 183, 185, 189, 190, 192, 193, 195, 198, 199, 202, 203, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 241, 244, 245, 246, 265, 272, 286, 290, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 105, 108, 110, 125, 129, 130, 134, 145, 154, 158, 160, 163, 164, 165, 174, 185, 191, 192, 196, 197, 198, 199, 200, 203, 204, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 229, 230, 236, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 298, 299, 300, 301, 303, 305, 307, 309], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 94, 95, 98, 99, 100, 101, 107, 110, 115, 117, 125, 127, 134, 140, 143, 145, 151, 154, 160, 163, 164, 165, 168, 171, 174, 185, 186, 187, 188, 190, 191, 193, 195, 197, 199, 202, 204, 223, 283, 286, 294, 296, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "simpli": [3, 6, 34, 36, 39, 45, 102, 121, 223, 294, 295, 298, 300, 304, 310], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 165, 166, 167, 173, 182, 203, 238, 239, 240, 241, 242, 244, 257, 294, 299, 306, 307], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 110, 127, 299, 307], "d": [3, 35, 53, 54, 58, 200, 309], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 68, 73, 74, 92, 95, 98, 100, 101, 108, 110, 114, 124, 125, 127, 134, 185, 193, 196, 197, 200, 238, 239, 240, 241, 242, 261, 294, 298, 299, 300, 301, 304, 305, 307, 309, 310], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 299, 304, 305], "_reset": [3, 67, 70, 71, 72, 73, 74, 92, 94, 98, 101, 144, 162, 303], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 92, 94, 95, 97, 98, 101, 104, 107, 108, 109, 110, 113, 114, 115, 117, 119, 125, 127, 128, 129, 130, 131, 133, 134, 136, 143, 144, 145, 147, 154, 157, 158, 160, 162, 163, 164, 165, 173, 174, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 209, 210, 211, 212, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 236, 238, 239, 240, 241, 247, 248, 249, 250, 252, 253, 254, 255, 267, 268, 270, 271, 272, 274, 283, 290, 294, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 98, 101, 115, 117, 125, 129, 143, 144, 154, 158, 162, 173, 174, 182, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 202, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 278, 283, 293, 294, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 92, 94, 95, 98, 100, 101, 104, 108, 109, 110, 113, 115, 117, 119, 125, 127, 129, 130, 131, 133, 134, 136, 143, 144, 145, 147, 148, 157, 158, 160, 162, 165, 166, 167, 180, 181, 185, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 236, 238, 239, 240, 241, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 267, 268, 270, 271, 272, 274, 283, 290, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "pixel": [3, 7, 26, 94, 96, 104, 106, 110, 113, 116, 127, 131, 133, 147, 169, 170, 257, 283, 294, 298, 299, 301, 306, 307, 309, 310], "500": [3, 298, 299, 305, 309, 310], "uint8": [3, 47, 127, 299, 306, 307, 309, 310], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 68, 70, 71, 72, 73, 74, 83, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 104, 106, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 209, 210, 212, 213, 215, 216, 217, 221, 223, 224, 225, 226, 227, 228, 229, 230, 236, 237, 238, 239, 240, 241, 242, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 268, 269, 270, 271, 272, 273, 274, 278, 279, 280, 283, 286, 288, 289, 290, 294, 296, 298, 299, 300, 301, 304, 305, 307, 309, 310], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 98, 101, 115, 117, 125, 134, 143, 144, 154, 158, 162, 173, 174, 182, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 202, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 283, 294, 300, 301, 303, 304, 305, 306, 307, 309, 310], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 134, 158, 195, 196, 200, 298, 299, 303, 304, 310], "launch": [3, 18, 19, 20, 22], "quit": [3, 294, 298, 299, 300, 304, 310], "mani": [3, 4, 38, 67, 209, 211, 215, 222, 225, 226, 230, 294, 298, 299, 300, 304, 305, 307, 310], "start": [3, 4, 5, 13, 21, 45, 68, 143, 269, 298, 299, 304, 305, 307, 310], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 67, 70, 72, 73, 74, 125, 134, 201, 202, 300, 301, 304, 305, 310], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 117, 129, 189, 193, 195, 272, 296, 299, 300, 301, 305, 307, 310], "great": [3, 7, 8, 309], "speedup": [3, 8, 310], "precis": [3, 143, 298, 300], "anoth": [3, 8, 34, 36, 39, 67, 70, 72, 73, 74, 98, 99, 101, 125, 128, 160, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 294, 295, 298, 300, 301, 303, 304, 305, 310], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 67, 70, 72, 73, 74, 114], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 67, 68, 70, 72, 73, 74, 94, 98, 101, 113, 117, 126, 133, 134, 143, 191, 195, 199, 229, 238, 239, 240, 241, 242, 244, 274, 276, 290, 293, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 103, 109, 117, 129, 136, 189, 193, 195, 298, 300, 304, 307], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 84, 94, 98, 101, 108, 115, 134, 136, 140, 165, 168, 183, 238, 239, 240, 241, 265, 273, 303, 304, 307, 310], "mismatch": [3, 299], "mostli": [3, 17, 295, 307, 310], "purpos": [3, 7, 94, 286, 298, 300, 301, 304, 306, 310], "want": [3, 6, 7, 8, 110, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 294, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310], "subprocess": [3, 68], "addit": [3, 4, 32, 52, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 189, 190, 199, 208, 223, 238, 295, 298, 299, 304, 307], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 72, 307], "multithreadedenv": [3, 292], "underneath": 3, "higher": [3, 4, 203, 298, 299, 300, 307, 310], "restrict": [3, 299, 306, 307, 310], "flexibl": [3, 9, 72, 231, 295, 296, 307, 310], "cover": [3, 293, 300, 305, 309], "popular": [3, 294, 301, 304], "atari": [3, 4, 94, 310], "classic": [3, 71, 299], "benchmark_batched_env": 3, "py": [3, 84, 173, 182, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310], "pipelin": [3, 7, 294, 300], "seamlessli": [3, 305], "modif": [3, 5, 26, 28, 32, 67, 70, 72, 73, 74, 104, 223, 300, 305], "infrastructur": [3, 304], "view": [3, 8, 27, 32, 33, 67, 70, 72, 73, 74, 92, 154, 160, 305, 307, 309, 310], "core": [3, 8, 283, 296, 301, 309], "decis": [3, 146, 172, 190, 214, 224, 301, 304, 307], "act": [3, 4, 165, 210, 212, 221, 226, 228, 230, 301, 304], "world": [3, 5, 71, 205, 218, 304, 305, 310], "paradigm": [3, 17, 304], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 67, 70, 72, 73, 74, 100, 109, 118, 129, 136, 145, 158, 160, 165, 192, 196, 200, 209, 211, 212, 215, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 233, 238, 270, 274, 295, 298, 299, 301, 304, 305, 310], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 67, 70, 71, 72, 73, 74, 124, 129, 134, 223, 277, 294, 296, 298, 299, 300, 301, 304, 305, 307, 310], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 73, 155, 165, 274, 288, 289, 298, 299, 300, 301, 304, 307, 309], "accommod": [3, 13, 14, 16, 17], "thank": [3, 298], "carrier": [3, 300, 301, 307], "particular": [3, 32, 45, 52, 67, 70, 72, 73, 74, 129, 295, 296, 299, 301, 303, 304, 307], "carri": [3, 21, 45, 67, 70, 72, 73, 74, 125, 223, 299, 301, 304, 305, 307], "thu": [3, 222, 304], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 294, 299, 300, 304], "hand": [3, 7, 21, 304, 305], "kept": [3, 13, 14, 16, 17, 62, 73, 74, 100, 128, 136, 143, 157, 180, 181], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 67, 70, 72, 73, 74, 99, 125, 127, 129, 136, 158, 160, 165, 196, 199, 200, 202, 203, 208, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 238, 239, 240, 241, 265, 276, 288, 289, 290, 294, 296, 298, 299, 300, 301, 304, 305, 307, 310], "let": [3, 6, 7, 32, 43, 67, 70, 72, 73, 74, 94, 158, 165, 191, 270, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "understand": [3, 8, 298, 299, 304], "go": [3, 7, 114, 117, 190, 244, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "vma": [3, 89, 90, 304], "robot": [3, 5, 7, 113, 131, 133, 304], "what": [3, 8, 35, 44, 67, 70, 72, 73, 74, 125, 143, 197, 293, 294, 295, 299, 300, 301, 304, 305, 306, 307, 309, 310], "vmasenv": [3, 292, 304], "balanc": [3, 298, 299, 310], "num_env": [3, 21, 89, 90, 304], "n_agent": [3, 89, 90, 165, 173, 182, 236, 304], "5": [3, 24, 26, 28, 35, 38, 41, 42, 68, 72, 87, 89, 90, 117, 144, 145, 154, 155, 157, 159, 160, 162, 165, 169, 174, 180, 181, 190, 191, 197, 203, 222, 225, 227, 230, 294, 298, 299, 304, 305, 307, 308, 309, 310], "td": [3, 15, 26, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 92, 95, 98, 99, 100, 101, 107, 108, 110, 117, 124, 125, 127, 129, 134, 143, 144, 154, 158, 161, 162, 173, 174, 182, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 202, 204, 236, 239, 240, 241, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 265, 273, 283, 294, 295, 298, 301, 304, 305, 309, 310], "info": [3, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 89, 90, 131, 135, 304, 307], "ground_rew": 3, "pos_rew": [3, 304], "16": [3, 32, 67, 70, 72, 73, 74, 94, 298, 299, 300, 301, 305, 307], "root": [3, 26, 28, 94, 143, 157, 180, 181, 301, 304, 305, 307, 310], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 104, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 299, 305], "vari": [3, 114, 304], "creation": [3, 73, 74, 298, 310], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 67, 70, 72, 73, 74, 113, 117, 120, 129, 133, 168, 174, 192, 196, 198, 199, 200, 238, 239, 240, 241, 265, 277, 298, 299, 300, 301, 304, 305, 307, 309, 310], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 68, 117, 127, 134, 222, 230, 295, 296, 298, 300, 301, 304, 305, 307, 309], "append": [3, 8, 35, 38, 41, 42, 52, 53, 68, 117, 125, 158, 191, 197, 298, 299, 300, 301, 304, 305, 306, 307, 309], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 67, 70, 72, 73, 74, 92, 213, 215, 236, 292, 300, 304, 310], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 67, 70, 72, 73, 74, 84, 134, 293, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "simpl": [3, 9, 32, 33, 67, 70, 72, 73, 74, 147, 200, 213, 223, 227, 238, 294, 295, 298, 299, 300, 304, 310], "composit": [3, 26, 28, 67, 70, 72, 73, 74, 300, 305], "prefix": [3, 23, 32, 45, 67, 70, 72, 73, 74, 129, 223, 256, 301, 310], "exactli": [3, 32, 67, 70, 72, 73, 74, 85, 129, 298, 301, 304], "action_kei": [3, 15, 67, 70, 72, 73, 74, 92, 100, 143, 144, 161, 162, 189, 193, 195, 304], "reward_kei": [3, 67, 70, 72, 73, 74, 143, 144, 162, 268, 272, 304], "done_kei": [3, 67, 70, 72, 73, 74, 143, 304], "automat": [3, 5, 55, 56, 65, 67, 70, 72, 73, 74, 98, 101, 110, 185, 196, 294, 298, 300, 304, 305, 307, 309], "right": [3, 6, 7, 40, 159, 299, 300, 304, 305, 310], "sure": [3, 4, 7, 53, 63, 117, 191, 290, 294, 298, 300, 301, 304, 305, 307, 309, 310], "set_kei": [3, 209, 210, 211, 213, 215, 216, 221, 222, 223, 225, 226, 227, 228, 236, 242, 304], "awai": [3, 300, 304], "eas": [3, 304], "access": [3, 7, 8, 32, 35, 53, 67, 70, 72, 73, 74, 113, 131, 290, 293, 298, 304, 305, 307], "leaf": [3, 26, 28, 67, 70, 72, 73, 74, 200, 304], "abov": [3, 7, 32, 67, 70, 72, 73, 74, 157, 180, 181, 208, 295, 296, 298, 300, 304, 305, 310], "would": [3, 32, 40, 67, 70, 72, 73, 74, 158, 160, 296, 299, 300, 301, 305, 307, 310], "full": [3, 67, 70, 72, 73, 74, 192, 265, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "raw": [3, 4, 40, 157, 180, 181, 299, 305], "logic": 3, "torchvis": [3, 113, 133, 309, 310], "transformedenv": [3, 13, 67, 68, 70, 72, 73, 74, 92, 94, 97, 98, 101, 104, 107, 108, 109, 110, 115, 117, 125, 128, 134, 158, 283, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "primit": [3, 4, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230], "built": [3, 5, 7, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 231, 236, 284, 286, 287, 290, 298, 299, 300, 301, 307, 310], "base_env": [3, 92, 98, 100, 101, 108, 125, 298, 299, 300, 306, 309, 310], "totensorimag": [3, 94, 299, 301, 307, 309, 310], "in_kei": [3, 13, 14, 16, 17, 21, 71, 93, 94, 95, 96, 98, 100, 101, 104, 106, 108, 110, 111, 113, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 129, 131, 133, 134, 144, 153, 158, 162, 173, 182, 183, 185, 186, 187, 188, 190, 191, 196, 197, 199, 200, 202, 203, 204, 209, 210, 211, 212, 213, 215, 221, 222, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 256, 257, 283, 286, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "resiz": [3, 94, 299, 301, 307, 310], "64": [3, 94, 147, 148, 156, 158, 165, 173, 236, 298, 299, 300, 301, 303, 305, 306, 307, 309, 310], "now": [3, 7, 35, 94, 165, 298, 299, 300, 301, 303, 304, 306, 307, 310], "appar": [3, 267], "bring": [3, 300, 310], "signific": [3, 5, 8, 300, 310], "kind": [3, 38, 44, 143, 307], "consult": 3, "interest": [3, 196, 200, 294, 299, 300, 304, 305, 310], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 71, 93, 94, 95, 96, 104, 106, 108, 110, 111, 113, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 131, 133, 144, 153, 154, 158, 162, 173, 174, 182, 183, 185, 186, 187, 188, 190, 192, 196, 197, 198, 199, 200, 202, 203, 204, 209, 210, 211, 215, 221, 222, 225, 226, 227, 228, 236, 238, 239, 240, 241, 270, 286, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "easi": [3, 5, 53, 189, 193, 195, 294, 295, 298, 299, 300, 304, 306, 307, 310], "graph": [3, 4, 8, 234, 235, 298, 305], "inv": [3, 100, 117, 305], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 134, 180, 191, 238, 269, 296, 298, 299, 300, 305, 309, 310], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 129, 185, 191, 199, 201, 202, 204, 209, 210, 212, 215, 221, 225, 226, 227, 228, 230, 299, 304], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 97, 100, 145, 202, 310], "taken": [3, 67, 70, 72, 73, 74, 163, 164, 295, 298, 300, 301, 304, 305], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 94, 98, 101, 110, 117, 207, 221, 305], "in_keys_inv": [3, 98, 101, 110, 111, 115, 117, 128, 298, 303, 305, 310], "append_transform": [3, 35, 38, 41, 42, 52, 53, 113, 125, 131, 298, 301, 305, 309, 310], "doubletofloat": [3, 283, 298, 300, 303], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 98, 101, 110, 115, 117, 125, 127, 140, 143, 144, 154, 158, 162, 173, 174, 182, 185, 186, 187, 188, 190, 191, 195, 196, 197, 198, 199, 202, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 283, 294, 300, 301, 303, 304, 305, 306, 307, 309, 310], "float64": [3, 32, 67, 70, 72, 73, 74, 89, 97, 98, 101, 113, 125, 128, 129, 131, 133, 199, 303, 310], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 98, 101, 129, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 296, 298, 300, 307], "manipul": [3, 4, 8, 113, 131, 310], "keep": [3, 4, 7, 8, 14, 42, 62, 110, 113, 133, 134, 143, 195, 267, 274, 298, 299, 300, 301, 304, 305, 307, 309, 310], "mind": [3, 304], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 100, 143, 294, 307], "unexpect": [3, 32, 67, 70, 72, 73, 74, 129, 310], "behviour": 3, "fortun": [3, 301], "eras": [3, 67, 70, 72, 73, 74], "ident": [3, 13, 14, 16, 32, 73, 74, 165, 238, 239, 240, 241, 288, 289, 299, 304], "alreadi": [3, 8, 11, 32, 45, 67, 70, 72, 73, 74, 125, 200, 238, 239, 240, 241, 298, 300, 304], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 67, 68, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 134, 190, 199, 271, 276, 277, 299, 300, 304, 305, 307], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 67, 70, 72, 73, 74, 97, 98, 99, 101, 108, 115, 128, 129, 134, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 295, 298, 300, 301, 304, 305, 306, 307, 310], "happen": [3, 67, 70, 72, 73, 74, 189, 299, 306, 310], "catfram": [3, 299], "hold": [3, 234, 235, 305, 307], "notic": [3, 94, 300, 305], "parenthood": 3, "reason": [3, 4, 8, 32, 67, 70, 72, 73, 74, 113, 131, 158, 295, 298, 299, 300, 305, 307], "henc": [3, 35, 114, 294, 298, 300, 304, 305], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 305], "log": [3, 4, 8, 40, 152, 153, 154, 163, 164, 171, 181, 191, 192, 196, 200, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 267, 268, 270, 274, 286, 294, 295, 296, 298, 299, 300, 304, 305, 309], "mission": 3, "irrespect": [3, 199, 200], "dmcontrol": [3, 298], "jumanji": [3, 86, 87], "natur": [3, 298, 301], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 67, 70, 72, 73, 74, 104, 110, 114, 126, 145, 158, 159, 160, 163, 164, 169, 177, 183, 189, 190, 193, 200, 299, 300, 301, 304, 305, 306, 307, 309, 310], "special": [3, 294, 298, 301, 310], "statu": 3, "framework": [3, 4, 9, 22, 71, 309, 310], "Its": [3, 32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 134, 199, 242], "success": [3, 94, 128, 299, 305, 307, 309], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 67, 70, 72, 73, 74, 108, 128, 189, 193, 195, 298, 299, 300, 301, 303, 304, 305, 307, 310], "foundat": [3, 5, 300, 304], "inspir": [3, 305], "howev": [3, 5, 7, 32, 67, 70, 72, 73, 74, 94, 120, 123, 124, 129, 294, 298, 299, 300, 301, 307, 310], "gone": [3, 4, 5], "sometim": [3, 301, 310], "hard": [3, 7, 220, 299, 310], "adopt": [3, 5, 298, 310], "prefer": [3, 17, 20, 35, 38, 41, 42, 114, 121, 225, 271, 294, 300, 304, 307], "moreov": 3, "maintain": [3, 5, 9, 305], "gymnasium": [3, 5, 11, 81, 82, 83, 84, 299, 300, 305, 309], "both": [3, 7, 32, 67, 68, 70, 72, 73, 74, 94, 115, 129, 145, 158, 160, 165, 186, 187, 188, 192, 198, 209, 211, 212, 215, 221, 222, 223, 225, 226, 227, 228, 230, 270, 294, 298, 300, 304, 305, 306, 307, 310], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 299, 300, 301, 304, 305, 307, 310], "decor": [3, 8, 11, 84, 223, 238, 239, 240, 241], "set_gym_backend": [3, 83, 292], "relev": [3, 40, 238, 239, 240, 241, 242, 305], "gym_backend": [3, 84, 292], "env1": [3, 303], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 67, 70, 72, 73, 74, 84, 113, 133, 162, 274, 296, 299], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 84], "__init__": [3, 7, 71, 84, 92, 98, 101, 144, 154, 162, 204, 210, 212, 215, 221, 226, 228, 230, 296, 305, 310], "env2": [3, 303], "_env": [3, 6, 310], "classic_control": 3, "pendulumenv": [3, 305], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 300], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 67, 70, 72, 73, 74, 94, 95, 123, 125, 129, 145, 160, 163, 164, 165, 195, 197, 198, 206, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 278, 290, 293, 296, 300, 301, 305, 307, 310], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 85, 114, 124, 125, 128, 129, 137, 138, 143, 155, 159, 176, 195, 216, 260, 296, 298, 299, 300, 301, 304, 305, 309, 310], "tell": [3, 4, 7, 298, 301, 304], "mo_gymnasium": [3, 82, 83], "handi": 3, "side": [3, 4, 310], "v0": [3, 70, 79, 80, 81, 82, 86, 87, 97, 129, 134, 286], "26": [3, 299, 305, 306, 307], "fun": [3, 11, 84, 300, 304], "reveal": 4, "bug": [4, 309], "curv": 4, "won": [4, 32, 67, 68, 70, 72, 73, 74, 113, 133, 274, 290, 299, 300], "exploit": 4, "video": [4, 9, 257, 270, 290, 304], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 67, 70, 72, 73, 74, 114, 197, 299, 300, 301, 304, 305], "cv": 4, "flip": 4, "imag": [4, 7, 77, 96, 113, 127, 133, 160, 298, 299, 304, 306, 310], "correspondingli": 4, "prescript": 4, "tune": [4, 108, 304, 306], "coeffici": [4, 40, 108, 304], "bonu": [4, 209, 211, 222, 225], "beta": [4, 35, 41, 58, 221, 222, 298, 299, 307, 309], "altern": [4, 27, 72, 151, 163, 164, 208, 223, 298, 300, 304], "reduc": [4, 6, 27, 124, 299, 300], "downstream": [4, 298], "formul": [4, 304], "ob": [4, 8, 26, 28, 92, 98, 99, 101, 110, 127, 140, 143, 165, 197, 204, 210, 212, 215, 221, 226, 228, 230, 238, 239, 240, 241, 299, 303, 305, 309, 310], "rate": [4, 134, 237, 299, 300, 304], "gradient": [4, 32, 67, 70, 72, 73, 74, 129, 157, 164, 167, 171, 180, 181, 209, 211, 212, 215, 221, 222, 223, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 274, 298, 300, 304, 305], "norm": [4, 8, 274, 298, 299, 300, 304, 305], "easier": [4, 294, 298], "behavior": [4, 32, 67, 70, 72, 73, 74, 129, 221, 300, 304], "local": [4, 7, 10, 16, 21, 32, 67, 70, 72, 73, 74, 129, 165, 173, 182, 236, 262, 304], "optima": 4, "sens": [4, 305], "product": [4, 9, 288, 289], "sum": [4, 21, 31, 33, 163, 164, 182, 218, 237, 244, 295, 298, 299, 300, 301, 304, 305, 310], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 120, 134, 195, 262, 267, 299, 301, 304, 305, 307], "stat": [4, 110, 278, 290, 299, 300], "w": [4, 94, 96, 116, 127, 195, 257, 299, 301, 307], "r": [4, 32, 92, 110, 200, 208, 237, 294, 299, 305, 310], "yield": [4, 16, 21, 32, 67, 70, 72, 73, 74, 223, 298], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 67, 70, 72, 73, 74, 129, 212, 213, 300, 304, 307], "futur": [4, 32, 67, 70, 72, 73, 74, 113, 129, 133, 160, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 293, 309], "past": [4, 299, 307], "becom": [4, 21, 304, 310], "spars": [4, 301], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 67, 70, 72, 73, 74, 120, 129, 166, 167, 195, 209, 211, 213, 216, 222, 225, 236, 299, 301, 307, 310], "intermedi": [4, 158, 192, 298, 306], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 298], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 67, 70, 72, 73, 74, 160, 300, 304], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 67, 70, 72, 73, 74, 94, 95, 98, 100, 101, 110, 117, 140, 143, 144, 158, 159, 163, 164, 165, 173, 182, 193, 195, 198, 206, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 244, 301, 309], "subtask": 4, "hierarch": [4, 309], "individu": [4, 18, 19, 20, 21, 32, 45, 67, 70, 72, 73, 74, 298, 304], "select": [4, 15, 35, 38, 41, 42, 52, 53, 92, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 131, 132, 134, 144, 158, 191, 197, 273, 298, 307], "fall": 4, "section": [4, 299, 304], "explicit": [4, 11, 45, 159, 307], "mechan": [4, 32, 67, 70, 72, 73, 74, 129, 299, 305], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 67, 70, 72, 73, 74, 221, 300, 304], "addition": 4, "timestep": [4, 40, 117, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 304], "realli": 4, "larg": [4, 27, 98, 101, 131, 299, 300, 304, 307], "target": [4, 8, 21, 32, 67, 68, 70, 72, 73, 74, 124, 128, 199, 200, 209, 210, 211, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 237, 238, 239, 240, 241, 242, 277, 285, 286, 295, 296, 301, 305], "huge": [4, 165, 301], "std": [4, 110, 134, 168, 172, 189, 298, 310], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 301, 302, 303, 306, 307, 308], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 67, 70, 72, 73, 74, 110, 113, 125, 128, 129, 131, 135, 144, 162, 166, 167, 189, 193, 195, 209, 210, 212, 213, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 230, 236, 283, 290, 299, 301, 305, 310], "estim": [4, 108, 186, 187, 188, 209, 210, 211, 212, 213, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 295, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "encount": [4, 293, 299, 305], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 298, 300, 304, 310], "bonus": 4, "denser": 4, "prior": [4, 176, 218, 304], "freshli": 4, "proper": [4, 6, 7, 238, 239, 240, 241, 299, 300, 304, 307], "doesn": [4, 11, 72, 98, 101], "drop": [4, 62, 143], "meant": [4, 71], "encourag": [4, 298, 299, 307], "measur": [4, 300], "novelti": 4, "revisit": 4, "previous": [4, 300, 310], "diminish": 4, "decreas": 4, "ideal": [4, 110, 305], "down": [4, 13, 14, 16, 17, 301], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 299, 300, 301, 304, 305, 309, 310], "distil": 4, "add": [4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 67, 70, 72, 73, 74, 94, 108, 158, 166, 194, 209, 269, 300, 301, 304, 305, 307, 309], "nois": [4, 135, 167, 184, 195, 226, 230, 270, 290, 298], "exploratori": [4, 209, 211, 222, 225], "could": [4, 6, 299, 300, 304, 306, 310], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 210, 212, 213, 215, 216, 221, 226, 228, 230, 236, 296, 298, 299, 307], "schedul": [4, 7, 40, 270, 300, 305], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 113, 133, 210, 212, 215, 226, 228, 230, 298, 299, 304, 307, 310], "divers": [4, 73, 74], "bootstrap": [4, 216, 239, 245, 246, 298, 301], "noisi": [4, 166, 167, 184, 294], "unstabl": [4, 157, 180, 181], "inher": 4, "stochast": [4, 108, 155, 167, 169, 176, 210, 214, 215, 221, 224, 226, 228, 294, 300, 304], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 158, 162, 186, 187, 188, 223, 226, 296, 299], "pomdp": [4, 307], "previou": [4, 10, 32, 40, 41, 125, 176, 190, 300, 301, 305, 310], "loos": [4, 294, 299, 300], "nonexist": 4, "architectur": [4, 151, 304], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 93, 94, 95, 96, 98, 100, 101, 104, 106, 110, 111, 114, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 134, 145, 152, 154, 160, 163, 164, 165, 171, 174, 178, 190, 201, 202, 214, 256, 257, 269, 270, 271, 273, 274, 283, 294, 298, 300, 301, 303, 304, 310], "rather": [4, 115, 298, 299, 300, 304], "lstm": [4, 158, 159, 168], "explicitli": [4, 299, 301, 304, 307], "rel": [4, 125, 152, 179, 298, 299, 304, 307], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 94, 299, 300, 307, 309, 310], "compens": 4, "descent": [4, 167], "1000": [4, 38, 67, 70, 72, 73, 74, 94, 134, 195, 196, 200, 220, 298, 299, 300, 301, 306, 307], "know": [4, 9, 35, 38, 41, 42, 189, 193, 226, 270, 298, 299, 300, 301, 304, 307], "minimum": [4, 25, 67, 70, 72, 73, 74, 118, 140, 155, 168, 179, 180, 181, 196, 203, 206, 208, 210, 215, 223, 224, 228, 265, 298, 300, 304, 305, 309, 310], "manual": [4, 18, 20, 21, 298, 301, 307], "deviat": [4, 110, 134, 144, 155, 162, 166, 167, 189, 225, 230, 298, 304], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 67, 70, 71, 72, 73, 74, 92, 98, 100, 101, 124, 129, 132, 134, 144, 158, 162, 189, 193, 195, 196, 197, 198, 199, 200, 209, 210, 212, 213, 215, 216, 217, 220, 221, 223, 225, 226, 227, 228, 229, 230, 236, 238, 239, 240, 241, 242, 270, 274, 276, 279, 280, 285, 286, 296, 299, 300, 301, 304, 305, 307, 309, 310], "stabil": [4, 105], "stage": [4, 298, 305], "never": 4, "prevent": [4, 26, 28, 157, 180, 181, 222, 225, 272, 307], "solv": [4, 9, 10, 293, 298, 299, 300, 304, 305, 307], "entir": [4, 300, 305, 307], "submit": [4, 293, 309], "suffici": [4, 298], "recommend": [4, 7, 304], "system": [4, 5, 300, 304, 305], "adequ": [4, 136, 300, 304], "infeas": 4, "allevi": [4, 294], "prune": 4, "develop": [4, 7, 298, 309], "filter": [4, 45, 209, 210, 212, 215, 221, 225, 226, 228], "fire": [4, 32, 67, 70, 72, 73, 74], "certain": [4, 18, 20, 21, 32, 45, 67, 70, 72, 73, 74, 84, 105, 123, 129, 222, 294, 298, 299, 300, 304, 310], "illeg": 4, "move": [4, 21, 32, 67, 70, 72, 73, 74, 97, 99, 113, 125, 128, 129, 131, 133, 134, 143, 160, 199, 272, 298, 299, 301, 309, 310], "chess": 4, "combin": [4, 128, 299, 307], "grasp": 4, "releas": [4, 7, 10, 32, 67, 70, 72, 73, 74, 129, 309], "top": [4, 144, 162], "p": [4, 68], "wherein": 4, "cumul": [4, 120, 124, 144, 244, 300], "probabl": [4, 8, 40, 152, 154, 158, 160, 163, 164, 171, 181, 196, 200, 294, 299, 309], "q": [4, 9, 147, 148, 149, 150, 153, 154, 156, 173, 174, 182, 188, 192, 197, 198, 210, 212, 213, 215, 216, 220, 221, 226, 228, 230, 236, 283, 292, 298], "flow": [4, 298, 300, 304, 305, 307], "reparameter": [4, 152, 164, 171], "soft": [4, 220, 228, 229], "critic": [4, 8, 186, 194, 209, 211, 212, 215, 221, 222, 225, 226, 227, 228, 230, 298, 300], "clip": [4, 40, 118, 211, 230, 274, 300, 304, 305], "oppos": [4, 45], "incorrect": 4, "thought": [4, 67, 70, 72, 73, 74], "bound": [4, 17, 21, 25, 26, 32, 67, 70, 72, 73, 74, 109, 134, 175, 176, 185, 191, 192, 195, 196, 197, 198, 199, 200, 203, 230, 294, 298, 299, 300, 310], "region": 4, "squash": [4, 301, 309], "tanh": [4, 145, 157, 160, 165, 179, 180, 181, 203, 300, 304, 305, 306, 309], "correct": [4, 108, 124, 277, 300, 301], "prob": [4, 163, 164, 171, 300, 304], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 99, 100, 108, 113, 129, 133, 196, 199, 200, 220, 223, 225, 283, 298, 303, 305, 310], "real": [5, 200, 295, 301, 305], "histor": 5, "wa": [5, 7, 67, 70, 72, 73, 74, 129, 220, 229, 295, 299, 300, 303, 307, 309], "ceas": 5, "fork": 5, "farama": [5, 81, 82, 300, 305], "detail": [5, 6, 7, 32, 67, 70, 72, 73, 74, 127, 129, 154, 192, 209, 216, 225, 293, 299, 303, 307], "usag": [5, 7, 52, 94, 158, 210, 221, 228, 231, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "known": [5, 7, 8, 245, 246, 298, 299], "bc": [5, 309], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 67, 70, 72, 73, 74, 94, 117, 134, 299, 307, 309], "face": [5, 8, 9, 310], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 136, 185, 191, 192, 196, 197, 198, 199, 200, 300, 304], "13": [5, 10, 11, 298, 299, 300, 301, 305, 306, 307, 308, 309], "construct": [5, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 98, 101, 136, 158, 176, 200, 274, 294, 299, 300, 301, 305, 307, 310], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 70, 72, 73, 74, 136, 158, 183, 186, 187, 188, 189, 193, 195, 197, 205, 236, 294, 298, 299, 300, 301, 304, 310], "best": [5, 9, 158, 304, 307, 309], "gymwrapp": [5, 70, 292, 300, 309], "feel": [5, 293, 309], "free": [5, 7, 98, 101, 209, 218, 225, 296, 300, 304, 309], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 100, 298, 299, 300, 301, 304, 307], "prepar": [6, 300], "conda": [6, 7, 293], "assum": [6, 26, 33, 40, 41, 42, 52, 70, 73, 74, 96, 104, 113, 114, 120, 125, 131, 133, 140, 158, 159, 183, 203, 213, 216, 228, 236, 247, 248, 249, 250, 252, 253, 254, 255, 257, 298, 300, 301, 303, 305], "7": [6, 10, 27, 33, 35, 38, 41, 144, 145, 159, 160, 162, 244, 298, 299, 301, 304, 305, 307, 308, 309], "cmake": 6, "14": [6, 11, 110, 298, 299, 301, 304, 305, 306, 307, 308], "activ": [6, 7, 9, 145, 151, 155, 160, 165, 211, 222, 225, 294, 309], "sim": 6, "bullet": 6, "physic": [6, 7, 296, 298, 304, 305], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 293], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 301], "y": [6, 7, 88, 159, 183, 298, 300, 304], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 67, 70, 72, 73, 74, 122, 223, 304, 310], "command": [6, 7, 10, 300, 304, 305, 310], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 292], "_has_habitat": 6, "available_env": [6, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 310], "startswith": [6, 295, 298], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 78, 84, 290, 296, 298, 307], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 68, 223, 298], "env_nam": [6, 72, 75, 77, 79, 81, 86, 298, 300, 310], "llvmlite": 6, "config": [6, 7, 113, 133, 146, 151, 172, 278, 279, 280, 283, 284, 287], "var": [6, 7, 32, 67, 70, 72, 73, 74, 129, 223], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 76, 145, 147, 148, 156, 160, 186, 187, 188, 196, 199, 202, 221, 298, 299, 300, 304, 305, 306, 307, 308, 309], "bind": 6, "deactiv": [6, 7, 191], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 67, 70, 72, 73, 74, 129, 223, 307], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 299], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 303, 305, 310], "joint": [7, 299], "dynam": [7, 221, 300, 305], "contact": [7, 37], "engin": [7, 305], "biomechan": 7, "graphic": 7, "anim": [7, 304], "area": 7, "demand": [7, 310], "fast": [7, 9, 76, 115, 226, 298, 299, 300], "accur": [7, 52, 299, 305, 307], "articul": 7, "acquir": [7, 300], "deepmind": [7, 8, 9, 77, 78, 300], "whomev": 7, "licenc": 7, "incorpor": [7, 189, 193, 195, 301, 305], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 74, 109, 128, 257, 294, 295, 298, 299, 300, 304, 307, 310], "legaci": 7, "pro": [7, 293], "tip": [7, 293], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 310], "sudo": [7, 293], "enabl": [7, 8, 52, 55, 56, 65, 158, 195, 270, 300, 304, 305, 307], "apt": [7, 304], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 299, 301], "fact": [7, 8, 298, 300, 304, 305, 306, 307, 310], "workflow": [7, 186, 187, 188], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 67, 70, 72, 73, 74, 113, 131, 133, 301, 310], "binari": [7, 24, 27, 33, 93, 154, 174, 191, 192, 197, 198, 213, 215, 236], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 257, 262, 290], "earlier": [7, 298, 300, 301, 304, 307], "roboti": 7, "download": [7, 10, 113, 133, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310], "html": [7, 72], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 67, 70, 72, 73, 74, 113, 124, 133, 144, 173, 271, 298, 300, 304], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54, 306], "bin": [7, 154, 192, 294], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 150, 196, 200, 298, 300, 307], "nvidia": 7, "older": [7, 11], "hack": [7, 298], "line": [7, 32, 67, 70, 72, 73, 74, 299, 304], "adatp": 7, "script": [7, 136, 283, 286, 290, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "unnot": [7, 114], "until": [7, 21, 128, 300, 301, 304], "complet": [7, 9, 62, 70, 94, 293, 295, 298, 300, 303], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 299, 307], "troubleshoot": 7, "gl": 7, "h": [7, 94, 96, 116, 127, 158, 162, 257, 299, 301, 307], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 89, 90, 92, 94, 124, 127, 144, 146, 151, 159, 162, 172, 183, 193, 195, 203, 210, 213, 215, 225, 226, 227, 230, 236, 238, 239, 240, 241, 244, 265, 296, 298, 299, 300, 301, 304, 305, 307, 309, 310], "fatal": 7, "No": 7, "directori": [7, 45, 55, 262, 296], "devel": 7, "ubuntu": 7, "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 299, 301, 305, 307], "disappear": [7, 299, 301, 303], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 87, 110, 145, 152, 159, 160, 165, 169, 179, 204, 283, 298, 299, 301, 304, 305, 307, 308, 309, 310], "glibcxx_3": 7, "29": [7, 299, 305], "compil": [7, 32, 67, 70, 72, 73, 74], "libosmesa": 7, "libgcc": 7, "Then": [7, 300, 303], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 67, 70, 72, 73, 74, 109, 129, 310], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 299, 304, 305, 307], "114": [7, 305, 307], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 305], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 92, 136], "opengl": [7, 304], "global": [7, 32, 67, 70, 72, 73, 74, 173, 182, 196, 200, 236, 296, 298, 304], "cuda_visible_devic": 7, "id": [7, 23, 40, 195, 226, 260, 283], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 305], "displai": [7, 274, 296, 298, 299, 304, 305], "correctli": [7, 32, 67, 70, 72, 73, 74], "lgl": 7, "libegl": 7, "x11": [7, 304], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 70, 143, 189, 193, 195, 225, 274, 296, 298, 299, 303, 307], "sketch": [8, 296], "_": [8, 68, 95, 98, 100, 101, 108, 110, 115, 127, 134, 185, 199, 204, 208, 209, 210, 212, 215, 221, 225, 226, 228, 230, 238, 239, 240, 241, 298, 299, 300, 301, 304, 305, 307, 309], "n_training_step": 8, "datapoint": [8, 45, 307], "onlin": [8, 13, 17, 94, 151, 172, 209, 214, 224, 225, 265, 290, 300, 301, 304, 307], "n_data_per_train": 8, "no_grad": [8, 32, 67, 70, 72, 73, 74, 108, 238, 239, 240, 241, 300, 301, 304], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 271, 286, 298, 299, 300, 304, 307], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 117, 271, 296, 298, 299, 300, 301, 304, 306, 307, 309], "loss_fn": [8, 301, 309], "backward": [8, 32, 67, 70, 72, 73, 74, 134, 209, 210, 212, 215, 221, 225, 226, 227, 228, 230, 298, 300, 301, 304, 305], "zero_grad": [8, 32, 67, 70, 72, 73, 74, 296, 298, 300, 301, 304, 305], "backpropag": [8, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 304, 305], "differenti": [8, 45, 108, 238, 239, 240, 241, 301, 304, 305], "denomin": 8, "artifact": 8, "numer": [8, 38, 134, 157, 180, 181, 185, 191, 192, 196, 197, 198, 199, 200, 272, 300, 307, 310], "misconcept": 8, "save": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 256, 274, 296, 304], "freed": 8, "appear": [8, 33, 305, 307], "compuat": 8, "twice": 8, "fix": [8, 125, 210, 224, 228, 299, 305, 310], "retain_graph": 8, "discuss": [8, 9, 304], "inplac": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 129, 298], "accumul": 8, "onto": [8, 33, 140, 185, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 301, 305], "exclud": [8, 52, 94, 102, 143, 173, 304, 307], "forward": [8, 32, 67, 70, 72, 73, 74, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 131, 132, 134, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 165, 166, 168, 169, 170, 172, 173, 175, 176, 178, 182, 183, 189, 190, 192, 193, 195, 198, 199, 200, 203, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 295, 305, 309], "submodul": [8, 32, 67, 70, 72, 73, 74, 83, 223], "param": [8, 32, 40, 67, 70, 71, 72, 73, 74, 97, 99, 108, 115, 128, 152, 154, 179, 190, 196, 199, 202, 204, 223, 232, 235, 238, 239, 240, 241, 242, 298, 304, 305, 306, 309], "grad": [8, 32, 67, 70, 72, 73, 74, 298, 300], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 168, 173, 199], "strictli": [8, 32, 67, 70, 72, 73, 74, 129, 298, 300], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 94, 104, 114, 130, 217, 295, 300, 304, 305], "ask": [8, 298, 300, 301, 304, 306, 310], "much": [8, 35, 41, 58, 222, 225, 300, 304, 305, 307, 310], "render": [8, 270, 298, 299, 300], "upon": [8, 305], "factor": [8, 32, 117, 157, 167, 180, 181, 189, 193, 195, 210, 216, 217, 219, 229, 244, 298, 299, 304, 307, 310], "fit": [8, 11, 110, 295, 296, 298], "everi": [8, 17, 26, 28, 32, 33, 63, 67, 70, 72, 73, 74, 124, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 274, 296, 298, 299, 300, 301, 304, 305], "bottlneck": 8, "affect": [8, 32, 67, 70, 72, 73, 74, 128, 129, 136, 238, 239, 240, 241], "brax": [8, 75, 76, 115, 310], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 67, 70, 72, 73, 74, 103, 129, 163, 164, 212, 213, 265, 295, 296, 298, 300, 301, 304, 305, 307], "underli": [8, 67, 70, 72, 73, 74, 223, 305], "tedeiou": 8, "priorit": [8, 35, 41, 58, 210, 212, 213, 215, 221, 226, 228, 230, 298, 299], "amount": [8, 195, 299, 307], "isn": [8, 34, 36, 39, 191, 199, 304], "contigu": [8, 67, 70, 72, 73, 74, 140, 300, 304, 305, 307, 309, 310], "costli": [8, 305], "concaten": [8, 21, 30, 31, 94, 95, 110, 128, 160, 202, 298, 299, 304, 305, 307, 310], "constitut": [8, 299, 304, 305], "plain": 8, "profil": 8, "fulli": [8, 32, 67, 70, 72, 73, 74, 299, 305, 307], "frequent": [8, 307], "program": [8, 221, 310], "functorch": [8, 10], "incl": 8, "suit": [8, 78, 300, 310], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 199, 202, 223, 304, 305, 309], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 72, 145, 160, 165, 223, 300, 305, 309], "lost": 8, "permut": [8, 62, 309, 310], "idea": [9, 226, 296, 301, 304], "introductori": 9, "intro": [9, 300, 301], "dai": [9, 309], "2022": [9, 10, 305, 309], "spin": [9, 310], "deep": [9, 94, 147, 148, 149, 150, 153, 195, 209, 220, 228, 229, 298], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 110, 134, 298, 299, 300, 301], "reddit": 9, "reagent": 9, "orient": [9, 310], "baselines3": 9, "tf": 9, "bandit": [9, 88], "tensorflow": [9, 163, 164], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 67, 70, 72, 73, 74, 108, 201, 202, 225, 294, 300, 301, 304, 305, 306, 310], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 309], "grade": 9, "factori": [9, 43], "throughput": [9, 298], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 67, 70, 72, 73, 74, 100, 140, 151, 154, 170, 174, 185, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 213, 215, 230, 236, 294, 299, 300, 301, 304, 305, 309, 310], "mbrl": [9, 71, 294], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 305], "dist": [10, 163, 164, 171], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 300, 301, 304], "notebook": [10, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310], "24": [10, 298, 299, 301, 305, 308], "11": [10, 27, 33, 45, 55, 56, 65, 68, 127, 144, 162, 299, 300, 301, 304, 305, 306, 307, 308], "12": [10, 55, 56, 65, 298, 299, 300, 301, 304, 305, 307], "pip": [10, 53, 304, 309, 310], "pip3": [10, 300, 301, 304], "extra": [10, 32, 67, 70, 72, 73, 74, 94, 134, 143, 294, 300, 301, 307], "url": 10, "org": [10, 35, 58, 94, 113, 131, 146, 147, 148, 149, 150, 151, 154, 155, 156, 162, 163, 164, 167, 169, 170, 172, 173, 175, 176, 182, 192, 195, 209, 210, 214, 216, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 238, 243, 251, 306], "whl": 10, "u": [10, 53, 305], "There": [10, 158, 294, 296, 300, 301, 304, 305, 307, 310], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 223], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 98, 100, 101, 104, 106, 107, 110, 111, 113, 114, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 133, 134, 143, 145, 147, 148, 149, 150, 152, 154, 156, 159, 160, 163, 164, 165, 166, 167, 171, 173, 174, 179, 180, 181, 182, 199, 215, 220, 226, 229, 251, 268, 270, 271, 279, 280, 283, 284, 286, 287, 288, 289, 290], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 67, 69, 70, 72, 73, 74, 77, 83, 88, 92, 93, 94, 95, 96, 98, 100, 101, 104, 106, 107, 108, 110, 111, 113, 114, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 133, 134, 137, 141, 143, 144, 145, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 173, 174, 182, 185, 191, 192, 196, 197, 198, 199, 200, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 236, 237, 238, 239, 240, 241, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 283, 284, 290, 299, 300], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 67, 68, 70, 71, 72, 73, 74, 84, 208, 223, 279, 280, 288, 289, 290, 299], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 55, 56, 57, 63, 65, 100, 190], "vs": [11, 158, 159, 309], "longer": [11, 299, 304, 307], "self": [11, 26, 28, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 92, 97, 98, 101, 113, 125, 128, 129, 131, 133, 144, 154, 162, 173, 182, 189, 193, 199, 204, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 296, 298, 299, 305, 309], "x": [11, 23, 26, 32, 38, 40, 108, 127, 145, 154, 156, 158, 159, 160, 162, 165, 183, 191, 197, 206, 208, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 274, 298, 300, 305, 307, 309], "23": [11, 299, 300, 305], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 67, 68, 70, 72, 73, 74, 84, 108, 125, 183, 191, 197, 217, 219, 238, 241, 249, 250, 254, 255, 286, 295, 298, 299, 304, 307, 309, 310], "import_modul": 11, "27": [11, 298, 299, 300, 305, 307], "get_class_that_defined_method": 11, "f": [11, 70, 208, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 298, 299, 300, 301, 304, 305, 307, 310], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 100, 110, 125, 129, 134, 157, 165, 180, 181, 197, 203, 210, 218, 223, 224, 228, 270, 271, 296, 298, 299, 300, 301, 305, 310], "module_set": 11, "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 113, 122, 128, 129, 130, 132, 133, 144, 145, 153, 158, 160, 161, 162, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 242, 264, 267, 271, 274, 290, 299], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 67, 69, 70, 72, 73, 74, 92, 94, 95, 97, 98, 99, 102, 103, 104, 107, 108, 109, 112, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 132, 134, 143, 144, 158, 161, 162, 189, 190, 192, 193, 195, 198, 199, 200, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 230, 236, 237, 238, 239, 240, 241, 242, 274, 298, 305], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 68, 73, 74, 298, 309], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 77, 94, 95, 96, 100, 104, 105, 109, 110, 113, 114, 116, 122, 123, 126, 129, 130, 131, 133, 136, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 209, 210, 211, 215, 217, 218, 222, 223, 224, 225, 226, 230, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 266, 267, 270, 271, 274, 276, 283, 284, 288, 289, 290, 305], "200": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 89, 90, 117, 147, 148, 155, 175, 176, 298, 301, 305], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 94, 117, 274, 277, 286, 296, 298, 299, 300, 301, 304, 307, 309], "create_env_kwarg": [13, 14, 16, 17, 68, 72, 73, 74, 298], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 67, 68, 70, 72, 73, 74, 108, 125, 129, 134, 145, 146, 147, 148, 149, 150, 151, 156, 159, 160, 172, 196, 200, 261, 262, 270, 279, 280, 283, 288, 289, 290, 298, 299, 300, 310], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 117, 299, 307], "interactiontyp": [13, 16, 18, 19, 20, 21, 138, 142, 196, 200, 270], "exploration_mod": [13, 16, 18, 19, 20, 292, 294], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 67, 70, 72, 73, 74, 97, 98, 101, 108, 110, 113, 117, 118, 119, 124, 125, 127, 128, 129, 131, 133, 134, 152, 155, 157, 160, 163, 164, 166, 167, 175, 176, 179, 181, 189, 199, 203, 206, 207, 208, 209, 210, 215, 218, 219, 220, 221, 224, 226, 228, 229, 230, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 272, 298, 299, 307, 310], "datacollector": [13, 14, 16, 17, 196, 200, 225, 300], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 185, 189, 191, 192, 195, 196, 197, 198, 199, 200, 202, 294, 309], "env_mak": [13, 14, 16, 21, 286, 310], "50": [13, 14, 16, 21, 37, 40, 299, 300, 301, 304, 305, 306, 307], "linear": [13, 14, 16, 17, 21, 32, 67, 70, 71, 72, 73, 74, 97, 108, 113, 125, 128, 129, 131, 133, 144, 145, 154, 160, 162, 165, 166, 167, 168, 174, 175, 176, 185, 186, 187, 188, 193, 194, 195, 196, 197, 199, 202, 204, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 238, 239, 240, 241, 286, 294, 299, 303, 306, 309], "2000": [13, 14, 16, 45, 300, 307], "enumer": [13, 14, 16, 21, 32, 38, 42, 67, 70, 72, 73, 74, 231, 295, 298, 299, 300, 301, 307, 309], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 67, 70, 72, 73, 74, 88, 117, 154, 174, 191, 192, 195, 197, 198, 294, 300, 301, 305, 307, 309, 310], "step_count": [13, 14, 16, 67, 70, 72, 73, 74, 123, 300, 301, 309], "shutdown": [13, 14, 16, 17, 21, 298, 309], "del": [13, 14, 16, 298, 300, 303, 309, 310], "randompolici": [13, 14, 16, 18, 19, 20, 22, 94, 117, 292, 307], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 211, 222, 225, 265, 267, 270, 274, 277, 278, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310], "lifespan": [13, 14, 16, 18, 19, 20, 299], "divis": [13, 14, 16, 18, 19, 20, 304], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 100, 301, 307], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 125, 129, 196, 200, 270, 288, 289, 290, 296, 299, 300, 305, 310], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 67, 70, 72, 73, 74, 300], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 299, 300, 304], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 128, 130, 165, 295, 296, 298, 299, 304, 307, 309], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 67, 70, 72, 73, 74, 100, 102, 121, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 238, 307, 310], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 294, 304, 305], "post": [13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74], "multistep": [13, 14, 16, 18, 19, 20, 21, 292, 299], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 110, 119, 157, 166, 175, 180, 181, 236, 294, 305, 307], "explorationtyp": [13, 14, 16, 20, 21, 223, 270, 298, 299, 300, 301, 309], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 225], "whole": [13, 14, 16, 26, 28, 32, 45, 67, 70, 72, 73, 74, 129, 265, 298, 300], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 276, 286, 296, 298, 309], "async": [13, 14, 18, 19, 20, 21, 298, 309], "ratio": [13, 14, 40, 298, 300], "finish": [13, 14, 21, 117], "rest": [13, 14, 294, 300, 301, 305, 309], "earli": [13, 14, 309], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 129, 134, 296, 298], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 129, 134, 290, 296, 298, 299, 310], "ordereddict": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 129, 134, 299], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 134, 158, 208, 209, 211, 222, 225, 274, 294, 304], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 67, 70, 72, 73, 74, 129], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 67, 70, 72, 73, 74, 105, 110, 123, 145, 160, 165, 221, 228, 307], "increment": [13, 14, 16, 17, 67, 70, 72, 73, 74, 123, 222], "env_fn": [13, 14, 16, 17, 68, 288, 289], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 149, 150, 305], "out_se": [13, 14, 16, 17, 310], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 26, 32, 52, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 113, 122, 125, 128, 129, 130, 132, 133, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 160, 161, 162, 165, 171, 179, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 236, 237, 238, 239, 240, 241, 242, 257, 261, 262, 264, 267, 274, 279, 280, 283, 287, 288, 289, 295, 300, 304], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 98, 100, 101, 104, 106, 107, 108, 110, 111, 114, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 134, 143, 147, 153, 154, 158, 159, 160, 165, 168, 172, 173, 174, 192, 197, 198, 203, 209, 210, 212, 215, 217, 221, 223, 225, 226, 227, 228, 230, 238, 239, 240, 241, 268, 270, 272, 281, 282, 298], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 76, 87, 92, 98, 101, 144, 162, 209, 210, 212, 213, 215, 221, 225, 226, 228, 230, 305, 309, 310], "describ": [15, 44, 95, 128, 179, 180, 260, 295, 298, 300, 304, 305, 310], "tensor_spec": [15, 92, 215, 225, 227], "boundedtensorspec": [15, 22, 26, 67, 70, 72, 73, 74, 193, 195, 196, 203, 209, 210, 212, 221, 225, 226, 228, 230, 292, 300, 304, 305, 309, 310], "cube": 15, "envcreat": [16, 22, 286, 287, 290, 292, 298, 299, 309, 310], "interruptor": 16, "_interruptor": 16, "outsid": [16, 304], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 67, 70, 72, 73, 74, 300, 304, 309, 310], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 70, 72, 108, 209, 211, 222, 225, 298, 303, 305, 309], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 112, 298, 309], "regular": [17, 34, 36, 39, 174, 192, 197, 198, 199, 200, 216, 276, 292, 296, 298, 299, 307, 310], "mere": 17, "greater": [17, 158, 298, 299, 309], "signal": [17, 52, 123, 295, 298, 300, 304, 307], "sent": [17, 55, 56, 65, 134], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 73, 74, 114, 134, 144, 145, 147, 149, 151, 153, 160, 162, 165, 185, 199, 204, 265, 271, 298, 300, 301, 305, 307, 310], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 274], "string": [18, 19, 20, 32, 37, 45, 54, 67, 70, 72, 73, 74, 84, 113, 133, 158, 196, 197, 208, 256, 273, 283, 295, 298, 300, 301], "respect": [18, 19, 20, 32, 67, 70, 72, 73, 74, 93, 97, 98, 101, 113, 114, 125, 128, 129, 131, 133, 176, 199, 204, 269, 300, 301, 304], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 115, 129, 143, 158, 190, 223, 295, 298, 299, 301, 307], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 293, 299, 300, 303, 307], "serv": [18, 20, 21, 85, 307, 310], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 67, 70, 72, 73, 74, 104], "seen": [18, 20, 21, 295, 298, 299, 301, 304, 307], "turn": [18, 20, 21, 106, 130, 191, 270, 295, 298, 299, 301, 305, 306], "mp": [18, 19, 20, 68, 134], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 298], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 225, 288, 289], "homonym": [18, 19, 20, 305], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 298], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 196, 200], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 288, 289, 298, 299], "coordin": 21, "hood": [21, 305], "init": [21, 32, 67, 70, 72, 73, 74, 298, 299, 300], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 307], "similarli": [21, 32, 62, 67, 70, 72, 73, 74, 201, 202, 221, 310], "num_cpu": 21, "num_gpu": 21, "1024": [21, 151, 299, 307], "equat": [21, 195, 208, 211, 229, 300, 305], "exce": [21, 300, 307], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 274, 298, 300, 301], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 89, 90, 145, 146, 147, 148, 151, 156, 160, 165, 169, 170, 172, 173, 182, 236, 298, 299, 301, 305, 306, 307, 309, 310], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "wherea": [22, 100, 223, 296], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 146, 151, 172, 190], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 68, 299], "__main__": [22, 68], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 100, 126, 179, 180, 181, 190, 195, 210, 211, 215, 224, 226, 228, 298, 300, 301, 304], "durat": [23, 304], "meta": [23, 44, 52, 69, 296, 300, 304, 307], "aren": [23, 301], "discret": [24, 27, 30, 31, 33, 47, 67, 70, 72, 73, 74, 100, 171, 174, 215, 216, 294, 299, 300, 304, 310], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 134, 294, 298, 304], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 100, 170, 171, 175, 208, 294, 299, 300, 301, 305, 307], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 309], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 195, 203], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 203, 305], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 67, 70, 72, 73, 74, 97, 98, 101, 108, 113, 125, 128, 129, 131, 133, 134, 199, 283, 310], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 145, 160, 177, 178], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 131, 146, 172], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 67, 70, 72, 73, 74, 290, 294], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 310], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 100, 158, 185, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 294, 309, 310], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 185, 191, 192, 196, 197, 198, 199, 200, 300, 304, 305, 307], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 125, 140, 305, 307], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 94, 122, 145, 177, 178, 298, 305, 307], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 94, 95, 125, 130, 134, 159, 178, 183, 290, 299, 300, 305, 307], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 128, 129, 168, 179, 290], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 92, 100, 154, 171, 174, 191, 192, 197, 198, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 301], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 154, 174, 191, 197, 213, 215, 236, 292, 294], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 67, 70, 72, 73, 74, 97, 98, 101, 113, 125, 128, 129, 131, 133, 134, 199, 208, 223, 298, 299, 300, 305, 307], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 125, 158, 301, 305, 306], "upper": [25, 109], "unnam": 26, "effect": [26, 32, 67, 70, 72, 73, 74, 94, 120, 129, 274, 298, 307, 310], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 67, 70, 72, 73, 74, 145, 160, 298, 299, 300, 305], "composite_spec": 26, "observation_vector": [26, 95, 283, 298], "randn": [26, 34, 36, 39, 55, 56, 65, 110, 140, 146, 151, 154, 159, 163, 164, 168, 171, 172, 174, 185, 186, 187, 188, 190, 191, 196, 197, 199, 202, 203, 204, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 238, 239, 240, 241, 273, 294, 309, 310], "td_project": 26, "is_empti": [26, 28, 305], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 67, 70, 72, 73, 74, 237, 304], "children": [26, 28, 32, 67, 70, 72, 73, 74], "keysview": [26, 28], "reflect": [26, 28, 143, 223, 277, 299, 300, 301, 304], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 67, 70, 72, 73, 74, 223], "succeed": [26, 28, 300, 304, 305], "selected_kei": [26, 28, 121, 298], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "device_typ": [27, 30, 33, 145, 146, 147, 148, 149, 150, 156, 160, 166, 167, 172], "onehottensorspec": 27, "categor": [27, 31, 33, 92, 154, 171, 174, 191, 192, 197, 198, 213, 215, 236, 301], "action_valu": [27, 33, 153, 154, 174, 191, 192, 197, 198, 215, 223, 236, 294, 301], "arang": [27, 33, 154, 164, 191, 265, 294, 307], "argmax": [27, 154, 174, 192, 198], "chosen_action_valu": [27, 33, 173, 174, 182, 197, 198, 236, 294, 301], "outcom": [27, 33, 152, 179], "lazi": [28, 29, 49, 50, 67, 70, 72, 73, 74, 113, 131, 166, 201, 202, 298, 299, 303, 307, 310], "represent": [28, 29, 32, 67, 70, 72, 73, 74, 113, 131, 133, 298, 305, 306, 310], "drawn": [28, 29, 125, 196, 200, 300, 304], "lazystackedtensordict": [28, 67, 70, 71, 72, 73, 74, 303, 309], "heterogen": [28, 29, 136, 165, 298, 299], "semant": [28, 29, 294], "thrown": [29, 32, 67, 70, 72, 73, 74, 307], "nvec": [30, 31], "cardin": [30, 31, 154, 174, 191, 192, 198, 300], "ax": [30, 166, 167], "m": [30, 32, 67, 70, 72, 73, 74, 100, 200, 294, 299, 305], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 213, 215, 236, 292], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 292], "gamma": [32, 117, 162, 209, 210, 212, 213, 215, 216, 217, 219, 221, 223, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 286, 295, 298, 299, 300, 304, 309], "sutton": [32, 295, 304], "1988": 32, "predict": [32, 40, 155, 161, 162, 190, 205, 216, 218, 219, 237, 294, 298, 299], "tempor": [32, 158, 162, 239, 240, 245, 246], "44": [32, 299, 301, 303, 305, 306, 307], "discount": [32, 68, 117, 210, 216, 217, 219, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 295, 299, 300, 304], "ahead": [32, 310], "add_modul": [32, 67, 70, 72, 73, 74], "child": [32, 67, 70, 72, 73, 74], "fn": [32, 37, 67, 70, 72, 73, 74, 168, 288, 289], "init_weight": [32, 67, 70, 72, 73, 74], "fill_": [32, 67, 70, 72, 73, 74, 299, 301, 310], "net": [32, 67, 70, 72, 73, 74, 159, 165, 209, 210, 215, 221, 225, 226, 227, 228, 283, 286, 299, 305, 306, 309], "in_featur": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 145, 147, 148, 149, 150, 159, 160, 165, 166, 167, 186, 199, 213, 309], "out_featur": [32, 67, 70, 71, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 144, 145, 147, 148, 149, 150, 155, 156, 158, 159, 160, 162, 165, 166, 167, 186, 191, 199, 213, 294, 298, 301, 309], "bia": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 145, 155, 158, 160, 165, 166, 167, 168, 193, 195, 199, 206, 207, 208, 223, 295, 298, 299, 300, 301, 304, 309], "requires_grad": [32, 67, 70, 72, 73, 74, 108], "bfloat16": [32, 67, 70, 72, 73, 74], "datatyp": [32, 67, 70, 72, 73, 74, 307], "member": [32, 67, 70, 72, 73, 74, 223], "xdoctest": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199, 223], "skip": [32, 67, 70, 72, 73, 74, 105, 129, 136, 196, 200, 223, 238, 239, 240, 241, 256, 257, 267, 270, 298, 299, 300, 305], "buf": [32, 67, 70, 72, 73, 74], "20l": [32, 67, 70, 72, 73, 74, 223], "1l": [32, 67, 70, 72, 73, 74, 223], "5l": [32, 67, 70, 72, 73, 74, 223], "__call__": [32, 37, 67, 70, 72, 73, 74, 200, 296], "associ": [32, 67, 70, 72, 73, 74, 175, 290, 298, 307], "doubl": [32, 46, 67, 70, 72, 73, 74, 97, 98, 99, 101, 113, 125, 128, 129, 131, 133, 199, 213, 216, 220, 226, 229, 236, 298, 299, 300, 301, 310], "eval": [32, 67, 70, 72, 73, 74, 129, 134, 298, 299, 300], "evalu": [32, 67, 70, 72, 73, 74, 129, 152, 163, 164, 171, 181, 226, 279, 280, 299, 300], "dropout": [32, 67, 70, 72, 73, 74, 129, 158, 160, 301], "batchnorm": [32, 67, 70, 72, 73, 74, 129], "disabl": [32, 67, 70, 72, 73, 74, 129, 157, 181, 298], "comparison": [32, 54, 67, 70, 72, 73, 74, 129, 223, 298, 299], "similar": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 132, 133, 134, 186, 188, 196, 199, 200, 295, 298, 299, 300, 301, 305, 310], "confus": [32, 67, 70, 72, 73, 74, 129], "extra_repr": [32, 67, 70, 72, 73, 74], "nontermin": 32, "original_reward": 32, "newli": [32, 67, 70, 72, 73, 74], "OR": 32, "reshap": [32, 158, 160, 300, 304], "get_buff": [32, 67, 70, 72, 73, 74], "throw": [32, 67, 70, 72, 73, 74, 310], "docstr": [32, 67, 70, 72, 73, 74], "get_submodul": [32, 67, 70, 72, 73, 74], "explan": [32, 67, 70, 72, 73, 74], "qualifi": [32, 67, 70, 72, 73, 74], "referenc": [32, 67, 70, 72, 73, 74], "attributeerror": [32, 67, 70, 72, 73, 74], "invalid": [32, 67, 70, 72, 73, 74, 163, 164], "resolv": [32, 67, 70, 72, 73, 74], "get_extra_st": [32, 67, 70, 72, 73, 74, 134], "set_extra_st": [32, 67, 70, 72, 73, 74, 134], "picklabl": [32, 67, 70, 72, 73, 74, 134], "ensur": [32, 35, 41, 58, 62, 67, 70, 72, 73, 74, 94, 113, 131, 134, 191, 294, 299, 300, 305, 307], "guarante": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 134, 309], "pickl": [32, 67, 70, 72, 73, 74, 134], "get_paramet": [32, 67, 70, 72, 73, 74], "sai": [32, 67, 70, 72, 73, 74, 306, 310], "net_b": [32, 67, 70, 72, 73, 74], "net_c": [32, 67, 70, 72, 73, 74], "conv": [32, 67, 70, 72, 73, 74, 145, 299], "conv2d": [32, 67, 70, 72, 73, 74, 145, 309], "kernel_s": [32, 67, 70, 72, 73, 74, 145, 147, 148, 169, 299, 309], "stride": [32, 67, 70, 72, 73, 74, 145, 147, 148, 156, 299, 309], "diagram": [32, 67, 70, 72, 73, 74], "show": [32, 67, 70, 72, 73, 74, 165, 294, 298, 300, 301, 304, 305, 307, 309], "itself": [32, 67, 70, 72, 73, 74, 83, 223, 300], "degre": [32, 67, 70, 72, 73, 74], "named_modul": [32, 67, 70, 72, 73, 74], "o": [32, 67, 70, 72, 73, 74], "transit": [32, 52, 67, 70, 72, 73, 74, 205, 298, 301, 305, 307], "half": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199, 298], "ipu": [32, 67, 70, 72, 73, 74], "strict": [32, 67, 70, 72, 73, 74, 129], "descend": [32, 67, 70, 72, 73, 74, 129], "persist": [32, 67, 70, 72, 73, 74, 129, 143], "enforc": [32, 62, 67, 70, 72, 73, 74, 129, 201, 305], "preserv": [32, 67, 70, 72, 73, 74, 129], "missing_kei": [32, 67, 70, 72, 73, 74, 129], "unexpected_kei": [32, 67, 70, 72, 73, 74, 129], "namedtupl": [32, 67, 70, 72, 73, 74, 129], "duplic": [32, 62, 67, 70, 72, 73, 74, 213, 216, 223, 236], "l": [32, 67, 70, 72, 73, 74, 237, 300, 305], "idx": [32, 67, 70, 72, 73, 74], "named_buff": [32, 67, 70, 72, 73, 74], "remove_dupl": [32, 67, 70, 72, 73, 74, 223], "prepend": [32, 67, 70, 72, 73, 74, 223], "running_var": [32, 67, 70, 72, 73, 74], "named_children": [32, 67, 70, 72, 73, 74], "conv4": [32, 67, 70, 72, 73, 74], "conv5": [32, 67, 70, 72, 73, 74], "memo": [32, 67, 70, 72, 73, 74], "named_paramet": [32, 67, 70, 72, 73, 74, 108, 223], "register_backward_hook": [32, 67, 70, 72, 73, 74], "removablehandl": [32, 67, 70, 72, 73, 74], "deprec": [32, 67, 70, 72, 73, 74, 129, 137, 141, 153, 209, 210, 211, 213, 215, 216, 221, 222, 225, 226, 227, 228, 236, 238, 239, 240, 241, 310], "favor": [32, 67, 70, 72, 73, 74, 300], "register_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_buff": [32, 67, 70, 72, 73, 74], "running_mean": [32, 67, 70, 72, 73, 74], "alongsid": [32, 67, 70, 72, 73, 74, 304], "num_featur": [32, 67, 70, 72, 73, 74], "register_forward_hook": [32, 67, 70, 72, 73, 74, 154, 174], "with_kwarg": [32, 67, 70, 72, 73, 74], "always_cal": [32, 67, 70, 72, 73, 74], "posit": [32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 104, 105, 122, 123, 126, 129, 130, 168, 295, 300, 304, 305, 307], "signatur": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199, 223, 295, 298, 305], "register_module_forward_hook": [32, 67, 70, 72, 73, 74], "regardless": [32, 67, 70, 72, 73, 74, 211, 222, 225], "register_forward_pre_hook": [32, 67, 70, 72, 73, 74], "invok": [32, 67, 70, 72, 73, 74], "And": [32, 67, 70, 72, 73, 74], "forward_pr": [32, 67, 70, 72, 73, 74], "register_module_forward_pre_hook": [32, 67, 70, 72, 73, 74], "grad_input": [32, 67, 70, 72, 73, 74], "grad_output": [32, 67, 70, 72, 73, 74], "subsequ": [32, 67, 70, 72, 73, 74, 301], "technic": [32, 67, 70, 72, 73, 74, 299, 301], "caller": [32, 67, 70, 72, 73, 74], "register_module_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "backward_pr": [32, 67, 70, 72, 73, 74], "register_module_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "register_load_state_dict_post_hook": [32, 67, 70, 72, 73, 74], "incompatible_kei": [32, 67, 70, 72, 73, 74], "clear": [32, 67, 70, 72, 73, 74, 266], "register_modul": [32, 67, 70, 72, 73, 74, 296], "alia": [32, 67, 70, 72, 73, 74], "register_paramet": [32, 67, 70, 72, 73, 74], "register_state_dict_pre_hook": [32, 67, 70, 72, 73, 74], "keep_var": [32, 67, 70, 72, 73, 74, 129], "made": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 195, 213, 223, 236, 298, 299, 301, 304, 306], "requires_grad_": [32, 67, 70, 72, 73, 74], "autograd": [32, 67, 70, 72, 73, 74, 129], "freez": [32, 67, 70, 72, 73, 74], "finetun": [32, 67, 70, 72, 73, 74], "gan": [32, 67, 70, 72, 73, 74], "share_memori": [32, 67, 68, 70, 72, 73, 74, 298], "share_memory_": [32, 67, 70, 72, 73, 74, 309], "destin": [32, 34, 36, 39, 67, 70, 72, 73, 74, 99, 129, 131, 143], "averag": [32, 67, 70, 72, 73, 74, 129, 134, 195, 217, 218, 272, 298, 300], "shallow": [32, 67, 70, 72, 73, 74, 129, 301], "pleas": [32, 67, 70, 72, 73, 74, 129, 293], "detach": [32, 67, 70, 72, 73, 74, 129, 223, 238, 239, 240, 241, 298], "non_block": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "memory_format": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "channels_last": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "complex": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199, 298, 299], "integr": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 150, 158, 162, 199, 294, 304, 305, 306], "unchang": [32, 67, 70, 72, 73, 74, 97, 100, 113, 125, 128, 129, 131, 133, 199, 271, 298, 307], "tri": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "pin": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "4d": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "ignore_w": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "1913": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "3420": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "5113": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "2325": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "torch_doctest_cuda1": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "gpu1": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "1914": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "5112": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199, 305], "2324": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "float16": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "cdoubl": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "3741": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "j": [32, 35, 58, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199, 296], "2382": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "5593": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199, 305], "4443": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "complex128": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "6122": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "1150": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 199], "to_empti": [32, 67, 70, 72, 73, 74], "dst_type": [32, 67, 70, 72, 73, 74], "xpu": [32, 67, 70, 72, 73, 74], "set_to_non": [32, 67, 70, 72, 73, 74], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 307], "discretebox": [33, 67, 70, 72, 73, 74, 300, 304, 310], "chosen_data": [34, 54], "rewarddata": [34, 54, 292], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 88], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 305], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 98, 101, 113, 129, 133, 266, 306], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 290], "determin": [34, 35, 36, 39, 41, 52, 58, 113, 133, 195, 299, 304], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 152, 179], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 301], "memmap": [34, 36, 39, 55, 73, 74, 134, 271, 307], "unbind": [34, 36, 39, 158], "alpha": [35, 41, 58, 145, 210, 215, 224, 226, 228, 298, 307, 309], "ep": [35, 41, 58, 134, 195, 211, 229, 272, 298, 299, 301], "1e": [35, 41, 58, 134, 152, 155, 168, 179, 298, 299, 300, 304], "08": [35, 41, 58, 298, 299, 300, 304, 305], "collate_fn": [35, 38, 41, 42, 52, 53, 307, 309], "prefetch": [35, 38, 41, 42, 52, 53, 54, 298, 299, 301, 307], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 94, 113, 131, 146, 147, 148, 149, 150, 151, 154, 155, 156, 162, 167, 169, 170, 172, 173, 175, 176, 182, 192, 195, 209, 210, 214, 216, 217, 218, 219, 220, 221, 224, 225, 228, 229, 238, 243, 251, 306], "ab": [35, 58, 113, 131, 134, 146, 151, 155, 156, 162, 167, 169, 170, 172, 173, 175, 176, 182, 209, 210, 214, 217, 218, 219, 220, 221, 224, 225, 228, 306], "1511": [35, 58, 156], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 179, 196, 200, 292, 295], "null": [35, 41, 58, 93], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 307], "merg": [35, 38, 41, 42, 52, 53, 305], "mini": [35, 38, 41, 42, 52, 53, 304], "decid": [35, 38, 41, 42, 309], "rb": [35, 38, 41, 42, 52, 53, 94, 117, 299, 301, 304, 306, 307, 309], "meth": [35, 38, 41, 42, 223], "incompat": [35, 38, 41, 42, 307], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 307], "tensordictprioritizedreplaybuff": [35, 292, 309], "simplifi": [35, 305, 307], "manual_se": [35, 38, 41, 42, 92, 100, 110, 117, 163, 164, 171, 185, 192, 193, 195, 203, 209, 210, 212, 221, 228, 304, 305, 309, 310], "_weight": [35, 41, 307, 309], "arrai": [35, 40, 298, 307], "update_prior": [35, 58, 271, 296, 299, 307, 309], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 130], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 124, 298, 307], "nonetyp": [36, 39], "logit": [36, 40, 163, 164, 171, 192, 215, 294], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206], "text": [37, 40, 43, 195, 300], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 146, 151, 172], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 307], "inde": [37, 100, 300, 305], "might": [37, 124, 261, 293, 298, 310], "writer": [38, 42, 52, 53, 60, 64, 292, 300], "randomsampl": [38, 42, 52, 53, 292, 298], "roundrobinwrit": [38, 42, 52, 53, 292], "Not": 38, "ref_model": 40, "reward_model": [40, 205], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 108], "kl": [40, 108, 218, 222], "penalti": [40, 222], "strai": 40, "far": [40, 157, 180, 181, 305, 310], "calcul": [40, 117], "gpt2rewardmodel": 40, "get_dataload": [40, 292], "promptdata": [40, 292], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 305, 307], "reward_kl": [40, 108], "reward_raw": 40, "sample_log_prob": [40, 186, 187, 188, 196, 200, 202, 225, 283, 300, 304, 309], "create_rollout_td": 40, "log_prob": [40, 152, 163, 164, 171, 181, 200], "log_ratio": 40, "kl_coef": 40, "plu": [40, 305], "replic": 40, "rindex": 40, "multipli": [40, 210, 211, 215, 222, 224, 225, 226, 228, 272, 298], "term": [40, 108, 166, 167, 208, 209, 215, 276, 299, 300, 304], "subtract": [40, 124], "ve": [40, 298, 301], "eo": 40, "limit": [40, 71, 94, 108, 298, 299, 301, 304, 305], "generation_config": 40, "generationconfig": 40, "ti": [40, 247, 248, 249, 250, 252, 253, 254, 255, 299], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 210, 213, 215, 216, 221, 223, 226, 228, 230, 236, 307, 309], "td_error": [41, 42, 210, 212, 213, 215, 216, 221, 223, 226, 228, 230, 236, 298, 307, 309], "reduct": [41, 58], "prioritizedreplaybuff": [41, 292, 309], "update_tensordict_prior": [41, 298, 307, 309], "prioritizedsampl": [41, 42, 213, 216, 236, 292, 298, 307], "min": [41, 58, 179, 180, 181, 190, 195, 210, 211, 215, 224, 226, 228, 299, 300, 304], "median": [41, 58, 196, 200], "len": [41, 55, 56, 65, 145, 160, 165, 298, 305, 306, 307, 309], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 87, 140], "huggingfac": [43, 194], "co": [43, 305], "doc": [43, 299, 304], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 292], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 72, 73, 74, 298, 299], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 70, 131, 143, 256, 307, 310], "condit": [45, 124, 191, 192, 197, 198, 208, 298, 305, 307], "elementwis": 45, "os": [45, 299], "cpu_count": 45, "vocabulari": 45, "loader": [45, 300], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 92, 94, 95, 96, 98, 100, 101, 102, 104, 107, 110, 114, 115, 117, 121, 123, 126, 131, 134, 143, 189, 190, 193, 195, 200, 213, 236], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 299], "batch_dimens": 45, "filder": 45, "tempfil": [45, 286, 298, 299], "randint": [45, 127, 307], "20": [45, 67, 70, 72, 73, 74, 190, 265, 298, 299, 300, 301, 304, 305, 308, 309, 310], "temporarydirectori": [45, 298, 299], "tmpdir": [45, 298, 299], "data_memmap": 45, "exclus": [48, 49, 104, 158, 163, 164, 191, 192, 197, 198, 229, 230, 238, 239, 240, 241, 242, 290, 294], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_timeout_as_don": 52, "env_kwarg": [52, 288, 289, 298], "metadata": [52, 300, 304, 310], "reconstruct": [52, 218, 298, 310], "timeout": 52, "recov": [52, 189, 193, 195, 201, 221, 303], "regard": [52, 154, 192, 209, 216, 225, 298, 300, 305], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 72, 183, 288, 289, 295, 300, 301, 307, 309], "left": [52, 97, 99, 108, 113, 115, 126, 128, 131, 133, 299, 300], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 117, 120, 124, 144, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 299, 304], "absent": 52, "traj_split": 52, "observationnorm": [52, 134, 290, 298, 299, 300, 301, 309], "maze2d": 52, "umaz": 52, "loc": [52, 108, 110, 119, 157, 168, 180, 181, 186, 187, 188, 196, 200, 202, 209, 210, 221, 225, 226, 227, 228, 278, 283, 290, 294, 298, 299, 300, 301, 304, 309], "128": [52, 148, 151, 299, 301, 305, 306, 307], "public": [53, 113, 133], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 88], "adult_onehot": [53, 88], "mushroom_num": [53, 88], "mushroom_onehot": [53, 88], "covertyp": [53, 88], "shuttl": [53, 88], "magic": [53, 88], "infinit": [54, 307], "three": [54, 294, 296, 300, 304, 305, 307], "block": [54, 294, 301], "pairwisedataset": [54, 292], "256": [54, 151, 299, 300, 304, 305], "scratch_dir": [55, 298, 307], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 190, 307, 310], "bar": [55, 56, 65, 190, 267, 268, 270, 274, 296, 299], "attach": [55, 56, 57, 63, 65, 299], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 163, 164, 298], "auto": [56, 65, 195, 210, 215, 224, 226, 228, 230, 295, 304], "zero_": [56, 65, 140], "max_capac": [58, 298, 307], "uniformli": [59, 223, 310], "roundrobin": [60, 64], "piec": [60, 64, 66, 298, 299, 300, 304, 305, 307], "consum": [62, 299, 300, 304, 307], "incomplet": 62, "unlik": [62, 216, 225, 299, 309], "fresh": 62, "caution": [62, 136, 310], "shuffl": [62, 304], "haven": [62, 306], "remain": [62, 99, 100, 108, 124, 167], "draw": 62, "__len__": 63, "_inplace_upd": [67, 72, 73, 74, 75, 76, 88, 89, 90, 129], "_batch_lock": [67, 72, 73, 74, 75, 76, 88, 89, 90, 129], "continuousbox": [67, 70, 72, 73, 74, 140, 300, 304, 305, 309, 310], "unboundedcontinuoustensorspec": [67, 70, 71, 72, 73, 74, 92, 98, 101, 125, 140, 144, 162, 185, 199, 202, 204, 227, 292, 300, 301, 304, 305, 310], "another_act": [67, 70, 72, 73, 74], "mutabl": [67, 70, 72, 73, 74], "batch_lock": [67, 69, 70, 72, 73, 74, 125, 129, 305], "immut": [67, 70, 72, 73, 74, 115, 129], "another_don": [67, 70, 72, 73, 74], "fake_tensordict": [67, 70, 72, 73, 74, 299], "fake": [67, 70, 72, 73, 74, 298, 299], "overridden": [67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 301], "afterward": [67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206, 310], "silent": [67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 165, 168, 169, 170, 172, 175, 176, 178, 183, 189, 190, 192, 193, 195, 198, 203, 206], "attibut": [67, 70, 72, 73, 74], "speak": [67, 70, 72, 73, 74, 298], "rand_act": [67, 70, 72, 73, 74], "_step": [67, 70, 72, 73, 74, 92, 98, 101, 104, 115, 124], "privat": [67, 70, 72, 73, 74, 305, 310], "another_reward": [67, 70, 72, 73, 74], "callback": [67, 70, 72, 73, 74, 304], "auto_reset": [67, 70, 72, 73, 74, 305], "auto_cast_to_devic": [67, 70, 72, 73, 74, 304], "break_when_any_don": [67, 70, 72, 73, 74, 304], "return_contigu": [67, 70, 72, 73, 74, 136, 303], "soon": [67, 70, 72, 73, 74], "ndim": [67, 70, 72, 73, 74], "concomitt": [67, 70, 72, 73, 74], "workspac": [67, 70, 72, 73, 74], "prevail": [67, 70, 72, 73, 74], "creator": [68, 279, 280, 288, 289, 290], "substitut": [68, 134], "vecnorm": [68, 290], "env_creat": [68, 298], "test_env1": 68, "_td": 68, "observation_count": [68, 310], "test_env2": 68, "sleep": [68, 310], "ps": 68, "p1": 68, "p2": 68, "join": [68, 292, 299, 300], "9934": 68, "env_str": 69, "info_dict_read": 70, "set_info_dict_read": 70, "put": [70, 134, 290, 294, 299, 300, 301, 305], "read_act": 70, "read_don": 70, "reader": [70, 299], "frame_skip": [70, 77, 78, 79, 81, 82, 86, 105, 267, 270, 277, 296, 298, 299, 300, 309], "broken": [70, 136], "read_ob": 70, "dictat": [70, 196, 200, 225, 298, 305], "inner": [70, 100, 296, 299, 300, 304, 310], "read_reward": 70, "baseinfodictread": 70, "info_dict": 70, "hoc": 70, "dict_read": 70, "default_info_dict_read": 70, "my_info_kei": 70, "some_env": 70, "environn": 71, "safeti": 71, "constraint": [71, 300, 304], "behav": [71, 85, 171, 221, 306], "mymbenv": [71, 144, 162], "world_model": [71, 144, 162, 218], "super": [71, 92, 98, 101, 144, 154, 162, 204, 210, 212, 215, 221, 226, 228, 230, 298, 305, 309], "hidden_observ": [71, 144, 162], "mlp": [71, 144, 145, 147, 148, 149, 150, 158, 159, 162, 165, 186, 191, 213, 283, 294, 299, 303, 306, 309], "worldmodelwrapp": [71, 144, 162], "activation_class": [71, 144, 145, 147, 148, 149, 150, 155, 156, 160, 162, 165, 299, 304, 309], "relu": [71, 144, 151, 162, 168, 208], "activate_last_lay": [71, 144, 150, 160, 162], "depth": [71, 144, 145, 147, 148, 149, 150, 155, 156, 160, 162, 165, 169, 170, 191, 294, 299, 303, 304], "run_type_check": 71, "equal": [72, 73, 74, 109, 110, 145, 153, 158, 160, 165, 229, 233, 265, 288, 289, 298, 300, 306], "readthedoc": 72, "en": 72, "python_interfac": 72, "thread": 72, "task_id": 72, "my_env_fun": [73, 74], "custom_attribute_list": [73, 74], "custom_attribut": [73, 74], "custom_method_list": [73, 74], "custom_method": [73, 74], "deploi": [73, 74], "slight": [73, 74, 299], "overhead": [73, 74], "share_individual_td": [73, 74], "shared_memori": [73, 74], "policy_proof": [73, 74], "ll": [73, 74, 298, 299, 300, 301, 304, 310], "hidden": [73, 74, 155, 158, 159, 169, 170, 175, 176, 186, 187, 188, 190, 199, 202, 211, 222, 225, 294, 301, 303, 309], "update_kwarg": [73, 74], "googl": [75, 76, 300, 301, 304], "ant": [75, 76, 306], "get_environ": 76, "87": [76, 298, 299, 305, 307], "acrobot": [76, 310], "fetch": [76, 108, 306, 307, 310], "dm_control": [77, 78, 298, 303, 310], "task_nam": 77, "cheetah": [77, 78, 298, 310], "mo": [81, 82], "minecart": [81, 82], "mo_gym": 82, "sumbodul": 83, "wish": [84, 307], "placehold": [85, 129], "secur": 85, "snake": [86, 87], "6x6": [86, 87], "td1": [87, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 298], "12x12": 87, "tsp50": 87, "tsp100": 87, "106": [88, 305], "scenario": [89, 90, 298, 304, 305], "flock": [89, 90], "continuous_act": [89, 90, 304], "cohesion_rew": 89, "collision_rew": 89, "separation_rew": 89, "velocity_rew": 89, "18": [89, 90, 165, 298, 299, 300, 301, 304, 305, 306, 310], "agent_collision_rew": 90, "agent_distance_rew": 90, "model_bas": [91, 144, 162], "mask_kei": [92, 114], "action_mask": 92, "adapt": [92, 222, 298, 305], "masker": 92, "binarydiscretetensorspec": [92, 213, 215, 236, 292], "maskedenv": 92, "ones_lik": 92, "scatter": 92, "unsqueez": [92, 94, 95, 127, 130, 159, 298, 301, 304, 305], "_set_se": [92, 98, 101, 305], "tranform": [92, 97, 102, 107, 121, 123, 124, 128, 132], "transform_reward_spec": [93, 97, 98, 99, 108, 115, 118, 119, 128, 130], "as_invers": 94, "account": [94, 163, 164, 294, 299, 301, 307], "movement": 94, "veloc": [94, 304, 305, 310], "propos": [94, 161, 220, 229, 283, 294, 301, 307], "pdf": [94, 146, 147, 148, 149, 150, 154, 172, 192, 195, 216, 226, 229, 238, 243, 251, 283], "1312": [94, 299], "5602": 94, "uesd": 94, "unsqueezetransform": [94, 305, 307], "consumpt": 94, "followin": 94, "pictur": 94, "cartpol": [94, 299, 301, 307, 310], "pixels_trsf": [94, 307], "grayscal": [94, 299, 301, 307, 310], "tensordictreplaybuff": [94, 271, 286, 292, 298, 299, 301, 307], "data_exclud": [94, 307], "_buffer": [94, 126], "transform_observation_spec": [94, 95, 96, 97, 98, 99, 102, 104, 106, 107, 108, 110, 115, 116, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 305], "del_kei": [95, 131, 303, 305], "unsqueeze_if_oor": 95, "observation_posit": 95, "observation_veloc": 95, "delet": 95, "key1": [95, 265, 273], "key2": [95, 265, 273], "crop": [96, 114, 257], "center": [96, 257], "width": [96, 116], "height": [96, 116], "squar": [96, 157, 180, 181, 257], "rewardsc": [97, 129, 298, 299, 301], "rewardclip": 97, "transformed_env": [97, 128, 129], "transform_env_devic": [97, 99, 128], "transform_input_spec": [97, 98, 99, 100, 110, 115, 120, 123, 128, 130], "transform_output_spec": [97, 99, 108, 115, 128], "untouch": [97, 99, 108, 115, 128], "transformfull_done_spec": [97, 99, 108, 115, 128], "dtype_in": 98, "dtype_out": 98, "scan": [98, 101, 201, 202], "expos": [98, 101, 201, 299], "not_transform": [98, 101], "rule": [98, 101, 200, 294, 300], "constructedw": [98, 101], "myenv": [98, 101], "orig_devic": 99, "unspecifi": 99, "transform_done_spec": [99, 128], "num_actions_effect": 100, "max_act": 100, "include_forward": 100, "dimension": [100, 158, 238, 243, 251, 304], "num_act": [100, 215], "action_out": 100, "_call": [100, 104, 305], "excluded_kei": 102, "finit": [103, 307], "first_dim": 104, "last_dim": 104, "allow_positive_dim": [104, 130], "flatten": [104, 271, 301, 304], "th": [104, 130, 305], "permit": [104, 130], "frameskip": 104, "repeatedli": [105, 300, 304], "init_kei": 107, "is_init": [107, 158, 195, 301], "tracker": 107, "probabilistictensordictmodul": [108, 200, 201, 309], "coef": 108, "pi_curr": 108, "pi_0": 108, "constrain": [108, 158, 225], "overfit": 108, "fine": [108, 306], "probabilist": [108, 196, 292, 300, 309], "get_dist": [108, 200, 201], "mod": [108, 158, 203, 301], "normalparamextractor": [108, 294, 300, 304], "probabilisticactor": [108, 186, 187, 188, 190, 209, 210, 214, 215, 221, 224, 225, 226, 227, 228, 230, 294, 298, 300, 304], "tanhnorm": [108, 186, 187, 188, 196, 202, 209, 210, 221, 225, 226, 227, 228, 230, 292, 300, 304, 309], "n_ob": [108, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230], "n_act": [108, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230], "distribution_class": [108, 186, 187, 188, 190, 196, 200, 202, 209, 210, 215, 221, 225, 226, 227, 228, 294, 298, 300, 304, 309], "return_log_prob": [108, 186, 187, 188, 196, 200, 202, 227, 294, 300, 304, 309], "apply_": 108, "copy_": [108, 298], "formulat": 108, "diverg": [108, 158, 196, 200, 218, 222], "noop": [109, 309], "30": [109, 175, 176, 298, 299, 300, 304, 305], "trial": 109, "op": [109, 189, 193, 276], "randomli": [109, 110, 125, 196, 200, 304, 305, 307], "noop_max": 109, "out_keys_inv": [110, 111, 115, 128, 305], "standard_norm": [110, 119, 298, 299, 301], "affin": [110, 119], "layer": [110, 134, 145, 147, 148, 155, 158, 160, 165, 166, 167, 169, 170, 177, 178, 184, 194, 203, 294, 299, 300, 301, 306], "normal": [110, 134, 145, 157, 160, 163, 164, 168, 180, 181, 189, 196, 200, 211, 222, 225, 270, 272, 290, 294, 296, 301, 304, 310], "set_default_tensor_typ": 110, "doubletensor": 110, "isclos": 110, "next_ob": [110, 238, 239, 240, 241, 309], "rubric": [110, 202], "init_stat": [110, 298, 299, 300, 301], "3752e": 110, "01": [110, 195, 206, 211, 222, 225, 298, 299, 301, 304, 305, 306, 308], "5087e": 110, "03": [110, 298, 299, 301, 304, 305, 306, 308], "9294e": 110, "9636": 110, "5608": 110, "6408": 110, "num_it": [110, 299, 300], "reduce_dim": [110, 298, 299, 300, 301], "cat_dim": [110, 298, 299, 300, 301], "keep_dim": [110, 299, 301], "constant": [110, 124, 296, 298, 300, 301, 310], "statist": [110, 134, 227, 290, 298, 299, 300, 310], "approach": [110, 298, 300, 310], "gaussian": [110, 125, 144, 162, 166, 167, 172, 189, 300], "empir": [110, 144, 162, 196, 200, 298, 300, 304], "3d": 110, "third": [110, 192, 304], "r3m": [113, 306], "resnet": [113, 131, 133], "visual": [113, 131, 133, 300, 305], "embed": [113, 131, 132, 133, 173, 185, 186, 187, 188, 199, 204, 306], "ego4d": [113, 131, 133], "univers": [113, 131, 133], "suraj": [113, 131], "nair": [113, 131], "aravind": [113, 131], "rajeswaran": [113, 131], "vikash": [113, 131, 133], "kumar": [113, 131, 133], "chelsea": [113, 131], "finn": [113, 131], "abhinav": [113, 131], "gupta": [113, 131], "2203": [113, 131, 162, 306], "12601": [113, 131, 306], "_init": [113, 131, 298], "snippet": [113, 131, 298], "resnet50": [113, 133, 306], "model_nam": [113, 131, 133, 260], "resnet34": 113, "resnet18": 113, "r3m_vec": [113, 306], "feed": [113, 133, 223, 294, 298, 304, 307], "244": [113, 133, 305], "stack_imag": [113, 133], "tread": [113, 133], "separet": [113, 133], "hub": [113, 133, 306], "resnet50_weight": [113, 133], "imagenet1k_v1": [113, 133], "download_path": [113, 133], "tensor_pixels_kei": [113, 133], "dest": [113, 131, 133, 199], "sub_seq_len": 114, "sample_dim": [114, 298], "primarili": 114, "hesit": 114, "request": 114, "robust": 114, "mix": [114, 173, 182, 236, 298, 304], "NOT": 114, "improp": 114, "create_copi": 115, "renam": [115, 117, 143, 298], "stuff": 115, "braxenv": [115, 292], "newnam": 115, "interpol": [116, 299, 301], "bilinear": [116, 301], "r2g": 117, "99": [117, 134, 162, 219, 232, 237, 244, 286, 298, 299, 300, 305, 307, 309], "reward_to_go": 117, "bernoulli_": 117, "9010": 117, "9404": [117, 244], "9701": [117, 244], "9900": [117, 244], "0000": [117, 193, 203, 244, 300, 301, 305, 309], "crash": 117, "clamp_min": 118, "clamp_max": 118, "clip_min": 118, "scalar": [118, 148, 150, 166, 167, 189, 193, 195, 206, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 294, 299, 305], "clip_max": 118, "episode_": 120, "reward1": 120, "reward2": 120, "ho": 120, "excludetransform": [121, 307], "squeeze_dim": 122, "step_count_kei": 123, "recognis": 123, "target_return": 124, "guid": [124, 293, 298, 304], "accordingli": [124, 197, 301], "conjunct": [124, 299], "hindsight": 124, "relabel": 124, "reward2gotransform": 124, "primer": [125, 301], "default_valu": [125, 301], "unit": [125, 144, 155, 169, 170, 175, 176, 300], "transfomedenv": 125, "mykei": 125, "__unless": 125, "exists__": 125, "dtype_or_devic": 125, "pool": 126, "from_int": 127, "255": [127, 305, 307], "ri": 127, "principl": 128, "cattransform": 128, "notabl": 128, "rewardsum": [128, 304], "cache_spec": 129, "anymor": [129, 199], "set_missing_toler": 129, "keyerror": 129, "unsqueeze_dim": [130, 305], "danger": 130, "vc1": 131, "vc1_vec": 131, "small": [131, 298, 300, 304, 310], "untrain": 131, "make_noload_model": 131, "naiv": 131, "vip": [132, 133, 306], "toward": 133, "implicit": [133, 221, 307], "jason": 133, "ma": 133, "shagun": 133, "sodhani": 133, "dinesh": 133, "jayaraman": 133, "osbert": 133, "bastani": 133, "ami": 133, "zhang": 133, "vip_vec": 133, "shared_td": 134, "decai": [134, 189, 193, 229, 272, 298, 299, 301, 310], "9999": [134, 305], "0001": [134, 155, 168, 300, 305], "fly": [134, 222, 295, 300, 305, 307, 310], "to_observation_norm": 134, "underflow": [134, 272], "build_td_for_shared_vecnorm": 134, "memmori": 134, "memmap_": 134, "queue": [134, 307], "td_share": 134, "v": [134, 186, 221, 228, 294, 298, 299], "state_dim": [135, 146, 151, 172, 175, 176, 190], "action_dim": [135, 146, 147, 149, 151, 172, 190, 298, 303], "gsde": [135, 226, 290], "func": 135, "gsdemodul": 135, "check_dtyp": 136, "short": [136, 299, 300, 304], "discrep": [136, 209, 211, 212, 213, 222, 225, 227, 236], "imposs": 136, "probabilistictdmodul": [141, 142, 160, 196, 200, 237, 270], "next_tensordict": 143, "keep_oth": [143, 305], "exclude_reward": 143, "exclude_don": 143, "exclude_act": 143, "next_": 143, "funtion": [143, 305], "cross": 144, "entropi": [144, 209, 210, 211, 215, 221, 222, 224, 225, 226, 228, 230, 304], "botev": 144, "et": 144, "al": [144, 310], "2013": 144, "cem": 144, "plan": [144, 161, 162], "varianc": [144, 157, 168, 180, 181, 295, 298, 300, 304], "rank": 144, "k": 144, "repeat": [144, 300, 304, 305], "maximis": [144, 147, 149, 162, 294, 298, 299, 300, 304, 305], "horizon": [144, 162, 300], "modelbasedenv": [144, 162], "planning_horizon": [144, 162], "optim_step": [144, 162, 299], "mpc": [144, 161, 162], "num_candid": [144, 162], "candid": [144, 162], "top_k": [144, 162], "modelbasedenvbas": [144, 161, 162, 292], "safemodul": [144, 161, 186, 188, 200, 209, 210, 215, 221, 225, 226, 227, 228, 230, 279, 280, 286, 292, 309], "next_hidden_observ": 144, "num_cel": [145, 147, 148, 149, 150, 155, 156, 158, 160, 165, 186, 299, 300, 301, 304, 309], "elu": [145, 147, 148, 149, 150, 155, 156, 299, 309], "activation_kwarg": [145, 160], "norm_class": [145, 147, 148, 160], "norm_kwarg": [145, 160], "bias_last_lay": [145, 147, 148, 149, 150, 156, 160], "aggregator_class": [145, 147, 148, 299, 301, 309], "squashdim": [145, 147, 309], "aggregator_kwarg": [145, 147, 148, 299, 301], "squeeze_output": [145, 147, 148, 299, 301], "convolut": [145, 147, 148, 177], "neural": [145, 177, 199, 294, 299, 300, 301, 304, 305, 310], "produc": [145, 160, 165, 171, 186, 188, 190, 257, 300, 301, 307, 310], "cell": [145, 160, 165, 300], "kernel": [145, 156, 159], "cnet": 145, "34": [145, 160, 299, 305], "35": [145, 160, 298, 299, 300, 304, 305, 306], "rectangular": 145, "transformer_config": [146, 172, 190], "decisiontransform": [146, 172], "dtconfig": [146, 151, 172], "2202": [146, 151, 172, 224], "05607": [146, 151, 172, 224], "return_to_go": [146, 151, 172, 190], "conv_net_kwarg": [147, 148], "mlp_net_kwarg": [147, 148, 149], "use_avg_pool": [147, 148], "WITH": [147, 148, 149, 150, 195, 229], "1509": [147, 148, 149, 150, 162, 195, 220, 229, 305], "02971": [147, 148, 149, 150, 195, 229], "convnet": [147, 301, 309], "ndims_in": 147, "avgpool": [147, 148], "adaptiveavgpool2d": [148, 299, 301], "400": [149, 150, 298, 304, 305, 307, 308], "mlp_net_kwargs_net1": 150, "mlp_net_kwargs_net2": 150, "decion": 151, "desdescrib": 151, "n_embd": 151, "n_layer": 151, "n_head": 151, "n_inner": 151, "n_posit": 151, "resid_pdrop": 151, "attn_pdrop": 151, "gpt2config": 151, "atol": [152, 179], "06": [152, 179, 299, 304, 305, 306], "rtol": [152, 179], "batch_shap": [152, 179], "event_shap": [152, 179], "absolut": [152, 179, 298], "densiti": [152, 163, 164, 171, 181], "mass": [152, 163, 164, 171, 181, 305], "rsampl": [152, 164, 171, 200], "sample_shap": [152, 163, 164, 171], "dqnet": 153, "atom": 153, "softmax": [153, 164, 171, 191, 192], "action_spac": [154, 174, 191, 192, 197, 198, 209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 301], "var_num": [154, 174, 191, 192, 198], "action_value_kei": [154, 174, 192, 197, 198, 223, 236], "perspect": [154, 192, 216, 300], "1707": [154, 192, 216, 225], "06887": [154, 192, 216], "mult": [154, 165, 174, 191, 192, 197, 198], "functional_modul": [154, 174, 197, 199, 202, 294], "make_funct": [154, 174, 196, 197, 199, 202, 204, 223, 294, 309], "tensordict_modul": [154, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 212, 215, 221, 225, 226, 227, 228, 230, 294], "nbin": [154, 191, 294], "customdistributionalqv": 154, "log_softmax": [154, 191], "one_hot": [154, 164, 174], "qvalue_actor": [154, 174, 191, 197, 294], "std_bia": 155, "std_min_val": 155, "belief": [155, 169, 175, 176], "1912": [155, 217, 218, 219], "01603": [155, 217, 218, 219], "softplu": [155, 168, 206, 207, 208], "out_features_valu": 156, "cnn_kwarg": [156, 299], "mlp_kwarg": [156, 159, 299], "duel": 156, "cnn": [156, 299, 309], "06581": 156, "512": [156, 299, 305, 307], "upscal": [157, 180, 181], "tanh_loc": [157, 180, 181], "event_dim": [157, 179, 180], "ultim": [157, 180, 181], "poor": [157, 180, 181], "explos": [157, 180, 181], "switch": [157, 181], "sigma": [157, 172, 180, 181, 189, 195, 300], "formula": [157, 180, 181, 209, 211, 222, 225, 295, 300], "embedd": [158, 159], "lstmcell": 158, "correspont": 158, "input_s": [158, 159, 301], "hidden_s": [158, 159, 301], "num_lay": [158, 169, 170], "b_ih": 158, "b_hh": 158, "introduc": [158, 195, 298], "proj_siz": 158, "recurrent_state_h": [158, 301], "recurrent_state_c": [158, 301], "triplet": [158, 197, 198], "custom_kei": 158, "temporal_mod": 158, "set_temporal_mod": 158, "tensordictsequenti": [158, 191, 201, 294, 298, 301, 303, 306, 309], "seq": [158, 301, 303], "lstm_modul": 158, "rs_h": 158, "rs_c": 158, "set_recurrent_mod": [158, 301], "batch_first": [158, 301], "hidden0": 158, "hidden1": 158, "policy_infer": 158, "policy_train": 158, "traj_td": 158, "td_inf": 158, "assert_clos": 158, "lstm_kwarg": 159, "next_observ": [159, 209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 303], "time_step": 159, "2d": [159, 304], "hidden0_in": 159, "hidden1_in": 159, "hidden0_out": 159, "hidden1_out": 159, "single_bias_last_lay": 160, "layer_class": 160, "layer_kwarg": 160, "perceptron": 160, "seamless": 160, "lazylinear": [160, 294, 300, 305, 306, 309], "42": [160, 209, 210, 212, 221, 228, 299, 304, 305], "noisylinear": [160, 166, 292, 299], "noisylazylinear": [160, 292], "At": [161, 299, 300, 301, 303, 305, 306], "mpcplanner": 161, "tensordict_out": [161, 310], "mppi": 162, "covari": 162, "william": [162, 227], "aldrich": 162, "theodor": 162, "01149": 162, "hansen": 162, "wang": 162, "su": 162, "04955": 162, "valueoper": [162, 186, 187, 188, 209, 210, 211, 212, 215, 221, 222, 225, 226, 227, 228, 230, 286, 294, 298, 300], "tdlambdaestim": [162, 292, 298], "value_net": [162, 213, 227, 238, 239, 240, 241, 300], "adv": 162, "lmbda": [162, 232, 238, 241, 243, 249, 250, 251, 254, 255, 295, 298, 300, 304], "95": [162, 232, 299, 300, 301, 305, 307], "value_network": [162, 212, 213, 216, 221, 228, 238, 239, 240, 241, 295, 298, 300], "temperatur": [162, 210, 221], "neg_inf": [163, 164], "inf": [163, 164], "padding_valu": [163, 164], "www": [163, 164], "api_doc": [163, 164], "tf_agent": [163, 164], "event": [163, 164, 171, 247, 248, 249, 250, 252, 253, 254, 255, 307], "unnorm": [163, 164, 171], "sparse_mask": [163, 164], "dens": [163, 164], "0831": [163, 164], "1203": [163, 164], "0928": [163, 164], "1972": [163, 164], "grad_method": [164, 171], "reparamgradientstrategi": [164, 171], "passthrough": [164, 171], "maskedcategor": [164, 292], "proxi": [164, 171, 295], "relaxedonehot": [164, 171], "zeros_lik": [164, 305], "sample_non_valid": 164, "n_agent_input": [165, 304], "n_agent_output": [165, 304], "centralis": [165, 304], "share_param": [165, 304], "multiag": [165, 173, 182, 236], "homogen": [165, 304], "toech": 165, "agent_network": 165, "modulelist": [165, 283, 309], "centalis": 165, "shown": [165, 294, 303, 304, 307], "std_init": [166, 167], "matrix": [166, 167], "initialize_paramet": 166, "isol": 166, "1706": [167, 182], "10295v3": 167, "induc": 167, "aid": 167, "scale_map": 168, "biased_softplus_1": 168, "scale_lb": [168, 175, 176], "exp": [168, 208], "module_norm": 168, "channel": [169, 170, 299], "decod": 169, "1803": [169, 170, 173], "10122": [169, 170], "rnn_hidden": 169, "latent": 170, "excacli": 171, "inres": 172, "mu": [172, 195, 300], "state_shap": [173, 236], "mixing_embed_dim": [173, 236], "qmix": [173, 304], "mixer": [173, 182, 236], "monoton": 173, "hyper": 173, "11485": 173, "qmixerloss": [173, 182], "qmix_vdn": [173, 182], "eventu": [173, 301, 305], "vdn": [173, 182], "greedi": [174, 192, 193, 198, 299, 301], "hidden_dim": [175, 176], "posterior": [175, 218], "rssm": [175, 176, 218], "1811": [175, 176], "04551": [175, 176], "obs_embed": 175, "rnn_hidden_dim": 176, "dream": 176, "tanhtransform": 180, "decomposit": 182, "05296": 182, "vmap": [183, 199, 202, 309], "hide": [183, 300, 304], "satisfi": [183, 294], "tensordictmodulebas": [183, 197, 301], "vmap_dim": 183, "lam": 183, "sample_in": 183, "sample_in_td": 183, "vm": 183, "translat": [185, 196], "character": [185, 191, 196, 197, 199, 307], "overflow": [185, 191, 192, 196, 197, 198, 199, 200], "td_modul": [185, 186, 187, 188, 196, 199, 200, 202, 204, 309], "3635": 185, "0340": 185, "1476": 185, "3911": [185, 305], "1664": [185, 299, 305], "5455": 185, "2247": 185, "4583": 185, "2916": 185, "2160": 185, "5337": 185, "5193": 185, "grad_fn": [185, 193, 309], "addmmbackward0": 185, "actorvalueoper": [186, 294], "get_policy_oper": [186, 187, 188, 211, 222, 225, 294], "standalon": [186, 187, 188], "tdmodul": [186, 187, 188, 286], "get_critic_oper": 186, "common_oper": [186, 188], "policy_oper": [186, 187, 188], "value_oper": [186, 187, 188], "normalparamwrapp": [186, 187, 188, 196, 202, 209, 210, 215, 221, 225, 226, 227, 228, 230, 292, 309], "module_hidden": [186, 188], "td_module_hidden": [186, 188], "module_act": [186, 188], "td_module_act": [186, 187, 188], "module_valu": [186, 187, 188], "td_module_valu": [186, 187, 188], "state_action_valu": [186, 204, 210, 228, 237, 283, 286, 294, 298, 309], "td_clone": [186, 187, 188], "tensordictmodulewrapp": [186, 279, 280, 286], "get_policy_head": [186, 187, 188], "safesequenti": [186, 187, 188, 236], "head": [186, 188, 211, 222, 225], "get_value_head": [186, 187, 188], "get_value_oper": [186, 187, 188, 211, 222, 225], "action_modul": 187, "state_valu": [187, 188, 204, 211, 222, 225, 226, 228, 238, 239, 240, 241, 243, 245, 247, 249, 251, 252, 254, 294, 298, 300, 304], "qualiti": [188, 294], "actorcriticoper": [188, 211, 222, 225, 294], "embeddig": 188, "refet": 188, "actorcriticwrapp": [188, 294, 298], "po": [189, 193], "sigma_init": 189, "epsilon": [189, 193, 195, 229, 272, 299, 300, 301], "sigma_end": 189, "annealing_num_step": [189, 193, 195, 298, 299, 301], "captur": [189, 193, 195], "omiss": [189, 193, 195], "warn": [189, 193, 195, 299, 310], "ommit": [189, 193, 195, 307], "inferec": 190, "set_tensor_kei": 190, "dt_inference_wrapp": 190, "baz": 190, "inference_context": 190, "obs_dim": 190, "15": [190, 195, 217, 298, 299, 305, 307, 309], "tanhdelta": [190, 292, 298], "dtactor": 190, "actor_modul": [190, 309], "dist_class": 190, "dist_kwarg": 190, "distribution_kwarg": [190, 196, 200, 300, 304], "inference_actor": 190, "sequence_length": 190, "mask_context": 190, "qvaluemodul": [191, 197, 236, 301], "distributionaldqnnet": 191, "make_log_softmax": 191, "my_action_valu": [192, 198], "chanc": 192, "thid": 192, "eps_init": [193, 195, 299, 301], "eps_end": [193, 195, 299], "explorative_polici": [193, 195], "9055": [193, 305], "9277": 193, "6295": 193, "2532": 193, "addbackward0": 193, "lmheadmodel": 194, "extract": [194, 298, 300], "actor_head": [194, 211, 222, 225], "base_model": 194, "lm_head": 194, "ornstein": 195, "uhlenbeck": 195, "ou": [195, 298], "correl": 195, "sort": 195, "noise_t": 195, "noise_": 195, "theta": [195, 300, 305], "sigma_t": 195, "sqrt": 195, "sigma_": 195, "anneal": 195, "ou_prev_nois": 195, "ou_step": 195, "increas": [195, 304], "x0": 195, "sigma_min": 195, "n_steps_ann": 195, "is_init_kei": 195, "_ou_prev_nois": 195, "_ou_step": 195, "default_interaction_typ": [196, 200], "interaction_typ": [196, 200], "set_interaction_typ": [196, 200], "cache_dist": [196, 200], "n_empirical_estim": [196, 200], "chose": 198, "functionalmodul": 199, "functionalmodulewithbuff": 199, "grucel": 199, "td_fmodul": 199, "td_function": 199, "td_state": 199, "ensembl": [199, 226], "params_repeat": 199, "td_vmap": [199, 202], "random_sampl": [199, 200], "suppli": 200, "fist": 200, "log_prob_kei": [200, 304], "probabilistictensordictsequenti": [201, 209, 211, 222, 225, 227, 279, 280, 309], "partial_toler": [201, 202, 303], "who": [201, 202], "AND": [201, 202], "tensordictsequenci": 202, "tensordictsequ": 202, "safeprobabilisticmodul": [202, 294], "spec1": 202, "net1": 202, "module1": 202, "td_module1": 202, "spec2": 202, "module2": 202, "td_module2": 202, "clamp": [203, 218, 274, 305], "boundari": [203, 300, 304], "resolut": 203, "simplest": [203, 298, 300, 301, 304, 307, 310], "9944": 203, "9991": 203, "3020": 203, "2299": [203, 305], "5418": 203, "2989": 203, "6849": 203, "3169": 203, "2690": 203, "9649": [203, 305], "5686": 203, "8602": 203, "0315": 203, "8455": [203, 305], "6027": 203, "4746": 203, "7843": 203, "7782": 203, "2111": 203, "5115": 203, "4687": 203, "5760": 203, "custommodul": 204, "cat": [204, 210, 212, 221, 226, 228, 230, 309], "imaginari": 205, "imagin": 205, "transition_model": 205, "get_reward_oper": 205, "get_transition_model_oper": 205, "min_val": [206, 208], "bias": [206, 295, 298], "_bia": 206, "invert": [207, 300], "surject": 208, "expln": 208, "biased_softplu": [208, 292], "beggin": 208, "biased_softplus_": 208, "syntax": [208, 298], "met": [208, 305], "1602": 209, "01783v2": 209, "entropy_bonu": [209, 211, 222, 225, 300], "favour": [209, 211, 222, 225], "samples_mc_entropi": [209, 211, 222, 224, 225], "mont": [209, 211, 222, 225, 298], "carlo": [209, 211, 222, 225, 298], "entropy_coef": [209, 211, 222, 225, 300, 304], "critic_coef": [209, 211, 222, 225, 300], "loss_critic_typ": [209, 211, 222, 225, 227, 300], "l1": [209, 211, 212, 213, 215, 222, 225, 226, 227, 230, 233, 236, 294, 298], "l2": [209, 211, 212, 213, 214, 215, 218, 219, 222, 225, 226, 227, 230, 233, 236, 298], "smooth_l1": [209, 210, 211, 212, 213, 215, 221, 222, 225, 226, 227, 228, 230, 233, 236, 300], "separate_loss": [209, 211, 212, 215, 221, 222, 225, 226, 227, 228, 230], "propag": [209, 211, 212, 215, 221, 222, 225, 226, 227, 228, 230, 238, 239, 240, 241, 300, 304], "advantage_kei": [209, 211, 222, 225, 227, 238, 239, 240, 241], "value_target_kei": [209, 211, 222, 225, 227, 238, 239, 240, 241, 300], "value_target": [209, 211, 222, 225, 227, 238, 239, 240, 241, 300, 304], "loss_crit": [209, 225, 300, 304], "loss_entropi": [209, 225, 300, 304], "loss_object": [209, 225, 300, 304], "recur": [209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230, 238, 239, 240, 241, 242], "next_reward": [209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230], "next_don": [209, 210, 212, 213, 215, 221, 225, 226, 227, 228, 230], "loss_obj": 209, "sacloss": [209, 220, 229, 292], "select_out_kei": [209, 210, 212, 215, 221, 225, 226, 228, 230], "throughout": [209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 300, 310], "essenti": [209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 236, 299, 305, 307], "make_value_estim": [209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 231, 236, 295, 298, 299, 304], "value_typ": [209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 232, 236, 298], "valueestim": [209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 232, 236, 292, 295, 298, 304], "hyperparam": [209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 298, 305], "enum": [209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 232, 236, 298], "default_value_estim": [209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 298], "refin": [209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236], "default_value_kwarg": [209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 236, 292, 298], "dqnloss": [209, 210, 212, 215, 216, 217, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 236, 281, 292, 295, 299, 301], "dqn_loss": [209, 210, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 230, 231, 236], "conserv": 210, "2006": [210, 305], "04779": 210, "actor_network": [210, 212, 214, 215, 221, 224, 226, 228, 230, 298], "qvalue_network": [210, 215, 221, 226, 228, 230], "loss_funct": [210, 212, 213, 214, 215, 221, 226, 228, 230, 233, 236, 298], "alpha_init": [210, 215, 224, 226, 228], "min_alpha": [210, 215, 224, 226, 228], "max_alpha": [210, 215, 224, 226, 228], "fixed_alpha": [210, 215, 224, 226, 228], "target_entropi": [210, 215, 224, 226, 228], "prod": [210, 224, 228], "n_action": [210, 213, 224, 228], "delay_actor": [210, 212, 228, 230], "delay_qvalu": [210, 215, 226, 228, 230], "min_q_weight": 210, "max_q_backup": 210, "backup": 210, "deterministic_backup": 210, "num_random": 210, "with_lagrang": 210, "lagrang": 210, "lagrange_thresh": 210, "threshold": [210, 211, 300], "valueclass": [210, 212, 215, 221, 226, 228, 230], "qvalu": [210, 215, 221, 226, 228, 230, 283], "loss_actor": [210, 212, 215, 221, 226, 227, 228, 230, 269, 298, 309], "loss_alpha": [210, 215, 226, 228], "loss_alpha_prim": 210, "loss_qvalu": [210, 215, 221, 226, 228, 230], "clip_epsilon": [211, 300, 304], "normalize_advantag": [211, 222, 225, 304], "value_kei": [211, 222, 225, 238, 239, 240, 241, 298], "somemodul": [211, 222, 225], "someactor": [211, 222, 225], "value_head": [211, 222, 225], "somevalu": [211, 222, 225], "loss_modul": [211, 220, 222, 223, 225, 229, 274, 285, 286, 295, 296, 298, 299, 300, 304, 307], "ppoloss": [211, 222, 292], "delay_valu": [212, 213, 216, 227, 228, 236, 299, 301], "loss_valu": [212, 221, 227, 228, 298, 300, 304, 309], "pred_valu": [212, 230, 298, 309], "pred_value_max": [212, 298, 309], "target_valu": [212, 226, 230, 237, 295, 298, 309], "target_value_max": [212, 298, 309], "qvalueactor": [213, 236, 294, 299, 301], "mult_one_hot": [213, 215, 236], "loss_val": [213, 295, 298, 300, 301, 304, 307], "2106": 214, "01345": 214, "ste": 215, "num_qvalue_net": [215, 221, 226, 228, 230], "target_entropy_weight": 215, "onehotcategor": [215, 292], "disctount": 216, "distributionalqvalueactor": [216, 294], "input_tensordict": [216, 298], "actor_model": 217, "value_model": [217, 219], "model_based_env": 217, "dreamerenv": [217, 292], "imagination_horizon": 217, "unrol": [217, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255], "discount_loss": [217, 219], "lambda_kl": 218, "lambda_reco": 218, "lambda_reward": 218, "reco_loss": 218, "reward_loss": 218, "free_nat": 218, "nat": 218, "delayed_clamp": 218, "global_averag": 218, "value_loss": 219, "fake_data": 219, "ddpgloss": [220, 229, 286, 292, 298, 309], "td3loss": [220, 229, 292], "value_network_update_interv": 220, "contrast": [220, 307], "06461": 220, "2110": 221, "06169": 221, "expectil": 221, "tau": [221, 229, 298, 299], "antmaz": 221, "sticht": 221, "loss_value_diff": 221, "diff": 221, "old_polici": 222, "new_polici": 222, "old": [222, 310], "distanc": [222, 233, 237, 238, 304], "apart": [222, 304], "dtarg": 222, "samples_mc_kl": 222, "analyt": 222, "decrement": 222, "loss_": [223, 269, 295, 298], "equip": [223, 301], "gh": 223, "_acceptedkei": 223, "dataclass": [223, 283], "_forward_value_estimator_kei": 223, "alter": [223, 294], "value_estim": [223, 238, 239, 240, 241, 242, 295, 298, 304], "myloss": 223, "action2": 223, "convert_to_funct": [223, 298], "expand_dim": 223, "create_target_param": [223, 298], "compare_against": [223, 298], "funs_to_decor": 223, "stuctur": 223, "_param": 223, "expans": 223, "resampl": 223, "_target_param": 223, "valueestimatorbas": [223, 292], "blend": 223, "upcom": [223, 247, 248, 249, 250, 252, 253, 254, 255, 298], "proxim": [225, 300, 304], "optimis": [225, 270, 300, 304], "flavour": [225, 304, 309], "clipppoloss": [225, 292, 300, 304], "klpenppoloss": [225, 292], "regularis": 225, "06347": 225, "gae": [225, 292, 295, 298, 300, 304], "ppo_loss": 225, "tdlambda": [225, 232, 295, 298], "base_lay": 225, "randn_lik": 225, "samplelogprob": 225, "openreview": [226, 283], "ay8zfzm0tdd": [226, 283], "sub_sample_len": 226, "subsampl": [226, 265, 296], "action_log_prob_actor": 226, "state_action_value_actor": [226, 230], "connectionist": 227, "1992": 227, "doi": 227, "1007": 227, "bf00992696": 227, "actor_net": [227, 298, 300], "1801": 228, "01290": 228, "applic": [228, 236, 305], "1812": 228, "05905": 228, "redqloss": [229, 292], "math": 229, "theta_t": [229, 305], "theta_": [229, 305], "polyak": 229, "policy_nois": 230, "noise_clip": 230, "next_state_valu": [230, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 292], "td0": [231, 298], "v2": [233, 247, 248, 249, 250, 252, 253, 254, 255, 283], "strict_shap": 233, "view_a": 233, "qmixer": [236, 292], "local_valu": 236, "visibl": [236, 304], "dafault": 236, "acceptedkei": 236, "global_valu": 236, "premad": 236, "penultim": 236, "local_value_network": 236, "mixer_network": 236, "suggest": [236, 304], "value_modul": [236, 300, 309], "qnet": [236, 298], "next_val_kei": 237, "pred_next_v": 237, "usus": 237, "mse": 237, "q_valu": 237, "n_steps_to_next": 237, "value_next_st": 237, "1506": [238, 243, 251], "02438": [238, 243, 251], "exponenti": [238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 272], "average_ga": [238, 300], "skip_exist": [238, 239, 240, 241], "advang": 238, "gradient_mod": 238, "value_error": [238, 239, 240, 241, 242], "sign": 238, "unused_arg": 238, "target_param": [238, 239, 240, 241, 242, 298, 304], "98": [238, 239, 240, 241, 298, 299, 305, 306], "94": [238, 241, 299, 305, 307], "unpack": [238, 239, 240, 241], "tensor_kei": [238, 239, 240, 241, 242], "next_valu": [238, 239, 240, 241, 242], "aka": [239, 299], "average_reward": [239, 240, 241], "tdestim": [239, 240, 242], "infti": 240, "valuefunctionbas": 242, "time_dim": [243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255], "old_stat": [243, 245, 247, 249, 251, 252, 254], "new_stat": [243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "rolling_gamma": [247, 248, 249, 250, 252, 253, 254, 255], "g1": [247, 248, 249, 250, 252, 253, 254, 255], "g2": [247, 248, 249, 250, 252, 253, 254, 255], "g3": [247, 248, 249, 250, 252, 253, 254, 255], "g4": [247, 248, 249, 250, 252, 253, 254, 255], "v3": [247, 248, 249, 250, 252, 253, 254, 255], "v4": [247, 248, 249, 250, 252, 253, 254, 255, 298, 300, 306], "out_file_bas": 256, "skip_reset": 256, "dump": 256, "interv": [256, 257, 266, 276, 299, 305], "center_crop": 257, "make_grid": 257, "Will": 257, "grid": 257, "exp_nam": [258, 259, 262, 263, 264, 286, 299], "log_dir": [258, 259, 261, 263, 299], "templat": 258, "csv": [259, 261, 299], "minim": [259, 307], "dependeci": 259, "experiment_nam": [260, 261], "uuid": [260, 299, 310], "date": 260, "logger_typ": 261, "logger_nam": 261, "tensorboard": [261, 263, 309], "wandb": [261, 264, 309], "mlflow": [261, 262], "wandb_kwarg": 261, "mlflow_kwarg": 261, "tracking_uri": 262, "uri": 262, "datastor": 262, "tb_log": 263, "tensoarboard": 263, "sub_traj_len": 265, "min_sub_traj_len": 265, "register_op": [265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 296, 299], "process_optim_batch": [265, 271, 272, 296], "td_out": [265, 273], "_process_optim_batch_hook": [265, 296], "batch_subsampl": 265, "clear_cuda": 266, "pre_optim_step": [266, 296], "counter": [267, 296], "log_pbar": [267, 268, 270, 272, 296, 299], "progress": [267, 268, 270, 274, 296, 299, 301, 310], "count_fram": 267, "pre_steps_log": [267, 268, 296], "count_frames_log": 267, "lognam": 268, "r_train": [268, 299], "log_reward": [268, 299], "loss_compon": 269, "appl": 269, "omit": [269, 300, 305, 307], "optimizer_hook": 269, "record_interv": [270, 298, 299], "record_fram": [270, 277, 298, 299], "policy_explor": [270, 286, 298, 299], "log_kei": [270, 299], "suffix": 270, "underestim": 270, "suppos": [270, 296, 310], "set_exploration_typ": [270, 292, 300, 301, 309], "r_evalu": [270, 298], "flatten_tensordict": [271, 299], "max_dim": 271, "rb_trainer": 271, "batch_process": [271, 272, 273, 296], "post_loss": [271, 296], "999": [272, 299], "jitter": 272, "finfo": 272, "default_dtyp": 272, "get_default_dtyp": 272, "reward_norm": 272, "update_reward_stat": 272, "normalize_reward": 272, "make_train": [273, 292], "_process_batch_hook": [273, 296], "select_kei": [273, 296], "versatil": 274, "lossmodul": [274, 285, 286, 292], "optim_steps_per_batch": [274, 296, 299], "epoch": [274, 300, 304], "clip_grad_norm": 274, "partial": [274, 301], "clip_norm": 274, "progress_bar": 274, "tqdm": [274, 298, 300, 301, 304, 305], "save_trainer_interv": 274, "disk": [274, 296, 298, 299, 301, 307], "log_interv": [274, 299], "save_trainer_fil": [274, 296], "datacollectorbas": [276, 279, 280, 286, 292], "update_weights_interv": [276, 299], "sit": [276, 299], "update_weight": 276, "post_step": [276, 296], "cfg": [277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290], "dictconfig": [277, 278, 279, 280, 283, 284, 285, 286, 287, 290], "divid": [277, 294, 298, 304, 305], "unknowingli": 277, "annealing_fram": [277, 298], "init_env_step": [277, 278, 298], "proof_environ": [278, 283, 298], "sta": 278, "ot": 278, "actor_model_explor": [279, 280, 298], "make_env_kwarg": [279, 280], "targetnetupdat": [281, 282, 285, 286], "redqloss_deprec": 282, "actor_net_kwarg": 283, "qvalue_net_kwarg": 283, "observation_kei": 283, "dummi": [283, 298, 310], "parser_env_arg": 283, "parser_model_args_continu": 283, "cattensor": [283, 298, 303, 305, 310], "hydra": 283, "config_stor": 283, "configstor": 283, "halfcheetah": [283, 298], "config_field": 283, "config_cl": 283, "redqmodelconfig": 283, "envconfig": 283, "make_dataclass": 283, "cls_name": 283, "cs": 283, "config_path": 283, "config_nam": 283, "17": [283, 298, 299, 305], "replayargsconfig": 284, "target_net_updat": [286, 298, 299], "constitu": 286, "learnt": [286, 298, 300], "tensorboardlogg": [286, 292], "egreedywrapp": [286, 299, 301], "env_proof": 286, "obs_spec": 286, "net_valu": 286, "dir": [286, 296, 299], "gettempdir": 286, "argpars": [287, 290], "namespac": [287, 290], "parser": [287, 290], "transformed_env_constructor": [287, 292], "num_env_per_collector": [288, 289], "video_tag": 290, "norm_obs_onli": 290, "use_env_cr": 290, "custom_env_mak": 290, "custom_env": 290, "return_transformed_env": 290, "action_dim_gsd": 290, "state_dim_gsd": 290, "obs_norm_state_dict": 290, "wheter": 290, "maker": 290, "asyncdatacollector": 292, "distributedsyncdatacollector": 292, "submitit_delayed_launch": 292, "raycollector": 292, "samplerwithoutreplac": [292, 300, 304, 307], "tensorstorag": 292, "tensordictroundrobinwrit": 292, "d4rlexperiencereplai": 292, "openmlexperiencereplai": 292, "unboundeddiscretetensorspec": [292, 300, 310], "lazystackedtensorspec": 292, "lazystackedcompositespec": 292, "prompttensordicttoken": 292, "rolloutfrommodel": 292, "tokenizeddatasetload": 292, "create_infinite_iter": 292, "consolidate_spec": 292, "check_no_exclusive_kei": 292, "contains_lazy_spec": 292, "tensordictrecord": 292, "videorecord": [292, 300], "get_available_librari": 292, "set_exploration_mod": 292, "make_composite_from_td": [292, 305], "braxwrapp": 292, "dmcontrolenv": [292, 298, 303, 310], "dmcontrolwrapp": 292, "mogymenv": 292, "mogymwrapp": 292, "jumanjienv": 292, "jumanjiwrapp": 292, "openmlenv": 292, "vmaswrapp": 292, "qvaluehook": 292, "distributionalqvaluehook": 292, "reset_nois": 292, "cemplann": 292, "mpcplannerbas": 292, "mppiplann": 292, "independentnorm": 292, "truncatednorm": 292, "maskedonehotcategor": 292, "inv_softplu": 292, "vmapmodul": 292, "distributionaldqnloss": [292, 299], "discretesacloss": 292, "iqlloss": 292, "cqlloss": 292, "dtloss": 292, "onlinedtloss": 292, "a2closs": 292, "reinforceloss": 292, "dreameractorloss": 292, "dreamermodelloss": 292, "dreamervalueloss": 292, "td0estim": [292, 298], "td1estim": [292, 298], "td0_return_estim": 292, "td0_advantage_estim": 292, "td1_return_estim": 292, "vec_td1_return_estim": 292, "td1_advantage_estim": 292, "vec_td1_advantage_estim": 292, "td_lambda_return_estim": 292, "vec_td_lambda_return_estim": 292, "td_lambda_advantage_estim": 292, "vec_td_lambda_advantage_estim": 292, "generalized_advantage_estim": 292, "vec_generalized_advantage_estim": 292, "reward2go": 292, "distance_loss": [292, 298], "hold_out_net": 292, "hold_out_param": [292, 298], "softupd": [292, 298, 299, 301], "hardupd": [292, 298], "batchsubsampl": [292, 296], "clearcudacach": 292, "countframeslog": 292, "logreward": [292, 296, 299], "optimizerhook": [292, 299], "replaybuffertrain": [292, 296, 299], "rewardnorm": 292, "selectkei": [292, 296], "trainerhookbas": [292, 296, 299], "updateweight": [292, 296, 299], "make_collector_offpolici": 292, "make_collector_onpolici": 292, "make_dqn_loss": 292, "make_redq_loss": 292, "make_redq_model": 292, "make_replay_buff": [292, 298], "make_target_updat": 292, "parallel_env_constructor": [292, 298], "sync_async_collector": 292, "sync_sync_collector": 292, "correct_for_frame_skip": 292, "get_stats_random_rollout": 292, "csvlogger": [292, 299], "mlflowlogg": 292, "wandblogg": 292, "get_logg": 292, "generate_exp_nam": 292, "journei": 293, "textbook": 293, "highlight": 293, "ever": [293, 304], "bump": 293, "think": [293, 300, 304, 310], "benefit": [293, 304, 307], "pr": 293, "ground": [294, 298, 305], "categori": [294, 296], "recycl": [294, 307], "impos": 294, "violat": 294, "noisier": 294, "Their": [294, 304], "sd": 294, "prob_modul": 294, "pick": [294, 298, 299], "tabl": [294, 299], "customari": 294, "hopefulli": [294, 299], "mathbb": [294, 299], "rightarrow": [294, 299], "soften": 294, "backbon": [294, 301, 303, 309], "make_actor": 294, "make_valu": 294, "shared_param": 294, "make_common": 294, "reusabl": [295, 298, 307], "swappabl": [295, 298], "characterist": [295, 298, 305], "trainabl": [295, 298, 306], "whatev": [295, 298], "convent": [295, 298, 301, 304, 305], "smth": [295, 298], "metric": [295, 298], "nutshel": [295, 298], "barto": [295, 304], "chapter": 295, "significantli": [295, 298, 299, 304], "next_stat": 295, "value_net_loss": 295, "pow": [295, 298], "therebi": 295, "room": 295, "convers": 295, "signifi": [295, 304], "underperform": 295, "thin": 295, "intric": 295, "outer": [296, 298, 299, 310], "believ": 296, "scheme": [296, 310], "substenti": 296, "_pre_steps_log_hook": 296, "_pre_optim_hook": 296, "sub_batch": 296, "_post_loss_hook": 296, "_post_optim_hook": 296, "post_optim": [296, 299], "_post_optim_log": 296, "post_optim_log": 296, "_post_steps_hook": 296, "_post_steps_log_hook": 296, "post_steps_log": 296, "comment": [296, 299, 309], "extens": [296, 307], "reserv": 296, "logginghook": 296, "logging_hook": 296, "save_dict": 296, "some_valu": 296, "torchsnapshot": 296, "ckpt_backend": 296, "pt": [296, 306], "filepath": 296, "save_train": 296, "load_from_fil": 296, "perfectli": [296, 298, 305], "intern": 297, "author": [298, 299, 300, 301, 304, 305, 307], "vincent": [298, 299, 300, 301, 305, 307], "moen": [298, 299, 300, 301, 305, 307], "assembl": 298, "focus": 298, "straightforward": [298, 299, 307], "overview": [298, 300, 304, 309], "transpar": [298, 301], "understood": 298, "sota": [298, 299, 309], "illustr": [298, 299, 307], "device_count": [298, 299, 301, 306, 310], "loss_dict": 298, "modal": 298, "oblivi": [298, 300, 307], "elementari": 298, "didact": 298, "dilut": 298, "pessimist": [298, 299, 300], "target_actor_network_param": 298, "actor_in_kei": 298, "actor_crit": 298, "noth": [298, 300], "compromis": 298, "hp": 298, "hasattr": 298, "_value_estim": 298, "elif": [298, 299], "notimplementederror": 298, "unknown": 298, "_loss_actor": 298, "td_copi": 298, "actor_network_param": 298, "value_network_param": 298, "_loss_valu": 298, "pred_val": 298, "target_value_network_param": 298, "smooth": [298, 299], "loss_funt": 298, "glue": 298, "_forward": 298, "ndimens": 298, "remaind": 298, "focu": [298, 299, 300], "pixels_onli": [298, 299, 309, 310], "env_librari": 298, "env_task": 298, "env_arg": 298, "friendli": 298, "torchr": 298, "rescal": 298, "presum": 298, "leav": 298, "make_transformed_env": 298, "reward_sc": 298, "double_to_float_list": 298, "double_to_float_inv_list": 298, "marker": 298, "leverag": [298, 304, 310], "env_per_collector": 298, "transform_state_dict": 298, "make_t_env": 298, "parallel_env": [298, 309, 310], "adjust": [298, 304, 305], "seem": [298, 301], "cheat": 298, "10m": 298, "cautiou": 298, "deal": [298, 300, 304, 307], "magnitud": 298, "thousand": [298, 301], "get_env_stat": 298, "proof_env": 298, "5000": [298, 299, 300], "maxim": [298, 305], "recal": [298, 300], "ddpgmlpactor": 298, "ddpgmlpqnet": 298, "materi": 298, "ornsteinuhlenbeckprocesswrapp": 298, "make_ddpg_actor": 298, "q_net": 298, "moduless": 298, "sugges": 298, "1_000_000": [298, 301], "tight": 298, "10_000": [298, 300, 307], "traj_len": [298, 301], "make_record": 298, "recorder_obj": 298, "flavor": 298, "circular": 298, "buffer_s": [298, 299], "random_crop_len": 298, "prb": 298, "buffer_scratch_dir": 298, "temporari": 298, "dirrectori": 298, "trajecotri": 298, "25": [298, 299, 300, 305], "sampel": 298, "dataflow": 298, "ceil_div": 298, "utd": [298, 301], "update_to_data": 298, "realiz": 298, "_must_": 298, "001": [298, 305], "outdat": 298, "trick": [298, 299], "despit": 298, "adam": [298, 299, 300, 301, 304, 305], "optimizer_actor": 298, "lr": [298, 299, 300, 301, 304, 305], "weight_decai": [298, 299], "optimizer_valu": 298, "total_collection_step": 298, "pretti": [298, 307], "rewards_ev": 298, "collected_fram": 298, "pbar": [298, 300, 301, 304, 305], "r0": 298, "numel": [298, 300, 301, 306, 307], "current_fram": 298, "sampled_tensordict": 298, "gn1": 298, "clip_grad_norm_": [298, 300, 304, 305], "gn2": 298, "gn": [298, 305], "td_record": 298, "rn": 298, "rs": 298, "set_descript": [298, 300, 301, 304, 305], "2f": 298, "00": [298, 299, 300, 301, 304, 305, 306, 308], "800": [298, 299], "05": [298, 299, 300, 305, 306], "1620": 298, "35it": [298, 299, 305], "1600": [298, 299], "02": [298, 299, 300, 301, 304, 305, 306, 308], "597": [298, 305], "04it": [298, 299], "3200": [298, 299], "1258": 298, "64it": [298, 299], "48": [298, 299, 305, 306], "4800": [298, 299, 305], "1681": 298, "38it": [298, 299], "31": [298, 299, 305, 306, 307], "49": [298, 299, 301, 304, 305, 306], "58": [298, 299, 305, 306], "331": [298, 305], "90": [298, 299, 300, 304, 305, 307], "79": [298, 299, 305], "56": [298, 299, 304, 305, 306], "5600": 298, "6400": [298, 309], "1120": [298, 299], "40it": [298, 299], "54": [298, 299, 305, 306], "53": [298, 299, 305, 307], "51": [298, 299, 305], "178": [298, 305], "93": [298, 299, 305, 306], "66": [298, 299, 305, 306], "72": [298, 299, 305, 306], "7200": 298, "508": [298, 305], "76it": [298, 299, 305], "80": [298, 299, 300, 304, 305, 306], "193": [298, 305], "230": [298, 305], "07": [298, 299, 304, 305], "21": [298, 299, 301, 303, 304, 305], "69": [298, 299, 305], "8000": [298, 300], "04": [298, 299, 304, 305, 306, 308], "484": [298, 305], "45": [298, 299, 305, 307, 308], "71": [298, 299, 305, 306], "96": [298, 299, 305, 306], "270": [298, 305], "83": [298, 299, 301, 305, 306], "88": [298, 299, 305, 306], "8800": 298, "414": [298, 305], "99it": [298, 305], "189": [298, 305], "259": [298, 305], "19": [298, 299, 300, 301, 305], "37": [298, 299, 305, 306], "22": [298, 299, 300, 304, 305, 306, 308], "28": [298, 299, 300, 304, 305, 306, 307, 308], "9600": 298, "42it": [298, 299], "09": [298, 299, 305], "60": [298, 299, 300, 304, 305, 306, 309], "153": [298, 305], "276": [298, 305], "62": [298, 299, 305, 306], "10400it": 298, "273": [298, 305], "63it": 298, "89": [298, 299, 305, 307], "77": [298, 299, 305, 306, 307], "43": [298, 299, 300, 301, 305, 308], "172": [298, 305], "76": [298, 299, 305], "plot": [298, 300, 301, 304, 305], "mention": [298, 301, 307, 310], "matplotlib": [298, 300, 301, 304, 305, 307, 310], "pyplot": [298, 300, 301, 304, 305, 307, 310], "plt": [298, 300, 301, 304, 305, 307, 310], "zip": [298, 302], "legend": 298, "xlabel": [298, 301, 304, 305], "ylabel": [298, 304], "tight_layout": 298, "concret": [298, 300], "takeawai": [298, 299], "minut": [298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "mb": [298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310], "coding_ddpg": [298, 308], "jupyt": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310], "ipynb": [298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310], "galleri": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310], "sphinx": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310], "customis": [299, 304], "road": 299, "aspect": 299, "did": [299, 300, 307, 310], "highest": 299, "prerequisit": 299, "familiar": [299, 304, 310], "lookup": 299, "amort": [299, 300], "cart": 299, "pole": 299, "un": 299, "actuat": 299, "frictionless": 299, "upright": [299, 310], "duelingcnndqnet": 299, "is_notebook": 299, "shell": 299, "get_ipython": 299, "__class__": 299, "zmqinteractiveshel": 299, "qtconsol": 299, "terminalinteractiveshel": 299, "ipython": [299, 304, 305], "nameerror": 299, "interpret": 299, "umbrella": 299, "misplac": 299, "misus": 299, "orchestr": 299, "everyth": [299, 301], "five": [299, 300], "64x64": 299, "motion": [299, 305], "obs_norm_sd": 299, "simpler": 299, "get_norm_stat": 299, "test_env": 299, "make_model": 299, "dummy_env": 299, "output_s": [299, 301], "init_bia": 299, "actor_explor": 299, "eps_greedy_v": 299, "eps_greedy_val_env": 299, "get_replay_buff": 299, "n_optim": 299, "themselv": 299, "simplic": [299, 300, 306, 307], "get_collector": 299, "data_collector": 299, "bunch": 299, "concept": [299, 307], "power": 299, "ubiquit": 299, "get_loss_modul": 299, "target_updat": 299, "995": [299, 305], "sensit": 299, "variat": 299, "2e": [299, 305], "wd": 299, "upd": 299, "harder": [299, 309], "5_000": 299, "500000": 299, "100000": 299, "005": 299, "mandatori": [299, 300, 304, 305], "fairer": 299, "budget": [299, 300], "dqn_exp_": 299, "uuid1": [299, 310], "9895": 299, "0737": 299, "tmp": [299, 307], "tmp6u0ug2li": 299, "dqn_exp_490deeb8": 299, "4cf2": 299, "11ee": [299, 310], "a4e8": [299, 310], "0242ac120002": [299, 310], "registr": 299, "cumbersom": 299, "buffer_hook": 299, "weight_updat": 299, "descript": [299, 300], "aliv": 299, "total_reward": 299, "32it": [299, 305], "4045": 299, "2222": 299, "39": [299, 305, 306], "26it": [299, 305], "4223": 299, "65it": 299, "4375": [299, 305], "160": [299, 305, 307, 310], "4497": 299, "192": [299, 305], "41": [299, 305, 308, 310], "73it": 299, "224": [299, 305], "14it": [299, 305], "4134": 299, "59": [299, 305, 306], "57it": [299, 305], "4314": 299, "288": [299, 305], "86it": 299, "320": [299, 305, 310], "00it": 299, "4797": 299, "352": [299, 305], "36": [299, 305], "384": [299, 305, 307], "52it": 299, "4074": [299, 305], "416": [299, 305], "52": [299, 303, 305, 306, 308], "50it": 299, "4073": 299, "448": [299, 305], "10it": [299, 305], "4948": 299, "480": [299, 305, 306], "62it": 299, "3590": 299, "544": [299, 305], "70it": 299, "576": [299, 305], "55": [299, 305], "51it": 299, "4676": 299, "608": [299, 305], "83it": 299, "4224": 299, "640": 299, "36it": [299, 305], "4586": 299, "672": 299, "16it": 299, "704": 299, "57": [299, 301, 305, 306], "97it": 299, "736": 299, "23it": [299, 305], "768": 299, "29it": [299, 305], "09it": 299, "832": 299, "07it": [299, 305], "4164": [299, 305], "864": 299, "56it": [299, 305], "896": 299, "37it": 299, "928": 299, "58it": 299, "960": 299, "992": [299, 305], "1056": 299, "44it": [299, 300], "3983": 299, "1088": 299, "22it": [299, 305], "66it": 299, "1152": 299, "80it": [299, 305], "1184": 299, "30it": [299, 300, 305], "1216": 299, "1248": 299, "28it": [299, 300, 305], "1280": 299, "75it": [299, 305], "68it": 299, "1344": 299, "1376": 299, "49it": 299, "1408": 299, "1440": 299, "78it": [299, 300], "1472": 299, "02it": 299, "4526": 299, "1504": 299, "31it": [299, 305], "1536": 299, "54it": 299, "1568": 299, "69it": 299, "61it": [299, 305], "1632": 299, "46it": 299, "1696": 299, "11it": 299, "1728": 299, "40": [299, 300, 304, 305, 307, 308], "1760": 299, "27it": [299, 305], "1792": 299, "1824": 299, "33it": [299, 305], "1856": 299, "1888": 299, "74it": 299, "1920": 299, "1952": 299, "41it": 299, "1984": 299, "2016": 299, "18it": 299, "2048": [299, 306], "87it": 299, "2080": 299, "2112": [299, 305], "2144": 299, "47": [299, 305], "2176": 299, "2208": 299, "17it": [299, 305], "2240": 299, "2272": 299, "34it": [299, 301, 305], "2304": 299, "84it": 299, "2336": 299, "2368": 299, "20it": [299, 305], "2400": 299, "2432": 299, "88it": [299, 305], "2464": 299, "2496": 299, "06it": [299, 305], "2528": [299, 305], "60it": [299, 305], "2560": 299, "08it": [299, 305], "2592": 299, "82it": 299, "2624": 299, "2656": [299, 305], "77it": 299, "2688": 299, "2720": [299, 305], "2752": 299, "2784": 299, "24it": [299, 305], "2816": 299, "4345": 299, "2848": 299, "2880": 299, "2912": 299, "90it": 299, "2944": [299, 305], "2976": [299, 305], "21it": [299, 305], "3008": 299, "12it": [299, 300], "61": [299, 305, 306], "3040": 299, "3072": 299, "3104": 299, "63": [299, 305, 306, 307], "3136": 299, "3168": 299, "65": [299, 305, 306, 307], "3232": [299, 305], "43it": 299, "6923": 299, "3264": 299, "85it": 299, "3296": 299, "91it": [299, 305], "67": [299, 303, 305, 306], "3328": 299, "3360": 299, "68": [299, 305, 306, 307], "3392": 299, "55it": [299, 305], "3424": 299, "3456": [299, 305], "70": [299, 300, 304, 305, 306], "3488": 299, "3520": 299, "15it": [299, 305], "3552": 299, "72it": 299, "3584": 299, "3616": 299, "73": [299, 305], "3648": 299, "74": [299, 305, 306], "3680": 299, "3712": 299, "75": [299, 305, 307], "3744": 299, "92it": 299, "3776": 299, "3808": 299, "01it": [299, 301, 305], "3840": 299, "95it": [299, 305], "3872": 299, "78": [299, 305, 306], "3904": 299, "93it": 299, "3936": 299, "3968": 299, "4000": [299, 300], "4032": 299, "4064": 299, "82": [299, 300, 305], "4096": 299, "4128": [299, 305], "4160": 299, "19it": [299, 305], "84": [299, 301, 305], "4192": 299, "85": [299, 305, 306], "4256": [299, 305], "48it": 299, "86": [299, 305], "4288": [299, 305], "4320": 299, "4352": 299, "4384": 299, "39it": [299, 301], "4416": 299, "4448": 299, "4480": 299, "4512": 299, "91": [299, 305], "4544": 299, "92": [299, 301, 305, 306], "4576": 299, "79it": 299, "4608": 299, "4640": 299, "4672": [299, 305], "4704": 299, "4736": 299, "4768": 299, "97": [299, 305, 306], "4832": 299, "4864": 299, "4896": 299, "4928": 299, "4960": 299, "4992": 299, "03it": [299, 305], "5024it": 299, "67it": 299, "quickli": [299, 304, 310], "print_csv_files_in_fold": 299, "folder_path": 299, "csv_file": 299, "output_str": 299, "dirpath": 299, "walk": [299, 303, 310], "endswith": 299, "strip": 299, "35901227593421936": 299, "4948333501815796": 299, "4796708822250366": 299, "4676021933555603": 299, "1315905898809433": 299, "12440136820077896": 299, "11269766092300415": 299, "17645235359668732": 299, "24245695769786835": 299, "20713311433792114": 299, "33554404973983765": 299, "4273737072944641": 299, "4612917900085449": 299, "grad_norm_0": 299, "4864178895950317": 299, "5617700815200806": 299, "1845526695251465": 299, "561732530593872": 299, "9599997997283936": 299, "2346622943878174": 299, "507777690887451": 299, "214495658874512": 299, "675361156463623": 299, "10000000894069672": 299, "69230842590332": 299, "qvaluenetwork": 299, "worst": 299, "accuraci": 299, "fanci": 299, "004": [299, 305, 308], "900": [299, 304], "coding_dqn": [299, 308], "demonstr": [300, 304, 305, 310], "talk": 300, "repetit": 300, "six": 300, "sophist": [300, 304], "invent": 300, "theta_k": 300, "frac": 300, "pi_": 300, "exceed": 300, "discourag": [300, 305], "indispens": 300, "analyz": 300, "lingua": 300, "franca": 300, "defaultdict": [300, 305], "has_cuda": [300, 304, 310], "3e": [300, 301, 304], "max_grad_norm": [300, 304], "big": [300, 307, 310], "ourselv": [300, 310], "benefici": 300, "errat": 300, "hamper": [300, 307], "reactiv": 300, "xy": 300, "sub_batch_s": 300, "num_epoch": [300, 304], "entropy_ep": [300, 304], "generalist": 300, "interchang": [300, 306, 307], "panel": 300, "charact": 300, "inverteddoublependulum": 300, "transmit": 300, "stai": 300, "thumb": 300, "supplementari": [300, 310], "told": 300, "stringent": [300, 304], "nevertheless": [300, 307], "confid": [300, 304], "pack": [300, 310], "ran": 300, "f_": 300, "mu_": 300, "difficulti": [300, 310], "brought": [300, 301], "d_ob": 300, "d_action": 300, "policy_modul": [300, 304], "That": 300, "said": 300, "briefli": [300, 304], "refil": [300, 304], "capac": 300, "conveni": [300, 304, 305], "easiest": [300, 304], "mathemat": [300, 304], "tradeoff": [300, 304], "advantage_modul": 300, "lr_schedul": [300, 305], "cosineannealinglr": [300, 305], "eval_str": 300, "tensordict_data": [300, 304], "data_view": [300, 304], "subdata": [300, 304], "cum_reward_str": 300, "4f": [300, 301, 305], "stepcount_str": 300, "param_group": 300, "lr_str": 300, "eval_rollout": 300, "nice": 300, "350": [300, 305], "59it": 300, "2346": 300, "0873": [300, 305], "0003": [300, 305], "1130": 300, "3000": 300, "355": [300, 305], "25it": [300, 305], "1424": 300, "358": [300, 305], "81it": [300, 305], "1867": 300, "0002": [300, 301, 305], "360": [300, 305], "96it": [300, 305], "2031": [300, 305], "6000": 300, "353": [300, 305], "2122": 300, "7000": 300, "356": [300, 305], "2321": 300, "359": [300, 305], "2481": [300, 305], "9000": 300, "363": [300, 305], "2470": 300, "366": [300, 305], "2579": 300, "cap": [300, 307], "figsiz": [300, 305], "subplot": [300, 305, 310], "titl": [300, 301, 304, 305], "bit": [300, 301, 304, 307], "217": [300, 305, 308], "coding_ppo": [300, 308], "rnn": 301, "lstmmodul": 301, "84x84": 301, "accessori": 301, "stamp": 301, "tensordictprim": 301, "se": 301, "flank": 301, "assist": 301, "emb": 301, "n_cell": 301, "customiz": 301, "almost": 301, "bidirect": 301, "wouldn": 301, "make_tensordict_prim": 301, "interpolationmod": 301, "qval": 301, "stoch_polici": 301, "cudnn": 301, "opportun": 301, "coupl": [301, 305, 307], "uniniti": 301, "again": [301, 304, 306, 307, 310], "redund": 301, "strongli": 301, "million": 301, "sake": [301, 306, 307], "20_000": [301, 305], "longest": 301, "npai": 301, "recurrent_st": 301, "action_spread": 301, "1000000": 301, "109": [301, 305], "0005": 301, "150": [301, 305], "0004": [301, 305], "406": [301, 305, 308], "2097": 301, "dqn_with_rnn": [301, 308], "tutorials_python": 302, "tutorials_jupyt": 302, "distinct": 303, "humanoid": [303, 310], "env1_obs_kei": 303, "observation_stand": 303, "env2_obs_kei": 303, "observation_walk": 303, "tdreset1": 303, "tdreset2": 303, "tdreset": 303, "policy_common": 303, "policy_stand": 303, "policy_walk": 303, "But": 303, "exclusive_field": [303, 309], "stack_dim": [303, 309], "env1_mak": 303, "env2_mak": 303, "_single_task": 303, "td_rollout": 303, "746": [303, 308], "multi_task": [303, 308], "matteo": 304, "bettini": 304, "marl": 304, "maddpg": 304, "navig": 304, "lidar": 304, "sensor": 304, "collis": 304, "tie": 304, "mappo": 304, "ippo": 304, "phase": [304, 307], "mathbf": 304, "pi": [304, 305], "_t": [304, 305], "fed": [304, 307], "approxim": [304, 310], "decentralis": 304, "literatur": 304, "overcom": 304, "stationari": 304, "concurr": 304, "analys": 304, "gui": 304, "visualis": 304, "multiagentmlp": 304, "divic": 304, "vmas_devic": 304, "6_000": 304, "team": [304, 309], "n_iter": 304, "minibatch_s": 304, "generalis": 304, "furthermor": 304, "simd": 304, "parallelis": 304, "warp": 304, "todai": 304, "circl": 304, "surround": 304, "dot": [304, 305], "collid": 304, "drag": 304, "elast": 304, "acceler": 304, "penalis": 304, "num_vmas_env": 304, "scenario_nam": 304, "four": [304, 305], "environmnet": 304, "final_rew": 304, "agent_collis": 304, "enviorn": 304, "stress": 304, "paramount": 304, "episode_reward": 304, "n_rollout_step": 304, "evolut": 304, "yourself": 304, "utilis": 304, "n_actions_per_ag": 304, "n_obs_per_ag": 304, "share_parameters_polici": 304, "policy_net": 304, "denot": 304, "unbatched_action_spec": 304, "carefulli": [304, 310], "grant": 304, "converg": 304, "cooper": 304, "share_parameters_crit": 304, "critic_net": 304, "fantast": 304, "minibatch": 304, "desc": 304, "episode_reward_mean": 304, "episode_reward_mean_list": 304, "critic_param": 304, "target_critic_param": 304, "refresh": 304, "3641679584980011": 304, "5052392482757568": 304, "0283849239349365": 304, "331086277961731": 304, "0674946308135986": 304, "245943784713745": 304, "611856698989868": 304, "8442416191101074": 304, "856468677520752": 304, "9219210147857666": 304, "xvfb": 304, "pyvirtualdisplai": 304, "1400": [304, 305], "pil": 304, "rendering_callback": 304, "fromarrai": 304, "rgb_arrai": [304, 305], "gif": 304, "save_al": 304, "append_imag": 304, "profici": 304, "master": 304, "788": [304, 308], "multiagent_ppo": [304, 308], "freeli": 305, "sep": 305, "touch": 305, "undertaken": 305, "broader": 305, "challeng": [305, 306], "wider": 305, "algebra": 305, "acquaint": 305, "avenu": 305, "_apply_to_composit": 305, "default_x": 305, "default_i": 305, "torqu": 305, "upward": 305, "angular": 305, "sin": 305, "rad": 305, "sec": 305, "gravit": 305, "angl": 305, "deleg": 305, "new_th": 305, "new_thdot": 305, "thdot": 305, "g_forc": 305, "max_torqu": 305, "angle_norm": 305, "max_spe": 305, "albeit": 305, "gen_param": 305, "high_th": 305, "high_thdot": 305, "low_th": 305, "low_thdot": 305, "rng": 305, "lazili": 305, "trivial": 305, "neither": 305, "shortcut": [305, 310], "irrelev": 305, "_make_spec": 305, "td_param": 305, "commong": 305, "pseudo": 305, "render_mod": 305, "render_fp": 305, "random_": 305, "_make_step": 305, "staticmethod": 305, "complic": [305, 307, 310], "showcas": 305, "skeleton": 305, "_apply_transform": [305, 310], "_inv_apply_transform": [305, 310], "subset": [305, 306], "unitari": 305, "sine": 305, "cosin": 305, "sintransform": 305, "costransform": 305, "t_sin": 305, "t_co": 305, "cat_transform": 305, "mdp": 305, "convin": 305, "simple_rollout": 305, "_data": 305, "unexplor": 305, "assumpt": [305, 307], "recreat": 305, "init_td": 305, "traj_return": 305, "last_reward": 305, "is_ipython": 305, "inlin": 305, "get_backend": 305, "ion": 305, "gcf": 305, "clear_output": 305, "625": 305, "0488": 305, "0748": 305, "519": 305, "0499": 305, "4472": 305, "073": 305, "0685": 305, "0408": 305, "552": 305, "5154": 305, "9086": 305, "527": 305, "9385": 305, "155": 305, "2568": 305, "4981": 305, "223": 305, "8929": 305, "4491": 305, "581": 305, "3233": 305, "0664": 305, "596": 305, "1021": 305, "5263": 305, "9579": 305, "5807": 305, "8075": 305, "212": 305, "2009": 305, "5525": 305, "914": [305, 308], "2894": 305, "0115": 305, "0977": 305, "1845": 305, "1830": 305, "4858": 305, "233": 305, "2863": 305, "0297": 305, "464": 305, "4617": 305, "5997": 305, "904": 305, "1647": 305, "0777": 305, "901": 305, "4709": 305, "6813": 305, "8317": 305, "3221": 305, "5554": 305, "3353": 305, "701": 305, "8570": 305, "6656": 305, "463": 305, "7779": 305, "6911": 305, "875": 305, "0796": 305, "7082": 305, "308": 305, "0421": 305, "1496": 305, "5037": 305, "1755": 305, "5029": 305, "9454": 305, "665": 305, "9330": 305, "2118": 305, "444": 305, "0995": 305, "6294": 305, "3146": 305, "2909": 305, "461": 305, "9720": 305, "1298": 305, "9923": 305, "0345": 305, "3438": 305, "3688": 305, "424": 305, "6953": 305, "5233": 305, "411": 305, "8011": 305, "5329": 305, "2677": 305, "6969": 305, "7010": 305, "376": 305, "9352": 305, "7707": 305, "6178": 305, "5646": 305, "348": 305, "7304": 305, "9407": 305, "942": 305, "3882": 305, "7604": 305, "3507": 305, "8928": 305, "258": 305, "6978": 305, "4641": 305, "549": 305, "6047": 305, "5005": 305, "4136": 305, "2993": 305, "3222": 305, "4046": 305, "7314": 305, "275": 305, "6331": 305, "9318": 305, "961": 305, "8331": 305, "1604": 305, "4099": 305, "4761": 305, "125": 305, "4262": 305, "6363": 305, "382": 305, "3593": 305, "7377": 305, "2847": 305, "3443": 305, "867": 305, "3592": 305, "4760": 305, "441": [305, 306, 308], "9950": 305, "8021": 305, "3528": 305, "1214": 305, "708": 305, "4023": 305, "3583": 305, "041": 305, "3801": 305, "0310": 305, "120": 305, "4244": 305, "2039": 305, "4850": 305, "8748": 305, "706": 305, "4897": 305, "9210": 305, "8964": 305, "0832": 305, "3934": 305, "456": 305, "8971": 305, "2933": 305, "3377": 305, "6996": 305, "2274": 305, "8916": 305, "098": 305, "2660": 305, "9110": 305, "4503": 305, "6956": 305, "9172": 305, "4026": 305, "946": 305, "9229": 305, "5205": 305, "294": 305, "8872": 305, "6637": 305, "019": 305, "9281": 305, "2082": 305, "724": 305, "8561": 305, "6574": 305, "357": 305, "4138": 305, "5230": 305, "385": 305, "4065": 305, "5642": 305, "921": 305, "9786": 305, "4129": 305, "5831": 305, "266": 305, "7723": 305, "4152": 305, "0898": 305, "389": 305, "5155": 305, "5376": 305, "5616": 305, "4094": 305, "283": 305, "5333": 305, "4803": 305, "895": 305, "6566": 305, "2588": 305, "662": 305, "4732": 305, "7503": 305, "068": 305, "0714": 305, "3370": 305, "059": 305, "8612": 305, "1915": 305, "3855": 305, "0349": 305, "9644": 305, "4538": 305, "445": 305, "0392": 305, "4080": 305, "1648": 305, "9599": 305, "143": 305, "4284": 305, "5946": 305, "2590": 305, "9181": 305, "4621": 305, "9075": 305, "674": 305, "1772": 305, "9444": 305, "351": 305, "9391": 305, "5595": 305, "8673": 305, "6240": 305, "5919": 305, "0018": 305, "1071": 305, "9127": 305, "251": 305, "9799": 305, "3131": 305, "9612": 305, "9705": 305, "8741": 305, "2230": 305, "0972": 305, "0337": 305, "0350": 305, "0654": 305, "102": [305, 307], "2441": 305, "4596": 305, "362": 305, "103": 305, "4362": 305, "171": 305, "104": 305, "4041": 305, "6907": 305, "105": 305, "4664": 305, "2760": 305, "0299": 305, "9712": 305, "349": 305, "107": [305, 307], "3332": 305, "4479": 305, "772": 305, "108": 305, "4357": 305, "9591": 305, "543": 305, "6216": 305, "1353": 305, "692": 305, "110": 305, "6261": 305, "7086": 305, "496": 305, "111": [305, 307], "7758": 305, "9818": 305, "112": 305, "7772": 305, "5055": 305, "113": 305, "5840": 305, "3180": 305, "2083": 305, "115": 305, "5275": 305, "6873": 305, "116": 305, "4107": 305, "1624": 305, "117": 305, "6372": 305, "2571": 305, "118": 305, "4039": 305, "4428": 305, "119": 305, "4728": 305, "5628": 305, "6767": 305, "2466": 305, "522": 305, "121": [305, 310], "5873": 305, "5072": 305, "122": [305, 310], "6548": 305, "3766": 305, "123": 305, "5134": 305, "1955": 305, "124": [305, 307], "0591": 305, "4500": 305, "3368": 305, "126": 305, "9708": 305, "7059": 305, "127": [305, 307], "3031": 305, "2534": 305, "843": 305, "3327": 305, "6193": 305, "129": 305, "4831": 305, "1172": 305, "2593": 305, "4219": 305, "962": 305, "131": 305, "8380": 305, "899": [305, 308], "132": 305, "2721": 305, "9048": 305, "166": 305, "133": 305, "2419": 305, "5248": 305, "134": 305, "2139": 305, "4278": 305, "135": [305, 307], "0690": 305, "5140": 305, "136": [305, 307], "1140": 305, "7402": 305, "137": 305, "5356": 305, "1636": 305, "138": 305, "0671": 305, "8798": 305, "139": 305, "8918": 305, "3298": 305, "307": 305, "140": 305, "1779": 305, "141": [305, 307], "1771": 305, "3624": 305, "936": 305, "142": 305, "1683": 305, "4810": 305, "9373": 305, "4435": 305, "144": [305, 307], "4396": 305, "8092": 305, "145": 305, "2572": 305, "146": 305, "4212": 305, "0260": 305, "147": 305, "0939": 305, "6478": 305, "605": 305, "148": 305, "6606": 305, "7289": 305, "149": 305, "9300": 305, "7193": 305, "563": 305, "1166": 305, "8514": 305, "151": 305, "9108": 305, "0672": 305, "292": 305, "152": 305, "8591": 305, "3768": 305, "9976": 305, "154": 305, "0576": 305, "0067": 305, "935": 305, "4199": 305, "1722": 305, "156": 305, "8310": 305, "3466": 305, "157": 305, "8631": 305, "2492": 305, "158": 305, "8763": 305, "1277": 305, "159": 305, "5562": 305, "7446": 305, "1082": 305, "9830": 305, "161": 305, "0946": 305, "5229": 305, "162": 305, "4574": 305, "6900": 305, "163": [305, 306], "2229": 305, "0318": 305, "482": 305, "164": [305, 308], "0543": 305, "0817": 305, "761": 305, "165": [305, 310], "2809": 305, "5118": 305, "1142": 305, "5635": 305, "167": 305, "1949": 305, "2327": 305, "982": 305, "168": 305, "0967": 305, "0387": 305, "457": 305, "169": [305, 307], "0782": 305, "2150": 305, "170": 305, "5222": 305, "3725": 305, "9288": 305, "9837": 305, "1416": 305, "1099": 305, "173": 305, "8620": 305, "8475": 305, "174": 305, "1807": 305, "175": 305, "1148": 305, "0645": 305, "176": 305, "2751": 305, "8313": 305, "177": 305, "9286": 305, "9770": 305, "5735": 305, "2837": 305, "179": 305, "2926": 305, "9489": 305, "180": 305, "1507": 305, "181": 305, "8724": 305, "3567": 305, "182": 305, "3574": 305, "6140": 305, "183": 305, "7895": 305, "2518": 305, "184": 305, "6146": 305, "185": 305, "8776": 305, "7358": 305, "186": 305, "3722": 305, "8428": 305, "187": 305, "7955": 305, "188": 305, "0092": 305, "7106": 305, "829": 305, "2264": 305, "6919": 305, "190": 305, "1438": 305, "1362": 305, "191": 305, "0618": 305, "8217": 305, "9420": 305, "6765": 305, "7745": 305, "0709": 305, "194": 305, "9478": 305, "6867": 305, "195": 305, "6507": 305, "6225": 305, "196": 305, "2244": 305, "2195": 305, "197": 305, "5385": 305, "9263": 305, "198": 305, "1878": 305, "2374": 305, "199": 305, "8054": 305, "3504": 305, "557": 305, "0766": 305, "6825": 305, "201": 305, "2011": 305, "8393": 305, "202": 305, "0803": 305, "7815": 305, "203": 305, "8363": 305, "2460": 305, "204": 305, "8643": 305, "2191": 305, "593": 305, "205": 305, "0773": 305, "1343": 305, "206": 305, "8657": 305, "207": 305, "9304": 305, "7584": 305, "208": 305, "8752": 305, "2307": 305, "209": 305, "5250": 305, "4869": 305, "210": [305, 310], "7837": 305, "5762": 305, "211": 305, "6661": 305, "8600": 305, "2502": 305, "1752": 305, "213": 305, "3075": 305, "8871": 305, "214": 305, "9406": 305, "8090": 305, "215": 305, "6291": 305, "8923": 305, "876": 305, "216": 305, "9504": 305, "21e": 305, "7431": 305, "7880": 305, "218": 305, "4463": 305, "5432": 305, "219": 305, "3793": 305, "3313": 305, "220": 305, "8843": 305, "0369": 305, "065": 305, "221": 305, "4828": 305, "8391": 305, "222": 305, "6265": 305, "2913": 305, "947": 305, "5541": 305, "1252": 305, "7342": 305, "2396": 305, "225": 305, "5936": 305, "1924": 305, "226": 305, "9975": 305, "2045": 305, "227": 305, "8367": 305, "9540": 305, "228": 305, "7259": 305, "6743": 305, "229": 305, "4827": 305, "7528": 305, "7361": 305, "8756": 305, "231": 305, "7646": 305, "1116": 305, "232": 305, "5426": 305, "8385": 305, "5662": 305, "8585": 305, "234": 305, "8234": 305, "7930": 305, "235": 305, "2648": 305, "9309": 305, "236": 305, "6817": 305, "237": 305, "0943": 305, "1533": 305, "238": 305, "3045": 305, "0483": 305, "239": 305, "240": [305, 309, 310], "6415": 305, "0201": 305, "241": 305, "4437": 305, "4365": 305, "242": 305, "0358": 305, "4943": 305, "243": 305, "1272": 305, "5003": 305, "1180": 305, "2637": 305, "245": 305, "7197": 305, "246": 305, "2917": 305, "247": 305, "0160": 305, "0738": 305, "248": 305, "3689": 305, "0120": 305, "249": 305, "5570": 305, "0475": 305, "250": 305, "4423": 305, "2220": 305, "6803": 305, "252": 305, "1465": 305, "7214": 305, "253": 305, "8801": 305, "7034": 305, "254": 305, "9136": 305, "4076": 305, "7589": 305, "5013": 305, "8150": 305, "2241": 305, "257": 305, "0753": 305, "8081": 305, "1951": 305, "8314": 305, "0038": 305, "260": 305, "0889": 305, "4616": 305, "261": 305, "0655": 305, "262": 305, "8333": 305, "9476": 305, "263": 305, "7554": 305, "3798": 305, "264": 305, "3717": 305, "3947": 305, "529": 305, "265": 305, "3060": 305, "6495": 305, "7467": 305, "8889": 305, "267": 305, "8457": 305, "591": 305, "268": 305, "7137": 305, "0536": 305, "771": 305, "269": 305, "1651": 305, "388": 305, "8246": 305, "5709": 305, "281": 305, "271": 305, "7502": 305, "0521": 305, "032": 305, "272": 305, "5475": 305, "7253": 305, "2856": 305, "7130": 305, "274": 305, "2778": 305, "4122": 305, "8368": 305, "1841": 305, "9622": 305, "1603": 305, "003e": 305, "277": 305, "0247": 305, "346": 305, "278": 305, "2238": 305, "6418": 305, "279": 305, "0626": 305, "2538": 305, "280": 305, "0149": 305, "7380": 305, "2167": 305, "8911": 305, "282": 305, "8725": 305, "1983": 305, "8142": 305, "3709": 305, "284": 305, "4989": 305, "285": 305, "6464": 305, "6210": 305, "286": 305, "9726": 305, "0820": 305, "287": 305, "6975": 305, "9091": 305, "4926": 305, "4791": 305, "289": 305, "0905": 305, "3500": 305, "290": 305, "2287": 305, "291": 305, "9918": 305, "5543": 305, "9245": 305, "6444": 305, "631": 305, "293": 305, "0448": 305, "4769": 305, "8566": 305, "7208": 305, "295": 305, "0966": 305, "296": 305, "5303": 305, "1537": 305, "023": 305, "297": 305, "2682": 305, "564": 305, "298": 305, "4318": 305, "5063": 305, "299": 305, "7475": 305, "4190": 305, "8186": 305, "5077": 305, "301": 305, "1883": 305, "5291": 305, "472": 305, "302": 305, "1256": 305, "3998": 305, "303": 305, "3622": 305, "0930": 305, "626": 305, "304": 305, "9500": 305, "0075": 305, "5664": 305, "305": 305, "5697": 305, "3024": 305, "306": 305, "3117": 305, "0052": 305, "006": 305, "0981": 305, "9312": 305, "3873": 305, "309": 305, "0411": 305, "2650": 305, "310": 305, "1656": 305, "0228": [305, 310], "311": 305, "1196": 305, "2478": 305, "312": 305, "7353": 305, "0812": 305, "313": 305, "3022": 305, "758": 305, "314": 305, "1406": 305, "4626": 305, "315": 305, "2156": 305, "851": 305, "316": 305, "1953": 305, "3774": 305, "317": 305, "6385": 305, "9917": 305, "318": 305, "2764": 305, "905": 305, "319": 305, "6391": 305, "9317": 305, "9748": 305, "2679": 305, "321": 305, "8495": 305, "5125": 305, "322": 305, "8177": 305, "6602": 305, "323": 305, "0704": 305, "5776": 305, "324": 305, "9833": [305, 309], "1339": 305, "402": 305, "325": 305, "1238": 305, "326": 305, "9299": 305, "0227": 305, "327": 305, "7727": 305, "1607": 305, "336": 305, "328": 305, "3958": 305, "3223": 305, "763": 305, "329": 305, "4742": 305, "1797": 305, "330": 305, "0144": 305, "0085": 305, "791": 305, "8284": 305, "0428": 305, "332": 305, "0098": 305, "7365": 305, "333": 305, "4566": 305, "0781": 305, "086": 305, "334": 305, "3355": 305, "0230": 305, "335": 305, "9346": 305, "0423": 305, "076": 305, "3711": 305, "1335": 305, "6855": 305, "337": 305, "0304": 305, "0023": 305, "8459": 305, "338": 305, "9998": 305, "4399": 305, "339": 305, "2303": 305, "1346": 305, "340": 305, "2915": 305, "7116": 305, "341": [305, 308, 310], "5560": 305, "0487": 305, "342": 305, "5119": 305, "061": 305, "343": 305, "3305": 305, "3705": 305, "957": 305, "344": 305, "6068": 305, "345": 305, "5731": 305, "3897": 305, "0376": 305, "347": 305, "0434": 305, "012": 305, "1300": 305, "1215": 305, "0968": 305, "0885": 305, "1348": 305, "0073": 305, "5052": 305, "4184": 305, "2817": 305, "8887": 305, "4779": 305, "1009": 305, "354": 305, "0604": 305, "599": 305, "4486": 305, "1176": 305, "656": 305, "2436": 305, "0668": 305, "8849": 305, "0012": 305, "7511": 305, "8804": 305, "8870": 305, "6728": 305, "8841": 305, "5508": 305, "361": 305, "5242": 305, "0268": 305, "0013": 305, "6185": 305, "1378": 305, "0204": 305, "364": 305, "0355": 305, "685": 305, "365": 305, "4884": 305, "0231": 305, "0770": 305, "0014": 305, "6793": 305, "367": 305, "9834": 305, "863": 305, "368": 305, "6709": 305, "462": 305, "369": 305, "5199": 305, "9790": 305, "370": 305, "9401": 305, "7802": 305, "371": 305, "6723": 305, "372": 305, "2678": 305, "6201": 305, "373": 305, "2184": 305, "7385": 305, "374": 305, "6344": 305, "617": 305, "375": 305, "9945": 305, "0772": 305, "567": 305, "7576": 305, "0398": 305, "377": 305, "3396": 305, "0022": 305, "094": 305, "378": 305, "3073": 305, "4018": 305, "379": 305, "1869": 305, "380": 305, "0481": 305, "1117": 305, "381": 305, "6823": 305, "981": 305, "8305": 305, "0210": 305, "383": [305, 308], "4908": 305, "0272": 305, "538": 305, "3267": 305, "0111": 305, "7965": 305, "1796": 305, "0039": 305, "5396": 305, "386": 305, "3757": 305, "0490": 305, "387": 305, "1394": 305, "4187": 305, "2986": 305, "7954": 305, "1274": 305, "0063": 305, "813": 305, "390": 305, "8706": 305, "0114": 305, "391": 305, "6922": 305, "2423": 305, "392": 305, "9115": 305, "2602": 305, "393": 305, "2449": 305, "0783": 305, "394": 305, "0631": 305, "0057": 305, "7444": 305, "395": 305, "3339": 305, "0167": 305, "396": 305, "4806": 305, "397": 305, "4171": 305, "067": 305, "398": 305, "2618": 305, "5809": 305, "399": 305, "0054": 305, "3364": 305, "8733": 305, "0184": 305, "401": 305, "9137": 305, "0113": 305, "025": 305, "0386": 305, "0625": 305, "403": 305, "1332": 305, "0582": 305, "7816": 305, "404": 305, "8341": 305, "0941": 305, "854": 305, "405": 305, "8615": 305, "588": 305, "3849": 305, "008": 305, "407": 305, "9395": 305, "0765": 305, "055": 305, "408": 305, "2685": 305, "2235": 305, "688": 305, "409": 305, "3052": 305, "4249": 305, "410": 305, "6806": 305, "6383": 305, "3721": 305, "9981": 305, "412": 305, "1862": 305, "822": 305, "413": 305, "9811": 305, "0171": 305, "013": 305, "0252": 305, "0049": 305, "6205": 305, "415": 305, "1108": 305, "4921": 305, "9142": 305, "8130": 305, "417": 305, "1725": 305, "0036": 305, "3196": 305, "418": 305, "7795": 305, "0242": 305, "799": 305, "419": 305, "7737": 305, "0138": 305, "420": 305, "1462": 305, "0053": 305, "421": 305, "9226": 305, "6139": 305, "422": 305, "9889": 305, "0403": 305, "423": 305, "6194": 305, "0032": 305, "3989": 305, "0104": 305, "425": 305, "9960": 305, "0009": 305, "6009": 305, "426": 305, "2697": 305, "0914": 305, "427": 305, "1114": 305, "428": 305, "9862": 305, "1932": 305, "429": 305, "0637": 305, "0623": 305, "082": 305, "430": 305, "9906": 305, "431": 305, "9948": 305, "0895": 305, "432": 305, "1970": 305, "0256": 305, "433": 305, "4231": 305, "0449": 305, "644": 305, "434": 305, "1039": 305, "1973": 305, "435": 305, "4561": 305, "1225": 305, "436": 305, "0211": 305, "2125": 305, "437": 305, "3866": 305, "0050": 305, "7202": 305, "438": 305, "6388": 305, "0072": 305, "439": 305, "1187": 305, "0015": 305, "5116": 305, "440": 305, "0432": 305, "0025": 305, "7809": 305, "1925": 305, "0103": 305, "442": 305, "9570": 305, "443": 305, "0871": 305, "5601": 305, "0165": 305, "0047": 305, "6061": 305, "2746": 305, "0027": 305, "7887": 305, "446": 305, "1835": 305, "0035": 305, "855": 305, "447": 305, "8420": 305, "548": 305, "2653": 305, "0126": 305, "9736": 305, "449": 305, "0594": 305, "0119": 305, "6196": 305, "450": 305, "4509": 305, "0373": 305, "451": 305, "0620": 305, "452": 305, "6898": 305, "3235": 305, "687": 305, "453": 305, "5879": 305, "454": 305, "8406": 305, "0694": 305, "455": 305, "8259": 305, "0235": 305, "8500": 305, "0024": 305, "4054": 305, "458": 305, "2027": 305, "0894": 305, "459": 305, "5966": 305, "460": 305, "6942": 305, "0016": 305, "4254": 305, "6703": 305, "0145": 305, "8124": 305, "0218": 305, "9196": 305, "0188": 305, "8986": 305, "0884": 305, "0084": 305, "5624": 305, "465": 305, "8862": 305, "0006": 305, "5384": 305, "466": 305, "5837": 305, "467": 305, "8954": 305, "0101": 305, "6751": 305, "468": 305, "8063": 305, "0122": 305, "9635": 305, "469": 305, "0692": 305, "4216": 305, "470": 305, "1227": 305, "0586": 305, "162e": 305, "471": 305, "9690": 305, "0074": 305, "4166": 305, "6324": 305, "473": 305, "0778": 305, "474": 305, "8548": 305, "0017": 305, "4408": 305, "475": 305, "8125": 305, "1515": 305, "476": 305, "2733": 305, "0044": 305, "2836": 305, "477": 305, "7497": 305, "7681": 305, "478": 305, "8547": 305, "0105": 305, "7212": 305, "479": 305, "9848": 305, "0019": 305, "6498": 305, "1987": 305, "0011": 305, "5473": 305, "481": 305, "8991": 305, "0033": 305, "6091": 305, "9189": 305, "5771": 305, "483": 305, "6781": 305, "7542": 305, "5959": 305, "0064": 305, "4295": 305, "485": 305, "2547": 305, "486": 305, "0636": 305, "547": 305, "487": 305, "0065": 305, "488": 305, "1694": 305, "0083": 305, "5759": 305, "489": 305, "0493": 305, "0021": 305, "7805": 305, "490": 305, "0950": 305, "497": 305, "491": 305, "9717": 305, "3672": 305, "492": 305, "0207": 305, "493": 305, "8266": 305, "0069": 305, "5365": 305, "494": 305, "2623": 305, "5078": 305, "495": 305, "4545": 305, "09636": 305, "8754": 305, "0010": 305, "498": 305, "0031": 305, "8269": 305, "499": 305, "4082": 305, "6642": 305, "2284": 305, "501": 305, "9130": 305, "0008": 305, "502": 305, "503": 305, "7624": 305, "0056": 305, "3858": 305, "504": 305, "0890": 305, "0042": 305, "505": 305, "7505": 305, "2157": 305, "506": 305, "8394": 305, "3413": 305, "507": 305, "9609": 305, "0041": 305, "6905": 305, "8467": 305, "4409": 305, "509": 305, "510": 305, "8128": 305, "3559": 305, "511": 305, "1479": 305, "0264": 305, "1589": 305, "566": 305, "513": 305, "2756": 305, "0046": 305, "5266": 305, "514": 305, "9873": 305, "0112": 305, "9314": 305, "515": 305, "3791": 305, "0721": 305, "516": 305, "4580": 305, "0758": 305, "6114": 305, "517": 305, "2431": 305, "518": 305, "1958": 305, "5553": 305, "8924": 305, "0097": 305, "520": 305, "3737": 305, "0234": 305, "521": 305, "9125": 305, "4623": 305, "3230": 305, "0589": 305, "3784": 305, "523": 305, "9482": 305, "0051": 305, "524": 305, "1979": 305, "0045": 305, "6401": 305, "525": 305, "1588": 305, "0048": 305, "6255": 305, "526": 305, "6084": 305, "3477": 305, "1475": 305, "0209": 305, "528": 305, "7611": 305, "1040": 305, "0099": 305, "0173": 305, "643": 305, "530": 305, "8189": 305, "4358": 305, "531": 305, "9897": 305, "532": 305, "1548": 305, "9751": 305, "533": 305, "6362": 305, "7495": 305, "534": 305, "1749": 305, "9513": 305, "535": 305, "7708": 305, "0371": 305, "536": 305, "2649": 305, "0437": 305, "537": 305, "5491": 305, "0276": 305, "6426": 305, "7294": 305, "078e": 305, "539": 305, "9928": 305, "540": 305, "7937": 305, "0124": 305, "9664": 305, "541": 305, "3342": 305, "542": 305, "2046": 305, "5496": 305, "0956": 305, "0059": 305, "545": 305, "9028": 305, "5843": 305, "546": 305, "0674": 305, "0178": 305, "797": 305, "2815": 305, "0599": 305, "1587": 305, "9276": 305, "8228": 305, "6164": 305, "551": 305, "6850": 305, "9167": 305, "3092": 305, "0670": 305, "9177": 305, "553": 305, "1599": 305, "0043": 305, "554": 305, "6367": 305, "555": 305, "3657": 305, "556": 305, "6694": 305, "2622": 305, "0372": 305, "4841": 305, "558": 305, "2707": 305, "0058": 305, "757": 305, "559": 305, "2267": 305, "5415": 305, "560": 305, "4556": 305, "0163": 305, "561": 305, "1839": 305, "0809": 305, "6262": 305, "562": 305, "0278": 305, "1112": 305, "6155": 305, "565": 305, "1427": 305, "3582": 305, "624": 305, "7870": 305, "9490": 305, "0439": 305, "8796": 305, "568": 305, "8026": 305, "612": 305, "569": 305, "3147": 305, "8486": 305, "570": 305, "7917": 305, "0129": 305, "571": 305, "9553": 305, "0020": 305, "6871": 305, "572": 305, "3132": 305, "0159": 305, "8646": 305, "573": 305, "5320": 305, "0269": 305, "574": 305, "2955": 305, "0245": 305, "575": 305, "3347": 305, "0179": 305, "9718": 305, "1629": 305, "804": 305, "577": 305, "0070": 305, "4335": 305, "578": 305, "579": 305, "3049": 305, "9063": 305, "580": 305, "8785": 305, "3295": 305, "5184": 305, "0546": 305, "582": 305, "4589": 305, "583": 305, "4697": 305, "2476": 305, "584": 305, "2397": 305, "585": 305, "4953": 305, "1775": 305, "586": 305, "2258": 305, "0110": 305, "7671": 305, "587": 305, "3981": 305, "8590": 305, "0007": 305, "589": 305, "9820": 305, "4221": 305, "590": 305, "1293": 305, "0116": 305, "868": 305, "1675": 305, "5931": 305, "592": 305, "2910": 305, "5219": 305, "2124": 305, "1730": 305, "737": 305, "594": 305, "2914": 305, "0206": 305, "595": 305, "0172": 305, "3982": 305, "0945": 305, "0121": 305, "4789": 305, "3805": 305, "598": 305, "3310": 305, "5065": 305, "6028": 305, "6316": 305, "6724": 305, "6523": 305, "601": 305, "0136": 305, "4298": 305, "602": 305, "3524": 305, "2629": 305, "603": 305, "2635": 305, "7839": 305, "604": 305, "6041": 305, "8027": 305, "4170": 305, "4675": 305, "606": 305, "3153": 305, "9316": 305, "607": 305, "0649": 305, "9722": 305, "7989": 305, "0329": 305, "609": 305, "1976": 305, "6852": 305, "610": 305, "4793": 305, "1255": 305, "611": 305, "4581": 305, "0394": 305, "2047": 305, "0326": 305, "613": 305, "8967": 305, "8619": 305, "614": 305, "5906": 305, "6491": 305, "615": 305, "6634": 305, "4394": 305, "616": 305, "0624": 305, "0061": 305, "5676": 305, "3259": 305, "0131": 305, "7733": 305, "618": 305, "7515": 305, "0189": 305, "5575": 305, "619": 305, "9313": 305, "6286": 305, "620": 305, "4325": 305, "7832": 305, "621": 305, "1134": 305, "622": 305, "4572": 305, "0500": 305, "5838": 305, "623": 305, "3818": 305, "8623": 305, "1253": 305, "6622": 305, "subject": 305, "saw": [305, 307], "explain": 306, "semat": 306, "r3mtransform": 306, "embodi": 306, "ai": 306, "env_transform": [306, 310], "s3": 306, "amazonaw": 306, "r3m_50": 306, "374m": 306, "8m": 306, "145mb": 306, "7m": 306, "110mb": 306, "6m": 306, "3mb": 306, "1mb": 306, "5m": 306, "6mb": 306, "9m": 306, "2mb": 306, "5mb": 306, "105m": 306, "115m": 306, "130m": 306, "9mb": 306, "139m": 306, "147m": 306, "164m": 306, "7mb": 306, "179m": 306, "187m": 306, "195m": 306, "201m": 306, "8mb": 306, "212m": 306, "226m": 306, "232m": 306, "244m": 306, "0mb": 306, "249m": 306, "261m": 306, "267m": 306, "279m": 306, "293m": 306, "300m": 306, "311m": 306, "317m": 306, "328m": 306, "342m": 306, "349m": 306, "359m": 306, "365m": 306, "wiser": 306, "conclud": 306, "_storag": [306, 307], "3257": [306, 308], "pretrained_model": [306, 308], "supervis": [307, 310], "pull": 307, "temporarili": 307, "drastic": 307, "ram": [307, 310], "batteri": 307, "dataliststorag": 307, "datalazytensorstorag": 307, "tensordidct": 307, "basi": 307, "datalazymemmapstorag": 307, "buffer_list": 307, "lowest": 307, "medium": 307, "buffer_lazytensor": 307, "buffer_lazymemmap": 307, "fullest": 307, "organ": 307, "convini": 307, "mydata": 307, "background": 307, "question": [307, 309], "_i": 307, "artifici": 307, "0892946e": 307, "she": 307, "augment": 307, "pars": 307, "proport": 307, "hist": 307, "barcontain": 307, "artist": 307, "revert": 307, "expens": 307, "reappear": 307, "unfold": 307, "problemat": 307, "window": 307, "4th": 307, "892": [307, 308], "rb_tutori": [307, 308], "898": 308, "torchrl_demo": [308, 309], "749": [308, 309], "torchrl_env": [308, 310], "2096": 308, "demo": 309, "icml": 309, "vmoen": 309, "fb": 309, "invest": 309, "platform": 309, "media": 309, "truli": 309, "predominantli": 309, "tensordict1": 309, "tensordict2": 309, "tensordict_sampl": 309, "_sampler": 309, "_sum_tre": 309, "modulenotfounderror": 309, "28791671991348267": 309, "gym_env": 309, "noopresetenv": [309, 310], "lazyconv2d": 309, "backbone_modul": 309, "params_expand": 309, "tensordict_exp": 309, "base_modul": 309, "0137": 309, "1524": 309, "0641": 309, "viewbackward0": 309, "asstridedbackward0": 309, "8728": 309, "1334": 309, "3494": 309, "6887": 309, "6402": 309, "_safetanhbackward": 309, "1132": 309, "1762": 309, "3430": 309, "2668": 309, "2918": 309, "6239": 309, "roughli": 309, "tensordicts_prealloc": 309, "tensordicts_stack": 309, "tensordict_rollout": [309, 310], "disclaim": 309, "concatmodul": 309, "loss_td": 309, "year": 309, "roadmap": 309, "compris": 309, "contributor": 309, "curiou": 309, "nascent": 309, "unsupervis": 310, "rom": 310, "licens": 310, "pygam": 310, "unifi": 310, "insid": 310, "_build_env": 310, "sphinx_gallery_start_ignor": 310, "filterwarn": 310, "sphinx_gallery_end_ignor": 310, "adventur": 310, "v5": 310, "airraid": 310, "alien": 310, "amidar": 310, "assault": 310, "3868": 310, "void": 310, "reproduct": 310, "tensordict_tprim": 310, "imshow": 310, "axesimag": 310, "0x7f7693540cd0": 310, "inconsist": 310, "pong": 310, "swingup": 310, "swingup_spars": 310, "ball_in_cup": 310, "catch": 310, "balance_spars": 310, "three_pol": 310, "two_pol": 310, "finger": 310, "turn_easi": 310, "turn_hard": 310, "fish": 310, "swim": 310, "hopper": 310, "hop": 310, "run_pure_st": 310, "bring_bal": 310, "bring_peg": 310, "insert_bal": 310, "insert_peg": 310, "point_mass": 310, "reacher": 310, "swimmer": 310, "swimmer6": 310, "swimmer15": 310, "walker": 310, "dog": 310, "trot": 310, "humanoid_cmu": 310, "lqr": 310, "lqr_2_1": 310, "lqr_6_2": 310, "quadrup": 310, "escap": 310, "stacker": 310, "stack_2": 310, "stack_4": 310, "wrapper1": 310, "wrapper2": 310, "obviou": 310, "truth": 310, "env0": 310, "env_transformed_bi": 310, "stanc": 310, "transformeddistribut": 310, "base_dist": 310, "concat": 310, "mofidi": 310, "transformedenviron": 310, "moderet": 310, "computation": 310, "legitim": 310, "incom": 310, "amongst": 310, "wor": 310, "convention": 310, "scope": 310, "markovian": 310, "3288080526": 310, "constain": 310, "bar_": 310, "get_someth": 310, "bar_72e8c006": 310, "4cf1": 310, "aargh": 310, "foo_list": 310, "vec_env": 310, "_dispatch_caller_parallel": 310, "0x7f769320ae50": 310, "bar_7a746d5c": 310, "b9a2": 310, "bar_7a7a80fc": 310, "a00d": 310, "bar_7a788d56": 310, "a1c7": 310, "parallen": 310, "particularili": 310, "evolv": 310, "steadi": 310, "approx": 310, "3027": 310, "2485": 310, "1459": 310, "9425": 310, "1314": 310, "1327": 310, "_extra_st": 310, "observation_ssq": 310, "observation_sum": 310, "1073": 310, "1093": 310, "2054": 310, "2422": 310, "3026": 310, "dispach": 310, "absor": 310}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 0, 1, "", "EnvBase"], [68, 0, 1, "", "EnvCreator"], [69, 0, 1, "", "EnvMetaData"], [70, 0, 1, "", "GymLikeEnv"], [71, 2, 1, "", "ModelBasedEnvBase"], [72, 0, 1, "", "MultiThreadedEnv"], [73, 0, 1, "", "ParallelEnv"], [74, 0, 1, "", "SerialEnv"], [71, 1, 1, "", "rand_step"], [71, 1, 1, "", "reset"], [71, 1, 1, "", "rollout"], [71, 1, 1, "", "set_seed"], [71, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[67, 3, 1, "", "action_key"], [67, 3, 1, "", "action_keys"], [67, 3, 1, "", "action_spec"], [67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 3, 1, "", "batch_locked"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 3, 1, "", "done_key"], [67, 3, 1, "", "done_keys"], [67, 3, 1, "", "done_spec"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fake_tensordict"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 3, 1, "", "input_spec"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 3, 1, "", "observation_spec"], [67, 3, 1, "", "output_spec"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "rand_action"], [67, 1, 1, "id0", "rand_step"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "id1", "reset"], [67, 3, 1, "", "reward_key"], [67, 3, 1, "", "reward_keys"], [67, 3, 1, "", "reward_spec"], [67, 1, 1, "id2", "rollout"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "id3", "set_seed"], [67, 1, 1, "", "share_memory"], [67, 3, 1, "", "specs"], [67, 1, 1, "", "state_dict"], [67, 3, 1, "", "state_spec"], [67, 1, 1, "id4", "step"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[70, 3, 1, "", "action_key"], [70, 3, 1, "", "action_keys"], [70, 3, 1, "", "action_spec"], [70, 1, 1, "", "add_module"], [70, 1, 1, "", "apply"], [70, 3, 1, "", "batch_locked"], [70, 1, 1, "", "bfloat16"], [70, 1, 1, "", "buffers"], [70, 1, 1, "", "children"], [70, 1, 1, "", "close"], [70, 1, 1, "", "compile"], [70, 1, 1, "", "cpu"], [70, 1, 1, "", "cuda"], [70, 3, 1, "", "done_key"], [70, 3, 1, "", "done_keys"], [70, 3, 1, "", "done_spec"], [70, 1, 1, "", "double"], [70, 1, 1, "", "eval"], [70, 1, 1, "", "extra_repr"], [70, 1, 1, "", "fake_tensordict"], [70, 1, 1, "", "float"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "get_buffer"], [70, 1, 1, "", "get_extra_state"], [70, 1, 1, "", "get_parameter"], [70, 1, 1, "", "get_submodule"], [70, 1, 1, "", "half"], [70, 3, 1, "", "input_spec"], [70, 1, 1, "", "ipu"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "modules"], [70, 1, 1, "", "named_buffers"], [70, 1, 1, "", "named_children"], [70, 1, 1, "", "named_modules"], [70, 1, 1, "", "named_parameters"], [70, 3, 1, "", "observation_spec"], [70, 3, 1, "", "output_spec"], [70, 1, 1, "", "parameters"], [70, 1, 1, "", "rand_action"], [70, 1, 1, "", "rand_step"], [70, 1, 1, "", "read_action"], [70, 1, 1, "", "read_done"], [70, 1, 1, "", "read_obs"], [70, 1, 1, "", "read_reward"], [70, 1, 1, "", "register_backward_hook"], [70, 1, 1, "", "register_buffer"], [70, 1, 1, "", "register_forward_hook"], [70, 1, 1, "", "register_forward_pre_hook"], [70, 1, 1, "", "register_full_backward_hook"], [70, 1, 1, "", "register_full_backward_pre_hook"], [70, 1, 1, "", "register_load_state_dict_post_hook"], [70, 1, 1, "", "register_module"], [70, 1, 1, "", "register_parameter"], [70, 1, 1, "", "register_state_dict_pre_hook"], [70, 1, 1, "", "requires_grad_"], [70, 1, 1, "", "reset"], [70, 3, 1, "", "reward_key"], [70, 3, 1, "", "reward_keys"], [70, 3, 1, "", "reward_spec"], [70, 1, 1, "", "rollout"], [70, 1, 1, "", "set_extra_state"], [70, 1, 1, "", "set_info_dict_reader"], [70, 1, 1, "", "set_seed"], [70, 1, 1, "", "share_memory"], [70, 3, 1, "", "specs"], [70, 1, 1, "", "state_dict"], [70, 3, 1, "", "state_spec"], [70, 1, 1, "", "step"], [70, 1, 1, "", "to"], [70, 1, 1, "", "to_empty"], [70, 1, 1, "", "train"], [70, 1, 1, "", "type"], [70, 1, 1, "", "xpu"], [70, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[72, 3, 1, "", "action_key"], [72, 3, 1, "", "action_keys"], [72, 3, 1, "", "action_spec"], [72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "close"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 3, 1, "", "done_key"], [72, 3, 1, "", "done_keys"], [72, 3, 1, "", "done_spec"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "fake_tensordict"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 3, 1, "", "input_spec"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 3, 1, "", "observation_spec"], [72, 3, 1, "", "output_spec"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "rand_action"], [72, 1, 1, "", "rand_step"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset"], [72, 3, 1, "", "reward_key"], [72, 3, 1, "", "reward_keys"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "", "rollout"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "share_memory"], [72, 3, 1, "", "specs"], [72, 1, 1, "", "state_dict"], [72, 3, 1, "", "state_spec"], [72, 1, 1, "", "step"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_keys"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_keys"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 3, 1, "", "input_spec"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 3, 1, "", "observation_spec"], [73, 3, 1, "", "output_spec"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "reset"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_keys"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 3, 1, "", "state_spec"], [73, 1, 1, "", "step"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "update_kwargs"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[74, 3, 1, "", "action_key"], [74, 3, 1, "", "action_keys"], [74, 3, 1, "", "action_spec"], [74, 1, 1, "", "add_module"], [74, 1, 1, "", "apply"], [74, 3, 1, "", "batch_locked"], [74, 1, 1, "", "bfloat16"], [74, 1, 1, "", "buffers"], [74, 1, 1, "", "children"], [74, 1, 1, "", "compile"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 3, 1, "", "done_key"], [74, 3, 1, "", "done_keys"], [74, 3, 1, "", "done_spec"], [74, 1, 1, "", "double"], [74, 1, 1, "", "eval"], [74, 1, 1, "", "extra_repr"], [74, 1, 1, "", "fake_tensordict"], [74, 1, 1, "", "float"], [74, 1, 1, "", "forward"], [74, 1, 1, "", "get_buffer"], [74, 1, 1, "", "get_extra_state"], [74, 1, 1, "", "get_parameter"], [74, 1, 1, "", "get_submodule"], [74, 1, 1, "", "half"], [74, 3, 1, "", "input_spec"], [74, 1, 1, "", "ipu"], [74, 1, 1, "", "load_state_dict"], [74, 1, 1, "", "modules"], [74, 1, 1, "", "named_buffers"], [74, 1, 1, "", "named_children"], [74, 1, 1, "", "named_modules"], [74, 1, 1, "", "named_parameters"], [74, 3, 1, "", "observation_spec"], [74, 3, 1, "", "output_spec"], [74, 1, 1, "", "parameters"], [74, 1, 1, "", "rand_action"], [74, 1, 1, "", "rand_step"], [74, 1, 1, "", "register_backward_hook"], [74, 1, 1, "", "register_buffer"], [74, 1, 1, "", "register_forward_hook"], [74, 1, 1, "", "register_forward_pre_hook"], [74, 1, 1, "", "register_full_backward_hook"], [74, 1, 1, "", "register_full_backward_pre_hook"], [74, 1, 1, "", "register_load_state_dict_post_hook"], [74, 1, 1, "", "register_module"], [74, 1, 1, "", "register_parameter"], [74, 1, 1, "", "register_state_dict_pre_hook"], [74, 1, 1, "", "requires_grad_"], [74, 1, 1, "", "reset"], [74, 3, 1, "", "reward_key"], [74, 3, 1, "", "reward_keys"], [74, 3, 1, "", "reward_spec"], [74, 1, 1, "", "rollout"], [74, 1, 1, "", "set_extra_state"], [74, 1, 1, "", "set_seed"], [74, 1, 1, "", "share_memory"], [74, 3, 1, "", "specs"], [74, 1, 1, "", "state_dict"], [74, 3, 1, "", "state_spec"], [74, 1, 1, "", "step"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_empty"], [74, 1, 1, "", "train"], [74, 1, 1, "", "type"], [74, 1, 1, "", "update_kwargs"], [74, 1, 1, "", "xpu"], [74, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[75, 2, 1, "", "BraxEnv"], [76, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[77, 2, 1, "", "DMControlEnv"], [78, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[79, 2, 1, "", "GymEnv"], [80, 2, 1, "", "GymWrapper"], [81, 2, 1, "", "MOGymEnv"], [82, 2, 1, "", "MOGymWrapper"], [83, 2, 1, "", "gym_backend"], [84, 2, 1, "", "set_gym_backend"]], "torchrl.envs.libs.habitat": [[85, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[86, 2, 1, "", "JumanjiEnv"], [87, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[88, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[89, 2, 1, "", "VmasEnv"], [90, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[91, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[92, 0, 1, "", "ActionMask"], [93, 0, 1, "", "BinarizeReward"], [94, 0, 1, "", "CatFrames"], [95, 0, 1, "", "CatTensors"], [96, 0, 1, "", "CenterCrop"], [97, 0, 1, "", "Compose"], [98, 0, 1, "", "DTypeCastTransform"], [99, 0, 1, "", "DeviceCastTransform"], [100, 0, 1, "", "DiscreteActionProjection"], [101, 0, 1, "", "DoubleToFloat"], [102, 0, 1, "", "ExcludeTransform"], [103, 0, 1, "", "FiniteTensorDictCheck"], [104, 0, 1, "", "FlattenObservation"], [105, 0, 1, "", "FrameSkipTransform"], [106, 0, 1, "", "GrayScale"], [107, 0, 1, "", "InitTracker"], [108, 0, 1, "", "KLRewardTransform"], [109, 0, 1, "", "NoopResetEnv"], [110, 0, 1, "", "ObservationNorm"], [111, 0, 1, "", "ObservationTransform"], [112, 0, 1, "", "PinMemoryTransform"], [113, 0, 1, "", "R3MTransform"], [114, 0, 1, "", "RandomCropTensorDict"], [115, 0, 1, "", "RenameTransform"], [116, 0, 1, "", "Resize"], [117, 0, 1, "", "Reward2GoTransform"], [118, 0, 1, "", "RewardClipping"], [119, 0, 1, "", "RewardScaling"], [120, 0, 1, "", "RewardSum"], [121, 0, 1, "", "SelectTransform"], [122, 0, 1, "", "SqueezeTransform"], [123, 0, 1, "", "StepCounter"], [124, 0, 1, "", "TargetReturn"], [125, 0, 1, "", "TensorDictPrimer"], [126, 0, 1, "", "TimeMaxPool"], [127, 0, 1, "", "ToTensorImage"], [128, 0, 1, "", "Transform"], [129, 0, 1, "", "TransformedEnv"], [130, 0, 1, "", "UnsqueezeTransform"], [131, 0, 1, "", "VC1Transform"], [132, 0, 1, "", "VIPRewardTransform"], [133, 0, 1, "", "VIPTransform"], [134, 0, 1, "", "VecNorm"], [135, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[93, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[94, 1, 1, "", "forward"], [94, 1, 1, "", "reset"], [94, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[95, 1, 1, "", "forward"], [95, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[96, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[97, 1, 1, "", "forward"], [97, 1, 1, "", "reset"], [97, 1, 1, "", "to"], [97, 1, 1, "", "transform_env_device"], [97, 1, 1, "", "transform_input_spec"], [97, 1, 1, "", "transform_observation_spec"], [97, 1, 1, "", "transform_output_spec"], [97, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "transform_input_spec"], [98, 1, 1, "", "transform_observation_spec"], [98, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "transform_done_spec"], [99, 1, 1, "", "transform_env_device"], [99, 1, 1, "", "transform_input_spec"], [99, 1, 1, "", "transform_observation_spec"], [99, 1, 1, "", "transform_output_spec"], [99, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[100, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "reset"], [102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[103, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[105, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[106, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "reset"], [107, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[109, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[110, 1, 1, "", "init_stats"], [110, 1, 1, "", "transform_input_spec"], [110, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[113, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[114, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[115, 1, 1, "", "forward"], [115, 1, 1, "", "transform_input_spec"], [115, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[116, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[117, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[118, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[119, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "reset"], [120, 1, 1, "", "transform_input_spec"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "reset"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "reset"], [123, 1, 1, "", "transform_input_spec"], [123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "reset"], [124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "reset"], [125, 1, 1, "", "to"], [125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "reset"], [126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[128, 3, 1, "", "container"], [128, 1, 1, "", "forward"], [128, 3, 1, "", "parent"], [128, 1, 1, "", "reset"], [128, 1, 1, "", "to"], [128, 1, 1, "", "transform_done_spec"], [128, 1, 1, "", "transform_env_device"], [128, 1, 1, "", "transform_input_spec"], [128, 1, 1, "", "transform_observation_spec"], [128, 1, 1, "", "transform_output_spec"], [128, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[129, 3, 1, "", "batch_locked"], [129, 1, 1, "", "eval"], [129, 3, 1, "", "input_spec"], [129, 1, 1, "", "load_state_dict"], [129, 3, 1, "", "output_spec"], [129, 1, 1, "", "set_missing_tolerance"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "state_dict"], [129, 1, 1, "", "to"], [129, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[130, 1, 1, "", "transform_input_spec"], [130, 1, 1, "", "transform_observation_spec"], [130, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "make_noload_model"], [131, 1, 1, "", "to"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[133, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[134, 1, 1, "", "build_td_for_shared_vecnorm"], [134, 1, 1, "", "forward"], [134, 1, 1, "", "get_extra_state"], [134, 1, 1, "", "set_extra_state"], [134, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[136, 2, 1, "", "check_env_specs"], [137, 2, 1, "", "exploration_mode"], [138, 2, 1, "", "exploration_type"], [139, 2, 1, "", "get_available_libraries"], [140, 2, 1, "", "make_composite_from_td"], [141, 2, 1, "", "set_exploration_mode"], [142, 2, 1, "", "set_exploration_type"], [143, 2, 1, "", "step_mdp"]], "torchrl.modules": [[144, 0, 1, "", "CEMPlanner"], [145, 0, 1, "", "ConvNet"], [146, 0, 1, "", "DTActor"], [147, 0, 1, "", "DdpgCnnActor"], [148, 0, 1, "", "DdpgCnnQNet"], [149, 0, 1, "", "DdpgMlpActor"], [150, 0, 1, "", "DdpgMlpQNet"], [151, 0, 1, "", "DecisionTransformer"], [152, 0, 1, "", "Delta"], [153, 0, 1, "", "DistributionalDQNnet"], [154, 0, 1, "", "DistributionalQValueHook"], [155, 0, 1, "", "DreamerActor"], [156, 0, 1, "", "DuelingCnnDQNet"], [157, 0, 1, "", "IndependentNormal"], [158, 0, 1, "", "LSTMModule"], [159, 0, 1, "", "LSTMNet"], [160, 0, 1, "", "MLP"], [161, 0, 1, "", "MPCPlannerBase"], [162, 0, 1, "", "MPPIPlanner"], [163, 0, 1, "", "MaskedCategorical"], [164, 0, 1, "", "MaskedOneHotCategorical"], [165, 0, 1, "", "MultiAgentMLP"], [166, 0, 1, "", "NoisyLazyLinear"], [167, 0, 1, "", "NoisyLinear"], [168, 0, 1, "", "NormalParamWrapper"], [169, 0, 1, "", "ObsDecoder"], [170, 0, 1, "", "ObsEncoder"], [171, 0, 1, "", "OneHotCategorical"], [172, 0, 1, "", "OnlineDTActor"], [173, 0, 1, "", "QMixer"], [174, 0, 1, "", "QValueHook"], [175, 0, 1, "", "RSSMPosterior"], [176, 0, 1, "", "RSSMPrior"], [177, 0, 1, "", "Squeeze2dLayer"], [178, 0, 1, "", "SqueezeLayer"], [179, 0, 1, "", "TanhDelta"], [180, 0, 1, "", "TanhNormal"], [181, 0, 1, "", "TruncatedNormal"], [182, 0, 1, "", "VDNMixer"], [183, 0, 1, "", "VmapModule"], [184, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[144, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[145, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[146, 1, 1, "", "default_config"], [146, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[147, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[148, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[149, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[150, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[151, 0, 1, "", "DTConfig"], [151, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[152, 1, 1, "", "log_prob"], [152, 3, 1, "", "mean"], [152, 3, 1, "", "mode"], [152, 1, 1, "", "rsample"], [152, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[153, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[155, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[156, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[157, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "set_recurrent_mode"], [158, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[159, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[160, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[162, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[163, 1, 1, "", "log_prob"], [163, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[164, 1, 1, "", "log_prob"], [164, 1, 1, "", "rsample"], [164, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[165, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[166, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[168, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[169, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[170, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[171, 1, 1, "", "log_prob"], [171, 3, 1, "", "mode"], [171, 1, 1, "", "rsample"], [171, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[172, 1, 1, "", "default_config"], [172, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[173, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[175, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[176, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[178, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[179, 3, 1, "", "mean"], [179, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[180, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[181, 1, 1, "", "log_prob"], [181, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[182, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[183, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[185, 0, 1, "", "Actor"], [186, 0, 1, "", "ActorCriticOperator"], [187, 0, 1, "", "ActorCriticWrapper"], [188, 0, 1, "", "ActorValueOperator"], [189, 0, 1, "", "AdditiveGaussianWrapper"], [190, 0, 1, "", "DecisionTransformerInferenceWrapper"], [191, 0, 1, "", "DistributionalQValueActor"], [192, 0, 1, "", "DistributionalQValueModule"], [193, 0, 1, "", "EGreedyWrapper"], [194, 0, 1, "", "LMHeadActorValueOperator"], [195, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [196, 0, 1, "", "ProbabilisticActor"], [197, 0, 1, "", "QValueActor"], [198, 0, 1, "", "QValueModule"], [199, 0, 1, "", "SafeModule"], [200, 0, 1, "", "SafeProbabilisticModule"], [201, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [202, 0, 1, "", "SafeSequential"], [203, 0, 1, "", "TanhModule"], [204, 0, 1, "", "ValueOperator"], [205, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[186, 1, 1, "", "get_critic_operator"], [186, 1, 1, "", "get_policy_head"], [186, 1, 1, "", "get_value_head"], [186, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[187, 1, 1, "", "get_policy_head"], [187, 1, 1, "", "get_policy_operator"], [187, 1, 1, "", "get_value_head"], [187, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[188, 1, 1, "", "get_policy_head"], [188, 1, 1, "", "get_policy_operator"], [188, 1, 1, "", "get_value_head"], [188, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "mask_context"], [190, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[192, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[193, 1, 1, "", "forward"], [193, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[198, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[199, 1, 1, "", "random"], [199, 1, 1, "", "random_sample"], [199, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[200, 1, 1, "", "random"], [200, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[203, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[205, 1, 1, "", "get_reward_operator"], [205, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[206, 0, 1, "", "biased_softplus"], [207, 0, 1, "", "inv_softplus"], [208, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[206, 1, 1, "", "forward"]], "torchrl.objectives": [[209, 0, 1, "", "A2CLoss"], [210, 0, 1, "", "CQLLoss"], [211, 0, 1, "", "ClipPPOLoss"], [212, 0, 1, "", "DDPGLoss"], [213, 0, 1, "", "DQNLoss"], [214, 0, 1, "", "DTLoss"], [215, 0, 1, "", "DiscreteSACLoss"], [216, 0, 1, "", "DistributionalDQNLoss"], [217, 0, 1, "", "DreamerActorLoss"], [218, 0, 1, "", "DreamerModelLoss"], [219, 0, 1, "", "DreamerValueLoss"], [220, 0, 1, "", "HardUpdate"], [221, 0, 1, "", "IQLLoss"], [222, 0, 1, "", "KLPENPPOLoss"], [223, 0, 1, "", "LossModule"], [224, 0, 1, "", "OnlineDTLoss"], [225, 0, 1, "", "PPOLoss"], [226, 0, 1, "", "REDQLoss"], [227, 0, 1, "", "ReinforceLoss"], [228, 0, 1, "", "SACLoss"], [229, 0, 1, "", "SoftUpdate"], [230, 0, 1, "", "TD3Loss"], [231, 0, 1, "", "ValueEstimators"], [232, 0, 1, "", "default_value_kwargs"], [233, 0, 1, "", "distance_loss"], [234, 0, 1, "", "hold_out_net"], [235, 0, 1, "", "hold_out_params"], [237, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[211, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[214, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[218, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[219, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "loss_value_diff"], [221, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[222, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[223, 1, 1, "", "convert_to_functional"], [223, 1, 1, "", "forward"], [223, 1, 1, "", "make_value_estimator"], [223, 1, 1, "", "named_parameters"], [223, 1, 1, "", "parameters"], [223, 1, 1, "", "set_keys"], [223, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[224, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[236, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[238, 0, 1, "", "GAE"], [239, 0, 1, "", "TD0Estimator"], [240, 0, 1, "", "TD1Estimator"], [241, 0, 1, "", "TDLambdaEstimator"], [242, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[242, 1, 1, "", "forward"], [242, 1, 1, "", "set_keys"], [242, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[243, 0, 1, "", "generalized_advantage_estimate"], [244, 0, 1, "", "reward2go"], [245, 0, 1, "", "td0_advantage_estimate"], [246, 0, 1, "", "td0_return_estimate"], [247, 0, 1, "", "td1_advantage_estimate"], [248, 0, 1, "", "td1_return_estimate"], [249, 0, 1, "", "td_lambda_advantage_estimate"], [250, 0, 1, "", "td_lambda_return_estimate"], [251, 0, 1, "", "vec_generalized_advantage_estimate"], [252, 0, 1, "", "vec_td1_advantage_estimate"], [253, 0, 1, "", "vec_td1_return_estimate"], [254, 0, 1, "", "vec_td_lambda_advantage_estimate"], [255, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[256, 2, 1, "", "TensorDictRecorder"], [257, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[258, 2, 1, "", "Logger"], [260, 2, 1, "", "generate_exp_name"], [261, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[259, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[262, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[263, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[264, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[265, 0, 1, "", "BatchSubSampler"], [266, 0, 1, "", "ClearCudaCache"], [267, 0, 1, "", "CountFramesLog"], [268, 0, 1, "", "LogReward"], [269, 0, 1, "", "OptimizerHook"], [270, 0, 1, "", "Recorder"], [271, 0, 1, "", "ReplayBufferTrainer"], [272, 0, 1, "", "RewardNormalizer"], [273, 0, 1, "", "SelectKeys"], [274, 0, 1, "", "Trainer"], [275, 0, 1, "", "TrainerHookBase"], [276, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[265, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[266, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[267, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[268, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[269, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[270, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[271, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[272, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[273, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[275, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[276, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[277, 2, 1, "", "correct_for_frame_skip"], [278, 2, 1, "", "get_stats_random_rollout"], [279, 2, 1, "", "make_collector_offpolicy"], [280, 2, 1, "", "make_collector_onpolicy"], [281, 2, 1, "", "make_dqn_loss"], [282, 2, 1, "", "make_redq_loss"], [283, 2, 1, "", "make_redq_model"], [284, 2, 1, "", "make_replay_buffer"], [285, 2, 1, "", "make_target_updater"], [286, 2, 1, "", "make_trainer"], [287, 2, 1, "", "parallel_env_constructor"], [288, 2, 1, "", "sync_async_collector"], [289, 2, 1, "", "sync_sync_collector"], [290, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 294, 295, 296, 297, 298, 299, 300, 304, 305, 309, 310], "tutori": [0, 300, 304], "basic": [0, 307], "intermedi": [0, 8], "advanc": 0, "refer": [0, 292], "knowledg": [0, 293], "base": [0, 7, 293], "indic": 0, "tabl": 0, "collector": [1, 298, 299, 300, 301, 304, 309], "packag": [1, 2, 3, 294, 295, 296, 297], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 298, 299, 300, 304, 309], "distribut": [1, 294], "helper": [1, 3], "function": [1, 4, 295, 299, 300, 304, 309], "replai": [2, 298, 299, 300, 301, 304, 307, 309], "buffer": [2, 298, 299, 300, 301, 304, 307, 309], "compos": [2, 97], "store": [2, 299], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 295, 300, 304], "learn": [2, 4, 300, 304], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 294, 295, 296], "env": [3, 305, 309, 310], "vector": [3, 309], "multi": [3, 294, 295, 303, 304], "agent": [3, 4, 294, 295, 304], "environ": [3, 4, 6, 7, 298, 299, 300, 301, 303, 304, 305, 309, 310], "transform": [3, 128, 298, 300, 304, 305, 307, 309, 310], "clone": [3, 7], "record": [3, 270, 296, 298], "domain": [3, 294], "specif": [3, 294, 303], "librari": [3, 309], "thing": [4, 298, 305], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 309], "gener": [4, 294], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 298, 305], "algorithm": [4, 294], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 298, 299], "return": [4, 295], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 298, 300, 301, 303, 304, 305], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 309], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "action": [4, 301, 305], "magnitud": 4, "task": [4, 303], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 298, 299, 300], "standard": 4, "explor": [4, 294, 298, 299], "valu": [4, 294, 295, 298, 300, 301], "loss": [4, 298, 299, 300, 301, 304], "earli": 4, "train": [4, 8, 295, 298, 300, 301, 304, 305], "roughli": 4, "uniformli": 4, "random": [4, 304], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 299], "increas": 4, "an": [4, 300, 301, 305], "dynam": [4, 307], "can": 4, "low": 4, "forward": [4, 298], "model": [4, 294, 298, 299, 301, 306, 309], "also": 4, "us": [4, 6, 9, 301, 306, 307, 309], "offlin": 4, "observ": [4, 298], "space": 4, "effect": [4, 305], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 310], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 309], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 304, 310], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 298], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 305], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 298, 307], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "envbas": [67, 305], "envcreat": 68, "envmetadata": 69, "gymlikeenv": 70, "modelbasedenvbas": 71, "multithreadedenv": 72, "parallelenv": 73, "serialenv": 74, "braxenv": 75, "braxwrapp": 76, "dmcontrolenv": 77, "dmcontrolwrapp": 78, "gymenv": 79, "gymwrapp": 80, "mogymenv": 81, "mogymwrapp": 82, "gym_backend": 83, "set_gym_backend": 84, "habitatenv": 85, "jumanjienv": 86, "jumanjiwrapp": 87, "openmlenv": 88, "vmasenv": 89, "vmaswrapp": 90, "dreamerenv": 91, "actionmask": 92, "binarizereward": 93, "catfram": [94, 307], "cattensor": 95, "centercrop": 96, "dtypecasttransform": 98, "devicecasttransform": 99, "discreteactionproject": 100, "doubletofloat": 101, "excludetransform": 102, "finitetensordictcheck": 103, "flattenobserv": 104, "frameskiptransform": 105, "grayscal": 106, "inittrack": 107, "klrewardtransform": 108, "noopresetenv": 109, "observationnorm": 110, "observationtransform": 111, "pinmemorytransform": 112, "r3mtransform": 113, "randomcroptensordict": 114, "renametransform": 115, "resiz": 116, "reward2gotransform": 117, "rewardclip": 118, "rewardsc": 119, "rewardsum": 120, "selecttransform": 121, "squeezetransform": 122, "stepcount": 123, "targetreturn": 124, "tensordictprim": 125, "timemaxpool": 126, "totensorimag": 127, "transformedenv": 129, "unsqueezetransform": 130, "vc1transform": 131, "viprewardtransform": 132, "viptransform": 133, "vecnorm": [134, 310], "gsdenois": 135, "check_env_spec": 136, "exploration_mod": 137, "exploration_typ": 138, "get_available_librari": 139, "make_composite_from_td": 140, "set_exploration_mod": 141, "set_exploration_typ": 142, "step_mdp": 143, "cemplann": 144, "convnet": 145, "dtactor": 146, "ddpgcnnactor": 147, "ddpgcnnqnet": 148, "ddpgmlpactor": 149, "ddpgmlpqnet": 150, "decisiontransform": 151, "delta": 152, "distributionaldqnnet": 153, "distributionalqvaluehook": 154, "dreameractor": 155, "duelingcnndqnet": 156, "independentnorm": 157, "lstmmodul": 158, "lstmnet": 159, "mlp": [160, 301], "mpcplannerbas": 161, "mppiplann": 162, "maskedcategor": 163, "maskedonehotcategor": 164, "multiagentmlp": 165, "noisylazylinear": 166, "noisylinear": 167, "normalparamwrapp": 168, "obsdecod": 169, "obsencod": 170, "onehotcategor": 171, "onlinedtactor": 172, "qmixer": [173, 295], "qvaluehook": 174, "rssmposterior": 175, "rssmprior": 176, "squeeze2dlay": 177, "squeezelay": 178, "tanhdelta": 179, "tanhnorm": 180, "truncatednorm": 181, "vdnmixer": 182, "vmapmodul": 183, "reset_nois": 184, "actor": [185, 294, 298], "actorcriticoper": 186, "actorcriticwrapp": 187, "actorvalueoper": 188, "additivegaussianwrapp": 189, "decisiontransformerinferencewrapp": 190, "distributionalqvalueactor": 191, "distributionalqvaluemodul": 192, "egreedywrapp": 193, "lmheadactorvalueoper": 194, "ornsteinuhlenbeckprocesswrapp": 195, "probabilisticactor": 196, "qvalueactor": 197, "qvaluemodul": 198, "safemodul": [199, 294], "safeprobabilisticmodul": 200, "safeprobabilistictensordictsequenti": 201, "safesequenti": 202, "tanhmodul": 203, "valueoper": 204, "worldmodelwrapp": 205, "biased_softplu": 206, "inv_softplu": 207, "map": 208, "a2closs": 209, "cqlloss": 210, "clipppoloss": 211, "ddpgloss": 212, "dqnloss": 213, "dtloss": 214, "discretesacloss": 215, "distributionaldqnloss": 216, "dreameractorloss": 217, "dreamermodelloss": 218, "dreamervalueloss": 219, "hardupd": 220, "iqlloss": 221, "klpenppoloss": 222, "lossmodul": [223, 298], "onlinedtloss": 224, "ppoloss": 225, "redqloss": 226, "reinforceloss": 227, "sacloss": 228, "softupd": 229, "td3loss": 230, "valueestim": 231, "default_value_kwarg": 232, "distance_loss": 233, "hold_out_net": 234, "hold_out_param": 235, "qmixerloss": 236, "next_state_valu": 237, "gae": 238, "td0estim": 239, "td1estim": 240, "tdlambdaestim": 241, "valueestimatorbas": 242, "generalized_advantage_estim": 243, "reward2go": 244, "td0_advantage_estim": 245, "td0_return_estim": 246, "td1_advantage_estim": 247, "td1_return_estim": 248, "td_lambda_advantage_estim": 249, "td_lambda_return_estim": 250, "vec_generalized_advantage_estim": 251, "vec_td1_advantage_estim": 252, "vec_td1_return_estim": 253, "vec_td_lambda_advantage_estim": 254, "vec_td_lambda_return_estim": 255, "tensordictrecord": 256, "videorecord": 257, "logger": [258, 296], "csvlogger": 259, "generate_exp_nam": 260, "get_logg": 261, "mlflowlogg": 262, "tensorboardlogg": 263, "wandblogg": 264, "batchsubsampl": 265, "clearcudacach": 266, "countframeslog": 267, "logreward": 268, "optimizerhook": 269, "replaybuffertrain": 271, "rewardnorm": 272, "selectkei": 273, "trainer": [274, 296, 299], "trainerhookbas": 275, "updateweight": 276, "correct_for_frame_skip": 277, "get_stats_random_rollout": 278, "make_collector_offpolici": 279, "make_collector_onpolici": 280, "make_dqn_loss": 281, "make_redq_loss": 282, "make_redq_model": 283, "make_replay_buff": 284, "make_target_updat": 285, "make_train": 286, "parallel_env_constructor": 287, "sync_async_collector": 288, "sync_sync_collector": 289, "transformed_env_constructor": 290, "readm": [291, 302], "tuto": [291, 302], "api": 292, "contribut": [293, 309], "content": 293, "modul": [294, 298, 301, 309], "tensordict": [294, 307, 309], "wrapper": 294, "probabilist": 294, "q": [294, 299, 301], "oper": 294, "join": 294, "hook": [294, 296, 299], "regular": 294, "planner": 294, "object": [295, 298, 309], "dqn": [295, 299, 301], "ddpg": [295, 298], "sac": 295, "redq": 295, "iql": 295, "cql": 295, "dt": 295, "td3": 295, "ppo": [295, 300, 304], "a2c": 295, "dreamer": 295, "checkpoint": 296, "builder": 296, "_util": 297, "code": [298, 305], "setup": [298, 301], "The": 298, "__init__": 298, "method": 298, "estim": 298, "put": 298, "togeth": [298, 305], "call": 298, "parallel": [298, 303, 310], "execut": [298, 303, 305], "stat": 298, "build": [298, 299, 307], "evalu": 298, "batch": [298, 305, 307], "size": [298, 307], "construct": 298, "target": [298, 299], "network": [298, 299, 300, 301, 304], "updat": 298, "time": [298, 308], "experi": [298, 305], "result": [298, 300, 304], "conclus": [298, 299, 300, 301, 304, 305, 307], "A": [299, 307], "exampl": [299, 307], "comput": [299, 305, 308], "deep": 299, "collect": [299, 300], "paramet": [299, 300], "hyperparamet": [299, 300, 304], "regist": 299, "possibl": 299, "improv": 299, "defin": [300, 304], "loop": [300, 301, 304, 305], "next": [300, 304], "step": [300, 304, 310], "recurr": 301, "convolut": 301, "lstm": 301, "select": 301, "divers": 303, "rollout": [303, 304, 305, 310], "critic": 304, "pendulum": 305, "write": 305, "_step": 305, "reset": [305, 310], "simul": 305, "_reset": 305, "metadata": 305, "_spec": 305, "spec": [305, 310], "shape": 305, "seed": [305, 310], "wrap": 305, "class": [305, 309], "test": 305, "our": 305, "custom": [305, 307], "simpl": 305, "pretrain": 306, "vanilla": 307, "integr": 307, "tensorclass": 307, "sampl": 307, "iter": 307, "over": 307, "fix": 307, "priorit": 307, "save": 307, "raw": 307, "imag": 307, "more": 307, "complex": 307, "introduct": 309, "config": 309, "tensordictmodul": 309, "sequenc": 309, "program": 309, "ensembl": 309, "meta": 309, "special": 309, "state": 309, "frame_skip": 310, "deepmind": 310, "control": 310, "devic": 310, "run": 310, "close": 310, "access": 310, "attribut": 310, "kwarg": 310}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})