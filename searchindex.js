Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRUModule", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 69, 71, 72, 75, 83, 84, 86, 87, 88, 89, 93, 96, 100, 102, 104, 107, 109, 110, 113, 119, 120, 124, 125, 126, 128, 136, 137, 138, 139, 140, 142, 145, 147, 157, 159, 160, 161, 162, 169, 171, 172, 173, 174, 178, 179, 180, 184, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 219, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 271, 274, 283, 284, 288, 289, 292, 301, 302, 303, 304, 307, 308, 309, 312, 313, 317, 318, 320, 321, 323, 324], "open": [0, 5, 7, 11, 313, 318, 323], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324], "reinforc": [0, 3, 9, 102, 159, 160, 161, 162, 166, 206, 209, 223, 224, 228, 230, 234, 235, 241, 242, 243, 306, 313, 316, 319, 322, 323], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 102, 159, 160, 161, 162, 166, 175, 181, 206, 209, 223, 224, 228, 230, 234, 235, 240, 241, 242, 243, 306, 308, 309, 312, 313, 315, 316, 317, 319, 321, 322, 323, 324], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 83, 135, 181, 199, 210, 218, 223, 237, 239, 279, 307, 308, 309, 310, 312, 313, 314, 318, 320, 321, 324], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 79, 84, 150, 306, 307, 308, 311, 312, 313, 314, 318, 319, 324], "pytorch": [0, 1, 2, 3, 138, 180, 181, 288, 307, 310, 312, 314, 315, 318, 319, 323, 324], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 71, 75, 77, 83, 84, 87, 88, 89, 93, 111, 118, 120, 125, 135, 140, 147, 159, 161, 167, 178, 179, 187, 189, 190, 196, 197, 206, 207, 209, 212, 214, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 250, 251, 252, 284, 297, 307, 308, 309, 312, 313, 315, 318, 319, 320, 321, 323, 324], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 71, 75, 83, 87, 88, 89, 93, 103, 104, 105, 107, 110, 114, 119, 120, 122, 124, 125, 128, 131, 132, 136, 140, 142, 144, 145, 155, 157, 163, 166, 169, 171, 172, 173, 174, 176, 177, 178, 179, 197, 199, 203, 206, 207, 209, 210, 211, 212, 217, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 275, 279, 285, 292, 297, 300, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "python": [0, 3, 5, 6, 7, 10, 21, 99, 176, 177, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 75, 102, 103, 114, 120, 124, 125, 138, 140, 142, 169, 171, 173, 178, 179, 180, 184, 199, 204, 205, 206, 210, 211, 213, 214, 225, 232, 236, 237, 239, 270, 287, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "low": [0, 25, 71, 75, 87, 93, 105, 109, 151, 206, 210, 217, 312, 313, 314, 318, 319, 323, 324], "high": [0, 9, 25, 41, 71, 75, 87, 93, 105, 109, 119, 151, 206, 210, 217, 252, 257, 265, 312, 313, 314, 318, 319, 321, 323, 324], "level": [0, 3, 4, 22, 26, 28, 102, 134, 236, 312, 313, 323], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 71, 121, 174, 256, 280, 289, 310, 314, 319, 323], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 71, 72, 75, 82, 83, 86, 87, 88, 89, 90, 93, 102, 105, 106, 107, 109, 110, 111, 113, 114, 118, 119, 122, 124, 128, 131, 136, 137, 138, 139, 140, 141, 142, 144, 145, 151, 155, 156, 162, 164, 169, 171, 172, 174, 176, 177, 178, 181, 185, 187, 190, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 247, 250, 251, 252, 253, 254, 255, 256, 285, 300, 304, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 109, 197, 237, 308, 323], "effici": [0, 1, 2, 4, 8, 181, 308, 312, 313, 314, 315, 317, 318, 320, 321, 323], "modular": [0, 216, 321, 323], "document": [0, 5, 7, 18, 19, 21, 32, 71, 75, 87, 93, 140, 313, 323], "properli": [0, 71, 75, 87, 93, 314, 318, 319, 323], "test": [0, 3, 5, 142, 147, 169, 171, 172, 284, 300, 314, 315, 323], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 79, 87, 88, 89, 93, 102, 106, 107, 110, 111, 112, 120, 122, 124, 128, 130, 131, 132, 134, 135, 136, 139, 140, 142, 144, 154, 155, 156, 159, 160, 161, 162, 163, 166, 169, 171, 172, 174, 175, 176, 177, 178, 181, 182, 188, 189, 190, 199, 200, 204, 205, 206, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 258, 273, 276, 277, 278, 279, 283, 300, 302, 303, 308, 309, 310, 313, 314, 315, 318, 319, 320, 321, 323, 324], "code": [0, 3, 5, 7, 8, 124, 142, 169, 171, 216, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324], "aim": [0, 3, 7, 28, 29, 124, 142, 144, 173, 291, 307, 308, 309, 312, 313, 323], "support": [0, 1, 3, 18, 20, 26, 53, 54, 55, 56, 63, 65, 84, 86, 88, 102, 111, 120, 137, 139, 150, 166, 197, 205, 206, 213, 216, 230, 252, 253, 254, 255, 276, 308, 310, 313, 314, 315, 318, 319, 321, 323], "research": [0, 7, 9, 323], "most": [0, 3, 7, 8, 32, 109, 312, 313, 314, 319, 320, 323, 324], "written": [0, 3, 34, 36, 39, 45, 52, 55, 71, 75, 87, 93, 102, 111, 118, 131, 134, 137, 154, 155, 199, 209, 210, 213, 214, 218, 223, 225, 236, 239, 241, 251, 270, 271, 308, 309, 310, 312, 315, 317, 319, 323], "highli": [0, 2, 323, 324], "wai": [0, 3, 4, 79, 124, 126, 144, 239, 252, 253, 254, 255, 308, 312, 313, 314, 317, 318, 319, 320, 321, 323, 324], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 71, 72, 75, 79, 82, 87, 88, 89, 91, 92, 93, 99, 100, 102, 105, 106, 107, 109, 110, 111, 119, 120, 124, 125, 128, 131, 134, 135, 136, 139, 140, 142, 144, 145, 155, 156, 169, 170, 171, 174, 175, 178, 179, 181, 182, 195, 197, 199, 203, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 284, 297, 302, 303, 304, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "easili": [0, 3, 7, 297, 309, 312, 313, 314, 318, 323, 324], "swap": [0, 3, 314, 320, 323], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 166, 188, 205, 206, 212, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 283, 288, 312, 313, 314, 315, 317, 318, 319, 320, 323], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 71, 72, 75, 87, 88, 89, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 158, 159, 163, 166, 167, 186, 187, 188, 196, 204, 208, 217, 220, 222, 228, 238, 271, 285, 297, 304, 306, 313, 315, 316, 320, 322], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 82, 87, 88, 89, 93, 107, 110, 140, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 196, 197, 203, 204, 206, 207, 209, 212, 217, 220, 236, 242, 271, 312, 313, 315, 317, 318, 319, 320, 321, 323, 324], "write": [0, 3, 8, 23, 32, 37, 45, 75, 105, 122, 123, 131, 134, 155, 199, 213, 214, 216, 218, 224, 226, 227, 229, 235, 240, 242, 244, 251, 256, 271, 308, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 71, 75, 84, 87, 91, 92, 93, 131, 139, 145, 154, 155, 169, 171, 209, 213, 214, 219, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 312, 314, 315, 318, 319, 323, 324], "ones": [0, 15, 26, 32, 35, 41, 42, 71, 75, 87, 93, 103, 106, 107, 108, 110, 120, 124, 128, 135, 136, 139, 140, 142, 144, 176, 177, 197, 213, 223, 224, 226, 235, 239, 240, 242, 244, 258, 312, 314, 318, 319, 321, 323, 324], "littl": [0, 3, 43, 314, 315, 321, 323, 324], "effort": [0, 3, 319, 321, 323], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 71, 75, 77, 82, 83, 87, 88, 89, 93, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 120, 124, 125, 126, 128, 131, 132, 134, 136, 137, 139, 140, 142, 143, 144, 145, 147, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 250, 252, 253, 254, 255, 256, 270, 279, 281, 284, 285, 288, 290, 291, 292, 297, 300, 304, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "repo": [0, 6, 52, 102, 137, 142, 307, 318, 323], "attempt": [0, 203, 209, 227, 235, 250, 323], "align": [0, 323], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 71, 75, 87, 93, 103, 108, 140, 242, 292, 304, 318, 323, 324], "ecosystem": [0, 323], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 71, 72, 75, 79, 87, 93, 102, 134, 136, 140, 169, 171, 178, 203, 206, 209, 214, 236, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 86, 145, 306, 312, 313, 320, 321, 323, 324], "pillar": [0, 323], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 107, 108, 109, 110, 115, 119, 120, 124, 125, 131, 134, 135, 139, 140, 142, 145, 147, 156, 169, 171, 172, 174, 175, 203, 209, 231, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 281, 284, 291, 292, 293, 294, 297, 300, 301, 302, 303, 304, 306, 307, 308, 316, 320, 321, 322], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 71, 75, 83, 87, 93, 107, 124, 136, 142, 144, 146, 157, 158, 163, 169, 171, 173, 174, 175, 179, 186, 187, 196, 200, 201, 202, 208, 213, 219, 223, 224, 225, 227, 228, 231, 232, 233, 235, 236, 237, 239, 240, 242, 250, 288, 293, 294, 295, 296, 297, 306, 307, 310, 314, 316, 318, 319, 321, 322, 324], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 83, 86, 87, 88, 89, 93, 100, 102, 107, 108, 110, 112, 118, 120, 128, 134, 147, 151, 155, 156, 166, 169, 171, 172, 175, 178, 179, 188, 197, 199, 205, 207, 209, 210, 211, 213, 216, 217, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 279, 285, 288, 290, 293, 300, 302, 303, 304, 306, 308, 309, 310, 315, 319, 320, 321, 324], "util": [0, 3, 17, 23, 32, 40, 71, 75, 87, 88, 89, 93, 96, 124, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 163, 220, 221, 222, 237, 300, 306, 311, 312, 314, 318, 319, 323, 324], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 71, 72, 75, 87, 93, 103, 106, 114, 120, 124, 131, 136, 139, 140, 142, 144, 147, 169, 170, 171, 175, 179, 182, 188, 194, 195, 204, 206, 210, 212, 213, 214, 242, 251, 252, 253, 254, 255, 279, 291, 303, 308, 312, 313, 314, 318, 319, 320, 323, 324], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 71, 72, 75, 87, 93, 103, 106, 114, 120, 124, 131, 136, 139, 140, 142, 144, 147, 169, 170, 171, 175, 179, 194, 195, 204, 210, 213, 214, 242, 251, 261, 262, 263, 264, 266, 267, 268, 269, 303, 308, 312, 313, 314, 318, 319, 320, 323, 324], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 102, 128, 134, 209, 285, 288, 290, 293, 294, 300, 302, 303, 306, 310, 321, 324], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 71, 75, 83, 87, 93, 106, 107, 110, 124, 136, 139, 140, 142, 144, 145, 154, 155, 156, 157, 173, 175, 179, 199, 205, 206, 210, 212, 213, 218, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 258, 275, 279, 291, 297, 300, 301, 302, 303, 304, 308, 309, 310, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 71, 75, 87, 93, 118, 140, 173, 179, 312, 313, 314, 321, 323, 324], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 71, 75, 87, 88, 89, 93, 102, 107, 110, 111, 118, 119, 120, 134, 135, 136, 139, 140, 145, 147, 155, 157, 172, 173, 178, 179, 197, 215, 216, 223, 225, 236, 239, 247, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 279, 288, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "few": [0, 2, 8, 279, 314, 315, 318, 321, 323, 324], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 107, 110, 218, 239, 308, 312, 314, 315, 318, 319, 323, 324], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 157, 213, 284, 288, 308, 312, 314, 315, 318, 319, 321, 323, 324], "standard": [0, 3, 120, 130, 145, 156, 167, 175, 180, 181, 203, 204, 244, 252, 253, 254, 255, 312, 313, 318, 321, 323], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 138, 288, 319, 321, 323, 324], "common": [0, 3, 4, 21, 75, 87, 93, 100, 200, 201, 202, 208, 223, 224, 225, 229, 235, 236, 239, 240, 241, 242, 244, 300, 307, 308, 310, 312, 314, 317, 318, 319, 320, 323, 324], "openai": [0, 7, 74, 76, 90, 314, 319, 323, 324], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 79, 87, 90, 93, 97, 99, 102, 105, 111, 117, 118, 120, 122, 126, 128, 131, 136, 139, 145, 297, 300, 307, 312, 313, 314, 315, 319, 320, 321, 323], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 71, 75, 79, 84, 87, 88, 89, 93, 102, 103, 105, 106, 107, 109, 110, 114, 120, 124, 125, 128, 134, 135, 136, 137, 139, 140, 142, 144, 145, 171, 172, 178, 179, 199, 204, 205, 210, 211, 213, 214, 215, 216, 223, 225, 226, 229, 235, 236, 237, 239, 240, 241, 242, 243, 244, 252, 253, 254, 255, 256, 292, 310, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 93, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 276, 279, 281, 282, 283, 284, 285, 286, 288, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 308, 315, 318, 319, 321, 323], "On": [0, 3, 7, 18, 19, 20, 21, 308, 313, 318], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 111, 122, 134, 135, 140, 157, 174, 242, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "come": [0, 1, 3, 8, 75, 82, 87, 93, 107, 110, 199, 200, 201, 202, 210, 218, 312, 313, 314, 315, 318, 321, 323, 324], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 71, 73, 75, 83, 87, 88, 89, 93, 99, 100, 102, 103, 106, 107, 110, 117, 118, 124, 128, 134, 135, 136, 137, 139, 140, 142, 144, 147, 152, 153, 155, 169, 171, 174, 178, 179, 203, 204, 213, 237, 239, 242, 256, 279, 284, 285, 294, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "re": [0, 3, 8, 32, 62, 71, 75, 87, 93, 171, 176, 177, 210, 214, 310, 312, 314, 315, 317, 319, 323, 324], "usabl": [0, 310, 315, 323], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 71, 72, 75, 87, 93, 99, 107, 110, 140, 145, 147, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 189, 190, 192, 195, 197, 200, 201, 202, 203, 204, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 297, 300, 306, 308, 312, 315, 317, 319, 321, 324], "cost": [0, 2, 27, 312, 313, 318, 319, 321], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 69, 71, 72, 75, 83, 86, 87, 88, 89, 93, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 162, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 182, 185, 186, 187, 189, 190, 193, 194, 195, 196, 199, 200, 201, 202, 204, 210, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 247, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 288, 291, 293, 297, 300, 301, 302, 303, 304, 306, 308, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 71, 72, 75, 79, 82, 84, 87, 88, 89, 93, 107, 110, 145, 178, 179, 206, 209, 212, 310, 312, 313, 315, 318, 319, 320, 321, 323, 324], "good": [0, 1, 4, 9, 312, 314, 315, 318, 323, 324], "runtim": [0, 3, 32, 71, 75, 87, 93, 319], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 71, 75, 87, 93, 96, 107, 110, 119, 140, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 232, 239, 242, 284, 288, 309, 312, 313, 314, 315, 317, 318, 319, 324], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 71, 75, 82, 87, 88, 89, 91, 92, 93, 134, 145, 200, 201, 202, 209, 229, 237, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 308, 309, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 71, 75, 87, 93, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 122, 123, 125, 126, 128, 131, 132, 134, 135, 136, 137, 139, 142, 143, 145, 155, 185, 199, 200, 201, 202, 205, 210, 213, 214, 216, 218, 219, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 271, 284, 288, 297, 308, 312, 313, 314, 315, 317, 318, 319, 320, 324], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 78, 79, 87, 88, 89, 93, 138, 142, 146, 166, 173, 180, 182, 199, 203, 205, 206, 213, 218, 223, 230, 237, 239, 252, 257, 265, 283, 307, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 324], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 309, 312, 313, 314, 318, 319, 323, 324], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 310, 312, 317, 320, 324], "beyond": 0, "api": [0, 3, 5, 88, 89, 90, 124, 144, 309, 310, 318, 319, 323, 324], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 71, 72, 75, 83, 87, 93, 96, 102, 103, 113, 118, 125, 147, 169, 171, 199, 205, 206, 210, 211, 212, 213, 214, 308, 309, 313, 314, 315, 317, 318, 319, 320, 321, 324], "paper": [0, 124, 142, 144, 187, 196, 234, 297, 312, 314, 318], "ppo": [0, 4, 8, 210, 214, 225, 236, 239, 306, 308, 312, 313, 316, 322], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 84, 87, 93, 102, 105, 106, 112, 117, 118, 120, 126, 128, 131, 134, 136, 137, 139, 140, 145, 169, 171, 300, 308, 313, 314, 316, 322, 323, 324], "your": [0, 2, 3, 7, 8, 10, 18, 32, 71, 75, 79, 82, 87, 88, 89, 93, 145, 304, 307, 308, 309, 313, 314, 315, 316, 318, 321, 322, 323], "introduct": [0, 309, 316, 318, 322, 324], "multi": [0, 7, 9, 28, 29, 32, 71, 75, 87, 91, 92, 93, 169, 171, 172, 173, 178, 179, 250, 252, 253, 254, 255, 306, 312, 313, 314, 315, 316, 319, 322, 323], "agent": [0, 9, 28, 29, 82, 88, 89, 91, 92, 94, 95, 96, 134, 135, 176, 177, 178, 179, 181, 187, 196, 250, 306, 316, 319, 322], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 169, 171, 174, 175, 213, 237, 270, 292, 293, 294, 297, 300, 302, 303, 304, 306, 308, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 124, 125, 126, 128, 131, 132, 134, 135, 136, 138, 139, 140, 142, 144, 145, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 166, 167, 169, 170, 171, 173, 174, 175, 177, 178, 179, 181, 182, 185, 186, 187, 188, 194, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 265, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 298, 300, 304, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 322, 324], "pretrain": [0, 316, 322], "recurr": [0, 169, 171, 190, 313, 316, 321, 322], "dqn": [0, 111, 166, 205, 206, 223, 224, 226, 227, 229, 230, 231, 234, 235, 237, 239, 240, 241, 242, 243, 244, 250, 295, 306, 308, 316, 322], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 71, 75, 87, 88, 89, 93, 107, 115, 124, 135, 140, 142, 144, 147, 159, 161, 169, 171, 203, 207, 209, 223, 224, 225, 226, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 252, 288, 290, 300, 306, 310, 313, 316, 320, 321, 322, 324], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 71, 75, 83, 87, 93, 109, 118, 135, 152, 153, 166, 169, 171, 178, 179, 181, 188, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 223, 224, 225, 226, 229, 235, 236, 238, 239, 240, 241, 242, 244, 284, 290, 293, 294, 300, 302, 303, 308, 309, 310, 313, 316, 320, 321, 322, 323, 324], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 102, 109, 125, 128, 136, 224, 226, 227, 229, 235, 240, 242, 244, 285, 288, 298, 300, 306, 310, 316, 319, 320, 322], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 71, 75, 83, 87, 93, 102, 106, 109, 124, 125, 128, 136, 139, 140, 142, 144, 213, 216, 224, 226, 227, 229, 235, 240, 242, 244, 285, 288, 298, 300, 306, 310, 316, 319, 320, 322, 324], "task": [0, 3, 9, 28, 29, 40, 45, 69, 75, 78, 87, 88, 89, 90, 93, 124, 134, 142, 144, 235, 312, 313, 314, 315, 316, 318, 319, 322, 323, 324], "specif": [0, 2, 5, 8, 41, 42, 75, 163, 204, 288, 306, 309, 310, 314, 315, 316, 318, 321, 322], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 71, 75, 87, 93, 107, 110, 111, 120, 124, 139, 140, 142, 145, 175, 187, 196, 199, 200, 210, 213, 214, 215, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 292, 293, 294, 299, 300, 304, 306, 308, 310, 313, 314, 315, 316, 318, 319, 321, 322, 324], "ddpg": [0, 159, 160, 161, 162, 226, 234, 243, 306, 308, 313, 316, 322], "loss": [0, 3, 8, 36, 111, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 283, 288, 295, 296, 297, 300, 309, 310, 316, 319, 321, 322, 323], "trainer": [0, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 312, 316, 322], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 77, 78, 87, 90, 93, 105, 109, 115, 118, 124, 125, 126, 136, 139, 140, 142, 143, 145, 146, 147, 154, 156, 157, 166, 169, 171, 173, 175, 176, 177, 179, 181, 182, 197, 203, 204, 205, 206, 207, 210, 211, 214, 216, 217, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 247, 250, 252, 253, 254, 255, 256, 258, 272, 273, 276, 281, 288, 290, 297, 300, 309, 312, 314, 316, 318, 319, 322, 324], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 80, 81, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 122, 124, 126, 128, 131, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 151, 154, 155, 156, 157, 158, 163, 166, 169, 171, 172, 173, 175, 178, 179, 182, 185, 186, 187, 188, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 245, 246, 250, 252, 253, 254, 255, 258, 279, 280, 281, 282, 283, 285, 286, 287, 290, 297, 300, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324], "packag": [0, 6, 7, 10, 99, 306, 307, 324], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 87, 93, 102, 103, 124, 128, 144, 157, 169, 171, 172, 173, 179, 212, 216, 225, 227, 229, 230, 236, 239, 240, 244, 252, 253, 254, 255, 261, 262, 263, 264, 266, 267, 268, 269, 297, 304, 306, 312, 313, 314, 315, 317, 318, 319, 320, 321], "node": [0, 2, 18, 19, 20, 21, 22, 297, 306], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 88, 89, 118, 120, 156, 164, 165, 166, 167, 170, 175, 176, 177, 182, 185, 186, 189, 190, 193, 194, 195, 203, 204, 205, 206, 210, 214, 215, 223, 224, 225, 229, 230, 235, 236, 239, 240, 241, 242, 244, 306, 310, 313, 314, 318, 319, 323, 324], "helper": [0, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 312, 313, 315, 319], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 71, 75, 87, 93, 102, 139, 140, 145, 208, 232, 242, 297, 306, 312, 313, 314, 315, 317, 318, 321, 323, 324], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 71, 75, 83, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 120, 122, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 190, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 224, 227, 229, 240, 242, 244, 250, 306, 319], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 91, 92, 93, 96, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 117, 118, 120, 122, 124, 125, 126, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 151, 154, 155, 156, 159, 160, 161, 162, 163, 166, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 182, 185, 186, 187, 188, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 239, 240, 241, 242, 244, 246, 250, 251, 252, 253, 254, 255, 258, 270, 271, 279, 285, 288, 291, 292, 297, 298, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "human": [0, 306, 319], "feedback": [0, 306, 323], "rlhf": [0, 40, 45, 54, 118, 306, 308], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 72, 75, 87, 93, 100, 107, 110, 119, 126, 139, 140, 145, 147, 156, 174, 175, 284, 292, 293, 294, 297, 300, 302, 303, 304, 306, 315], "gymlikeenv": [0, 306], "envmetadata": [0, 306], "vector": [0, 1, 8, 24, 27, 33, 82, 88, 89, 109, 159, 161, 173, 252, 255, 265, 266, 267, 268, 269, 306, 312, 313, 315, 317, 318, 319, 320, 324], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 88, 89, 100, 125, 166, 176, 177, 188, 204, 205, 206, 207, 211, 212, 285, 306, 313, 315, 324], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 68, 71, 75, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 95, 100, 105, 107, 109, 110, 111, 112, 115, 118, 119, 122, 126, 128, 132, 134, 140, 151, 154, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 186, 187, 188, 190, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 217, 218, 223, 224, 226, 227, 229, 235, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 297, 300, 304, 306, 308, 309, 310, 312, 313, 314, 317, 318, 320, 321, 323, 324], "record": [0, 32, 71, 75, 87, 93, 118, 239, 270, 271, 272, 273, 274, 275, 276, 277, 278, 300, 306, 313, 314], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 87, 93, 109, 136, 151, 199, 205, 206, 210, 211, 212, 213, 214, 215, 216, 306, 314, 315, 318, 319, 323, 324], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 71, 75, 82, 83, 87, 93, 99, 106, 109, 111, 118, 124, 125, 135, 136, 139, 140, 142, 144, 145, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 248, 250, 252, 253, 254, 255, 256, 288, 295, 296, 300, 306, 309, 310, 313, 314, 317, 318, 319, 320, 321], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 68, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 154, 155, 156, 165, 166, 169, 171, 172, 174, 175, 187, 188, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 270, 279, 283, 284, 285, 287, 288, 297, 306, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 324], "actor": [0, 3, 4, 15, 21, 118, 156, 158, 159, 161, 166, 167, 175, 186, 188, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 250, 297, 306, 309, 313, 314, 315, 318, 320, 323], "explor": [0, 1, 146, 181, 199, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 223, 284, 293, 294, 300, 306, 314, 315, 318, 319], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 93, 99, 101, 102, 103, 105, 107, 109, 110, 111, 119, 120, 124, 125, 128, 129, 131, 136, 137, 139, 140, 144, 145, 151, 155, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 281, 282, 283, 284, 285, 288, 297, 300, 306, 310, 313, 317, 318, 319, 321, 323, 324], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 106, 107, 108, 112, 118, 120, 126, 131, 132, 134, 139, 155, 164, 176, 177, 185, 199, 210, 214, 218, 219, 240, 246, 252, 257, 265, 274, 288, 306, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324], "hook": [0, 32, 71, 75, 87, 93, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 188, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 306], "planner": [0, 156, 175, 306], "sac": [0, 229, 240, 242, 306], "redq": [0, 240, 296, 297, 306], "iql": [0, 235, 306, 318], "cql": [0, 224, 306], "dt": [0, 209, 306, 319], "td3": [0, 244, 306], "a2c": [0, 223, 306], "dreamer": [0, 98, 167, 231, 232, 233, 306, 308], "checkpoint": [0, 306], "builder": [0, 306, 313, 324], "logger": [0, 271, 273, 274, 275, 276, 277, 278, 282, 288, 300, 304, 306, 313], "_util": [0, 3, 11, 306], "implement_for": [0, 3, 306], "contribut": 0, "thing": [0, 3, 7, 8, 307, 314, 315, 318, 321, 324], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 71, 75, 87, 93, 109, 145, 164, 178, 193, 307, 312, 319, 321], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 72, 75, 82, 84, 86, 87, 88, 89, 93, 100, 102, 106, 107, 109, 110, 118, 119, 120, 124, 125, 131, 135, 136, 139, 140, 142, 144, 145, 152, 153, 156, 166, 173, 174, 175, 176, 177, 180, 188, 194, 210, 213, 214, 216, 220, 225, 227, 230, 236, 239, 242, 245, 250, 251, 252, 253, 254, 255, 270, 271, 285, 304, 307, 308, 310, 312, 313, 314, 315, 318, 319, 320, 321, 324], "debug": [0, 6, 8, 40, 307, 324], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 71, 75, 79, 87, 93, 103, 118, 124, 142, 145, 157, 173, 206, 212, 217, 225, 236, 239, 288, 307, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "habitat": [0, 3, 77, 307, 320], "lab": [0, 3, 69, 70, 307], "mujoco": [0, 6, 8, 90, 307, 314, 315], "error": [0, 1, 3, 7, 10, 11, 29, 32, 71, 75, 87, 93, 96, 125, 147, 307, 312, 314, 318, 324], "solut": [0, 3, 6, 7, 9, 21, 307, 308, 310, 323], "resourc": [0, 1, 21, 307, 312, 314, 318], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 71, 75, 87, 88, 93, 202, 237, 242, 252, 255, 307, 308, 312, 314, 315, 318, 319, 320, 324], "issu": [0, 4, 5, 8, 55, 56, 65, 79, 102, 125, 137, 199, 205, 206, 210, 211, 212, 213, 214, 307, 323], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 71, 75, 87, 93, 102, 109, 154, 176, 177, 317, 318, 321, 323], "search": [0, 155, 313], "page": [0, 7], "somewhat": [1, 309, 324], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 71, 75, 87, 93, 108, 111, 140, 166, 188, 205, 206, 211, 212, 239, 285, 323, 324], "dataload": [1, 54, 62, 313, 314, 321], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 113, 128, 169, 171, 185, 203, 207, 209, 308, 313, 321, 323, 324], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 44, 45, 46, 47, 52, 54, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 115, 118, 119, 120, 122, 124, 125, 126, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 151, 154, 156, 157, 158, 159, 160, 162, 163, 166, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 220, 223, 224, 225, 226, 227, 229, 232, 235, 236, 238, 239, 240, 241, 242, 243, 244, 250, 251, 252, 253, 254, 255, 258, 260, 261, 262, 266, 267, 269, 279, 284, 285, 286, 297, 300, 304, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 113, 118, 124, 132, 139, 140, 144, 171, 172, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 285, 288, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 90, 102, 120, 124, 144, 147, 209, 224, 226, 229, 240, 242, 244, 279, 285, 288, 290, 291, 292, 300, 310, 312, 315, 318, 319, 320, 321, 323, 324], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 71, 75, 87, 93, 109, 120, 131, 137, 154, 197, 216, 230, 232, 237, 258, 291, 310, 312, 313, 314, 318, 319, 324], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 88, 89, 93, 101, 106, 114, 124, 136, 139, 140, 141, 142, 144, 154, 169, 171, 178, 213, 214, 223, 224, 226, 227, 229, 230, 231, 232, 235, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 308, 312, 315, 318, 319, 321, 324], "static": [1, 11, 40, 45, 145, 235, 319, 321], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 45, 54, 71, 72, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 106, 107, 108, 109, 110, 118, 120, 122, 124, 128, 131, 134, 136, 139, 140, 142, 144, 145, 151, 155, 157, 158, 159, 160, 161, 163, 166, 168, 169, 171, 172, 173, 176, 177, 178, 179, 182, 186, 197, 204, 205, 206, 207, 209, 213, 217, 218, 223, 224, 225, 226, 229, 235, 236, 239, 240, 241, 242, 244, 251, 252, 253, 254, 255, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 308, 309, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 71, 75, 77, 82, 87, 88, 89, 93, 111, 135, 138, 147, 179, 208, 240, 309, 312, 314, 315, 318, 319, 320, 321, 324], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 71, 75, 87, 93, 107, 109, 110, 119, 126, 140, 152, 153, 169, 171, 207, 209, 225, 236, 239, 242, 271, 285, 290, 302, 303, 304, 308, 312, 313, 314, 315, 318, 319, 321], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 71, 75, 79, 84, 87, 88, 89, 93, 102, 106, 124, 134, 136, 138, 139, 140, 142, 144, 145, 147, 157, 169, 171, 177, 178, 179, 181, 187, 196, 200, 202, 203, 206, 207, 210, 213, 214, 217, 224, 235, 237, 242, 252, 253, 254, 255, 256, 297, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 71, 75, 83, 87, 93, 102, 106, 114, 124, 131, 136, 139, 140, 141, 142, 144, 197, 213, 214, 215, 237, 242, 310, 314, 324], "two": [1, 3, 4, 8, 10, 32, 40, 62, 71, 75, 87, 93, 120, 124, 144, 162, 169, 171, 191, 214, 236, 247, 284, 288, 297, 309, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "main": [1, 2, 3, 5, 20, 22, 72, 214, 288, 308, 309, 312, 313, 317, 324], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 71, 75, 84, 87, 88, 93, 105, 106, 124, 132, 134, 136, 139, 140, 142, 144, 154, 157, 169, 171, 173, 176, 177, 178, 179, 180, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 250, 252, 253, 254, 255, 256, 260, 270, 281, 291, 297, 300, 301, 304, 312, 313, 314, 315, 318, 319, 321, 324], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 71, 75, 83, 87, 88, 89, 93, 96, 105, 107, 110, 118, 120, 122, 124, 131, 140, 142, 144, 145, 154, 165, 169, 171, 173, 176, 177, 183, 188, 206, 211, 212, 214, 216, 217, 218, 237, 242, 249, 252, 255, 270, 284, 285, 302, 303, 308, 312, 314, 317, 319, 320, 321, 323, 324], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 139, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 297, 301, 304, 308, 312, 313, 314, 318, 321], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 71, 75, 87, 93, 112, 120, 132, 157, 173, 178, 179, 192, 199, 205, 210, 211, 213, 215, 216, 218, 237, 249, 284, 287, 288, 297, 309, 310, 312, 314, 315, 318, 319], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 83, 84, 87, 93, 100, 136, 169, 171, 207, 215, 216, 292, 304, 308, 310, 313, 314, 315, 318, 321, 322, 324], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 68, 71, 72, 75, 81, 83, 87, 88, 89, 93, 100, 114, 117, 119, 120, 134, 135, 136, 137, 140, 154, 155, 156, 167, 169, 171, 172, 174, 175, 203, 207, 209, 210, 214, 223, 231, 239, 251, 252, 253, 254, 255, 258, 259, 260, 270, 279, 284, 288, 310, 312, 313, 315, 317, 319, 320, 321, 323], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 71, 75, 87, 93, 124, 139, 142, 145, 216, 312, 319, 323], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 125, 135, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 227, 237, 252, 253, 254, 255, 256, 270, 301, 312, 313, 315, 319, 321, 324], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 71, 75, 83, 84, 86, 87, 88, 89, 93, 102, 109, 115, 119, 120, 130, 134, 137, 145, 156, 157, 164, 165, 167, 168, 169, 170, 171, 173, 175, 178, 179, 182, 183, 184, 187, 189, 190, 193, 194, 195, 196, 199, 203, 204, 207, 209, 210, 213, 214, 218, 222, 224, 229, 231, 235, 236, 238, 240, 242, 244, 279, 281, 284, 288, 290, 291, 292, 302, 303, 304, 308, 312, 313, 314, 315, 318, 319, 320, 324], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 71, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 122, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 169, 171, 173, 180, 181, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 253, 254, 255, 285, 312, 314, 315, 318, 319, 321, 324], "deliv": [1, 16, 18, 19, 20, 312, 313, 323], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 71, 75, 82, 87, 88, 89, 93, 145, 169, 171, 215, 216, 270, 279, 308, 313, 317, 319, 323], "user": [1, 2, 3, 5, 8, 21, 32, 52, 71, 75, 87, 93, 135, 140, 163, 172, 239, 242, 301, 309, 310, 312, 313, 319, 323, 324], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 68, 71, 72, 75, 81, 82, 83, 84, 86, 87, 88, 89, 93, 100, 102, 106, 111, 112, 114, 117, 119, 124, 131, 132, 134, 135, 136, 137, 139, 142, 143, 145, 147, 155, 169, 171, 198, 209, 270, 297, 312, 313, 314, 315, 317, 318, 323], "whenev": [1, 3, 32, 35, 38, 41, 42, 99, 117, 140, 237, 252, 253, 254, 255, 290, 308], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 71, 75, 87, 93, 134, 203, 207, 209, 312, 314, 318, 323, 324], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 107, 108, 110, 111, 112, 119, 120, 122, 126, 128, 130, 132, 134, 136, 137, 139, 145, 154, 155, 156, 169, 171, 175, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 297, 309, 312, 314, 315, 317, 318, 319, 321, 323, 324], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 68, 71, 75, 81, 83, 87, 88, 89, 91, 92, 93, 100, 102, 103, 105, 106, 111, 112, 117, 120, 126, 132, 134, 135, 137, 139, 140, 143, 145, 154, 155, 156, 158, 163, 167, 169, 171, 172, 173, 175, 183, 186, 187, 189, 190, 196, 200, 213, 219, 223, 225, 236, 237, 239, 240, 241, 242, 250, 251, 252, 253, 254, 255, 256, 304, 308, 309, 312, 313, 314, 315, 318, 319, 324], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 71, 75, 79, 87, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 122, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 169, 171, 180, 203, 205, 207, 211, 232, 242, 313, 314, 315, 318, 319, 320, 321, 324], "predefin": [1, 313, 314, 321], "becaus": [1, 3, 4, 7, 40, 71, 75, 87, 93, 111, 118, 134, 139, 162, 172, 179, 199, 205, 206, 210, 211, 212, 213, 214, 312, 313, 315, 317, 318, 319, 321, 324], "potenti": [1, 319, 321], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 71, 75, 87, 93, 120, 140, 143, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 182, 183, 184, 185, 186, 189, 190, 192, 194, 195, 197, 200, 203, 204, 206, 207, 209, 210, 212, 214, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 292, 309, 312, 314, 315, 317, 318, 320, 321], "heavi": [1, 8, 321], "crucial": [1, 203, 207, 209, 235, 237, 312, 313, 314, 315, 318, 319, 324], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 118, 158, 163, 186, 237, 239, 297, 308, 312, 313, 314, 318, 319], "hyperparamet": [1, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 312, 319, 321], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 111, 136, 301, 304, 312, 321], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 69, 70, 71, 72, 75, 83, 84, 86, 87, 88, 89, 90, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 300, 301, 302, 303, 304, 308, 309, 312, 315, 318, 319, 320, 323], "take": [1, 3, 8, 23, 40, 71, 75, 87, 93, 105, 134, 135, 137, 139, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 208, 209, 212, 217, 220, 222, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 279, 290, 308, 310, 312, 313, 314, 318, 319, 321, 324], "consider": [1, 3, 8, 313, 318, 321], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 83, 87, 88, 89, 90, 93, 107, 110, 135, 140, 155, 157, 169, 171, 173, 218, 224, 225, 226, 227, 229, 230, 236, 237, 239, 240, 242, 244, 250, 252, 255, 312, 313, 314, 318, 319, 324], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 82, 83, 87, 88, 89, 90, 93, 102, 105, 106, 107, 108, 111, 112, 114, 118, 120, 125, 126, 128, 131, 132, 134, 135, 137, 139, 140, 145, 147, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 210, 212, 213, 214, 217, 220, 229, 234, 236, 237, 239, 240, 243, 251, 252, 253, 254, 255, 256, 271, 283, 284, 285, 288, 300, 302, 303, 304, 308, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "occur": [1, 8, 14, 28, 29, 103, 120, 125, 155, 199, 205, 206, 210, 211, 212, 213, 214, 232, 321, 324], "serial": [1, 3, 32, 71, 75, 87, 93, 145], "optim": [1, 2, 8, 32, 40, 71, 75, 87, 93, 140, 156, 175, 180, 181, 224, 237, 238, 239, 242, 283, 288, 300, 309, 310, 314, 315, 318, 319], "parallel": [1, 3, 8, 17, 88, 89, 147, 223, 301, 302, 303, 304, 313, 314, 318], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 102, 128, 300, 303, 306, 314, 315, 318, 321], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 75, 77, 82, 83, 87, 88, 89, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 302, 303, 304, 308, 309, 310, 312, 313, 314, 315, 318, 321, 324], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 36, 45, 54, 72, 84, 87, 93, 145, 302, 303, 304, 312, 314, 323, 324], "multisyncdatacollector": [1, 18, 19, 20, 21, 303, 306, 314, 323], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 82, 88, 89, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 308, 310, 314, 321, 323], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 79, 145, 178, 209, 290, 308, 312, 318, 319], "aggreg": [1, 155, 157, 159, 160, 216], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 71, 72, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 122, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 154, 155, 169, 171, 173, 178, 188, 204, 206, 207, 212, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 252, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 290, 308, 313, 315, 319, 320, 323, 324], "final": [1, 3, 4, 21, 34, 36, 39, 40, 169, 171, 178, 203, 207, 208, 209, 215, 252, 284, 308, 312, 313, 314, 318, 319, 324], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 302, 306, 312, 313, 314, 323], "sever": [1, 8, 30, 32, 45, 71, 75, 87, 93, 103, 105, 140, 239, 312, 314, 321, 324], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 71, 75, 83, 84, 86, 87, 93, 102, 114, 120, 122, 125, 128, 136, 140, 141, 145, 155, 164, 165, 169, 171, 172, 176, 177, 178, 179, 180, 185, 187, 193, 197, 209, 213, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 282, 285, 286, 287, 288, 290, 302, 303, 304, 310, 313, 314, 315, 317, 318, 320, 323, 324], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 125, 177, 185, 251, 292, 307, 312, 313, 314, 315, 318, 319, 321, 324], "continu": [1, 9, 25, 46, 71, 75, 87, 88, 89, 93, 151, 159, 160, 161, 162, 209, 216, 223, 224, 229, 235, 239, 240, 241, 242, 243, 244, 252, 257, 265, 308, 312, 314, 315, 318, 319, 321, 323, 324], "concomitantli": 1, "network": [1, 4, 8, 32, 71, 75, 82, 87, 88, 89, 93, 157, 159, 160, 161, 162, 165, 167, 168, 173, 178, 179, 181, 183, 184, 187, 189, 190, 191, 196, 200, 201, 202, 213, 217, 224, 225, 226, 227, 229, 230, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 256, 299, 300, 308, 309, 310, 317, 319, 324], "impli": [1, 324], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 71, 75, 87, 91, 92, 93, 106, 124, 136, 139, 140, 142, 144, 169, 171, 178, 181, 213, 223, 224, 225, 229, 232, 242, 290, 299, 308, 310, 312, 313, 314, 315, 317, 319, 321, 323], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 71, 75, 87, 93, 118, 120, 132, 140, 141, 145, 147, 173, 178, 309, 310, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324], "slightli": [1, 308, 309, 315, 319, 320, 321, 324], "lag": [1, 13, 14, 16, 17, 312, 313, 314], "therefor": [1, 3, 7, 71, 75, 87, 93, 128, 135, 239, 250, 324], "although": [1, 8, 71, 75, 87, 93, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 310, 312, 313, 321], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 71, 75, 82, 83, 86, 87, 88, 89, 93, 100, 102, 111, 118, 124, 128, 131, 134, 137, 139, 141, 144, 154, 155, 176, 177, 178, 203, 207, 209, 210, 213, 214, 222, 223, 224, 225, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 309, 310, 312, 313, 314, 317, 318, 319, 321, 324], "asynchron": [1, 9, 14, 21, 32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213, 223, 302, 313, 314], "off": [1, 2, 4, 170, 195, 205, 242, 284, 293, 308, 310, 312, 313, 314, 318, 320, 324], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 71, 75, 87, 88, 89, 93, 107, 110, 114, 120, 135, 166, 169, 171, 179, 180, 200, 202, 204, 206, 211, 223, 230, 235, 239, 284, 308, 310, 312, 313, 314, 315, 318, 319, 320, 321, 324], "remot": [1, 18, 19, 20, 21, 87, 93, 324], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 71, 75, 78, 83, 84, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 105, 107, 110, 111, 112, 118, 122, 126, 131, 132, 134, 137, 147, 156, 169, 171, 175, 209, 223, 292, 308, 312, 314, 315, 320, 321, 323], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 132, 240, 252, 253, 254, 255, 256, 309, 312, 314], "synchronis": [1, 72, 318], "either": [1, 5, 22, 32, 40, 54, 71, 75, 87, 93, 134, 135, 219, 244, 275, 310, 312, 313, 315, 320, 321, 323, 324], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 312, 318, 323], "update_at_each_batch": [1, 13, 14, 17, 312], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 69, 70, 71, 72, 73, 75, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 106, 109, 114, 117, 118, 119, 120, 124, 125, 126, 130, 132, 134, 136, 138, 139, 140, 141, 142, 144, 145, 147, 151, 154, 155, 156, 157, 159, 160, 161, 162, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 194, 195, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 224, 225, 226, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 252, 253, 254, 255, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 281, 282, 284, 285, 288, 304, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "second": [1, 8, 169, 171, 206, 225, 236, 239, 242, 287, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 68, 71, 73, 75, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 110, 111, 112, 118, 122, 123, 124, 126, 128, 132, 134, 136, 138, 139, 140, 142, 144, 151, 154, 156, 157, 158, 159, 160, 161, 162, 166, 168, 169, 171, 172, 173, 175, 178, 179, 180, 181, 186, 187, 188, 196, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 212, 213, 216, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 285, 290, 297, 298, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 71, 75, 87, 93, 114, 118, 139, 165, 166, 182, 200, 201, 202, 205, 206, 208, 213, 219, 223, 225, 226, 227, 230, 236, 239, 241, 250, 251, 252, 253, 254, 255, 288, 297, 306, 310, 312, 313, 314, 315, 317, 318, 319, 324], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 70, 71, 72, 75, 83, 87, 93, 102, 120, 136, 139, 145, 151, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 174, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 220, 227, 229, 237, 250, 252, 253, 254, 255, 271, 275, 284, 292, 293, 294, 297, 300, 302, 303, 308, 309, 310, 312, 313, 314, 315, 319, 321, 324], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 106, 107, 108, 110, 111, 112, 122, 124, 126, 128, 132, 134, 136, 139, 140, 142, 144, 151, 154, 156, 169, 171, 175, 180, 181, 187, 188, 196, 199, 200, 201, 202, 204, 205, 206, 210, 211, 212, 213, 216, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 285, 297, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 71, 75, 79, 87, 93, 126, 162, 169, 171, 173, 182, 197, 199, 203, 205, 213, 218, 237, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 307, 309, 312, 313, 314, 318, 319, 321, 323, 324], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 71, 72, 75, 79, 82, 86, 87, 88, 89, 93, 100, 102, 105, 107, 108, 109, 110, 119, 120, 124, 128, 131, 133, 139, 140, 141, 144, 145, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 185, 186, 188, 189, 190, 192, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 239, 240, 241, 242, 243, 244, 250, 252, 253, 254, 255, 259, 260, 281, 283, 284, 288, 292, 297, 304, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 78, 79, 87, 93, 106, 118, 123, 124, 136, 139, 140, 142, 144, 213, 280, 312, 313, 314, 315, 318, 320, 324], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 87, 93, 103, 105, 109, 119, 128, 131, 134, 139, 145, 171, 172, 178, 180, 181, 199, 205, 210, 211, 213, 214, 217, 225, 229, 236, 239, 240, 244, 258, 297, 304, 308, 310, 312, 313, 314, 318, 319, 321, 323], "infer": [1, 87, 93, 102, 135, 145, 169, 171, 180, 204, 312, 314, 321], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 69, 70, 71, 75, 83, 87, 93, 119, 120, 140, 145, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 215, 216, 217, 220, 242, 284, 302, 303, 304, 307, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323], "dispatch": [1, 18, 19, 20, 21, 197], "avail": [1, 3, 4, 6, 21, 62, 79, 88, 89, 118, 166, 188, 210, 214, 237, 302, 303, 308, 312, 313, 314, 315, 318, 319, 321, 324], "speed": [1, 2, 4, 8, 27, 309, 312, 313, 314, 315, 318, 319, 321], "up": [1, 2, 3, 8, 9, 27, 40, 52, 137, 139, 239, 307, 308, 309, 312, 313, 314, 315, 318, 319, 321, 324], "avoid": [1, 32, 55, 56, 65, 71, 75, 87, 93, 99, 140, 145, 199, 213, 218, 225, 236, 239, 242, 291, 314, 318], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 182, 308, 309, 312, 313, 318], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 68, 71, 73, 75, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 107, 110, 111, 112, 114, 122, 124, 126, 128, 132, 133, 134, 136, 138, 139, 140, 141, 144, 145, 151, 154, 156, 157, 158, 163, 164, 166, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 189, 190, 193, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 218, 223, 224, 226, 227, 229, 235, 237, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 271, 279, 285, 297, 308, 313, 314, 315, 317, 318, 319, 323, 324], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 71, 72, 73, 75, 82, 84, 87, 88, 89, 93, 107, 110, 126, 139, 141, 145, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 180, 182, 183, 184, 186, 187, 189, 190, 192, 196, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 225, 236, 237, 239, 252, 253, 254, 255, 256, 285, 302, 303, 304, 308, 312, 313, 314, 315, 317, 318, 319, 321, 324], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 71, 75, 79, 86, 87, 93, 102, 114, 141, 145, 155, 169, 171, 204, 223, 225, 226, 229, 235, 236, 237, 239, 240, 241, 242, 244, 252, 253, 254, 255, 308, 309, 313, 314, 318, 321], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 71, 75, 87, 93, 145, 156, 172, 175, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 297, 306, 310, 312, 314, 315, 318, 320, 321, 324], "while": [1, 3, 7, 8, 32, 71, 75, 87, 93, 128, 140, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 235, 236, 239, 242, 308, 312, 314, 315, 318, 319, 320, 321, 323], "wait": [1, 20, 21, 22, 315, 319], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 71, 75, 87, 88, 89, 93, 99, 102, 109, 120, 126, 128, 131, 132, 134, 136, 140, 190, 215, 216, 217, 223, 224, 226, 227, 229, 235, 239, 242, 252, 259, 260, 308, 310, 312, 313, 314, 315, 317, 318, 319, 321, 324], "impact": [1, 107, 110, 313, 315, 318], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 71, 72, 75, 79, 87, 93, 102, 106, 124, 136, 139, 140, 142, 144, 145, 213, 304, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "manag": [1, 8, 248, 249, 252, 253, 254, 255, 284], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 71, 75, 87, 93, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 123, 124, 125, 126, 128, 131, 132, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 154, 155, 156, 165, 166, 169, 171, 174, 175, 188, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 271, 282, 283, 284, 286, 287, 288, 292, 297, 309, 310, 312, 314, 315, 317, 318, 319, 321, 323, 324], "control": [1, 3, 5, 8, 16, 69, 70, 82, 88, 89, 109, 154, 159, 160, 161, 162, 169, 171, 174, 175, 190, 197, 209, 213, 214, 215, 223, 225, 236, 239, 243, 252, 257, 265, 308, 310, 312, 313, 314, 318, 319, 321], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 71, 75, 79, 84, 87, 90, 93, 102, 103, 107, 110, 115, 118, 119, 120, 124, 125, 134, 136, 137, 139, 140, 142, 147, 170, 171, 176, 177, 178, 195, 200, 201, 202, 204, 210, 213, 214, 216, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 247, 250, 252, 253, 254, 255, 279, 283, 297, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 312, 313, 318, 323], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 36, 40, 45, 52, 53, 54, 71, 75, 87, 88, 89, 93, 102, 105, 107, 110, 115, 122, 135, 140, 169, 171, 284, 288, 309, 312, 313, 314, 315, 318, 319, 321, 324], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 209, 312, 324], "usual": [1, 3, 4, 6, 7, 8, 52, 71, 75, 87, 93, 181, 239, 252, 253, 254, 255, 256, 270, 297, 307, 308, 310, 312, 313, 314, 315, 318, 321, 324], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 71, 72, 75, 82, 87, 88, 89, 93, 102, 107, 109, 110, 115, 119, 120, 139, 140, 145, 157, 169, 171, 173, 176, 177, 178, 179, 204, 209, 217, 242, 312, 313, 314, 317, 318, 320, 321, 324], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 71, 73, 75, 87, 93, 102, 107, 110, 128, 306, 310, 313, 314, 315, 318, 320], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 69, 71, 75, 86, 87, 88, 89, 90, 93, 100, 102, 103, 107, 109, 110, 111, 114, 118, 119, 120, 122, 124, 125, 128, 130, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 297, 300, 304, 310, 312, 313, 314, 315, 320, 321, 323, 324], "behaviour": [1, 3, 21, 75, 103, 107, 110, 120, 125, 135, 154, 169, 170, 171, 195, 284, 308, 313, 315, 319, 321], "besid": 1, "those": [1, 5, 7, 26, 28, 87, 93, 102, 107, 110, 120, 136, 137, 171, 210, 214, 215, 216, 290, 302, 303, 308, 312, 313, 318, 319, 324], "choos": [1, 82, 169, 171, 239, 308, 309, 312, 313, 314, 318, 321], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 71, 75, 83, 86, 87, 88, 89, 91, 92, 93, 118, 124, 142, 157, 169, 171, 173, 206, 211, 212, 222, 223, 224, 225, 226, 229, 235, 236, 237, 239, 240, 241, 242, 244, 288, 297, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 291, 312, 314, 323], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 102, 115, 203, 207, 209, 270, 271, 281, 284, 288, 291, 292, 312, 313, 314, 315, 318, 321, 323, 324], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 59, 62, 63, 65, 71, 75, 86, 87, 93, 102, 105, 106, 109, 114, 117, 118, 120, 122, 123, 124, 131, 136, 139, 140, 142, 144, 145, 147, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 175, 178, 179, 180, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 213, 214, 216, 217, 220, 225, 236, 239, 242, 251, 252, 253, 254, 255, 270, 284, 310, 313, 314, 315, 318, 319, 320, 321, 324], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 102, 128, 291, 312, 313, 314, 315, 318, 321, 323], "each": [1, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 52, 71, 72, 75, 87, 88, 89, 93, 124, 128, 131, 134, 135, 136, 137, 144, 145, 166, 169, 171, 178, 179, 183, 187, 188, 196, 203, 205, 206, 207, 212, 216, 258, 261, 262, 263, 264, 266, 267, 268, 269, 284, 285, 302, 303, 308, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 291, 312, 313], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 71, 75, 83, 87, 93, 109, 119, 120, 136, 147, 169, 171, 207, 210, 213, 214, 224, 240, 284, 292, 308, 312, 313, 314, 315, 319, 320, 321, 323, 324], "rand_step": [1, 3, 67, 69, 70, 71, 72, 74, 75, 76, 80, 83, 84, 87, 93, 117, 136, 145, 319, 323, 324], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 312], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 312, 313, 314], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 71, 75, 87, 93, 125, 134, 139, 156, 171, 175, 209, 239, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 279, 306, 309, 312, 313, 314, 315, 319, 321, 323, 324], "pad": [1, 23, 37, 43, 52, 102, 157, 159, 160, 171, 172, 176, 177, 178, 285], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 102, 103, 120, 122, 125, 131, 138, 171, 173, 176, 177, 181, 205, 210, 213, 214, 237, 308, 312, 313, 315, 318, 319, 321], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 71, 75, 87, 93, 102, 106, 124, 136, 138, 139, 140, 142, 144, 174, 213, 222, 230, 288, 307, 313, 314, 317, 318, 319, 321, 324], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 75, 125, 134, 155, 176, 177, 203, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 310, 315], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 71, 75, 87, 93, 115, 125, 145, 166, 176, 177, 188, 205, 206, 211, 212, 214, 247, 252, 285, 312, 314, 315, 318], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 96, 125, 140, 157, 173, 176, 177, 203, 209, 236, 252, 253, 254, 255, 285, 310, 324], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 284, 306, 312, 313], "strategi": [1, 16, 82, 177, 185, 207, 308, 310, 312, 313, 318, 321], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 71, 75, 87, 93, 124, 144, 308, 309, 312, 314, 318, 319, 321, 324], "tool": [1, 2, 3, 5, 315, 319, 321, 324], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 97, 99, 310, 312, 314, 315, 319], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 306], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 306], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 103, 106, 107, 108, 109, 110, 111, 112, 118, 120, 122, 124, 126, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 151, 154, 155, 156, 157, 158, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 279, 286, 287, 297, 300, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "multiprocess": [1, 3, 18, 19, 20, 72, 73, 145, 313, 314, 319, 324], "synchron": [1, 13, 19, 21, 84, 302, 303, 313, 314], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 84, 87, 93, 107, 110, 135, 140, 145, 148, 152, 153, 164, 169, 170, 171, 185, 193, 194, 195, 210, 214, 237, 284, 312, 313, 315, 318, 323, 324], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 203, 209, 282, 286, 312, 313, 318], "dedic": [1, 3, 18, 19, 20, 21, 200, 201, 202, 308, 312, 317, 318], "folder": [1, 313], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 71, 75, 87, 93, 125, 215, 216, 279, 288, 308, 312, 313, 314, 317, 323, 324], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 71, 72, 75, 83, 87, 88, 89, 93, 96, 102, 105, 106, 107, 108, 110, 113, 118, 119, 120, 124, 131, 136, 137, 139, 140, 142, 144, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 213, 214, 216, 217, 220, 232, 237, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 283, 288, 291, 302, 303, 304, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 324], "variou": [1, 3, 13, 14, 16, 17, 169, 171, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 245, 250, 302, 303, 312, 313, 314, 318, 324], "machin": [1, 7, 18, 19, 20, 32, 53, 79, 318], "One": [1, 2, 4, 8, 31, 33, 45, 102, 128, 142, 185, 203, 213, 217, 243, 247, 275, 312, 313, 321, 324], "wonder": 1, "why": [1, 3, 319, 324], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 84, 88, 89, 93, 301, 306, 312, 313, 314, 317, 323, 324], "instead": [1, 4, 7, 8, 11, 27, 32, 71, 75, 87, 93, 114, 136, 140, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 223, 224, 225, 227, 229, 230, 235, 236, 239, 240, 241, 242, 250, 252, 256, 260, 304, 308, 319, 321, 324], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 71, 75, 87, 88, 89, 93, 106, 107, 108, 110, 124, 128, 132, 135, 136, 138, 139, 140, 142, 144, 170, 173, 178, 190, 194, 195, 213, 216, 222, 223, 224, 226, 227, 229, 235, 237, 239, 240, 241, 242, 244, 290, 302, 303, 304, 308, 309, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324], "lower": [1, 2, 17, 21, 25, 105, 145, 189, 190, 217, 314, 319], "io": [1, 84], "footprint": [1, 2, 321], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 63, 71, 75, 79, 82, 87, 88, 89, 93, 102, 105, 114, 124, 126, 137, 140, 144, 145, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 180, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 211, 212, 213, 217, 220, 222, 229, 240, 241, 242, 244, 251, 256, 271, 288, 304, 308, 309, 312, 313, 314, 315, 318, 319, 321, 323, 324], "commun": [1, 2, 3, 307, 314, 324], "yet": [1, 237, 320], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 71, 73, 75, 83, 87, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 122, 124, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 151, 155, 166, 188, 190, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 297, 308, 312, 313, 314, 315, 317, 318, 323], "plai": [1, 3, 88, 89, 102, 313, 314, 321, 324], "role": [1, 3, 313, 324], "opposit": 1, "direct": [1, 32, 71, 75, 87, 93, 237, 313], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 71, 75, 87, 88, 89, 93, 154, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 205, 206, 207, 209, 211, 212, 217, 220, 312, 313, 314, 315, 319, 320, 321, 323, 324], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 84, 252, 253, 254, 255, 315, 318], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 72, 87, 93, 145, 169, 171, 178, 179, 200, 201, 202, 223, 225, 226, 229, 235, 236, 239, 240, 241, 242, 244, 304, 308, 314, 315, 317, 318, 323, 324], "among": [1, 3, 88, 89, 318], "achiev": [1, 3, 4, 32, 71, 75, 79, 87, 93, 135, 155, 285, 310, 312, 313, 314, 315, 318, 319, 324], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 87, 124, 139, 144, 228, 237, 309, 310, 312, 313, 314, 315, 321, 324], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 284, 309, 312, 314, 318, 321, 324], "gpu": [1, 7, 8, 32, 55, 56, 65, 71, 75, 79, 87, 93, 312, 314, 315, 318, 324], "nativ": [1, 7, 9, 71, 75, 87, 93, 102, 315, 321], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 170, 194, 195, 222, 307, 312, 313, 314, 315, 318, 320, 324], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 75, 120, 145, 156, 164, 167, 169, 171, 172, 175, 193, 203, 210, 214, 237, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 308, 309, 312, 313, 314, 318, 319, 321, 323, 324], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 71, 75, 87, 93, 105, 106, 124, 132, 136, 139, 140, 142, 144, 169, 171, 176, 177, 199, 203, 204, 205, 207, 209, 210, 211, 213, 214, 217, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 250, 252, 253, 254, 255, 256, 260, 301, 312, 313, 314, 318, 321, 324], "build": [1, 3, 7, 23, 26, 32, 71, 75, 87, 90, 93, 128, 145, 156, 169, 171, 175, 208, 210, 214, 288, 295, 296, 298, 299, 308, 310, 314, 315, 318, 319, 320, 323, 324], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 71, 75, 83, 87, 93, 106, 109, 120, 124, 136, 139, 140, 142, 144, 154, 156, 166, 167, 175, 188, 192, 199, 205, 206, 207, 209, 212, 213, 214, 215, 216, 218, 222, 226, 227, 251, 252, 253, 254, 255, 256, 258, 280, 284, 300, 308, 310, 312, 313, 314, 318, 319, 324], "mani": [1, 3, 4, 38, 71, 223, 225, 229, 236, 239, 240, 244, 308, 312, 313, 314, 318, 319, 321, 324], "eg": [1, 3, 11, 55, 56, 57, 63, 65, 71, 75, 79, 87, 93, 109, 134, 178, 204], "gymnasium": [1, 3, 5, 11, 71, 75, 87, 93, 97, 99, 112, 132, 134, 313, 314, 319, 323], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 71, 75, 83, 87, 93, 105, 108, 109, 132, 138, 142, 145, 169, 171, 181, 182, 204, 206, 207, 212, 214, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 252, 285, 297, 302, 303, 308, 310, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324], "warn": [1, 3, 203, 207, 209, 313, 324], "quickli": [1, 3, 313, 318, 324], "becom": [1, 3, 4, 21, 318, 324], "quit": [1, 3, 308, 312, 313, 314, 318, 324], "annoi": [1, 3], "By": [1, 2, 3, 33, 71, 75, 87, 88, 89, 93, 197, 214, 237, 284, 304, 312, 320, 321, 324], "filter": [1, 3, 4, 45, 223, 224, 226, 229, 235, 239, 240, 242], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 71, 75, 87, 88, 89, 93, 136, 147, 176, 177, 180, 181, 199, 204, 205, 206, 209, 210, 211, 212, 213, 214, 248, 249, 310, 312, 313, 314, 315, 318, 319, 321, 323, 324], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 71, 72, 75, 79, 83, 87, 88, 89, 93, 97, 102, 103, 104, 105, 107, 108, 109, 110, 112, 114, 118, 119, 120, 124, 125, 128, 131, 132, 136, 137, 139, 140, 142, 144, 145, 154, 155, 157, 169, 171, 172, 173, 176, 177, 178, 179, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 237, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 266, 267, 268, 269, 283, 285, 288, 290, 292, 297, 300, 304, 307, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "still": [1, 3, 9, 203, 236, 237, 312, 313, 315, 317, 319, 321, 324], "wish": [1, 3, 99, 321], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 71, 75, 78, 84, 87, 88, 89, 93, 106, 124, 136, 138, 139, 140, 142, 144, 146, 157, 170, 173, 179, 180, 187, 195, 196, 200, 202, 213, 214, 285, 312, 313, 314, 315, 318, 319, 321, 324], "displai": [1, 3, 7, 288, 310, 312, 313, 318, 319], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 68, 69, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 110, 111, 112, 114, 117, 118, 119, 120, 122, 124, 125, 126, 128, 130, 132, 134, 136, 138, 139, 140, 141, 142, 144, 145, 147, 154, 155, 156, 157, 159, 166, 169, 170, 171, 173, 175, 176, 177, 178, 179, 187, 188, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 223, 224, 225, 226, 227, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 250, 252, 253, 254, 255, 261, 262, 263, 264, 266, 267, 268, 269, 281, 282, 284, 285, 286, 288, 297, 304, 308, 310, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "central": [2, 178, 312, 313, 318, 321], "part": [2, 4, 8, 32, 40, 71, 75, 87, 93, 120, 128, 131, 169, 171, 218, 279, 304, 312, 314, 315, 319, 324], "algorithm": [2, 3, 8, 9, 13, 14, 83, 115, 223, 239, 240, 241, 242, 279, 293, 306, 309, 310, 312, 313, 314, 315, 318, 320, 321, 323], "implement": [2, 3, 9, 11, 16, 32, 63, 71, 75, 84, 87, 93, 106, 107, 108, 112, 118, 126, 132, 134, 139, 145, 170, 193, 194, 195, 223, 224, 228, 235, 237, 238, 239, 242, 297, 308, 310, 312, 313, 314, 315, 319, 323], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 62, 71, 72, 75, 79, 87, 93, 102, 118, 124, 126, 136, 142, 145, 156, 171, 172, 178, 179, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "give": [2, 7, 41, 71, 75, 83, 87, 93, 102, 307, 309, 312, 313, 318, 319, 320, 323], "abil": [2, 237, 319, 321], "veri": [2, 3, 313, 319, 321, 323, 324], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 71, 75, 83, 86, 87, 93, 102, 125, 128, 148, 149, 152, 153, 156, 164, 170, 175, 176, 177, 185, 186, 189, 194, 195, 199, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 223, 224, 225, 226, 227, 236, 238, 239, 244, 279, 285, 288, 291, 308, 312, 313, 314, 315, 318, 320, 323, 324], "latenc": 2, "especi": [2, 3, 7, 8, 103], "larger": [2, 4, 235], "volum": 2, "lazymemmapstorag": [2, 102, 306, 312, 313, 315, 320, 321], "advis": [2, 324], "due": [2, 3, 5, 320, 321, 324], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 321], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 71, 75, 87, 93, 189, 190, 237, 256, 312, 313, 315, 320, 321, 323, 324], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 71, 75, 87, 88, 89, 93, 107, 108, 110, 131, 133, 135, 141, 156, 213, 214, 237, 243, 308, 312, 314, 315], "file": [2, 6, 7, 8, 270, 310, 313, 320, 321, 322], "locat": [2, 7, 45, 71, 75, 87, 93, 111, 120, 130, 170, 182, 194, 195, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 312, 313, 314, 318, 321], "improv": [2, 4, 115, 223, 309, 318, 321], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 306, 321], "were": [2, 7, 87, 93, 314, 321], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 71, 75, 79, 87, 93, 100, 102, 128, 131, 137, 145, 155, 207, 210, 214, 236, 237, 239, 312, 313, 315], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 79, 84, 88, 89, 90, 102, 124, 142, 158, 159, 160, 161, 162, 163, 166, 167, 168, 175, 176, 177, 181, 183, 184, 186, 187, 189, 190, 196, 206, 209, 223, 224, 228, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 252, 257, 265, 297, 320, 323], "github": [2, 5, 6, 7, 10, 18, 19, 20, 88, 89, 90, 142, 323], "com": [2, 5, 6, 7, 10, 18, 19, 20, 79, 88, 89, 90, 323], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 71, 75, 82, 83, 87, 88, 89, 93, 106, 107, 108, 111, 112, 118, 124, 126, 132, 134, 136, 139, 140, 142, 144, 145, 149, 153, 157, 173, 178, 179, 181, 187, 196, 203, 205, 210, 213, 214, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 246, 250, 258, 297, 302, 308, 312, 313, 314, 318, 319, 321, 324], "1x": 2, "lazytensorstorag": [2, 41, 42, 128, 306, 314, 318, 321], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 71, 75, 78, 82, 84, 86, 87, 88, 89, 91, 92, 93, 100, 102, 106, 109, 111, 112, 118, 120, 122, 124, 126, 128, 131, 132, 134, 136, 138, 139, 140, 142, 144, 151, 156, 157, 159, 160, 163, 166, 168, 169, 171, 172, 173, 175, 178, 179, 182, 185, 187, 197, 199, 200, 201, 202, 205, 206, 210, 212, 213, 216, 217, 218, 223, 224, 226, 227, 229, 230, 231, 232, 235, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 258, 261, 262, 263, 264, 266, 267, 268, 269, 271, 287, 308, 310, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324], "44x": 2, "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 87, 93, 119, 170, 194, 195, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 313, 314, 319, 321, 324], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 86, 102, 125, 157, 199, 203, 205, 213, 214, 218, 279, 312, 314, 321, 324], "pai": [2, 8, 312, 315], "attent": [2, 8, 312, 315, 324], "alwai": [2, 3, 20, 26, 28, 32, 54, 71, 75, 87, 93, 118, 119, 230, 237, 308, 309, 313, 314, 315, 318, 319, 321], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 136, 170, 187, 194, 195, 312, 315, 318, 319, 321, 323], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 93, 102, 103, 114, 120, 122, 125, 131, 133, 138, 141, 145, 157, 158, 163, 169, 171, 173, 176, 177, 178, 180, 181, 186, 187, 191, 192, 193, 194, 197, 205, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 304, 308, 312, 313, 314, 315, 318, 319, 321], "word": [2, 40, 52, 237, 312, 319, 324], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 71, 72, 75, 79, 84, 87, 88, 93, 102, 124, 139, 140, 142, 145, 151, 154, 157, 159, 160, 161, 162, 163, 168, 169, 171, 173, 174, 178, 179, 204, 214, 227, 230, 240, 242, 250, 271, 285, 292, 293, 294, 300, 302, 303, 308, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324], "1m": [2, 291, 312, 314, 315], "multidimension": [2, 41, 58, 321], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 163, 169, 171, 180, 197, 204, 215, 216, 223, 225, 230, 236, 239, 251, 288, 308, 310, 312, 313, 314, 315, 319, 321, 324], "desir": [2, 3, 32, 71, 75, 87, 93, 106, 120, 122, 124, 125, 136, 139, 140, 142, 144, 152, 153, 157, 173, 179, 199, 205, 206, 210, 211, 212, 213, 214, 308, 312, 318, 319], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 71, 75, 76, 79, 81, 84, 87, 93, 112, 120, 124, 125, 128, 134, 142, 147, 178, 179, 180, 205, 214, 237, 239, 252, 253, 254, 255, 285, 294, 304, 308, 309, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "do": [2, 3, 4, 7, 75, 119, 125, 145, 154, 179, 180, 201, 252, 310, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "custom": [2, 3, 5, 32, 71, 75, 87, 93, 142, 178, 179, 217, 230, 239, 245, 304, 308, 312, 313, 314, 315, 318], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 69, 71, 75, 82, 84, 87, 88, 89, 90, 93, 96, 109, 112, 126, 131, 132, 134, 140, 142, 155, 169, 171, 205, 211, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 256, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 297, 310, 312, 313, 314, 315, 318, 319, 324], "randomcroptensordict": [2, 312], "here": [2, 3, 4, 7, 8, 9, 10, 71, 75, 79, 87, 88, 89, 93, 102, 308, 309, 312, 313, 314, 315, 318, 319, 321, 323, 324], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 71, 75, 87, 88, 89, 93, 223, 225, 234, 236, 239, 288, 307, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 67, 68, 69, 70, 74, 76, 77, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 94, 95, 97, 182, 197, 203, 204, 209, 214, 219, 252, 276, 277, 278, 304, 306, 314, 315, 318, 320, 324], "around": [2, 5, 7, 15, 17, 41, 42, 83, 214, 252, 312, 313, 318, 324], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 102, 147, 224, 235, 310, 320, 321, 323], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 71, 75, 87, 93, 112, 128, 132, 154, 155, 158, 159, 160, 161, 162, 168, 181, 186, 209, 213, 214, 215, 216, 223, 224, 225, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 304, 310, 312, 317, 318, 321, 323], "replaybuff": [2, 41, 42, 66, 102, 125, 128, 227, 230, 250, 298, 300, 306, 314, 318, 320, 321, 323], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 125, 227, 230, 250, 306, 312, 314, 318, 321], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 71, 75, 82, 87, 88, 89, 91, 92, 93, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 122, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 151, 166, 182, 199, 200, 201, 202, 205, 210, 211, 213, 214, 216, 217, 218, 219, 242, 250, 284, 306, 308, 309, 312, 313, 314, 315, 320], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 106, 107, 109, 110, 111, 112, 114, 117, 120, 122, 124, 125, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 223, 224, 226, 227, 229, 232, 233, 235, 237, 239, 240, 241, 242, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 297, 308, 310, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 71, 75, 87, 93, 126, 136, 154, 173, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 245, 247, 250, 308, 310, 312, 314, 315, 318, 319, 321, 324], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 88, 89, 91, 92, 288, 307, 314, 315, 318, 324], "respons": [2, 3, 8, 288, 324], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 118, 200, 201, 202, 213, 235, 297, 306, 312, 319, 323], "repositori": [2, 7, 53], "latest": [2, 3, 10, 84, 88, 89, 285, 314, 318, 319, 323], "wheel": [2, 314], "publish": 2, "pypi": [2, 323], "openml": [2, 53, 86], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 71, 75, 79, 84, 87, 90, 93, 106, 124, 136, 139, 140, 142, 144, 173, 197, 213, 215, 216, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 308, 310, 312, 313, 314, 315, 318, 319, 321, 324], "parent": [2, 3, 21, 26, 28, 44, 71, 103, 106, 108, 111, 114, 115, 120, 124, 131, 134, 136, 139, 141, 142, 200, 237, 239, 256, 312, 319, 323, 324], "subclass": [2, 3, 71, 75, 87, 93, 139, 147, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 213, 214, 215, 217, 220, 237, 239, 313, 315, 319, 321], "basic": [2, 83, 308, 314, 324], "properti": [2, 3, 32, 34, 36, 39, 71, 75, 83, 87, 93, 139, 140, 164, 170, 180, 185, 193, 194, 195, 237, 242, 319, 321], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 68, 69, 70, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 116, 117, 118, 120, 121, 122, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 154, 158, 159, 160, 161, 162, 163, 166, 169, 171, 172, 178, 183, 184, 186, 188, 189, 199, 200, 201, 202, 204, 205, 207, 209, 210, 211, 218, 219, 223, 224, 225, 226, 227, 229, 232, 235, 236, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 271, 297, 300, 308, 310, 313, 314, 315, 317, 318, 319, 321, 323, 324], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 103, 107, 110, 111, 112, 118, 120, 122, 126, 128, 132, 134, 136, 138, 145, 146, 147, 151, 154, 156, 158, 163, 164, 165, 169, 171, 173, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 193, 196, 199, 200, 201, 202, 204, 205, 206, 210, 211, 212, 213, 216, 217, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 285, 288, 300, 308, 312, 313, 314, 315, 317, 318, 320, 321, 323, 324], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 106, 107, 108, 109, 110, 111, 112, 118, 120, 122, 124, 126, 128, 132, 134, 136, 138, 139, 140, 142, 144, 147, 151, 154, 155, 156, 166, 169, 171, 175, 180, 181, 187, 188, 196, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 212, 213, 216, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 258, 297, 308, 314, 315, 317, 318, 319, 321, 323, 324], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 102, 105, 111, 112, 117, 118, 120, 122, 124, 126, 128, 131, 132, 134, 136, 137, 139, 144, 145, 151, 154, 155, 156, 166, 169, 171, 173, 175, 178, 179, 182, 187, 188, 196, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 223, 224, 225, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 281, 284, 297, 300, 308, 309, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 71, 72, 75, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 120, 122, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 157, 164, 169, 171, 173, 178, 179, 193, 199, 204, 205, 210, 211, 213, 214, 217, 218, 224, 229, 236, 238, 240, 242, 285, 290, 308, 312, 314, 317, 318, 319, 321, 323, 324], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 71, 75, 83, 86, 87, 88, 89, 90, 93, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 123, 124, 125, 126, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 154, 155, 157, 159, 160, 161, 162, 165, 166, 169, 171, 172, 173, 178, 179, 180, 181, 188, 189, 190, 191, 192, 197, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 282, 286, 291, 300, 308, 309, 310, 312, 313, 314, 315, 318, 319, 323, 324], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 86, 87, 88, 89, 90, 93, 102, 105, 106, 107, 108, 110, 112, 118, 120, 124, 126, 131, 132, 134, 137, 139, 142, 144, 147, 155, 157, 158, 159, 160, 163, 165, 166, 167, 169, 171, 172, 173, 178, 179, 182, 188, 197, 199, 200, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 271, 279, 308, 309, 312, 313, 314, 315, 317, 318, 319, 320, 323, 324], "send": [2, 3, 8, 323], "receiv": [2, 3, 32, 40, 71, 75, 87, 93, 135, 139, 173, 258, 309, 312, 314, 317, 319], "spawn": [2, 3, 4, 18, 22, 79, 84, 318], "check_env_spec": [2, 3, 306, 314, 318, 319], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 75, 87, 93, 102, 106, 107, 108, 111, 112, 114, 118, 120, 124, 126, 127, 128, 132, 134, 136, 139, 140, 142, 144, 156, 172, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 256, 270, 301, 309, 310, 311, 313, 314, 315, 319, 321, 324], "saniti": [2, 3, 7, 147, 314], "utmost": 2, "techniqu": [2, 8, 313, 321], "commonli": [2, 324], "emploi": [2, 181], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 321], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 71, 75, 87, 93, 102, 107, 110, 111, 134, 145, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 227, 230, 250, 308, 319, 323], "offer": [2, 3, 7, 308, 313, 319, 324], "facilit": [2, 3, 7, 123, 124, 142, 144, 200, 201, 202, 308, 312, 315, 319], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 135, 210, 214, 312, 314, 318, 319, 324], "extern": [2, 3, 107, 110, 324], "consist": [2, 3, 32, 35, 38, 41, 42, 71, 75, 87, 93, 118, 157, 173, 312, 313, 314, 319, 320, 324], "token": [2, 36, 37, 40, 43, 45, 54], "format": [2, 17, 31, 32, 33, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213, 312, 313, 324], "manner": [2, 75, 124, 142, 308, 312, 313, 314, 317, 319, 321], "handl": [3, 21, 32, 71, 75, 87, 93, 145, 171, 173, 288, 302, 303, 312, 313, 314, 318, 321], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 71, 75, 82, 87, 88, 89, 93, 102, 109, 120, 126, 135, 140, 141, 166, 169, 171, 173, 175, 178, 179, 188, 235, 239, 247, 252, 253, 254, 258, 259, 260, 284, 288, 290, 302, 303, 308, 309, 310, 312, 313, 314, 317, 318, 319, 320, 321, 324], "dm": [3, 312, 324], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 79, 83, 84, 85, 128, 136, 142, 143, 178, 200, 208, 223, 224, 226, 227, 229, 231, 235, 239, 240, 241, 242, 244, 288, 297, 308, 309, 310, 312, 313, 315, 318, 319, 321, 324], "goal": [3, 4, 135, 312, 313, 314, 315, 318, 319], "abl": [3, 82, 88, 89, 312, 314, 315, 317, 318, 319, 321, 323], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 147, 273, 274, 275, 276, 277, 278, 307, 313, 314, 318, 321], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 71, 72, 75, 79, 87, 93, 155, 312, 314, 318, 319, 324], "simul": [3, 5, 7, 8, 90, 98, 156, 175, 308, 312, 314, 318], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 88, 89, 93, 124, 142, 147, 159, 169, 171, 192, 214, 215, 216, 279, 291, 308, 310, 312, 313, 314, 315, 318, 319, 321, 323, 324], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 71, 75, 87, 93, 199, 205, 206, 210, 211, 212, 213, 214, 237, 252, 253, 254, 255, 256, 309, 312, 313, 319, 324], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 71, 72, 75, 87, 88, 89, 91, 92, 93, 102, 105, 111, 117, 118, 120, 122, 126, 128, 131, 136, 139, 145, 297, 300, 312, 313, 314, 315, 317, 318, 320, 321, 323, 324], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 71, 75, 83, 87, 93, 106, 109, 111, 118, 124, 136, 139, 140, 142, 144, 156, 157, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 173, 175, 177, 178, 179, 182, 187, 188, 196, 199, 200, 201, 202, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 218, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 297, 300, 308, 309, 312, 313, 314, 315, 317, 318, 319, 320, 323], "typic": [3, 4, 8, 32, 71, 75, 87, 93, 111, 135, 224, 237, 239, 242, 308, 309, 310, 314, 318, 319], "organis": [3, 313, 319], "arbitrari": [3, 33, 87, 93, 308, 312, 313, 319], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 71, 75, 87, 93, 102, 134, 137, 155, 252, 253, 254, 255, 256, 310, 313, 314, 318, 319, 321, 323], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 71, 75, 87, 93, 107, 110, 155, 178, 209, 252, 253, 254, 255, 256, 309, 312, 314, 315, 318, 319, 320, 321], "attribut": [3, 4, 32, 45, 71, 75, 87, 93, 111, 124, 142, 169, 171, 214, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 312, 315, 319], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 68, 71, 73, 75, 78, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 107, 110, 111, 112, 122, 126, 128, 132, 134, 136, 139, 154, 155, 156, 163, 166, 169, 171, 175, 187, 188, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 279, 285, 297, 308, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 71, 75, 82, 87, 88, 89, 93, 102, 125, 169, 171, 196, 200, 201, 202, 219, 308, 313, 314, 315], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 71, 75, 83, 86, 87, 90, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 120, 122, 124, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 147, 169, 171, 178, 179, 206, 209, 213, 216, 223, 224, 225, 226, 227, 229, 235, 236, 237, 239, 240, 241, 242, 244, 250, 292, 307, 308, 309, 310, 312, 314, 315, 318, 319, 321, 324], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 87, 93, 111], "actual": [3, 4, 7, 17, 71, 75, 87, 93, 135, 291, 309, 312, 314, 318, 319], "just": [3, 4, 11, 71, 75, 82, 87, 88, 89, 93, 105, 155, 179, 279, 308, 310, 312, 313, 314, 315, 318, 319, 321, 323, 324], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 71, 75, 87, 93, 103, 108, 111, 120, 154, 156, 175, 210, 214, 217, 223, 224, 225, 227, 236, 239, 240, 242, 244, 250, 252, 253, 254, 255, 297, 304, 310, 313, 314, 319, 324], "care": [3, 8, 71, 75, 87, 93, 139, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 312, 314, 318, 319, 321], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 157, 170, 173, 179, 195, 213, 285, 312, 313, 314, 315, 319], "parametr": [3, 181, 214, 224, 235, 242, 312, 314], "hardwar": 3, "observation_spec": [3, 71, 75, 83, 87, 93, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 116, 117, 118, 120, 122, 124, 127, 131, 134, 135, 136, 137, 138, 139, 141, 142, 156, 169, 171, 175, 292, 300, 312, 314, 317, 318, 319, 324], "compositespec": [3, 28, 49, 71, 73, 75, 83, 87, 93, 100, 107, 108, 109, 110, 112, 118, 126, 132, 134, 135, 136, 139, 151, 155, 156, 175, 199, 203, 210, 216, 217, 306, 312, 314, 318, 319, 324], "pair": [3, 32, 34, 36, 39, 52, 71, 75, 87, 93, 128, 136, 169, 200, 210, 214, 237, 252, 253, 254, 255, 256, 308, 309, 312, 313, 314, 317, 319, 324], "state_spec": [3, 71, 75, 83, 87, 93, 100, 314, 319, 324], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 71, 75, 86, 87, 93, 124, 137, 140, 142, 144, 312, 319], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 68, 71, 75, 81, 83, 87, 88, 89, 93, 100, 102, 107, 110, 118, 128, 166, 188, 190, 199, 205, 210, 211, 224, 227, 240, 242, 244, 300, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "reward_spec": [3, 71, 75, 83, 87, 93, 100, 101, 105, 106, 107, 108, 110, 129, 130, 131, 139, 141, 156, 175, 314, 318, 319, 324], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 100, 101, 105, 106, 107, 108, 110, 111, 112, 118, 122, 126, 128, 129, 130, 131, 132, 134, 135, 139, 141, 143, 144, 145, 151, 154, 156, 169, 175, 204, 219, 223, 224, 226, 227, 229, 232, 235, 237, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 281, 282, 284, 286, 304, 309, 310, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "done_spec": [3, 71, 75, 87, 93, 107, 108, 110, 111, 139, 155, 314, 318, 319, 324], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 209, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 308, 318, 319, 320], "section": [3, 4, 313, 318], "termin": [3, 7, 32, 40, 52, 75, 88, 89, 91, 92, 94, 95, 111, 155, 169, 171, 215, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 312, 313, 314, 315, 317, 318, 319, 321, 323, 324], "input_spec": [3, 71, 75, 83, 87, 93, 106, 107, 108, 109, 120, 122, 126, 131, 132, 134, 139, 140, 141, 143, 156, 175, 319], "full_action_spec": [3, 71, 75, 87, 93, 318], "full_state_spec": [3, 71, 75, 87, 93], "lock": [3, 26, 28, 71, 75, 87, 93, 136, 145, 319], "modifi": [3, 7, 8, 26, 28, 32, 45, 71, 75, 87, 93, 106, 114, 118, 124, 136, 139, 140, 142, 144, 204, 209, 213, 291, 297, 312, 313, 314, 318, 319], "directli": [3, 4, 8, 71, 75, 83, 87, 93, 128, 237, 304, 308, 314, 318, 319, 321], "output_spec": [3, 71, 75, 87, 93, 106, 107, 108, 112, 118, 126, 132, 134, 139, 140, 319], "full_observation_spec": [3, 71, 75, 87, 93], "full_reward_spec": [3, 71, 75, 87, 93, 318], "full_done_spec": [3, 71, 75, 87, 93, 155, 318], "importantli": [3, 210, 214], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 69, 70, 71, 74, 75, 80, 82, 83, 87, 91, 92, 93, 100, 102, 111, 128, 134, 145, 156, 157, 158, 159, 160, 163, 166, 167, 168, 172, 173, 175, 178, 179, 182, 183, 184, 185, 186, 187, 188, 196, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 218, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 270, 308, 312, 313, 314, 315, 318, 319, 321, 322, 323, 324], "action_s": 3, "help": [3, 4, 32, 71, 75, 87, 93, 111, 307, 309, 312, 313, 314, 315, 318], "prealloc": [3, 319], "With": [3, 82, 135, 310, 312, 313, 318, 321, 324], "necessarili": [3, 324], "instanti": [3, 21, 34, 36, 39, 79, 87, 93, 139, 179, 312, 313, 318, 319, 321, 324], "0s": [3, 136, 315], "stateless": [3, 139, 312, 319, 324], "set_se": [3, 13, 14, 16, 17, 21, 68, 71, 75, 81, 83, 87, 93, 120, 126, 137, 140, 319, 323, 324], "seed": [3, 13, 14, 16, 17, 21, 69, 71, 75, 83, 87, 88, 89, 93, 94, 95, 100, 107, 110, 140, 147, 288], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 68, 71, 72, 75, 81, 83, 87, 91, 92, 93, 94, 95, 102, 107, 110, 111, 112, 117, 118, 122, 126, 128, 131, 132, 134, 135, 136, 145, 151, 154, 156, 169, 171, 175, 190, 219, 223, 224, 226, 227, 229, 230, 235, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 282, 284, 286, 312, 313, 315, 317, 319, 320, 321, 323, 324], "determinist": [3, 32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 158, 167, 183, 190, 199, 213, 214, 217, 224, 308, 312, 313, 315, 319, 324], "preced": [3, 172, 315], "without": [3, 7, 9, 32, 40, 52, 71, 75, 87, 93, 100, 107, 110, 138, 201, 202, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 251, 252, 253, 254, 255, 256, 300, 307, 308, 312, 313, 314, 318, 319, 321, 324], "risk": [3, 125], "overlap": [3, 41], "consecut": [3, 62, 79, 171, 209, 315, 318, 324], "reproduc": [3, 102, 147, 312, 314, 318], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 71, 75, 87, 93, 109, 129, 134, 135, 137, 193, 194, 195, 217, 224, 229, 235, 237, 238, 242, 285, 312, 313, 314, 315, 318, 321], "max_step": [3, 13, 71, 75, 83, 87, 93, 94, 95, 134, 318, 323, 324], "n": [3, 6, 7, 24, 27, 32, 33, 40, 71, 75, 87, 93, 102, 109, 114, 141, 175, 209, 214, 223, 229, 237, 251, 285, 308, 310, 313, 314, 315, 318, 321, 324], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 83, 118, 166, 169, 171, 175, 187, 188, 196, 197, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 215, 216, 217, 219, 224, 226, 229, 231, 232, 233, 235, 237, 240, 242, 244, 250, 251, 252, 253, 254, 255, 284, 300, 308, 312, 314, 315, 317, 318, 319, 320], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 71, 72, 75, 87, 88, 89, 93, 100, 114, 124, 125, 128, 140, 142, 145, 147, 155, 157, 163, 173, 181, 204, 213, 214, 215, 216, 223, 224, 226, 227, 229, 235, 237, 239, 240, 241, 242, 244, 252, 276, 288, 307, 312, 313, 314, 318, 319, 321, 323, 324], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 52, 63, 71, 75, 77, 86, 87, 93, 102, 134, 142, 145, 169, 171, 211, 223, 224, 226, 227, 229, 235, 237, 239, 240, 241, 242, 244, 247, 312, 315, 321, 323], "mark": [3, 16, 71, 75, 87, 93, 169, 171], "trail": [3, 145], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 71, 72, 75, 82, 86, 87, 88, 89, 93, 99, 103, 125, 131, 136, 137, 145, 154, 167, 171, 172, 209, 225, 229, 232, 236, 237, 239, 240, 244, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 288, 308, 309, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "treat": 3, "figur": [3, 312, 314, 315, 318, 319, 324], "summar": [3, 319], "brief": [3, 314], "popul": [3, 38, 117, 136, 312, 314, 315, 319, 321], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 71, 75, 87, 93, 102, 104, 105, 107, 110, 111, 114, 117, 120, 122, 124, 126, 128, 131, 134, 136, 144, 145, 154, 155, 169, 176, 177, 204, 205, 211, 212, 224, 242, 252, 253, 254, 255, 308, 312, 314, 315, 318, 319, 320, 321, 324], "deliveri": 3, "step_mdp": [3, 169, 171, 306, 315, 319, 323, 324], "design": [3, 13, 14, 32, 33, 71, 75, 87, 93, 102, 125, 140, 204, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 312, 313, 314, 315, 317, 318, 319, 321, 324], "metaclass": 3, "ensur": [3, 32, 35, 41, 58, 62, 71, 75, 87, 93, 102, 124, 134, 142, 145, 205, 308, 313, 314, 319, 321], "everi": [3, 8, 17, 26, 28, 32, 33, 63, 71, 75, 87, 93, 134, 135, 145, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 288, 310, 312, 313, 314, 315, 318, 319], "flank": [3, 315], "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 71, 75, 83, 87, 88, 89, 93, 96, 102, 111, 118, 134, 135, 139, 140, 145, 157, 176, 177, 178, 179, 203, 205, 210, 211, 214, 217, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 250, 288, 300, 310, 312, 313, 314, 315, 318, 319, 320, 321, 324], "dual": 3, "strictli": [3, 8, 32, 71, 75, 87, 93, 140, 242, 312, 314], "refer": [3, 7, 8, 9, 21, 32, 40, 71, 75, 87, 93, 140, 145, 156, 166, 167, 175, 176, 177, 178, 183, 184, 189, 190, 206, 223, 230, 231, 232, 233, 239, 242, 252, 257, 265, 312, 313, 314, 318, 320], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 58, 71, 75, 87, 93, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 116, 117, 120, 121, 124, 125, 127, 128, 129, 130, 131, 135, 137, 138, 139, 140, 142, 144, 145, 154, 157, 159, 160, 161, 162, 164, 166, 168, 172, 173, 176, 177, 178, 179, 180, 181, 185, 187, 188, 193, 194, 195, 196, 213, 229, 234, 240, 243, 265, 271, 282, 284, 285, 293, 294, 297, 298, 300, 301, 302, 303, 304], "signal": [3, 17, 52, 75, 102, 111, 134, 137, 155, 309, 312, 314, 318, 321, 324], "interpret": [3, 313], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 52, 62, 71, 75, 87, 93, 114, 120, 125, 137, 157, 169, 171, 172, 173, 176, 177, 183, 191, 197, 203, 204, 207, 214, 313, 314, 315, 318, 319, 320, 321, 323, 324], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 71, 75, 87, 93, 102, 103, 134, 136, 140, 155, 157, 173, 176, 177, 179, 209, 211, 212, 220, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 292, 304, 307, 310, 314, 315, 319, 321, 324], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 71, 75, 87, 88, 89, 93, 111, 112, 119, 128, 134, 155, 169, 171, 195, 258, 312, 314, 315, 317, 321, 323, 324], "carri": [3, 21, 45, 71, 75, 87, 93, 136, 237, 313, 315, 318, 319, 321], "look": [3, 5, 7, 8, 32, 71, 75, 82, 87, 88, 89, 93, 124, 125, 142, 210, 214, 215, 216, 309, 314, 315, 318, 319, 320, 321, 323, 324], "assess": [3, 96, 312], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 306], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 114], "reli": [3, 223, 309, 312, 314, 319, 324], "traj_id": [3, 13, 14, 16, 23, 128, 315, 321, 323], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 71, 75, 87, 93, 136, 140, 154, 215, 216, 242, 307, 312, 315], "context": [3, 5, 8, 32, 71, 72, 75, 86, 87, 93, 136, 141, 179, 180, 204, 248, 249, 252, 253, 254, 255, 257, 265, 284, 308, 309, 312, 313, 314, 318, 319, 320, 321], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 79, 82, 87, 88, 89, 93, 107, 110, 125, 173, 187, 214, 215, 216, 220, 252, 253, 254, 255, 308, 312, 313, 314, 317, 318, 319, 320, 321, 324], "inittrack": [3, 169, 171, 312, 315], "our": [3, 7, 8, 18, 102, 308, 312, 313, 314, 315, 317, 318, 320, 321, 323], "tutori": [3, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 71, 72, 75, 78, 87, 93, 157, 173, 179, 309, 310, 312, 313, 314, 315, 318, 319, 321], "scratch": [3, 8, 313, 319], "better": [3, 8, 9, 169, 171, 309, 314, 319], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 71, 75, 82, 87, 88, 89, 91, 92, 93, 102, 114, 118, 122, 136, 137, 141, 145, 157, 167, 168, 169, 171, 173, 180, 181, 214, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 304, 308, 312, 313, 314, 315, 319, 321, 324], "intens": [3, 8], "gym3": 3, "envpool": [3, 84, 85], "interfac": [3, 78, 86, 173, 180, 308, 312, 314, 319, 321], "simultan": [3, 20, 87, 93, 319], "often": [3, 8, 234, 288, 312, 313, 319, 321, 324], "competit": [3, 318], "advantag": [3, 8, 168, 223, 225, 236, 239, 241, 252, 253, 254, 255, 256, 257, 259, 261, 263, 265, 266, 268, 309, 310, 312, 313, 314, 315, 318, 319, 324], "scale": [3, 4, 52, 102, 118, 120, 130, 135, 138, 167, 170, 182, 189, 190, 194, 195, 200, 201, 202, 210, 214, 216, 223, 224, 235, 239, 240, 241, 242, 286, 292, 297, 304, 308, 312, 313, 314, 315, 318, 323], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 71, 75, 87, 88, 89, 93, 313, 314, 318, 319], "As": [3, 4, 71, 75, 82, 87, 88, 89, 93, 128, 214, 252, 308, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324], "inherit": [3, 174, 237, 310, 314, 318], "serialenv": [3, 71, 75, 87, 136, 306, 324], "enjoi": 3, "exact": 3, "Of": [3, 7, 307, 319, 324], "cours": [3, 4, 307, 314, 319, 324], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 71, 75, 83, 84, 87, 93, 124, 136, 140, 144, 145, 169, 171, 176, 177, 207, 209, 210, 214, 227, 229, 242, 250, 252, 253, 254, 255, 256, 312, 313, 314, 318, 319, 320], "count": [3, 72, 134, 209, 284, 288, 291, 312, 313, 314, 315, 321, 324], "def": [3, 11, 22, 32, 71, 72, 75, 83, 87, 93, 99, 100, 107, 110, 156, 166, 175, 218, 224, 226, 229, 235, 237, 240, 242, 244, 310, 312, 313, 317, 318, 319, 323, 324], "make_env": [3, 95, 145, 293, 294, 312, 313, 324], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 71, 72, 75, 77, 87, 93, 102, 105, 106, 111, 117, 118, 120, 122, 126, 128, 131, 136, 137, 139, 140, 145, 169, 171, 297, 300, 306, 308, 312, 313, 314, 315, 320, 321, 323, 324], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 71, 72, 75, 84, 87, 93, 102, 105, 112, 117, 118, 120, 126, 128, 131, 134, 136, 137, 139, 169, 171, 247, 261, 262, 263, 264, 266, 267, 268, 269, 308, 313, 315, 319, 321, 323, 324], "from_pixel": [3, 69, 70, 102, 297, 312, 313, 315, 320, 321, 323, 324], "9": [3, 7, 32, 35, 38, 41, 82, 88, 89, 135, 145, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 245, 250, 309, 312, 313, 314, 315, 318, 319, 321, 322], "81": [3, 312, 319], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 68, 71, 75, 78, 81, 83, 87, 90, 91, 92, 93, 100, 101, 102, 103, 105, 106, 108, 109, 118, 119, 120, 124, 128, 131, 135, 136, 137, 138, 139, 140, 142, 144, 145, 147, 156, 157, 159, 160, 162, 163, 167, 169, 170, 171, 173, 175, 177, 178, 179, 180, 181, 182, 185, 189, 190, 193, 194, 195, 197, 199, 203, 204, 206, 207, 209, 212, 213, 216, 217, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 250, 251, 252, 253, 254, 255, 258, 259, 260, 279, 286, 300, 304, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 71, 72, 75, 87, 88, 89, 93, 105, 111, 115, 118, 120, 122, 132, 136, 140, 141, 145, 157, 166, 169, 171, 173, 176, 177, 178, 179, 188, 199, 205, 206, 210, 211, 212, 213, 214, 217, 218, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 243, 244, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 297, 312, 313, 314, 315, 317, 319, 320, 321, 323], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 99, 102, 103, 107, 108, 109, 110, 117, 120, 126, 128, 131, 134, 136, 137, 138, 145, 151, 154, 155, 157, 163, 166, 169, 173, 176, 177, 178, 179, 182, 185, 188, 199, 200, 201, 202, 204, 205, 207, 209, 211, 213, 216, 218, 237, 297, 300, 308, 310, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "simpli": [3, 6, 34, 36, 39, 45, 112, 132, 237, 308, 309, 312, 314, 318, 324], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 178, 179, 180, 181, 187, 196, 217, 252, 253, 254, 255, 256, 258, 271, 308, 313, 321], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 120, 138, 313, 321], "d": [3, 35, 53, 54, 58, 214, 323], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 72, 87, 93, 100, 103, 107, 109, 110, 118, 120, 125, 135, 136, 138, 145, 199, 207, 210, 211, 214, 252, 253, 254, 255, 256, 275, 308, 312, 313, 314, 315, 318, 319, 321, 323, 324], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 313, 318, 319], "_reset": [3, 71, 75, 83, 87, 93, 100, 102, 107, 110, 155, 156, 175], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 107, 110, 111, 112, 122, 126, 128, 132, 134, 136, 140, 154, 156, 166, 169, 171, 175, 187, 188, 196, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 212, 213, 216, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 292, 297, 307, 308, 313, 314, 315, 317, 318, 319, 321, 323, 324], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 68, 69, 70, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 107, 109, 110, 111, 112, 114, 118, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 141, 142, 144, 145, 147, 154, 155, 156, 157, 159, 160, 169, 170, 171, 173, 175, 178, 179, 180, 181, 194, 195, 199, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 250, 252, 253, 254, 255, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 281, 282, 284, 285, 286, 288, 297, 304, 313, 314, 315, 317, 318, 319, 321, 323, 324], "pixel": [3, 7, 26, 102, 104, 111, 114, 116, 120, 122, 124, 127, 138, 142, 144, 159, 183, 184, 271, 297, 308, 312, 313, 315, 320, 321, 323, 324], "500": [3, 312, 313, 314, 319, 322, 323, 324], "uint8": [3, 47, 111, 122, 138, 313, 321, 323, 324], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 93, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 110, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 223, 224, 226, 227, 229, 230, 231, 235, 237, 238, 239, 240, 241, 242, 243, 244, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 297, 300, 302, 303, 304, 308, 310, 312, 313, 314, 315, 318, 319, 321, 323, 324], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 107, 110, 111, 112, 122, 126, 128, 132, 134, 136, 145, 154, 156, 166, 169, 171, 175, 187, 188, 196, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 212, 213, 216, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 297, 308, 314, 315, 317, 318, 319, 321, 323, 324], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 93, 107, 110, 145, 155, 169, 171, 209, 210, 214, 312, 313, 317, 318, 324], "launch": [3, 13, 14, 18, 19, 20, 22, 87, 93], "start": [3, 4, 5, 13, 21, 45, 72, 82, 154, 283, 312, 313, 318, 319, 321, 324], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 71, 75, 87, 93, 136, 145, 215, 216, 314, 315, 318, 319, 324], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 71, 75, 87, 93, 128, 140, 203, 209, 286, 310, 313, 314, 315, 319, 321, 324], "great": [3, 7, 8, 323], "speedup": [3, 8, 324], "precis": [3, 107, 110, 154, 312, 314], "anoth": [3, 8, 34, 36, 39, 71, 75, 79, 87, 93, 107, 108, 110, 136, 139, 173, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 308, 309, 312, 314, 315, 317, 318, 319, 324], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 71, 75, 79, 87, 93, 125, 324], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 71, 72, 75, 84, 87, 93, 102, 107, 110, 111, 124, 128, 137, 144, 145, 154, 205, 209, 213, 243, 252, 253, 254, 255, 256, 258, 288, 290, 304, 307, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 96, 102, 113, 119, 128, 137, 140, 147, 203, 207, 209, 242, 312, 314, 318, 320, 321], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 78, 99, 102, 105, 107, 110, 118, 126, 145, 147, 151, 179, 182, 197, 252, 253, 254, 255, 279, 287, 317, 321, 324], "mismatch": [3, 313], "mostli": [3, 17, 309, 321, 324], "purpos": [3, 7, 102, 300, 312, 314, 315, 318, 320, 324], "want": [3, 6, 7, 8, 120, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 308, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324], "subprocess": [3, 13, 14, 72, 87, 93], "addit": [3, 4, 32, 52, 71, 75, 84, 87, 93, 106, 124, 136, 139, 140, 142, 144, 203, 204, 213, 222, 237, 252, 309, 312, 313, 318, 321], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 84, 85, 321], "multithreadedenv": [3, 306], "underneath": 3, "higher": [3, 4, 105, 217, 312, 313, 314, 321, 324], "restrict": [3, 313, 320, 321, 324], "flexibl": [3, 9, 84, 245, 309, 310, 321, 324], "cover": [3, 307, 314, 319, 323], "popular": [3, 308, 315, 318], "atari": [3, 4, 102, 324], "classic": [3, 83, 89, 313], "benchmark_batched_env": 3, "py": [3, 99, 187, 196, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324], "pipelin": [3, 7, 308, 314], "seamlessli": [3, 319], "modif": [3, 5, 26, 28, 32, 71, 75, 87, 93, 114, 155, 237, 314, 319], "infrastructur": [3, 318], "view": [3, 8, 27, 32, 33, 71, 75, 87, 93, 100, 166, 173, 319, 321, 323, 324], "core": [3, 8, 297, 310, 315, 323], "decis": [3, 158, 186, 204, 228, 238, 315, 318, 321, 324], "act": [3, 4, 88, 89, 179, 224, 226, 235, 240, 242, 244, 315, 318], "world": [3, 5, 83, 219, 232, 318, 319, 324], "paradigm": [3, 17, 318], "decpodp": 3, "markov": [3, 324], "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 71, 75, 87, 93, 109, 119, 129, 140, 147, 157, 169, 171, 173, 178, 179, 206, 210, 214, 223, 225, 226, 229, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 247, 252, 284, 288, 309, 312, 313, 315, 318, 319, 324], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 71, 75, 83, 87, 93, 135, 140, 145, 237, 242, 291, 308, 310, 312, 313, 314, 315, 318, 319, 321, 324], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 79, 87, 88, 89, 105, 131, 167, 178, 179, 207, 288, 302, 303, 312, 313, 314, 315, 318, 321, 323], "accommod": [3, 13, 14, 16, 17], "thank": [3, 312], "carrier": [3, 314, 315, 321], "particular": [3, 32, 45, 52, 71, 75, 87, 93, 140, 309, 310, 313, 315, 317, 318, 321], "thu": [3, 236, 318], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 96, 308, 313, 314, 318], "hand": [3, 7, 21, 318, 319], "kept": [3, 13, 14, 16, 17, 62, 87, 93, 109, 132, 139, 147, 154, 170, 194, 195], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 71, 75, 87, 93, 107, 108, 110, 136, 138, 140, 147, 171, 173, 179, 210, 213, 214, 216, 217, 222, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 252, 253, 254, 255, 279, 290, 302, 303, 304, 308, 310, 312, 313, 314, 315, 318, 319, 321, 324], "let": [3, 6, 7, 32, 43, 71, 75, 87, 88, 89, 93, 102, 169, 171, 178, 179, 205, 284, 309, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "understand": [3, 8, 312, 313, 318], "go": [3, 7, 82, 125, 128, 204, 258, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "vma": [3, 94, 95, 318], "robot": [3, 5, 7, 124, 142, 144, 318], "what": [3, 8, 35, 44, 71, 75, 87, 93, 111, 136, 154, 211, 307, 308, 309, 313, 314, 315, 318, 319, 320, 321, 323, 324], "vmasenv": [3, 306, 318], "balanc": [3, 312, 313], "num_env": [3, 21, 78, 94, 95, 318], "n_agent": [3, 94, 95, 178, 179, 187, 196, 250, 318], "5": [3, 24, 26, 28, 35, 38, 41, 42, 72, 81, 84, 91, 92, 94, 95, 128, 134, 156, 157, 166, 167, 170, 172, 173, 175, 178, 179, 183, 188, 194, 195, 204, 205, 211, 217, 236, 239, 241, 244, 308, 312, 313, 318, 319, 321, 322, 323, 324], "td": [3, 15, 26, 67, 68, 69, 70, 74, 76, 80, 81, 100, 103, 107, 108, 109, 110, 117, 118, 120, 128, 131, 135, 136, 138, 140, 145, 154, 156, 166, 169, 171, 174, 175, 187, 188, 196, 199, 200, 201, 202, 204, 205, 207, 209, 210, 211, 213, 216, 218, 250, 253, 254, 255, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 279, 287, 297, 308, 309, 312, 315, 318, 319, 323, 324], "info": [3, 35, 38, 41, 42, 52, 53, 71, 75, 87, 88, 89, 90, 91, 92, 93, 94, 95, 142, 146, 318, 321], "ground_rew": 3, "pos_rew": [3, 318], "16": [3, 32, 71, 75, 87, 93, 102, 312, 315, 318, 319, 321], "root": [3, 26, 28, 102, 137, 154, 170, 194, 195, 315, 318, 319, 321, 324], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 114, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 313, 319], "vari": [3, 88, 89, 125, 318], "creation": [3, 87, 93, 312, 324], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 71, 75, 87, 93, 124, 128, 131, 140, 144, 182, 188, 206, 210, 212, 213, 214, 252, 253, 254, 255, 279, 291, 312, 313, 314, 315, 318, 319, 321, 323, 324], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 72, 128, 138, 145, 236, 244, 309, 310, 312, 314, 315, 318, 319, 321, 323], "append": [3, 8, 35, 38, 41, 42, 52, 53, 72, 105, 128, 136, 169, 171, 205, 211, 312, 313, 314, 315, 318, 319, 320, 321, 323], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 71, 75, 87, 93, 100, 155, 227, 229, 250, 306, 314, 318, 324], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 71, 75, 79, 82, 87, 88, 89, 91, 92, 93, 99, 145, 307, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "simpl": [3, 9, 32, 33, 71, 75, 87, 93, 159, 214, 227, 237, 241, 252, 308, 309, 312, 313, 314, 318, 324], "composit": [3, 26, 28, 71, 75, 87, 93, 314, 319], "prefix": [3, 23, 32, 34, 36, 39, 45, 71, 75, 87, 93, 140, 237, 242, 270, 315, 324], "exactli": [3, 32, 71, 75, 77, 87, 93, 140, 242, 312, 315, 318], "action_kei": [3, 15, 71, 75, 87, 93, 100, 109, 154, 156, 174, 175, 203, 207, 209, 318], "reward_kei": [3, 71, 75, 87, 93, 154, 156, 175, 282, 286, 318], "done_kei": [3, 71, 75, 87, 93, 111, 128, 134, 154, 318], "automat": [3, 5, 55, 56, 65, 71, 75, 87, 88, 89, 93, 107, 110, 120, 199, 210, 308, 312, 314, 318, 319, 321, 323], "right": [3, 6, 7, 40, 172, 313, 314, 318, 319, 324], "sure": [3, 4, 7, 53, 63, 79, 128, 205, 304, 308, 312, 314, 315, 318, 319, 321, 323, 324], "set_kei": [3, 111, 223, 224, 225, 227, 229, 230, 235, 236, 237, 239, 240, 241, 242, 250, 256, 318], "awai": [3, 314, 318], "eas": [3, 318], "access": [3, 7, 8, 32, 35, 53, 71, 75, 87, 93, 124, 142, 304, 307, 312, 318, 319, 321], "leaf": [3, 26, 28, 71, 75, 87, 93, 134, 214], "abov": [3, 7, 32, 71, 75, 87, 93, 170, 194, 195, 222, 309, 310, 312, 314, 318, 319, 324], "would": [3, 32, 40, 71, 75, 87, 93, 169, 171, 173, 178, 310, 313, 314, 315, 319, 321, 324], "full": [3, 71, 75, 87, 93, 206, 279, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "raw": [3, 4, 40, 170, 194, 195, 313, 319], "logic": 3, "torchvis": [3, 124, 144, 323, 324], "transformedenv": [3, 13, 71, 72, 75, 87, 93, 100, 102, 105, 106, 107, 110, 111, 112, 114, 117, 118, 119, 120, 122, 126, 128, 131, 132, 134, 136, 137, 139, 145, 169, 171, 297, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "primit": [3, 4, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244], "built": [3, 5, 7, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 245, 250, 298, 300, 301, 304, 312, 313, 314, 315, 321, 324], "base_env": [3, 71, 75, 87, 93, 100, 105, 107, 109, 110, 118, 122, 134, 136, 137, 312, 313, 314, 320, 323, 324], "totensorimag": [3, 102, 313, 315, 321, 323, 324], "in_kei": [3, 13, 14, 16, 17, 21, 83, 101, 102, 103, 104, 105, 107, 109, 110, 114, 116, 118, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 135, 137, 138, 139, 140, 142, 144, 145, 156, 165, 169, 171, 175, 187, 196, 197, 199, 200, 201, 202, 204, 205, 210, 211, 213, 214, 216, 217, 218, 223, 224, 225, 226, 227, 229, 235, 236, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 270, 271, 297, 300, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "resiz": [3, 102, 313, 315, 321, 324], "64": [3, 102, 159, 160, 168, 169, 171, 179, 187, 250, 312, 313, 314, 315, 317, 319, 321, 323, 324], "now": [3, 7, 35, 102, 179, 312, 313, 314, 315, 317, 318, 320, 321, 324], "appar": [3, 281], "bring": [3, 314, 324], "signific": [3, 5, 8, 314, 324], "kind": [3, 38, 44, 154, 321], "consult": 3, "interest": [3, 210, 214, 308, 313, 314, 318, 319, 324], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 83, 101, 102, 103, 104, 105, 107, 110, 114, 116, 118, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 135, 137, 138, 139, 142, 144, 145, 156, 165, 166, 169, 171, 175, 187, 188, 196, 197, 199, 200, 201, 202, 204, 206, 210, 211, 212, 213, 214, 216, 217, 218, 223, 224, 225, 229, 235, 236, 239, 240, 241, 242, 250, 252, 253, 254, 255, 271, 284, 300, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "easi": [3, 5, 53, 203, 207, 209, 308, 309, 312, 313, 314, 318, 320, 321, 324], "graph": [3, 4, 8, 248, 249, 312, 319], "inv": [3, 105, 109, 122, 128, 319], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 87, 93, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 123, 125, 126, 128, 131, 132, 134, 135, 136, 137, 139, 140, 142, 143, 145, 194, 205, 252, 283, 310, 312, 313, 314, 319, 323, 324], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 107, 110, 122, 140, 199, 205, 213, 215, 216, 218, 223, 224, 226, 229, 235, 239, 240, 241, 242, 244, 313, 318], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 106, 109, 157, 216, 324], "taken": [3, 71, 75, 87, 93, 176, 177, 309, 312, 314, 315, 318, 319], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 102, 107, 110, 120, 128, 221, 235, 319], "in_keys_inv": [3, 105, 107, 110, 120, 121, 122, 126, 128, 139, 312, 317, 319, 324], "append_transform": [3, 35, 38, 41, 42, 52, 53, 124, 136, 142, 312, 315, 319, 323, 324], "doubletofloat": [3, 297, 312, 314, 317], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 107, 110, 111, 112, 120, 122, 126, 128, 132, 134, 136, 138, 151, 154, 156, 166, 169, 171, 175, 187, 188, 196, 199, 200, 201, 202, 204, 205, 209, 210, 211, 212, 213, 216, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 297, 308, 314, 315, 317, 318, 319, 321, 323, 324], "float64": [3, 32, 71, 75, 87, 93, 106, 107, 110, 124, 136, 139, 140, 142, 144, 213, 317, 324], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 107, 110, 111, 140, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 310, 312, 314, 321], "manipul": [3, 4, 8, 124, 142], "keep": [3, 4, 7, 8, 14, 42, 62, 120, 124, 144, 145, 154, 209, 281, 288, 312, 313, 314, 315, 318, 319, 321, 323, 324], "mind": [3, 318], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 109, 111, 154, 207, 308, 321], "unexpect": [3, 32, 71, 75, 87, 93, 140, 242, 324], "behviour": 3, "fortun": [3, 315], "eras": [3, 71, 75, 87, 93], "ident": [3, 13, 14, 16, 32, 87, 93, 111, 178, 179, 252, 253, 254, 255, 302, 303, 313, 318], "alreadi": [3, 8, 11, 32, 45, 71, 75, 87, 93, 136, 155, 214, 252, 253, 254, 255, 312, 314, 318], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 71, 72, 75, 87, 93, 106, 111, 124, 136, 139, 140, 142, 144, 145, 155, 204, 213, 285, 290, 291, 313, 314, 318, 319, 321], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 71, 75, 87, 93, 106, 107, 108, 110, 112, 118, 126, 132, 134, 139, 140, 145, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 309, 312, 314, 315, 318, 319, 320, 321, 324], "happen": [3, 71, 75, 87, 93, 203, 313, 320, 324], "catfram": [3, 313], "hold": [3, 248, 249, 319, 321], "notic": [3, 102, 314, 319], "parenthood": 3, "reason": [3, 4, 8, 32, 71, 75, 87, 88, 89, 93, 124, 142, 171, 309, 312, 313, 314, 319, 321], "henc": [3, 35, 125, 155, 178, 308, 312, 314, 318, 319], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 319], "discret": [3, 24, 27, 30, 31, 33, 47, 71, 75, 87, 88, 89, 93, 109, 185, 188, 229, 230, 308, 313, 314, 318, 324], "might": [3, 37, 135, 275, 307, 312, 324], "throughout": [3, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 314, 324], "action_mask": [3, 88, 89, 91, 92, 100], "unavail": [3, 88, 89], "probabl": [3, 4, 8, 40, 164, 166, 169, 171, 173, 176, 177, 185, 195, 207, 210, 214, 308, 313, 323], "categor": [3, 27, 31, 33, 88, 89, 100, 111, 166, 185, 188, 205, 206, 211, 212, 227, 229, 250, 315], "probabilistictensordictmodul": [3, 118, 214, 215, 323], "tensordictsequenti": [3, 169, 171, 205, 207, 215, 308, 312, 315, 317, 320, 323], "maskedcategor": [3, 177, 306], "linear": [3, 13, 14, 16, 17, 21, 32, 71, 75, 83, 87, 93, 106, 118, 124, 136, 139, 140, 142, 144, 156, 157, 166, 173, 175, 178, 179, 180, 181, 182, 188, 189, 190, 199, 200, 201, 202, 207, 208, 209, 210, 211, 213, 216, 218, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 300, 308, 313, 317, 320, 323], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 176, 177, 185, 206, 229, 308], "dist": [3, 10, 176, 177, 185], "distribution_class": [3, 118, 200, 201, 202, 204, 210, 214, 216, 223, 224, 229, 235, 239, 240, 241, 242, 308, 312, 314, 318, 323], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 71, 75, 87, 88, 89, 93, 147, 169, 171, 197, 200, 201, 202, 203, 209, 211, 219, 250, 308, 312, 313, 314, 315, 318, 324], "actionmask": 3, "updat": [3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 71, 75, 83, 87, 88, 89, 93, 100, 107, 109, 110, 134, 135, 140, 143, 145, 155, 156, 169, 171, 175, 203, 207, 209, 210, 211, 212, 213, 214, 223, 224, 226, 227, 229, 230, 231, 234, 235, 237, 239, 240, 241, 242, 243, 244, 250, 252, 253, 254, 255, 256, 284, 288, 290, 293, 294, 299, 300, 310, 313, 314, 315, 318, 319, 321, 323, 324], "know": [3, 4, 9, 35, 38, 41, 42, 203, 240, 284, 312, 313, 314, 315, 318, 321], "your_base_env": 3, "mask_kei": [3, 100, 125], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 71, 75, 87, 93, 102, 118, 169, 171, 180, 208, 223, 283, 314, 315, 318, 319, 321, 323], "enviorn": [3, 88, 89, 318], "itself": [3, 32, 71, 75, 87, 93, 97, 237, 314], "log": [3, 4, 8, 40, 164, 165, 166, 176, 177, 185, 195, 205, 206, 210, 214, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 281, 282, 284, 288, 300, 308, 309, 310, 312, 313, 314, 318, 319, 323], "mission": 3, "irrespect": [3, 213, 214], "dmcontrol": [3, 312], "jumanji": [3, 80, 81], "natur": [3, 312, 315], "special": [3, 308, 312, 315, 324], "statu": 3, "framework": [3, 4, 9, 22, 83, 323, 324], "Its": [3, 32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 145, 213, 256], "success": [3, 102, 139, 207, 313, 319, 321, 323], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 71, 75, 79, 87, 93, 118, 134, 139, 203, 209, 312, 313, 314, 315, 317, 318, 319, 321, 324], "foundat": [3, 5, 88, 89, 314, 318], "inspir": [3, 319], "howev": [3, 5, 7, 32, 71, 75, 87, 93, 102, 131, 135, 140, 242, 308, 312, 313, 314, 315, 321, 324], "gone": [3, 4, 5], "sometim": [3, 315, 324], "hard": [3, 7, 234, 313, 324], "adopt": [3, 5, 312, 324], "prefer": [3, 17, 20, 35, 38, 41, 42, 125, 132, 239, 285, 308, 314, 318, 321], "moreov": 3, "maintain": [3, 5, 9, 319], "both": [3, 7, 32, 71, 72, 75, 87, 88, 89, 93, 102, 126, 140, 155, 157, 169, 171, 173, 178, 179, 200, 201, 202, 206, 212, 223, 225, 226, 229, 235, 236, 237, 239, 240, 241, 242, 244, 284, 308, 312, 314, 318, 319, 320, 321, 324], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 313, 314, 315, 318, 319, 321, 324], "decor": [3, 8, 11, 99, 237, 252, 253, 254, 255], "set_gym_backend": [3, 97, 306], "relev": [3, 40, 252, 253, 254, 255, 256, 319], "gym_backend": [3, 99, 306], "env1": [3, 317], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 71, 75, 87, 93, 99, 124, 144, 175, 288, 310, 313], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 99], "__init__": [3, 7, 83, 99, 100, 107, 110, 156, 166, 175, 218, 224, 226, 229, 235, 240, 242, 244, 310, 319, 320, 324], "env2": [3, 317], "_env": [3, 6, 324], "classic_control": 3, "pendulumenv": [3, 319], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 314], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 77, 84, 87, 93, 102, 125, 135, 136, 137, 139, 140, 148, 149, 154, 167, 172, 190, 209, 230, 242, 274, 310, 312, 313, 314, 315, 318, 319, 323, 324], "tell": [3, 4, 7, 88, 89, 312, 315, 318], "mo_gymnasium": [3, 97], "handi": 3, "side": [3, 4, 324], "v0": [3, 74, 75, 76, 80, 81, 106, 140, 145, 300], "26": [3, 312, 319, 321], "fun": [3, 11, 99, 314, 318], "reveal": 4, "bug": [4, 323], "curv": 4, "won": [4, 32, 71, 72, 75, 87, 93, 124, 144, 288, 304, 313, 314], "exploit": 4, "video": [4, 9, 271, 284, 304, 318], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 71, 75, 79, 87, 93, 107, 110, 125, 131, 211, 313, 314, 315, 318, 319], "cv": 4, "flip": 4, "imag": [4, 7, 69, 104, 124, 138, 144, 173, 312, 313, 318, 320, 324], "correspondingli": 4, "prescript": 4, "tune": [4, 118, 318, 320], "coeffici": [4, 40, 118, 318], "bonu": [4, 223, 225, 236, 239], "beta": [4, 35, 41, 58, 235, 236, 312, 313, 321, 323], "altern": [4, 27, 84, 163, 176, 177, 178, 222, 237, 312, 314, 318], "reduc": [4, 6, 27, 135, 313, 314], "downstream": [4, 312], "formul": [4, 318], "ob": [4, 8, 26, 28, 100, 107, 108, 110, 120, 138, 151, 154, 178, 179, 211, 218, 224, 226, 229, 235, 240, 242, 244, 252, 253, 254, 255, 313, 317, 319, 323, 324], "rate": [4, 145, 251, 313, 314, 318], "gradient": [4, 32, 71, 75, 87, 93, 140, 170, 177, 181, 185, 194, 195, 223, 225, 226, 229, 235, 236, 237, 239, 240, 241, 242, 244, 251, 252, 253, 254, 255, 288, 312, 314, 318, 319], "norm": [4, 8, 288, 312, 313, 314, 318, 319], "easier": [4, 308, 312], "behavior": [4, 32, 71, 75, 87, 93, 140, 235, 314, 318], "local": [4, 7, 10, 16, 21, 32, 71, 75, 87, 93, 140, 178, 179, 187, 196, 250, 276, 318], "optima": 4, "sens": [4, 319], "product": [4, 9, 302, 303], "sum": [4, 21, 31, 33, 131, 176, 177, 196, 232, 251, 258, 309, 312, 313, 314, 315, 318, 319, 324], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 131, 145, 209, 276, 281, 313, 315, 318, 319, 321], "stat": [4, 120, 292, 304, 313, 314], "w": [4, 102, 104, 127, 138, 209, 271, 313, 315, 321], "r": [4, 32, 100, 105, 120, 214, 222, 251, 308, 313, 319, 324], "yield": [4, 16, 21, 32, 71, 75, 87, 93, 237, 312], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 34, 36, 39, 71, 75, 87, 93, 140, 226, 227, 242, 314, 318, 321], "futur": [4, 32, 71, 75, 87, 93, 124, 140, 144, 173, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 307, 323], "past": [4, 313, 321], "spars": [4, 315], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 71, 75, 87, 93, 131, 140, 180, 181, 209, 223, 225, 227, 230, 236, 239, 242, 250, 313, 315, 321, 324], "intermedi": [4, 169, 171, 206, 312, 320], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 312], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 71, 75, 87, 93, 173, 314, 318], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 71, 75, 87, 93, 102, 103, 107, 109, 110, 120, 128, 151, 154, 156, 169, 171, 172, 176, 177, 179, 187, 196, 207, 209, 212, 220, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 258, 315, 323], "subtask": 4, "hierarch": [4, 323], "individu": [4, 18, 19, 20, 21, 32, 45, 71, 75, 87, 93, 312, 318], "select": [4, 15, 35, 38, 41, 42, 52, 53, 88, 89, 100, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 123, 125, 126, 128, 131, 132, 134, 135, 136, 137, 139, 142, 143, 145, 156, 169, 171, 205, 211, 287, 312, 321], "fall": [4, 52], "explicit": [4, 11, 45, 172, 321], "mechan": [4, 32, 71, 75, 87, 93, 140, 313, 319], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 71, 75, 87, 93, 235, 314, 318], "addition": 4, "timestep": [4, 40, 52, 128, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 318], "realli": 4, "larg": [4, 27, 107, 110, 142, 313, 314, 318, 321], "target": [4, 8, 21, 32, 71, 72, 75, 87, 93, 135, 139, 213, 214, 223, 224, 225, 226, 227, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 250, 251, 252, 253, 254, 255, 256, 291, 299, 300, 309, 310, 315, 319], "huge": [4, 179, 315], "std": [4, 120, 145, 182, 186, 203, 312, 324], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 315, 316, 317, 320, 321, 322], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 71, 75, 87, 93, 120, 124, 136, 139, 140, 142, 146, 156, 175, 180, 181, 203, 207, 209, 223, 224, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 244, 250, 297, 304, 313, 315, 319, 324], "estim": [4, 111, 118, 200, 201, 202, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 309, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "encount": [4, 307, 313, 319], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 88, 89, 312, 314, 318, 324], "bonus": 4, "denser": 4, "prior": [4, 190, 232, 318], "freshli": 4, "proper": [4, 6, 7, 252, 253, 254, 255, 313, 314, 318, 321], "doesn": [4, 11, 84, 107, 110], "drop": [4, 62, 154], "meant": [4, 83], "encourag": [4, 312, 313, 321], "measur": [4, 314], "novelti": 4, "revisit": 4, "previous": [4, 314, 324], "diminish": 4, "decreas": 4, "ideal": [4, 120, 319], "down": [4, 13, 14, 16, 17, 315], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 313, 314, 315, 318, 319, 323, 324], "distil": 4, "nois": [4, 146, 181, 198, 209, 240, 244, 284, 304, 312], "exploratori": [4, 223, 225, 236, 239], "could": [4, 6, 313, 314, 318, 320, 324], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 224, 226, 227, 229, 230, 235, 240, 242, 244, 250, 310, 312, 313, 321], "schedul": [4, 7, 40, 284, 314, 319], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 124, 144, 224, 226, 229, 240, 242, 244, 312, 313, 318, 321, 324], "divers": [4, 87, 93], "bootstrap": [4, 230, 253, 259, 260, 312, 315], "noisi": [4, 180, 181, 198, 308], "unstabl": [4, 170, 194, 195], "inher": 4, "stochast": [4, 118, 167, 181, 183, 190, 224, 228, 229, 235, 238, 240, 242, 308, 314, 318], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 169, 171, 175, 200, 201, 202, 237, 240, 310, 313], "pomdp": [4, 321], "previou": [4, 10, 32, 40, 41, 136, 155, 190, 204, 314, 315, 319, 324], "loos": [4, 308, 313, 314], "nonexist": 4, "architectur": [4, 163, 318], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 101, 102, 103, 104, 107, 109, 110, 114, 116, 120, 121, 125, 126, 127, 128, 129, 130, 131, 135, 137, 138, 139, 145, 157, 164, 166, 173, 176, 177, 178, 179, 185, 188, 192, 204, 215, 216, 228, 270, 271, 283, 284, 285, 287, 288, 297, 308, 312, 314, 315, 317, 318, 324], "rather": [4, 126, 312, 313, 314, 318], "lstm": [4, 171, 172, 182], "explicitli": [4, 313, 315, 318, 321], "rel": [4, 136, 164, 193, 312, 313, 318, 321], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 102, 313, 314, 321, 323, 324], "compens": 4, "descent": [4, 181], "1000": [4, 38, 71, 75, 87, 93, 102, 145, 207, 209, 210, 214, 234, 312, 313, 314, 315, 320, 321], "minimum": [4, 129, 167, 182, 193, 194, 195, 217, 220, 222, 224, 229, 237, 238, 242, 279, 312, 314, 318], "manual": [4, 18, 20, 21, 312, 315, 321], "deviat": [4, 120, 145, 156, 167, 175, 180, 181, 203, 239, 244, 312, 318], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "stabil": [4, 115], "stage": [4, 312, 319], "never": 4, "prevent": [4, 26, 28, 170, 194, 195, 236, 239, 286, 321], "solv": [4, 9, 10, 307, 312, 313, 314, 318, 319, 321], "entir": [4, 178, 314, 319, 321], "submit": [4, 307, 323], "suffici": [4, 312], "recommend": [4, 7, 79, 318], "system": [4, 5, 314, 318, 319], "adequ": [4, 147, 314, 318], "infeas": 4, "allevi": [4, 308], "prune": 4, "develop": [4, 7, 79, 312, 323], "fire": [4, 32, 71, 75, 87, 93], "certain": [4, 18, 20, 21, 32, 45, 71, 75, 87, 93, 99, 115, 134, 140, 207, 236, 308, 312, 313, 314, 318, 324], "illeg": 4, "move": [4, 21, 32, 71, 75, 87, 93, 106, 108, 124, 136, 139, 140, 142, 144, 145, 154, 173, 213, 286, 312, 313, 315, 323, 324], "chess": 4, "combin": [4, 139, 313, 321], "grasp": 4, "releas": [4, 7, 10, 32, 71, 75, 87, 93, 140, 242, 323], "top": [4, 156, 175], "p": [4, 72, 91, 92], "wherein": 4, "cumul": [4, 131, 135, 156, 258, 314], "q": [4, 9, 71, 75, 87, 93, 159, 160, 161, 162, 165, 166, 168, 187, 188, 196, 202, 206, 211, 212, 224, 226, 227, 229, 230, 234, 235, 240, 242, 244, 250, 297, 306, 312], "flow": [4, 312, 314, 318, 319, 321], "reparameter": [4, 164, 177, 185], "soft": [4, 234, 242, 243], "critic": [4, 8, 200, 208, 223, 225, 226, 229, 235, 236, 239, 240, 241, 242, 244, 312, 314], "clip": [4, 40, 105, 129, 225, 244, 288, 314, 318, 319], "oppos": [4, 45], "incorrect": 4, "thought": [4, 71, 75, 87, 93], "bound": [4, 17, 21, 25, 26, 32, 71, 75, 87, 93, 105, 119, 145, 189, 190, 199, 205, 206, 209, 210, 211, 212, 213, 214, 217, 244, 308, 312, 313, 314, 324], "region": 4, "squash": [4, 315, 323], "tanh": [4, 157, 170, 173, 179, 193, 194, 195, 217, 314, 318, 319, 320, 323], "correct": [4, 118, 135, 291, 314, 315], "prob": [4, 176, 177, 185, 314, 318], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 79, 108, 109, 118, 124, 140, 144, 210, 213, 214, 234, 237, 239, 297, 312, 317, 319, 324], "real": [5, 214, 309, 315, 319], "histor": 5, "wa": [5, 7, 71, 75, 87, 93, 140, 155, 234, 243, 258, 309, 313, 314, 317, 321, 323], "ceas": 5, "fork": 5, "farama": [5, 88, 89, 314, 319], "detail": [5, 6, 7, 32, 71, 75, 87, 88, 89, 93, 138, 140, 166, 206, 223, 230, 239, 307, 313, 317, 321], "usag": [5, 7, 52, 102, 111, 169, 171, 224, 235, 242, 245, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "known": [5, 7, 8, 259, 260, 312, 313], "bc": [5, 323], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 71, 75, 87, 93, 102, 128, 145, 313, 321, 323], "face": [5, 8, 9, 324], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 147, 199, 205, 206, 210, 211, 212, 213, 214, 314, 318], "13": [5, 10, 11, 90, 312, 319, 321], "construct": [5, 32, 35, 38, 41, 42, 71, 75, 87, 88, 93, 107, 110, 147, 169, 171, 190, 214, 288, 308, 313, 314, 315, 319, 321, 324], "best": [5, 9, 79, 169, 171, 318, 321, 323], "gymwrapp": [5, 71, 75, 87, 93, 112, 132, 134, 306, 314, 323], "feel": [5, 307, 323], "free": [5, 7, 107, 110, 223, 232, 239, 310, 314, 318, 323], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 109, 111, 312, 313, 314, 315, 318, 321], "prepar": [6, 314], "conda": [6, 7, 307], "assum": [6, 26, 33, 40, 41, 42, 52, 75, 87, 93, 104, 114, 124, 125, 131, 136, 142, 144, 151, 169, 171, 172, 197, 217, 227, 230, 242, 250, 261, 262, 263, 264, 266, 267, 268, 269, 271, 312, 314, 315, 317, 319], "7": [6, 10, 27, 33, 35, 38, 41, 156, 157, 172, 173, 175, 178, 258, 312, 314, 318, 319, 321, 323], "cmake": 6, "14": [6, 11, 120, 312, 315, 319, 321], "activ": [6, 7, 9, 157, 163, 167, 173, 178, 179, 225, 236, 239, 308, 323], "sim": 6, "bullet": 6, "physic": [6, 7, 90, 310, 312, 318, 319], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 307], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 315], "y": [6, 7, 86, 172, 178, 197, 312, 314, 318], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 71, 75, 87, 93, 133, 237, 318, 324], "command": [6, 7, 10, 314, 318, 319, 324], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 306], "_has_habitat": 6, "available_env": [6, 67, 68, 69, 70, 71, 74, 75, 76, 80, 81, 87, 91, 92, 93, 324], "startswith": [6, 309, 312], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 70, 87, 93, 99, 304, 310, 312, 321], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 72, 237, 312], "env_nam": [6, 67, 69, 74, 80, 84, 90, 312, 314, 324], "llvmlite": 6, "config": [6, 7, 124, 144, 158, 163, 186, 292, 293, 294, 297, 298, 301], "var": [6, 7, 32, 71, 75, 87, 93, 140, 237, 242], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 68, 71, 75, 87, 93, 157, 159, 160, 168, 173, 200, 201, 202, 210, 213, 216, 235, 312, 313, 315, 318, 319, 321, 322, 323], "bind": 6, "deactiv": [6, 7, 205], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 71, 75, 87, 93, 140, 237, 242, 321], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 313], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 317, 319], "joint": [7, 313], "dynam": [7, 235, 314, 319], "contact": [7, 37], "engin": [7, 90, 319], "biomechan": 7, "graphic": 7, "anim": [7, 318], "area": 7, "demand": [7, 324], "fast": [7, 9, 68, 126, 240, 312, 313, 314], "accur": [7, 52, 313, 319, 321], "articul": 7, "recent": [7, 11, 313, 320, 324], "acquir": [7, 314], "deepmind": [7, 8, 9, 69, 70, 111, 314], "whomev": 7, "licenc": 7, "incorpor": [7, 203, 207, 209, 315, 319], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 93, 119, 139, 271, 308, 309, 312, 313, 314, 318, 321, 324], "legaci": 7, "pro": [7, 307], "tip": [7, 307], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 324], "sudo": [7, 307], "enabl": [7, 8, 52, 55, 56, 65, 169, 171, 209, 284, 314, 318, 319, 321], "apt": [7, 318], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 313, 315], "fact": [7, 8, 312, 314, 318, 319, 320, 321, 324], "workflow": [7, 200, 201, 202], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 71, 75, 87, 93, 124, 142, 144, 315, 324], "binari": [7, 24, 27, 33, 101, 166, 188, 205, 206, 211, 212, 227, 229, 250], "setup": [7, 79], "mkdir": 7, "cd": 7, "tag": [7, 271, 276, 304], "earlier": [7, 312, 314, 315, 318, 321], "roboti": 7, "download": [7, 10, 52, 79, 124, 144, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324], "html": [7, 84], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 87, 93], "obtain": [7, 40, 71, 75, 87, 93, 124, 135, 144, 156, 187, 285, 312, 314, 318], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54], "bin": [7, 166, 206, 308], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 162, 210, 214, 312, 314, 321], "nvidia": [7, 79], "older": [7, 11], "hack": [7, 312], "line": [7, 32, 71, 75, 87, 93, 313, 318, 320], "adatp": 7, "script": [7, 147, 297, 300, 304, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "unnot": [7, 125], "until": [7, 21, 137, 139, 314, 315, 318], "complet": [7, 9, 62, 75, 102, 134, 307, 309, 312, 314, 317], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 313, 321], "troubleshoot": 7, "gl": 7, "h": [7, 102, 104, 127, 138, 169, 171, 175, 271, 313, 315, 321], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 72, 83, 88, 89, 91, 92, 94, 95, 100, 102, 135, 137, 138, 156, 158, 163, 172, 175, 186, 197, 207, 209, 217, 224, 227, 229, 239, 240, 241, 244, 250, 252, 253, 254, 255, 258, 279, 310, 312, 313, 314, 315, 318, 319, 321, 323, 324], "fatal": 7, "No": 7, "directori": [7, 45, 55, 276, 310], "devel": 7, "ubuntu": [7, 79], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 312, 314, 318, 319, 321, 322, 324], "disappear": [7, 313, 315, 317], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 81, 91, 92, 120, 122, 157, 164, 172, 173, 178, 179, 183, 193, 218, 297, 312, 313, 318, 319, 321, 322, 323, 324], "glibcxx_3": 7, "29": [7, 312, 319], "compil": [7, 32, 71, 75, 87, 93], "libosmesa": 7, "libgcc": 7, "Then": [7, 314, 317], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 71, 75, 87, 93, 119, 140, 242, 324], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 312, 319, 321], "114": [7, 319, 321], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 319], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 100, 147], "opengl": [7, 318], "global": [7, 32, 71, 75, 87, 88, 89, 93, 187, 196, 210, 214, 250, 310, 312, 318], "cuda_visible_devic": 7, "id": [7, 23, 40, 209, 240, 274, 297], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 319, 321], "correctli": [7, 32, 71, 75, 87, 93], "lgl": 7, "libegl": 7, "x11": [7, 318], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 75, 154, 203, 207, 209, 239, 288, 310, 312, 313, 317, 321], "sketch": [8, 310], "_": [8, 72, 79, 103, 107, 109, 110, 118, 120, 126, 138, 145, 199, 213, 218, 222, 223, 224, 226, 229, 235, 239, 240, 242, 244, 252, 253, 254, 255, 312, 313, 314, 315, 318, 319, 321, 323], "n_training_step": 8, "datapoint": [8, 45, 321], "onlin": [8, 13, 17, 102, 163, 186, 223, 228, 238, 239, 279, 304, 314, 315, 318, 321], "n_data_per_train": 8, "no_grad": [8, 32, 71, 75, 87, 93, 118, 252, 253, 254, 255, 314, 315, 318], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 285, 300, 312, 313, 314, 318, 321], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 128, 285, 310, 312, 313, 314, 315, 318, 320, 321, 323], "loss_fn": [8, 315, 323], "backward": [8, 32, 71, 75, 87, 93, 145, 223, 224, 226, 229, 235, 239, 240, 241, 242, 244, 312, 314, 315, 318, 319], "zero_grad": [8, 32, 71, 75, 87, 93, 310, 312, 314, 315, 318, 319], "backpropag": [8, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 318, 319], "differenti": [8, 45, 118, 252, 253, 254, 255, 315, 318, 319], "denomin": 8, "artifact": 8, "numer": [8, 38, 145, 170, 194, 195, 199, 205, 206, 210, 211, 212, 213, 214, 286, 314, 321, 324], "misconcept": 8, "save": [8, 32, 34, 36, 39, 71, 75, 87, 93, 270, 288, 310, 318], "freed": 8, "appear": [8, 33, 319, 321], "compuat": 8, "twice": 8, "fix": [8, 136, 224, 238, 242, 313, 319, 324], "retain_graph": 8, "discuss": [8, 9, 318], "inplac": [8, 32, 34, 36, 39, 71, 75, 87, 93, 140, 242, 312], "accumul": 8, "onto": [8, 33, 151, 199, 203, 205, 206, 209, 210, 211, 212, 213, 214, 315, 319], "exclud": [8, 52, 102, 112, 154, 187, 318, 321], "forward": [8, 32, 71, 75, 87, 93, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 123, 124, 125, 126, 128, 131, 132, 134, 135, 136, 137, 139, 142, 143, 145, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 178, 179, 180, 182, 183, 184, 186, 187, 189, 190, 192, 196, 197, 203, 204, 206, 207, 209, 212, 213, 214, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 309, 319, 323], "submodul": [8, 32, 71, 75, 87, 93, 97, 237], "param": [8, 32, 40, 71, 75, 83, 87, 93, 106, 107, 108, 112, 118, 126, 132, 134, 139, 164, 166, 193, 204, 210, 213, 216, 218, 237, 246, 249, 252, 253, 254, 255, 256, 312, 318, 319, 320, 323], "grad": [8, 32, 71, 75, 87, 93, 312, 314], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 87, 88, 89, 93, 106, 124, 136, 139, 140, 142, 144, 182, 187, 213], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 102, 114, 125, 141, 231, 309, 314, 318, 319], "ask": [8, 312, 314, 315, 318, 320, 324], "much": [8, 13, 14, 35, 41, 58, 87, 93, 236, 239, 314, 318, 319, 321, 324], "render": [8, 284, 312, 313, 314], "upon": [8, 319], "factor": [8, 32, 128, 170, 181, 194, 195, 203, 207, 209, 224, 230, 231, 233, 243, 258, 312, 313, 318, 321, 324], "fit": [8, 11, 120, 309, 310, 312], "bottlneck": 8, "affect": [8, 32, 71, 75, 87, 93, 139, 140, 147, 252, 253, 254, 255], "brax": [8, 67, 68, 126, 324], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 71, 75, 87, 93, 113, 140, 176, 177, 226, 227, 242, 279, 309, 310, 312, 314, 315, 318, 319, 321], "underli": [8, 71, 75, 87, 93, 237, 319], "tedeiou": 8, "priorit": [8, 35, 41, 58, 224, 226, 227, 229, 235, 240, 242, 244, 312, 313], "amount": [8, 209, 313, 321], "isn": [8, 34, 36, 39, 111, 205, 213, 318], "contigu": [8, 71, 75, 87, 93, 151, 314, 318, 319, 321, 323, 324], "costli": [8, 319], "concaten": [8, 21, 30, 31, 102, 103, 120, 139, 173, 216, 312, 313, 318, 319, 321, 324], "constitut": [8, 313, 318, 319], "plain": 8, "profil": 8, "fulli": [8, 32, 71, 75, 87, 93, 313, 319, 321], "frequent": [8, 321], "program": [8, 235, 324], "functorch": [8, 10], "incl": 8, "suit": [8, 70, 314, 324], "mujoco_instal": 8, "valueerror": [8, 320], "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 213, 216, 237, 318, 319, 323], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 84, 157, 173, 178, 179, 237, 314, 319, 323], "lost": 8, "permut": [8, 62, 122, 323, 324], "idea": [9, 240, 310, 315, 318], "introductori": 9, "intro": [9, 314, 315], "dai": [9, 323], "2022": [9, 10, 319, 323], "spin": 9, "deep": [9, 102, 159, 160, 161, 162, 165, 209, 223, 234, 242, 243, 312], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 120, 145, 312, 313, 314, 315], "reddit": 9, "reagent": 9, "orient": [9, 324], "baselines3": 9, "tf": 9, "bandit": [9, 86], "tensorflow": [9, 176, 177], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 71, 75, 87, 93, 118, 215, 216, 239, 308, 314, 315, 318, 319, 320, 324], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 323], "grade": 9, "factori": [9, 43], "throughput": [9, 312], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 71, 75, 87, 93, 105, 109, 151, 163, 166, 178, 184, 188, 199, 203, 205, 206, 209, 210, 211, 212, 213, 214, 216, 217, 218, 227, 229, 244, 250, 308, 313, 314, 315, 318, 319, 323, 324], "mbrl": [9, 83, 308], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 319], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 314, 315, 318], "notebook": [10, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324], "24": [10, 312, 319], "11": [10, 27, 33, 45, 55, 56, 65, 72, 138, 156, 175, 312, 314, 318, 319, 321, 322], "12": [10, 55, 56, 65, 91, 92, 312, 314, 319, 321, 322], "pip": [10, 53, 318, 323, 324], "pip3": [10, 314, 315, 318], "extra": [10, 32, 71, 75, 87, 93, 102, 145, 154, 308, 314, 315, 321], "url": 10, "org": [10, 35, 58, 102, 124, 142, 158, 159, 160, 161, 162, 163, 166, 167, 168, 175, 176, 177, 181, 183, 184, 186, 187, 189, 190, 196, 206, 209, 223, 224, 228, 230, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 252, 257, 265, 320], "whl": 10, "u": [10, 53, 319], "There": [10, 169, 171, 308, 310, 314, 315, 318, 319, 321, 324], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 237], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 69, 71, 73, 75, 86, 87, 88, 89, 90, 93, 96, 97, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 116, 117, 118, 120, 121, 124, 125, 127, 128, 129, 130, 131, 134, 135, 137, 138, 139, 140, 142, 144, 145, 148, 152, 154, 155, 156, 157, 159, 160, 161, 162, 165, 166, 168, 169, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 187, 188, 196, 199, 205, 206, 210, 211, 212, 213, 214, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 250, 251, 252, 253, 254, 255, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 297, 298, 304, 313, 314], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 71, 72, 75, 83, 87, 93, 99, 111, 222, 237, 293, 294, 302, 303, 304, 313], "from_vers": 11, "to_vers": 11, "intersect": [11, 134], "vs": [11, 169, 171, 172, 323], "longer": [11, 313, 318, 321], "self": [11, 26, 28, 32, 34, 36, 39, 71, 75, 83, 87, 93, 100, 106, 107, 110, 124, 136, 139, 140, 142, 144, 156, 166, 175, 187, 196, 203, 207, 213, 218, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 310, 312, 313, 319, 320, 323], "x": [11, 23, 26, 32, 38, 40, 118, 138, 157, 166, 168, 169, 171, 172, 173, 175, 178, 179, 197, 205, 211, 220, 222, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 288, 312, 314, 319, 321, 323], "23": [11, 313, 314, 319, 322], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 71, 72, 75, 87, 93, 99, 118, 136, 197, 205, 211, 231, 233, 252, 255, 263, 264, 268, 269, 300, 309, 312, 313, 318, 321, 323, 324], "import_modul": 11, "27": [11, 312, 319, 321], "get_class_that_defined_method": 11, "f": [11, 75, 222, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 312, 313, 314, 315, 318, 319, 321, 324], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 88, 89, 93, 109, 120, 136, 140, 145, 170, 178, 179, 194, 195, 205, 211, 217, 224, 232, 237, 238, 242, 284, 285, 310, 312, 313, 314, 315, 319, 324], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 142, 158, 186], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 71, 72, 75, 87, 88, 89, 93, 96, 118, 136, 140, 145, 157, 158, 159, 160, 161, 162, 163, 168, 172, 173, 186, 210, 214, 242, 275, 276, 284, 293, 294, 297, 302, 303, 304, 312, 313, 314, 324], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 71, 75, 87, 93, 126, 140, 154, 169, 171, 204, 237, 242, 309, 312, 313, 315, 321], "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 106, 124, 133, 139, 140, 141, 143, 144, 156, 157, 165, 169, 171, 173, 174, 175, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 250, 252, 253, 254, 255, 256, 278, 281, 285, 288, 304, 313], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 71, 73, 75, 87, 93, 100, 102, 103, 106, 107, 108, 111, 112, 113, 114, 117, 118, 119, 123, 125, 126, 128, 131, 132, 134, 135, 136, 137, 139, 143, 145, 154, 155, 156, 169, 171, 174, 175, 203, 204, 206, 207, 209, 212, 213, 214, 223, 224, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 288, 312, 319], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 72, 87, 93, 312, 323], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 71, 75, 83, 87, 88, 89, 93, 102, 103, 104, 109, 114, 115, 119, 120, 122, 124, 125, 127, 133, 134, 137, 140, 141, 142, 144, 147, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 223, 224, 225, 229, 231, 232, 236, 237, 238, 239, 240, 244, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 280, 281, 284, 285, 288, 290, 297, 298, 302, 303, 304, 313, 319], "200": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 94, 95, 128, 159, 160, 167, 189, 190, 312, 315, 319], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 102, 128, 288, 291, 300, 310, 312, 313, 314, 315, 318, 321, 323], "device_typ": [13, 16, 27, 30, 33, 157, 158, 159, 160, 161, 162, 168, 173, 180, 181, 186], "create_env_kwarg": [13, 14, 16, 17, 72, 84, 87, 93, 312], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 128, 313, 321], "explorationtyp": [13, 14, 16, 20, 21, 237, 284, 312, 313, 314, 315, 323], "interactiontyp": [13, 16, 18, 19, 20, 21, 149, 153, 210, 214, 284], "exploration_mod": [13, 16, 18, 19, 20, 306, 308], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 71, 75, 87, 93, 106, 107, 110, 118, 120, 124, 128, 129, 130, 135, 136, 138, 139, 140, 142, 144, 145, 164, 167, 170, 173, 176, 177, 180, 181, 189, 190, 193, 195, 203, 213, 217, 220, 221, 222, 223, 224, 229, 232, 233, 234, 235, 238, 240, 242, 243, 244, 251, 257, 258, 259, 260, 261, 262, 263, 264, 265, 286, 312, 313, 321, 324], "num_thread": [13, 14, 87, 93], "num_sub_thread": [13, 14, 87, 93], "datacollector": [13, 14, 16, 17, 210, 214, 239, 314], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 199, 203, 205, 206, 209, 210, 211, 212, 213, 214, 216, 308, 323], "stepcount": [13, 71, 75, 87, 93, 139, 312, 313, 314, 315, 318, 323], "env_mak": [13, 14, 16, 21, 300, 324], "50": [13, 14, 16, 21, 37, 40, 314, 315, 317, 318, 319, 322], "2000": [13, 14, 16, 45, 78, 314, 321], "enumer": [13, 14, 16, 21, 32, 38, 42, 71, 75, 87, 93, 245, 309, 312, 313, 314, 315, 321, 323], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 111, 122, 128, 134, 166, 188, 205, 206, 209, 211, 212, 308, 314, 315, 319, 321, 323, 324], "step_count": [13, 14, 16, 71, 75, 87, 93, 134, 314, 315, 323], "shutdown": [13, 14, 16, 17, 21, 312, 323], "del": [13, 14, 16, 312, 314, 317, 323, 324], "randompolici": [13, 14, 16, 18, 19, 20, 22, 102, 128, 306, 321], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 225, 236, 239, 279, 281, 284, 288, 291, 292, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324], "lifespan": [13, 14, 16, 18, 19, 20, 313], "divis": [13, 14, 16, 18, 19, 20, 318], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 109, 315, 321], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 71, 75, 87, 93, 136, 140, 210, 214, 242, 284, 302, 303, 304, 310, 313, 314, 319, 324], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 71, 75, 87, 93, 314], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 313, 314, 318], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 139, 141, 179, 309, 310, 312, 313, 318, 321, 323], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 71, 75, 87, 93, 109, 112, 132, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 252, 321, 324], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 308, 318, 319], "post": [13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 87, 93], "multistep": [13, 14, 16, 18, 19, 20, 21, 306, 313], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 120, 130, 170, 180, 189, 194, 195, 250, 308, 319, 321], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 239], "whole": [13, 14, 16, 26, 28, 32, 45, 71, 75, 87, 93, 140, 242, 279, 312, 314], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 290, 300, 310, 312, 323], "async": [13, 14, 18, 19, 20, 21, 312, 323], "ratio": [13, 14, 40, 312, 314], "finish": [13, 14, 21, 75, 128, 324], "rest": [13, 14, 308, 314, 315, 319, 323], "earli": [13, 14, 75, 134, 323], "thread": [13, 14, 84, 87, 93], "equal": [13, 14, 84, 87, 93, 119, 120, 157, 165, 169, 171, 173, 179, 243, 247, 279, 302, 303, 312, 314, 320], "plu": [13, 14, 40, 87, 93, 319], "safeti": [13, 14, 83, 87, 93], "harm": [13, 14, 87, 93], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 140, 145, 242, 310, 312], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 140, 145, 242, 304, 310, 312, 313, 324], "ordereddict": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 140, 145, 242, 313], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 145, 169, 171, 222, 223, 225, 236, 239, 288, 308, 318], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 71, 75, 87, 93, 140], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 71, 75, 87, 93, 111, 115, 120, 134, 157, 173, 178, 179, 235, 242, 321], "increment": [13, 14, 16, 17, 71, 75, 87, 93, 236], "env_fn": [13, 14, 16, 17, 72, 302, 303], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 71, 75, 87, 93, 105, 111, 120, 128, 134, 178, 206, 280, 300, 313, 314, 315, 317, 318, 319, 321, 323, 324], "300": [13, 14, 16, 17, 161, 162, 319], "out_se": [13, 14, 16, 17, 324], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 106, 124, 133, 136, 139, 140, 141, 143, 144, 156, 157, 159, 160, 161, 162, 165, 168, 169, 170, 171, 173, 174, 175, 178, 179, 185, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 250, 251, 252, 253, 254, 255, 256, 271, 275, 276, 278, 281, 288, 293, 294, 297, 301, 302, 303, 309, 314, 318], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 71, 75, 87, 93, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 116, 117, 118, 120, 121, 125, 127, 128, 129, 130, 131, 135, 137, 138, 139, 145, 154, 159, 165, 166, 169, 171, 172, 173, 179, 182, 186, 187, 188, 205, 206, 211, 212, 217, 223, 224, 226, 229, 231, 235, 237, 239, 240, 241, 242, 244, 252, 253, 254, 255, 271, 282, 284, 286, 295, 296, 312], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 68, 81, 83, 100, 107, 110, 156, 175, 223, 224, 226, 227, 229, 235, 239, 240, 242, 244, 319, 323, 324], "describ": [15, 44, 103, 139, 193, 194, 274, 309, 312, 314, 318, 319, 324], "tensor_spec": [15, 100, 155, 229, 239, 241], "boundedtensorspec": [15, 22, 26, 71, 75, 87, 93, 207, 209, 210, 217, 223, 224, 226, 235, 239, 240, 242, 244, 306, 314, 318, 319, 323, 324], "cube": 15, "envcreat": [16, 22, 300, 301, 304, 306, 312, 313, 323, 324], "interruptor": 16, "_interruptor": 16, "outsid": [16, 318], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 71, 75, 87, 93, 314, 318, 323, 324], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 75, 84, 118, 223, 225, 236, 239, 312, 317, 319, 323], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 123, 312, 323], "regular": [17, 34, 36, 39, 188, 206, 211, 212, 213, 214, 230, 290, 306, 310, 312, 313, 321, 324], "mere": 17, "greater": [17, 169, 171, 312, 313, 323], "sent": [17, 55, 56, 65, 145], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 71, 75, 87, 93, 125, 145, 156, 157, 159, 161, 163, 165, 173, 175, 178, 179, 199, 213, 218, 279, 285, 312, 314, 315, 319, 320, 321, 324], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 288], "string": [18, 19, 20, 32, 37, 45, 54, 71, 75, 87, 93, 99, 124, 134, 144, 169, 171, 205, 210, 211, 222, 270, 287, 297, 309, 312, 314, 315], "respect": [18, 19, 20, 32, 71, 75, 87, 93, 101, 106, 107, 110, 124, 125, 136, 139, 140, 142, 144, 178, 190, 213, 218, 283, 314, 315, 318], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 307, 313, 314, 317, 321], "serv": [18, 20, 21, 77, 321, 324], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 71, 75, 87, 93, 114], "seen": [18, 20, 21, 309, 312, 313, 315, 318, 321], "turn": [18, 20, 21, 116, 141, 205, 284, 309, 312, 313, 315, 319, 320], "mp": [18, 19, 20, 72, 145], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 71, 75, 87, 93, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 312], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 71, 75, 87, 93, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 239, 302, 303], "homonym": [18, 19, 20, 319], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 312], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 210, 214], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 302, 303, 312, 313], "coordin": 21, "hood": [21, 319], "init": [21, 32, 71, 75, 87, 93, 312, 313, 314], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 321], "similarli": [21, 32, 62, 71, 75, 87, 93, 178, 215, 216, 235, 324], "num_cpu": 21, "num_gpu": 21, "1024": [21, 163, 321], "equat": [21, 75, 209, 222, 225, 243, 314, 319], "exce": [21, 314, 321], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 288, 312, 314, 315], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 91, 92, 94, 95, 157, 158, 159, 160, 163, 168, 173, 178, 179, 183, 184, 186, 187, 196, 250, 312, 313, 314, 315, 319, 320, 321, 323, 324], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "wherea": [22, 109, 237, 310], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 158, 163, 186, 204], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 72, 313], "__main__": [22, 72], "rollout_tensordict": 23, "max": [23, 33, 36, 41, 45, 54, 58, 109, 137, 193, 194, 195, 204, 209, 224, 225, 229, 238, 240, 242, 312, 314, 315, 318], "durat": [23, 318], "meta": [23, 44, 52, 73, 310, 314, 318, 321], "aren": [23, 315], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 145, 308, 312, 318], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 109, 184, 185, 189, 222, 308, 313, 314, 315, 319, 321], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 323], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 209, 217], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 217, 319], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 71, 75, 87, 93, 106, 107, 110, 118, 124, 136, 139, 140, 142, 144, 145, 213, 297, 324], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 105, 324], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 157, 173, 191, 192], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 71, 75, 87, 93, 304, 308], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 324], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 109, 169, 199, 203, 205, 206, 209, 210, 211, 212, 213, 214, 308, 323, 324], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 52, 199, 205, 206, 210, 211, 212, 213, 214, 314, 318, 319, 321], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 136, 151, 319, 321], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 102, 133, 157, 191, 192, 312, 319, 321], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 102, 103, 122, 136, 141, 145, 172, 192, 197, 304, 313, 314, 319, 321], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 139, 140, 182, 193, 304], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 88, 89, 100, 109, 166, 185, 188, 205, 206, 211, 212, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 315], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 166, 188, 205, 211, 227, 229, 250, 306, 308], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 71, 75, 87, 93, 106, 107, 110, 124, 136, 139, 140, 142, 144, 145, 213, 222, 237, 312, 313, 314, 319, 321], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 136, 171, 315, 319, 320], "upper": [25, 119], "unnam": 26, "effect": [26, 32, 71, 75, 87, 93, 102, 140, 288, 312, 321, 324], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 71, 75, 87, 93, 157, 173, 315, 318, 319, 322], "composite_spec": 26, "observation_vector": [26, 103, 297, 312], "randn": [26, 34, 36, 39, 55, 56, 65, 120, 151, 158, 163, 166, 172, 176, 177, 178, 182, 185, 186, 188, 199, 200, 201, 202, 204, 205, 210, 211, 213, 216, 217, 218, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 252, 253, 254, 255, 287, 308, 323, 324], "td_project": 26, "is_empti": [26, 28, 319], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 71, 75, 87, 93, 251, 318], "children": [26, 28, 32, 71, 75, 87, 93], "keysview": [26, 28], "reflect": [26, 28, 88, 89, 154, 237, 291, 313, 314, 315, 318], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 71, 75, 87, 93, 237], "succeed": [26, 28, 314, 318, 319], "selected_kei": [26, 28, 132, 312], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 165, 166, 188, 205, 206, 211, 212, 229, 237, 250, 308, 315], "arang": [27, 33, 166, 177, 205, 279, 308, 321], "argmax": [27, 166, 188, 206, 212], "chosen_action_valu": [27, 33, 187, 188, 196, 211, 212, 250, 308, 315], "outcom": [27, 33, 164, 193], "lazi": [28, 29, 49, 50, 71, 75, 87, 93, 124, 142, 180, 215, 216, 312, 313, 317, 321, 324], "represent": [28, 29, 32, 71, 75, 87, 93, 124, 142, 144, 312, 319, 320, 324], "drawn": [28, 29, 136, 207, 210, 214, 314, 318], "lazystackedtensordict": [28, 71, 75, 83, 87, 93, 317, 323], "heterogen": [28, 29, 82, 88, 89, 147, 178, 179, 312, 313], "semant": [28, 29, 308], "thrown": [29, 32, 71, 75, 87, 93, 321], "nvec": [30, 31], "cardin": [30, 31, 166, 188, 205, 206, 212, 314], "ax": [30, 180, 181], "m": [30, 32, 71, 75, 87, 93, 109, 214, 308, 313, 319], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 227, 229, 250, 306], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 306], "gamma": [32, 128, 175, 223, 224, 226, 227, 229, 230, 231, 233, 235, 237, 239, 240, 241, 242, 244, 245, 246, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 300, 309, 312, 313, 314, 318, 323], "sutton": [32, 309, 318], "1988": 32, "predict": [32, 40, 167, 174, 175, 204, 219, 230, 232, 233, 251, 308, 312, 313], "tempor": [32, 169, 171, 175, 253, 254, 259, 260], "44": [32, 319], "discount": [32, 72, 128, 224, 230, 231, 233, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 309, 313, 314, 318], "ahead": [32, 324], "add_modul": [32, 71, 75, 87, 93], "child": [32, 71, 75, 87, 93], "fn": [32, 37, 71, 75, 87, 93, 182, 302, 303], "init_weight": [32, 71, 75, 87, 93], "fill_": [32, 71, 75, 87, 93, 313, 315, 324], "net": [32, 71, 75, 87, 93, 172, 179, 223, 224, 229, 235, 239, 240, 241, 242, 297, 300, 313, 319, 320, 323], "in_featur": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 157, 159, 160, 161, 162, 172, 173, 179, 180, 181, 200, 213, 227, 323], "out_featur": [32, 71, 75, 83, 87, 93, 106, 124, 136, 139, 140, 142, 144, 156, 157, 159, 160, 161, 162, 167, 168, 169, 171, 172, 173, 175, 178, 179, 180, 181, 200, 205, 213, 227, 308, 312, 315, 323], "bia": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 157, 167, 169, 171, 173, 179, 180, 181, 182, 207, 209, 213, 220, 221, 222, 237, 242, 309, 312, 313, 314, 315, 318, 323], "requires_grad": [32, 71, 75, 87, 93, 118], "bfloat16": [32, 71, 75, 87, 93], "datatyp": [32, 71, 75, 87, 93, 321], "member": [32, 71, 75, 87, 93, 237], "xdoctest": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213, 237, 242], "skip": [32, 71, 75, 87, 93, 115, 140, 147, 210, 214, 237, 242, 252, 253, 254, 255, 270, 271, 281, 284, 312, 313, 314, 319], "buf": [32, 71, 75, 87, 93], "20l": [32, 71, 75, 87, 93, 237], "1l": [32, 71, 75, 87, 93, 237], "5l": [32, 71, 75, 87, 93, 237], "__call__": [32, 37, 71, 75, 87, 93, 214, 310], "associ": [32, 71, 75, 87, 93, 189, 304, 312, 321], "doubl": [32, 46, 71, 75, 87, 93, 106, 107, 108, 110, 124, 136, 139, 140, 142, 144, 213, 227, 230, 234, 240, 243, 250, 312, 313, 314, 315, 324], "eval": [32, 71, 75, 87, 93, 140, 145, 312, 313, 314], "evalu": [32, 71, 75, 87, 93, 140, 164, 176, 177, 185, 195, 240, 293, 294, 313, 314], "dropout": [32, 71, 75, 87, 93, 140, 169, 171, 173, 315], "batchnorm": [32, 71, 75, 87, 93, 140], "disabl": [32, 71, 75, 87, 93, 140, 170, 195, 312], "comparison": [32, 71, 75, 87, 93, 140, 237, 312, 313], "similar": [32, 71, 75, 87, 88, 89, 93, 106, 124, 136, 139, 140, 142, 143, 144, 145, 200, 202, 210, 213, 214, 309, 312, 313, 314, 315, 319, 324], "confus": [32, 71, 75, 87, 93, 140], "extra_repr": [32, 71, 75, 87, 93], "shift": [32, 220, 252, 253, 254, 255, 314], "nontermin": 32, "original_reward": 32, "newli": [32, 71, 75, 87, 93], "OR": 32, "reshap": [32, 169, 171, 173, 314, 318], "get_buff": [32, 71, 75, 87, 93], "throw": [32, 71, 75, 87, 93, 324], "docstr": [32, 71, 75, 87, 93], "get_submodul": [32, 71, 75, 87, 93], "explan": [32, 71, 75, 87, 93], "qualifi": [32, 71, 75, 87, 93], "referenc": [32, 71, 75, 87, 93], "attributeerror": [32, 71, 75, 87, 93], "invalid": [32, 71, 75, 87, 93, 96, 176, 177], "resolv": [32, 71, 75, 87, 93], "someth": [32, 71, 75, 82, 87, 93, 307, 313, 314, 319, 324], "get_extra_st": [32, 71, 75, 87, 93, 145], "set_extra_st": [32, 71, 75, 87, 93, 145], "picklabl": [32, 71, 75, 87, 93, 145], "guarante": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 145, 323], "pickl": [32, 71, 75, 87, 93, 145], "get_paramet": [32, 71, 75, 87, 93], "sai": [32, 71, 75, 87, 93, 178, 320, 324], "net_b": [32, 71, 75, 87, 93], "net_c": [32, 71, 75, 87, 93], "conv": [32, 71, 75, 87, 93, 157, 313], "conv2d": [32, 71, 75, 87, 93, 157, 178, 323], "kernel_s": [32, 71, 75, 87, 93, 157, 159, 160, 178, 183, 313, 323], "stride": [32, 71, 75, 87, 93, 157, 159, 160, 168, 178, 313, 323], "diagram": [32, 71, 75, 87, 93], "show": [32, 71, 75, 87, 93, 179, 308, 312, 314, 315, 318, 319, 321, 323], "degre": [32, 71, 75, 87, 93], "named_modul": [32, 71, 75, 87, 93], "o": [32, 71, 75, 87, 93], "transit": [32, 52, 71, 75, 87, 93, 219, 312, 315, 319, 321], "half": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213, 312], "ipu": [32, 71, 75, 87, 93], "strict": [32, 34, 36, 39, 71, 75, 87, 93, 140, 242], "descend": [32, 71, 75, 87, 93, 140, 242], "persist": [32, 71, 75, 87, 93, 140, 154, 242], "enforc": [32, 62, 71, 75, 87, 93, 140, 215, 242, 319], "preserv": [32, 71, 75, 87, 93, 140, 242], "missing_kei": [32, 71, 75, 87, 93, 140, 242], "unexpected_kei": [32, 71, 75, 87, 93, 140, 242], "namedtupl": [32, 71, 75, 87, 93, 140, 242], "duplic": [32, 62, 71, 75, 87, 93, 227, 230, 237, 250], "l": [32, 71, 75, 87, 93, 251, 314, 319], "idx": [32, 71, 75, 87, 93], "named_buff": [32, 71, 75, 87, 93], "remove_dupl": [32, 71, 75, 87, 93, 237], "prepend": [32, 71, 75, 87, 93, 237], "running_var": [32, 71, 75, 87, 93], "named_children": [32, 71, 75, 87, 93], "conv4": [32, 71, 75, 87, 93], "conv5": [32, 71, 75, 87, 93], "memo": [32, 71, 75, 87, 93], "named_paramet": [32, 71, 75, 87, 93, 118, 237], "register_backward_hook": [32, 71, 75, 87, 93], "removablehandl": [32, 71, 75, 87, 93], "deprec": [32, 71, 75, 87, 93, 140, 148, 152, 165, 223, 224, 225, 227, 229, 230, 235, 236, 239, 240, 241, 242, 250, 252, 253, 254, 255, 260, 324], "favor": [32, 71, 75, 87, 93, 314], "register_full_backward_hook": [32, 71, 75, 87, 93], "register_buff": [32, 71, 75, 87, 93], "running_mean": [32, 71, 75, 87, 93], "alongsid": [32, 71, 75, 87, 93, 318], "num_featur": [32, 71, 75, 87, 93], "register_forward_hook": [32, 71, 75, 87, 93, 166, 188], "with_kwarg": [32, 71, 75, 87, 93], "always_cal": [32, 71, 75, 87, 93], "posit": [32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 114, 115, 133, 134, 137, 140, 141, 182, 242, 309, 314, 318, 319, 321], "signatur": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213, 237, 309, 312, 319], "register_module_forward_hook": [32, 71, 75, 87, 93], "regardless": [32, 71, 75, 87, 93, 225, 236, 239], "register_forward_pre_hook": [32, 71, 75, 87, 93], "invok": [32, 71, 75, 87, 93], "And": [32, 71, 75, 87, 93], "forward_pr": [32, 71, 75, 87, 93], "register_module_forward_pre_hook": [32, 71, 75, 87, 93], "grad_input": [32, 71, 75, 87, 93], "grad_output": [32, 71, 75, 87, 93], "subsequ": [32, 71, 75, 87, 93, 315], "technic": [32, 71, 75, 87, 93, 313, 315], "caller": [32, 71, 75, 87, 93], "register_module_full_backward_hook": [32, 71, 75, 87, 93], "register_full_backward_pre_hook": [32, 71, 75, 87, 93], "backward_pr": [32, 71, 75, 87, 93], "register_module_full_backward_pre_hook": [32, 71, 75, 87, 93], "register_load_state_dict_post_hook": [32, 71, 75, 87, 93], "incompatible_kei": [32, 71, 75, 87, 93], "clear": [32, 71, 75, 79, 87, 93, 280], "register_modul": [32, 71, 75, 87, 93, 310], "alia": [32, 71, 75, 87, 93], "register_paramet": [32, 71, 75, 87, 93], "register_state_dict_pre_hook": [32, 71, 75, 87, 93], "keep_var": [32, 34, 36, 39, 71, 75, 87, 93, 140, 242], "made": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 209, 227, 237, 250, 312, 313, 315, 318, 320], "requires_grad_": [32, 71, 75, 87, 93], "autograd": [32, 71, 75, 87, 93, 140, 242], "freez": [32, 71, 75, 87, 93], "finetun": [32, 71, 75, 87, 93], "gan": [32, 71, 75, 87, 93], "share_memori": [32, 71, 72, 75, 87, 93, 312], "share_memory_": [32, 71, 75, 87, 93, 323], "destin": [32, 34, 36, 39, 71, 75, 87, 93, 107, 108, 110, 140, 142, 145, 154, 242, 271], "averag": [32, 71, 75, 87, 93, 140, 145, 209, 231, 232, 242, 286, 312, 314], "shallow": [32, 71, 75, 87, 93, 140, 242, 315], "pleas": [32, 71, 75, 87, 88, 89, 93, 102, 137, 140, 242, 307], "detach": [32, 71, 75, 87, 93, 140, 237, 242, 252, 253, 254, 255, 312], "non_block": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "memory_format": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "channels_last": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "complex": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213, 312, 313], "integr": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 162, 169, 171, 175, 213, 308, 318, 319, 320], "unchang": [32, 71, 75, 87, 93, 106, 109, 124, 136, 139, 140, 142, 144, 207, 213, 285, 312, 321], "tri": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "pin": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "4d": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "ignore_w": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "1913": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "3420": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "5113": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "2325": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "torch_doctest_cuda1": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "gpu1": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "1914": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "5112": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213, 319], "2324": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "float16": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "cdoubl": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "3741": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "j": [32, 35, 58, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213, 310], "2382": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "5593": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213, 319], "4443": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "complex128": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "6122": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "1150": [32, 71, 75, 87, 93, 106, 124, 136, 139, 140, 142, 144, 213], "to_empti": [32, 71, 75, 87, 93], "dst_type": [32, 71, 75, 87, 93], "xpu": [32, 71, 75, 87, 93], "set_to_non": [32, 71, 75, 87, 93], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63, 178], "uniqu": [33, 111, 321], "discretebox": [33, 71, 75, 87, 93, 314, 318, 324], "chosen_data": [34, 54], "rewarddata": [34, 54, 306], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 86], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 319], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "num_work": [34, 36, 45, 54, 84, 87, 93, 312, 313], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 71, 75, 87, 93, 107, 110, 124, 140, 144, 280], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 304], "determin": [34, 35, 36, 39, 41, 52, 58, 71, 75, 87, 93, 124, 144, 178, 209, 313, 318], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 164, 193], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "flatten": [34, 36, 39, 114, 285, 315, 318], "to_tensordict": [34, 36, 39, 315], "memmap": [34, 36, 39, 55, 87, 93, 145, 285, 321], "unbind": [34, 36, 39, 169, 171], "alpha": [35, 41, 58, 157, 178, 224, 229, 238, 240, 242, 312, 321, 323], "ep": [35, 41, 58, 145, 209, 225, 243, 286, 312, 313, 315], "1e": [35, 41, 58, 145, 164, 167, 182, 193, 312, 313, 314, 318], "08": [35, 41, 58, 312, 315, 318, 319], "collate_fn": [35, 38, 41, 42, 52, 53, 321, 323], "prefetch": [35, 38, 41, 42, 52, 53, 54, 312, 313, 315, 321], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 102, 124, 142, 158, 159, 160, 161, 162, 163, 166, 167, 168, 175, 181, 183, 184, 186, 187, 189, 190, 196, 206, 209, 223, 224, 228, 230, 231, 232, 233, 234, 235, 238, 239, 242, 243, 252, 257, 265, 320], "ab": [35, 58, 124, 142, 145, 158, 163, 167, 168, 175, 181, 183, 184, 186, 187, 189, 190, 196, 223, 224, 228, 231, 232, 233, 234, 235, 238, 239, 242, 320], "1511": [35, 58, 168], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 193, 210, 214, 306, 309], "null": [35, 41, 58, 101], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 321], "merg": [35, 38, 41, 42, 52, 53, 319], "mini": [35, 38, 41, 42, 52, 53, 318], "decid": [35, 38, 41, 42, 323], "rb": [35, 38, 41, 42, 52, 53, 102, 128, 313, 315, 318, 320, 321, 323], "meth": [35, 38, 41, 42, 237], "incompat": [35, 38, 41, 42, 321], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 321], "tensordictprioritizedreplaybuff": [35, 306, 323], "simplifi": [35, 319, 321], "manual_se": [35, 38, 41, 42, 100, 109, 120, 128, 137, 176, 177, 185, 199, 206, 207, 209, 217, 223, 224, 226, 235, 242, 318, 319, 323, 324], "_weight": [35, 41, 321, 323], "arrai": [35, 40, 111, 312, 321], "update_prior": [35, 58, 285, 310, 313, 321, 323], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 141], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 135, 312, 321], "os": [36, 45, 54, 313], "cpu_count": [36, 45, 54], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 71, 75, 87, 93, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220], "text": [37, 40, 43, 209, 314], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 158, 163, 186], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 321], "inde": [37, 109, 314, 319], "writer": [38, 42, 52, 53, 60, 64, 306, 314], "randomsampl": [38, 42, 52, 53, 306, 312], "roundrobinwrit": [38, 42, 52, 53, 306], "Not": 38, "ref_model": 40, "reward_model": [40, 219], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 118], "kl": [40, 118, 232, 236], "penalti": [40, 236], "strai": 40, "far": [40, 170, 194, 195, 319, 324], "calcul": [40, 128], "gpt2rewardmodel": 40, "get_dataload": [40, 306], "promptdata": [40, 306], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 319, 321], "reward_kl": [40, 118], "reward_raw": 40, "sample_log_prob": [40, 200, 201, 202, 210, 214, 216, 239, 297, 314, 318, 323], "create_rollout_td": 40, "log_prob": [40, 164, 176, 177, 185, 195, 214], "log_ratio": 40, "replic": 40, "rindex": 40, "multipli": [40, 224, 225, 229, 236, 238, 239, 240, 242, 286, 312], "term": [40, 118, 180, 181, 222, 223, 229, 290, 313, 314, 318], "subtract": [40, 135], "ve": [40, 312, 315], "eo": 40, "limit": [40, 83, 102, 118, 312, 313, 315, 318, 319], "generation_config": 40, "generationconfig": 40, "ti": [40, 261, 262, 263, 264, 266, 267, 268, 269, 313], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 224, 227, 229, 230, 235, 237, 240, 242, 244, 250, 321, 323], "td_error": [41, 42, 224, 226, 227, 229, 230, 235, 237, 240, 242, 244, 250, 312, 321, 323], "reduct": [41, 58], "prioritizedreplaybuff": [41, 306, 323], "update_tensordict_prior": [41, 312, 321, 323], "prioritizedsampl": [41, 42, 227, 230, 250, 306, 312, 321], "min": [41, 58, 193, 194, 195, 204, 209, 224, 225, 229, 238, 240, 242, 313, 314, 318], "median": [41, 58, 210, 214], "len": [41, 55, 56, 65, 122, 157, 173, 179, 312, 319, 320, 321, 323], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 81, 151], "huggingfac": [43, 208], "co": [43, 111, 319], "doc": [43, 313, 318, 320], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 306], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 52, 75, 142, 154, 270, 321, 324], "condit": [45, 135, 205, 206, 211, 212, 222, 312, 319, 321], "elementwis": 45, "vocabulari": 45, "loader": [45, 314], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 100, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 117, 120, 122, 125, 126, 128, 131, 132, 137, 142, 145, 154, 155, 203, 204, 207, 209, 214, 227, 250, 271], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 313], "batch_dimens": 45, "filder": 45, "tempfil": [45, 300, 312, 313], "randint": [45, 138, 321], "20": [45, 71, 75, 79, 87, 93, 204, 279, 312, 314, 315, 318, 319, 323, 324], "temporarydirectori": [45, 312, 313], "tmpdir": [45, 312, 313], "data_memmap": 45, "exclus": [48, 49, 114, 169, 171, 176, 177, 205, 206, 211, 212, 243, 244, 252, 253, 254, 255, 256, 304, 308], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 302, 303, 312], "metadata": [52, 314, 318, 324], "reconstruct": [52, 232, 312, 324], "recov": [52, 203, 209, 215, 235, 317], "regard": [52, 166, 206, 223, 230, 239, 312, 314, 319], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 84, 197, 302, 303, 309, 314, 315, 321, 323], "left": [52, 106, 107, 108, 112, 118, 124, 126, 132, 134, 137, 139, 142, 144, 207, 313, 314], "possess": 52, "unexpectedli": 52, "episod": [52, 75, 128, 131, 135, 156, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 313, 318], "absent": [52, 71, 75, 87, 93], "traj_split": 52, "observationnorm": [52, 145, 304, 312, 313, 314, 315, 323], "maze2d": 52, "umaz": 52, "128": [52, 160, 163, 313, 315, 319, 320, 321], "loc": [52, 118, 120, 130, 170, 182, 194, 195, 200, 201, 202, 210, 214, 216, 223, 224, 235, 239, 240, 241, 242, 292, 297, 304, 308, 312, 313, 314, 315, 318, 323], "public": [53, 124, 144], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 86], "adult_onehot": [53, 86], "mushroom_num": [53, 86], "mushroom_onehot": [53, 86], "covertyp": [53, 86], "shuttl": [53, 86], "magic": [53, 86], "infinit": [54, 321], "three": [54, 308, 310, 314, 318, 319, 321, 324], "block": [54, 308, 315], "pairwisedataset": [54, 306], "256": [54, 163, 313, 314, 318, 319], "scratch_dir": [55, 312, 321], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 204, 321, 324], "bar": [55, 56, 65, 204, 281, 282, 284, 288, 310, 313], "attach": [55, 56, 57, 63, 65, 313], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 176, 177, 312], "auto": [56, 65, 209, 224, 229, 238, 240, 242, 244, 309, 318], "zero_": [56, 65, 151], "max_capac": [58, 312, 321], "uniformli": [59, 237, 324], "roundrobin": [60, 64], "piec": [60, 64, 66, 312, 313, 314, 318, 319, 321], "consum": [62, 313, 314, 318, 321], "incomplet": 62, "unlik": [62, 230, 239, 313, 323], "fresh": 62, "caution": [62, 147, 324], "shuffl": [62, 318], "haven": [62, 320], "remain": [62, 108, 109, 118, 135, 181], "draw": [62, 207], "__len__": 63, "googl": [67, 68, 314, 315, 318], "ant": [67, 68, 78, 320], "get_environ": 68, "87": [68, 312, 319], "acrobot": [68, 324], "fetch": [68, 118, 320, 321], "task_nam": 69, "cheetah": [69, 70, 312], "frame_skip": [69, 70, 74, 75, 80, 115, 281, 284, 291, 310, 312, 313, 314, 323], "dm_control": [70, 312, 317, 324], "continuousbox": [71, 75, 87, 93, 151, 314, 318, 319, 323, 324], "unboundedcontinuoustensorspec": [71, 75, 83, 87, 93, 100, 107, 110, 136, 151, 156, 175, 199, 213, 216, 218, 241, 306, 314, 315, 318, 319, 324], "another_act": [71, 75, 87, 93], "mutabl": [71, 75, 87, 93], "batch_lock": [71, 73, 75, 87, 93, 136, 140, 319], "immut": [71, 75, 87, 93, 126, 140], "done_keys_group": [71, 75, 87, 93], "outer": [71, 75, 87, 93, 310, 312, 313, 324], "inner": [71, 75, 87, 93, 109, 310, 313, 314, 318, 324], "another_don": [71, 75, 87, 93], "fake_tensordict": [71, 75, 87, 93, 313], "fake": [71, 75, 87, 93, 312, 313], "overridden": [71, 75, 87, 93, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 315], "afterward": [71, 75, 87, 93, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220, 324], "silent": [71, 75, 87, 93, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 178, 179, 182, 183, 184, 186, 189, 190, 192, 197, 203, 204, 206, 207, 209, 212, 217, 220], "braxenv": [71, 75, 87, 93, 126, 306], "envnam": [71, 75, 87, 93], "mimic": [71, 75, 87, 93], "renametransform": [71, 75, 87, 93], "pipeline_st": [71, 75, 87, 93], "15": [71, 75, 87, 93, 204, 209, 231, 312, 314, 318, 319, 321, 322], "attibut": [71, 75, 87, 93], "speak": [71, 75, 87, 93, 312], "rand_act": [71, 75, 82, 87, 88, 89, 93], "_step": [71, 75, 87, 93, 100, 107, 110, 114, 126, 135], "privat": [71, 75, 87, 93, 319, 324], "reset_kei": [71, 75, 87, 93, 131], "partial": [71, 75, 87, 93, 288, 315], "multitask": [71, 75, 87, 93], "multiag": [71, 75, 82, 87, 88, 89, 93, 155, 179, 187, 196, 250], "another_reward": [71, 75, 87, 93], "callback": [71, 75, 87, 93, 318], "auto_reset": [71, 75, 87, 93, 319], "auto_cast_to_devic": [71, 75, 87, 93, 318], "break_when_any_don": [71, 75, 87, 93, 318], "return_contigu": [71, 75, 87, 93, 147, 317], "soon": [71, 75, 87, 88, 89, 93], "ndim": [71, 75, 87, 93], "concomitt": [71, 75, 87, 93], "workspac": [71, 75, 87, 93], "prevail": [71, 75, 87, 93, 131, 155], "creator": [72, 293, 294, 302, 303, 304], "substitut": [72, 145], "vecnorm": [72, 304], "env_creat": [72, 312], "test_env1": 72, "_td": 72, "observation_count": [72, 324], "test_env2": 72, "sleep": [72, 324], "ps": 72, "p1": 72, "p2": 72, "join": [72, 306, 313, 314], "9934": 72, "env_str": 73, "info_dict_read": 75, "set_info_dict_read": 75, "put": [75, 145, 304, 308, 313, 314, 315, 319], "read_act": 75, "read_don": 75, "reader": [75, 313], "interrupt": [75, 258], "nonsens": 75, "fallback": 75, "broken": [75, 147], "read_ob": 75, "dictat": [75, 210, 214, 239, 312, 319], "read_reward": 75, "baseinfodictread": 75, "info_dict": 75, "hoc": 75, "dict_read": 75, "default_info_dict_read": 75, "my_info_kei": 75, "some_env": 75, "placehold": [77, 111, 140], "secur": 77, "behav": [77, 83, 185, 235, 320], "isaacgym": [78, 79], "isaacgymwrapp": [78, 306], "isaacgymenv": [79, 306], "webpag": 79, "isaac": 79, "essenc": 79, "04": [79, 312, 319, 322], "snake": [80, 81], "6x6": [80, 81], "td1": [81, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 312], "12x12": 81, "tsp50": 81, "tsp100": 81, "qualnam": 82, "marl": [82, 96, 102, 137, 178, 318], "leverag": [82, 88, 89, 312, 318, 324], "neural": [82, 88, 89, 157, 191, 213, 308, 313, 314, 315, 318, 319, 324], "group_map": [82, 88, 89, 96], "constructiuon": [82, 88, 89], "premad": [82, 88, 89, 250], "all_in_one_group": [82, 96], "agent_0": [82, 88, 89, 96], "agent_1": [82, 88, 89, 96], "agent_2": [82, 88, 89, 96], "agent_3": 82, "int8": [82, 88, 89], "one_group_per_ag": [82, 88, 89], "environn": 83, "constraint": [83, 314, 318], "mymbenv": [83, 156, 175], "world_model": [83, 156, 175, 232], "super": [83, 100, 107, 110, 156, 166, 175, 218, 224, 226, 229, 235, 240, 242, 244, 312, 319, 323], "hidden_observ": [83, 156, 175], "mlp": [83, 156, 157, 159, 160, 161, 162, 169, 171, 172, 175, 179, 200, 205, 227, 297, 308, 313, 317, 320, 323], "worldmodelwrapp": [83, 156, 175], "activation_class": [83, 156, 157, 159, 160, 161, 162, 167, 168, 173, 175, 178, 179, 313, 318, 323], "relu": [83, 156, 163, 175, 182, 222], "activate_last_lay": [83, 156, 162, 173, 175], "depth": [83, 156, 157, 159, 160, 161, 162, 167, 168, 173, 175, 178, 179, 183, 184, 205, 308, 313, 317, 318], "run_type_check": 83, "readthedoc": 84, "en": 84, "python_interfac": 84, "task_id": 84, "106": [86, 319], "my_env_fun": [87, 93], "custom_attribute_list": [87, 93], "custom_attribut": [87, 93], "custom_method_list": [87, 93], "custom_method": [87, 93], "deploi": [87, 93], "slight": [87, 93, 313], "overhead": [87, 93], "share_individual_td": [87, 93], "shared_memori": [87, 93], "policy_proof": [87, 93], "ll": [87, 93, 312, 313, 314, 315, 318, 324], "hidden": [87, 93, 167, 169, 171, 172, 183, 184, 189, 190, 200, 201, 202, 204, 213, 216, 225, 236, 239, 308, 315, 317, 323], "update_kwarg": [87, 93], "pettingzoo": [88, 89], "pet": [88, 89], "zoo": [88, 89], "guid": [88, 89, 91, 92, 135, 307, 312, 318], "__": [88, 89], "aecenv": [88, 89], "use_mask": [88, 89], "dead": [88, 89], "compulsori": [88, 89], "adversary_0": [88, 89], "adversari": [88, 89], "marlgroupmaptyp": [88, 89, 96, 306], "vectoris": [88, 89], "multiwalker_v9": 88, "return_st": [88, 89], "categorical_act": [88, 89, 91, 92], "n_piston": [88, 89], "21": [88, 89, 314, 317, 319], "pistonball_v6": [88, 89], "piston": [88, 89], "piston_0": [88, 89], "piston_1": [88, 89], "piston_20": [88, 89], "aec": [88, 89], "tictactoe_v3": [88, 89], "player": [88, 89], "player_1": [88, 89], "player_2": [88, 89], "butterfli": 89, "parallel_env": [89, 312, 323, 324], "roboh": 90, "expos": [90, 107, 110, 215, 313], "vikashplu": 90, "read_info": 90, "pars": [90, 321], "smacv2": [91, 92], "starcraft": [91, 92], "challeng": [91, 92, 319, 320], "v2": [91, 92, 247, 261, 262, 263, 264, 266, 267, 268, 269, 297], "10gen_terran": [91, 92], "10gen_zerg": [91, 92], "10gen_protoss": [91, 92], "3m": [91, 92], "8m": [91, 92], "25m": [91, 92], "5m_vs_6m": [91, 92], "8m_vs_9m": [91, 92], "10m_vs_11m": [91, 92], "27m_vs_30m": [91, 92], "mmm": [91, 92], "mmm2": [91, 92], "2s3z": [91, 92], "3s5z": [91, 92], "3s5z_vs_3s6z": [91, 92], "3s_vs_3z": [91, 92], "3s_vs_4z": [91, 92], "3s_vs_5z": [91, 92], "1c3s5z": [91, 92], "2m_vs_1z": [91, 92], "corridor": [91, 92], "6h_vs_8z": [91, 92], "2s_vs_1sc": [91, 92], "so_many_banel": [91, 92], "bane_vs_ban": [91, 92], "2c_vs_64zg": [91, 92], "old": [91, 92, 236, 324], "smac": [91, 92], "map_nam": [91, 92], "18": [91, 92, 94, 95, 179, 312, 314, 318, 319, 324], "176": [91, 92, 319], "battle_won": [91, 92], "dead_al": [91, 92], "dead_enemi": [91, 92], "episode_limit": [91, 92], "322": [91, 92, 319], "Or": [91, 92, 178], "procedur": [91, 92], "distribution_config": [91, 92], "n_unit": [91, 92], "n_enemi": [91, 92], "team_gen": [91, 92], "dist_typ": [91, 92], "weighted_team": [91, 92], "unit_typ": [91, 92], "marin": [91, 92], "maraud": [91, 92], "medivac": [91, 92], "exception_unit_typ": [91, 92], "start_posit": [91, 92], "surrounded_and_reflect": [91, 92], "map_x": [91, 92], "map_i": [91, 92], "capability_config": [91, 92], "88": [91, 92, 312, 319, 321], "131": [91, 92, 319], "starcraft2env": 92, "scenario": [94, 95, 312, 318, 319], "flock": [94, 95], "continuous_act": [94, 95, 318], "agent_collision_rew": [94, 95], "agent_distance_rew": [94, 95], "agent_nam": 96, "ca": 96, "environment4": 96, "get_group_map": 96, "sumbodul": 97, "model_bas": [98, 156, 175], "adapt": [100, 236, 312, 319], "masker": 100, "binarydiscretetensorspec": [100, 227, 229, 250, 306], "maskedenv": 100, "ones_lik": 100, "scatter": 100, "unsqueez": [100, 102, 103, 138, 141, 172, 312, 315, 318, 319], "_set_se": [100, 107, 110, 319], "transform_reward_spec": [101, 105, 106, 107, 108, 112, 118, 126, 129, 130, 132, 134, 139, 141], "as_invers": 102, "account": [102, 176, 177, 308, 313, 315, 321, 324], "movement": 102, "veloc": [102, 318, 319, 324], "propos": [102, 111, 174, 234, 243, 297, 308, 315, 321], "pdf": [102, 158, 159, 160, 161, 162, 166, 186, 206, 209, 230, 240, 243, 252, 257, 265, 297], "1312": 102, "5602": 102, "uesd": 102, "unsqueezetransform": [102, 319, 321], "consumpt": 102, "followin": 102, "pictur": 102, "cartpol": [102, 313, 315, 321, 324], "pixels_trsf": [102, 321], "grayscal": [102, 313, 315, 321, 324], "tensordictreplaybuff": [102, 285, 300, 306, 312, 313, 315, 321], "data_exclud": [102, 321], "_buffer": 102, "transform_observation_spec": [102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 116, 117, 118, 120, 122, 126, 127, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 319], "del_kei": [103, 142, 317, 319], "unsqueeze_if_oor": 103, "observation_posit": 103, "observation_veloc": 103, "delet": 103, "key1": [103, 279, 287], "key2": [103, 279, 287], "crop": [104, 125, 271], "center": [104, 271], "width": [104, 127], "height": [104, 127], "squar": [104, 170, 194, 195, 271], "out_keys_inv": [105, 107, 110, 120, 121, 122, 126, 139, 319], "scalar": [105, 129, 160, 162, 180, 181, 203, 207, 209, 220, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 250, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 308, 313, 319], "permit": [105, 114, 141], "rewardsc": [106, 140, 312, 313, 315], "rewardclip": 106, "transformed_env": [106, 139, 140], "transform_env_devic": [106, 108, 139], "transform_input_spec": [106, 107, 108, 109, 120, 122, 126, 131, 134, 139, 141, 143], "transform_output_spec": [106, 107, 108, 112, 118, 126, 132, 134, 139], "untouch": [106, 107, 108, 112, 118, 126, 132, 134, 139], "transformfull_done_spec": [106, 107, 108, 112, 118, 126, 132, 134, 139], "dtype_in": 107, "dtype_out": 107, "scan": [107, 110, 215, 216], "resp": [107, 110], "anticip": [107, 110], "not_transform": [107, 110], "rule": [107, 110, 214, 308, 314], "constructedw": [107, 110], "myenv": [107, 110], "orig_devic": 108, "unspecifi": 108, "transform_done_spec": [108, 139], "num_actions_effect": 109, "max_act": 109, "include_forward": 109, "dimension": [109, 169, 171, 252, 257, 265, 318], "num_act": [109, 229], "action_out": 109, "_call": [109, 114, 319], "eol_kei": 111, "life": 111, "lives_kei": 111, "eol_attribut": 111, "unwrap": 111, "al": [111, 122, 156, 324], "breakout": 111, "v5": [111, 122, 324], "210": [111, 122, 319, 324], "160": [111, 122, 315, 319, 324], "eol_transform": 111, "eol": 111, "dqnloss": [111, 223, 224, 226, 229, 230, 231, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 250, 295, 306, 309, 313, 315], "action_spac": [111, 166, 188, 205, 206, 211, 212, 223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 315], "register_kei": 111, "loss_or_advantag": 111, "lossmodul": [111, 288, 299, 300, 306], "valueestimatorbas": [111, 237, 306], "excluded_kei": 112, "finit": [113, 321], "first_dim": 114, "last_dim": 114, "allow_positive_dim": [114, 141], "th": [114, 141, 319], "frameskip": 114, "repeatedli": [115, 314, 318], "init_kei": 117, "is_init": [117, 169, 171, 209, 315], "tracker": 117, "coef": 118, "pi_curr": 118, "pi_0": 118, "constrain": [118, 169, 171, 239], "overfit": 118, "fine": [118, 320], "probabilist": [118, 210, 306, 314, 323], "get_dist": [118, 214, 215], "mod": [118, 169, 171, 217, 315], "normalparamextractor": [118, 308, 314, 318], "probabilisticactor": [118, 200, 201, 202, 204, 223, 224, 228, 229, 235, 238, 239, 240, 241, 242, 244, 308, 312, 314, 318], "tanhnorm": [118, 200, 201, 202, 210, 216, 223, 224, 235, 239, 240, 241, 242, 244, 306, 314, 318, 323], "n_ob": [118, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244], "n_act": [118, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244], "return_log_prob": [118, 200, 201, 202, 210, 214, 216, 241, 308, 314, 318, 323], "apply_": 118, "copy_": [118, 312], "formulat": 118, "diverg": [118, 169, 171, 210, 214, 232, 236], "noop": [119, 323], "30": [119, 189, 190, 314, 318, 319], "trial": 119, "op": [119, 203, 207, 290], "randomli": [119, 120, 136, 207, 210, 214, 318, 319, 321], "noop_max": 119, "standard_norm": [120, 130, 312, 313, 315], "affin": [120, 130], "layer": [120, 145, 157, 159, 160, 167, 169, 171, 173, 178, 179, 180, 181, 183, 184, 191, 192, 198, 208, 217, 308, 313, 314, 315, 320], "normal": [120, 145, 157, 170, 173, 176, 177, 182, 194, 195, 203, 210, 214, 225, 236, 239, 284, 286, 304, 308, 310, 315, 318, 324], "set_default_tensor_typ": 120, "doubletensor": 120, "isclos": 120, "next_ob": [120, 252, 253, 254, 255, 323], "rubric": [120, 216], "init_stat": [120, 312, 313, 314, 315], "3752e": 120, "01": [120, 209, 220, 225, 236, 239, 312, 315, 318, 319, 322], "5087e": 120, "03": [120, 312, 319, 322], "9294e": 120, "9636": 120, "5608": 120, "6408": 120, "num_it": [120, 313, 314], "reduce_dim": [120, 312, 313, 314, 315], "cat_dim": [120, 312, 313, 314, 315], "keep_dim": [120, 313, 315], "constant": [120, 135, 310, 312, 314, 315, 324], "statist": [120, 145, 241, 304, 312, 313, 314, 324], "approach": [120, 312, 314, 324], "gaussian": [120, 136, 156, 175, 180, 181, 186, 203, 314], "empir": [120, 156, 175, 210, 214, 312, 314, 318], "3d": 120, "third": [120, 206, 318], "reorder": 122, "in_keys_in": 122, "pong": [122, 324], "channel": [122, 178, 183, 184, 313], "r3m": [124, 320], "resnet": [124, 142, 144], "visual": [124, 142, 144, 314, 319], "embed": [124, 142, 143, 144, 187, 199, 200, 201, 202, 213, 218, 320], "ego4d": [124, 142, 144], "univers": [124, 142, 144], "suraj": [124, 142], "nair": [124, 142], "aravind": [124, 142], "rajeswaran": [124, 142], "vikash": [124, 142, 144], "kumar": [124, 142, 144], "chelsea": [124, 142], "finn": [124, 142], "abhinav": [124, 142], "gupta": [124, 142], "2203": [124, 142, 175, 320], "12601": [124, 142, 320], "_init": [124, 142, 312, 320], "snippet": [124, 142, 312], "resnet50": [124, 144, 320], "model_nam": [124, 142, 144, 274], "resnet34": 124, "resnet18": 124, "r3m_vec": [124, 320], "feed": [124, 144, 237, 308, 312, 318, 321], "244": [124, 144, 319], "stack_imag": [124, 144, 320], "tread": [124, 144], "separet": [124, 144], "hub": [124, 144], "resnet50_weight": [124, 144], "imagenet1k_v1": [124, 144], "download_path": [124, 144], "tensor_pixels_kei": [124, 144], "dest": [124, 142, 144, 213], "sub_seq_len": 125, "sample_dim": [125, 312], "primarili": 125, "hesit": 125, "request": 125, "robust": 125, "mix": [125, 187, 196, 250, 312, 318], "NOT": 125, "improp": 125, "create_copi": 126, "renam": [126, 128, 154, 312], "stuff": 126, "newnam": 126, "interpol": [127, 313, 315], "bilinear": [127, 315], "truncated_kei": [128, 134], "r2g": 128, "99": [128, 145, 175, 233, 246, 251, 258, 300, 312, 313, 314, 319, 323], "reward_to_go": 128, "bernoulli_": 128, "9010": 128, "9404": [128, 258], "9701": [128, 258], "9900": [128, 258], "0000": [128, 137, 207, 217, 258, 314, 315, 319, 323], "crash": 128, "clamp_min": 129, "clamp_max": 129, "clip_min": 129, "clip_max": 129, "episode_": 131, "reward1": 131, "reward2": 131, "episode_reward": [131, 318], "5926": 131, "4578": 131, "7885": 131, "keep_reward": 132, "keep_don": 132, "excludetransform": [132, 321], "squeeze_dim": 133, "step_count_kei": 134, "update_don": 134, "adaptec": 134, "accordingli": [134, 135, 211, 315], "completet": 134, "recognis": 134, "accompani": 134, "target_return": 135, "chosen": [135, 136, 187, 188, 196, 212, 297, 308], "conjunct": [135, 313], "hindsight": 135, "relabel": 135, "reward2gotransform": 135, "primer": [136, 315], "default_valu": [136, 315], "unit": [136, 156, 167, 183, 184, 189, 190, 314], "transfomedenv": 136, "mykei": 136, "__unless": 136, "exists__": 136, "dtype_or_devic": 136, "pool": 137, "increas": [137, 209, 318], "10th": 137, "0216": 137, "1149": 137, "1990": 137, "2749": 137, "3281": 137, "9290": 137, "3702": 137, "8978": 137, "from_int": 138, "255": [138, 319, 321], "ri": 138, "principl": 139, "cattransform": 139, "notabl": 139, "rewardsum": [139, 318], "cache_spec": 140, "anymor": [140, 213], "set_missing_toler": 140, "keyerror": 140, "unsqueeze_dim": [141, 319], "danger": 141, "vc1": 142, "vc1_vec": 142, "small": [142, 312, 314, 318, 324], "untrain": 142, "make_noload_model": 142, "naiv": 142, "vip": [143, 144, 320], "toward": 144, "implicit": [144, 235, 321], "jason": 144, "ma": 144, "shagun": 144, "sodhani": 144, "dinesh": 144, "jayaraman": 144, "osbert": 144, "bastani": 144, "ami": 144, "zhang": 144, "vip_vec": 144, "shared_td": 145, "decai": [145, 203, 207, 243, 286, 312, 313, 315, 324], "9999": [145, 319], "0001": [145, 167, 182, 314, 319], "fly": [145, 236, 309, 314, 319, 321, 324], "to_observation_norm": 145, "underflow": [145, 286], "build_td_for_shared_vecnorm": 145, "memmori": 145, "memmap_": 145, "queue": [145, 321], "td_share": 145, "v": [145, 200, 235, 242, 308, 312, 313], "state_dim": [146, 158, 163, 186, 189, 190, 204], "action_dim": [146, 158, 159, 161, 163, 186, 204, 312, 317], "gsde": [146, 240, 304], "func": 146, "gsdemodul": 146, "check_dtyp": 147, "short": [147, 313, 314, 318], "discrep": [147, 223, 225, 226, 227, 236, 239, 241, 250], "imposs": 147, "probabilistictdmodul": [152, 153, 173, 210, 214, 251, 284], "next_tensordict": 154, "keep_oth": [154, 319], "exclude_reward": 154, "exclude_don": 154, "exclude_act": 154, "next_": 154, "funtion": [154, 319], "write_full_fals": 155, "leav": [155, 312], "cross": 156, "entropi": [156, 223, 224, 225, 229, 235, 236, 238, 239, 240, 242, 244, 318], "botev": 156, "et": 156, "2013": 156, "cem": 156, "plan": [156, 174, 175], "varianc": [156, 170, 182, 194, 195, 309, 312, 314, 318], "rank": 156, "k": 156, "repeat": [156, 314, 318, 319], "maximis": [156, 159, 161, 175, 308, 312, 313, 314, 318, 319], "horizon": [156, 175, 314], "modelbasedenv": [156, 175], "planning_horizon": [156, 175], "optim_step": [156, 175], "mpc": [156, 174, 175], "num_candid": [156, 175], "candid": [156, 175], "top_k": [156, 175], "modelbasedenvbas": [156, 174, 175, 306], "safemodul": [156, 174, 200, 202, 214, 223, 224, 229, 235, 239, 240, 241, 242, 244, 293, 294, 300, 306, 323], "next_hidden_observ": 156, "num_cel": [157, 159, 160, 161, 162, 167, 168, 169, 171, 173, 178, 179, 200, 313, 314, 315, 318, 323], "elu": [157, 159, 160, 161, 162, 167, 168, 178, 313, 323], "activation_kwarg": [157, 173], "norm_class": [157, 159, 160, 173], "norm_kwarg": [157, 173], "bias_last_lay": [157, 159, 160, 161, 162, 168, 173], "aggregator_class": [157, 159, 160, 313, 315, 323], "squashdim": [157, 159, 178, 323], "aggregator_kwarg": [157, 159, 160, 313, 315], "squeeze_output": [157, 159, 160, 313, 315], "convolut": [157, 159, 160, 178, 191], "produc": [157, 173, 179, 185, 200, 202, 204, 271, 314, 315, 321, 324], "cell": [157, 173, 178, 179, 314], "kernel": [157, 168, 172, 178], "cnet": 157, "34": [157, 173, 314, 315, 318, 319, 322], "35": [157, 173, 314, 318, 319], "rectangular": 157, "transformer_config": [158, 186, 204], "decisiontransform": [158, 186], "dtconfig": [158, 163, 186], "2202": [158, 163, 186, 238], "05607": [158, 163, 186, 238], "return_to_go": [158, 163, 186, 204], "conv_net_kwarg": [159, 160], "mlp_net_kwarg": [159, 160, 161], "use_avg_pool": [159, 160], "WITH": [159, 160, 161, 162, 209, 243], "1509": [159, 160, 161, 162, 175, 209, 234, 243, 319], "02971": [159, 160, 161, 162, 209, 243], "convnet": [159, 178, 315, 323], "ndims_in": 159, "avgpool": [159, 160], "adaptiveavgpool2d": [160, 313, 315], "400": [161, 162, 318, 319, 321], "mlp_net_kwargs_net1": 162, "mlp_net_kwargs_net2": 162, "decion": 163, "desdescrib": 163, "n_embd": 163, "n_layer": 163, "n_head": 163, "n_inner": 163, "n_posit": 163, "resid_pdrop": 163, "attn_pdrop": 163, "gpt2config": 163, "atol": [164, 193], "06": [164, 193, 312, 318, 319], "rtol": [164, 193], "batch_shap": [164, 193], "event_shap": [164, 193], "absolut": [164, 193, 312], "densiti": [164, 176, 177, 185, 195], "mass": [164, 176, 177, 185, 195, 319], "rsampl": [164, 177, 185, 214], "sample_shap": [164, 176, 177, 185], "dqnet": 165, "atom": 165, "softmax": [165, 177, 185, 205, 206], "var_num": [166, 188, 205, 206, 212], "action_value_kei": [166, 188, 205, 206, 211, 212, 237, 250], "action_mask_kei": [166, 188, 205, 206, 207, 211, 212], "perspect": [166, 206, 230, 314], "1707": [166, 206, 230, 239], "06887": [166, 206, 230], "mult": [166, 179, 188, 205, 206, 211, 212], "functional_modul": [166, 188, 211, 213, 216, 308], "make_funct": [166, 188, 210, 211, 213, 216, 218, 237, 308, 323], "tensordict_modul": [166, 188, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 226, 229, 235, 239, 240, 241, 242, 244, 308], "nbin": [166, 205, 308], "customdistributionalqv": 166, "log_softmax": [166, 205], "one_hot": [166, 177, 188], "qvalue_actor": [166, 188, 205, 211, 308], "std_bia": 167, "std_min_val": 167, "belief": [167, 183, 189, 190], "1912": [167, 231, 232, 233], "01603": [167, 231, 232, 233], "softplu": [167, 182, 220, 221, 222], "out_features_valu": 168, "cnn_kwarg": [168, 313], "mlp_kwarg": [168, 172, 313], "duel": 168, "cnn": [168, 178, 313, 323], "06581": 168, "512": [168, 319, 321], "embedd": [169, 171, 172], "gru": 169, "grucel": [169, 213], "input_s": [169, 171, 172, 315], "hidden_s": [169, 171, 172, 315], "num_lay": [169, 171, 183, 184], "introduc": [169, 171, 209, 312], "proj_siz": 169, "recurrent_st": [169, 315], "custom_kei": [169, 171], "recurrent_mod": [169, 171], "set_recurrent_mod": [169, 171, 315], "seq": [169, 171, 315, 317], "gru_modul": 169, "rs": [169, 312], "gru_module_train": 169, "policy_train": [169, 171], "traj_td": [169, 171], "batch_first": [169, 171, 315], "policy_infer": [169, 171], "td_inf": [169, 171], "assert_clos": [169, 171], "upscal": [170, 194, 195], "tanh_loc": [170, 194, 195], "event_dim": [170, 193, 194], "ultim": [170, 194, 195], "poor": [170, 194, 195], "explos": [170, 194, 195], "switch": [170, 195], "sigma": [170, 186, 194, 195, 203, 209, 314], "formula": [170, 194, 195, 223, 225, 236, 239, 309, 314], "lstmcell": 171, "trust": 171, "correspont": 171, "b_ih": 171, "b_hh": 171, "recurrent_state_h": [171, 315], "recurrent_state_c": [171, 315], "triplet": [171, 211, 212], "lstm_modul": 171, "rs_h": 171, "rs_c": 171, "hidden0": 171, "hidden1": 171, "lstm_kwarg": 172, "next_observ": [172, 223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 317], "time_step": 172, "2d": [172, 318], "hidden0_in": 172, "hidden1_in": 172, "hidden0_out": 172, "hidden1_out": 172, "single_bias_last_lay": 173, "layer_class": 173, "layer_kwarg": 173, "perceptron": 173, "seamless": 173, "lazylinear": [173, 308, 314, 319, 320, 323], "42": [173, 223, 224, 226, 235, 242, 315, 319], "noisylinear": [173, 180, 306, 313], "noisylazylinear": [173, 306], "At": [174, 207, 313, 314, 315, 317, 319, 320], "mpcplanner": 174, "tensordict_out": [174, 324], "mppi": 175, "covari": 175, "william": [175, 241], "aldrich": 175, "theodor": 175, "01149": 175, "hansen": 175, "wang": 175, "su": 175, "04955": 175, "valueoper": [175, 200, 201, 202, 223, 224, 225, 226, 229, 235, 236, 239, 240, 241, 242, 244, 300, 308, 312, 314], "tdlambdaestim": [175, 306, 312], "value_net": [175, 227, 241, 252, 253, 254, 255, 314], "adv": 175, "lmbda": [175, 246, 252, 255, 257, 263, 264, 265, 268, 269, 309, 312, 314, 318], "95": [175, 246, 314, 315, 319], "value_network": [175, 226, 227, 230, 235, 242, 252, 253, 254, 255, 309, 312, 314], "temperatur": [175, 224, 235], "neg_inf": [176, 177], "inf": [176, 177], "padding_valu": [176, 177], "www": [176, 177], "api_doc": [176, 177], "tf_agent": [176, 177], "event": [176, 177, 185, 261, 262, 263, 264, 266, 267, 268, 269, 321], "unnorm": [176, 177, 185], "sparse_mask": [176, 177], "dens": [176, 177], "0831": [176, 177], "1203": [176, 177], "0928": [176, 177], "1972": [176, 177], "grad_method": [177, 185], "reparamgradientstrategi": [177, 185], "passthrough": [177, 185], "proxi": [177, 185, 309], "relaxedonehot": [177, 185], "zeros_lik": [177, 319], "sample_non_valid": 177, "centralis": [178, 179, 318], "share_param": [178, 179, 318], "basi": [178, 321], "homogen": [178, 179, 318], "agent_network": [178, 179], "modulelist": [178, 179, 297, 323], "lazyconv2d": [178, 323], "2592": 178, "decentralis": [178, 318], "28": [178, 315, 319, 321], "n_agent_input": [179, 318], "n_agent_output": [179, 318], "toech": 179, "centalis": 179, "shown": [179, 308, 317, 318, 321], "std_init": [180, 181], "matrix": [180, 181], "initialize_paramet": 180, "isol": 180, "1706": [181, 196], "10295v3": 181, "induc": 181, "aid": 181, "scale_map": 182, "biased_softplus_1": 182, "scale_lb": [182, 189, 190], "exp": [182, 222], "module_norm": 182, "decod": 183, "1803": [183, 184, 187], "10122": [183, 184], "els": [183, 308, 310, 312, 313, 314, 315, 318, 319, 320], "rnn_hidden": 183, "latent": 184, "excacli": 185, "inres": 186, "mu": [186, 209, 314], "state_shap": [187, 250], "mixing_embed_dim": [187, 250], "qmix": [187, 318], "mixer": [187, 196, 250], "monoton": 187, "hyper": 187, "11485": 187, "qmixerloss": [187, 196], "qmix_vdn": [187, 196], "eventu": [187, 315, 319], "vdn": [187, 196], "greedi": [188, 206, 207, 212, 313, 315], "hidden_dim": [189, 190], "posterior": [189, 232], "rssm": [189, 190, 232], "1811": [189, 190], "04551": [189, 190], "obs_embed": 189, "rnn_hidden_dim": 190, "dream": 190, "tanhtransform": 194, "decomposit": 196, "05296": 196, "vmap": [197, 213, 216, 323], "hide": [197, 314, 318], "satisfi": [197, 308], "tensordictmodulebas": [197, 205, 211, 315], "vmap_dim": 197, "lam": 197, "sample_in": 197, "sample_in_td": 197, "vm": 197, "translat": [199, 210], "character": [199, 205, 210, 211, 213, 321], "overflow": [199, 205, 206, 210, 211, 212, 213, 214], "td_modul": [199, 200, 201, 202, 210, 213, 214, 216, 218, 323], "3635": 199, "0340": 199, "1476": 199, "3911": [199, 319], "1664": [199, 319], "5455": 199, "2247": 199, "4583": 199, "2916": 199, "2160": 199, "5337": 199, "5193": 199, "grad_fn": [199, 207, 323], "addmmbackward0": 199, "actorvalueoper": [200, 308], "get_policy_oper": [200, 201, 202, 225, 236, 239, 308], "standalon": [200, 201, 202], "tdmodul": [200, 201, 202, 300], "get_critic_oper": 200, "common_oper": [200, 202], "policy_oper": [200, 201, 202], "value_oper": [200, 201, 202], "normalparamwrapp": [200, 201, 202, 210, 216, 223, 224, 229, 235, 239, 240, 241, 242, 244, 306, 323], "module_hidden": [200, 202], "td_module_hidden": [200, 202], "module_act": [200, 202], "td_module_act": [200, 201, 202], "module_valu": [200, 201, 202], "td_module_valu": [200, 201, 202], "state_action_valu": [200, 218, 224, 242, 251, 297, 300, 308, 312, 323], "td_clone": [200, 201, 202], "tensordictmodulewrapp": [200, 293, 294, 300], "get_policy_head": [200, 201, 202], "safesequenti": [200, 201, 202, 250], "head": [200, 202, 225, 236, 239], "get_value_head": [200, 201, 202], "get_value_oper": [200, 201, 202, 225, 236, 239], "action_modul": 201, "state_valu": [201, 202, 218, 225, 236, 239, 240, 242, 252, 253, 254, 255, 257, 259, 261, 263, 265, 266, 268, 308, 312, 314, 318], "qualiti": [202, 308], "actorcriticoper": [202, 225, 236, 239, 308], "embeddig": 202, "refet": 202, "actorcriticwrapp": [202, 308, 312], "po": 203, "sigma_init": 203, "epsilon": [203, 207, 209, 243, 286, 313, 314, 315], "sigma_end": 203, "annealing_num_step": [203, 207, 209, 312, 313, 315], "captur": [203, 207, 209], "omiss": [203, 207, 209], "ommit": [203, 207, 209, 321], "inferec": 204, "set_tensor_kei": 204, "dt_inference_wrapp": 204, "baz": 204, "inference_context": 204, "obs_dim": 204, "tanhdelta": [204, 306, 312], "dtactor": 204, "actor_modul": [204, 323], "dist_class": 204, "dist_kwarg": 204, "distribution_kwarg": [204, 210, 214, 314, 318], "inference_actor": 204, "sequence_length": 204, "mask_context": 204, "qvaluemodul": [205, 211, 250, 315], "distributionaldqnnet": 205, "make_log_softmax": 205, "my_action_valu": [206, 212], "chanc": 206, "thid": 206, "threshold": [207, 224, 225, 314], "eps_init": [207, 209, 313, 315], "eps_end": [207, 209, 313], "explorative_polici": [207, 209], "9055": [207, 319], "9277": 207, "6295": 207, "2532": 207, "addbackward0": 207, "lmheadmodel": 208, "extract": [208, 312, 314], "actor_head": [208, 225, 236, 239], "base_model": 208, "lm_head": 208, "ornstein": 209, "uhlenbeck": 209, "ou": [209, 312], "correl": 209, "sort": 209, "noise_t": 209, "noise_": 209, "theta": [209, 314, 319], "sigma_t": 209, "sqrt": 209, "sigma_": 209, "anneal": 209, "ou_prev_nois": 209, "ou_step": 209, "x0": 209, "sigma_min": 209, "n_steps_ann": 209, "is_init_kei": 209, "_ou_prev_nois": 209, "_ou_step": 209, "default_interaction_typ": [210, 214], "interaction_typ": [210, 214], "set_interaction_typ": [210, 214], "cache_dist": [210, 214], "n_empirical_estim": [210, 214], "chose": 212, "functionalmodul": 213, "functionalmodulewithbuff": 213, "td_fmodul": 213, "td_function": 213, "td_state": 213, "ensembl": [213, 240], "params_repeat": 213, "td_vmap": [213, 216], "random_sampl": [213, 214], "suppli": 214, "fist": 214, "log_prob_kei": [214, 318], "probabilistictensordictsequenti": [215, 223, 225, 236, 239, 241, 293, 294, 323], "partial_toler": [215, 216, 317], "who": [215, 216], "AND": [215, 216], "tensordictsequenci": 216, "tensordictsequ": 216, "safeprobabilisticmodul": [216, 308], "spec1": 216, "net1": 216, "module1": 216, "td_module1": 216, "spec2": 216, "module2": 216, "td_module2": 216, "clamp": [217, 232, 288, 319], "boundari": [217, 314, 318], "resolut": 217, "simplest": [217, 312, 314, 315, 318, 321, 324], "9944": 217, "9991": 217, "3020": 217, "2299": [217, 319], "5418": 217, "2989": 217, "6849": 217, "3169": 217, "2690": 217, "9649": [217, 319], "5686": 217, "8602": 217, "0315": 217, "8455": [217, 319], "6027": 217, "4746": 217, "7843": 217, "7782": 217, "2111": 217, "5115": 217, "4687": 217, "5760": 217, "custommodul": 218, "cat": [218, 224, 226, 235, 240, 242, 244, 323], "imaginari": 219, "imagin": 219, "transition_model": 219, "get_reward_oper": 219, "get_transition_model_oper": 219, "min_val": [220, 222], "bias": [220, 309, 312], "_bia": 220, "invert": [221, 314], "surject": 222, "expln": 222, "biased_softplu": [222, 306], "beggin": 222, "biased_softplus_": 222, "syntax": [222, 312], "met": [222, 319], "1602": 223, "01783v2": 223, "entropy_bonu": [223, 225, 236, 239, 314], "favour": [223, 225, 236, 239], "samples_mc_entropi": [223, 225, 236, 238, 239], "mont": [223, 225, 236, 239, 312], "carlo": [223, 225, 236, 239, 312], "entropy_coef": [223, 225, 236, 239, 314, 318], "critic_coef": [223, 225, 236, 239, 314], "loss_critic_typ": [223, 225, 236, 239, 241, 314], "l1": [223, 225, 226, 227, 229, 236, 239, 240, 241, 244, 247, 250, 308, 312], "l2": [223, 225, 226, 227, 228, 229, 232, 233, 236, 239, 240, 241, 244, 247, 250, 312], "smooth_l1": [223, 224, 225, 226, 227, 229, 235, 236, 239, 240, 241, 242, 244, 247, 250, 314], "separate_loss": [223, 225, 226, 229, 235, 236, 239, 240, 241, 242, 244], "propag": [223, 225, 226, 229, 235, 236, 239, 240, 241, 242, 244, 252, 253, 254, 255, 314, 318], "advantage_kei": [223, 225, 236, 239, 241, 252, 253, 254, 255], "value_target_kei": [223, 225, 236, 239, 241, 252, 253, 254, 255, 314], "value_target": [223, 225, 236, 239, 241, 252, 253, 254, 255, 314, 318], "loss_crit": [223, 239, 314, 318], "loss_entropi": [223, 239, 314, 318], "loss_object": [223, 239, 314, 318], "recur": [223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 252, 253, 254, 255, 256], "next_reward": [223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 252, 253, 254, 255], "next_don": [223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 252, 253, 254, 255], "next_termin": [223, 224, 226, 227, 229, 235, 239, 240, 241, 242, 244, 252, 253, 254, 255], "loss_obj": 223, "sacloss": [223, 234, 243, 306], "select_out_kei": [223, 224, 226, 229, 235, 239, 240, 242, 244], "essenti": [223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 250, 313, 319, 321], "make_value_estim": [223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 245, 250, 309, 312, 313, 318], "value_typ": [223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 246, 250, 312], "valueestim": [223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 246, 250, 306, 309, 312, 318], "hyperparam": [223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 312, 319], "enum": [223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 246, 250, 312], "default_value_estim": [223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 312], "refin": [223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250], "default_value_kwarg": [223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 250, 306, 312], "dqn_loss": [223, 224, 226, 227, 229, 230, 231, 235, 237, 239, 240, 241, 242, 244, 245, 250], "conserv": 224, "2006": [224, 319], "04779": 224, "actor_network": [224, 226, 228, 229, 235, 238, 240, 242, 244, 312], "qvalue_network": [224, 229, 235, 240, 242, 244], "loss_funct": [224, 226, 227, 228, 229, 235, 240, 242, 244, 247, 250, 312], "alpha_init": [224, 229, 238, 240, 242], "min_alpha": [224, 229, 238, 240, 242], "max_alpha": [224, 229, 238, 240, 242], "fixed_alpha": [224, 229, 238, 240, 242], "target_entropi": [224, 229, 238, 240, 242], "prod": [224, 238, 242], "n_action": [224, 227, 238, 242], "delay_actor": [224, 226, 242, 244], "delay_qvalu": [224, 229, 240, 242, 244], "min_q_weight": 224, "max_q_backup": 224, "backup": 224, "deterministic_backup": 224, "num_random": 224, "with_lagrang": 224, "lagrang": 224, "lagrange_thresh": 224, "valueclass": [224, 226, 229, 235, 240, 242, 244], "qvalu": [224, 229, 235, 240, 242, 244, 297], "loss_actor": [224, 226, 229, 235, 240, 241, 242, 244, 283, 312, 323], "loss_alpha": [224, 229, 240, 242], "loss_alpha_prim": 224, "loss_qvalu": [224, 229, 235, 240, 242, 244], "clip_epsilon": [225, 314, 318], "normalize_advantag": [225, 236, 239, 318], "value_kei": [225, 236, 239, 252, 253, 254, 255, 312], "somemodul": [225, 236, 239], "someactor": [225, 236, 239], "value_head": [225, 236, 239], "somevalu": [225, 236, 239], "loss_modul": [225, 234, 236, 237, 239, 243, 288, 299, 300, 309, 310, 312, 313, 314, 318, 321], "ppoloss": [225, 236, 306], "delay_valu": [226, 227, 230, 241, 242, 250, 313, 315], "loss_valu": [226, 235, 241, 242, 312, 314, 318, 323], "pred_valu": [226, 244, 312, 323], "pred_value_max": [226, 312, 323], "target_valu": [226, 240, 244, 251, 309, 312, 323], "target_value_max": [226, 312, 323], "qvalueactor": [227, 250, 308, 313, 315], "mult_one_hot": [227, 229, 250], "loss_val": [227, 309, 312, 314, 315, 318, 321], "2106": 228, "01345": 228, "ste": 229, "num_qvalue_net": [229, 235, 240, 242, 244], "target_entropy_weight": 229, "onehotcategor": [229, 306], "disctount": 230, "distributionalqvalueactor": [230, 308], "input_tensordict": [230, 312], "actor_model": 231, "value_model": [231, 233], "model_based_env": 231, "dreamerenv": [231, 306], "imagination_horizon": 231, "unrol": [231, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269], "discount_loss": [231, 233], "lambda_kl": 232, "lambda_reco": 232, "lambda_reward": 232, "reco_loss": 232, "reward_loss": 232, "free_nat": 232, "nat": 232, "delayed_clamp": 232, "global_averag": 232, "value_loss": 233, "fake_data": 233, "ddpgloss": [234, 243, 300, 306, 312, 323], "td3loss": [234, 243, 306], "value_network_update_interv": 234, "contrast": [234, 321], "06461": 234, "2110": 235, "06169": 235, "expectil": 235, "tau": [235, 243, 312, 313], "antmaz": 235, "sticht": 235, "loss_value_diff": 235, "diff": 235, "old_polici": 236, "new_polici": 236, "distanc": [236, 247, 251, 252, 318], "apart": [236, 318], "dtarg": 236, "samples_mc_kl": 236, "analyt": 236, "decrement": 236, "loss_": [237, 283, 309, 312], "equip": [237, 315], "gh": 237, "_acceptedkei": 237, "dataclass": [237, 297], "_forward_value_estimator_kei": 237, "alter": [237, 308], "value_estim": [237, 252, 253, 254, 255, 256, 309, 312, 318], "myloss": 237, "action2": 237, "convert_to_funct": [237, 312], "expand_dim": 237, "create_target_param": [237, 312], "compare_against": [237, 312], "funs_to_decor": 237, "stuctur": 237, "_param": 237, "expans": 237, "resampl": 237, "_target_param": 237, "blend": 237, "upcom": [237, 261, 262, 263, 264, 266, 267, 268, 269, 312], "proxim": [239, 314, 318], "optimis": [239, 284, 314, 318], "flavour": [239, 318, 323], "clipppoloss": [239, 306, 314, 318], "klpenppoloss": [239, 306], "regularis": 239, "06347": 239, "gae": [239, 306, 309, 312, 314, 318], "ppo_loss": 239, "tdlambda": [239, 246, 309, 312], "base_lay": 239, "randn_lik": 239, "samplelogprob": 239, "openreview": [240, 297], "ay8zfzm0tdd": [240, 297], "sub_sample_len": 240, "subsampl": [240, 279, 310], "action_log_prob_actor": 240, "state_action_value_actor": [240, 244], "connectionist": 241, "1992": 241, "doi": 241, "1007": 241, "bf00992696": 241, "actor_net": [241, 312, 314], "1801": 242, "01290": 242, "applic": [242, 250, 319], "1812": 242, "05905": 242, "redqloss": [243, 306], "math": 243, "theta_t": [243, 319], "theta_": [243, 319], "polyak": 243, "policy_nois": 244, "noise_clip": 244, "next_state_valu": [244, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 306], "td0": [245, 312], "strict_shap": 247, "view_a": 247, "qmixer": [250, 306], "local_valu": 250, "visibl": [250, 318], "dafault": 250, "acceptedkei": 250, "global_valu": 250, "penultim": 250, "local_value_network": 250, "mixer_network": 250, "suggest": [250, 318], "value_modul": [250, 314, 323], "qnet": [250, 312], "next_val_kei": 251, "pred_next_v": 251, "usus": 251, "mse": 251, "q_valu": 251, "n_steps_to_next": 251, "value_next_st": 251, "1506": [252, 257, 265], "02438": [252, 257, 265], "exponenti": [252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 286], "average_ga": [252, 314], "skip_exist": [252, 253, 254, 255], "advang": 252, "gradient_mod": 252, "value_error": [252, 253, 254, 255, 256], "sign": 252, "unused_arg": 252, "target_param": [252, 253, 254, 255, 256, 312, 318], "98": [252, 253, 254, 255, 319], "94": [252, 255, 319], "unpack": [252, 253, 254, 255], "tensor_kei": [252, 253, 254, 255, 256], "next_valu": [252, 253, 254, 255, 256], "aka": [253, 313], "average_reward": [253, 254, 255], "tdestim": [253, 254, 256], "infti": 254, "valuefunctionbas": 256, "time_dim": [257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269], "old_stat": [257, 259, 261, 263, 265, 266, 268], "new_stat": [257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269], "did": [258, 313, 314, 321, 324], "rolling_gamma": [261, 262, 263, 264, 266, 267, 268, 269], "g1": [261, 262, 263, 264, 266, 267, 268, 269], "g2": [261, 262, 263, 264, 266, 267, 268, 269], "g3": [261, 262, 263, 264, 266, 267, 268, 269], "g4": [261, 262, 263, 264, 266, 267, 268, 269], "v3": [261, 262, 263, 264, 266, 267, 268, 269], "v4": [261, 262, 263, 264, 266, 267, 268, 269, 312, 314, 320], "out_file_bas": 270, "skip_reset": 270, "dump": 270, "interv": [270, 271, 280, 290, 313, 319], "center_crop": 271, "make_grid": 271, "Will": 271, "grid": 271, "exp_nam": [272, 273, 276, 277, 278, 300, 313], "log_dir": [272, 273, 275, 277, 313], "templat": 272, "csv": [273, 275, 313], "minim": [273, 321], "dependeci": 273, "experiment_nam": [274, 275], "uuid": [274, 313, 324], "date": 274, "logger_typ": 275, "logger_nam": 275, "tensorboard": [275, 277, 323], "wandb": [275, 278, 323], "mlflow": [275, 276], "wandb_kwarg": 275, "mlflow_kwarg": 275, "tracking_uri": 276, "uri": 276, "datastor": 276, "tb_log": 277, "tensoarboard": 277, "sub_traj_len": 279, "min_sub_traj_len": 279, "register_op": [279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 310, 313], "process_optim_batch": [279, 285, 286, 310], "td_out": [279, 287], "_process_optim_batch_hook": [279, 310], "batch_subsampl": 279, "clear_cuda": 280, "pre_optim_step": [280, 310], "counter": [281, 310], "log_pbar": [281, 282, 284, 286, 310, 313], "progress": [281, 282, 284, 288, 310, 313, 315, 324], "count_fram": 281, "pre_steps_log": [281, 282, 310], "count_frames_log": 281, "lognam": 282, "r_train": 282, "log_reward": [282, 313], "loss_compon": 283, "appl": 283, "omit": [283, 314, 319, 321], "optimizer_hook": 283, "record_interv": [284, 312, 313], "record_fram": [284, 291, 312, 313], "policy_explor": [284, 300, 312, 313], "log_kei": [284, 313], "suffix": 284, "underestim": 284, "suppos": [284, 310, 324], "set_exploration_typ": [284, 306, 314, 315, 323], "r_evalu": [284, 312], "flatten_tensordict": [285, 313], "max_dim": 285, "rb_trainer": 285, "batch_process": [285, 286, 287, 310], "post_loss": [285, 310], "999": [286, 313], "jitter": 286, "finfo": 286, "default_dtyp": 286, "get_default_dtyp": 286, "reward_norm": 286, "update_reward_stat": 286, "normalize_reward": 286, "make_train": [287, 306], "_process_batch_hook": [287, 310], "select_kei": [287, 310], "versatil": 288, "optim_steps_per_batch": [288, 310, 313], "epoch": [288, 314, 318], "clip_grad_norm": 288, "clip_norm": 288, "progress_bar": 288, "tqdm": [288, 312, 314, 315, 318, 319], "save_trainer_interv": 288, "disk": [288, 310, 312, 313, 315, 321], "log_interv": [288, 313], "save_trainer_fil": [288, 310], "datacollectorbas": [290, 293, 294, 300, 306], "update_weights_interv": [290, 313], "sit": [290, 313], "update_weight": 290, "post_step": [290, 310], "cfg": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304], "dictconfig": [291, 292, 293, 294, 297, 298, 299, 300, 301, 304], "divid": [291, 308, 312, 318, 319], "unknowingli": 291, "annealing_fram": [291, 312], "init_env_step": [291, 292, 312], "proof_environ": [292, 297, 312], "sta": 292, "ot": 292, "actor_model_explor": [293, 294, 312], "make_env_kwarg": [293, 294], "targetnetupdat": [295, 296, 299, 300], "redqloss_deprec": 296, "actor_net_kwarg": 297, "qvalue_net_kwarg": 297, "observation_kei": 297, "dummi": [297, 312, 324], "parser_env_arg": 297, "parser_model_args_continu": 297, "cattensor": [297, 312, 317, 319, 324], "hydra": 297, "config_stor": 297, "configstor": 297, "halfcheetah": [297, 312], "config_field": 297, "config_cl": 297, "redqmodelconfig": 297, "envconfig": 297, "make_dataclass": 297, "cls_name": 297, "cs": 297, "config_path": 297, "config_nam": 297, "17": [297, 312, 314, 319], "replayargsconfig": 298, "target_net_updat": [300, 312, 313], "constitu": 300, "learnt": [300, 312, 314], "tensorboardlogg": [300, 306], "egreedywrapp": [300, 313, 315], "env_proof": 300, "obs_spec": 300, "net_valu": 300, "dir": [300, 310, 313], "gettempdir": 300, "argpars": [301, 304], "namespac": [301, 304], "parser": [301, 304], "transformed_env_constructor": [301, 306], "num_env_per_collector": [302, 303], "video_tag": 304, "norm_obs_onli": 304, "use_env_cr": 304, "custom_env_mak": 304, "custom_env": 304, "return_transformed_env": 304, "action_dim_gsd": 304, "state_dim_gsd": 304, "obs_norm_state_dict": 304, "wheter": 304, "maker": 304, "asyncdatacollector": 306, "distributedsyncdatacollector": 306, "submitit_delayed_launch": 306, "raycollector": 306, "samplerwithoutreplac": [306, 314, 318, 321], "tensorstorag": 306, "tensordictroundrobinwrit": 306, "d4rlexperiencereplai": 306, "openmlexperiencereplai": 306, "unboundeddiscretetensorspec": [306, 324], "lazystackedtensorspec": 306, "lazystackedcompositespec": 306, "prompttensordicttoken": 306, "rolloutfrommodel": 306, "tokenizeddatasetload": 306, "create_infinite_iter": 306, "consolidate_spec": 306, "check_no_exclusive_kei": 306, "contains_lazy_spec": 306, "check_marl_group": 306, "tensordictrecord": 306, "videorecord": [306, 314], "get_available_librari": 306, "set_exploration_mod": 306, "make_composite_from_td": [306, 319], "terminated_or_trunc": 306, "braxwrapp": 306, "dmcontrolenv": [306, 312, 317, 324], "dmcontrolwrapp": [306, 324], "jumanjienv": 306, "jumanjiwrapp": 306, "multithreadedenvwrapp": 306, "openmlenv": 306, "pettingzooenv": 306, "pettingzoowrapp": 306, "robohiveenv": 306, "smacv2env": 306, "smacv2wrapp": 306, "vmaswrapp": 306, "qvaluehook": 306, "distributionalqvaluehook": 306, "reset_nois": 306, "cemplann": 306, "mpcplannerbas": 306, "mppiplann": 306, "independentnorm": 306, "truncatednorm": 306, "maskedonehotcategor": 306, "inv_softplu": 306, "vmapmodul": 306, "distributionaldqnloss": [306, 313], "discretesacloss": 306, "iqlloss": 306, "cqlloss": 306, "dtloss": 306, "onlinedtloss": 306, "a2closs": 306, "reinforceloss": 306, "dreameractorloss": 306, "dreamermodelloss": 306, "dreamervalueloss": 306, "td0estim": [306, 312], "td1estim": [306, 312], "td0_return_estim": 306, "td0_advantage_estim": 306, "td1_return_estim": 306, "vec_td1_return_estim": 306, "td1_advantage_estim": 306, "vec_td1_advantage_estim": 306, "td_lambda_return_estim": 306, "vec_td_lambda_return_estim": 306, "td_lambda_advantage_estim": 306, "vec_td_lambda_advantage_estim": 306, "generalized_advantage_estim": 306, "vec_generalized_advantage_estim": 306, "reward2go": 306, "distance_loss": [306, 312], "hold_out_net": 306, "hold_out_param": [306, 312], "softupd": [306, 312, 313, 315], "hardupd": [306, 312], "batchsubsampl": [306, 310], "clearcudacach": 306, "countframeslog": 306, "logreward": [306, 310, 313], "optimizerhook": [306, 313], "replaybuffertrain": [306, 310, 313], "rewardnorm": 306, "selectkei": [306, 310], "trainerhookbas": [306, 310, 313], "updateweight": [306, 310, 313], "make_collector_offpolici": 306, "make_collector_onpolici": 306, "make_dqn_loss": 306, "make_redq_loss": 306, "make_redq_model": 306, "make_replay_buff": [306, 312], "make_target_updat": 306, "parallel_env_constructor": [306, 312], "sync_async_collector": 306, "sync_sync_collector": 306, "correct_for_frame_skip": 306, "get_stats_random_rollout": 306, "csvlogger": [306, 313], "mlflowlogg": 306, "wandblogg": 306, "get_logg": 306, "generate_exp_nam": 306, "journei": 307, "textbook": 307, "highlight": 307, "ever": [307, 318], "bump": 307, "think": [307, 314, 318, 324], "benefit": [307, 318, 321], "pr": 307, "ground": [308, 312, 319], "categori": [308, 310], "recycl": [308, 321], "impos": 308, "violat": 308, "noisier": 308, "Their": [308, 318], "sd": 308, "prob_modul": 308, "pick": [308, 312, 313], "tabl": [308, 313], "customari": 308, "hopefulli": [308, 313], "mathbb": [308, 313], "rightarrow": [308, 313], "soften": 308, "backbon": [308, 315, 317, 323], "make_actor": 308, "make_valu": 308, "shared_param": 308, "make_common": 308, "reusabl": [309, 312, 321], "swappabl": [309, 312], "characterist": [309, 312, 319], "trainabl": [309, 312, 320], "whatev": [309, 312], "convent": [309, 312, 315, 318, 319], "smth": [309, 312], "metric": [309, 312], "nutshel": [309, 312], "barto": [309, 318], "chapter": 309, "significantli": [309, 312, 313, 318], "next_stat": 309, "value_net_loss": 309, "pow": [309, 312], "therebi": 309, "room": 309, "convers": 309, "signifi": [309, 318], "underperform": 309, "thin": 309, "intric": 309, "believ": 310, "scheme": [310, 324], "substenti": 310, "_pre_steps_log_hook": 310, "_pre_optim_hook": 310, "sub_batch": 310, "_post_loss_hook": 310, "_post_optim_hook": 310, "post_optim": [310, 313], "_post_optim_log": 310, "post_optim_log": 310, "_post_steps_hook": 310, "_post_steps_log_hook": 310, "post_steps_log": 310, "comment": [310, 313, 323], "extens": [310, 321], "reserv": 310, "logginghook": 310, "logging_hook": 310, "save_dict": 310, "some_valu": 310, "torchsnapshot": 310, "ckpt_backend": 310, "pt": 310, "filepath": 310, "save_train": 310, "load_from_fil": 310, "perfectli": [310, 312, 319], "intern": 311, "author": [312, 313, 314, 315, 318, 319, 321], "vincent": [312, 313, 314, 315, 319, 321], "moen": [312, 313, 314, 315, 319, 321], "assembl": 312, "focus": 312, "straightforward": [312, 313, 321], "overview": [312, 314, 318, 323], "transpar": [312, 315], "understood": 312, "sota": [312, 313, 323], "illustr": [312, 313, 321], "device_count": [312, 313, 315, 320, 324], "loss_dict": 312, "modal": 312, "oblivi": [312, 314, 321], "elementari": 312, "didact": 312, "dilut": 312, "pessimist": [312, 313, 314], "target_actor_network_param": 312, "actor_in_kei": 312, "actor_crit": 312, "noth": [312, 314], "compromis": 312, "hp": 312, "hasattr": 312, "_value_estim": 312, "elif": [312, 313], "notimplementederror": 312, "unknown": 312, "_loss_actor": 312, "td_copi": 312, "actor_network_param": 312, "value_network_param": 312, "_loss_valu": 312, "pred_val": 312, "target_value_network_param": 312, "smooth": [312, 313], "loss_funt": 312, "glue": 312, "_forward": 312, "ndimens": 312, "remaind": 312, "focu": [312, 313, 314], "pixels_onli": [312, 313, 323, 324], "env_librari": 312, "env_task": 312, "env_arg": 312, "friendli": 312, "torchr": 312, "rescal": 312, "presum": 312, "make_transformed_env": 312, "reward_sc": 312, "double_to_float_list": 312, "double_to_float_inv_list": 312, "marker": 312, "env_per_collector": 312, "transform_state_dict": 312, "make_t_env": 312, "adjust": [312, 318, 319], "seem": [312, 315], "cheat": 312, "10m": 312, "cautiou": 312, "deal": [312, 314, 318, 321], "magnitud": 312, "thousand": [312, 315], "get_env_stat": 312, "proof_env": 312, "5000": [312, 314], "maxim": [312, 319], "recal": [312, 314], "ddpgmlpactor": 312, "ddpgmlpqnet": 312, "materi": 312, "ornsteinuhlenbeckprocesswrapp": 312, "make_ddpg_actor": 312, "q_net": 312, "moduless": 312, "sugges": 312, "1_000_000": [312, 315], "tight": 312, "10_000": [312, 314, 321], "traj_len": [312, 315], "make_record": 312, "recorder_obj": 312, "flavor": 312, "circular": 312, "buffer_s": [312, 313], "random_crop_len": 312, "prb": 312, "buffer_scratch_dir": 312, "temporari": 312, "dirrectori": 312, "trajecotri": 312, "25": [312, 314, 315, 318, 319, 322], "sampel": 312, "dataflow": 312, "ceil_div": 312, "utd": [312, 315], "update_to_data": 312, "realiz": 312, "_must_": 312, "001": [312, 319], "outdat": 312, "trick": [312, 313], "despit": 312, "adam": [312, 313, 314, 315, 318, 319], "optimizer_actor": 312, "lr": [312, 313, 314, 315, 318, 319], "weight_decai": [312, 313], "optimizer_valu": 312, "total_collection_step": 312, "pretti": [312, 321], "rewards_ev": 312, "collected_fram": [312, 313], "pbar": [312, 314, 315, 318, 319], "r0": 312, "numel": [312, 314, 315, 320, 321], "current_fram": 312, "sampled_tensordict": 312, "gn1": 312, "clip_grad_norm_": [312, 314, 318, 319], "gn2": 312, "gn": [312, 319], "td_record": 312, "rn": 312, "set_descript": [312, 314, 315, 318, 319], "2f": 312, "00": [312, 314, 315, 318, 319, 322], "800": 312, "2377": 312, "87it": [312, 314], "1600": 312, "09": [312, 319, 322], "858": 312, "99it": 312, "2400": 312, "05": [312, 314, 319], "1321": 312, "61it": [312, 319], "3200": 312, "02": [312, 313, 314, 315, 319, 322], "1953": [312, 319], "00it": [312, 319], "40": [312, 314, 315, 318, 319, 320, 321], "4000": [312, 314], "2449": [312, 319], "27it": [312, 314], "48": [312, 319], "4800": [312, 319], "3079": 312, "33it": [312, 319], "56": [312, 319], "5600": 312, "3523": 312, "63it": [312, 319], "37": [312, 315, 318, 319, 321, 322], "121": [312, 319, 324], "47": [312, 319, 321], "399": [312, 319], "80": [312, 314, 318, 319], "85": [312, 318, 319], "91": [312, 319], "6400": [312, 323], "944": 312, "73": [312, 314, 319], "83": [312, 319, 321], "109": [312, 319], "69": [312, 319], "204": [312, 319], "71": [312, 319], "19": [312, 315, 319, 321], "72": [312, 319], "7200": 312, "620": [312, 319], "82it": [312, 319], "22": [312, 319], "60": [312, 314, 318, 319, 323], "54": [312, 319], "181": [312, 319], "79": [312, 319], "8000": [312, 314], "504": [312, 319], "06it": 312, "78": [312, 319], "84": [312, 315, 319], "111": [312, 319], "39": [312, 319], "286": [312, 319], "97": [312, 319], "53": [312, 319, 323], "8800": 312, "461": [312, 319], "90": [312, 314, 318, 319], "55": [312, 315, 319, 322], "45": [312, 319], "205": [312, 319], "96": [312, 319], "9600": 312, "348": [312, 319], "64it": [312, 319], "36": [312, 315, 318, 319], "213": [312, 315, 319, 322], "86": [312, 319, 321], "31": [312, 319], "10400it": 312, "353": [312, 319], "10it": [312, 314], "63": [312, 318, 319, 321], "172": [312, 319], "75": [312, 319], "plot": [312, 314, 315, 318, 319], "mention": [312, 315, 321, 324], "matplotlib": [312, 314, 315, 318, 319, 321, 324], "pyplot": [312, 314, 315, 318, 319, 321, 324], "plt": [312, 314, 315, 318, 319, 321, 324], "zip": [312, 316], "legend": 312, "xlabel": [312, 315, 318, 319], "ylabel": [312, 318], "tight_layout": 312, "concret": [312, 314], "takeawai": [312, 313], "minut": [312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "316": [312, 319, 322], "mb": [312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324], "coding_ddpg": [312, 322], "jupyt": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324], "ipynb": [312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "galleri": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324], "sphinx": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324], "customis": [313, 318], "road": 313, "aspect": 313, "highest": 313, "prerequisit": 313, "familiar": [313, 318, 324], "lookup": 313, "amort": [313, 314], "cart": 313, "pole": 313, "un": 313, "actuat": 313, "frictionless": 313, "upright": 313, "duelingcnndqnet": 313, "is_notebook": 313, "shell": 313, "get_ipython": 313, "__class__": 313, "zmqinteractiveshel": 313, "qtconsol": 313, "terminalinteractiveshel": 313, "ipython": [313, 318, 319], "nameerror": 313, "umbrella": 313, "misplac": 313, "misus": 313, "orchestr": 313, "everyth": [313, 315], "five": [313, 314], "64x64": 313, "motion": [313, 319], "obs_norm_sd": 313, "simpler": 313, "get_norm_stat": 313, "test_env": 313, "make_model": 313, "dummy_env": 313, "output_s": [313, 315], "init_bia": 313, "actor_explor": 313, "eps_greedy_v": 313, "eps_greedy_val_env": 313, "get_replay_buff": 313, "n_optim": 313, "themselv": 313, "simplic": [313, 314, 320, 321], "get_collector": 313, "data_collector": 313, "bunch": 313, "concept": [313, 321], "power": 313, "ubiquit": 313, "get_loss_modul": 313, "target_updat": 313, "995": [313, 319], "sensit": 313, "variat": 313, "2e": [313, 319], "wd": 313, "upd": 313, "harder": [313, 323], "5_000": 313, "500000": 313, "100000": 313, "005": 313, "mandatori": [313, 314, 318, 319], "fairer": 313, "budget": [313, 314], "dqn_exp_": 313, "uuid1": [313, 324], "9895": 313, "0737": 313, "tmp": [313, 321], "tmpgiwrjdtx": 313, "dqn_exp_a55cb178": 313, "6399": 313, "11ee": [313, 324], "bc2b": [313, 324], "0242ac120002": [313, 324], "registr": 313, "cumbersom": 313, "buffer_hook": 313, "weight_updat": 313, "descript": [313, 314], "aliv": 313, "total_reward": 313, "traceback": [313, 320], "__w": [313, 320], "coding_dqn": [313, 322], "660": 313, "450": [313, 319], "typeerror": 313, "nonetyp": 313, "print_csv_files_in_fold": 313, "folder_path": 313, "csv_file": 313, "output_str": 313, "dirpath": 313, "walk": [313, 317], "endswith": 313, "strip": 313, "qvaluenetwork": 313, "worst": 313, "accuraci": 313, "fanci": 313, "497": [313, 319, 322], "1137": [313, 322], "demonstr": [314, 318, 319, 324], "talk": 314, "repetit": 314, "six": 314, "sophist": [314, 318], "invent": 314, "theta_k": 314, "frac": 314, "pi_": 314, "exceed": 314, "discourag": [314, 319], "indispens": 314, "analyz": 314, "lingua": 314, "franca": 314, "defaultdict": [314, 319], "has_cuda": [314, 318, 324], "3e": [314, 315, 318], "max_grad_norm": [314, 318], "big": [314, 321, 324], "ourselv": [314, 324], "benefici": 314, "errat": 314, "hamper": [314, 321], "reactiv": 314, "xy": 314, "sub_batch_s": 314, "num_epoch": [314, 318], "entropy_ep": [314, 318], "generalist": 314, "interchang": [314, 320, 321], "panel": 314, "charact": 314, "inverteddoublependulum": 314, "transmit": 314, "stai": 314, "thumb": 314, "supplementari": [314, 324], "told": 314, "stringent": [314, 318], "nevertheless": [314, 321], "confid": [314, 318], "pack": [314, 324], "ran": 314, "f_": 314, "mu_": 314, "difficulti": [314, 324], "brought": [314, 315], "d_ob": 314, "d_action": 314, "policy_modul": [314, 318], "That": 314, "said": 314, "briefli": [314, 318], "refil": [314, 318], "capac": 314, "conveni": [314, 318, 319], "easiest": [314, 318], "mathemat": [314, 318], "tradeoff": [314, 318], "advantage_modul": 314, "lr_schedul": [314, 319], "cosineannealinglr": [314, 319], "eval_str": 314, "tensordict_data": [314, 318], "data_view": [314, 318], "subdata": [314, 318], "cum_reward_str": 314, "4f": [314, 315, 319], "stepcount_str": 314, "param_group": 314, "lr_str": 314, "eval_rollout": 314, "nice": 314, "380": [314, 319], "12it": [314, 319], "2640": 314, "0894": [314, 319], "0003": [314, 315, 319], "382": [314, 319], "34it": 314, "0994": 314, "3000": 314, "07": [314, 318, 319], "385": [314, 319], "1557": 314, "388": [314, 319], "1952": 314, "0002": [314, 315, 319], "389": [314, 319], "72it": 314, "2063": 314, "6000": 314, "80it": 314, "2224": 314, "70": [314, 318, 319], "7000": 314, "386": [314, 319], "67it": 314, "2347": 314, "51it": [314, 319], "2596": 314, "9000": 314, "391": [314, 319], "59it": [314, 319], "2508": 314, "392": [314, 319], "2621": 314, "43": [314, 319], "cap": [314, 321], "figsiz": [314, 319], "subplot": [314, 319, 324], "titl": [314, 315, 318, 319], "bit": [314, 315, 318, 321], "coding_ppo": [314, 322], "rnn": 315, "lstmmodul": 315, "84x84": 315, "accessori": 315, "stamp": 315, "tensordictprim": 315, "se": 315, "assist": 315, "emb": 315, "n_cell": 315, "customiz": 315, "almost": 315, "bidirect": 315, "wouldn": 315, "make_tensordict_prim": 315, "interpolationmod": 315, "qval": 315, "stoch_polici": 315, "cudnn": 315, "opportun": 315, "coupl": [315, 319, 321], "uniniti": 315, "again": [315, 318, 320, 321, 324], "redund": 315, "strongli": 315, "million": 315, "sake": [315, 320, 321], "20_000": [315, 319], "longest": 315, "npai": 315, "action_spread": 315, "1000000": 315, "41": [315, 318, 319], "102": [315, 319, 321], "92it": 315, "0004": [315, 319], "122": [315, 319, 324], "49": [315, 318, 319], "26it": 315, "150": [315, 319], "52": [315, 319, 321, 322], "73it": 315, "51": [315, 319, 321], "178": [315, 319], "55it": [315, 319], "1834": 315, "dqn_with_rnn": [315, 322], "tutorials_python": 316, "tutorials_jupyt": 316, "distinct": 317, "humanoid": 317, "env1_obs_kei": 317, "observation_stand": 317, "env2_obs_kei": 317, "observation_walk": 317, "tdreset1": 317, "tdreset2": 317, "tdreset": 317, "67": [317, 319], "policy_common": 317, "policy_stand": 317, "policy_walk": 317, "But": 317, "exclusive_field": [317, 323], "stack_dim": [317, 323], "env1_mak": 317, "env2_mak": 317, "_single_task": 317, "td_rollout": 317, "638": [317, 322], "124": [317, 319, 322], "multi_task": [317, 322], "matteo": 318, "bettini": 318, "maddpg": 318, "navig": 318, "lidar": 318, "sensor": 318, "collis": 318, "tie": 318, "mappo": 318, "ippo": 318, "phase": [318, 321], "mathbf": 318, "pi": [318, 319], "_t": [318, 319], "fed": [318, 321], "approxim": [318, 324], "literatur": 318, "overcom": 318, "stationari": 318, "concurr": 318, "analys": 318, "gui": 318, "visualis": 318, "multiagentmlp": 318, "divic": 318, "vmas_devic": 318, "6_000": 318, "team": [318, 323], "n_iter": 318, "minibatch_s": 318, "generalis": 318, "furthermor": 318, "simd": 318, "parallelis": 318, "warp": 318, "todai": 318, "circl": 318, "surround": 318, "dot": [318, 319], "collid": 318, "drag": 318, "elast": 318, "acceler": 318, "penalis": 318, "num_vmas_env": 318, "scenario_nam": 318, "four": [318, 319], "environmnet": 318, "final_rew": 318, "agent_collis": 318, "stress": 318, "paramount": 318, "n_rollout_step": 318, "evolut": 318, "yourself": 318, "utilis": 318, "n_actions_per_ag": 318, "n_obs_per_ag": 318, "share_parameters_polici": 318, "policy_net": 318, "denot": 318, "unbatched_action_spec": 318, "carefulli": [318, 324], "grant": 318, "converg": 318, "cooper": 318, "share_parameters_crit": 318, "critic_net": 318, "fantast": 318, "minibatch": 318, "desc": 318, "episode_reward_mean": 318, "episode_reward_mean_list": 318, "get_item_shap": 318, "critic_param": 318, "target_critic_param": 318, "refresh": 318, "3641679584980011": 318, "4940122067928314": 318, "0600677728652954": 318, "58": [318, 319], "4344534873962402": 318, "1100871562957764": 318, "304917335510254": 318, "6943857669830322": 318, "871443748474121": 318, "8500826358795166": 318, "759843587875366": 318, "xvfb": 318, "pyvirtualdisplai": 318, "1400": [318, 319], "900": 318, "pil": 318, "rendering_callback": 318, "fromarrai": 318, "rgb_arrai": [318, 319], "gif": 318, "save_al": 318, "append_imag": 318, "profici": 318, "master": 318, "639": [318, 322], "multiagent_ppo": [318, 322], "freeli": 319, "touch": 319, "undertaken": 319, "broader": 319, "wider": 319, "algebra": 319, "acquaint": 319, "avenu": 319, "_apply_to_composit": 319, "default_x": 319, "default_i": 319, "torqu": 319, "upward": 319, "angular": 319, "sin": 319, "rad": 319, "sec": 319, "gravit": 319, "angl": 319, "deleg": 319, "new_th": 319, "new_thdot": 319, "thdot": 319, "g_forc": 319, "max_torqu": 319, "angle_norm": 319, "max_spe": 319, "albeit": 319, "gen_param": 319, "high_th": 319, "high_thdot": 319, "low_th": 319, "low_thdot": 319, "rng": 319, "lazili": 319, "trivial": 319, "neither": 319, "shortcut": [319, 324], "irrelev": 319, "_make_spec": 319, "td_param": 319, "pseudo": 319, "render_mod": 319, "render_fp": 319, "random_": 319, "_make_step": 319, "staticmethod": 319, "complic": [319, 321, 324], "showcas": 319, "skeleton": 319, "_apply_transform": [319, 324], "_inv_apply_transform": [319, 324], "subset": [319, 320], "unitari": 319, "sine": 319, "cosin": 319, "sintransform": 319, "costransform": 319, "t_sin": 319, "t_co": 319, "cat_transform": 319, "mdp": 319, "convin": 319, "simple_rollout": 319, "_data": 319, "unexplor": 319, "assumpt": [319, 321], "recreat": 319, "init_td": 319, "traj_return": 319, "last_reward": 319, "is_ipython": 319, "inlin": 319, "get_backend": 319, "ion": 319, "gcf": 319, "clear_output": 319, "625": 319, "0488": 319, "0748": 319, "519": 319, "0499": 319, "4472": 319, "073": 319, "58it": 319, "0685": 319, "0408": 319, "552": 319, "60it": 319, "5154": 319, "9086": 319, "527": 319, "9385": 319, "155": 319, "62it": 319, "2568": 319, "4981": 319, "223": 319, "8929": 319, "4491": 319, "581": 319, "3233": 319, "0664": 319, "596": 319, "1021": 319, "5263": 319, "9579": 319, "5807": 319, "8075": 319, "212": 319, "2009": 319, "5525": 319, "914": 319, "2894": 319, "0115": 319, "0977": 319, "1845": 319, "65it": 319, "1830": 319, "4858": 319, "233": 319, "2863": 319, "0297": 319, "464": 319, "4617": 319, "5997": 319, "904": 319, "1647": 319, "0777": 319, "901": 319, "4709": 319, "6813": 319, "8317": 319, "3221": 319, "5554": 319, "276": 319, "3353": 319, "701": 319, "8570": 319, "6656": 319, "463": 319, "7779": 319, "6911": 319, "875": 319, "0796": 319, "7082": 319, "308": 319, "0421": 319, "1496": 319, "5037": 319, "1755": 319, "62": 319, "66it": 319, "5029": 319, "9454": 319, "665": 319, "9330": 319, "2118": 319, "444": 319, "0995": 319, "6294": 319, "3146": 319, "2909": 319, "9720": 319, "1298": 319, "9923": 319, "0345": 319, "3438": 319, "3688": 319, "424": 319, "6953": 319, "5233": 319, "411": 319, "4288": 319, "8011": 319, "82": 319, "5329": 319, "2677": 319, "6969": 319, "7010": 319, "376": 319, "9352": 319, "7707": 319, "6178": 319, "5646": 319, "7304": 319, "9407": 319, "942": 319, "3882": 319, "7604": 319, "3507": 319, "8928": 319, "258": 319, "6978": 319, "4641": 319, "549": 319, "6047": 319, "544": 319, "5005": 319, "4136": 319, "2993": 319, "3222": 319, "4046": 319, "7314": 319, "275": 319, "6331": 319, "9318": 319, "961": 319, "8331": 319, "1604": 319, "4099": 319, "4761": 319, "125": 319, "4262": 319, "6363": 319, "3593": 319, "7377": 319, "2847": 319, "3443": 319, "867": 319, "3592": 319, "4760": 319, "441": 319, "9950": 319, "8021": 319, "77": [319, 321], "3528": 319, "1214": 319, "708": 319, "4023": 319, "3583": 319, "041": 319, "3801": 319, "0310": 319, "120": 319, "57": [319, 321], "4244": 319, "2039": 319, "4850": 319, "8748": 319, "706": 319, "59": [319, 321], "4897": 319, "9210": 319, "8964": 319, "61": 319, "0832": 319, "3934": 319, "456": 319, "8971": 319, "2933": 319, "74": 319, "3377": 319, "6996": 319, "2274": 319, "8916": 319, "098": 319, "65": [319, 321], "2660": 319, "9110": 319, "66": 319, "4503": 319, "6956": 319, "9172": 319, "4026": 319, "946": 319, "68": 319, "9229": 319, "5205": 319, "294": 319, "8872": 319, "6637": 319, "019": 319, "9281": 319, "2082": 319, "724": 319, "8561": 319, "6574": 319, "357": 319, "4138": 319, "5230": 319, "4065": 319, "5642": 319, "921": 319, "9786": 319, "4129": 319, "5831": 319, "266": 319, "76": [319, 321], "7723": 319, "4152": 319, "608": 319, "0898": 319, "5155": 319, "5376": 319, "5616": 319, "4094": 319, "283": 319, "5333": 319, "4803": 319, "895": 319, "6566": 319, "2588": 319, "662": 319, "4732": 319, "7503": 319, "068": 319, "0714": 319, "3370": 319, "059": 319, "8612": 319, "1915": 319, "3855": 319, "0349": 319, "9644": 319, "4538": 319, "445": 319, "0392": 319, "4080": 319, "1648": 319, "9599": 319, "143": [319, 322], "89": [319, 321], "4284": 319, "5946": 319, "2590": 319, "9181": 319, "4621": 319, "9075": 319, "674": 319, "92": [319, 321], "1772": 319, "9444": 319, "351": 319, "93": 319, "9391": 319, "5595": 319, "8673": 319, "6240": 319, "5919": 319, "0018": 319, "1071": 319, "9127": 319, "251": 319, "9799": 319, "3131": 319, "9612": 319, "9705": 319, "8741": 319, "2230": 319, "0972": 319, "0337": 319, "0350": 319, "0654": 319, "2441": 319, "4596": 319, "362": 319, "103": 319, "4362": 319, "171": 319, "104": 319, "4041": 319, "6907": 319, "105": 319, "4664": 319, "2760": 319, "0299": 319, "9712": 319, "349": 319, "107": [319, 321], "3332": 319, "4479": 319, "772": 319, "108": 319, "4357": 319, "9591": 319, "543": 319, "6216": 319, "1353": 319, "692": 319, "110": 319, "6261": 319, "7086": 319, "496": 319, "7758": 319, "9818": 319, "112": 319, "7772": 319, "5055": 319, "113": [319, 321], "5840": 319, "3180": 319, "2976": 319, "2083": 319, "115": 319, "5275": 319, "6873": 319, "116": 319, "4107": 319, "1624": 319, "117": 319, "6372": 319, "2571": 319, "118": 319, "4039": 319, "4428": 319, "119": 319, "4728": 319, "5628": 319, "6767": 319, "2466": 319, "522": 319, "5873": 319, "5072": 319, "6548": 319, "3766": 319, "123": 319, "5134": 319, "1955": 319, "2481": 319, "0591": 319, "4500": 319, "3368": 319, "126": [319, 321], "9708": 319, "7059": 319, "127": [319, 321], "3031": 319, "2534": 319, "843": 319, "3327": 319, "6193": 319, "129": 319, "4831": 319, "1172": 319, "2593": 319, "4219": 319, "962": 319, "8380": 319, "899": 319, "132": 319, "2721": 319, "9048": 319, "166": 319, "133": 319, "2419": 319, "5248": 319, "134": 319, "2139": 319, "4278": 319, "135": 319, "0690": 319, "5140": 319, "136": [319, 321], "1140": 319, "7402": 319, "137": [319, 321], "5356": 319, "1636": 319, "138": 319, "0671": 319, "8798": 319, "139": [319, 321], "8918": 319, "3298": 319, "307": 319, "140": 319, "1779": 319, "141": 319, "1771": 319, "3624": 319, "936": 319, "142": 319, "1683": 319, "4810": 319, "9373": 319, "4435": 319, "144": [319, 324], "4396": 319, "8092": 319, "145": 319, "2572": 319, "146": 319, "4212": 319, "0260": 319, "147": 319, "0939": 319, "6478": 319, "605": 319, "148": 319, "6606": 319, "7289": 319, "149": 319, "9300": 319, "7193": 319, "563": 319, "1166": 319, "8514": 319, "384": [319, 321], "151": 319, "09it": 319, "9108": 319, "0672": 319, "292": 319, "152": [319, 321], "47it": 319, "8591": 319, "3768": 319, "153": [319, 321], "78it": 319, "9976": 319, "154": 319, "0576": 319, "0067": 319, "935": [319, 321, 322], "18it": 319, "4199": 319, "1722": 319, "156": 319, "31it": 319, "8310": 319, "3466": 319, "157": 319, "39it": 319, "8631": 319, "2492": 319, "158": 319, "46it": 319, "8763": 319, "1277": 319, "159": 319, "5562": 319, "7446": 319, "54it": 319, "1082": 319, "9830": 319, "161": 319, "57it": 319, "0946": 319, "5229": 319, "162": [319, 322], "4574": 319, "6900": 319, "163": 319, "2229": 319, "0318": 319, "482": 319, "164": 319, "0543": 319, "0817": 319, "761": 319, "165": 319, "2809": 319, "5118": 319, "366": 319, "1142": 319, "5635": 319, "167": 319, "1949": 319, "2327": 319, "982": 319, "168": 319, "0967": 319, "0387": 319, "457": 319, "169": 319, "0782": 319, "2150": 319, "170": [319, 321], "5222": 319, "3725": 319, "9288": 319, "9837": 319, "1416": 319, "1099": 319, "173": 319, "8620": 319, "8475": 319, "174": [319, 321], "1807": 319, "4375": 319, "175": 319, "1148": 319, "0645": 319, "2751": 319, "8313": 319, "177": 319, "9286": 319, "9770": 319, "5735": 319, "2837": 319, "179": 319, "2926": 319, "9489": 319, "180": 319, "1507": 319, "8724": 319, "3567": 319, "182": 319, "3574": 319, "6140": 319, "183": [319, 322, 324], "7895": 319, "2518": 319, "184": 319, "6146": 319, "185": 319, "8776": 319, "7358": 319, "186": 319, "3722": 319, "8428": 319, "187": 319, "2656": 319, "7955": 319, "188": 319, "0092": 319, "7106": 319, "829": 319, "189": 319, "2264": 319, "6919": 319, "190": 319, "1438": 319, "1362": 319, "191": 319, "0618": 319, "8217": 319, "192": 319, "9420": 319, "6765": 319, "193": 319, "7745": 319, "0709": 319, "194": 319, "9478": 319, "6867": 319, "195": 319, "6507": 319, "6225": 319, "196": 319, "2244": 319, "2195": 319, "197": 319, "5385": 319, "9263": 319, "198": 319, "1878": 319, "2374": 319, "199": 319, "8054": 319, "3504": 319, "557": 319, "0766": 319, "6825": 319, "201": 319, "2011": 319, "8393": 319, "202": 319, "0803": 319, "7815": 319, "203": 319, "8363": 319, "2460": 319, "8643": 319, "2191": 319, "593": 319, "0773": 319, "1343": 319, "206": 319, "8657": 319, "207": 319, "9304": 319, "7584": 319, "208": 319, "8752": 319, "2307": 319, "209": 319, "5250": 319, "4869": 319, "7837": 319, "5762": 319, "211": 319, "6661": 319, "8600": 319, "2502": 319, "1752": 319, "3075": 319, "8871": 319, "214": 319, "9406": 319, "8090": 319, "215": 319, "6291": 319, "8923": 319, "876": 319, "216": 319, "9504": 319, "21e": 319, "217": 319, "7431": 319, "7880": 319, "218": 319, "4463": 319, "5432": 319, "219": 319, "3793": 319, "3313": 319, "220": 319, "8843": 319, "0369": 319, "065": 319, "221": 319, "4828": 319, "8391": 319, "222": 319, "6265": 319, "2913": 319, "947": 319, "5541": 319, "1252": 319, "224": 319, "7342": 319, "2396": 319, "225": 319, "5936": 319, "1924": 319, "226": 319, "9975": 319, "2045": 319, "227": 319, "8367": 319, "9540": 319, "228": 319, "7259": 319, "6743": 319, "229": 319, "4827": 319, "7528": 319, "230": 319, "7361": 319, "8756": 319, "231": 319, "7646": 319, "1116": 319, "232": 319, "5426": 319, "8385": 319, "5662": 319, "8585": 319, "234": 319, "8234": 319, "7930": 319, "235": 319, "2648": 319, "9309": 319, "236": 319, "6817": 319, "237": 319, "0943": 319, "1533": 319, "238": 319, "3045": 319, "0483": 319, "239": 319, "4128": 319, "2528": 319, "240": [319, 323, 324], "6415": 319, "0201": 319, "241": 319, "4437": 319, "4365": 319, "242": 319, "0358": 319, "4943": 319, "243": 319, "1272": 319, "5003": 319, "1180": 319, "2637": 319, "245": 319, "7197": 319, "0873": 319, "246": 319, "2917": 319, "247": 319, "0160": 319, "0738": 319, "248": 319, "3689": 319, "0120": 319, "249": 319, "5570": 319, "0475": 319, "250": [319, 320], "4423": 319, "2220": 319, "6803": 319, "252": 319, "1465": 319, "7214": 319, "253": 319, "8801": 319, "7034": 319, "254": 319, "9136": 319, "4076": 319, "7589": 319, "5013": 319, "8150": 319, "2241": 319, "257": 319, "0753": 319, "8081": 319, "1951": 319, "8314": 319, "259": 319, "0038": 319, "260": 319, "0889": 319, "4616": 319, "261": 319, "0655": 319, "262": 319, "8333": 319, "9476": 319, "263": 319, "7554": 319, "3798": 319, "264": 319, "3717": 319, "3947": 319, "529": 319, "265": 319, "3060": 319, "6495": 319, "7467": 319, "8889": 319, "267": 319, "8457": 319, "591": 319, "268": 319, "7137": 319, "0536": 319, "771": 319, "269": 319, "1651": 319, "270": 319, "8246": 319, "5709": 319, "281": 319, "271": 319, "7502": 319, "0521": 319, "032": 319, "272": 319, "5475": 319, "7253": 319, "273": 319, "2856": 319, "7130": 319, "274": 319, "2778": 319, "4122": 319, "8368": 319, "1841": 319, "9622": 319, "1603": 319, "003e": 319, "277": 319, "0247": 319, "346": 319, "278": 319, "2238": 319, "6418": 319, "279": 319, "0626": 319, "2538": 319, "280": 319, "0149": 319, "7380": 319, "2167": 319, "8911": 319, "282": 319, "8725": 319, "1983": 319, "8142": 319, "3709": 319, "284": 319, "4989": 319, "285": 319, "6464": 319, "6210": 319, "9726": 319, "0820": 319, "287": 319, "6975": 319, "9091": 319, "288": 319, "4926": 319, "4791": 319, "289": 319, "0905": 319, "3500": 319, "290": 319, "2287": 319, "291": 319, "9918": 319, "5543": 319, "9245": 319, "6444": 319, "631": 319, "293": 319, "0448": 319, "4769": 319, "8566": 319, "7208": 319, "295": 319, "0966": 319, "296": 319, "5303": 319, "1537": 319, "023": 319, "297": 319, "2682": 319, "564": 319, "298": 319, "4318": 319, "5063": 319, "299": 319, "7475": 319, "4190": 319, "8186": 319, "5077": 319, "301": 319, "1883": 319, "5291": 319, "472": 319, "302": 319, "1256": 319, "3998": 319, "303": [319, 320], "3622": 319, "0930": 319, "626": 319, "304": 319, "9500": 319, "0075": 319, "5664": 319, "305": 319, "5697": 319, "3024": 319, "306": 319, "3117": 319, "0052": 319, "006": 319, "0981": 319, "9312": 319, "3873": 319, "309": 319, "0411": 319, "2650": 319, "310": 319, "1656": 319, "0228": 319, "004": 319, "311": 319, "1196": 319, "2478": 319, "312": 319, "7353": 319, "0812": 319, "313": 319, "3022": 319, "758": 319, "314": 319, "1406": 319, "4626": 319, "315": 319, "2156": 319, "851": 319, "3774": 319, "317": 319, "6385": 319, "9917": 319, "318": 319, "2764": 319, "905": 319, "319": 319, "6391": 319, "9317": 319, "320": [319, 324], "9748": 319, "2679": 319, "321": 319, "8495": 319, "5125": 319, "8177": 319, "6602": 319, "323": 319, "0704": 319, "5776": 319, "324": 319, "9833": [319, 323], "1339": 319, "402": 319, "325": 319, "1238": 319, "326": 319, "9299": 319, "0227": 319, "327": 319, "7727": 319, "1607": 319, "336": 319, "328": 319, "3958": 319, "3223": 319, "763": 319, "329": 319, "4742": 319, "1797": 319, "330": 319, "0144": 319, "0085": 319, "791": 319, "331": 319, "8284": 319, "0428": 319, "332": 319, "0098": 319, "7365": 319, "333": 319, "4566": 319, "0781": 319, "086": 319, "334": 319, "3355": 319, "0230": 319, "335": 319, "9346": 319, "0423": 319, "076": 319, "3711": 319, "1335": 319, "6855": 319, "337": 319, "0304": 319, "0023": 319, "8459": 319, "338": 319, "9998": 319, "4399": 319, "339": 319, "2303": 319, "1346": 319, "340": 319, "2915": 319, "7116": 319, "341": 319, "5560": 319, "0487": 319, "342": 319, "5119": 319, "061": 319, "343": 319, "3305": 319, "3705": 319, "957": 319, "344": 319, "6068": 319, "2112": 319, "345": 319, "5731": 319, "3897": 319, "0376": 319, "347": 319, "0434": 319, "012": 319, "1300": 319, "1215": 319, "0968": 319, "0885": 319, "350": 319, "1348": 319, "0073": 319, "5052": 319, "4184": 319, "2817": 319, "352": 319, "8887": 319, "4779": 319, "1009": 319, "354": 319, "0604": 319, "599": 319, "355": 319, "4486": 319, "1176": 319, "656": 319, "356": 319, "2436": 319, "0668": 319, "8849": 319, "0012": 319, "358": 319, "7511": 319, "8804": 319, "359": 319, "8870": 319, "6728": 319, "360": 319, "8841": 319, "5508": 319, "361": 319, "5242": 319, "0268": 319, "3232": 319, "0013": 319, "6185": 319, "363": 319, "1378": 319, "0204": 319, "364": 319, "0355": 319, "685": 319, "365": 319, "4884": 319, "0231": 319, "0770": 319, "0014": 319, "6793": 319, "367": 319, "9834": 319, "863": 319, "368": 319, "6709": 319, "462": 319, "369": 319, "5199": 319, "9790": 319, "370": 319, "9401": 319, "7802": 319, "371": 319, "6723": 319, "372": 319, "2678": 319, "6201": 319, "373": 319, "2184": 319, "7385": 319, "374": 319, "6344": 319, "617": 319, "375": 319, "9945": 319, "0772": 319, "567": 319, "7576": 319, "0398": 319, "377": 319, "3396": 319, "0022": 319, "094": 319, "378": 319, "3073": 319, "4018": 319, "379": 319, "1869": 319, "0481": 319, "1117": 319, "381": 319, "6823": 319, "981": 319, "8305": 319, "0210": 319, "383": [319, 322], "4908": 319, "0272": 319, "538": 319, "3267": 319, "0111": 319, "7965": 319, "1796": 319, "0039": 319, "5396": 319, "3757": 319, "0490": 319, "387": 319, "1394": 319, "4187": 319, "2986": 319, "7954": 319, "1274": 319, "0063": 319, "813": 319, "390": 319, "8706": 319, "0114": 319, "6922": 319, "2423": 319, "9115": 319, "2602": 319, "393": 319, "0783": 319, "394": 319, "0631": 319, "0057": 319, "7444": 319, "395": 319, "3339": 319, "0167": 319, "396": 319, "4806": 319, "397": 319, "4171": 319, "067": 319, "398": 319, "2618": 319, "5809": 319, "0054": 319, "3364": 319, "8733": 319, "0184": 319, "401": 319, "9137": 319, "0113": 319, "025": 319, "0386": 319, "0625": 319, "403": 319, "1332": 319, "0582": 319, "7816": 319, "404": 319, "8341": 319, "0941": 319, "854": 319, "405": 319, "8615": 319, "588": 319, "406": 319, "3849": 319, "008": 319, "407": 319, "9395": 319, "0765": 319, "055": 319, "408": 319, "2685": 319, "2235": 319, "688": 319, "409": 319, "3052": 319, "4249": 319, "410": 319, "6806": 319, "6383": 319, "3721": 319, "9981": 319, "412": 319, "1862": 319, "822": 319, "413": 319, "9811": 319, "0171": 319, "013": 319, "414": 319, "0252": 319, "0049": 319, "6205": 319, "415": 319, "1108": 319, "4921": 319, "416": 319, "15it": 319, "9142": 319, "8130": 319, "417": 319, "52it": 319, "1725": 319, "0036": 319, "3196": 319, "418": 319, "81it": 319, "7795": 319, "0242": 319, "799": 319, "419": 319, "04it": 319, "7737": 319, "0138": 319, "420": 319, "21it": 319, "1462": 319, "0053": 319, "421": 319, "9226": 319, "6139": 319, "422": 319, "43it": 319, "9889": 319, "0403": 319, "423": 319, "49it": 319, "6194": 319, "0032": 319, "53it": 319, "3989": 319, "0104": 319, "425": 319, "9960": 319, "0009": 319, "6009": 319, "426": 319, "2697": 319, "0914": 319, "427": 319, "4256": 319, "1114": 319, "428": 319, "9862": 319, "1932": 319, "429": 319, "0637": 319, "0623": 319, "082": 319, "430": 319, "9906": 319, "2031": 319, "431": 319, "9948": 319, "0895": 319, "432": 319, "1970": 319, "0256": 319, "433": 319, "4231": 319, "0449": 319, "644": 319, "434": 319, "1039": 319, "1973": 319, "435": 319, "4561": 319, "1225": 319, "436": 319, "0211": 319, "2125": 319, "437": 319, "3866": 319, "0050": 319, "7202": 319, "438": 319, "6388": 319, "0072": 319, "439": 319, "1187": 319, "0015": 319, "5116": 319, "440": 319, "0432": 319, "0025": 319, "7809": 319, "1925": 319, "0103": 319, "442": 319, "9570": 319, "443": 319, "0871": 319, "5601": 319, "0165": 319, "0047": 319, "6061": 319, "2746": 319, "0027": 319, "7887": 319, "446": 319, "1835": 319, "0035": 319, "855": 319, "447": 319, "8420": 319, "548": 319, "448": 319, "2653": 319, "0126": 319, "9736": 319, "449": 319, "0594": 319, "0119": 319, "6196": 319, "4509": 319, "0373": 319, "451": 319, "0620": 319, "992": 319, "452": 319, "6898": 319, "3235": 319, "687": 319, "453": 319, "5879": 319, "454": 319, "8406": 319, "0694": 319, "455": 319, "8259": 319, "0235": 319, "8500": 319, "0024": 319, "4054": 319, "458": 319, "2027": 319, "459": 319, "5966": 319, "460": 319, "6942": 319, "0016": 319, "4254": 319, "6703": 319, "0145": 319, "8124": 319, "0218": 319, "9196": 319, "0188": 319, "8986": 319, "0884": 319, "0084": 319, "5624": 319, "465": 319, "8862": 319, "0006": 319, "5384": 319, "466": 319, "5837": 319, "467": 319, "8954": 319, "0101": 319, "6751": 319, "468": 319, "8063": 319, "0122": 319, "9635": 319, "469": 319, "0692": 319, "4216": 319, "470": 319, "1227": 319, "0586": 319, "162e": 319, "471": 319, "9690": 319, "0074": 319, "4166": 319, "6324": 319, "473": 319, "0778": 319, "474": 319, "8548": 319, "0017": 319, "4408": 319, "475": 319, "8125": 319, "1515": 319, "476": 319, "2733": 319, "0044": 319, "2836": 319, "477": 319, "7497": 319, "7681": 319, "478": 319, "8547": 319, "0105": 319, "7212": 319, "479": 319, "9848": 319, "0019": 319, "6498": 319, "480": 319, "1987": 319, "0011": 319, "5473": 319, "481": 319, "8991": 319, "0033": 319, "6091": 319, "9189": 319, "5771": 319, "483": 319, "6781": 319, "7542": 319, "484": 319, "5959": 319, "0064": 319, "4295": 319, "485": 319, "16it": 319, "2547": 319, "486": 319, "0636": 319, "547": 319, "487": 319, "0065": 319, "488": 319, "1694": 319, "0083": 319, "5759": 319, "489": 319, "0493": 319, "0021": 319, "7805": 319, "490": 319, "0950": 319, "491": 319, "41it": 319, "9717": 319, "3672": 319, "492": 319, "48it": 319, "0207": 319, "493": 319, "8266": 319, "0069": 319, "5365": 319, "494": 319, "56it": 319, "2623": 319, "5078": 319, "495": 319, "4545": 319, "09636": 319, "8754": 319, "0010": 319, "498": 319, "0031": 319, "8269": 319, "499": 319, "4082": 319, "6642": 319, "2284": 319, "501": 319, "9130": 319, "0008": 319, "502": 319, "2944": 319, "503": 319, "7624": 319, "0056": 319, "3858": 319, "0890": 319, "0042": 319, "505": 319, "7505": 319, "2157": 319, "506": 319, "8394": 319, "3413": 319, "507": [319, 322], "9609": 319, "0041": 319, "6905": 319, "508": 319, "8467": 319, "4409": 319, "509": 319, "510": 319, "8128": 319, "3559": 319, "511": 319, "1479": 319, "0264": 319, "1589": 319, "566": 319, "513": 319, "2756": 319, "0046": 319, "5266": 319, "514": 319, "9873": 319, "0112": 319, "9314": 319, "515": 319, "3791": 319, "0721": 319, "516": 319, "4580": 319, "0758": 319, "6114": 319, "517": 319, "2431": 319, "518": 319, "1958": 319, "5553": 319, "8924": 319, "0097": 319, "520": 319, "3737": 319, "0234": 319, "521": 319, "9125": 319, "4623": 319, "3230": 319, "0589": 319, "3784": 319, "523": 319, "9482": 319, "0051": 319, "524": 319, "1979": 319, "0045": 319, "6401": 319, "525": 319, "1588": 319, "0048": 319, "6255": 319, "526": 319, "6084": 319, "3477": 319, "1475": 319, "0209": 319, "3456": 319, "528": 319, "7611": 319, "1040": 319, "0099": 319, "0173": 319, "643": 319, "530": 319, "8189": 319, "4358": 319, "531": 319, "9897": 319, "532": 319, "1548": 319, "9751": 319, "533": 319, "6362": 319, "7495": 319, "534": 319, "1749": 319, "9513": 319, "535": 319, "7708": 319, "0371": 319, "536": 319, "2649": 319, "0437": 319, "537": 319, "5491": 319, "0276": 319, "6426": 319, "7294": 319, "078e": 319, "539": 319, "9928": 319, "576": 319, "540": 319, "7937": 319, "0124": 319, "9664": 319, "541": 319, "3342": 319, "542": 319, "2046": 319, "5496": 319, "0956": 319, "0059": 319, "545": 319, "9028": 319, "5843": 319, "546": 319, "0674": 319, "0178": 319, "797": 319, "2815": 319, "0599": 319, "1587": 319, "9276": 319, "8228": 319, "6164": 319, "551": 319, "6850": 319, "9167": 319, "3092": 319, "0670": 319, "9177": 319, "553": 319, "1599": 319, "0043": 319, "554": 319, "4672": 319, "6367": 319, "555": 319, "3657": 319, "556": 319, "6694": 319, "2622": 319, "0372": 319, "4841": 319, "558": 319, "2707": 319, "0058": 319, "757": 319, "559": 319, "2267": 319, "5415": 319, "560": [319, 322], "4556": 319, "0163": 319, "561": [319, 320], "1839": 319, "0809": 319, "6262": 319, "562": 319, "0278": 319, "79it": 319, "1112": 319, "01it": 319, "6155": 319, "565": 319, "17it": 319, "1427": 319, "3582": 319, "624": 319, "29it": 319, "7870": 319, "9490": 319, "38it": 319, "0439": 319, "8796": 319, "568": 319, "44it": 319, "8026": 319, "2720": 319, "612": 319, "569": 319, "3147": 319, "8486": 319, "570": 319, "7917": 319, "0129": 319, "571": 319, "9553": 319, "0020": 319, "6871": 319, "572": 319, "3132": 319, "0159": 319, "8646": 319, "573": 319, "5320": 319, "0269": 319, "574": 319, "2955": 319, "0245": 319, "575": 319, "3347": 319, "0179": 319, "9718": 319, "1629": 319, "804": 319, "577": 319, "4164": 319, "0070": 319, "4335": 319, "578": 319, "579": 319, "3049": 319, "9063": 319, "580": 319, "8785": 319, "3295": 319, "5184": 319, "0546": 319, "582": 319, "4589": 319, "583": 319, "4697": 319, "2476": 319, "584": 319, "2397": 319, "585": 319, "4953": 319, "1775": 319, "586": 319, "2258": 319, "0110": 319, "7671": 319, "587": 319, "3981": 319, "8590": 319, "0007": 319, "589": 319, "9820": 319, "4221": 319, "590": 319, "1293": 319, "0116": 319, "868": 319, "1675": 319, "5931": 319, "592": 319, "2910": 319, "5219": 319, "2124": 319, "1730": 319, "737": 319, "594": 319, "2914": 319, "0206": 319, "595": 319, "0172": 319, "3982": 319, "0945": 319, "0121": 319, "4789": 319, "597": 319, "3805": 319, "4074": 319, "598": 319, "3310": 319, "5065": 319, "6028": 319, "6316": 319, "6724": 319, "6523": 319, "601": 319, "0136": 319, "4298": 319, "602": 319, "3524": 319, "2629": 319, "603": 319, "2635": 319, "7839": 319, "604": 319, "6041": 319, "8027": 319, "4170": 319, "4675": 319, "606": 319, "3153": 319, "9316": 319, "607": 319, "0649": 319, "9722": 319, "7989": 319, "0329": 319, "609": 319, "1976": 319, "6852": 319, "610": 319, "4793": 319, "1255": 319, "611": 319, "4581": 319, "0394": 319, "2047": 319, "0326": 319, "613": 319, "8967": 319, "8619": 319, "614": 319, "5906": 319, "6491": 319, "615": 319, "6634": 319, "4394": 319, "616": 319, "0624": 319, "0061": 319, "5676": 319, "3259": 319, "0131": 319, "7733": 319, "618": 319, "7515": 319, "0189": 319, "5575": 319, "619": 319, "9313": 319, "6286": 319, "4325": 319, "7832": 319, "621": 319, "1134": 319, "622": 319, "4572": 319, "0500": 319, "5838": 319, "623": 319, "3818": 319, "8623": 319, "1253": 319, "6622": 319, "subject": 319, "saw": [319, 321], "explain": 320, "semat": 320, "r3mtransform": 320, "embodi": 320, "ai": 320, "env_transform": [320, 324], "pretrained_model": [320, 322], "got": 320, "wiser": 320, "conclud": 320, "_storag": [320, 321], "814": [320, 322], "supervis": [321, 324], "pull": 321, "temporarili": 321, "drastic": 321, "ram": [321, 324], "batteri": 321, "dataliststorag": 321, "datalazytensorstorag": 321, "tensordidct": 321, "datalazymemmapstorag": 321, "buffer_list": 321, "lowest": 321, "medium": 321, "buffer_lazytensor": 321, "buffer_lazymemmap": 321, "fullest": 321, "organ": 321, "convini": 321, "mydata": 321, "background": 321, "question": [321, 323], "_i": 321, "artifici": 321, "0892946e": 321, "she": 321, "augment": 321, "proport": 321, "hist": 321, "barcontain": 321, "artist": 321, "revert": 321, "expens": 321, "reappear": 321, "unfold": 321, "problemat": 321, "window": 321, "4th": 321, "rb_tutori": [321, 322], "torchrl_demo": [322, 323], "920": [322, 323], "torchrl_env": [322, 324], "1833": 322, "demo": 323, "icml": 323, "vmoen": 323, "fb": 323, "invest": 323, "platform": 323, "media": 323, "truli": 323, "predominantli": 323, "tensordict1": 323, "tensordict2": 323, "tensordict_sampl": 323, "_sampler": 323, "_sum_tre": 323, "modulenotfounderror": 323, "28791671991348267": 323, "gym_env": 323, "noopresetenv": [323, 324], "backbone_modul": 323, "params_expand": 323, "tensordict_exp": 323, "base_modul": 323, "0137": 323, "1524": 323, "0641": 323, "viewbackward0": 323, "asstridedbackward0": 323, "8728": 323, "1334": 323, "3494": 323, "6887": 323, "6402": 323, "_safetanhbackward": 323, "1132": 323, "1762": 323, "3430": 323, "2668": 323, "2918": 323, "6239": 323, "roughli": 323, "tensordicts_prealloc": 323, "tensordicts_stack": 323, "tensordict_rollout": [323, 324], "disclaim": 323, "concatmodul": 323, "loss_td": 323, "year": 323, "roadmap": 323, "compris": 323, "contributor": 323, "curiou": 323, "nascent": 323, "unsupervis": 324, "rom": 324, "licens": 324, "pygam": 324, "unifi": 324, "insid": 324, "_build_env": 324, "sphinx_gallery_start_ignor": 324, "filterwarn": 324, "sphinx_gallery_end_ignor": 324, "adventur": 324, "airraid": 324, "alien": 324, "amidar": 324, "assault": 324, "3424": 324, "deserv": 324, "__episode__": 324, "__trajectory__": 324, "void": 324, "reproduct": 324, "tensordict_tprim": 324, "imshow": 324, "axesimag": 324, "0x7f4b04175fa0": 324, "inconsist": 324, "0x7f4ab96ff200": 324, "swingup": 324, "wrapper1": 324, "wrapper2": 324, "obviou": 324, "truth": 324, "env0": 324, "env_transformed_bi": 324, "stanc": 324, "transformeddistribut": 324, "base_dist": 324, "concat": 324, "mofidi": 324, "transformedenviron": 324, "moderet": 324, "computation": 324, "legitim": 324, "incom": 324, "amongst": 324, "wor": 324, "convention": 324, "scope": 324, "markovian": 324, "3288080526": 324, "constain": 324, "bar_": 324, "get_someth": 324, "bar_d313b248": 324, "6398": 324, "aargh": 324, "foo_list": 324, "batched_env": 324, "_dispatch_caller_parallel": 324, "0x7f4af1f933d0": 324, "bar_daadc78c": 324, "b62b": 324, "bar_daad3f42": 324, "be14": 324, "bar_daa3ea6": 324, "8e58": 324, "parallen": 324, "particularili": 324, "evolv": 324, "steadi": 324, "approx": 324, "0307": 324, "3268": 324, "2225": 324, "0752": 324, "0860": 324, "1829": 324, "_extra_st": 324, "observation_ssq": 324, "observation_sum": 324, "1887": 324, "4174": 324, "0196": 324, "2474": 324, "1982": 324, "3363": 324, "dispach": 324, "absor": 324}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 2, 1, "", "BraxEnv"], [68, 2, 1, "", "BraxWrapper"], [69, 2, 1, "", "DMControlEnv"], [70, 2, 1, "", "DMControlWrapper"], [71, 0, 1, "", "EnvBase"], [72, 0, 1, "", "EnvCreator"], [73, 0, 1, "", "EnvMetaData"], [74, 2, 1, "", "GymEnv"], [75, 0, 1, "", "GymLikeEnv"], [76, 2, 1, "", "GymWrapper"], [77, 2, 1, "", "HabitatEnv"], [78, 2, 1, "", "IsaacGymEnv"], [79, 2, 1, "", "IsaacGymWrapper"], [80, 2, 1, "", "JumanjiEnv"], [81, 2, 1, "", "JumanjiWrapper"], [82, 2, 1, "", "MarlGroupMapType"], [83, 2, 1, "", "ModelBasedEnvBase"], [84, 2, 1, "", "MultiThreadedEnv"], [85, 2, 1, "", "MultiThreadedEnvWrapper"], [86, 2, 1, "", "OpenMLEnv"], [87, 0, 1, "", "ParallelEnv"], [88, 2, 1, "", "PettingZooEnv"], [89, 2, 1, "", "PettingZooWrapper"], [90, 2, 1, "", "RoboHiveEnv"], [91, 2, 1, "", "SMACv2Env"], [92, 2, 1, "", "SMACv2Wrapper"], [93, 0, 1, "", "SerialEnv"], [94, 2, 1, "", "VmasEnv"], [95, 2, 1, "", "VmasWrapper"], [96, 2, 1, "", "check_marl_grouping"], [97, 2, 1, "", "gym_backend"], [83, 1, 1, "", "rand_step"], [83, 1, 1, "", "reset"], [83, 1, 1, "", "rollout"], [99, 2, 1, "", "set_gym_backend"], [83, 1, 1, "", "set_seed"], [83, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[71, 3, 1, "", "action_key"], [71, 3, 1, "", "action_keys"], [71, 3, 1, "", "action_spec"], [71, 1, 1, "", "add_module"], [71, 1, 1, "", "apply"], [71, 3, 1, "", "batch_locked"], [71, 1, 1, "", "bfloat16"], [71, 1, 1, "", "buffers"], [71, 1, 1, "", "children"], [71, 1, 1, "", "compile"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 3, 1, "", "done_key"], [71, 3, 1, "", "done_keys"], [71, 3, 1, "", "done_keys_groups"], [71, 3, 1, "", "done_spec"], [71, 1, 1, "", "double"], [71, 1, 1, "", "eval"], [71, 1, 1, "", "extra_repr"], [71, 1, 1, "", "fake_tensordict"], [71, 1, 1, "", "float"], [71, 1, 1, "", "forward"], [71, 3, 1, "", "full_action_spec"], [71, 3, 1, "", "full_done_spec"], [71, 3, 1, "", "full_reward_spec"], [71, 3, 1, "", "full_state_spec"], [71, 1, 1, "", "get_buffer"], [71, 1, 1, "", "get_extra_state"], [71, 1, 1, "", "get_parameter"], [71, 1, 1, "", "get_submodule"], [71, 1, 1, "", "half"], [71, 3, 1, "", "input_spec"], [71, 1, 1, "", "ipu"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "modules"], [71, 1, 1, "", "named_buffers"], [71, 1, 1, "", "named_children"], [71, 1, 1, "", "named_modules"], [71, 1, 1, "", "named_parameters"], [71, 3, 1, "", "observation_spec"], [71, 3, 1, "", "output_spec"], [71, 1, 1, "", "parameters"], [71, 1, 1, "", "rand_action"], [71, 1, 1, "id0", "rand_step"], [71, 1, 1, "", "register_backward_hook"], [71, 1, 1, "", "register_buffer"], [71, 1, 1, "", "register_forward_hook"], [71, 1, 1, "", "register_forward_pre_hook"], [71, 1, 1, "", "register_full_backward_hook"], [71, 1, 1, "", "register_full_backward_pre_hook"], [71, 1, 1, "", "register_load_state_dict_post_hook"], [71, 1, 1, "", "register_module"], [71, 1, 1, "", "register_parameter"], [71, 1, 1, "", "register_state_dict_pre_hook"], [71, 1, 1, "", "requires_grad_"], [71, 1, 1, "id1", "reset"], [71, 3, 1, "", "reset_keys"], [71, 3, 1, "", "reward_key"], [71, 3, 1, "", "reward_keys"], [71, 3, 1, "", "reward_spec"], [71, 1, 1, "id2", "rollout"], [71, 1, 1, "", "set_extra_state"], [71, 1, 1, "id3", "set_seed"], [71, 1, 1, "", "share_memory"], [71, 3, 1, "", "specs"], [71, 1, 1, "", "state_dict"], [71, 3, 1, "", "state_spec"], [71, 1, 1, "id4", "step"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_empty"], [71, 1, 1, "", "train"], [71, 1, 1, "", "type"], [71, 1, 1, "", "xpu"], [71, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[75, 3, 1, "", "action_key"], [75, 3, 1, "", "action_keys"], [75, 3, 1, "", "action_spec"], [75, 1, 1, "", "add_module"], [75, 1, 1, "", "apply"], [75, 3, 1, "", "batch_locked"], [75, 1, 1, "", "bfloat16"], [75, 1, 1, "", "buffers"], [75, 1, 1, "", "children"], [75, 1, 1, "", "close"], [75, 1, 1, "", "compile"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 3, 1, "", "done_key"], [75, 3, 1, "", "done_keys"], [75, 3, 1, "", "done_keys_groups"], [75, 3, 1, "", "done_spec"], [75, 1, 1, "", "double"], [75, 1, 1, "", "eval"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "fake_tensordict"], [75, 1, 1, "", "float"], [75, 1, 1, "", "forward"], [75, 3, 1, "", "full_action_spec"], [75, 3, 1, "", "full_done_spec"], [75, 3, 1, "", "full_reward_spec"], [75, 3, 1, "", "full_state_spec"], [75, 1, 1, "", "get_buffer"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "get_parameter"], [75, 1, 1, "", "get_submodule"], [75, 1, 1, "", "half"], [75, 3, 1, "", "input_spec"], [75, 1, 1, "", "ipu"], [75, 1, 1, "", "load_state_dict"], [75, 1, 1, "", "modules"], [75, 1, 1, "", "named_buffers"], [75, 1, 1, "", "named_children"], [75, 1, 1, "", "named_modules"], [75, 1, 1, "", "named_parameters"], [75, 3, 1, "", "observation_spec"], [75, 3, 1, "", "output_spec"], [75, 1, 1, "", "parameters"], [75, 1, 1, "", "rand_action"], [75, 1, 1, "", "rand_step"], [75, 1, 1, "", "read_action"], [75, 1, 1, "", "read_done"], [75, 1, 1, "", "read_obs"], [75, 1, 1, "", "read_reward"], [75, 1, 1, "", "register_backward_hook"], [75, 1, 1, "", "register_buffer"], [75, 1, 1, "", "register_forward_hook"], [75, 1, 1, "", "register_forward_pre_hook"], [75, 1, 1, "", "register_full_backward_hook"], [75, 1, 1, "", "register_full_backward_pre_hook"], [75, 1, 1, "", "register_load_state_dict_post_hook"], [75, 1, 1, "", "register_module"], [75, 1, 1, "", "register_parameter"], [75, 1, 1, "", "register_state_dict_pre_hook"], [75, 1, 1, "", "requires_grad_"], [75, 1, 1, "", "reset"], [75, 3, 1, "", "reset_keys"], [75, 3, 1, "", "reward_key"], [75, 3, 1, "", "reward_keys"], [75, 3, 1, "", "reward_spec"], [75, 1, 1, "", "rollout"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "set_info_dict_reader"], [75, 1, 1, "", "set_seed"], [75, 1, 1, "", "share_memory"], [75, 3, 1, "", "specs"], [75, 1, 1, "", "state_dict"], [75, 3, 1, "", "state_spec"], [75, 1, 1, "", "step"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_empty"], [75, 1, 1, "", "train"], [75, 1, 1, "", "type"], [75, 1, 1, "", "xpu"], [75, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[87, 3, 1, "", "action_key"], [87, 3, 1, "", "action_keys"], [87, 3, 1, "", "action_spec"], [87, 1, 1, "", "add_module"], [87, 1, 1, "", "apply"], [87, 3, 1, "", "batch_locked"], [87, 1, 1, "", "bfloat16"], [87, 1, 1, "", "buffers"], [87, 1, 1, "", "children"], [87, 1, 1, "", "compile"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 3, 1, "", "done_key"], [87, 3, 1, "", "done_keys"], [87, 3, 1, "", "done_keys_groups"], [87, 3, 1, "", "done_spec"], [87, 1, 1, "", "double"], [87, 1, 1, "", "eval"], [87, 1, 1, "", "extra_repr"], [87, 1, 1, "", "fake_tensordict"], [87, 1, 1, "", "float"], [87, 1, 1, "", "forward"], [87, 3, 1, "", "full_action_spec"], [87, 3, 1, "", "full_done_spec"], [87, 3, 1, "", "full_reward_spec"], [87, 3, 1, "", "full_state_spec"], [87, 1, 1, "", "get_buffer"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "get_parameter"], [87, 1, 1, "", "get_submodule"], [87, 1, 1, "", "half"], [87, 3, 1, "", "input_spec"], [87, 1, 1, "", "ipu"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "modules"], [87, 1, 1, "", "named_buffers"], [87, 1, 1, "", "named_children"], [87, 1, 1, "", "named_modules"], [87, 1, 1, "", "named_parameters"], [87, 3, 1, "", "observation_spec"], [87, 3, 1, "", "output_spec"], [87, 1, 1, "", "parameters"], [87, 1, 1, "", "rand_action"], [87, 1, 1, "", "rand_step"], [87, 1, 1, "", "register_backward_hook"], [87, 1, 1, "", "register_buffer"], [87, 1, 1, "", "register_forward_hook"], [87, 1, 1, "", "register_forward_pre_hook"], [87, 1, 1, "", "register_full_backward_hook"], [87, 1, 1, "", "register_full_backward_pre_hook"], [87, 1, 1, "", "register_load_state_dict_post_hook"], [87, 1, 1, "", "register_module"], [87, 1, 1, "", "register_parameter"], [87, 1, 1, "", "register_state_dict_pre_hook"], [87, 1, 1, "", "requires_grad_"], [87, 1, 1, "", "reset"], [87, 3, 1, "", "reset_keys"], [87, 3, 1, "", "reward_key"], [87, 3, 1, "", "reward_keys"], [87, 3, 1, "", "reward_spec"], [87, 1, 1, "", "rollout"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "", "set_seed"], [87, 1, 1, "", "share_memory"], [87, 3, 1, "", "specs"], [87, 1, 1, "", "state_dict"], [87, 3, 1, "", "state_spec"], [87, 1, 1, "", "step"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_empty"], [87, 1, 1, "", "train"], [87, 1, 1, "", "type"], [87, 1, 1, "", "update_kwargs"], [87, 1, 1, "", "xpu"], [87, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[93, 3, 1, "", "action_key"], [93, 3, 1, "", "action_keys"], [93, 3, 1, "", "action_spec"], [93, 1, 1, "", "add_module"], [93, 1, 1, "", "apply"], [93, 3, 1, "", "batch_locked"], [93, 1, 1, "", "bfloat16"], [93, 1, 1, "", "buffers"], [93, 1, 1, "", "children"], [93, 1, 1, "", "compile"], [93, 1, 1, "", "cpu"], [93, 1, 1, "", "cuda"], [93, 3, 1, "", "done_key"], [93, 3, 1, "", "done_keys"], [93, 3, 1, "", "done_keys_groups"], [93, 3, 1, "", "done_spec"], [93, 1, 1, "", "double"], [93, 1, 1, "", "eval"], [93, 1, 1, "", "extra_repr"], [93, 1, 1, "", "fake_tensordict"], [93, 1, 1, "", "float"], [93, 1, 1, "", "forward"], [93, 3, 1, "", "full_action_spec"], [93, 3, 1, "", "full_done_spec"], [93, 3, 1, "", "full_reward_spec"], [93, 3, 1, "", "full_state_spec"], [93, 1, 1, "", "get_buffer"], [93, 1, 1, "", "get_extra_state"], [93, 1, 1, "", "get_parameter"], [93, 1, 1, "", "get_submodule"], [93, 1, 1, "", "half"], [93, 3, 1, "", "input_spec"], [93, 1, 1, "", "ipu"], [93, 1, 1, "", "load_state_dict"], [93, 1, 1, "", "modules"], [93, 1, 1, "", "named_buffers"], [93, 1, 1, "", "named_children"], [93, 1, 1, "", "named_modules"], [93, 1, 1, "", "named_parameters"], [93, 3, 1, "", "observation_spec"], [93, 3, 1, "", "output_spec"], [93, 1, 1, "", "parameters"], [93, 1, 1, "", "rand_action"], [93, 1, 1, "", "rand_step"], [93, 1, 1, "", "register_backward_hook"], [93, 1, 1, "", "register_buffer"], [93, 1, 1, "", "register_forward_hook"], [93, 1, 1, "", "register_forward_pre_hook"], [93, 1, 1, "", "register_full_backward_hook"], [93, 1, 1, "", "register_full_backward_pre_hook"], [93, 1, 1, "", "register_load_state_dict_post_hook"], [93, 1, 1, "", "register_module"], [93, 1, 1, "", "register_parameter"], [93, 1, 1, "", "register_state_dict_pre_hook"], [93, 1, 1, "", "requires_grad_"], [93, 1, 1, "", "reset"], [93, 3, 1, "", "reset_keys"], [93, 3, 1, "", "reward_key"], [93, 3, 1, "", "reward_keys"], [93, 3, 1, "", "reward_spec"], [93, 1, 1, "", "rollout"], [93, 1, 1, "", "set_extra_state"], [93, 1, 1, "", "set_seed"], [93, 1, 1, "", "share_memory"], [93, 3, 1, "", "specs"], [93, 1, 1, "", "state_dict"], [93, 3, 1, "", "state_spec"], [93, 1, 1, "", "step"], [93, 1, 1, "", "to"], [93, 1, 1, "", "to_empty"], [93, 1, 1, "", "train"], [93, 1, 1, "", "type"], [93, 1, 1, "", "update_kwargs"], [93, 1, 1, "", "xpu"], [93, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[98, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[100, 0, 1, "", "ActionMask"], [101, 0, 1, "", "BinarizeReward"], [102, 0, 1, "", "CatFrames"], [103, 0, 1, "", "CatTensors"], [104, 0, 1, "", "CenterCrop"], [105, 0, 1, "", "ClipTransform"], [106, 0, 1, "", "Compose"], [107, 0, 1, "", "DTypeCastTransform"], [108, 0, 1, "", "DeviceCastTransform"], [109, 0, 1, "", "DiscreteActionProjection"], [110, 0, 1, "", "DoubleToFloat"], [111, 0, 1, "", "EndOfLifeTransform"], [112, 0, 1, "", "ExcludeTransform"], [113, 0, 1, "", "FiniteTensorDictCheck"], [114, 0, 1, "", "FlattenObservation"], [115, 0, 1, "", "FrameSkipTransform"], [116, 0, 1, "", "GrayScale"], [117, 0, 1, "", "InitTracker"], [118, 0, 1, "", "KLRewardTransform"], [119, 0, 1, "", "NoopResetEnv"], [120, 0, 1, "", "ObservationNorm"], [121, 0, 1, "", "ObservationTransform"], [122, 0, 1, "", "PermuteTransform"], [123, 0, 1, "", "PinMemoryTransform"], [124, 0, 1, "", "R3MTransform"], [125, 0, 1, "", "RandomCropTensorDict"], [126, 0, 1, "", "RenameTransform"], [127, 0, 1, "", "Resize"], [128, 0, 1, "", "Reward2GoTransform"], [129, 0, 1, "", "RewardClipping"], [130, 0, 1, "", "RewardScaling"], [131, 0, 1, "", "RewardSum"], [132, 0, 1, "", "SelectTransform"], [133, 0, 1, "", "SqueezeTransform"], [134, 0, 1, "", "StepCounter"], [135, 0, 1, "", "TargetReturn"], [136, 0, 1, "", "TensorDictPrimer"], [137, 0, 1, "", "TimeMaxPool"], [138, 0, 1, "", "ToTensorImage"], [139, 0, 1, "", "Transform"], [140, 0, 1, "", "TransformedEnv"], [141, 0, 1, "", "UnsqueezeTransform"], [142, 0, 1, "", "VC1Transform"], [143, 0, 1, "", "VIPRewardTransform"], [144, 0, 1, "", "VIPTransform"], [145, 0, 1, "", "VecNorm"], [146, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[101, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "reset"], [102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[105, 1, 1, "", "transform_observation_spec"], [105, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "reset"], [106, 1, 1, "", "to"], [106, 1, 1, "", "transform_env_device"], [106, 1, 1, "", "transform_input_spec"], [106, 1, 1, "", "transform_observation_spec"], [106, 1, 1, "", "transform_output_spec"], [106, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "transform_input_spec"], [107, 1, 1, "", "transform_observation_spec"], [107, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "transform_done_spec"], [108, 1, 1, "", "transform_env_device"], [108, 1, 1, "", "transform_input_spec"], [108, 1, 1, "", "transform_observation_spec"], [108, 1, 1, "", "transform_output_spec"], [108, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[109, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "register_keys"], [111, 1, 1, "", "reset"], [111, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[112, 1, 1, "", "forward"], [112, 1, 1, "", "reset"], [112, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[113, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[115, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[116, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "reset"], [117, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[119, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[120, 1, 1, "", "init_stats"], [120, 1, 1, "", "transform_input_spec"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[122, 1, 1, "", "transform_input_spec"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[123, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[124, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[125, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[128, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[129, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[130, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "transform_input_spec"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "reset"], [132, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "reset"], [134, 1, 1, "", "transform_input_spec"], [134, 1, 1, "", "transform_observation_spec"], [134, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "reset"], [135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "reset"], [136, 1, 1, "", "to"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "reset"], [137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[139, 3, 1, "", "container"], [139, 1, 1, "", "forward"], [139, 3, 1, "", "parent"], [139, 1, 1, "", "reset"], [139, 1, 1, "", "to"], [139, 1, 1, "", "transform_done_spec"], [139, 1, 1, "", "transform_env_device"], [139, 1, 1, "", "transform_input_spec"], [139, 1, 1, "", "transform_observation_spec"], [139, 1, 1, "", "transform_output_spec"], [139, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[140, 3, 1, "", "batch_locked"], [140, 1, 1, "", "eval"], [140, 3, 1, "", "input_spec"], [140, 1, 1, "", "load_state_dict"], [140, 3, 1, "", "output_spec"], [140, 1, 1, "", "set_missing_tolerance"], [140, 1, 1, "", "set_seed"], [140, 1, 1, "", "state_dict"], [140, 1, 1, "", "to"], [140, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[141, 1, 1, "", "transform_input_spec"], [141, 1, 1, "", "transform_observation_spec"], [141, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "make_noload_model"], [142, 1, 1, "", "to"], [142, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "reset"], [143, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[144, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[145, 1, 1, "", "build_td_for_shared_vecnorm"], [145, 1, 1, "", "forward"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[147, 2, 1, "", "check_env_specs"], [148, 2, 1, "", "exploration_mode"], [149, 2, 1, "", "exploration_type"], [150, 2, 1, "", "get_available_libraries"], [151, 2, 1, "", "make_composite_from_td"], [152, 2, 1, "", "set_exploration_mode"], [153, 2, 1, "", "set_exploration_type"], [154, 2, 1, "", "step_mdp"], [155, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[156, 0, 1, "", "CEMPlanner"], [157, 0, 1, "", "ConvNet"], [158, 0, 1, "", "DTActor"], [159, 0, 1, "", "DdpgCnnActor"], [160, 0, 1, "", "DdpgCnnQNet"], [161, 0, 1, "", "DdpgMlpActor"], [162, 0, 1, "", "DdpgMlpQNet"], [163, 0, 1, "", "DecisionTransformer"], [164, 0, 1, "", "Delta"], [165, 0, 1, "", "DistributionalDQNnet"], [166, 0, 1, "", "DistributionalQValueHook"], [167, 0, 1, "", "DreamerActor"], [168, 0, 1, "", "DuelingCnnDQNet"], [169, 0, 1, "", "GRUModule"], [170, 0, 1, "", "IndependentNormal"], [171, 0, 1, "", "LSTMModule"], [172, 0, 1, "", "LSTMNet"], [173, 0, 1, "", "MLP"], [174, 0, 1, "", "MPCPlannerBase"], [175, 0, 1, "", "MPPIPlanner"], [176, 0, 1, "", "MaskedCategorical"], [177, 0, 1, "", "MaskedOneHotCategorical"], [178, 0, 1, "", "MultiAgentConvNet"], [179, 0, 1, "", "MultiAgentMLP"], [180, 0, 1, "", "NoisyLazyLinear"], [181, 0, 1, "", "NoisyLinear"], [182, 0, 1, "", "NormalParamWrapper"], [183, 0, 1, "", "ObsDecoder"], [184, 0, 1, "", "ObsEncoder"], [185, 0, 1, "", "OneHotCategorical"], [186, 0, 1, "", "OnlineDTActor"], [187, 0, 1, "", "QMixer"], [188, 0, 1, "", "QValueHook"], [189, 0, 1, "", "RSSMPosterior"], [190, 0, 1, "", "RSSMPrior"], [191, 0, 1, "", "Squeeze2dLayer"], [192, 0, 1, "", "SqueezeLayer"], [193, 0, 1, "", "TanhDelta"], [194, 0, 1, "", "TanhNormal"], [195, 0, 1, "", "TruncatedNormal"], [196, 0, 1, "", "VDNMixer"], [197, 0, 1, "", "VmapModule"], [198, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[156, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[157, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[158, 1, 1, "", "default_config"], [158, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[159, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[160, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[161, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[162, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[163, 0, 1, "", "DTConfig"], [163, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[164, 1, 1, "", "log_prob"], [164, 3, 1, "", "mean"], [164, 3, 1, "", "mode"], [164, 1, 1, "", "rsample"], [164, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[165, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[167, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[168, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[169, 1, 1, "", "forward"], [169, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[170, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[171, 1, 1, "", "forward"], [171, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[172, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[173, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[175, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[176, 1, 1, "", "log_prob"], [176, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[177, 1, 1, "", "log_prob"], [177, 1, 1, "", "rsample"], [177, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[178, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[179, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[180, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[182, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[183, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[184, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[185, 1, 1, "", "log_prob"], [185, 3, 1, "", "mode"], [185, 1, 1, "", "rsample"], [185, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[186, 1, 1, "", "default_config"], [186, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[187, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[189, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[190, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[192, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[193, 3, 1, "", "mean"], [193, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[194, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[195, 1, 1, "", "log_prob"], [195, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[196, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[197, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[199, 0, 1, "", "Actor"], [200, 0, 1, "", "ActorCriticOperator"], [201, 0, 1, "", "ActorCriticWrapper"], [202, 0, 1, "", "ActorValueOperator"], [203, 0, 1, "", "AdditiveGaussianWrapper"], [204, 0, 1, "", "DecisionTransformerInferenceWrapper"], [205, 0, 1, "", "DistributionalQValueActor"], [206, 0, 1, "", "DistributionalQValueModule"], [207, 0, 1, "", "EGreedyModule"], [208, 0, 1, "", "LMHeadActorValueOperator"], [209, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [210, 0, 1, "", "ProbabilisticActor"], [211, 0, 1, "", "QValueActor"], [212, 0, 1, "", "QValueModule"], [213, 0, 1, "", "SafeModule"], [214, 0, 1, "", "SafeProbabilisticModule"], [215, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [216, 0, 1, "", "SafeSequential"], [217, 0, 1, "", "TanhModule"], [218, 0, 1, "", "ValueOperator"], [219, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[200, 1, 1, "", "get_critic_operator"], [200, 1, 1, "", "get_policy_head"], [200, 1, 1, "", "get_value_head"], [200, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[201, 1, 1, "", "get_policy_head"], [201, 1, 1, "", "get_policy_operator"], [201, 1, 1, "", "get_value_head"], [201, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[202, 1, 1, "", "get_policy_head"], [202, 1, 1, "", "get_policy_operator"], [202, 1, 1, "", "get_value_head"], [202, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "mask_context"], [204, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[206, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[212, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[213, 1, 1, "", "random"], [213, 1, 1, "", "random_sample"], [213, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[214, 1, 1, "", "random"], [214, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[217, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[219, 1, 1, "", "get_reward_operator"], [219, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[220, 0, 1, "", "biased_softplus"], [221, 0, 1, "", "inv_softplus"], [222, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[220, 1, 1, "", "forward"]], "torchrl.objectives": [[223, 0, 1, "", "A2CLoss"], [224, 0, 1, "", "CQLLoss"], [225, 0, 1, "", "ClipPPOLoss"], [226, 0, 1, "", "DDPGLoss"], [227, 0, 1, "", "DQNLoss"], [228, 0, 1, "", "DTLoss"], [229, 0, 1, "", "DiscreteSACLoss"], [230, 0, 1, "", "DistributionalDQNLoss"], [231, 0, 1, "", "DreamerActorLoss"], [232, 0, 1, "", "DreamerModelLoss"], [233, 0, 1, "", "DreamerValueLoss"], [234, 0, 1, "", "HardUpdate"], [235, 0, 1, "", "IQLLoss"], [236, 0, 1, "", "KLPENPPOLoss"], [237, 0, 1, "", "LossModule"], [238, 0, 1, "", "OnlineDTLoss"], [239, 0, 1, "", "PPOLoss"], [240, 0, 1, "", "REDQLoss"], [241, 0, 1, "", "ReinforceLoss"], [242, 0, 1, "", "SACLoss"], [243, 0, 1, "", "SoftUpdate"], [244, 0, 1, "", "TD3Loss"], [245, 0, 1, "", "ValueEstimators"], [246, 0, 1, "", "default_value_kwargs"], [247, 0, 1, "", "distance_loss"], [248, 0, 1, "", "hold_out_net"], [249, 0, 1, "", "hold_out_params"], [251, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[225, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[228, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[232, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[233, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "loss_value_diff"], [235, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[236, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[237, 1, 1, "", "convert_to_functional"], [237, 1, 1, "", "forward"], [237, 1, 1, "", "make_value_estimator"], [237, 1, 1, "", "named_parameters"], [237, 1, 1, "", "parameters"], [237, 1, 1, "", "set_keys"], [237, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[238, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[242, 1, 1, "", "forward"], [242, 1, 1, "", "load_state_dict"], [242, 1, 1, "", "make_value_estimator"], [242, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[250, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[252, 0, 1, "", "GAE"], [253, 0, 1, "", "TD0Estimator"], [254, 0, 1, "", "TD1Estimator"], [255, 0, 1, "", "TDLambdaEstimator"], [256, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "set_keys"], [256, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[257, 0, 1, "", "generalized_advantage_estimate"], [258, 0, 1, "", "reward2go"], [259, 0, 1, "", "td0_advantage_estimate"], [260, 0, 1, "", "td0_return_estimate"], [261, 0, 1, "", "td1_advantage_estimate"], [262, 0, 1, "", "td1_return_estimate"], [263, 0, 1, "", "td_lambda_advantage_estimate"], [264, 0, 1, "", "td_lambda_return_estimate"], [265, 0, 1, "", "vec_generalized_advantage_estimate"], [266, 0, 1, "", "vec_td1_advantage_estimate"], [267, 0, 1, "", "vec_td1_return_estimate"], [268, 0, 1, "", "vec_td_lambda_advantage_estimate"], [269, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[270, 2, 1, "", "TensorDictRecorder"], [271, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[272, 2, 1, "", "Logger"], [274, 2, 1, "", "generate_exp_name"], [275, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[273, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[276, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[277, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[278, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[279, 0, 1, "", "BatchSubSampler"], [280, 0, 1, "", "ClearCudaCache"], [281, 0, 1, "", "CountFramesLog"], [282, 0, 1, "", "LogReward"], [283, 0, 1, "", "OptimizerHook"], [284, 0, 1, "", "Recorder"], [285, 0, 1, "", "ReplayBufferTrainer"], [286, 0, 1, "", "RewardNormalizer"], [287, 0, 1, "", "SelectKeys"], [288, 0, 1, "", "Trainer"], [289, 0, 1, "", "TrainerHookBase"], [290, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[279, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[280, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[281, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[282, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[283, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[284, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[285, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[286, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[287, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[289, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[290, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[291, 2, 1, "", "correct_for_frame_skip"], [292, 2, 1, "", "get_stats_random_rollout"], [293, 2, 1, "", "make_collector_offpolicy"], [294, 2, 1, "", "make_collector_onpolicy"], [295, 2, 1, "", "make_dqn_loss"], [296, 2, 1, "", "make_redq_loss"], [297, 2, 1, "", "make_redq_model"], [298, 2, 1, "", "make_replay_buffer"], [299, 2, 1, "", "make_target_updater"], [300, 2, 1, "", "make_trainer"], [301, 2, 1, "", "parallel_env_constructor"], [302, 2, 1, "", "sync_async_collector"], [303, 2, 1, "", "sync_sync_collector"], [304, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 308, 309, 310, 311, 312, 313, 314, 318, 319, 323, 324], "tutori": [0, 314, 318], "basic": [0, 321], "intermedi": [0, 8], "advanc": 0, "refer": [0, 306], "knowledg": [0, 307], "base": [0, 7, 307], "indic": 0, "tabl": 0, "collector": [1, 312, 313, 314, 315, 318, 323], "packag": [1, 2, 3, 308, 309, 310, 311], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 312, 313, 314, 318, 323], "distribut": [1, 308], "helper": [1, 3], "function": [1, 4, 309, 313, 314, 318, 323], "replai": [2, 312, 313, 314, 315, 318, 321, 323], "buffer": [2, 312, 313, 314, 315, 318, 321, 323], "compos": [2, 106], "store": [2, 313], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 309, 314, 318], "learn": [2, 4, 314, 318], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 308, 309, 310], "env": [3, 319, 323, 324], "vector": [3, 323], "multi": [3, 308, 309, 317, 318], "agent": [3, 4, 308, 309, 318], "environ": [3, 4, 6, 7, 312, 313, 314, 315, 317, 318, 319, 323, 324], "transform": [3, 139, 312, 314, 318, 319, 321, 323, 324], "clone": [3, 7], "mask": 3, "action": [3, 4, 315, 319], "record": [3, 284, 310, 312], "domain": [3, 308], "specif": [3, 308, 317], "librari": [3, 323], "thing": [4, 312, 319], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 323], "gener": [4, 308], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 312, 319], "algorithm": [4, 308], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 312, 313], "return": [4, 309], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 312, 314, 315, 317, 318, 319], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 323], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 317], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 312, 313, 314], "standard": 4, "explor": [4, 308, 312, 313], "valu": [4, 308, 309, 312, 314, 315], "loss": [4, 312, 313, 314, 315, 318], "earli": 4, "train": [4, 8, 309, 312, 314, 315, 318, 319], "roughli": 4, "uniformli": 4, "random": [4, 318], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 313], "increas": 4, "an": [4, 314, 315, 319], "dynam": [4, 321], "can": 4, "low": 4, "forward": [4, 312], "model": [4, 308, 312, 313, 315, 320, 323], "also": 4, "us": [4, 6, 9, 315, 320, 321, 323], "offlin": 4, "observ": [4, 312], "space": 4, "effect": [4, 319], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 324], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 323], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 318, 324], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 312], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 319], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 312, 321], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "braxenv": 67, "braxwrapp": 68, "dmcontrolenv": 69, "dmcontrolwrapp": 70, "envbas": [71, 319], "envcreat": 72, "envmetadata": 73, "gymenv": 74, "gymlikeenv": 75, "gymwrapp": 76, "habitatenv": 77, "isaacgymenv": 78, "isaacgymwrapp": 79, "jumanjienv": 80, "jumanjiwrapp": 81, "marlgroupmaptyp": 82, "modelbasedenvbas": 83, "multithreadedenv": 84, "multithreadedenvwrapp": 85, "openmlenv": 86, "parallelenv": 87, "pettingzooenv": 88, "pettingzoowrapp": 89, "robohiveenv": 90, "smacv2env": 91, "smacv2wrapp": 92, "serialenv": 93, "vmasenv": 94, "vmaswrapp": 95, "check_marl_group": 96, "gym_backend": 97, "dreamerenv": 98, "set_gym_backend": 99, "actionmask": 100, "binarizereward": 101, "catfram": [102, 321], "cattensor": 103, "centercrop": 104, "cliptransform": 105, "dtypecasttransform": 107, "devicecasttransform": 108, "discreteactionproject": 109, "doubletofloat": 110, "endoflifetransform": 111, "excludetransform": 112, "finitetensordictcheck": 113, "flattenobserv": 114, "frameskiptransform": 115, "grayscal": 116, "inittrack": 117, "klrewardtransform": 118, "noopresetenv": 119, "observationnorm": 120, "observationtransform": 121, "permutetransform": 122, "pinmemorytransform": 123, "r3mtransform": 124, "randomcroptensordict": 125, "renametransform": 126, "resiz": 127, "reward2gotransform": 128, "rewardclip": 129, "rewardsc": 130, "rewardsum": 131, "selecttransform": 132, "squeezetransform": 133, "stepcount": 134, "targetreturn": 135, "tensordictprim": 136, "timemaxpool": 137, "totensorimag": 138, "transformedenv": 140, "unsqueezetransform": 141, "vc1transform": 142, "viprewardtransform": 143, "viptransform": 144, "vecnorm": [145, 324], "gsdenois": 146, "check_env_spec": 147, "exploration_mod": 148, "exploration_typ": 149, "get_available_librari": 150, "make_composite_from_td": 151, "set_exploration_mod": 152, "set_exploration_typ": 153, "step_mdp": 154, "terminated_or_trunc": 155, "cemplann": 156, "convnet": 157, "dtactor": 158, "ddpgcnnactor": 159, "ddpgcnnqnet": 160, "ddpgmlpactor": 161, "ddpgmlpqnet": 162, "decisiontransform": 163, "delta": 164, "distributionaldqnnet": 165, "distributionalqvaluehook": 166, "dreameractor": 167, "duelingcnndqnet": 168, "grumodul": 169, "independentnorm": 170, "lstmmodul": 171, "lstmnet": 172, "mlp": [173, 315], "mpcplannerbas": 174, "mppiplann": 175, "maskedcategor": 176, "maskedonehotcategor": 177, "multiagentconvnet": 178, "multiagentmlp": 179, "noisylazylinear": 180, "noisylinear": 181, "normalparamwrapp": 182, "obsdecod": 183, "obsencod": 184, "onehotcategor": 185, "onlinedtactor": 186, "qmixer": [187, 309], "qvaluehook": 188, "rssmposterior": 189, "rssmprior": 190, "squeeze2dlay": 191, "squeezelay": 192, "tanhdelta": 193, "tanhnorm": 194, "truncatednorm": 195, "vdnmixer": 196, "vmapmodul": 197, "reset_nois": 198, "actor": [199, 308, 312], "actorcriticoper": 200, "actorcriticwrapp": 201, "actorvalueoper": 202, "additivegaussianwrapp": 203, "decisiontransformerinferencewrapp": 204, "distributionalqvalueactor": 205, "distributionalqvaluemodul": 206, "egreedymodul": 207, "lmheadactorvalueoper": 208, "ornsteinuhlenbeckprocesswrapp": 209, "probabilisticactor": 210, "qvalueactor": 211, "qvaluemodul": 212, "safemodul": [213, 308], "safeprobabilisticmodul": 214, "safeprobabilistictensordictsequenti": 215, "safesequenti": 216, "tanhmodul": 217, "valueoper": 218, "worldmodelwrapp": 219, "biased_softplu": 220, "inv_softplu": 221, "map": 222, "a2closs": 223, "cqlloss": 224, "clipppoloss": 225, "ddpgloss": 226, "dqnloss": 227, "dtloss": 228, "discretesacloss": 229, "distributionaldqnloss": 230, "dreameractorloss": 231, "dreamermodelloss": 232, "dreamervalueloss": 233, "hardupd": 234, "iqlloss": 235, "klpenppoloss": 236, "lossmodul": [237, 312], "onlinedtloss": 238, "ppoloss": 239, "redqloss": 240, "reinforceloss": 241, "sacloss": 242, "softupd": 243, "td3loss": 244, "valueestim": 245, "default_value_kwarg": 246, "distance_loss": 247, "hold_out_net": 248, "hold_out_param": 249, "qmixerloss": 250, "next_state_valu": 251, "gae": 252, "td0estim": 253, "td1estim": 254, "tdlambdaestim": 255, "valueestimatorbas": 256, "generalized_advantage_estim": 257, "reward2go": 258, "td0_advantage_estim": 259, "td0_return_estim": 260, "td1_advantage_estim": 261, "td1_return_estim": 262, "td_lambda_advantage_estim": 263, "td_lambda_return_estim": 264, "vec_generalized_advantage_estim": 265, "vec_td1_advantage_estim": 266, "vec_td1_return_estim": 267, "vec_td_lambda_advantage_estim": 268, "vec_td_lambda_return_estim": 269, "tensordictrecord": 270, "videorecord": 271, "logger": [272, 310], "csvlogger": 273, "generate_exp_nam": 274, "get_logg": 275, "mlflowlogg": 276, "tensorboardlogg": 277, "wandblogg": 278, "batchsubsampl": 279, "clearcudacach": 280, "countframeslog": 281, "logreward": 282, "optimizerhook": 283, "replaybuffertrain": 285, "rewardnorm": 286, "selectkei": 287, "trainer": [288, 310, 313], "trainerhookbas": 289, "updateweight": 290, "correct_for_frame_skip": 291, "get_stats_random_rollout": 292, "make_collector_offpolici": 293, "make_collector_onpolici": 294, "make_dqn_loss": 295, "make_redq_loss": 296, "make_redq_model": 297, "make_replay_buff": 298, "make_target_updat": 299, "make_train": 300, "parallel_env_constructor": 301, "sync_async_collector": 302, "sync_sync_collector": 303, "transformed_env_constructor": 304, "readm": [305, 316], "tuto": [305, 316], "api": 306, "contribut": [307, 323], "content": 307, "modul": [308, 312, 315, 323], "tensordict": [308, 321, 323], "wrapper": 308, "probabilist": 308, "q": [308, 313, 315], "oper": 308, "join": 308, "hook": [308, 310, 313], "regular": 308, "planner": 308, "object": [309, 312, 323], "dqn": [309, 313, 315], "ddpg": [309, 312], "sac": 309, "redq": 309, "iql": 309, "cql": 309, "dt": 309, "td3": 309, "ppo": [309, 314, 318], "a2c": 309, "dreamer": 309, "checkpoint": 310, "builder": 310, "_util": 311, "code": [312, 319], "setup": [312, 315], "The": 312, "__init__": 312, "method": 312, "estim": 312, "put": 312, "togeth": [312, 319], "call": 312, "parallel": [312, 317, 324], "execut": [312, 317, 319], "stat": 312, "build": [312, 313, 321], "evalu": 312, "batch": [312, 319, 321], "size": [312, 321], "construct": 312, "target": [312, 313], "network": [312, 313, 314, 315, 318], "updat": 312, "time": [312, 322], "experi": [312, 319], "result": [312, 314, 318], "conclus": [312, 313, 314, 315, 318, 319, 321], "A": [313, 321], "exampl": [313, 321], "comput": [313, 319, 322], "deep": 313, "collect": [313, 314], "paramet": [313, 314], "hyperparamet": [313, 314, 318], "regist": 313, "possibl": 313, "improv": 313, "defin": [314, 318], "loop": [314, 315, 318, 319], "next": [314, 318], "step": [314, 318, 324], "recurr": 315, "convolut": 315, "lstm": 315, "select": 315, "divers": 317, "rollout": [317, 318, 319, 324], "critic": 318, "pendulum": 319, "write": 319, "_step": 319, "reset": [319, 324], "simul": 319, "_reset": 319, "metadata": 319, "_spec": 319, "spec": [319, 324], "shape": 319, "seed": [319, 324], "wrap": 319, "class": [319, 323], "test": 319, "our": 319, "custom": [319, 321], "simpl": 319, "pretrain": 320, "vanilla": 321, "integr": 321, "tensorclass": 321, "sampl": 321, "iter": 321, "over": 321, "fix": 321, "priorit": 321, "save": 321, "raw": 321, "imag": 321, "more": 321, "complex": 321, "introduct": 323, "config": 323, "tensordictmodul": 323, "sequenc": 323, "program": 323, "ensembl": 323, "meta": 323, "special": 323, "state": 323, "frame_skip": 324, "deepmind": 324, "control": 324, "devic": 324, "run": 324, "close": 324, "access": 324, "attribut": 324, "kwarg": 324}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})