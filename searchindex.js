Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.gym.MOGymEnv", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper", "reference/generated/torchrl.envs.libs.gym.gym_backend", "reference/generated/torchrl.envs.libs.gym.set_gym_backend", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.MOGymEnv.rst", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.gym_backend.rst", "reference/generated/torchrl.envs.libs.gym.set_gym_backend.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "MOGymEnv", "MOGymWrapper", "gym_backend", "set_gym_backend", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DTypeCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 88, 93, 95, 97, 98, 99, 101, 107, 108, 111, 112, 113, 115, 123, 125, 126, 127, 129, 132, 134, 143, 145, 146, 147, 148, 156, 157, 158, 159, 162, 163, 167, 174, 175, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 202, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 254, 257, 266, 267, 271, 272, 275, 284, 285, 286, 287, 290, 291, 292, 295, 296, 300, 301, 303, 304, 306, 307], "open": [0, 5, 7, 11, 296, 301, 306], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307], "reinforc": [0, 3, 9, 93, 145, 146, 147, 148, 152, 189, 192, 206, 207, 211, 213, 217, 218, 224, 225, 226, 289, 296, 299, 302, 305, 306], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 93, 145, 146, 147, 148, 152, 160, 164, 189, 192, 206, 207, 211, 213, 217, 218, 223, 224, 225, 226, 289, 291, 292, 295, 296, 298, 299, 300, 302, 304, 305, 306, 307], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 71, 122, 164, 182, 193, 201, 206, 220, 222, 262, 290, 291, 292, 293, 295, 296, 297, 301, 303, 304, 307], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 72, 137, 289, 290, 291, 294, 295, 296, 297, 301, 302, 307], "pytorch": [0, 1, 2, 3, 125, 163, 164, 271, 290, 293, 295, 297, 298, 301, 302, 303, 306, 307], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 67, 70, 71, 72, 73, 74, 85, 106, 108, 112, 122, 127, 134, 145, 147, 153, 162, 170, 172, 173, 179, 180, 189, 192, 195, 197, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 233, 234, 235, 267, 280, 290, 291, 292, 295, 296, 298, 301, 302, 303, 304, 306, 307], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 59, 67, 70, 71, 72, 73, 74, 94, 95, 97, 99, 102, 107, 108, 111, 112, 115, 118, 123, 127, 129, 131, 132, 143, 149, 152, 156, 157, 158, 159, 161, 162, 180, 182, 186, 189, 190, 192, 193, 194, 195, 200, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 254, 258, 262, 268, 275, 280, 283, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "python": [0, 3, 5, 6, 7, 10, 21, 84, 161, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 70, 93, 94, 102, 108, 111, 112, 125, 127, 129, 156, 158, 162, 163, 167, 182, 187, 188, 189, 193, 194, 196, 197, 208, 215, 219, 220, 222, 253, 270, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "low": [0, 98, 189, 200, 295, 296, 302, 306], "high": [0, 9, 41, 98, 189, 200, 235, 240, 248, 295, 296, 304, 306], "level": [0, 3, 4, 22, 26, 28, 93, 219, 295, 296, 306], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 67, 109, 159, 239, 263, 272, 293, 297, 302, 306], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 67, 68, 70, 71, 72, 73, 74, 88, 96, 97, 98, 99, 101, 102, 106, 111, 118, 123, 125, 126, 127, 128, 129, 131, 132, 138, 142, 148, 150, 156, 157, 159, 161, 164, 168, 170, 173, 187, 188, 192, 193, 194, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 230, 233, 234, 235, 236, 237, 238, 239, 268, 283, 287, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 98, 180, 220, 291, 306], "effici": [0, 1, 2, 4, 8, 164, 291, 295, 296, 297, 298, 300, 301, 303, 304, 306], "modular": [0, 199, 304, 306], "document": [0, 5, 7, 18, 19, 21, 32, 67, 70, 72, 73, 74, 127, 296, 306], "properli": [0, 67, 70, 72, 73, 74, 297, 301, 302, 306], "test": [0, 3, 5, 129, 134, 156, 157, 267, 283, 297, 298, 306], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 72, 73, 74, 93, 96, 97, 99, 100, 108, 111, 115, 117, 119, 122, 123, 126, 127, 129, 131, 141, 142, 145, 146, 147, 148, 149, 156, 157, 159, 160, 161, 164, 165, 171, 172, 173, 182, 183, 187, 189, 192, 193, 195, 196, 197, 199, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 241, 256, 259, 260, 261, 262, 266, 283, 285, 286, 291, 292, 293, 296, 297, 298, 301, 302, 303, 304, 306, 307], "code": [0, 3, 5, 7, 8, 111, 129, 156, 199, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307], "aim": [0, 3, 7, 28, 29, 111, 129, 131, 158, 274, 290, 291, 292, 295, 296, 306], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 72, 88, 108, 126, 137, 152, 180, 188, 189, 196, 199, 213, 235, 236, 237, 238, 259, 291, 293, 297, 298, 301, 302, 304, 306], "research": [0, 7, 9, 306], "most": [0, 3, 7, 8, 32, 98, 295, 297, 302, 306, 307], "written": [0, 3, 34, 36, 39, 45, 52, 55, 67, 70, 72, 73, 74, 93, 106, 118, 121, 124, 141, 182, 192, 193, 196, 197, 201, 206, 208, 219, 222, 224, 234, 253, 254, 291, 292, 293, 295, 298, 300, 302, 306], "highli": [0, 2, 306, 307], "wai": [0, 3, 4, 111, 113, 131, 222, 235, 236, 237, 238, 291, 295, 296, 297, 300, 301, 302, 303, 304, 306, 307], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 67, 68, 70, 72, 73, 74, 84, 93, 96, 97, 98, 99, 107, 108, 111, 112, 115, 118, 122, 123, 126, 127, 129, 131, 132, 142, 155, 156, 159, 160, 162, 164, 165, 178, 180, 182, 186, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 267, 280, 285, 286, 287, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "easili": [0, 3, 7, 280, 292, 295, 296, 297, 301, 306, 307], "swap": [0, 3, 297, 303, 306], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 152, 171, 188, 189, 195, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 266, 271, 295, 296, 297, 298, 300, 301, 302, 303, 306], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 144, 145, 149, 152, 153, 169, 170, 171, 179, 187, 191, 200, 203, 205, 211, 221, 254, 268, 280, 287, 289, 296, 298, 299, 303, 305], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 72, 73, 74, 97, 99, 127, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 179, 180, 186, 187, 189, 190, 192, 195, 200, 203, 219, 254, 295, 296, 298, 300, 301, 302, 303, 304, 306, 307], "write": [0, 3, 8, 23, 32, 37, 45, 70, 110, 182, 196, 197, 199, 201, 207, 209, 210, 212, 218, 223, 225, 227, 234, 239, 254, 291, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 67, 70, 72, 73, 74, 118, 126, 132, 141, 156, 192, 196, 197, 202, 206, 207, 208, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 295, 297, 298, 301, 302, 306, 307], "ones": [0, 15, 26, 32, 35, 41, 42, 67, 70, 72, 73, 74, 94, 96, 97, 99, 108, 111, 115, 122, 123, 126, 127, 129, 131, 161, 180, 196, 206, 207, 209, 218, 222, 223, 225, 227, 241, 295, 297, 301, 302, 304, 306, 307], "littl": [0, 3, 43, 297, 298, 304, 306, 307], "effort": [0, 3, 302, 304, 306], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 84, 85, 93, 94, 96, 97, 98, 99, 101, 103, 105, 106, 108, 111, 112, 113, 115, 118, 119, 123, 124, 126, 127, 129, 130, 131, 132, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 233, 235, 236, 237, 238, 239, 253, 262, 264, 267, 268, 271, 273, 274, 275, 280, 283, 287, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "repo": [0, 6, 52, 129, 290, 301, 306], "attempt": [0, 186, 190, 192, 210, 218, 233, 306], "align": [0, 306], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 67, 70, 72, 73, 74, 94, 127, 275, 287, 301, 306, 307], "ecosystem": [0, 306], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 67, 68, 70, 72, 73, 74, 93, 123, 127, 156, 186, 189, 190, 192, 197, 219, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 88, 132, 289, 295, 296, 303, 304, 306, 307], "pillar": [0, 306], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 93, 94, 97, 98, 99, 103, 107, 108, 111, 112, 122, 126, 127, 129, 132, 134, 142, 156, 157, 159, 160, 186, 190, 192, 214, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 262, 264, 267, 274, 275, 276, 277, 280, 283, 284, 285, 286, 287, 289, 290, 291, 299, 303, 304, 305], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 67, 70, 71, 72, 73, 74, 97, 111, 123, 129, 131, 133, 143, 144, 149, 156, 158, 159, 160, 162, 169, 170, 179, 183, 184, 185, 191, 196, 202, 206, 207, 208, 210, 211, 214, 215, 216, 218, 219, 220, 222, 223, 225, 233, 271, 276, 277, 278, 279, 280, 289, 290, 293, 297, 299, 301, 302, 304, 305, 307], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 88, 93, 97, 99, 106, 108, 115, 121, 134, 138, 142, 152, 156, 157, 160, 162, 171, 180, 182, 188, 190, 192, 193, 194, 196, 199, 200, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 262, 268, 271, 273, 276, 283, 285, 286, 287, 289, 291, 292, 293, 298, 302, 303, 304, 307], "util": [0, 3, 17, 23, 32, 40, 67, 70, 72, 73, 74, 111, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 149, 203, 204, 205, 220, 283, 289, 294, 295, 297, 301, 302, 306, 307], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 67, 68, 70, 72, 73, 74, 94, 96, 102, 108, 111, 118, 123, 126, 127, 129, 131, 134, 155, 156, 160, 162, 165, 171, 177, 178, 187, 189, 193, 195, 196, 197, 234, 235, 236, 237, 238, 262, 274, 286, 291, 295, 296, 297, 301, 302, 303, 306, 307], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 67, 68, 70, 72, 73, 74, 94, 96, 102, 108, 111, 118, 123, 126, 127, 129, 131, 134, 155, 156, 160, 162, 177, 178, 187, 193, 196, 197, 234, 244, 245, 246, 247, 249, 250, 251, 252, 286, 291, 295, 296, 297, 301, 302, 303, 306, 307], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 93, 115, 121, 192, 268, 271, 273, 276, 277, 283, 285, 286, 289, 293, 304, 307], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 67, 70, 71, 72, 73, 74, 96, 97, 99, 111, 123, 126, 127, 129, 131, 132, 141, 142, 143, 158, 160, 162, 182, 188, 189, 193, 195, 196, 201, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 241, 258, 262, 274, 280, 283, 284, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 301, 302, 303, 304, 306, 307], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 67, 70, 72, 73, 74, 106, 127, 158, 162, 295, 296, 297, 304, 306, 307], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 67, 70, 72, 73, 74, 93, 97, 99, 106, 107, 108, 122, 123, 126, 127, 132, 134, 143, 157, 158, 162, 180, 198, 199, 206, 208, 219, 222, 230, 233, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 271, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "few": [0, 2, 8, 262, 297, 298, 301, 304, 306, 307], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 97, 99, 201, 222, 291, 295, 297, 298, 301, 302, 306, 307], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 143, 196, 267, 271, 291, 295, 297, 298, 301, 302, 304, 306, 307], "standard": [0, 3, 108, 117, 132, 142, 153, 160, 163, 164, 186, 187, 227, 235, 236, 237, 238, 295, 296, 301, 304, 306], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 125, 271, 302, 304, 306, 307], "common": [0, 3, 4, 21, 70, 73, 74, 183, 184, 185, 191, 206, 207, 208, 212, 218, 219, 222, 223, 224, 225, 227, 283, 290, 291, 293, 295, 297, 300, 301, 303, 306, 307], "openai": [0, 7, 79, 80, 297, 302, 306, 307], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 93, 105, 106, 108, 113, 115, 123, 132, 156, 280, 283, 290, 295, 296, 297, 298, 302, 303, 304, 306], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 99, 102, 108, 111, 112, 115, 122, 123, 126, 127, 129, 131, 132, 156, 157, 162, 182, 187, 188, 193, 194, 196, 197, 198, 199, 206, 208, 209, 212, 218, 219, 220, 222, 223, 224, 225, 226, 227, 235, 236, 237, 238, 239, 275, 293, 295, 296, 297, 298, 300, 301, 302, 304, 306, 307], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 68, 70, 71, 72, 73, 74, 77, 88, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 178, 180, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 259, 262, 264, 265, 266, 267, 268, 269, 271, 275, 276, 277, 278, 279, 280, 282, 283, 285, 286, 287, 291, 298, 301, 302, 304, 306], "On": [0, 3, 7, 18, 19, 20, 21, 291, 296, 301], "end": [0, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 122, 127, 143, 159, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "come": [0, 1, 3, 8, 73, 74, 97, 99, 182, 183, 184, 185, 193, 201, 295, 296, 297, 298, 301, 304, 306, 307], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 84, 94, 96, 97, 99, 105, 106, 111, 121, 122, 123, 126, 127, 129, 131, 134, 139, 140, 156, 159, 162, 186, 187, 196, 220, 222, 239, 262, 267, 268, 277, 287, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "re": [0, 3, 8, 32, 62, 67, 70, 72, 73, 74, 156, 161, 193, 197, 293, 295, 297, 298, 300, 302, 306, 307], "usabl": [0, 293, 298, 306], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 84, 97, 99, 127, 132, 134, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 161, 162, 165, 166, 167, 168, 169, 172, 173, 175, 178, 180, 183, 184, 185, 186, 187, 189, 190, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 280, 283, 289, 291, 295, 298, 300, 302, 304, 307], "cost": [0, 2, 27, 295, 296, 301, 302, 304], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 141, 142, 144, 145, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 168, 169, 170, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 187, 193, 195, 196, 197, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 230, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 271, 274, 276, 280, 283, 284, 285, 286, 287, 289, 291, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 67, 68, 70, 72, 73, 74, 132, 162, 189, 192, 195, 293, 295, 296, 298, 301, 302, 303, 304, 306, 307], "good": [0, 1, 4, 9, 295, 297, 298, 301, 306, 307], "runtim": [0, 3, 32, 67, 70, 72, 73, 74, 302], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 67, 70, 72, 73, 74, 97, 99, 107, 127, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 159, 160, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 215, 222, 267, 271, 292, 295, 296, 297, 298, 300, 301, 302, 307], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 67, 70, 72, 73, 74, 132, 183, 184, 185, 192, 212, 220, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 291, 292, 295, 296, 297, 298, 301, 302, 303, 304, 306, 307], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 106, 110, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 129, 130, 132, 168, 182, 183, 184, 185, 188, 193, 196, 197, 199, 201, 202, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 254, 267, 271, 280, 291, 295, 296, 297, 298, 300, 301, 302, 303, 307], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 125, 129, 133, 152, 158, 163, 165, 182, 186, 188, 189, 190, 196, 201, 206, 213, 220, 222, 235, 240, 248, 266, 290, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 307], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 292, 295, 296, 297, 301, 302, 306, 307], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 293, 295, 300, 303, 307], "beyond": 0, "api": [0, 3, 5, 111, 131, 292, 293, 301, 302, 306, 307], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 67, 68, 70, 71, 72, 73, 74, 93, 94, 101, 106, 112, 134, 156, 182, 188, 189, 193, 194, 195, 196, 197, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 307], "paper": [0, 111, 129, 131, 170, 179, 217, 280, 295, 297, 301], "ppo": [0, 4, 8, 193, 197, 208, 219, 222, 289, 291, 295, 296, 299, 305], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 93, 96, 105, 106, 108, 113, 115, 123, 127, 132, 156, 283, 291, 296, 297, 299, 305, 306, 307], "your": [0, 2, 3, 7, 8, 10, 18, 32, 67, 70, 72, 73, 74, 132, 287, 290, 291, 292, 296, 297, 298, 299, 301, 304, 305, 306], "introduct": [0, 292, 299, 301, 305, 307], "multi": [0, 7, 9, 28, 29, 32, 67, 70, 72, 73, 74, 156, 157, 158, 162, 233, 235, 236, 237, 238, 289, 295, 296, 297, 298, 299, 302, 305, 306], "agent": [0, 9, 28, 29, 122, 161, 162, 164, 170, 179, 233, 289, 299, 302, 305], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 156, 159, 160, 196, 220, 253, 275, 276, 277, 280, 283, 285, 286, 287, 289, 291, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 67, 68, 70, 71, 72, 73, 74, 77, 84, 88, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 111, 112, 113, 115, 122, 123, 125, 126, 127, 129, 131, 132, 134, 139, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 155, 156, 158, 159, 160, 162, 164, 165, 169, 170, 171, 177, 178, 179, 180, 182, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 281, 283, 287, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 305, 307], "pretrain": [0, 299, 305], "recurr": [0, 156, 173, 296, 299, 304, 305], "dqn": [0, 152, 188, 189, 206, 207, 209, 210, 212, 213, 214, 217, 218, 220, 222, 223, 224, 225, 226, 227, 233, 278, 289, 291, 299, 305], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 67, 70, 72, 73, 74, 97, 103, 111, 122, 127, 129, 131, 134, 145, 147, 156, 186, 190, 192, 206, 207, 208, 209, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 235, 271, 273, 283, 289, 293, 296, 299, 303, 304, 305, 307], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 67, 70, 71, 72, 73, 74, 98, 106, 122, 139, 140, 152, 156, 162, 164, 171, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 206, 207, 208, 209, 212, 218, 219, 221, 222, 223, 224, 225, 227, 267, 273, 276, 277, 283, 285, 286, 291, 292, 293, 296, 299, 303, 304, 305, 306, 307], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 93, 98, 112, 115, 123, 207, 209, 210, 212, 218, 223, 225, 227, 268, 271, 281, 283, 289, 293, 299, 302, 303, 305], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 93, 96, 98, 111, 112, 115, 123, 126, 127, 129, 131, 196, 199, 207, 209, 210, 212, 218, 223, 225, 227, 268, 271, 281, 283, 289, 293, 299, 302, 303, 305, 307], "task": [0, 3, 9, 28, 29, 40, 45, 73, 74, 77, 111, 129, 131, 218, 295, 296, 297, 298, 299, 301, 302, 305, 306, 307], "specif": [0, 2, 5, 8, 41, 42, 70, 149, 187, 271, 289, 292, 293, 297, 298, 299, 301, 304, 305], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 97, 99, 108, 111, 126, 127, 129, 132, 160, 170, 179, 182, 183, 193, 196, 197, 198, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 275, 276, 277, 282, 283, 287, 289, 291, 293, 296, 297, 298, 299, 301, 302, 304, 305, 307], "ddpg": [0, 145, 146, 147, 148, 209, 217, 226, 289, 291, 296, 299, 305], "loss": [0, 3, 8, 36, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 266, 271, 278, 279, 280, 283, 292, 293, 299, 302, 304, 305, 306], "trainer": [0, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 295, 299, 305], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 85, 98, 103, 106, 111, 112, 113, 123, 126, 127, 129, 130, 132, 133, 134, 141, 142, 143, 152, 156, 158, 160, 161, 162, 164, 165, 180, 186, 187, 188, 189, 190, 193, 194, 197, 199, 200, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 233, 235, 236, 237, 238, 239, 241, 255, 256, 259, 264, 271, 273, 280, 283, 292, 295, 297, 299, 301, 302, 305, 307], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 105, 106, 108, 111, 113, 115, 122, 123, 125, 126, 127, 129, 131, 132, 138, 141, 142, 143, 144, 149, 152, 156, 157, 158, 160, 162, 165, 168, 169, 170, 171, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 228, 229, 233, 235, 236, 237, 238, 241, 262, 263, 264, 265, 266, 268, 269, 270, 273, 280, 283, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307], "packag": [0, 6, 7, 10, 84, 289, 290, 307], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 93, 94, 111, 131, 143, 156, 157, 158, 162, 195, 199, 208, 210, 212, 213, 219, 222, 223, 227, 235, 236, 237, 238, 244, 245, 246, 247, 249, 250, 251, 252, 280, 287, 289, 295, 296, 297, 298, 300, 301, 302, 303, 304], "node": [0, 2, 18, 19, 20, 21, 22, 280, 289], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 106, 108, 142, 150, 151, 152, 153, 155, 160, 161, 165, 168, 169, 172, 173, 176, 177, 178, 186, 187, 188, 189, 193, 197, 198, 206, 207, 208, 212, 213, 218, 219, 222, 223, 224, 225, 227, 289, 293, 296, 297, 301, 302, 306, 307], "helper": [0, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 295, 296, 298, 302], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 67, 70, 72, 73, 74, 93, 126, 127, 132, 191, 215, 280, 289, 295, 296, 297, 298, 300, 301, 304, 306, 307], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 67, 70, 71, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 173, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 207, 210, 212, 223, 225, 227, 233, 289, 302], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 84, 93, 94, 97, 98, 99, 100, 105, 106, 108, 111, 112, 113, 115, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 138, 141, 142, 145, 146, 147, 148, 149, 152, 155, 156, 158, 159, 160, 162, 163, 165, 169, 170, 171, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 227, 229, 233, 234, 235, 236, 237, 238, 253, 254, 262, 268, 271, 274, 275, 280, 281, 283, 284, 287, 289, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "human": [0, 289, 302], "feedback": [0, 289, 306], "rlhf": [0, 34, 40, 45, 54, 106, 289, 291], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 68, 70, 72, 73, 74, 97, 99, 107, 113, 126, 127, 132, 134, 142, 159, 160, 267, 275, 276, 277, 280, 283, 285, 286, 287, 289, 298], "gymlikeenv": [0, 289], "envmetadata": [0, 289], "vector": [0, 1, 8, 24, 27, 33, 98, 145, 147, 158, 235, 238, 248, 249, 250, 251, 252, 289, 295, 296, 298, 300, 301, 302, 303, 307], "record": [0, 32, 67, 70, 72, 73, 74, 106, 222, 253, 254, 255, 256, 257, 258, 259, 260, 261, 283, 289, 296, 297], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 67, 70, 72, 73, 74, 98, 123, 138, 182, 188, 189, 193, 194, 195, 196, 197, 198, 199, 289, 297, 298, 301, 302, 306, 307], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 67, 70, 71, 72, 73, 74, 84, 96, 98, 106, 111, 112, 122, 123, 126, 127, 129, 131, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 231, 233, 235, 236, 237, 238, 239, 271, 278, 279, 283, 289, 292, 293, 296, 297, 300, 301, 302, 303, 304], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 138, 141, 142, 151, 152, 156, 157, 159, 160, 170, 171, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 253, 262, 266, 267, 268, 270, 271, 280, 289, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 307], "actor": [0, 4, 15, 21, 106, 142, 144, 145, 147, 152, 153, 160, 169, 171, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 233, 280, 289, 292, 296, 297, 298, 301, 303, 306], "explor": [0, 1, 133, 164, 182, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 206, 267, 276, 277, 283, 289, 297, 298, 301, 302], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 84, 92, 93, 94, 97, 98, 99, 107, 108, 111, 112, 115, 116, 118, 123, 124, 126, 127, 131, 132, 138, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 168, 170, 171, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 262, 264, 265, 266, 267, 268, 271, 280, 283, 289, 293, 296, 300, 301, 302, 304, 306, 307], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 67, 68, 70, 71, 72, 73, 74, 96, 106, 108, 113, 118, 119, 126, 150, 161, 168, 182, 193, 197, 201, 202, 223, 229, 235, 240, 248, 257, 271, 289, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307], "hook": [0, 32, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 171, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 289], "planner": [0, 142, 160, 289], "sac": [0, 212, 223, 225, 289], "redq": [0, 223, 279, 280, 289], "iql": [0, 218, 289, 301], "cql": [0, 207, 289], "dt": [0, 192, 289, 302], "td3": [0, 227, 289], "a2c": [0, 206, 289], "dreamer": [0, 91, 153, 214, 215, 216, 289, 291], "checkpoint": [0, 289, 303], "builder": [0, 289, 296, 307], "logger": [0, 254, 256, 257, 258, 259, 260, 261, 265, 271, 283, 287, 289, 296], "_util": [0, 3, 11, 289], "implement_for": [0, 3, 289], "contribut": 0, "thing": [0, 3, 7, 8, 290, 297, 298, 301, 304, 307], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 67, 70, 72, 73, 74, 98, 132, 150, 176, 290, 295, 302, 304], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 68, 70, 72, 73, 74, 88, 93, 96, 97, 98, 99, 106, 107, 108, 111, 112, 118, 122, 123, 126, 127, 129, 131, 132, 139, 140, 142, 158, 159, 160, 161, 163, 171, 177, 193, 196, 197, 199, 203, 208, 210, 213, 219, 222, 228, 233, 234, 235, 236, 237, 238, 253, 254, 268, 287, 290, 291, 293, 295, 296, 297, 298, 301, 302, 303, 304, 307], "debug": [0, 6, 8, 40, 290, 307], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 67, 70, 72, 73, 74, 94, 106, 111, 129, 132, 143, 158, 189, 195, 200, 208, 219, 222, 271, 290, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "habitat": [0, 3, 85, 290, 303], "lab": [0, 3, 77, 78, 290], "mujoco": [0, 6, 8, 290, 297, 298], "error": [0, 1, 3, 7, 10, 11, 29, 32, 67, 70, 72, 73, 74, 112, 134, 290, 295, 297, 301, 307], "solut": [0, 3, 6, 7, 9, 21, 290, 291, 293, 306], "resourc": [0, 1, 21, 290, 295, 297, 301], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 67, 70, 72, 73, 74, 185, 220, 225, 235, 238, 290, 291, 295, 297, 298, 301, 302, 303, 307], "issu": [0, 4, 5, 8, 112, 182, 188, 189, 193, 194, 195, 196, 197, 290, 306], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 67, 70, 72, 73, 74, 93, 98, 141, 161, 300, 301, 304, 306], "search": [0, 296], "page": [0, 7], "somewhat": [1, 292, 307], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 67, 70, 72, 73, 74, 127, 222, 268, 306, 307], "dataload": [1, 54, 62, 296, 297, 304], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 101, 115, 156, 168, 186, 190, 192, 291, 296, 304, 306, 307], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 103, 106, 107, 108, 111, 112, 113, 115, 122, 123, 124, 125, 126, 127, 129, 131, 132, 138, 141, 142, 143, 144, 145, 146, 148, 149, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 206, 207, 208, 209, 210, 212, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 236, 237, 238, 241, 243, 244, 245, 249, 250, 252, 262, 267, 268, 269, 280, 283, 287, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 101, 106, 111, 126, 127, 131, 156, 157, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 268, 271, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 93, 108, 111, 131, 134, 192, 207, 209, 212, 223, 225, 227, 262, 268, 271, 273, 274, 275, 283, 293, 295, 298, 301, 302, 303, 304, 306, 307], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 67, 70, 72, 73, 74, 98, 108, 124, 141, 180, 199, 213, 215, 220, 241, 274, 293, 295, 296, 297, 301, 302, 307], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 92, 96, 102, 111, 123, 126, 127, 128, 129, 131, 141, 156, 196, 197, 206, 207, 209, 210, 212, 213, 214, 215, 218, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 291, 295, 298, 301, 302, 304, 307], "static": [1, 11, 40, 45, 132, 218, 302, 304], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 67, 68, 70, 72, 73, 74, 88, 89, 90, 94, 96, 97, 98, 99, 106, 108, 111, 115, 123, 126, 127, 129, 131, 132, 138, 143, 144, 145, 146, 147, 149, 152, 154, 156, 157, 158, 161, 162, 165, 169, 180, 187, 188, 189, 190, 192, 196, 200, 201, 206, 207, 208, 209, 212, 218, 219, 222, 223, 224, 225, 227, 234, 235, 236, 237, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 262, 291, 292, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 67, 70, 72, 73, 74, 85, 122, 125, 134, 162, 191, 223, 292, 295, 297, 298, 301, 302, 303, 304, 307], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 67, 70, 72, 73, 74, 97, 98, 99, 113, 127, 139, 140, 156, 192, 208, 219, 222, 254, 268, 273, 285, 286, 287, 291, 295, 296, 297, 298, 301, 302, 304], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 93, 96, 111, 123, 125, 126, 127, 129, 131, 132, 134, 143, 156, 162, 164, 170, 179, 183, 185, 186, 189, 193, 196, 197, 200, 207, 218, 220, 225, 235, 236, 237, 238, 239, 280, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 67, 70, 71, 72, 73, 74, 93, 96, 102, 111, 118, 123, 126, 127, 128, 129, 131, 180, 196, 197, 198, 220, 293, 297, 307], "two": [1, 3, 4, 8, 10, 32, 62, 67, 70, 72, 73, 74, 108, 111, 131, 148, 156, 174, 197, 219, 230, 267, 271, 280, 292, 295, 296, 297, 298, 300, 301, 302, 304, 306, 307], "main": [1, 2, 3, 5, 20, 22, 68, 197, 271, 291, 292, 295, 296, 300, 307], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 141, 143, 156, 158, 162, 163, 180, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 233, 235, 236, 237, 238, 239, 253, 264, 274, 280, 283, 284, 287, 295, 296, 297, 298, 301, 302, 304, 307], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 67, 70, 71, 72, 73, 74, 97, 99, 106, 108, 111, 118, 127, 129, 131, 132, 141, 151, 156, 158, 161, 166, 171, 189, 194, 195, 197, 199, 200, 201, 220, 232, 235, 238, 253, 267, 268, 285, 286, 291, 295, 297, 300, 302, 303, 304, 306, 307], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 126, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 280, 284, 287, 291, 295, 296, 297, 301, 304], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 67, 70, 72, 73, 74, 100, 108, 119, 143, 158, 162, 175, 182, 188, 193, 194, 196, 198, 199, 201, 220, 232, 267, 270, 271, 280, 292, 293, 295, 297, 298, 301, 302], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 123, 156, 198, 199, 275, 287, 291, 293, 296, 297, 298, 301, 304, 305, 307], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 68, 70, 71, 72, 73, 74, 76, 87, 102, 105, 107, 108, 121, 122, 123, 124, 127, 141, 142, 153, 156, 157, 159, 160, 186, 190, 192, 193, 197, 206, 214, 222, 234, 235, 236, 237, 238, 241, 242, 243, 253, 262, 267, 271, 293, 295, 296, 298, 300, 302, 303, 304, 306], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 67, 70, 72, 73, 74, 111, 126, 129, 132, 199, 295, 302, 306], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 67, 70, 72, 73, 74, 112, 122, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 210, 220, 235, 236, 237, 238, 239, 253, 284, 295, 296, 298, 302, 304, 307], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 67, 70, 71, 72, 73, 74, 88, 93, 98, 103, 107, 108, 117, 121, 124, 132, 142, 143, 150, 151, 153, 154, 155, 156, 158, 160, 162, 165, 166, 167, 170, 172, 173, 176, 177, 178, 179, 182, 186, 187, 190, 192, 193, 196, 197, 201, 205, 207, 212, 214, 218, 219, 221, 223, 225, 227, 262, 264, 267, 271, 273, 274, 275, 285, 286, 287, 291, 295, 296, 297, 298, 301, 302, 303, 307], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 156, 158, 163, 164, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 236, 237, 238, 268, 295, 297, 298, 301, 302, 304, 307], "deliv": [1, 16, 18, 19, 20, 295, 296, 306], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 67, 70, 72, 73, 74, 132, 156, 198, 199, 253, 262, 291, 296, 300, 302, 306], "user": [1, 2, 3, 5, 8, 21, 32, 52, 67, 70, 72, 73, 74, 122, 127, 149, 157, 222, 284, 292, 293, 295, 296, 302, 306, 307], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 93, 96, 100, 102, 105, 107, 111, 118, 119, 121, 122, 123, 124, 126, 129, 130, 132, 134, 156, 181, 192, 253, 280, 295, 296, 297, 298, 300, 301, 306], "whenev": [1, 3, 32, 35, 38, 41, 42, 84, 105, 127, 220, 235, 236, 237, 238, 273, 291], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 67, 70, 72, 73, 74, 186, 190, 192, 295, 297, 301, 306, 307], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 99, 108, 113, 115, 117, 119, 121, 123, 126, 132, 141, 142, 156, 160, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 280, 292, 295, 297, 298, 300, 301, 302, 303, 304, 306, 307], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 67, 70, 71, 72, 73, 74, 76, 87, 93, 94, 96, 100, 105, 108, 113, 119, 121, 122, 126, 127, 130, 132, 141, 142, 144, 149, 153, 156, 157, 158, 160, 166, 169, 170, 172, 173, 179, 183, 196, 202, 206, 208, 219, 220, 222, 223, 224, 233, 234, 235, 236, 237, 238, 239, 241, 287, 291, 292, 295, 296, 297, 298, 301, 302, 307], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 141, 156, 163, 186, 188, 190, 194, 215, 296, 297, 298, 301, 302, 303, 304, 307], "predefin": [1, 296, 297, 304], "becaus": [1, 3, 4, 7, 40, 67, 70, 72, 73, 74, 106, 126, 148, 157, 162, 182, 188, 189, 193, 194, 195, 196, 197, 295, 296, 298, 300, 301, 302, 304, 307], "potenti": [1, 302, 304], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 67, 70, 72, 73, 74, 108, 127, 130, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 167, 169, 172, 173, 175, 177, 178, 180, 183, 186, 187, 189, 190, 192, 193, 195, 197, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 275, 292, 295, 297, 298, 300, 301, 303, 304], "heavi": [1, 8, 304], "crucial": [1, 186, 190, 192, 218, 220, 295, 296, 297, 298, 301, 302, 307], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 106, 144, 149, 169, 220, 222, 280, 291, 295, 296, 297, 301, 302], "hyperparamet": [1, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 295, 302, 304], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 123, 284, 287, 295, 304], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 77, 78, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 283, 284, 285, 286, 287, 291, 292, 295, 298, 301, 302, 303, 306], "take": [1, 3, 8, 23, 40, 67, 70, 72, 73, 74, 121, 122, 124, 126, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 191, 192, 195, 200, 203, 205, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 273, 291, 293, 295, 296, 297, 301, 302, 304, 307], "consider": [1, 3, 8, 296, 301, 304], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 71, 72, 73, 74, 97, 99, 122, 127, 143, 156, 158, 201, 207, 208, 209, 210, 212, 213, 219, 220, 222, 223, 225, 227, 233, 235, 238, 295, 296, 297, 301, 302, 307], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 71, 72, 73, 74, 93, 96, 102, 106, 108, 112, 113, 115, 118, 119, 121, 122, 126, 127, 132, 134, 141, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 193, 195, 196, 197, 200, 203, 212, 217, 219, 220, 222, 223, 226, 234, 235, 236, 237, 238, 239, 254, 266, 267, 268, 271, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "occur": [1, 8, 14, 28, 29, 94, 108, 112, 182, 188, 189, 193, 194, 195, 196, 197, 215, 304, 307], "serial": [1, 3, 32, 67, 70, 72, 73, 74, 132], "optim": [1, 2, 8, 32, 67, 70, 72, 73, 74, 127, 142, 160, 163, 164, 207, 220, 221, 222, 225, 266, 271, 283, 292, 293, 297, 298, 301, 302], "parallel": [1, 3, 8, 17, 134, 206, 284, 285, 286, 287, 296, 297, 301], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 93, 115, 283, 286, 289, 297, 298, 301, 304], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 301, 304, 307], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 68, 72, 73, 74, 132, 285, 286, 287, 295, 297, 306, 307], "multisyncdatacollector": [1, 18, 19, 20, 21, 286, 289, 297, 306], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 291, 293, 297, 304, 306], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 132, 192, 273, 291, 295, 301, 302], "aggreg": [1, 143, 145, 146, 199], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 141, 156, 158, 171, 187, 189, 195, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 235, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 273, 291, 296, 298, 302, 303, 306, 307], "final": [1, 3, 4, 21, 34, 36, 39, 40, 156, 186, 190, 191, 192, 198, 235, 267, 291, 295, 296, 297, 301, 302, 307], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 285, 289, 295, 296, 297, 306], "sever": [1, 8, 30, 32, 45, 67, 70, 72, 73, 74, 94, 127, 222, 295, 297, 304, 307], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 59, 62, 67, 70, 71, 72, 73, 74, 88, 93, 102, 108, 112, 115, 123, 127, 128, 132, 150, 151, 156, 157, 161, 162, 163, 168, 170, 176, 180, 192, 196, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 262, 265, 268, 269, 270, 271, 273, 285, 286, 287, 293, 296, 297, 298, 300, 301, 303, 306, 307], "gather": [1, 3, 18, 20, 21, 45, 54, 112, 234, 275, 290, 295, 296, 297, 298, 301, 302, 304, 307], "continu": [1, 9, 25, 46, 67, 70, 72, 73, 74, 138, 145, 146, 147, 148, 192, 199, 206, 207, 212, 218, 222, 223, 224, 225, 226, 227, 235, 240, 248, 291, 295, 297, 298, 301, 302, 304, 306, 307], "concomitantli": 1, "network": [1, 4, 8, 32, 67, 70, 72, 73, 74, 143, 145, 146, 147, 148, 151, 153, 154, 158, 162, 164, 166, 167, 170, 172, 173, 174, 179, 183, 184, 185, 196, 200, 207, 208, 209, 210, 212, 213, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 231, 233, 235, 236, 237, 238, 239, 282, 283, 291, 292, 293, 300, 302, 307], "impli": [1, 307], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 156, 164, 196, 206, 207, 208, 212, 215, 273, 282, 291, 293, 295, 296, 297, 298, 300, 302, 304, 306], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 67, 70, 72, 73, 74, 106, 108, 119, 127, 128, 132, 134, 158, 292, 293, 295, 296, 297, 298, 301, 302, 303, 304, 306, 307], "slightli": [1, 291, 292, 298, 302, 303, 304, 307], "lag": [1, 13, 14, 16, 17, 295, 296, 297], "therefor": [1, 3, 7, 67, 70, 72, 73, 74, 115, 122, 222, 233, 307], "although": [1, 8, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 293, 295, 296, 304], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 88, 93, 106, 111, 118, 121, 124, 126, 128, 131, 141, 161, 186, 190, 192, 193, 196, 197, 205, 206, 207, 208, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 292, 293, 295, 296, 297, 300, 301, 302, 304, 307], "asynchron": [1, 9, 14, 21, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196, 206, 285, 296, 297], "off": [1, 2, 4, 155, 178, 188, 225, 267, 276, 291, 293, 295, 296, 297, 301, 303, 307], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 67, 70, 72, 73, 74, 97, 99, 102, 108, 122, 152, 156, 162, 163, 183, 185, 187, 189, 194, 206, 213, 218, 222, 267, 291, 293, 295, 296, 297, 298, 301, 302, 303, 304, 307], "remot": [1, 18, 19, 20, 21, 73, 74, 307], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 67, 70, 71, 72, 73, 74, 89, 90, 93, 97, 99, 106, 113, 134, 142, 156, 160, 192, 206, 275, 291, 295, 297, 298, 303, 304, 306], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 119, 223, 235, 236, 237, 238, 239, 292, 295, 297], "synchronis": [1, 68, 301], "either": [1, 5, 22, 32, 40, 54, 67, 70, 72, 73, 74, 122, 202, 227, 258, 293, 295, 296, 298, 303, 304, 306, 307], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 295, 301, 306], "update_at_each_batch": [1, 13, 14, 17, 295], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 89, 90, 93, 94, 96, 98, 102, 105, 106, 107, 108, 111, 112, 113, 117, 121, 123, 125, 126, 127, 128, 129, 131, 132, 134, 138, 141, 142, 143, 145, 146, 147, 148, 154, 156, 158, 160, 161, 162, 163, 164, 177, 178, 182, 183, 184, 185, 186, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 235, 236, 237, 238, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 264, 265, 267, 268, 271, 287, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "second": [1, 8, 156, 189, 208, 219, 222, 225, 270, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 96, 97, 99, 106, 110, 111, 113, 115, 123, 125, 126, 127, 129, 131, 138, 141, 142, 143, 144, 145, 146, 147, 148, 152, 154, 156, 157, 158, 160, 162, 163, 164, 169, 170, 171, 179, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 199, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 268, 273, 280, 281, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 67, 70, 72, 73, 74, 102, 106, 126, 151, 152, 165, 183, 184, 185, 188, 189, 191, 196, 202, 206, 208, 209, 210, 213, 219, 222, 224, 233, 234, 235, 236, 237, 238, 271, 280, 289, 293, 295, 296, 297, 298, 300, 301, 302, 307], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 67, 68, 70, 71, 72, 73, 74, 78, 93, 108, 123, 126, 132, 138, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 159, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 203, 210, 212, 220, 233, 235, 236, 237, 238, 254, 258, 267, 275, 276, 277, 280, 283, 285, 286, 291, 292, 293, 295, 297, 298, 302, 304, 307], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 96, 97, 99, 111, 113, 115, 123, 126, 127, 129, 131, 138, 141, 142, 156, 160, 163, 164, 170, 171, 179, 182, 183, 184, 185, 187, 188, 189, 193, 194, 195, 196, 199, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 268, 280, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 67, 70, 72, 73, 74, 113, 148, 156, 158, 165, 180, 182, 186, 188, 190, 196, 201, 220, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 290, 292, 295, 296, 297, 301, 302, 304, 306, 307], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 67, 68, 70, 72, 73, 74, 88, 93, 97, 98, 99, 107, 108, 111, 120, 127, 128, 131, 132, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 162, 165, 166, 167, 168, 169, 171, 172, 173, 175, 180, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 226, 227, 233, 235, 236, 237, 238, 242, 243, 264, 266, 267, 271, 275, 280, 287, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 96, 106, 110, 111, 123, 126, 127, 129, 131, 196, 263, 295, 296, 297, 298, 301, 303, 307], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 73, 74, 94, 98, 118, 126, 132, 156, 157, 163, 164, 182, 188, 193, 194, 196, 197, 200, 208, 212, 219, 222, 223, 227, 241, 280, 287, 291, 293, 295, 296, 297, 301, 302, 304, 306], "infer": [1, 73, 74, 93, 122, 132, 156, 163, 187, 295, 297, 304], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 67, 70, 71, 72, 73, 74, 77, 78, 107, 108, 127, 132, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 198, 199, 200, 203, 267, 285, 286, 287, 290, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306], "dispatch": [1, 18, 19, 20, 21, 180], "avail": [1, 3, 4, 6, 21, 62, 106, 152, 171, 193, 197, 220, 285, 286, 291, 295, 296, 297, 298, 301, 302, 304, 307], "speed": [1, 2, 4, 8, 27, 292, 295, 296, 297, 298, 301, 302, 304], "up": [1, 2, 3, 8, 9, 27, 40, 52, 222, 290, 291, 292, 295, 296, 297, 298, 301, 302, 304, 307], "avoid": [1, 32, 67, 70, 72, 73, 74, 84, 127, 132, 182, 196, 201, 208, 219, 222, 274, 297, 301], "oom": 1, "choic": [1, 2, 52, 165, 291, 292, 295, 296, 301], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 94, 97, 99, 102, 111, 113, 115, 120, 123, 125, 127, 128, 131, 132, 138, 141, 142, 143, 144, 149, 150, 152, 156, 157, 158, 160, 161, 162, 165, 168, 169, 170, 171, 172, 173, 176, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 206, 207, 209, 210, 212, 218, 220, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 254, 262, 268, 280, 291, 296, 297, 298, 300, 301, 302, 303, 306, 307], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 67, 68, 69, 70, 72, 73, 74, 97, 99, 113, 126, 128, 132, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 163, 165, 166, 167, 169, 170, 172, 173, 175, 179, 180, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 208, 219, 220, 222, 235, 236, 237, 238, 239, 268, 285, 286, 287, 291, 295, 296, 297, 298, 300, 301, 302, 304, 307], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 88, 93, 102, 128, 132, 156, 187, 206, 208, 209, 212, 218, 219, 220, 222, 223, 224, 225, 227, 235, 236, 237, 238, 291, 292, 296, 297, 301, 304], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 67, 70, 72, 73, 74, 132, 142, 157, 160, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 280, 289, 293, 295, 297, 298, 301, 303, 304, 307], "while": [1, 3, 7, 8, 32, 67, 70, 72, 73, 74, 115, 127, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 218, 219, 222, 291, 295, 297, 298, 301, 302, 303, 304, 306], "wait": [1, 20, 21, 22, 298, 302], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 67, 70, 72, 73, 74, 84, 93, 98, 108, 113, 115, 118, 119, 123, 127, 173, 198, 199, 200, 206, 207, 209, 210, 212, 218, 222, 225, 235, 242, 243, 291, 293, 295, 296, 297, 298, 300, 301, 302, 304, 307], "impact": [1, 97, 99, 296, 298, 301], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 67, 68, 70, 72, 73, 74, 93, 96, 111, 123, 126, 127, 129, 131, 132, 196, 287, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "manag": [1, 8, 231, 232, 235, 236, 237, 238, 267], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 67, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 141, 142, 151, 156, 159, 160, 171, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 254, 265, 266, 267, 269, 270, 271, 275, 280, 292, 293, 295, 297, 298, 300, 301, 302, 304, 306, 307], "control": [1, 3, 5, 8, 16, 77, 78, 98, 141, 145, 146, 147, 148, 156, 159, 160, 173, 180, 192, 196, 197, 198, 206, 208, 219, 222, 226, 235, 240, 248, 291, 293, 295, 296, 297, 301, 302, 304], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 67, 70, 72, 73, 74, 93, 94, 103, 106, 107, 108, 111, 112, 121, 123, 124, 126, 127, 129, 134, 155, 156, 161, 178, 183, 184, 185, 187, 193, 196, 197, 199, 206, 207, 208, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 230, 233, 235, 236, 237, 238, 262, 266, 280, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 295, 296, 301, 306], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 67, 70, 72, 73, 74, 93, 97, 99, 103, 122, 127, 156, 267, 271, 292, 295, 296, 297, 298, 301, 302, 304, 307], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 192, 295, 307], "usual": [1, 3, 4, 6, 7, 8, 52, 67, 70, 72, 73, 74, 164, 222, 235, 236, 237, 238, 239, 253, 280, 290, 291, 293, 295, 296, 297, 298, 301, 304, 307], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 67, 68, 70, 72, 73, 74, 93, 97, 98, 99, 103, 107, 108, 126, 127, 132, 143, 156, 158, 161, 162, 187, 192, 200, 295, 296, 297, 300, 301, 303, 304, 307], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 67, 69, 70, 72, 73, 74, 93, 97, 99, 115, 289, 293, 296, 297, 298, 301, 303], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 72, 73, 74, 77, 88, 93, 94, 98, 102, 106, 107, 108, 111, 112, 115, 117, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 233, 234, 235, 236, 237, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280, 283, 287, 293, 295, 296, 297, 298, 303, 304, 306, 307], "behaviour": [1, 3, 21, 70, 94, 97, 99, 108, 112, 122, 141, 155, 156, 178, 267, 291, 296, 298, 302, 304], "besid": 1, "those": [1, 5, 7, 26, 28, 73, 74, 97, 99, 108, 123, 156, 193, 197, 198, 199, 273, 285, 286, 291, 295, 296, 301, 302, 307], "choos": [1, 156, 222, 291, 292, 295, 296, 297, 301, 304], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 67, 70, 71, 72, 73, 74, 88, 106, 111, 129, 143, 156, 158, 189, 194, 195, 205, 206, 207, 208, 209, 212, 218, 219, 220, 222, 223, 224, 225, 227, 271, 280, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 304, 306, 307], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 274, 295, 297, 306], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 70, 93, 103, 186, 190, 192, 253, 254, 264, 267, 271, 274, 275, 295, 296, 297, 298, 301, 304, 306, 307], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 70, 72, 73, 74, 88, 93, 96, 98, 102, 105, 106, 108, 110, 111, 118, 121, 123, 126, 127, 129, 131, 132, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 160, 162, 163, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 196, 197, 199, 200, 203, 208, 219, 222, 234, 235, 236, 237, 238, 253, 267, 293, 296, 297, 298, 301, 302, 304, 307], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 93, 115, 274, 295, 296, 297, 298, 301, 304, 306], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 67, 68, 70, 72, 73, 74, 111, 118, 121, 122, 123, 124, 131, 132, 152, 156, 162, 166, 170, 171, 179, 186, 188, 189, 195, 199, 241, 244, 245, 246, 247, 249, 250, 251, 252, 267, 268, 285, 286, 291, 295, 296, 297, 298, 301, 302, 303, 304, 306, 307], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 274, 295, 296], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 67, 70, 71, 72, 73, 74, 98, 107, 108, 123, 134, 156, 193, 196, 197, 207, 223, 267, 275, 291, 295, 296, 297, 298, 302, 303, 304, 306, 307], "rand_step": [1, 3, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 105, 123, 132, 302, 306, 307], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 295], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 295, 296, 297], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 67, 70, 72, 73, 74, 112, 126, 142, 156, 160, 192, 222, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 289, 292, 295, 296, 297, 298, 302, 304, 306, 307], "pad": [1, 23, 37, 43, 52, 93, 143, 145, 146, 156, 157, 161, 268], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 93, 94, 108, 112, 118, 125, 156, 158, 161, 164, 188, 193, 196, 197, 220, 291, 295, 296, 298, 301, 302, 304], "mask": [1, 4, 23, 112, 161, 187, 268, 296, 298, 307], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 67, 70, 72, 73, 74, 93, 96, 111, 123, 125, 126, 127, 129, 131, 159, 196, 205, 213, 271, 290, 296, 297, 300, 301, 302, 304, 307], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 70, 112, 161, 186, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 293, 298], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 67, 70, 72, 73, 74, 103, 112, 132, 152, 161, 171, 188, 189, 194, 195, 197, 230, 235, 268, 295, 297, 298, 301], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 112, 127, 143, 158, 161, 186, 190, 192, 219, 235, 236, 237, 238, 268, 293, 307], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 267, 289, 295, 296], "strategi": [1, 16, 291, 293, 295, 296, 301, 304], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 67, 70, 72, 73, 74, 111, 131, 291, 292, 295, 297, 301, 302, 304, 307], "tool": [1, 2, 3, 5, 298, 302, 304, 307], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 83, 84, 293, 295, 297, 298, 302], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 289], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 289], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 94, 96, 97, 98, 99, 106, 108, 111, 113, 115, 117, 122, 123, 125, 126, 127, 129, 131, 132, 138, 141, 142, 143, 144, 149, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 241, 262, 269, 270, 280, 283, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "multiprocess": [1, 18, 19, 20, 68, 69, 132, 296, 297, 302, 307], "synchron": [1, 13, 19, 21, 72, 285, 286, 296, 297], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 97, 99, 122, 127, 132, 135, 139, 140, 150, 155, 156, 168, 176, 177, 178, 193, 197, 220, 267, 295, 296, 298, 301, 306, 307], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 186, 190, 192, 265, 269, 295, 296, 301], "dedic": [1, 3, 18, 19, 20, 21, 183, 184, 185, 291, 295, 300, 301], "folder": [1, 296], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 67, 70, 72, 73, 74, 112, 198, 199, 262, 271, 291, 295, 296, 297, 300, 306, 307], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 67, 68, 70, 71, 72, 73, 74, 93, 96, 97, 99, 101, 106, 108, 111, 118, 123, 124, 126, 127, 129, 131, 132, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 196, 197, 199, 200, 203, 215, 220, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 266, 271, 274, 285, 286, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 306, 307], "variou": [1, 3, 13, 14, 16, 17, 156, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 233, 285, 286, 295, 296, 297, 301, 307], "machin": [1, 7, 18, 19, 20, 32, 53, 301], "One": [1, 2, 4, 8, 31, 33, 45, 93, 115, 129, 168, 186, 190, 196, 200, 226, 230, 258, 295, 296, 304, 307], "wonder": 1, "why": [1, 3, 302, 307], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 72, 74, 284, 289, 295, 296, 297, 300, 306, 307], "instead": [1, 4, 7, 8, 11, 27, 32, 67, 70, 72, 73, 74, 102, 123, 127, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 206, 207, 208, 210, 212, 213, 218, 219, 222, 223, 224, 225, 233, 235, 239, 287, 291, 302, 304, 307], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 67, 70, 72, 73, 74, 96, 97, 99, 111, 119, 122, 123, 125, 126, 127, 129, 131, 155, 158, 173, 177, 178, 196, 199, 205, 206, 207, 209, 210, 212, 218, 220, 222, 223, 224, 225, 227, 273, 285, 286, 287, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307], "lower": [1, 2, 17, 21, 25, 132, 172, 173, 200, 297, 302], "io": [1, 72], "footprint": [1, 2, 304], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 63, 67, 70, 72, 73, 74, 93, 102, 111, 113, 127, 131, 132, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 163, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 194, 195, 196, 200, 203, 205, 212, 223, 224, 225, 227, 234, 239, 254, 271, 287, 291, 292, 295, 296, 297, 298, 301, 302, 304, 306, 307], "commun": [1, 2, 3, 290, 297, 307], "yet": [1, 220, 303], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 67, 69, 70, 71, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 138, 152, 171, 173, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 280, 291, 295, 296, 297, 298, 300, 301, 306], "plai": [1, 3, 93, 296, 297, 304, 307], "role": [1, 3, 296, 307], "opposit": 1, "direct": [1, 32, 67, 70, 72, 73, 74, 220, 296], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 141, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 188, 189, 190, 192, 194, 195, 200, 203, 295, 296, 297, 298, 302, 303, 304, 306, 307], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 72, 235, 236, 237, 238, 298, 301], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 68, 73, 74, 132, 156, 162, 183, 184, 185, 206, 208, 209, 212, 218, 219, 222, 223, 224, 225, 227, 287, 291, 297, 298, 300, 301, 306, 307], "among": [1, 3, 301], "achiev": [1, 3, 4, 32, 67, 70, 72, 73, 74, 122, 268, 293, 295, 296, 297, 298, 301, 302, 307], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 52, 53, 73, 111, 126, 131, 211, 220, 292, 293, 295, 296, 297, 298, 304, 307], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 267, 292, 295, 297, 301, 304, 307], "gpu": [1, 7, 8, 32, 67, 70, 72, 73, 74, 295, 297, 298, 301, 307], "nativ": [1, 7, 9, 67, 70, 72, 73, 74, 93, 298, 304], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 155, 177, 178, 205, 290, 295, 296, 297, 298, 301, 303, 307], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 108, 132, 142, 150, 153, 156, 157, 160, 176, 186, 193, 197, 220, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 295, 296, 297, 301, 302, 304, 306, 307], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 156, 182, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 233, 235, 236, 237, 238, 239, 284, 295, 296, 297, 301, 304, 307], "build": [1, 3, 7, 23, 26, 32, 67, 70, 72, 73, 74, 132, 142, 156, 160, 191, 193, 197, 271, 278, 279, 281, 282, 291, 293, 297, 298, 301, 302, 303, 306, 307], "central": [2, 295, 296, 301, 304], "part": [2, 4, 8, 32, 40, 67, 70, 72, 73, 74, 108, 115, 118, 156, 201, 262, 287, 295, 297, 298, 302, 307], "algorithm": [2, 3, 8, 9, 13, 14, 71, 103, 206, 222, 223, 224, 225, 262, 276, 289, 292, 293, 295, 296, 297, 298, 301, 303, 304, 306], "implement": [2, 3, 9, 11, 16, 32, 63, 67, 70, 72, 73, 74, 96, 106, 113, 126, 132, 155, 176, 177, 178, 206, 207, 211, 218, 220, 221, 222, 225, 280, 291, 293, 295, 296, 297, 298, 302, 306], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 52, 62, 67, 68, 70, 72, 73, 74, 93, 106, 111, 113, 123, 129, 132, 142, 156, 157, 162, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "give": [2, 7, 41, 71, 93, 290, 292, 295, 296, 301, 302, 303, 306], "abil": [2, 220, 302, 304], "veri": [2, 3, 296, 302, 304, 306, 307], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 93, 112, 115, 135, 136, 139, 140, 142, 150, 155, 160, 161, 168, 169, 172, 177, 178, 182, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 206, 207, 208, 209, 210, 219, 221, 222, 227, 262, 268, 271, 274, 291, 295, 296, 297, 298, 301, 303, 306, 307], "latenc": 2, "especi": [2, 3, 7, 8, 94], "larger": [2, 4, 218], "volum": 2, "lazymemmapstorag": [2, 93, 289, 295, 296, 298, 303, 304], "advis": [2, 307], "due": [2, 3, 5, 303, 304, 307], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 303, 304], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 67, 70, 72, 73, 74, 172, 173, 220, 239, 295, 296, 298, 303, 304, 306, 307], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 97, 99, 118, 120, 122, 128, 142, 196, 197, 220, 226, 291, 295, 297, 298], "file": [2, 6, 7, 8, 253, 293, 296, 304, 305], "locat": [2, 7, 45, 70, 108, 117, 155, 165, 177, 178, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 295, 296, 297, 301, 304], "improv": [2, 4, 103, 206, 292, 301, 304], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 289, 304], "were": [2, 7, 73, 74, 297, 304], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 132, 193, 197, 219, 220, 222, 295, 296, 298], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 72, 93, 111, 129, 144, 145, 146, 147, 148, 149, 152, 153, 154, 160, 161, 164, 166, 167, 169, 170, 172, 173, 179, 189, 192, 206, 207, 211, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 235, 240, 248, 280, 303, 306], "github": [2, 5, 6, 7, 10, 18, 19, 20, 129, 303, 306], "com": [2, 5, 6, 7, 10, 18, 19, 20, 303, 306], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 67, 70, 71, 72, 73, 74, 96, 106, 111, 113, 123, 126, 127, 129, 131, 132, 136, 140, 143, 158, 161, 162, 164, 170, 179, 186, 188, 190, 193, 196, 197, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 229, 233, 241, 280, 285, 291, 295, 296, 297, 301, 302, 304, 307], "1x": 2, "lazytensorstorag": [2, 41, 42, 115, 289, 297, 301, 304], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 88, 93, 96, 98, 106, 108, 111, 113, 115, 123, 125, 126, 127, 129, 131, 138, 142, 143, 145, 146, 149, 152, 154, 156, 157, 158, 160, 161, 162, 165, 168, 170, 180, 182, 183, 184, 185, 188, 189, 193, 195, 196, 199, 200, 201, 206, 207, 209, 210, 212, 213, 214, 215, 218, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 241, 244, 245, 246, 247, 249, 250, 251, 252, 254, 270, 291, 293, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 155, 177, 178, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 296, 297, 302, 304, 307], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 88, 93, 112, 143, 182, 186, 188, 196, 197, 201, 262, 295, 297, 304, 307], "pai": [2, 8, 295, 298], "attent": [2, 8, 295, 298], "alwai": [2, 3, 20, 26, 28, 32, 54, 67, 70, 72, 73, 74, 106, 107, 213, 220, 291, 292, 296, 297, 298, 301, 302, 304], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 123, 155, 170, 177, 178, 295, 298, 301, 302, 304, 306], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 93, 94, 102, 108, 112, 120, 125, 128, 132, 143, 144, 149, 156, 158, 161, 163, 164, 169, 170, 174, 175, 176, 177, 180, 188, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 287, 291, 295, 296, 297, 298, 301, 302, 304], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 98, 119, 125, 129, 132, 156, 164, 165, 187, 189, 195, 197, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 235, 268, 280, 285, 286, 291, 293, 295, 296, 297, 298, 301, 302, 303, 304, 306, 307], "word": [2, 40, 52, 220, 295, 302, 307], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 67, 68, 70, 72, 73, 74, 93, 111, 118, 126, 127, 129, 132, 138, 141, 143, 145, 146, 147, 148, 149, 154, 156, 158, 159, 162, 187, 197, 210, 213, 223, 233, 254, 268, 275, 276, 277, 283, 285, 286, 291, 295, 296, 297, 298, 301, 302, 303, 304, 306, 307], "1m": [2, 274, 295, 297, 298, 303], "multidimension": [2, 41, 58, 304], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 149, 156, 163, 180, 187, 198, 199, 206, 208, 213, 219, 222, 234, 271, 291, 293, 295, 296, 297, 298, 302, 304, 307], "desir": [2, 3, 32, 67, 70, 72, 73, 74, 96, 108, 111, 112, 123, 126, 127, 129, 131, 139, 140, 143, 158, 162, 182, 188, 189, 193, 194, 195, 196, 197, 291, 295, 301, 302], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 67, 70, 72, 73, 74, 80, 82, 87, 108, 111, 112, 115, 129, 134, 162, 163, 188, 197, 220, 222, 235, 236, 237, 238, 268, 277, 287, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "do": [2, 3, 4, 7, 70, 107, 112, 132, 141, 162, 163, 184, 235, 293, 295, 296, 297, 298, 300, 301, 302, 304, 306, 307], "custom": [2, 3, 5, 32, 67, 70, 72, 73, 74, 129, 162, 200, 213, 222, 228, 287, 291, 295, 296, 297, 298, 301], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 67, 70, 72, 73, 74, 77, 98, 100, 113, 118, 119, 127, 129, 156, 194, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 239, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 280, 293, 295, 296, 297, 298, 301, 302, 307], "randomcroptensordict": [2, 295], "here": [2, 3, 4, 7, 8, 9, 10, 67, 70, 72, 73, 74, 93, 291, 292, 295, 296, 297, 298, 301, 302, 304, 306, 307], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 67, 70, 72, 73, 74, 206, 208, 217, 219, 222, 271, 290, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 165, 180, 186, 187, 190, 192, 197, 202, 235, 259, 260, 261, 287, 289, 297, 298, 301, 303, 307], "around": [2, 5, 7, 15, 17, 41, 42, 71, 197, 235, 295, 296, 301, 307], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 93, 134, 207, 218, 293, 303, 304, 306], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 67, 70, 72, 73, 74, 100, 118, 119, 141, 144, 145, 146, 147, 148, 154, 164, 169, 192, 196, 197, 198, 199, 206, 207, 208, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 287, 293, 295, 300, 301, 304, 306], "replaybuff": [2, 41, 42, 66, 93, 112, 115, 210, 213, 233, 281, 283, 289, 297, 301, 303, 304, 306], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 112, 210, 213, 233, 289, 295, 297, 301, 304], "By": [2, 3, 33, 67, 70, 72, 73, 74, 180, 197, 220, 267, 287, 295, 303, 304, 307], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 132, 138, 152, 165, 182, 183, 184, 185, 188, 193, 194, 196, 197, 199, 200, 201, 202, 233, 267, 289, 291, 292, 295, 296, 297, 298, 303], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 102, 105, 108, 111, 112, 113, 115, 117, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 206, 207, 209, 210, 212, 215, 216, 218, 220, 222, 223, 224, 225, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 280, 291, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 67, 70, 72, 73, 74, 113, 123, 141, 158, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 228, 230, 233, 291, 293, 295, 297, 298, 301, 302, 304, 307], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 271, 290, 297, 298, 301, 307], "respons": [2, 3, 8, 271, 307], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 106, 183, 184, 185, 196, 218, 280, 289, 295, 302, 306], "repositori": [2, 7, 53], "latest": [2, 10, 72, 268, 297, 301, 302, 306], "wheel": [2, 297], "publish": 2, "pypi": [2, 306], "openml": [2, 53, 88], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 158, 180, 196, 198, 199, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 291, 293, 295, 296, 297, 298, 301, 302, 304, 307], "parent": [2, 3, 21, 26, 28, 44, 67, 94, 102, 103, 108, 111, 123, 126, 128, 129, 183, 220, 222, 239, 295, 302, 306, 307], "subclass": [2, 3, 67, 70, 72, 73, 74, 126, 134, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 196, 197, 198, 200, 203, 220, 222, 296, 298, 302, 304], "basic": [2, 71, 291, 297, 307], "properti": [2, 3, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 127, 150, 155, 163, 168, 176, 177, 178, 220, 302, 304], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 93, 94, 95, 96, 97, 100, 102, 104, 105, 106, 108, 109, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 141, 144, 145, 146, 147, 148, 149, 152, 156, 157, 166, 167, 169, 171, 172, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 201, 202, 206, 207, 208, 209, 210, 212, 215, 218, 219, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 254, 280, 283, 291, 293, 296, 297, 298, 300, 301, 302, 304, 306, 307], "action": [2, 3, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 67, 70, 71, 72, 73, 74, 76, 87, 89, 90, 97, 98, 99, 103, 106, 107, 113, 115, 119, 127, 138, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 158, 159, 160, 161, 169, 170, 171, 173, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 200, 201, 206, 207, 209, 210, 212, 218, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 280, 283, 287, 291, 292, 293, 295, 296, 297, 300, 301, 303, 304, 306, 307], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 67, 70, 72, 73, 74, 88, 90, 94, 97, 99, 106, 108, 113, 115, 123, 125, 132, 133, 134, 138, 141, 142, 144, 149, 150, 151, 156, 158, 160, 161, 162, 163, 165, 168, 169, 170, 171, 176, 179, 182, 183, 184, 185, 187, 188, 189, 193, 194, 195, 196, 199, 200, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 230, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 262, 268, 271, 283, 291, 295, 296, 297, 298, 300, 301, 303, 304, 306, 307], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 96, 97, 98, 99, 106, 108, 111, 113, 115, 123, 125, 126, 127, 129, 131, 134, 138, 141, 142, 152, 156, 160, 163, 164, 170, 171, 179, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 199, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 241, 280, 291, 297, 298, 300, 301, 302, 303, 304, 306, 307], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 67, 68, 70, 71, 72, 73, 74, 82, 83, 84, 93, 105, 106, 108, 111, 113, 115, 123, 131, 132, 138, 141, 142, 152, 156, 158, 160, 162, 165, 170, 171, 179, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 206, 207, 208, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 264, 267, 280, 283, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 143, 150, 156, 158, 162, 176, 182, 187, 193, 194, 196, 197, 200, 201, 207, 212, 219, 221, 223, 225, 268, 273, 291, 295, 297, 300, 301, 302, 304, 306, 307], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 67, 70, 71, 72, 73, 74, 88, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 141, 143, 145, 146, 147, 148, 151, 156, 157, 158, 162, 163, 164, 171, 172, 173, 174, 175, 180, 182, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 265, 269, 274, 283, 291, 292, 293, 295, 296, 297, 298, 301, 302, 306, 307], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74, 88, 93, 96, 97, 99, 106, 108, 111, 113, 124, 126, 129, 131, 134, 143, 144, 145, 146, 149, 151, 152, 153, 156, 157, 158, 162, 165, 171, 180, 182, 183, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 254, 262, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 306, 307], "send": [2, 3, 8, 306], "receiv": [2, 3, 32, 40, 67, 70, 72, 73, 74, 122, 126, 158, 241, 292, 295, 297, 300, 302], "spawn": [2, 3, 4, 18, 22, 72, 301], "check_env_spec": [2, 3, 289, 297, 301, 302], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 70, 72, 73, 74, 93, 96, 102, 106, 108, 111, 113, 114, 115, 123, 126, 127, 129, 131, 142, 157, 182, 183, 184, 185, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 239, 253, 284, 292, 293, 294, 296, 297, 298, 302, 304, 307], "saniti": [2, 3, 7, 134, 297], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 67, 70, 71, 72, 73, 74, 96, 98, 108, 111, 123, 126, 127, 129, 131, 141, 142, 152, 153, 160, 171, 175, 182, 188, 189, 192, 195, 196, 197, 198, 199, 201, 205, 209, 210, 234, 235, 236, 237, 238, 239, 241, 263, 267, 283, 291, 293, 295, 296, 297, 301, 302, 307], "techniqu": [2, 8, 296, 304], "commonli": [2, 307], "emploi": [2, 164], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 304], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 93, 97, 99, 132, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 210, 213, 233, 291, 302, 306], "offer": [2, 3, 7, 291, 296, 302, 307], "facilit": [2, 3, 7, 110, 111, 129, 131, 183, 184, 185, 291, 295, 298, 302], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 122, 193, 197, 295, 297, 301, 302, 307], "extern": [2, 3, 97, 99, 307], "consist": [2, 3, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 106, 143, 158, 295, 296, 297, 302, 303, 307], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196, 295, 296, 307], "manner": [2, 70, 111, 129, 291, 295, 296, 297, 300, 302, 304], "handl": [3, 21, 32, 67, 70, 72, 73, 74, 132, 156, 158, 271, 285, 286, 295, 296, 297, 301, 304], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 67, 70, 72, 73, 74, 93, 98, 108, 113, 122, 127, 128, 152, 156, 158, 160, 162, 171, 218, 222, 230, 235, 236, 237, 242, 243, 267, 271, 273, 285, 286, 291, 292, 293, 295, 296, 297, 300, 301, 302, 303, 304, 307], "dm": [3, 295, 307], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 71, 72, 115, 123, 129, 130, 183, 191, 206, 207, 209, 210, 212, 214, 218, 222, 223, 224, 225, 227, 271, 280, 291, 292, 293, 295, 296, 298, 301, 302, 304, 307], "goal": [3, 4, 122, 295, 296, 297, 298, 301, 302], "abl": [3, 295, 297, 298, 300, 301, 302, 304, 306], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 134, 256, 257, 258, 259, 260, 261, 290, 296, 297, 301, 304], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 295, 297, 301, 302, 307], "simul": [3, 5, 7, 8, 91, 142, 160, 291, 295, 297, 301], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 111, 129, 134, 145, 156, 175, 197, 198, 199, 262, 274, 291, 293, 295, 296, 297, 298, 301, 302, 304, 306, 307], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 67, 70, 72, 73, 74, 123, 134, 161, 163, 164, 182, 187, 188, 189, 192, 193, 194, 195, 196, 197, 231, 232, 293, 295, 296, 297, 298, 301, 302, 304, 306, 307], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 67, 70, 72, 73, 74, 182, 188, 189, 193, 194, 195, 196, 197, 220, 235, 236, 237, 238, 239, 292, 295, 296, 302, 307], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 105, 106, 108, 113, 115, 123, 132, 156, 280, 283, 295, 296, 297, 298, 300, 301, 303, 304, 306, 307], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 67, 70, 71, 72, 73, 74, 96, 98, 106, 111, 123, 126, 127, 129, 131, 142, 143, 145, 146, 147, 148, 151, 152, 153, 154, 156, 158, 160, 162, 165, 170, 171, 179, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 201, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 280, 283, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 306], "typic": [3, 4, 8, 32, 67, 70, 72, 73, 74, 122, 207, 220, 222, 225, 291, 292, 293, 297, 301, 302], "organis": [3, 296, 302], "arbitrari": [3, 33, 73, 74, 291, 295, 296, 302], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 67, 70, 72, 73, 74, 235, 236, 237, 238, 239, 293, 296, 297, 301, 302, 304, 306], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 97, 99, 192, 235, 236, 237, 238, 239, 292, 295, 297, 298, 301, 302, 303, 304], "attribut": [3, 4, 32, 45, 67, 70, 72, 73, 74, 111, 121, 129, 156, 197, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 295, 298, 302], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 93, 97, 99, 113, 115, 123, 141, 142, 149, 152, 156, 160, 170, 171, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 262, 268, 280, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 67, 70, 72, 73, 74, 93, 112, 156, 179, 183, 184, 185, 202, 291, 296, 297, 298, 301], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 67, 70, 71, 72, 73, 74, 88, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 111, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 134, 156, 162, 189, 192, 196, 199, 206, 207, 208, 209, 210, 212, 218, 219, 220, 222, 223, 224, 225, 227, 233, 275, 290, 291, 292, 293, 295, 297, 298, 301, 302, 304, 307], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74], "actual": [3, 4, 7, 17, 67, 70, 72, 73, 74, 122, 274, 292, 295, 297, 301, 302], "just": [3, 4, 67, 70, 72, 73, 74, 162, 262, 291, 293, 295, 296, 297, 298, 301, 302, 304, 306, 307], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 67, 70, 72, 73, 74, 94, 108, 141, 142, 160, 193, 197, 200, 206, 207, 208, 210, 219, 222, 223, 225, 227, 233, 235, 236, 237, 238, 280, 287, 293, 296, 297, 302, 307], "care": [3, 8, 67, 70, 72, 73, 74, 126, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 295, 297, 301, 302, 304], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 67, 70, 72, 73, 74, 96, 111, 123, 125, 126, 127, 129, 131, 133, 143, 155, 158, 162, 163, 170, 178, 179, 183, 185, 196, 197, 268, 295, 296, 297, 298, 301, 302, 304, 307], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 143, 155, 158, 162, 178, 196, 268, 295, 296, 297, 298, 302], "parametr": [3, 164, 197, 207, 218, 225, 295, 297], "hardwar": 3, "observation_spec": [3, 67, 70, 71, 72, 73, 74, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 108, 111, 114, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 142, 156, 160, 275, 283, 295, 297, 300, 301, 302, 307], "compositespec": [3, 28, 49, 67, 69, 70, 71, 72, 73, 74, 97, 98, 99, 106, 113, 121, 122, 123, 126, 138, 142, 160, 182, 186, 190, 193, 199, 200, 289, 295, 297, 301, 302, 307], "pair": [3, 32, 34, 36, 39, 52, 67, 70, 72, 73, 74, 123, 183, 193, 197, 220, 235, 236, 237, 238, 239, 291, 292, 295, 296, 297, 300, 302, 307], "state_spec": [3, 67, 70, 71, 72, 73, 74, 297, 302, 307], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 88, 111, 124, 127, 129, 131, 295, 302], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 67, 70, 71, 72, 73, 74, 76, 87, 93, 97, 99, 106, 115, 152, 171, 173, 182, 188, 193, 194, 207, 210, 223, 225, 227, 283, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "reward_spec": [3, 67, 70, 71, 72, 73, 74, 92, 96, 97, 99, 116, 117, 118, 126, 128, 142, 160, 297, 301, 302, 307], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 96, 97, 99, 106, 113, 115, 116, 117, 118, 119, 122, 126, 128, 130, 131, 132, 138, 141, 142, 160, 187, 202, 206, 207, 209, 210, 212, 215, 218, 220, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 267, 269, 287, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "done_spec": [3, 67, 70, 72, 73, 74, 97, 99, 126, 297, 301, 302, 307], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 192, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 301, 302, 303], "input_spec": [3, 67, 70, 71, 72, 73, 74, 96, 97, 98, 108, 113, 119, 121, 126, 127, 128, 142, 160, 301, 302], "full_action_spec": [3, 67, 70, 72, 73, 74, 301], "full_state_spec": [3, 67, 70, 72, 73, 74], "lock": [3, 26, 28, 67, 70, 72, 73, 74, 123, 132, 302], "modifi": [3, 7, 8, 26, 28, 32, 45, 67, 70, 72, 73, 74, 96, 102, 106, 111, 123, 126, 127, 129, 131, 187, 192, 196, 274, 280, 295, 296, 297, 301, 302], "directli": [3, 4, 8, 67, 70, 71, 72, 73, 74, 115, 220, 287, 291, 297, 301, 302, 304], "output_spec": [3, 67, 70, 72, 73, 74, 96, 106, 113, 126, 127, 301, 302], "full_observation_spec": [3, 67, 70, 72, 73, 74], "full_reward_spec": [3, 67, 70, 72, 73, 74, 301], "full_done_spec": [3, 67, 70, 72, 73, 74, 301], "importantli": [3, 193, 197], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 67, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 86, 93, 115, 132, 142, 143, 144, 145, 146, 149, 152, 153, 154, 157, 158, 160, 162, 165, 166, 167, 168, 169, 170, 171, 179, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 253, 291, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307], "action_s": 3, "help": [3, 4, 32, 67, 70, 72, 73, 74, 290, 292, 295, 296, 297, 298, 301], "prealloc": [3, 302], "With": [3, 122, 293, 295, 296, 301, 304, 307], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 62, 67, 68, 70, 71, 72, 73, 74, 83, 94, 95, 97, 98, 99, 100, 102, 106, 107, 108, 111, 112, 118, 119, 123, 126, 127, 129, 131, 132, 141, 143, 156, 157, 158, 161, 162, 180, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 249, 250, 251, 252, 266, 268, 271, 273, 275, 280, 283, 287, 290, 295, 296, 297, 298, 300, 301, 302, 304, 306, 307], "instanti": [3, 21, 34, 36, 39, 73, 74, 126, 162, 295, 296, 301, 302, 304, 307], "0s": [3, 123, 298], "stateless": [3, 126, 295, 302, 307], "set_se": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 76, 87, 108, 113, 127, 302, 306, 307], "seed": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 77, 89, 90, 97, 99, 127, 134, 271], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 67, 68, 70, 71, 72, 73, 74, 76, 87, 89, 90, 93, 97, 99, 105, 106, 113, 115, 122, 123, 132, 138, 141, 142, 156, 160, 173, 202, 206, 207, 209, 210, 212, 213, 218, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 265, 267, 269, 295, 296, 298, 300, 302, 303, 304, 306, 307], "determinist": [3, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 144, 153, 166, 173, 182, 190, 196, 197, 200, 207, 291, 295, 296, 298, 302, 307], "preced": [3, 157, 298], "without": [3, 7, 9, 32, 40, 67, 70, 72, 73, 74, 97, 99, 125, 184, 185, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 234, 235, 236, 237, 238, 239, 283, 290, 291, 295, 296, 297, 301, 302, 304, 307], "risk": [3, 112], "overlap": [3, 41], "consecut": [3, 62, 156, 192, 298, 301, 307], "still": [3, 9, 121, 186, 219, 220, 295, 296, 298, 300, 302, 304, 307], "reproduc": [3, 93, 134, 295, 297, 301], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 25, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 67, 70, 72, 73, 74, 98, 116, 121, 122, 124, 138, 176, 177, 178, 193, 200, 207, 212, 218, 220, 221, 225, 268, 295, 296, 297, 298, 301, 302, 304, 306, 307], "max_step": [3, 13, 67, 70, 71, 72, 73, 74, 89, 90, 121, 301, 306, 307], "n": [3, 6, 7, 24, 27, 32, 33, 40, 67, 70, 72, 73, 74, 93, 98, 102, 128, 160, 192, 197, 206, 212, 220, 234, 268, 291, 293, 296, 297, 298, 301, 304, 307], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 71, 106, 156, 160, 170, 171, 179, 180, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 207, 209, 212, 214, 215, 216, 218, 220, 223, 225, 227, 233, 234, 235, 236, 237, 238, 267, 283, 291, 295, 297, 298, 300, 301, 302, 303], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 102, 111, 112, 115, 127, 129, 132, 134, 143, 149, 158, 164, 187, 196, 197, 198, 199, 206, 207, 209, 210, 212, 218, 220, 222, 223, 224, 225, 227, 235, 259, 271, 290, 295, 296, 297, 301, 302, 304, 306, 307], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 67, 70, 72, 73, 74, 85, 88, 93, 129, 132, 156, 194, 206, 207, 209, 210, 212, 218, 220, 222, 223, 224, 225, 227, 230, 295, 298, 304, 306], "mark": [3, 16, 67, 70, 72, 73, 74, 156], "trail": [3, 132], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 67, 68, 70, 72, 73, 74, 84, 88, 94, 112, 123, 124, 132, 141, 153, 156, 157, 192, 208, 212, 215, 219, 220, 222, 223, 227, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 271, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "treat": 3, "figur": [3, 295, 297, 298, 301, 302, 307], "summar": [3, 302], "brief": [3, 297], "popul": [3, 38, 105, 123, 295, 297, 298, 302, 304], "entri": [3, 13, 14, 16, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 67, 70, 72, 73, 74, 93, 95, 97, 99, 102, 105, 108, 111, 113, 115, 121, 123, 131, 132, 141, 161, 187, 194, 195, 207, 225, 235, 236, 237, 238, 291, 295, 297, 298, 301, 302, 303, 304], "deliveri": 3, "step_mdp": [3, 156, 289, 298, 302, 306, 307], "nasium": 3, "recent": [3, 7, 11, 307], "shift": [3, 32, 203, 235, 236, 237, 238, 297], "termin": [3, 7, 32, 40, 52, 198, 295, 296, 297, 302, 306], "trust": [3, 156], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 67, 70, 72, 73, 74, 121, 178, 241, 295, 297, 307], "refer": [3, 7, 8, 9, 21, 32, 40, 67, 70, 72, 73, 74, 127, 132, 142, 152, 153, 160, 161, 166, 167, 172, 173, 189, 206, 213, 214, 215, 216, 222, 235, 240, 248, 295, 297, 301], "stepcount": [3, 13, 67, 70, 72, 73, 74, 295, 296, 297, 298, 301, 306], "chosen": [3, 122, 123, 170, 171, 179, 195, 280, 291], "someth": [3, 32, 67, 70, 72, 73, 74, 290, 296, 297, 302, 307], "els": [3, 166, 291, 293, 295, 296, 297, 298, 301, 302, 303], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 67, 70, 72, 73, 74, 108, 115, 189, 263, 283, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "truncated_kei": [3, 121], "look": [3, 5, 7, 8, 32, 67, 70, 72, 73, 74, 111, 112, 129, 193, 197, 198, 199, 292, 297, 298, 301, 302, 303, 304, 306, 307], "assess": [3, 295], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 289], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 102], "reli": [3, 206, 292, 295, 297, 302, 307], "traj_id": [3, 13, 14, 16, 23, 115, 298, 304, 306], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 67, 70, 72, 73, 74, 123, 127, 141, 198, 199, 290, 295, 298], "context": [3, 5, 8, 32, 67, 68, 70, 72, 73, 74, 88, 123, 128, 162, 163, 187, 231, 232, 235, 236, 237, 238, 240, 248, 267, 291, 292, 295, 296, 297, 301, 302, 303, 304], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 73, 74, 97, 99, 112, 158, 170, 197, 198, 199, 203, 235, 236, 237, 238, 291, 295, 296, 297, 300, 301, 302, 303, 304, 307], "inittrack": [3, 156, 295, 298], "our": [3, 7, 8, 18, 93, 291, 295, 296, 297, 298, 300, 301, 303, 304, 306], "tutori": [3, 295, 296, 298, 299, 300, 302, 303, 304, 305, 307], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 67, 68, 70, 72, 73, 74, 143, 158, 162, 292, 293, 295, 296, 297, 298, 301, 302, 304], "design": [3, 13, 14, 32, 33, 67, 70, 72, 73, 74, 93, 112, 127, 187, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 295, 296, 297, 298, 300, 301, 302, 304, 307], "scratch": [3, 8, 296, 302], "better": [3, 8, 9, 156, 292, 297, 302], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 67, 70, 72, 73, 74, 93, 102, 106, 123, 128, 132, 143, 153, 154, 156, 158, 163, 164, 197, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 287, 291, 295, 296, 297, 298, 302, 304, 307], "intens": [3, 8], "gym3": 3, "envpool": [3, 72], "interfac": [3, 88, 158, 163, 291, 295, 297, 302, 304], "simultan": [3, 20, 73, 74, 302], "often": [3, 8, 217, 271, 295, 296, 302, 304, 307], "competit": [3, 301], "advantag": [3, 8, 154, 206, 208, 219, 222, 224, 235, 236, 237, 238, 239, 240, 242, 244, 246, 248, 249, 251, 292, 293, 295, 296, 297, 298, 301, 302, 307], "scale": [3, 4, 52, 93, 106, 108, 117, 122, 125, 153, 155, 165, 172, 173, 177, 178, 183, 184, 185, 193, 197, 199, 206, 207, 218, 222, 223, 224, 225, 269, 275, 280, 287, 291, 295, 296, 297, 298, 301, 306], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 67, 70, 71, 72, 73, 74, 93, 106, 122, 126, 127, 132, 143, 161, 162, 186, 190, 193, 194, 197, 200, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 233, 271, 283, 293, 295, 296, 297, 298, 301, 302, 303, 304, 307], "own": [3, 13, 14, 17, 22, 32, 67, 70, 72, 73, 74, 296, 297, 301, 302], "As": [3, 4, 67, 70, 72, 73, 74, 115, 197, 235, 291, 295, 296, 297, 298, 301, 302, 303, 304, 306, 307], "inherit": [3, 159, 220, 293, 297, 301], "serialenv": [3, 67, 70, 72, 73, 123, 289, 307], "enjoi": 3, "exact": 3, "Of": [3, 7, 290, 302, 307], "cours": [3, 4, 290, 297, 302, 307], "correspond": [3, 4, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 67, 70, 71, 72, 73, 74, 111, 123, 127, 131, 132, 156, 161, 192, 193, 197, 210, 212, 233, 235, 236, 237, 238, 239, 295, 296, 297, 301, 302, 303], "count": [3, 68, 121, 192, 267, 271, 274, 295, 296, 297, 298, 304, 307], "def": [3, 11, 22, 32, 67, 68, 70, 71, 72, 73, 74, 84, 97, 99, 142, 152, 160, 201, 207, 209, 212, 218, 220, 223, 225, 227, 293, 295, 296, 300, 301, 302, 306, 307], "make_env": [3, 90, 132, 276, 277, 295, 296, 307], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 85, 93, 96, 105, 106, 108, 113, 115, 123, 127, 132, 156, 280, 283, 289, 291, 295, 296, 297, 298, 303, 304, 306, 307], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 67, 68, 70, 72, 73, 74, 93, 105, 106, 108, 113, 115, 123, 156, 230, 244, 245, 246, 247, 249, 250, 251, 252, 291, 296, 298, 302, 304, 306, 307], "from_pixel": [3, 77, 78, 93, 280, 295, 296, 298, 303, 304, 306, 307], "9": [3, 7, 32, 35, 38, 41, 122, 132, 161, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 228, 233, 292, 295, 296, 297, 298, 301, 302, 304, 305], "81": [3, 296, 302, 303], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 92, 93, 94, 96, 98, 106, 107, 108, 111, 115, 122, 123, 125, 126, 127, 129, 131, 132, 134, 142, 143, 145, 146, 148, 149, 153, 155, 156, 158, 160, 161, 162, 163, 164, 165, 168, 172, 173, 176, 177, 178, 180, 182, 186, 187, 189, 190, 192, 195, 196, 199, 200, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 233, 234, 235, 236, 237, 238, 241, 242, 243, 262, 269, 283, 287, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 103, 106, 108, 123, 127, 128, 132, 143, 152, 156, 158, 161, 162, 171, 182, 188, 189, 193, 194, 195, 196, 197, 200, 201, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 226, 227, 233, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280, 295, 296, 297, 298, 300, 302, 304, 306], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 97, 98, 99, 105, 108, 113, 115, 123, 125, 132, 138, 141, 143, 149, 152, 158, 161, 162, 165, 168, 171, 182, 183, 184, 185, 187, 188, 190, 192, 194, 196, 199, 201, 220, 280, 283, 291, 293, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "simpli": [3, 6, 34, 36, 39, 45, 100, 119, 220, 291, 292, 295, 297, 301, 307], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 162, 163, 164, 170, 179, 200, 235, 236, 237, 238, 239, 241, 254, 291, 296, 303, 304], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 108, 125, 296, 304], "d": [3, 35, 53, 54, 58, 197, 306], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 68, 73, 74, 94, 97, 98, 99, 106, 108, 112, 122, 123, 125, 132, 182, 190, 193, 194, 197, 235, 236, 237, 238, 239, 258, 291, 295, 296, 297, 298, 301, 302, 304, 306, 307], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 296, 301, 302], "_reset": [3, 67, 70, 71, 72, 73, 74, 93, 97, 99, 142, 160], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 93, 94, 96, 97, 99, 102, 105, 106, 107, 108, 111, 112, 113, 115, 117, 123, 125, 126, 127, 128, 129, 131, 132, 134, 141, 142, 143, 145, 152, 155, 156, 158, 160, 161, 162, 170, 171, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 206, 207, 208, 209, 210, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 233, 235, 236, 237, 238, 244, 245, 246, 247, 249, 250, 251, 252, 264, 265, 267, 268, 269, 271, 280, 287, 291, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 99, 113, 115, 123, 127, 141, 142, 152, 156, 160, 170, 171, 179, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 199, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 275, 280, 290, 291, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 93, 94, 97, 98, 99, 102, 106, 107, 108, 111, 113, 115, 117, 123, 125, 127, 128, 129, 131, 132, 134, 141, 142, 143, 145, 146, 155, 156, 158, 160, 162, 163, 164, 177, 178, 182, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 233, 235, 236, 237, 238, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 264, 265, 267, 268, 269, 271, 280, 287, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "pixel": [3, 7, 26, 93, 95, 102, 104, 108, 111, 114, 125, 129, 131, 145, 166, 167, 254, 280, 291, 295, 296, 298, 303, 304, 306, 307], "500": [3, 295, 296, 302, 306, 307], "uint8": [3, 47, 125, 296, 303, 304, 306, 307], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 68, 70, 71, 72, 73, 74, 83, 89, 90, 92, 93, 94, 95, 96, 97, 99, 102, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 206, 207, 209, 210, 212, 213, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 236, 237, 238, 239, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 265, 266, 267, 268, 269, 270, 271, 275, 276, 277, 280, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 301, 302, 304, 306, 307], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 99, 113, 115, 123, 132, 141, 142, 152, 156, 160, 170, 171, 179, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 199, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 280, 291, 297, 298, 300, 301, 302, 303, 304, 306, 307], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 132, 156, 192, 193, 197, 295, 296, 300, 301, 307], "launch": [3, 18, 19, 20, 22], "quit": [3, 291, 295, 296, 297, 301, 307], "mani": [3, 4, 38, 67, 206, 208, 212, 219, 222, 223, 227, 291, 295, 296, 297, 301, 302, 304, 307], "start": [3, 4, 5, 13, 21, 45, 68, 141, 266, 295, 296, 301, 302, 304, 307], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 67, 70, 72, 73, 74, 123, 132, 198, 199, 297, 298, 301, 302, 307], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 115, 127, 186, 190, 192, 269, 293, 296, 297, 298, 302, 304, 307], "great": [3, 7, 8, 306], "speedup": [3, 8, 307], "precis": [3, 141, 295, 297], "anoth": [3, 8, 34, 36, 39, 67, 70, 72, 73, 74, 97, 99, 123, 126, 158, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 291, 292, 295, 297, 298, 300, 301, 302, 307], "misspecifi": 3, "caus": [3, 7, 8, 67, 70, 72, 73, 74, 112], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 67, 68, 70, 72, 73, 74, 93, 97, 99, 111, 115, 124, 131, 132, 141, 188, 192, 196, 226, 235, 236, 237, 238, 239, 241, 271, 273, 287, 290, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 101, 115, 127, 134, 186, 190, 192, 295, 297, 301, 304], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 84, 93, 97, 99, 106, 113, 132, 134, 138, 162, 165, 180, 235, 236, 237, 238, 262, 270, 300, 301, 304, 307], "mismatch": [3, 296], "mostli": [3, 17, 292, 304, 307], "purpos": [3, 7, 93, 283, 295, 297, 298, 301, 303, 307], "want": [3, 6, 7, 8, 108, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 291, 295, 296, 297, 298, 301, 302, 303, 304, 306, 307], "subprocess": [3, 68], "addit": [3, 4, 32, 52, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 186, 187, 196, 205, 220, 235, 292, 295, 296, 301, 304], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 72, 304], "multithreadedenv": [3, 289], "underneath": 3, "higher": [3, 4, 200, 295, 296, 297, 304, 307], "restrict": [3, 296, 303, 304, 307], "flexibl": [3, 9, 72, 228, 292, 293, 304, 307], "cover": [3, 290, 297, 302, 306], "popular": [3, 291, 298, 301], "atari": [3, 4, 93, 307], "classic": [3, 71, 296], "benchmark_batched_env": 3, "py": [3, 84, 170, 179, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307], "pipelin": [3, 7, 291, 297], "seamlessli": [3, 302], "modif": [3, 5, 26, 28, 32, 67, 70, 72, 73, 74, 102, 220, 297, 302], "infrastructur": [3, 301], "view": [3, 8, 27, 32, 33, 67, 70, 72, 73, 74, 152, 158, 302, 304, 306, 307], "core": [3, 8, 280, 293, 298, 306], "decis": [3, 144, 169, 187, 211, 221, 298, 301, 304], "act": [3, 4, 162, 207, 209, 218, 223, 225, 227, 298, 301], "world": [3, 5, 71, 202, 215, 301, 302, 307], "paradigm": [3, 17, 301], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 67, 70, 72, 73, 74, 98, 107, 116, 127, 134, 143, 156, 158, 162, 189, 193, 197, 206, 208, 209, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 230, 235, 267, 271, 292, 295, 296, 298, 301, 302, 307], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 67, 70, 71, 72, 73, 74, 122, 127, 132, 220, 274, 291, 293, 295, 296, 297, 298, 301, 302, 304, 307], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 73, 153, 162, 271, 285, 286, 295, 296, 297, 298, 301, 304, 306], "accommod": [3, 13, 14, 16, 17], "thank": [3, 295], "carrier": [3, 297, 298, 304], "particular": [3, 32, 45, 52, 67, 70, 72, 73, 74, 127, 292, 293, 296, 298, 300, 301, 304], "carri": [3, 21, 45, 67, 70, 72, 73, 74, 123, 220, 296, 298, 301, 302, 304], "thu": [3, 219, 301], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 291, 296, 297, 301], "hand": [3, 7, 21, 301, 302], "kept": [3, 13, 14, 16, 17, 62, 73, 74, 98, 126, 134, 141, 155, 177, 178], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 67, 70, 72, 73, 74, 123, 125, 127, 134, 156, 158, 162, 193, 196, 197, 199, 200, 205, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 235, 236, 237, 238, 262, 273, 285, 286, 287, 291, 293, 295, 296, 297, 298, 301, 302, 304, 307], "let": [3, 6, 7, 32, 43, 67, 70, 72, 73, 74, 93, 156, 162, 188, 267, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "understand": [3, 8, 295, 296, 301], "go": [3, 7, 112, 115, 187, 241, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "vma": [3, 89, 90, 301], "robot": [3, 5, 7, 111, 129, 131, 301], "what": [3, 8, 35, 44, 67, 70, 72, 73, 74, 123, 141, 194, 290, 291, 292, 296, 297, 298, 301, 302, 303, 304, 306, 307], "vmasenv": [3, 289, 301], "balanc": [3, 295, 296, 307], "num_env": [3, 21, 89, 90, 301], "n_agent": [3, 89, 90, 162, 170, 179, 233, 301], "5": [3, 24, 26, 28, 35, 38, 41, 42, 68, 72, 87, 89, 90, 115, 142, 143, 152, 153, 155, 157, 158, 160, 162, 166, 171, 177, 178, 187, 188, 194, 200, 219, 222, 224, 227, 291, 295, 296, 301, 302, 304, 306, 307], "td": [3, 15, 26, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 94, 97, 98, 99, 105, 106, 108, 115, 122, 123, 125, 127, 132, 141, 142, 152, 156, 159, 160, 170, 171, 179, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 199, 201, 233, 236, 237, 238, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 262, 270, 280, 291, 292, 295, 298, 301, 302, 306, 307], "info": [3, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 89, 90, 129, 133, 301, 304], "ground_rew": 3, "pos_rew": [3, 301], "16": [3, 32, 67, 70, 72, 73, 74, 93, 295, 296, 297, 298, 302, 304], "root": [3, 26, 28, 93, 141, 155, 177, 178, 298, 301, 302, 304, 307], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 102, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 296, 302], "vari": [3, 112, 301], "creation": [3, 73, 74, 295, 307], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 67, 70, 72, 73, 74, 111, 115, 118, 127, 131, 165, 171, 189, 193, 195, 196, 197, 235, 236, 237, 238, 262, 274, 295, 296, 297, 298, 301, 302, 304, 306, 307], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 68, 115, 125, 132, 219, 227, 292, 293, 295, 297, 298, 301, 302, 304, 306], "append": [3, 8, 35, 38, 41, 42, 52, 53, 68, 115, 123, 156, 188, 194, 295, 296, 297, 298, 301, 302, 303, 304, 306], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 67, 70, 72, 73, 74, 210, 212, 233, 289, 297, 301, 307], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 67, 70, 72, 73, 74, 84, 132, 290, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "simpl": [3, 9, 32, 33, 67, 70, 72, 73, 74, 145, 197, 210, 220, 224, 235, 291, 292, 295, 296, 297, 301, 307], "composit": [3, 26, 28, 67, 70, 72, 73, 74, 297, 302], "prefix": [3, 23, 32, 45, 67, 70, 72, 73, 74, 127, 220, 253, 298, 307], "exactli": [3, 32, 67, 70, 72, 73, 74, 85, 127, 295, 298, 301], "action_kei": [3, 15, 67, 70, 72, 73, 74, 98, 141, 142, 159, 160, 186, 190, 192, 301], "reward_kei": [3, 67, 70, 72, 73, 74, 141, 142, 160, 265, 269, 301], "done_kei": [3, 67, 70, 72, 73, 74, 141, 301], "automat": [3, 5, 67, 70, 72, 73, 74, 97, 99, 108, 182, 193, 291, 295, 297, 301, 302, 304, 306], "right": [3, 6, 7, 40, 157, 296, 297, 301, 302, 307], "sure": [3, 4, 7, 53, 63, 115, 188, 287, 291, 295, 297, 298, 301, 302, 304, 306, 307], "set_kei": [3, 206, 207, 208, 210, 212, 213, 218, 219, 220, 222, 223, 224, 225, 233, 239, 301], "awai": [3, 297, 301], "eas": [3, 301], "access": [3, 7, 8, 32, 35, 53, 67, 70, 72, 73, 74, 111, 129, 287, 290, 295, 301, 302, 304], "leaf": [3, 26, 28, 67, 70, 72, 73, 74, 197, 301], "abov": [3, 7, 32, 67, 70, 72, 73, 74, 155, 177, 178, 205, 292, 293, 295, 297, 301, 302, 307], "would": [3, 32, 40, 67, 70, 72, 73, 74, 156, 158, 293, 296, 297, 298, 302, 304, 307], "full": [3, 67, 70, 72, 73, 74, 189, 262, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "raw": [3, 4, 40, 155, 177, 178, 296, 302], "logic": 3, "torchvis": [3, 111, 131, 306, 307], "transformedenv": [3, 13, 67, 68, 70, 72, 73, 74, 93, 96, 97, 99, 102, 105, 106, 107, 108, 113, 115, 123, 126, 132, 156, 280, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "primit": [3, 4, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227], "built": [3, 5, 7, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 228, 233, 281, 283, 284, 287, 295, 296, 297, 298, 304, 307], "base_env": [3, 97, 98, 99, 106, 123, 295, 296, 297, 303, 306, 307], "totensorimag": [3, 93, 296, 298, 304, 306, 307], "in_kei": [3, 13, 14, 16, 17, 21, 71, 92, 93, 94, 95, 97, 98, 99, 102, 104, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118, 122, 124, 125, 126, 127, 129, 131, 132, 142, 151, 156, 160, 170, 179, 180, 182, 183, 184, 185, 187, 188, 193, 194, 196, 197, 199, 200, 201, 206, 207, 208, 209, 210, 212, 218, 219, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 253, 254, 280, 283, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "resiz": [3, 93, 296, 298, 304, 307], "64": [3, 93, 145, 146, 154, 156, 162, 170, 233, 295, 296, 297, 298, 300, 302, 303, 304, 306, 307], "now": [3, 7, 35, 93, 162, 295, 296, 297, 298, 300, 301, 303, 304, 307], "appar": [3, 264], "bring": [3, 297, 307], "signific": [3, 5, 8, 297, 307], "kind": [3, 38, 44, 141, 304], "consult": 3, "interest": [3, 193, 197, 291, 296, 297, 301, 302, 307], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 71, 92, 93, 94, 95, 102, 104, 106, 108, 109, 111, 113, 114, 115, 116, 118, 122, 124, 125, 126, 129, 131, 142, 151, 152, 156, 160, 170, 171, 179, 180, 182, 183, 184, 185, 187, 189, 193, 194, 195, 196, 197, 199, 200, 201, 206, 207, 208, 212, 218, 219, 222, 223, 224, 225, 233, 235, 236, 237, 238, 267, 283, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "easi": [3, 5, 53, 186, 190, 192, 291, 292, 295, 296, 297, 301, 303, 304, 307], "graph": [3, 4, 8, 231, 232, 295, 302], "inv": [3, 98, 115, 302], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 106, 110, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 132, 177, 188, 235, 266, 293, 295, 296, 297, 302, 306, 307], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 127, 182, 188, 196, 198, 199, 201, 206, 207, 209, 212, 218, 222, 223, 224, 225, 227, 296, 301], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 96, 98, 143, 199, 307], "taken": [3, 67, 70, 72, 73, 74, 161, 292, 295, 297, 298, 301, 302], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 93, 97, 99, 108, 115, 204, 218, 302], "in_keys_inv": [3, 97, 99, 108, 109, 113, 115, 126, 295, 300, 302, 307], "append_transform": [3, 35, 38, 41, 42, 52, 53, 111, 123, 129, 295, 298, 302, 306, 307], "doubletofloat": [3, 280, 295, 297, 300], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 99, 108, 113, 115, 123, 125, 138, 141, 142, 152, 156, 160, 170, 171, 179, 182, 183, 184, 185, 187, 188, 192, 193, 194, 195, 196, 199, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 280, 291, 297, 298, 300, 301, 302, 303, 304, 306, 307], "float64": [3, 32, 67, 70, 72, 73, 74, 89, 96, 97, 99, 111, 123, 126, 127, 129, 131, 196, 300, 307], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 97, 99, 127, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 293, 295, 297, 304], "manipul": [3, 4, 8, 111, 129, 307], "keep": [3, 4, 7, 8, 14, 42, 62, 108, 111, 131, 132, 141, 192, 264, 271, 295, 296, 297, 298, 301, 302, 304, 306, 307], "mind": [3, 301], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 98, 141, 291, 304], "unexpect": [3, 32, 67, 70, 72, 73, 74, 127, 307], "behviour": 3, "fortun": [3, 298], "eras": [3, 67, 70, 72, 73, 74], "ident": [3, 13, 14, 16, 32, 73, 74, 162, 235, 236, 237, 238, 285, 286, 296, 301], "alreadi": [3, 8, 11, 32, 45, 67, 70, 72, 73, 74, 123, 197, 235, 236, 237, 238, 295, 297, 301], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 67, 68, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 132, 187, 196, 268, 273, 274, 296, 297, 301, 302, 304], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 67, 70, 72, 73, 74, 96, 97, 99, 106, 113, 126, 127, 132, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 292, 295, 297, 298, 301, 302, 303, 304, 307], "happen": [3, 67, 70, 72, 73, 74, 186, 296, 303, 307], "catfram": [3, 296], "hold": [3, 231, 232, 302, 304], "notic": [3, 93, 297, 302], "parenthood": 3, "reason": [3, 4, 8, 32, 67, 70, 72, 73, 74, 111, 129, 156, 292, 295, 296, 297, 302, 304], "henc": [3, 35, 112, 291, 295, 297, 301, 302], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 302], "log": [3, 4, 8, 40, 150, 151, 152, 161, 168, 178, 188, 189, 193, 197, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 264, 265, 267, 271, 283, 291, 292, 293, 295, 296, 297, 301, 302, 306], "mission": 3, "irrespect": [3, 196, 197], "dmcontrol": [3, 295], "jumanji": [3, 86, 87], "natur": [3, 295, 298], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 67, 70, 72, 73, 74, 102, 108, 112, 124, 143, 156, 157, 158, 161, 166, 174, 180, 186, 187, 190, 197, 296, 297, 298, 301, 302, 303, 304, 306, 307], "special": [3, 291, 295, 298, 307], "statu": 3, "framework": [3, 4, 9, 22, 71, 306, 307], "Its": [3, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 132, 196, 239], "success": [3, 93, 126, 296, 302, 304, 306], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 67, 70, 72, 73, 74, 106, 126, 186, 190, 192, 295, 296, 297, 298, 300, 301, 302, 304, 307], "foundat": [3, 5, 297, 301], "inspir": [3, 302], "howev": [3, 5, 7, 32, 67, 70, 72, 73, 74, 93, 118, 121, 122, 127, 291, 295, 296, 297, 298, 304, 307], "gone": [3, 4, 5], "sometim": [3, 298, 307], "hard": [3, 7, 217, 296, 307], "adopt": [3, 5, 295, 307], "prefer": [3, 17, 20, 35, 38, 41, 42, 112, 119, 222, 268, 291, 297, 301, 304], "moreov": 3, "maintain": [3, 5, 9, 302], "gymnasium": [3, 5, 11, 81, 82, 83, 84, 296, 297, 302, 306], "both": [3, 7, 32, 67, 68, 70, 72, 73, 74, 93, 113, 127, 143, 156, 158, 162, 183, 184, 185, 189, 195, 206, 208, 209, 212, 218, 219, 220, 222, 223, 224, 225, 227, 267, 291, 295, 297, 301, 302, 303, 304, 307], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 296, 297, 298, 301, 302, 304, 307], "decor": [3, 8, 11, 84, 220, 235, 236, 237, 238], "set_gym_backend": [3, 83, 289], "relev": [3, 40, 235, 236, 237, 238, 239, 302], "gym_backend": [3, 84, 289], "env1": [3, 300], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 67, 70, 72, 73, 74, 84, 111, 131, 160, 271, 293, 296], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 84], "__init__": [3, 7, 71, 84, 97, 99, 142, 152, 160, 201, 207, 209, 212, 218, 223, 225, 227, 293, 302, 307], "env2": [3, 300], "_env": [3, 6, 307], "classic_control": 3, "pendulumenv": [3, 302], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 297], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 67, 70, 72, 73, 74, 93, 94, 121, 123, 127, 143, 158, 161, 162, 192, 194, 195, 203, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 275, 287, 290, 293, 297, 298, 302, 304, 307], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 85, 112, 122, 123, 127, 135, 136, 141, 153, 157, 173, 192, 213, 257, 293, 295, 296, 297, 298, 301, 302, 306, 307], "tell": [3, 4, 7, 295, 298, 301], "mo_gymnasium": [3, 82, 83], "handi": 3, "side": [3, 4, 307], "v0": [3, 70, 79, 80, 81, 82, 86, 87, 96, 127, 132, 283], "26": [3, 296, 302, 303, 304], "fun": [3, 11, 84, 297, 301], "reveal": 4, "bug": [4, 306], "curv": 4, "won": [4, 32, 67, 68, 70, 72, 73, 74, 111, 131, 271, 287, 296, 297], "exploit": 4, "video": [4, 9, 254, 267, 287, 301], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 67, 70, 72, 73, 74, 112, 194, 296, 297, 298, 301, 302], "cv": 4, "flip": 4, "imag": [4, 7, 77, 95, 111, 125, 131, 158, 295, 296, 301, 303, 307], "correspondingli": 4, "prescript": 4, "tune": [4, 106, 301, 303], "coeffici": [4, 40, 106, 301], "bonu": [4, 206, 208, 219, 222], "beta": [4, 35, 41, 58, 218, 219, 295, 296, 304, 306], "altern": [4, 27, 72, 149, 161, 205, 220, 295, 297, 301], "reduc": [4, 6, 27, 122, 296, 297], "downstream": [4, 295], "formul": [4, 301], "ob": [4, 8, 26, 28, 97, 99, 108, 125, 138, 141, 162, 194, 201, 207, 209, 212, 218, 223, 225, 227, 235, 236, 237, 238, 296, 300, 302, 306, 307], "rate": [4, 132, 234, 296, 297, 301], "gradient": [4, 32, 67, 70, 72, 73, 74, 127, 155, 164, 177, 178, 206, 208, 209, 212, 218, 219, 220, 222, 223, 224, 225, 227, 234, 235, 236, 237, 238, 271, 295, 297, 301, 302], "norm": [4, 8, 271, 295, 296, 297, 301, 302], "easier": [4, 291, 295], "behavior": [4, 32, 67, 70, 72, 73, 74, 127, 218, 297, 301], "local": [4, 7, 10, 16, 21, 32, 67, 70, 72, 73, 74, 127, 162, 170, 179, 233, 259, 301], "optima": 4, "sens": [4, 302], "product": [4, 9, 285, 286], "sum": [4, 21, 31, 33, 70, 161, 179, 215, 234, 241, 292, 295, 296, 297, 298, 301, 302, 307], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 118, 132, 192, 259, 264, 296, 298, 301, 302, 304], "stat": [4, 108, 275, 287, 296, 297], "w": [4, 93, 95, 114, 125, 192, 254, 296, 298, 304], "r": [4, 32, 108, 197, 205, 234, 291, 296, 302, 307], "yield": [4, 16, 21, 32, 67, 70, 72, 73, 74, 220, 295], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 67, 70, 72, 73, 74, 127, 209, 210, 297, 301, 304], "futur": [4, 32, 67, 70, 72, 73, 74, 111, 127, 131, 158, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 290, 306], "past": [4, 296, 304], "becom": [4, 21, 301, 307], "spars": [4, 298], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 67, 70, 72, 73, 74, 118, 127, 163, 164, 192, 206, 208, 210, 213, 219, 222, 233, 296, 298, 304, 307], "intermedi": [4, 156, 189, 295, 303], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 295], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 67, 70, 72, 73, 74, 158, 297, 301], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 67, 70, 72, 73, 74, 93, 94, 97, 98, 99, 108, 115, 138, 141, 142, 156, 157, 161, 162, 170, 179, 190, 192, 195, 203, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 241, 298, 306], "subtask": 4, "hierarch": [4, 306], "individu": [4, 18, 19, 20, 21, 32, 45, 67, 70, 72, 73, 74, 295, 301], "select": [4, 15, 35, 38, 41, 42, 52, 53, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 110, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 129, 130, 132, 142, 156, 188, 194, 270, 295, 304], "fall": 4, "section": [4, 296, 301], "explicit": [4, 11, 45, 157, 304], "mechan": [4, 32, 67, 70, 72, 73, 74, 127, 296, 302], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 67, 70, 72, 73, 74, 218, 297, 301], "addition": 4, "timestep": [4, 40, 115, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 301], "realli": 4, "larg": [4, 27, 97, 99, 129, 296, 297, 301, 304], "target": [4, 8, 21, 32, 67, 68, 70, 72, 73, 74, 122, 126, 196, 197, 206, 207, 208, 209, 210, 212, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 236, 237, 238, 239, 274, 282, 283, 292, 293, 298, 302], "huge": [4, 162, 298], "std": [4, 108, 132, 165, 169, 186, 295, 307], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 298, 299, 300, 303, 304, 305], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 67, 70, 72, 73, 74, 108, 111, 123, 126, 127, 129, 133, 142, 160, 163, 164, 186, 190, 192, 206, 207, 209, 210, 212, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 227, 233, 280, 287, 296, 298, 302, 307], "estim": [4, 106, 183, 184, 185, 206, 207, 208, 209, 210, 212, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 292, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "encount": [4, 73, 74, 290, 296, 302], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 295, 297, 301, 307], "bonus": 4, "denser": 4, "prior": [4, 173, 215, 301], "freshli": 4, "proper": [4, 6, 7, 235, 236, 237, 238, 296, 297, 301, 304], "doesn": [4, 11, 72, 97, 99], "drop": [4, 62, 141], "meant": [4, 71], "encourag": [4, 295, 296, 304], "measur": [4, 297], "novelti": 4, "revisit": 4, "previous": [4, 297, 307], "diminish": 4, "decreas": 4, "ideal": [4, 108, 302], "down": [4, 13, 14, 16, 17, 298], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 296, 297, 298, 301, 302, 306, 307], "distil": 4, "add": [4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 67, 70, 72, 73, 74, 93, 106, 156, 163, 191, 206, 266, 297, 298, 301, 302, 304, 306], "nois": [4, 133, 164, 181, 192, 223, 227, 267, 287, 295], "exploratori": [4, 206, 208, 219, 222], "could": [4, 6, 296, 297, 301, 303, 307], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 207, 209, 210, 212, 213, 218, 223, 225, 227, 233, 293, 295, 296, 304], "schedul": [4, 7, 40, 267, 297, 302], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 111, 131, 207, 209, 212, 223, 225, 227, 295, 296, 301, 304, 307], "divers": [4, 73, 74], "bootstrap": [4, 213, 236, 242, 243, 295, 298], "noisi": [4, 163, 164, 181, 291], "unstabl": [4, 155, 177, 178], "inher": 4, "stochast": [4, 106, 153, 164, 166, 173, 207, 211, 212, 218, 221, 223, 225, 291, 297, 301], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 156, 160, 183, 184, 185, 220, 223, 293, 296], "pomdp": [4, 304], "previou": [4, 10, 32, 40, 41, 123, 173, 187, 297, 298, 302, 307], "loos": [4, 291, 296, 297], "nonexist": 4, "architectur": [4, 149, 301], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 92, 93, 94, 95, 97, 98, 99, 102, 104, 108, 109, 112, 113, 114, 115, 116, 117, 118, 122, 124, 125, 126, 132, 143, 150, 152, 158, 161, 162, 168, 171, 175, 187, 198, 199, 211, 253, 254, 266, 267, 268, 270, 271, 280, 291, 295, 297, 298, 300, 301, 307], "rather": [4, 113, 295, 296, 297, 301], "lstm": [4, 156, 157, 165], "explicitli": [4, 296, 298, 301, 304], "rel": [4, 123, 150, 176, 295, 296, 301, 304], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 93, 296, 297, 304, 306, 307], "compens": 4, "descent": [4, 164], "1000": [4, 38, 67, 70, 72, 73, 74, 93, 132, 192, 193, 197, 217, 295, 296, 297, 298, 303, 304], "know": [4, 9, 35, 38, 41, 42, 186, 190, 223, 267, 295, 296, 297, 298, 301, 304], "minimum": [4, 25, 67, 70, 72, 73, 74, 116, 138, 153, 165, 176, 177, 178, 193, 200, 203, 205, 207, 212, 220, 221, 225, 262, 295, 297, 301, 302, 306, 307], "manual": [4, 18, 20, 21, 295, 298, 304], "deviat": [4, 108, 132, 142, 153, 160, 163, 164, 186, 222, 227, 295, 301], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 67, 70, 71, 72, 73, 74, 97, 98, 99, 122, 127, 130, 132, 142, 156, 160, 186, 190, 192, 193, 194, 195, 196, 197, 206, 207, 209, 210, 212, 213, 214, 217, 218, 220, 222, 223, 224, 225, 226, 227, 233, 235, 236, 237, 238, 239, 267, 271, 273, 276, 277, 282, 283, 293, 296, 297, 298, 301, 302, 304, 306, 307], "stabil": [4, 103], "stage": [4, 295, 302], "never": 4, "prevent": [4, 26, 28, 155, 177, 178, 219, 222, 269, 304], "solv": [4, 9, 10, 290, 295, 296, 297, 301, 302, 304], "entir": [4, 297, 302, 304], "submit": [4, 290, 306], "suffici": [4, 295], "recommend": [4, 7, 301], "system": [4, 5, 297, 301, 302], "adequ": [4, 134, 297, 301], "infeas": 4, "allevi": [4, 291], "prune": 4, "develop": [4, 7, 295, 306], "filter": [4, 45, 206, 207, 209, 212, 218, 222, 223, 225], "fire": [4, 32, 67, 70, 72, 73, 74], "certain": [4, 18, 20, 21, 32, 45, 67, 70, 72, 73, 74, 84, 103, 121, 127, 219, 291, 295, 296, 297, 301, 307], "illeg": 4, "move": [4, 21, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 132, 141, 158, 196, 269, 295, 296, 298, 306, 307], "chess": 4, "combin": [4, 126, 296, 304], "grasp": 4, "releas": [4, 7, 10, 32, 67, 70, 72, 73, 74, 127, 306], "top": [4, 142, 160], "p": [4, 68], "wherein": 4, "cumul": [4, 118, 122, 142, 241, 297], "probabl": [4, 8, 40, 150, 152, 156, 158, 161, 168, 178, 193, 197, 291, 296, 306], "q": [4, 9, 145, 146, 147, 148, 151, 152, 154, 170, 171, 179, 185, 189, 194, 195, 207, 209, 210, 212, 213, 217, 218, 223, 225, 227, 233, 280, 289, 295], "flow": [4, 295, 297, 301, 302, 304], "reparameter": [4, 150, 168], "soft": [4, 217, 225, 226], "critic": [4, 8, 183, 191, 206, 208, 209, 212, 218, 219, 222, 223, 224, 225, 227, 295, 297], "clip": [4, 40, 116, 208, 227, 271, 297, 301, 302], "oppos": [4, 45], "incorrect": 4, "thought": [4, 67, 70, 72, 73, 74], "bound": [4, 17, 21, 25, 26, 32, 67, 70, 72, 73, 74, 132, 172, 173, 182, 188, 189, 192, 193, 194, 195, 196, 197, 200, 227, 291, 295, 296, 297, 307], "region": 4, "squash": [4, 298, 306], "tanh": [4, 143, 155, 158, 162, 176, 177, 178, 200, 297, 301, 302, 303, 306], "correct": [4, 106, 122, 274, 297, 298], "prob": [4, 161, 168, 297, 301], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 98, 106, 111, 127, 131, 193, 196, 197, 217, 220, 222, 280, 295, 300, 302, 307], "real": [5, 197, 292, 298, 302], "histor": 5, "wa": [5, 7, 67, 70, 72, 73, 74, 127, 217, 226, 292, 296, 297, 300, 304, 306], "ceas": 5, "fork": 5, "farama": [5, 81, 82, 297, 302], "detail": [5, 6, 7, 32, 67, 70, 72, 73, 74, 125, 127, 152, 189, 206, 213, 222, 290, 296, 300, 304], "usag": [5, 7, 52, 93, 156, 207, 218, 225, 228, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "known": [5, 7, 8, 242, 243, 295, 296], "bc": [5, 306], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 67, 70, 72, 73, 74, 93, 115, 132, 296, 304, 306], "face": [5, 8, 9, 307], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 134, 182, 188, 189, 193, 194, 195, 196, 197, 297, 301], "13": [5, 10, 11, 295, 296, 297, 302, 303, 304, 305, 306], "construct": [5, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 97, 99, 134, 156, 173, 197, 271, 291, 296, 297, 298, 302, 304, 307], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 70, 72, 73, 74, 134, 156, 180, 183, 184, 185, 186, 190, 192, 194, 202, 233, 291, 295, 296, 297, 298, 301, 307], "best": [5, 9, 156, 301, 304, 306], "gymwrapp": [5, 70, 289, 297, 306], "feel": [5, 290, 306], "free": [5, 7, 97, 99, 206, 215, 222, 293, 297, 301, 306], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 98, 295, 296, 297, 298, 301, 304], "prepar": [6, 297], "conda": [6, 7, 290], "assum": [6, 26, 33, 40, 41, 42, 52, 70, 73, 74, 95, 102, 111, 112, 118, 123, 129, 131, 138, 156, 157, 180, 200, 210, 213, 225, 233, 244, 245, 246, 247, 249, 250, 251, 252, 254, 295, 297, 298, 300, 302], "7": [6, 10, 27, 33, 35, 38, 41, 142, 143, 157, 158, 160, 241, 295, 296, 301, 302, 304, 306], "cmake": 6, "14": [6, 11, 108, 295, 296, 301, 302, 303, 304], "activ": [6, 7, 9, 143, 149, 153, 158, 162, 208, 219, 222, 291, 306], "sim": 6, "bullet": 6, "physic": [6, 7, 293, 295, 301, 302], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 290], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 298], "y": [6, 7, 88, 157, 180, 295, 297, 301], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 67, 70, 72, 73, 74, 120, 220, 301, 307], "command": [6, 7, 10, 297, 301, 302, 307], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 289], "_has_habitat": 6, "available_env": [6, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 307], "startswith": [6, 292, 295], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 78, 84, 287, 293, 295, 304], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 68, 220, 295], "env_nam": [6, 72, 75, 77, 79, 81, 86, 295, 297, 307], "llvmlite": 6, "config": [6, 7, 111, 131, 144, 149, 169, 275, 276, 277, 280, 281, 284], "var": [6, 7, 32, 67, 70, 72, 73, 74, 127, 220], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 76, 143, 145, 146, 154, 158, 183, 184, 185, 193, 196, 199, 218, 295, 296, 301, 302, 303, 304, 306], "bind": 6, "deactiv": [6, 7, 188], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 67, 70, 72, 73, 74, 127, 220, 304], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 296], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 300, 302, 307], "joint": [7, 296], "dynam": [7, 218, 297, 302], "contact": [7, 37], "engin": [7, 302], "biomechan": 7, "graphic": 7, "anim": [7, 301], "area": 7, "demand": [7, 307], "fast": [7, 9, 76, 113, 223, 295, 296, 297], "accur": [7, 52, 296, 302, 304], "articul": 7, "acquir": [7, 297], "deepmind": [7, 8, 9, 77, 78, 297], "whomev": 7, "licenc": 7, "incorpor": [7, 186, 190, 192, 298, 302], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 74, 107, 126, 254, 291, 292, 295, 296, 297, 301, 304, 307], "legaci": 7, "pro": [7, 290], "tip": [7, 290], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 307], "sudo": [7, 290], "enabl": [7, 8, 52, 156, 192, 267, 297, 301, 302, 304], "apt": [7, 301], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 296, 298], "fact": [7, 8, 295, 297, 301, 302, 303, 304, 307], "workflow": [7, 183, 184, 185], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 67, 70, 72, 73, 74, 111, 129, 131, 298, 307], "binari": [7, 24, 27, 33, 92, 152, 171, 188, 189, 194, 195, 210, 212, 233], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 254, 259, 287], "earlier": [7, 295, 297, 298, 301, 304], "roboti": 7, "download": [7, 10, 111, 131, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307], "html": [7, 72], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 67, 70, 72, 73, 74, 111, 122, 131, 142, 170, 268, 295, 297, 301], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54, 303], "bin": [7, 152, 189, 291], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 148, 193, 197, 295, 297, 304], "nvidia": 7, "older": [7, 11], "hack": [7, 295], "line": [7, 32, 67, 70, 72, 73, 74, 296, 301], "adatp": 7, "script": [7, 134, 280, 283, 287, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "unnot": [7, 112], "until": [7, 21, 297, 298, 301], "complet": [7, 9, 62, 70, 93, 290, 292, 295, 297, 300], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 296, 304], "troubleshoot": 7, "gl": 7, "h": [7, 93, 95, 114, 125, 156, 160, 254, 296, 298, 304], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 89, 90, 93, 122, 125, 142, 144, 149, 157, 160, 161, 169, 180, 190, 192, 200, 207, 210, 212, 222, 223, 224, 227, 233, 235, 236, 237, 238, 241, 262, 293, 295, 296, 297, 298, 301, 302, 303, 304, 306, 307], "fatal": 7, "No": 7, "directori": [7, 45, 55, 259, 293], "devel": 7, "ubuntu": 7, "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 296, 298, 302, 303, 304], "disappear": [7, 296, 298, 300], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 87, 108, 143, 150, 157, 158, 162, 166, 176, 201, 280, 295, 296, 298, 301, 302, 303, 304, 306, 307], "glibcxx_3": 7, "29": [7, 295, 296, 302, 304], "compil": [7, 32, 67, 70, 72, 73, 74], "libosmesa": 7, "libgcc": 7, "Then": [7, 297, 300], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 67, 70, 72, 73, 74, 127, 307], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 296, 298, 302, 303], "114": [7, 302, 304], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 302], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 134], "opengl": [7, 301], "global": [7, 32, 67, 70, 72, 73, 74, 170, 179, 193, 197, 233, 293, 295, 301], "cuda_visible_devic": 7, "id": [7, 23, 40, 192, 223, 257, 280], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 297, 302, 304], "displai": [7, 271, 293, 295, 296, 301, 302], "correctli": [7, 32, 67, 70, 72, 73, 74], "lgl": 7, "libegl": 7, "x11": [7, 301], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 70, 141, 186, 190, 192, 222, 271, 293, 295, 296, 300, 304], "sketch": [8, 293], "_": [8, 68, 94, 97, 98, 99, 106, 108, 113, 125, 132, 182, 196, 201, 205, 206, 207, 209, 212, 218, 222, 223, 225, 227, 235, 236, 237, 238, 295, 296, 297, 298, 301, 302, 304, 306], "n_training_step": 8, "datapoint": [8, 45, 304], "onlin": [8, 13, 17, 93, 149, 169, 206, 211, 221, 222, 262, 287, 297, 298, 301, 304], "n_data_per_train": 8, "no_grad": [8, 32, 67, 70, 72, 73, 74, 106, 235, 236, 237, 238, 297, 298, 301], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 268, 283, 295, 296, 297, 301, 304], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 115, 268, 293, 295, 296, 297, 298, 301, 303, 304, 306], "loss_fn": [8, 298, 306], "backward": [8, 32, 67, 70, 72, 73, 74, 132, 206, 207, 209, 212, 218, 222, 223, 224, 225, 227, 295, 297, 298, 301, 302], "zero_grad": [8, 32, 67, 70, 72, 73, 74, 293, 295, 297, 298, 301, 302], "backpropag": [8, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 301, 302], "differenti": [8, 45, 106, 235, 236, 237, 238, 298, 301, 302], "denomin": 8, "artifact": 8, "numer": [8, 38, 132, 155, 177, 178, 182, 188, 189, 193, 194, 195, 196, 197, 269, 297, 304, 307], "misconcept": 8, "save": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 253, 271, 293, 301], "freed": 8, "appear": [8, 33, 302, 304], "compuat": 8, "twice": 8, "fix": [8, 123, 207, 221, 225, 296, 302, 307], "retain_graph": 8, "discuss": [8, 9, 301], "inplac": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 127, 295], "accumul": 8, "onto": [8, 33, 138, 182, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 298, 302], "exclud": [8, 52, 93, 100, 141, 170, 301, 304], "forward": [8, 32, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 129, 130, 132, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 165, 166, 167, 169, 170, 172, 173, 175, 179, 180, 186, 187, 189, 190, 192, 195, 196, 197, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 292, 302, 306], "submodul": [8, 32, 67, 70, 72, 73, 74, 83, 220], "param": [8, 32, 40, 67, 70, 71, 72, 73, 74, 96, 106, 113, 126, 150, 152, 161, 176, 187, 193, 196, 199, 201, 220, 229, 232, 235, 236, 237, 238, 239, 295, 301, 302, 303, 306], "grad": [8, 32, 67, 70, 72, 73, 74, 295, 297], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 165, 170, 196], "strictli": [8, 32, 67, 70, 72, 73, 74, 127, 295, 297], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 93, 102, 112, 128, 214, 292, 297, 301, 302], "ask": [8, 295, 297, 298, 301, 303, 307], "much": [8, 35, 41, 58, 219, 222, 297, 301, 302, 304, 307], "render": [8, 267, 295, 296, 297], "upon": [8, 302], "factor": [8, 32, 115, 155, 164, 177, 178, 186, 190, 192, 207, 213, 214, 216, 226, 241, 295, 296, 301, 304, 307], "fit": [8, 11, 108, 292, 293, 295], "everi": [8, 17, 26, 28, 32, 33, 63, 67, 70, 72, 73, 74, 122, 132, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 271, 293, 295, 296, 297, 298, 301, 302], "bottlneck": 8, "affect": [8, 32, 67, 70, 72, 73, 74, 126, 127, 134, 235, 236, 237, 238], "brax": [8, 75, 76, 113, 307], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 67, 70, 72, 73, 74, 101, 127, 161, 209, 210, 262, 292, 293, 295, 297, 298, 301, 302, 304], "underli": [8, 220, 302], "tedeiou": 8, "priorit": [8, 35, 41, 58, 207, 209, 210, 212, 218, 223, 225, 227, 295, 296], "amount": [8, 192, 296, 304], "isn": [8, 34, 36, 39, 188, 196, 301], "contigu": [8, 67, 70, 72, 73, 74, 138, 297, 301, 302, 304, 306, 307], "costli": [8, 302], "concaten": [8, 21, 30, 31, 93, 94, 108, 126, 158, 199, 295, 296, 301, 302, 304, 307], "constitut": [8, 296, 301, 302], "plain": 8, "profil": 8, "fulli": [8, 32, 67, 70, 72, 73, 74, 296, 302, 304], "frequent": [8, 304], "program": [8, 218, 307], "functorch": [8, 10], "incl": 8, "suit": [8, 78, 297, 307], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 196, 199, 220, 301, 302, 306], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 72, 143, 158, 162, 220, 297, 302, 306], "lost": 8, "permut": [8, 62, 306, 307], "idea": [9, 223, 293, 298, 301], "introductori": 9, "intro": [9, 297, 298], "dai": [9, 306], "2022": [9, 10, 302, 306], "spin": [9, 307], "deep": [9, 93, 145, 146, 147, 148, 151, 192, 206, 217, 225, 226, 295], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 108, 132, 295, 296, 297, 298], "reddit": 9, "reagent": 9, "orient": [9, 307], "baselines3": 9, "tf": 9, "bandit": [9, 88], "tensorflow": [9, 161], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 67, 70, 72, 73, 74, 106, 198, 199, 222, 291, 297, 298, 301, 302, 303, 307], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 306], "grade": 9, "factori": [9, 43], "throughput": [9, 295], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 67, 70, 72, 73, 74, 98, 138, 149, 152, 167, 171, 182, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 210, 212, 227, 233, 291, 296, 297, 298, 301, 302, 306, 307], "mbrl": [9, 71, 291], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 302], "dist": [10, 161, 168], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 297, 298, 301], "notebook": [10, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307], "24": [10, 295, 296, 297, 302], "11": [10, 27, 33, 45, 55, 56, 65, 68, 125, 142, 160, 295, 296, 297, 298, 301, 302, 304], "12": [10, 55, 56, 65, 295, 296, 297, 302, 304, 305], "pip": [10, 53, 301, 306, 307], "pip3": [10, 297, 298, 301], "extra": [10, 32, 67, 70, 72, 73, 74, 93, 132, 141, 291, 297, 298, 304], "url": 10, "org": [10, 35, 58, 93, 111, 129, 144, 145, 146, 147, 148, 149, 152, 153, 154, 160, 161, 164, 166, 167, 169, 170, 172, 173, 179, 189, 192, 206, 207, 211, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 235, 240, 248, 303], "whl": 10, "u": [10, 53, 302], "There": [10, 156, 291, 293, 297, 298, 301, 302, 304, 307], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 220], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 67, 70, 72, 73, 74, 92, 93, 94, 95, 97, 98, 99, 102, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 129, 131, 132, 141, 143, 145, 146, 147, 148, 150, 152, 154, 157, 158, 161, 162, 163, 164, 168, 170, 171, 176, 177, 178, 179, 196, 212, 217, 223, 226, 248, 265, 267, 268, 276, 277, 280, 281, 283, 284, 285, 286, 287], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 67, 69, 70, 72, 73, 74, 77, 83, 88, 92, 93, 94, 95, 97, 98, 99, 102, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 129, 131, 132, 135, 139, 141, 142, 143, 145, 146, 147, 148, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 170, 171, 179, 182, 188, 189, 193, 194, 195, 196, 197, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 233, 234, 235, 236, 237, 238, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 280, 281, 287, 296, 297], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 67, 68, 70, 71, 72, 73, 74, 84, 205, 220, 276, 277, 285, 286, 287, 296], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 55, 56, 57, 63, 65, 98, 187], "vs": [11, 156, 157, 306], "longer": [11, 296, 301, 304], "self": [11, 26, 28, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 96, 97, 99, 111, 123, 126, 127, 129, 131, 142, 152, 160, 170, 179, 186, 190, 196, 201, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 293, 295, 296, 302, 306], "x": [11, 23, 26, 32, 38, 40, 106, 125, 143, 152, 154, 156, 157, 158, 160, 162, 180, 188, 194, 203, 205, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 271, 295, 297, 302, 304, 306], "23": [11, 296, 302], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 67, 68, 70, 72, 73, 74, 84, 106, 123, 180, 188, 194, 214, 216, 235, 238, 246, 247, 251, 252, 283, 292, 295, 296, 301, 304, 306, 307], "import_modul": 11, "27": [11, 295, 296, 297, 298, 302, 304], "get_class_that_defined_method": 11, "f": [11, 70, 205, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 295, 296, 297, 298, 301, 302, 304, 307], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 98, 108, 123, 127, 132, 155, 162, 177, 178, 194, 200, 207, 215, 220, 221, 225, 267, 268, 293, 295, 296, 297, 298, 302, 307], "module_set": 11, "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 96, 111, 120, 126, 127, 128, 130, 131, 142, 143, 151, 156, 158, 159, 160, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 239, 261, 264, 268, 271, 287, 296], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 67, 69, 70, 72, 73, 74, 93, 94, 96, 97, 100, 101, 102, 105, 106, 107, 110, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 130, 132, 141, 142, 156, 159, 160, 186, 187, 189, 190, 192, 195, 196, 197, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 227, 233, 234, 235, 236, 237, 238, 239, 271, 295, 302], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 68, 73, 74, 295, 306], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 77, 93, 94, 95, 98, 102, 103, 107, 108, 111, 112, 114, 120, 121, 124, 127, 128, 129, 131, 134, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 206, 207, 208, 212, 214, 215, 219, 220, 221, 222, 223, 227, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 263, 264, 267, 268, 271, 273, 280, 281, 285, 286, 287, 302], "200": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 89, 90, 115, 145, 146, 153, 172, 173, 295, 298, 302], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 93, 115, 271, 274, 283, 293, 295, 296, 297, 298, 301, 304, 306], "create_env_kwarg": [13, 14, 16, 17, 68, 72, 73, 74, 295], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 67, 68, 70, 72, 73, 74, 106, 123, 127, 132, 143, 144, 145, 146, 147, 148, 149, 154, 157, 158, 169, 193, 197, 258, 259, 267, 276, 277, 280, 285, 286, 287, 295, 296, 297, 307], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 115, 296, 304], "interactiontyp": [13, 16, 18, 19, 20, 21, 136, 140, 193, 197, 267], "exploration_mod": [13, 16, 18, 19, 20, 289, 291], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 67, 70, 72, 73, 74, 96, 97, 99, 106, 108, 111, 115, 116, 117, 122, 123, 125, 126, 127, 129, 131, 132, 150, 153, 155, 158, 161, 163, 164, 172, 173, 176, 178, 186, 196, 200, 203, 204, 205, 206, 207, 212, 215, 216, 217, 218, 221, 223, 225, 226, 227, 234, 240, 241, 242, 243, 244, 245, 246, 247, 248, 269, 295, 296, 304, 307], "datacollector": [13, 14, 16, 17, 193, 197, 222, 297], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 182, 186, 188, 189, 192, 193, 194, 195, 196, 197, 199, 291, 306], "env_mak": [13, 14, 16, 21, 283, 307], "50": [13, 14, 16, 21, 37, 40, 296, 297, 298, 301, 302], "linear": [13, 14, 16, 17, 21, 32, 67, 70, 71, 72, 73, 74, 96, 106, 111, 123, 126, 127, 129, 131, 142, 143, 152, 158, 160, 162, 163, 164, 165, 171, 172, 173, 182, 183, 184, 185, 190, 191, 192, 193, 194, 196, 199, 201, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 235, 236, 237, 238, 283, 291, 296, 300, 303, 306], "2000": [13, 14, 16, 45, 297, 304], "enumer": [13, 14, 16, 21, 32, 38, 42, 67, 70, 72, 73, 74, 228, 292, 295, 296, 297, 298, 304, 306], "int64": [13, 14, 16, 24, 27, 30, 31, 33, 34, 36, 37, 40, 41, 43, 45, 54, 67, 70, 72, 73, 74, 88, 115, 152, 171, 188, 189, 192, 194, 195, 291, 297, 298, 302, 304, 306, 307], "step_count": [13, 14, 16, 67, 70, 72, 73, 74, 121, 297, 298, 306], "shutdown": [13, 14, 16, 17, 21, 295, 306], "del": [13, 14, 16, 295, 297, 300, 306, 307], "randompolici": [13, 14, 16, 18, 19, 20, 22, 93, 115, 289, 304], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 70, 208, 219, 222, 262, 264, 267, 271, 274, 275, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307], "lifespan": [13, 14, 16, 18, 19, 20, 296], "divis": [13, 14, 16, 18, 19, 20, 301], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 98, 298, 304], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 123, 127, 193, 197, 267, 285, 286, 287, 293, 296, 297, 302, 307], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 67, 70, 72, 73, 74, 297], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 296, 297, 301], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 126, 128, 162, 292, 293, 295, 296, 301, 304, 306], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 67, 70, 72, 73, 74, 98, 100, 119, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 161, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 235, 304, 307], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 291, 301, 302], "post": [13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74], "multistep": [13, 14, 16, 18, 19, 20, 21, 289, 296], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 108, 117, 155, 163, 172, 177, 178, 233, 291, 302, 304], "explorationtyp": [13, 14, 16, 20, 21, 220, 267, 295, 296, 297, 298, 306], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 222], "whole": [13, 14, 16, 26, 28, 32, 45, 67, 70, 72, 73, 74, 127, 262, 295, 297], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 273, 283, 293, 295, 306], "async": [13, 14, 18, 19, 20, 21, 295, 306], "ratio": [13, 14, 40, 295, 297], "finish": [13, 14, 21, 115], "rest": [13, 14, 291, 297, 298, 302, 306], "earli": [13, 14, 306], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 127, 132, 293, 295], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 127, 132, 287, 293, 295, 296, 307], "ordereddict": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 127, 132, 296], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 132, 156, 205, 206, 208, 219, 222, 271, 291, 301], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 67, 70, 72, 73, 74, 127], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 67, 70, 72, 73, 74, 103, 108, 121, 143, 158, 162, 218, 225, 304], "increment": [13, 14, 16, 17, 67, 70, 72, 73, 74, 121, 219], "env_fn": [13, 14, 16, 17, 68, 285, 286], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 147, 148, 302], "out_se": [13, 14, 16, 17, 307], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 26, 32, 52, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 96, 111, 120, 123, 126, 127, 128, 130, 131, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 158, 159, 160, 162, 168, 176, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 233, 234, 235, 236, 237, 238, 239, 254, 258, 259, 261, 264, 271, 276, 277, 280, 284, 285, 286, 292, 297, 301], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 92, 93, 94, 95, 97, 98, 99, 102, 104, 105, 106, 108, 109, 112, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 132, 141, 145, 151, 152, 156, 157, 158, 162, 165, 169, 170, 171, 189, 194, 195, 200, 206, 207, 209, 212, 214, 218, 220, 222, 223, 224, 225, 227, 235, 236, 237, 238, 265, 267, 269, 278, 279, 295], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 76, 87, 97, 99, 142, 160, 206, 207, 209, 210, 212, 218, 222, 223, 225, 227, 302, 306, 307], "describ": [15, 44, 94, 126, 176, 177, 257, 292, 295, 297, 301, 302, 307], "tensor_spec": [15, 212, 222, 224], "boundedtensorspec": [15, 22, 26, 67, 70, 72, 73, 74, 190, 192, 193, 200, 206, 207, 209, 218, 222, 223, 225, 227, 289, 297, 301, 302, 306, 307], "cube": 15, "envcreat": [16, 22, 283, 284, 287, 289, 295, 296, 306, 307], "interruptor": 16, "_interruptor": 16, "outsid": [16, 301], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 67, 70, 72, 73, 74, 297, 301, 306, 307], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 70, 72, 106, 206, 208, 219, 222, 295, 300, 302, 306], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 73, 74, 110, 295, 306], "regular": [17, 34, 36, 39, 171, 189, 194, 195, 196, 197, 213, 273, 289, 293, 295, 296, 304, 307], "mere": 17, "greater": [17, 156, 295, 296, 306], "signal": [17, 52, 121, 292, 295, 297, 301, 304], "sent": [17, 55, 56, 65, 132], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 73, 74, 112, 132, 142, 143, 145, 147, 149, 151, 158, 160, 162, 182, 196, 201, 262, 268, 295, 297, 298, 302, 304, 307], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 271], "string": [18, 19, 20, 32, 37, 45, 54, 67, 70, 72, 73, 74, 84, 111, 131, 156, 193, 194, 205, 253, 270, 280, 292, 295, 297, 298], "respect": [18, 19, 20, 32, 67, 70, 72, 73, 74, 92, 96, 97, 99, 111, 112, 123, 126, 127, 129, 131, 173, 196, 201, 266, 297, 298, 301], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 113, 127, 141, 156, 187, 220, 292, 295, 296, 298, 304], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 290, 296, 297, 300, 304], "serv": [18, 20, 21, 85, 304, 307], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 67, 70, 72, 73, 74, 102], "seen": [18, 20, 21, 292, 295, 296, 298, 301, 304], "turn": [18, 20, 21, 104, 128, 188, 267, 292, 295, 296, 298, 302, 303], "mp": [18, 19, 20, 68, 132], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 295], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 222, 285, 286], "homonym": [18, 19, 20, 302], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 295], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 193, 197], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 285, 286, 295, 296], "coordin": 21, "hood": [21, 302], "init": [21, 32, 67, 70, 72, 73, 74, 295, 296, 297], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 304], "similarli": [21, 32, 62, 67, 70, 72, 73, 74, 198, 199, 218, 307], "num_cpu": 21, "num_gpu": 21, "1024": [21, 149, 296, 304], "equat": [21, 192, 205, 208, 226, 297, 302], "exce": [21, 297, 304], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 271, 295, 297, 298], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 89, 90, 143, 144, 145, 146, 149, 154, 158, 162, 166, 167, 169, 170, 179, 233, 295, 296, 298, 302, 303, 304, 306, 307], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "wherea": [22, 98, 220, 293], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 144, 149, 169, 187], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 68, 296], "__main__": [22, 68], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 98, 124, 176, 177, 178, 187, 192, 207, 208, 212, 221, 223, 225, 295, 297, 298, 301], "durat": [23, 301], "meta": [23, 44, 52, 69, 293, 297, 301, 304], "aren": [23, 298], "discret": [24, 27, 30, 31, 33, 47, 67, 70, 72, 73, 74, 98, 168, 171, 212, 213, 291, 296, 297, 301, 307], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 132, 291, 295, 301], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 98, 167, 168, 172, 205, 291, 296, 297, 298, 302, 304], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 306], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 192, 200], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 200, 302], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 67, 70, 72, 73, 74, 96, 97, 99, 106, 111, 123, 126, 127, 129, 131, 132, 196, 280, 307], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 143, 158, 174, 175], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 129, 144, 169], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 287, 291], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 307], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 98, 156, 182, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 291, 306, 307], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 182, 188, 189, 193, 194, 195, 196, 197, 297, 301, 302, 304], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 123, 138, 302, 304], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 93, 120, 143, 174, 175, 295, 302, 304], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 93, 94, 123, 128, 132, 157, 175, 180, 287, 296, 297, 302, 304], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 126, 127, 165, 176, 287], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 98, 152, 168, 171, 188, 189, 194, 195, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 298], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 152, 171, 188, 194, 210, 212, 233, 289, 291], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 67, 70, 72, 73, 74, 96, 97, 99, 111, 123, 126, 127, 129, 131, 132, 196, 205, 220, 295, 296, 297, 302, 304], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 123, 156, 298, 302, 303], "upper": 25, "unnam": 26, "effect": [26, 32, 67, 70, 72, 73, 74, 93, 118, 127, 271, 295, 304, 307], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 67, 70, 72, 73, 74, 143, 158, 296, 302], "composite_spec": 26, "observation_vector": [26, 94, 280, 295], "randn": [26, 34, 36, 39, 55, 56, 65, 108, 138, 144, 149, 152, 157, 161, 165, 168, 169, 171, 182, 183, 184, 185, 187, 188, 193, 194, 196, 199, 200, 201, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 235, 236, 237, 238, 270, 291, 306, 307], "td_project": 26, "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 67, 70, 72, 73, 74, 234, 301], "children": [26, 28, 32, 67, 70, 72, 73, 74], "keysview": [26, 28], "reflect": [26, 28, 141, 220, 274, 296, 297, 298, 301], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 67, 70, 72, 73, 74, 220], "succeed": [26, 28, 297, 301, 302], "selected_kei": [26, 28, 119, 295], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "categor": [27, 31, 33, 152, 168, 171, 188, 189, 194, 195, 210, 212, 233, 298], "action_valu": [27, 33, 151, 152, 171, 188, 189, 194, 195, 212, 220, 233, 291, 298], "arang": [27, 33, 152, 161, 188, 262, 291, 304], "argmax": [27, 152, 171, 189, 195], "chosen_action_valu": [27, 33, 170, 171, 179, 194, 195, 233, 291, 298], "outcom": [27, 33, 150, 176], "lazi": [28, 29, 49, 50, 67, 70, 72, 73, 74, 111, 129, 163, 198, 199, 295, 296, 300, 304, 307], "represent": [28, 29, 32, 67, 70, 72, 73, 74, 111, 129, 131, 295, 302, 303, 307], "drawn": [28, 29, 123, 193, 197, 297, 301], "lazystackedtensordict": [28, 67, 70, 71, 72, 73, 74, 300, 306], "heterogen": [28, 29, 134, 162, 295, 296], "semant": [28, 29, 291], "thrown": [29, 32, 67, 70, 72, 73, 74, 304], "nvec": [30, 31], "cardin": [30, 31, 152, 171, 188, 189, 195, 297], "ax": [30, 163, 164], "m": [30, 32, 67, 70, 72, 73, 74, 98, 197, 291, 296, 302], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 210, 212, 233, 289], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 289], "gamma": [32, 115, 160, 206, 207, 209, 210, 212, 213, 214, 216, 218, 220, 222, 223, 224, 225, 227, 228, 229, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 283, 292, 295, 296, 297, 301, 306], "sutton": [32, 292, 301], "1988": 32, "predict": [32, 40, 153, 159, 160, 187, 202, 213, 215, 216, 234, 291, 295, 296], "tempor": [32, 156, 160, 236, 237, 242, 243], "44": [32, 296, 298, 302], "discount": [32, 68, 115, 207, 213, 214, 216, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 292, 296, 297, 301], "ahead": [32, 307], "add_modul": [32, 67, 70, 72, 73, 74], "child": [32, 67, 70, 72, 73, 74], "fn": [32, 37, 67, 70, 72, 73, 74, 165, 285, 286], "init_weight": [32, 67, 70, 72, 73, 74], "fill_": [32, 67, 70, 72, 73, 74, 296, 298, 307], "net": [32, 67, 70, 72, 73, 74, 157, 162, 206, 207, 212, 218, 222, 223, 224, 225, 280, 283, 296, 302, 303, 306], "in_featur": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 143, 145, 146, 147, 148, 157, 158, 162, 163, 164, 183, 196, 210, 306], "out_featur": [32, 67, 70, 71, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 142, 143, 145, 146, 147, 148, 153, 154, 156, 157, 158, 160, 162, 163, 164, 183, 188, 196, 210, 291, 295, 298, 306], "bia": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 143, 153, 156, 158, 162, 163, 164, 165, 190, 192, 196, 203, 204, 205, 220, 292, 295, 296, 297, 298, 301, 306], "requires_grad": [32, 67, 70, 72, 73, 74, 106], "bfloat16": [32, 67, 70, 72, 73, 74], "datatyp": [32, 67, 70, 72, 73, 74, 304], "member": [32, 67, 70, 72, 73, 74, 220], "xdoctest": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196, 220], "skip": [32, 67, 70, 72, 73, 74, 103, 127, 134, 193, 197, 220, 235, 236, 237, 238, 253, 254, 264, 267, 295, 296, 297, 302], "buf": [32, 67, 70, 72, 73, 74], "20l": [32, 67, 70, 72, 73, 74, 220], "1l": [32, 67, 70, 72, 73, 74, 220], "5l": [32, 67, 70, 72, 73, 74, 220], "__call__": [32, 37, 67, 70, 72, 73, 74, 197, 293], "associ": [32, 67, 70, 72, 73, 74, 172, 287, 295, 304], "doubl": [32, 46, 67, 70, 72, 73, 74, 96, 97, 99, 111, 123, 126, 127, 129, 131, 196, 210, 213, 217, 223, 226, 233, 295, 296, 297, 298, 307], "eval": [32, 67, 70, 72, 73, 74, 127, 132, 295, 296, 297], "evalu": [32, 67, 70, 72, 73, 74, 127, 150, 161, 168, 178, 223, 276, 277, 296, 297], "dropout": [32, 67, 70, 72, 73, 74, 127, 156, 158, 298], "batchnorm": [32, 67, 70, 72, 73, 74, 127], "disabl": [32, 67, 70, 72, 73, 74, 127, 155, 178, 295], "comparison": [32, 54, 67, 70, 72, 73, 74, 127, 220, 295, 296], "similar": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 130, 131, 132, 183, 185, 193, 196, 197, 292, 295, 296, 297, 298, 302, 307], "confus": [32, 67, 70, 72, 73, 74, 127], "extra_repr": [32, 67, 70, 72, 73, 74], "nontermin": 32, "original_reward": 32, "newli": 32, "OR": 32, "reshap": [32, 156, 158, 297, 301], "get_buff": [32, 67, 70, 72, 73, 74], "throw": [32, 67, 70, 72, 73, 74, 307], "docstr": [32, 67, 70, 72, 73, 74], "get_submodul": [32, 67, 70, 72, 73, 74], "explan": [32, 67, 70, 72, 73, 74], "qualifi": [32, 67, 70, 72, 73, 74], "referenc": [32, 67, 70, 72, 73, 74], "attributeerror": [32, 67, 70, 72, 73, 74], "invalid": [32, 67, 70, 72, 73, 74, 161], "resolv": [32, 67, 70, 72, 73, 74], "get_extra_st": [32, 67, 70, 72, 73, 74, 132], "set_extra_st": [32, 67, 70, 72, 73, 74, 132], "picklabl": [32, 67, 70, 72, 73, 74, 132], "ensur": [32, 35, 41, 58, 62, 67, 70, 72, 73, 74, 93, 111, 129, 132, 188, 291, 296, 297, 302, 304], "guarante": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 132, 306], "pickl": [32, 67, 70, 72, 73, 74, 132], "get_paramet": [32, 67, 70, 72, 73, 74], "sai": [32, 67, 70, 72, 73, 74, 303, 307], "net_b": [32, 67, 70, 72, 73, 74], "net_c": [32, 67, 70, 72, 73, 74], "conv": [32, 67, 70, 72, 73, 74, 143, 296], "conv2d": [32, 67, 70, 72, 73, 74, 143, 306], "kernel_s": [32, 67, 70, 72, 73, 74, 143, 145, 146, 166, 296, 306], "stride": [32, 67, 70, 72, 73, 74, 143, 145, 146, 154, 296, 306], "diagram": [32, 67, 70, 72, 73, 74], "show": [32, 67, 70, 72, 73, 74, 162, 291, 295, 297, 298, 301, 302, 304, 306], "itself": [32, 67, 70, 72, 73, 74, 83, 220, 297], "degre": [32, 67, 70, 72, 73, 74], "named_modul": [32, 67, 70, 72, 73, 74], "o": [32, 67, 70, 72, 73, 74], "transit": [32, 52, 67, 70, 72, 73, 74, 202, 295, 298, 302, 304], "half": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196, 295], "ipu": [32, 67, 70, 72, 73, 74], "strict": [32, 67, 70, 72, 73, 74, 127], "descend": [32, 67, 70, 72, 73, 74, 127], "persist": [32, 67, 70, 72, 73, 74, 127, 141], "enforc": [32, 62, 67, 70, 72, 73, 74, 127, 198, 302], "preserv": [32, 67, 70, 72, 73, 74, 127], "missing_kei": [32, 67, 70, 72, 73, 74, 127], "unexpected_kei": [32, 67, 70, 72, 73, 74, 127], "namedtupl": [32, 67, 70, 72, 73, 74, 127], "duplic": [32, 62, 67, 70, 72, 73, 74, 210, 213, 220, 233], "l": [32, 67, 70, 72, 73, 74, 234, 297, 302], "idx": [32, 67, 70, 72, 73, 74], "named_buff": [32, 67, 70, 72, 73, 74], "remove_dupl": [32, 67, 70, 72, 73, 74, 220], "prepend": [32, 67, 70, 72, 73, 74, 220], "running_var": [32, 67, 70, 72, 73, 74], "named_children": [32, 67, 70, 72, 73, 74], "conv4": [32, 67, 70, 72, 73, 74], "conv5": [32, 67, 70, 72, 73, 74], "memo": [32, 67, 70, 72, 73, 74], "named_paramet": [32, 67, 70, 72, 73, 74, 106, 220], "register_backward_hook": [32, 67, 70, 72, 73, 74], "removablehandl": [32, 67, 70, 72, 73, 74], "deprec": [32, 67, 70, 72, 73, 74, 127, 135, 139, 151, 206, 207, 208, 210, 212, 213, 218, 219, 222, 223, 224, 225, 233, 235, 236, 237, 238, 307], "favor": [32, 67, 70, 72, 73, 74, 297], "register_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_buff": [32, 67, 70, 72, 73, 74], "running_mean": [32, 67, 70, 72, 73, 74], "alongsid": [32, 67, 70, 72, 73, 74, 301], "num_featur": [32, 67, 70, 72, 73, 74], "register_forward_hook": [32, 67, 70, 72, 73, 74, 152, 171], "with_kwarg": [32, 67, 70, 72, 73, 74], "always_cal": [32, 67, 70, 72, 73, 74], "posit": [32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 102, 103, 120, 121, 124, 127, 128, 165, 292, 297, 301, 302, 304], "signatur": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196, 220, 292, 295, 302], "register_module_forward_hook": [32, 67, 70, 72, 73, 74], "regardless": [32, 67, 70, 72, 73, 74, 208, 219, 222], "register_forward_pre_hook": [32, 67, 70, 72, 73, 74], "invok": [32, 67, 70, 72, 73, 74], "And": [32, 67, 70, 72, 73, 74], "forward_pr": [32, 67, 70, 72, 73, 74], "register_module_forward_pre_hook": [32, 67, 70, 72, 73, 74], "grad_input": [32, 67, 70, 72, 73, 74], "grad_output": [32, 67, 70, 72, 73, 74], "subsequ": [32, 67, 70, 72, 73, 74, 298], "technic": [32, 67, 70, 72, 73, 74, 296, 298], "caller": [32, 67, 70, 72, 73, 74], "register_module_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "backward_pr": [32, 67, 70, 72, 73, 74], "register_module_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "register_load_state_dict_post_hook": [32, 67, 70, 72, 73, 74], "incompatible_kei": [32, 67, 70, 72, 73, 74], "clear": [32, 67, 70, 72, 73, 74, 263], "register_modul": [32, 67, 70, 72, 73, 74, 293], "alia": [32, 67, 70, 72, 73, 74], "register_paramet": [32, 67, 70, 72, 73, 74], "register_state_dict_pre_hook": [32, 67, 70, 72, 73, 74], "keep_var": [32, 67, 70, 72, 73, 74, 127], "made": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 192, 210, 220, 233, 295, 296, 298, 301, 303], "requires_grad_": [32, 67, 70, 72, 73, 74], "autograd": [32, 67, 70, 72, 73, 74, 127], "freez": [32, 67, 70, 72, 73, 74], "finetun": [32, 67, 70, 72, 73, 74], "gan": [32, 67, 70, 72, 73, 74], "share_memori": [32, 67, 68, 70, 72, 73, 74, 295], "share_memory_": [32, 67, 70, 72, 73, 74, 306], "destin": [32, 34, 36, 39, 67, 70, 72, 73, 74, 127, 129, 141], "averag": [32, 67, 70, 72, 73, 74, 127, 132, 192, 214, 215, 269, 295, 297], "shallow": [32, 67, 70, 72, 73, 74, 127, 298], "pleas": [32, 67, 70, 72, 73, 74, 127, 290], "detach": [32, 67, 70, 72, 73, 74, 127, 220, 235, 236, 237, 238, 295], "non_block": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "memory_format": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "channels_last": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "complex": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196, 295, 296], "integr": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 148, 156, 160, 196, 291, 301, 302, 303], "unchang": [32, 67, 70, 72, 73, 74, 96, 98, 111, 123, 126, 127, 129, 131, 196, 268, 295, 304], "tri": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "pin": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "4d": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "ignore_w": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "1913": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "3420": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "5113": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "2325": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "torch_doctest_cuda1": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "gpu1": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "1914": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "5112": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196, 302], "2324": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "float16": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "cdoubl": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "3741": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "j": [32, 35, 58, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196, 293], "2382": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "5593": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196, 302], "4443": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "complex128": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "6122": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "1150": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 196], "to_empti": [32, 67, 70, 72, 73, 74], "dst_type": [32, 67, 70, 72, 73, 74], "xpu": [32, 67, 70, 72, 73, 74], "set_to_non": [32, 67, 70, 72, 73, 74], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 304], "discretebox": [33, 67, 70, 72, 73, 74, 297, 301, 307], "chosen_data": [34, 54], "rewarddata": [34, 54, 289], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 88], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 302], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 97, 99, 111, 127, 131, 263, 303], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 287], "determin": [34, 35, 36, 39, 41, 52, 58, 111, 131, 192, 296, 301], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 150, 176], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 298], "memmap": [34, 36, 39, 55, 73, 74, 132, 268, 304], "unbind": [34, 36, 39, 156], "alpha": [35, 41, 58, 143, 207, 212, 221, 223, 225, 295, 304, 306], "ep": [35, 41, 58, 132, 192, 208, 226, 269, 295, 296, 298], "1e": [35, 41, 58, 132, 150, 153, 165, 176, 295, 296, 297, 301], "08": [35, 41, 58, 295, 296, 297, 302], "collate_fn": [35, 38, 41, 42, 52, 53, 304, 306], "prefetch": [35, 38, 41, 42, 52, 53, 54, 295, 296, 298, 304], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 93, 111, 129, 144, 145, 146, 147, 148, 149, 152, 153, 154, 160, 164, 166, 167, 169, 170, 172, 173, 179, 189, 192, 206, 207, 211, 213, 214, 215, 216, 217, 218, 221, 222, 225, 226, 235, 240, 248, 303], "ab": [35, 58, 111, 129, 132, 144, 149, 153, 154, 160, 164, 166, 167, 169, 170, 172, 173, 179, 206, 207, 211, 214, 215, 216, 217, 218, 221, 222, 225, 303], "1511": [35, 58, 154], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 176, 193, 197, 289, 292], "null": [35, 41, 58, 92], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 304], "merg": [35, 38, 41, 42, 52, 53, 302], "mini": [35, 38, 41, 42, 52, 53, 301], "decid": [35, 38, 41, 42, 306], "rb": [35, 38, 41, 42, 52, 53, 93, 115, 296, 298, 301, 303, 304, 306], "meth": [35, 38, 41, 42, 220], "incompat": [35, 38, 41, 42, 304], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 304], "tensordictprioritizedreplaybuff": [35, 289, 306], "simplifi": [35, 302, 304], "manual_se": [35, 38, 41, 42, 98, 108, 115, 161, 168, 182, 189, 190, 192, 200, 206, 207, 209, 218, 225, 301, 302, 306, 307], "_weight": [35, 41, 304, 306], "arrai": [35, 40, 295, 304], "update_prior": [35, 58, 268, 293, 296, 304, 306], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 128], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 122, 295, 304], "nonetyp": [36, 39], "logit": [36, 40, 161, 168, 189, 212, 291], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203], "text": [37, 40, 43, 192, 297], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 144, 149, 169], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 304], "inde": [37, 98, 297, 302], "might": [37, 122, 258, 290, 295, 307], "writer": [38, 42, 52, 53, 60, 64, 289, 297], "randomsampl": [38, 42, 52, 53, 289, 295], "roundrobinwrit": [38, 42, 52, 53, 289], "Not": 38, "ref_model": 40, "reward_model": [40, 202], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 106], "kl": [40, 106, 215, 219], "penalti": [40, 219], "strai": 40, "far": [40, 70, 155, 177, 178, 302, 307], "calcul": [40, 115], "gpt2rewardmodel": 40, "get_dataload": [40, 289], "promptdata": [40, 289], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 302, 304], "reward_kl": [40, 106], "reward_raw": 40, "sample_log_prob": [40, 183, 184, 185, 193, 197, 199, 222, 280, 297, 301, 306], "create_rollout_td": 40, "log_prob": [40, 150, 161, 168, 178, 197], "log_ratio": 40, "kl_coef": 40, "plu": [40, 302], "replic": 40, "rindex": 40, "multipli": [40, 207, 208, 212, 219, 221, 222, 223, 225, 269, 295], "term": [40, 106, 163, 164, 205, 206, 212, 273, 296, 297, 301], "subtract": [40, 122], "ve": [40, 295, 298], "eo": 40, "limit": [40, 71, 93, 106, 295, 296, 298, 301, 302], "generation_config": 40, "generationconfig": 40, "ti": [40, 244, 245, 246, 247, 249, 250, 251, 252, 296], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 207, 210, 212, 213, 218, 220, 223, 225, 227, 233, 304, 306], "td_error": [41, 42, 207, 209, 210, 212, 213, 218, 220, 223, 225, 227, 233, 295, 304, 306], "reduct": [41, 58], "prioritizedreplaybuff": [41, 289, 306], "update_tensordict_prior": [41, 295, 304, 306], "prioritizedsampl": [41, 42, 210, 213, 233, 289, 295, 304], "min": [41, 58, 176, 177, 178, 187, 192, 207, 208, 212, 221, 223, 225, 296, 297, 301], "median": [41, 58, 193, 197], "len": [41, 55, 56, 65, 143, 158, 162, 295, 302, 303, 304, 306], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 87, 138], "huggingfac": [43, 191], "co": [43, 302], "doc": [43, 296, 301], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 289], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 72, 73, 74, 295, 296], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 70, 129, 141, 253, 304, 307], "condit": [45, 122, 188, 189, 194, 195, 205, 295, 302, 304], "elementwis": 45, "os": [45, 296], "cpu_count": 45, "vocabulari": 45, "loader": [45, 297], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 93, 94, 95, 97, 98, 99, 100, 102, 105, 108, 112, 113, 115, 119, 121, 124, 129, 132, 141, 186, 187, 190, 192, 197, 210, 233], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 296], "batch_dimens": 45, "filder": 45, "tempfil": [45, 283, 295, 296], "randint": [45, 125, 304], "20": [45, 67, 70, 72, 73, 74, 187, 262, 295, 296, 297, 298, 301, 302, 305, 306, 307], "temporarydirectori": [45, 295, 296], "tmpdir": [45, 295, 296], "data_memmap": 45, "exclus": [48, 49, 102, 156, 161, 188, 189, 194, 195, 226, 227, 235, 236, 237, 238, 239, 287, 291], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_timeout_as_don": 52, "env_kwarg": [52, 285, 286, 295], "metadata": [52, 297, 301, 307], "reconstruct": [52, 215, 295, 307], "timeout": 52, "recov": [52, 186, 190, 192, 198, 218, 300], "regard": [52, 152, 189, 206, 213, 222, 295, 297, 302], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 72, 180, 285, 286, 292, 297, 298, 304, 306], "left": [52, 96, 106, 111, 113, 124, 126, 129, 131, 296, 297], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 115, 118, 122, 142, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 296, 301], "absent": 52, "traj_split": 52, "observationnorm": [52, 132, 287, 295, 296, 297, 298, 306], "maze2d": 52, "umaz": 52, "loc": [52, 106, 108, 117, 155, 165, 177, 178, 183, 184, 185, 193, 197, 199, 206, 207, 218, 222, 223, 224, 225, 275, 280, 287, 291, 295, 296, 297, 298, 301, 306], "128": [52, 146, 149, 296, 298, 302, 303, 304], "public": [53, 111, 131], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 88], "adult_onehot": [53, 88], "mushroom_num": [53, 88], "mushroom_onehot": [53, 88], "covertyp": [53, 88], "shuttl": [53, 88], "magic": [53, 88], "infinit": [54, 304], "three": [54, 291, 293, 297, 301, 302, 304], "block": [54, 291, 298], "pairwisedataset": [54, 289], "256": [54, 149, 296, 297, 301, 302], "scratch_dir": [55, 295, 304], "myclass": [55, 56, 65], "foo": [55, 56, 65, 187, 304, 307], "bar": [55, 56, 65, 187, 264, 265, 267, 271, 293, 296], "attach": [55, 56, 57, 63, 65, 296], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 161, 295], "zero_": [56, 65, 138], "max_capac": [58, 295, 304], "uniformli": [59, 220, 307], "roundrobin": [60, 64], "piec": [60, 64, 66, 295, 296, 297, 301, 302, 304], "consum": [62, 296, 297, 301, 304], "incomplet": 62, "unlik": [62, 213, 222, 296, 306], "fresh": 62, "caution": [62, 134, 307], "shuffl": [62, 301], "haven": [62, 303], "remain": [62, 98, 106, 122, 164], "draw": 62, "__len__": 63, "_inplace_upd": [67, 72, 73, 74, 75, 76, 88, 89, 90, 127], "_batch_lock": [67, 72, 73, 74, 75, 76, 88, 89, 90, 127], "continuousbox": [67, 70, 72, 73, 74, 138, 297, 301, 302, 306, 307], "unboundedcontinuoustensorspec": [67, 70, 71, 72, 73, 74, 97, 99, 123, 138, 142, 160, 182, 196, 199, 201, 224, 289, 297, 298, 301, 302, 307], "another_act": [67, 70, 72, 73, 74], "mutabl": [67, 70, 72, 73, 74], "batch_lock": [67, 69, 70, 72, 73, 74, 123, 127, 302], "immut": [67, 70, 72, 73, 74, 113, 127], "another_don": [67, 70, 72, 73, 74], "fake_tensordict": [67, 70, 72, 73, 74, 296], "fake": [67, 70, 72, 73, 74, 295, 296], "overridden": [67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 298], "afterward": [67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203, 307], "silent": [67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 162, 165, 166, 167, 169, 172, 173, 175, 180, 186, 187, 189, 190, 192, 195, 200, 203], "attibut": [67, 70, 72, 73, 74], "speak": [67, 70, 72, 73, 74, 295], "rand_act": [67, 70, 72, 73, 74], "_step": [67, 70, 72, 73, 74, 97, 99, 102, 113, 122], "privat": [67, 70, 72, 73, 74, 302, 307], "another_reward": [67, 70, 72, 73, 74], "callback": [67, 70, 72, 73, 74, 301], "auto_reset": [67, 70, 72, 73, 74, 302], "auto_cast_to_devic": [67, 70, 72, 73, 74, 301], "break_when_any_don": [67, 70, 72, 73, 74, 301], "return_contigu": [67, 70, 72, 73, 74, 134, 300], "soon": [67, 70, 72, 73, 74], "ndim": [67, 70, 72, 73, 74], "concomitt": [67, 70, 72, 73, 74], "workspac": [67, 70, 72, 73, 74], "creator": [68, 276, 277, 285, 286, 287], "substitut": [68, 132], "vecnorm": [68, 287], "env_creat": [68, 295], "test_env1": 68, "_td": 68, "observation_count": [68, 307], "test_env2": 68, "sleep": [68, 307], "ps": 68, "p1": 68, "p2": 68, "join": [68, 289, 296, 297], "9934": 68, "env_str": 69, "info_dict_read": 70, "set_info_dict_read": 70, "put": [70, 132, 287, 291, 296, 297, 298, 302], "read_act": 70, "read_don": 70, "reader": [70, 296], "frame_skip": [70, 77, 78, 79, 81, 82, 86, 103, 264, 267, 274, 293, 295, 296, 297, 306], "broken": [70, 134], "read_ob": 70, "dictat": [70, 193, 197, 222, 295, 302], "inner": [70, 98, 293, 296, 297, 301, 307], "read_reward": 70, "total_reward": [70, 296], "step_reward": 70, "baseinfodictread": 70, "info_dict": 70, "hoc": 70, "dict_read": 70, "default_info_dict_read": 70, "my_info_kei": 70, "some_env": 70, "environn": 71, "safeti": 71, "constraint": [71, 297, 301], "behav": [71, 85, 168, 218, 303], "mymbenv": [71, 142, 160], "world_model": [71, 142, 160, 215], "super": [71, 97, 99, 142, 152, 160, 201, 207, 209, 212, 218, 223, 225, 227, 295, 302, 306], "hidden_observ": [71, 142, 160], "mlp": [71, 142, 143, 145, 146, 147, 148, 156, 157, 160, 162, 183, 188, 210, 280, 291, 296, 300, 303, 306], "worldmodelwrapp": [71, 142, 160], "activation_class": [71, 142, 143, 145, 146, 147, 148, 153, 154, 158, 160, 162, 296, 301, 306], "relu": [71, 142, 149, 160, 165, 205], "activate_last_lay": [71, 142, 148, 158, 160], "depth": [71, 142, 143, 145, 146, 147, 148, 153, 154, 158, 160, 162, 166, 167, 188, 291, 296, 300, 301], "run_type_check": 71, "equal": [72, 73, 74, 107, 108, 143, 151, 156, 158, 162, 226, 230, 262, 285, 286, 295, 297, 303], "readthedoc": 72, "en": 72, "python_interfac": 72, "thread": 72, "task_id": 72, "my_env_fun": [73, 74], "custom_attribute_list": [73, 74], "custom_attribut": [73, 74], "custom_method_list": [73, 74], "custom_method": [73, 74], "deploi": [73, 74], "slight": [73, 74, 296], "overhead": [73, 74], "share_individual_td": [73, 74], "shared_memori": [73, 74], "policy_proof": [73, 74], "ll": [73, 74, 295, 296, 297, 298, 301, 307], "hidden": [73, 74, 153, 156, 157, 166, 167, 172, 173, 183, 184, 185, 187, 196, 199, 208, 219, 222, 291, 298, 300, 306], "allow_step_when_don": [73, 74], "update_kwarg": [73, 74], "googl": [75, 76, 297, 298, 301], "ant": [75, 76, 303], "get_environ": 76, "87": [76, 296, 302, 303], "acrobot": [76, 307], "fetch": [76, 106, 303, 304, 307], "dm_control": [77, 78, 295, 300, 307], "task_nam": 77, "cheetah": [77, 78, 295, 307], "mo": [81, 82], "minecart": [81, 82], "mo_gym": 82, "sumbodul": 83, "wish": [84, 304], "placehold": [85, 127], "secur": 85, "snake": [86, 87], "6x6": [86, 87], "td1": [87, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 295], "12x12": 87, "tsp50": 87, "tsp100": 87, "106": [88, 302], "scenario": [89, 90, 295, 301, 302], "flock": [89, 90], "continuous_act": [89, 90, 301], "cohesion_rew": 89, "collision_rew": 89, "separation_rew": 89, "velocity_rew": 89, "18": [89, 90, 162, 295, 296, 301, 302, 307], "agent_collision_rew": 90, "agent_distance_rew": 90, "model_bas": [91, 142, 160], "transform_reward_spec": [92, 96, 97, 106, 113, 116, 117, 126, 128], "as_invers": 93, "account": [93, 161, 291, 296, 298, 304], "movement": 93, "veloc": [93, 301, 302, 307], "propos": [93, 159, 217, 226, 280, 291, 298, 304], "pdf": [93, 144, 145, 146, 147, 148, 152, 169, 189, 192, 213, 223, 226, 235, 240, 248, 280], "1312": [93, 296], "5602": 93, "uesd": 93, "unsqueezetransform": [93, 302, 304], "consumpt": 93, "followin": 93, "pictur": 93, "cartpol": [93, 296, 298, 304, 307], "pixels_trsf": [93, 304], "grayscal": [93, 296, 298, 304, 307], "unsqueez": [93, 94, 125, 128, 157, 295, 298, 301, 302], "tensordictreplaybuff": [93, 268, 283, 289, 295, 296, 298, 304], "data_exclud": [93, 304], "_buffer": [93, 124], "transform_observation_spec": [93, 94, 95, 96, 97, 100, 102, 104, 105, 106, 108, 113, 114, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 302], "del_kei": [94, 129, 300, 302], "unsqueeze_if_oor": 94, "observation_posit": 94, "observation_veloc": 94, "delet": 94, "key1": [94, 262, 270], "key2": [94, 262, 270], "crop": [95, 112, 254], "center": [95, 254], "width": [95, 114], "height": [95, 114], "squar": [95, 155, 177, 178, 254], "rewardsc": [96, 127, 295, 296, 298], "rewardclip": 96, "transformed_env": [96, 126, 127], "tranform": [96, 100, 105, 119, 121, 122, 126, 130], "transform_input_spec": [96, 97, 98, 108, 113, 121, 126, 128], "transform_output_spec": [96, 106, 113, 126], "untouch": [96, 106, 113, 126], "transformfull_done_spec": [96, 106, 113, 126], "dtype_in": 97, "dtype_out": 97, "scan": [97, 99, 198, 199], "expos": [97, 99, 198, 296], "not_transform": [97, 99], "rule": [97, 99, 197, 291, 297], "constructedw": [97, 99], "myenv": [97, 99], "_set_se": [97, 99, 302], "num_actions_effect": 98, "max_act": 98, "include_forward": 98, "dimension": [98, 156, 235, 240, 248, 301], "num_act": [98, 212], "action_out": 98, "_call": [98, 102, 302], "excluded_kei": 100, "finit": [101, 304], "first_dim": 102, "last_dim": 102, "allow_positive_dim": [102, 128], "flatten": [102, 268, 298, 301], "th": [102, 128, 302], "permit": [102, 128], "frameskip": 102, "repeatedli": [103, 297, 301], "init_kei": 105, "is_init": [105, 156, 192, 298], "tracker": 105, "probabilistictensordictmodul": [106, 197, 198, 306], "coef": 106, "pi_curr": 106, "pi_0": 106, "constrain": [106, 156, 222], "overfit": 106, "fine": [106, 303], "probabilist": [106, 193, 289, 297, 306], "get_dist": [106, 197, 198], "mod": [106, 156, 200, 298], "normalparamextractor": [106, 291, 297, 301], "probabilisticactor": [106, 183, 184, 185, 187, 206, 207, 211, 212, 218, 221, 222, 223, 224, 225, 227, 291, 295, 297, 301], "tanhnorm": [106, 183, 184, 185, 193, 199, 206, 207, 218, 222, 223, 224, 225, 227, 289, 297, 301, 306], "n_ob": [106, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227], "n_act": [106, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227], "distribution_class": [106, 183, 184, 185, 187, 193, 197, 199, 206, 207, 212, 218, 222, 223, 224, 225, 291, 295, 297, 301, 306], "return_log_prob": [106, 183, 184, 185, 193, 197, 199, 224, 291, 297, 301, 306], "apply_": 106, "copy_": [106, 295], "formulat": 106, "diverg": [106, 156, 193, 197, 215, 219], "noop": [107, 306], "30": [107, 172, 173, 296, 297, 301, 302, 304], "op": [107, 186, 190, 273], "randomli": [107, 108, 123, 193, 197, 301, 302, 304], "noop_max": 107, "out_keys_inv": [108, 109, 113, 126, 302], "standard_norm": [108, 117, 295, 296, 298], "affin": [108, 117], "layer": [108, 132, 143, 145, 146, 153, 156, 158, 162, 163, 164, 166, 167, 174, 175, 181, 191, 200, 291, 296, 297, 298, 303], "normal": [108, 132, 143, 155, 158, 161, 165, 177, 178, 186, 193, 197, 208, 219, 222, 267, 269, 287, 291, 293, 298, 301, 307], "set_default_tensor_typ": 108, "doubletensor": 108, "isclos": 108, "next_ob": [108, 235, 236, 237, 238, 306], "rubric": [108, 199], "init_stat": [108, 295, 296, 297, 298], "3752e": 108, "01": [108, 192, 203, 208, 219, 222, 295, 296, 298, 301, 302, 303, 305], "5087e": 108, "03": [108, 295, 296, 301, 302, 303, 305], "9294e": 108, "9636": 108, "5608": 108, "6408": 108, "num_it": [108, 296, 297], "reduce_dim": [108, 295, 296, 297, 298], "cat_dim": [108, 295, 296, 297, 298], "keep_dim": [108, 296, 298], "constant": [108, 122, 293, 295, 297, 298, 307], "statist": [108, 132, 224, 287, 295, 296, 297, 307], "approach": [108, 295, 297, 307], "gaussian": [108, 123, 142, 160, 163, 164, 169, 186, 297], "empir": [108, 142, 160, 193, 197, 295, 297, 301], "3d": 108, "third": [108, 189, 301], "r3m": [111, 303], "resnet": [111, 129, 131], "visual": [111, 129, 131, 297, 302], "embed": [111, 129, 130, 131, 170, 182, 183, 184, 185, 196, 201, 303], "ego4d": [111, 129, 131], "univers": [111, 129, 131], "suraj": [111, 129], "nair": [111, 129], "aravind": [111, 129], "rajeswaran": [111, 129], "vikash": [111, 129, 131], "kumar": [111, 129, 131], "chelsea": [111, 129], "finn": [111, 129], "abhinav": [111, 129], "gupta": [111, 129], "2203": [111, 129, 160, 303], "12601": [111, 129, 303], "_init": [111, 129, 295], "snippet": [111, 129, 295], "resnet50": [111, 131, 303], "model_nam": [111, 129, 131, 257], "resnet34": 111, "resnet18": 111, "r3m_vec": [111, 303], "feed": [111, 131, 220, 291, 295, 301, 304], "244": [111, 131, 302], "stack_imag": [111, 131], "tread": [111, 131], "separet": [111, 131], "hub": [111, 131, 303], "resnet50_weight": [111, 131], "imagenet1k_v1": [111, 131], "download_path": [111, 131], "tensor_pixels_kei": [111, 131], "dest": [111, 129, 131, 196], "sub_seq_len": 112, "sample_dim": [112, 295], "mask_kei": 112, "primarili": 112, "hesit": 112, "request": 112, "robust": 112, "mix": [112, 170, 179, 233, 295, 301], "NOT": 112, "improp": 112, "create_copi": 113, "renam": [113, 115, 141, 295], "stuff": 113, "braxenv": [113, 289], "newnam": 113, "interpol": [114, 296, 298], "bilinear": [114, 298], "r2g": 115, "99": [115, 132, 160, 216, 229, 234, 241, 283, 295, 296, 297, 302, 306], "reward_to_go": 115, "bernoulli_": 115, "9010": 115, "9404": [115, 241], "9701": [115, 241], "9900": [115, 241], "0000": [115, 190, 200, 241, 297, 298, 302, 306], "crash": 115, "clamp_min": 116, "clamp_max": 116, "clip_min": 116, "scalar": [116, 146, 148, 163, 164, 186, 190, 192, 203, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 296, 302], "clip_max": 116, "episode_": 118, "reward1": 118, "reward2": 118, "ho": 118, "excludetransform": [119, 304], "squeeze_dim": 120, "step_count_kei": 121, "recognis": 121, "target_return": 122, "guid": [122, 290, 295, 301], "accordingli": [122, 194, 298], "conjunct": [122, 296], "hindsight": 122, "relabel": 122, "reward2gotransform": 122, "primer": [123, 298], "default_valu": [123, 298], "unit": [123, 142, 153, 166, 167, 172, 173, 297], "transfomedenv": 123, "mykei": 123, "__unless": 123, "exists__": 123, "dtype_or_devic": 123, "pool": 124, "from_int": 125, "255": [125, 295, 302, 304], "ri": 125, "principl": 126, "cattransform": 126, "notabl": 126, "transform_done_spec": 126, "cache_spec": 127, "anymor": [127, 196], "set_missing_toler": 127, "keyerror": 127, "unsqueeze_dim": [128, 302], "danger": 128, "vc1": 129, "vc1_vec": 129, "small": [129, 295, 297, 301, 307], "untrain": 129, "make_noload_model": 129, "naiv": 129, "vip": [130, 131, 303], "toward": 131, "implicit": [131, 218, 304], "jason": 131, "ma": 131, "shagun": 131, "sodhani": 131, "dinesh": 131, "jayaraman": 131, "osbert": 131, "bastani": 131, "ami": 131, "zhang": 131, "vip_vec": 131, "shared_td": 132, "decai": [132, 186, 190, 226, 269, 295, 296, 298, 307], "9999": [132, 302], "0001": [132, 153, 165, 297, 298, 302], "fly": [132, 219, 292, 297, 302, 304, 307], "to_observation_norm": 132, "underflow": [132, 269], "build_td_for_shared_vecnorm": 132, "memmori": 132, "memmap_": 132, "queue": [132, 304], "td_share": 132, "v": [132, 183, 218, 225, 291, 295, 296], "state_dim": [133, 144, 149, 169, 172, 173, 187], "action_dim": [133, 144, 145, 147, 149, 169, 187, 295, 300], "gsde": [133, 223, 287], "func": 133, "gsdemodul": 133, "check_dtyp": 134, "short": [134, 296, 297, 301], "discrep": [134, 206, 208, 209, 210, 219, 222, 224, 233], "imposs": 134, "probabilistictdmodul": [139, 140, 158, 193, 197, 234, 267], "next_tensordict": 141, "keep_oth": [141, 302], "exclude_reward": 141, "exclude_don": 141, "exclude_act": 141, "next_": 141, "funtion": [141, 302], "cross": 142, "entropi": [142, 206, 207, 208, 212, 218, 219, 221, 222, 223, 225, 227, 301], "botev": 142, "et": 142, "al": [142, 307], "2013": 142, "cem": 142, "plan": [142, 159, 160], "varianc": [142, 155, 165, 177, 178, 292, 295, 297, 301], "rank": 142, "k": 142, "repeat": [142, 297, 301, 302], "maximis": [142, 145, 147, 160, 291, 295, 296, 297, 301, 302], "horizon": [142, 160, 297], "modelbasedenv": [142, 160], "planning_horizon": [142, 160], "optim_step": [142, 160, 296], "mpc": [142, 159, 160], "num_candid": [142, 160], "candid": [142, 160], "top_k": [142, 160], "modelbasedenvbas": [142, 159, 160, 289], "safemodul": [142, 159, 183, 185, 197, 206, 207, 212, 218, 222, 223, 224, 225, 227, 276, 277, 283, 289, 306], "next_hidden_observ": 142, "num_cel": [143, 145, 146, 147, 148, 153, 154, 156, 158, 162, 183, 296, 297, 298, 301, 306], "elu": [143, 145, 146, 147, 148, 153, 154, 296, 306], "activation_kwarg": [143, 158], "norm_class": [143, 145, 146, 158], "norm_kwarg": [143, 158], "bias_last_lay": [143, 145, 146, 147, 148, 154, 158], "aggregator_class": [143, 145, 146, 296, 298, 306], "squashdim": [143, 145, 306], "aggregator_kwarg": [143, 145, 146, 296, 298], "squeeze_output": [143, 145, 146, 296, 298], "convolut": [143, 145, 146, 174], "neural": [143, 174, 196, 291, 296, 297, 298, 301, 302, 307], "produc": [143, 158, 162, 168, 183, 185, 187, 254, 297, 298, 304, 307], "cell": [143, 158, 162, 297], "kernel": [143, 154, 157], "device_typ": [143, 144, 145, 146, 147, 148, 154, 158, 163, 164, 169], "cnet": 143, "34": [143, 158, 295, 296, 302, 305, 307], "35": [143, 158, 295, 296, 301, 302, 303], "rectangular": 143, "transformer_config": [144, 169, 187], "decisiontransform": [144, 169], "dtconfig": [144, 149, 169], "2202": [144, 149, 169, 221], "05607": [144, 149, 169, 221], "return_to_go": [144, 149, 169, 187], "conv_net_kwarg": [145, 146], "mlp_net_kwarg": [145, 146, 147], "use_avg_pool": [145, 146], "WITH": [145, 146, 147, 148, 192, 226], "1509": [145, 146, 147, 148, 160, 192, 217, 226, 302], "02971": [145, 146, 147, 148, 192, 226], "convnet": [145, 298, 306], "ndims_in": 145, "avgpool": [145, 146], "adaptiveavgpool2d": [146, 296, 298], "400": [147, 148, 301, 302, 304], "mlp_net_kwargs_net1": 148, "mlp_net_kwargs_net2": 148, "decion": 149, "desdescrib": 149, "n_embd": 149, "n_layer": 149, "n_head": 149, "n_inner": 149, "n_posit": 149, "resid_pdrop": 149, "attn_pdrop": 149, "gpt2config": 149, "atol": [150, 176], "06": [150, 176, 296, 302, 303], "rtol": [150, 176], "batch_shap": [150, 176], "event_shap": [150, 176], "absolut": [150, 176, 295], "densiti": [150, 161, 168, 178], "mass": [150, 161, 168, 178, 302], "rsampl": [150, 168, 197], "sample_shap": [150, 161, 168], "dqnet": 151, "atom": 151, "softmax": [151, 188, 189], "action_spac": [152, 171, 188, 189, 194, 195, 206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 298], "var_num": [152, 171, 188, 189, 195], "action_value_kei": [152, 171, 189, 194, 195, 220, 233], "perspect": [152, 189, 213, 297], "1707": [152, 189, 213, 222], "06887": [152, 189, 213], "mult": [152, 162, 171, 188, 189, 194, 195], "functional_modul": [152, 171, 194, 196, 199, 291], "make_funct": [152, 171, 193, 194, 196, 199, 201, 220, 291, 306], "tensordict_modul": [152, 171, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 209, 212, 218, 222, 223, 224, 225, 227, 291], "nbin": [152, 188, 291], "customdistributionalqv": 152, "log_softmax": [152, 188], "one_hot": [152, 171], "qvalue_actor": [152, 171, 188, 194, 291], "std_bia": 153, "std_min_val": 153, "belief": [153, 166, 172, 173], "1912": [153, 214, 215, 216], "01603": [153, 214, 215, 216], "softplu": [153, 165, 203, 204, 205], "out_features_valu": 154, "cnn_kwarg": [154, 296], "mlp_kwarg": [154, 157, 296], "duel": 154, "cnn": [154, 296, 306], "06581": 154, "512": [154, 296, 302, 304], "upscal": [155, 177, 178], "tanh_loc": [155, 177, 178], "event_dim": [155, 176, 177], "ultim": [155, 177, 178], "poor": [155, 177, 178], "explos": [155, 177, 178], "switch": [155, 178], "sigma": [155, 169, 177, 178, 186, 192, 297], "formula": [155, 177, 178, 206, 208, 219, 222, 292, 297], "embedd": [156, 157], "lstmcell": 156, "correspont": 156, "input_s": [156, 157, 298], "hidden_s": [156, 157, 298], "num_lay": [156, 166, 167], "b_ih": 156, "b_hh": 156, "introduc": [156, 192, 295], "proj_siz": 156, "recurrent_state_h": [156, 298], "recurrent_state_c": [156, 298], "triplet": [156, 194, 195], "custom_kei": 156, "temporal_mod": 156, "set_temporal_mod": 156, "tensordictsequenti": [156, 188, 198, 291, 295, 298, 300, 303, 306], "seq": [156, 298, 300], "lstm_modul": 156, "rs_h": 156, "rs_c": 156, "set_recurrent_mod": [156, 298], "batch_first": [156, 298], "hidden0": 156, "hidden1": 156, "policy_infer": 156, "policy_train": 156, "traj_td": 156, "td_inf": 156, "assert_clos": 156, "lstm_kwarg": 157, "next_observ": [157, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 300], "time_step": 157, "2d": [157, 301], "hidden0_in": 157, "hidden1_in": 157, "hidden0_out": 157, "hidden1_out": 157, "single_bias_last_lay": 158, "layer_class": 158, "layer_kwarg": 158, "perceptron": 158, "seamless": 158, "lazylinear": [158, 291, 297, 302, 303, 306], "42": [158, 206, 207, 209, 218, 225, 296, 301, 302], "noisylinear": [158, 163, 289, 296], "noisylazylinear": [158, 289], "At": [159, 296, 297, 298, 300, 302, 303], "mpcplanner": 159, "tensordict_out": [159, 307], "mppi": 160, "covari": 160, "william": [160, 224], "aldrich": 160, "theodor": 160, "01149": 160, "hansen": 160, "wang": 160, "su": 160, "04955": 160, "valueoper": [160, 183, 184, 185, 206, 207, 208, 209, 212, 218, 219, 222, 223, 224, 225, 227, 283, 291, 295, 297], "tdlambdaestim": [160, 289, 295], "value_net": [160, 210, 224, 235, 236, 237, 238, 297], "adv": 160, "lmbda": [160, 229, 235, 238, 240, 246, 247, 248, 251, 252, 292, 295, 297, 301], "95": [160, 229, 295, 296, 297, 298, 302], "value_network": [160, 209, 210, 213, 218, 225, 235, 236, 237, 238, 292, 295, 297], "temperatur": [160, 207, 218], "neg_inf": 161, "inf": 161, "padding_valu": 161, "www": 161, "api_doc": 161, "tf_agent": 161, "event": [161, 168, 244, 245, 246, 247, 249, 250, 251, 252, 304], "unnorm": [161, 168], "sparse_mask": 161, "dens": 161, "1203": 161, "0928": 161, "0831": 161, "ones_lik": 161, "1972": 161, "n_agent_input": [162, 301], "n_agent_output": [162, 301], "centralis": [162, 301], "share_param": [162, 301], "multiag": [162, 170, 179, 233], "homogen": [162, 301], "toech": 162, "agent_network": 162, "modulelist": [162, 280, 306], "centalis": 162, "shown": [162, 291, 300, 301, 304], "std_init": [163, 164], "matrix": [163, 164], "initialize_paramet": 163, "isol": 163, "1706": [164, 179], "10295v3": 164, "induc": 164, "aid": 164, "scale_map": 165, "biased_softplus_1": 165, "scale_lb": [165, 172, 173], "exp": [165, 205], "module_norm": 165, "channel": [166, 167, 296], "decod": 166, "1803": [166, 167, 170], "10122": [166, 167], "rnn_hidden": 166, "latent": 167, "excacli": 168, "inres": 169, "mu": [169, 192, 297], "state_shap": [170, 233], "mixing_embed_dim": [170, 233], "qmix": [170, 301], "mixer": [170, 179, 233], "monoton": 170, "hyper": 170, "11485": 170, "qmixerloss": [170, 179], "qmix_vdn": [170, 179], "eventu": [170, 298, 302], "vdn": [170, 179], "greedi": [171, 189, 190, 195, 296, 298], "hidden_dim": [172, 173], "posterior": [172, 215], "rssm": [172, 173, 215], "1811": [172, 173], "04551": [172, 173], "obs_embed": 172, "rnn_hidden_dim": 173, "dream": 173, "tanhtransform": 177, "decomposit": 179, "05296": 179, "vmap": [180, 196, 199, 306], "hide": [180, 297, 301], "satisfi": [180, 291], "tensordictmodulebas": [180, 194, 298], "vmap_dim": 180, "lam": 180, "sample_in": 180, "sample_in_td": 180, "vm": 180, "translat": [182, 193], "character": [182, 188, 193, 194, 196, 304], "overflow": [182, 188, 189, 193, 194, 195, 196, 197], "td_modul": [182, 183, 184, 185, 193, 196, 197, 199, 201, 306], "3635": 182, "0340": 182, "1476": 182, "3911": [182, 302], "1664": [182, 296, 302], "5455": 182, "2247": 182, "4583": 182, "2916": 182, "2160": 182, "5337": 182, "5193": 182, "grad_fn": [182, 190, 306], "addmmbackward0": 182, "actorvalueoper": [183, 291], "get_policy_oper": [183, 184, 185, 208, 219, 222, 291], "standalon": [183, 184, 185], "tdmodul": [183, 184, 185, 283], "get_critic_oper": 183, "common_oper": [183, 185], "policy_oper": [183, 184, 185], "value_oper": [183, 184, 185], "normalparamwrapp": [183, 184, 185, 193, 199, 206, 207, 212, 218, 222, 223, 224, 225, 227, 289, 306], "module_hidden": [183, 185], "td_module_hidden": [183, 185], "module_act": [183, 185], "td_module_act": [183, 184, 185], "module_valu": [183, 184, 185], "td_module_valu": [183, 184, 185], "state_action_valu": [183, 201, 207, 225, 234, 280, 283, 291, 295, 306], "td_clone": [183, 184, 185], "tensordictmodulewrapp": [183, 276, 277, 283], "get_policy_head": [183, 184, 185], "safesequenti": [183, 184, 185, 233], "head": [183, 185, 208, 219, 222], "get_value_head": [183, 184, 185], "get_value_oper": [183, 184, 185, 208, 219, 222], "action_modul": 184, "state_valu": [184, 185, 201, 208, 219, 222, 223, 225, 235, 236, 237, 238, 240, 242, 244, 246, 248, 249, 251, 291, 295, 297, 301], "qualiti": [185, 291], "actorcriticoper": [185, 208, 219, 222, 291], "embeddig": 185, "refet": 185, "actorcriticwrapp": [185, 291, 295], "po": [186, 190], "sigma_init": 186, "epsilon": [186, 190, 192, 226, 269, 296, 297, 298], "sigma_end": 186, "annealing_num_step": [186, 190, 192, 295, 296, 298], "captur": [186, 190, 192], "omiss": [186, 190, 192], "warn": [186, 190, 192, 296, 307], "ommit": [186, 190, 192, 304], "inferec": 187, "set_tensor_kei": 187, "dt_inference_wrapp": 187, "baz": 187, "inference_context": 187, "obs_dim": 187, "15": [187, 192, 214, 295, 296, 302, 304, 305], "tanhdelta": [187, 289, 295], "dtactor": 187, "actor_modul": [187, 306], "dist_class": 187, "dist_kwarg": 187, "distribution_kwarg": [187, 193, 197, 297, 301], "inference_actor": 187, "sequence_length": 187, "mask_context": 187, "qvaluemodul": [188, 194, 233, 298], "distributionaldqnnet": 188, "make_log_softmax": 188, "my_action_valu": [189, 195], "chanc": 189, "thid": 189, "eps_init": [190, 192, 296, 298], "eps_end": [190, 192, 296], "explorative_polici": [190, 192], "9055": [190, 302], "9277": 190, "6295": 190, "2532": 190, "addbackward0": 190, "lmheadmodel": 191, "extract": [191, 295, 297], "actor_head": [191, 208, 219, 222], "base_model": 191, "lm_head": 191, "ornstein": 192, "uhlenbeck": 192, "ou": [192, 295], "auto": [192, 207, 212, 221, 223, 225, 227, 292, 301], "correl": 192, "sort": 192, "noise_t": 192, "noise_": 192, "theta": [192, 297, 302], "sigma_t": 192, "sqrt": 192, "sigma_": 192, "anneal": 192, "ou_prev_nois": 192, "ou_step": 192, "increas": [192, 301], "x0": 192, "sigma_min": 192, "n_steps_ann": 192, "is_init_kei": 192, "_ou_prev_nois": 192, "_ou_step": 192, "default_interaction_typ": [193, 197], "interaction_typ": [193, 197], "set_interaction_typ": [193, 197], "cache_dist": [193, 197], "n_empirical_estim": [193, 197], "chose": 195, "functionalmodul": 196, "functionalmodulewithbuff": 196, "grucel": 196, "td_fmodul": 196, "td_function": 196, "td_state": 196, "ensembl": [196, 223], "params_repeat": 196, "td_vmap": [196, 199], "random_sampl": [196, 197], "suppli": 197, "fist": 197, "log_prob_kei": [197, 301], "probabilistictensordictsequenti": [198, 206, 208, 219, 222, 224, 276, 277, 306], "partial_toler": [198, 199, 300], "who": [198, 199], "AND": [198, 199], "tensordictsequenci": 199, "tensordictsequ": 199, "safeprobabilisticmodul": [199, 291], "spec1": 199, "net1": 199, "module1": 199, "td_module1": 199, "spec2": 199, "module2": 199, "td_module2": 199, "clamp": [200, 215, 271, 302], "boundari": [200, 297, 301], "resolut": 200, "simplest": [200, 295, 297, 298, 301, 304, 307], "9944": 200, "9991": 200, "3020": 200, "2299": [200, 302], "5418": 200, "2989": 200, "6849": 200, "3169": 200, "2690": 200, "9649": [200, 302], "5686": 200, "8602": 200, "0315": 200, "8455": [200, 302], "6027": 200, "4746": 200, "7843": 200, "7782": 200, "2111": 200, "5115": 200, "4687": 200, "5760": 200, "custommodul": 201, "cat": [201, 207, 209, 218, 223, 225, 227, 306], "imaginari": 202, "imagin": 202, "transition_model": 202, "get_reward_oper": 202, "get_transition_model_oper": 202, "min_val": [203, 205], "bias": [203, 292, 295], "_bia": 203, "invert": [204, 297], "surject": 205, "expln": 205, "biased_softplu": [205, 289], "beggin": 205, "biased_softplus_": 205, "syntax": [205, 295], "met": [205, 302], "1602": 206, "01783v2": 206, "entropy_bonu": [206, 208, 219, 222, 297], "favour": [206, 208, 219, 222], "samples_mc_entropi": [206, 208, 219, 221, 222], "mont": [206, 208, 219, 222, 295], "carlo": [206, 208, 219, 222, 295], "entropy_coef": [206, 208, 219, 222, 297, 301], "critic_coef": [206, 208, 219, 222, 297], "loss_critic_typ": [206, 208, 219, 222, 224, 297], "l1": [206, 208, 209, 210, 212, 219, 222, 223, 224, 227, 230, 233, 291, 295], "l2": [206, 208, 209, 210, 211, 212, 215, 216, 219, 222, 223, 224, 227, 230, 233, 295], "smooth_l1": [206, 207, 208, 209, 210, 212, 218, 219, 222, 223, 224, 225, 227, 230, 233, 297], "separate_loss": [206, 208, 209, 212, 218, 219, 222, 223, 224, 225, 227], "propag": [206, 208, 209, 212, 218, 219, 222, 223, 224, 225, 227, 235, 236, 237, 238, 297, 301], "advantage_kei": [206, 208, 219, 222, 224, 235, 236, 237, 238], "value_target_kei": [206, 208, 219, 222, 224, 235, 236, 237, 238, 297], "value_target": [206, 208, 219, 222, 224, 235, 236, 237, 238, 297, 301], "loss_crit": [206, 222, 297, 301], "loss_entropi": [206, 222, 297, 301], "loss_object": [206, 222, 297, 301], "recur": [206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227, 235, 236, 237, 238, 239], "next_reward": [206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227], "next_don": [206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 227], "loss_obj": 206, "sacloss": [206, 217, 226, 289], "select_out_kei": [206, 207, 209, 212, 218, 222, 223, 225, 227], "throughout": [206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 297, 307], "essenti": [206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 233, 296, 302, 304], "make_value_estim": [206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 228, 233, 292, 295, 296, 301], "value_typ": [206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 229, 233, 295], "valueestim": [206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 229, 233, 289, 292, 295, 301], "hyperparam": [206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 295, 302], "enum": [206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 229, 233, 295], "default_value_estim": [206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 295], "refin": [206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233], "default_value_kwarg": [206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 233, 289, 295], "dqnloss": [206, 207, 209, 212, 213, 214, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 233, 278, 289, 292, 296, 298], "dqn_loss": [206, 207, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 227, 228, 233], "conserv": 207, "2006": [207, 302], "04779": 207, "actor_network": [207, 209, 211, 212, 218, 221, 223, 225, 227, 295], "qvalue_network": [207, 212, 218, 223, 225, 227], "loss_funct": [207, 209, 210, 211, 212, 218, 223, 225, 227, 230, 233, 295], "alpha_init": [207, 212, 221, 223, 225], "min_alpha": [207, 212, 221, 223, 225], "max_alpha": [207, 212, 221, 223, 225], "fixed_alpha": [207, 212, 221, 223, 225], "target_entropi": [207, 212, 221, 223, 225], "prod": [207, 221, 225], "n_action": [207, 210, 221, 225], "delay_actor": [207, 209, 225, 227], "delay_qvalu": [207, 212, 223, 225, 227], "min_q_weight": 207, "max_q_backup": 207, "backup": 207, "deterministic_backup": 207, "num_random": 207, "with_lagrang": 207, "lagrang": 207, "lagrange_thresh": 207, "threshold": [207, 208, 297], "valueclass": [207, 209, 212, 218, 223, 225, 227], "qvalu": [207, 212, 218, 223, 225, 227, 280], "loss_actor": [207, 209, 212, 218, 223, 224, 225, 227, 266, 295, 306], "loss_alpha": [207, 212, 223, 225], "loss_alpha_prim": 207, "loss_qvalu": [207, 212, 218, 223, 225, 227], "clip_epsilon": [208, 297, 301], "normalize_advantag": [208, 219, 222, 301], "value_kei": [208, 219, 222, 235, 236, 237, 238, 295], "somemodul": [208, 219, 222], "someactor": [208, 219, 222], "value_head": [208, 219, 222], "somevalu": [208, 219, 222], "loss_modul": [208, 217, 219, 220, 222, 226, 271, 282, 283, 292, 293, 295, 296, 297, 301, 304], "ppoloss": [208, 219, 289], "delay_valu": [209, 210, 213, 224, 225, 233, 296, 298], "loss_valu": [209, 218, 224, 225, 295, 297, 301, 306], "pred_valu": [209, 227, 295, 306], "pred_value_max": [209, 295, 306], "target_valu": [209, 223, 227, 234, 292, 295, 306], "target_value_max": [209, 295, 306], "qvalueactor": [210, 233, 291, 296, 298], "mult_one_hot": [210, 212, 233], "binarydiscretetensorspec": [210, 212, 233, 289], "loss_val": [210, 292, 295, 297, 298, 301, 304], "2106": 211, "01345": 211, "ste": 212, "num_qvalue_net": [212, 218, 223, 225, 227], "target_entropy_weight": 212, "onehotcategor": [212, 289], "disctount": 213, "distributionalqvalueactor": [213, 291], "input_tensordict": [213, 295], "actor_model": 214, "value_model": [214, 216], "model_based_env": 214, "dreamerenv": [214, 289], "imagination_horizon": 214, "unrol": [214, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252], "discount_loss": [214, 216], "lambda_kl": 215, "lambda_reco": 215, "lambda_reward": 215, "reco_loss": 215, "reward_loss": 215, "free_nat": 215, "nat": 215, "delayed_clamp": 215, "global_averag": 215, "value_loss": 216, "fake_data": 216, "ddpgloss": [217, 226, 283, 289, 295, 306], "td3loss": [217, 226, 289], "value_network_update_interv": 217, "contrast": [217, 304], "06461": 217, "2110": 218, "06169": 218, "expectil": 218, "tau": [218, 226, 295, 296], "antmaz": 218, "sticht": 218, "loss_value_diff": 218, "diff": 218, "old_polici": 219, "new_polici": 219, "adapt": [219, 295, 302], "old": [219, 307], "distanc": [219, 230, 234, 235, 301], "apart": [219, 301], "dtarg": 219, "samples_mc_kl": 219, "analyt": 219, "decrement": 219, "loss_": [220, 266, 292, 295], "equip": [220, 298], "gh": 220, "_acceptedkei": 220, "dataclass": [220, 280], "_forward_value_estimator_kei": 220, "alter": [220, 291], "value_estim": [220, 235, 236, 237, 238, 239, 292, 295, 301], "myloss": 220, "action2": 220, "convert_to_funct": [220, 295], "expand_dim": 220, "create_target_param": [220, 295], "compare_against": [220, 295], "funs_to_decor": 220, "stuctur": 220, "_param": 220, "expans": 220, "resampl": 220, "_target_param": 220, "valueestimatorbas": [220, 289], "blend": 220, "upcom": [220, 244, 245, 246, 247, 249, 250, 251, 252, 295], "proxim": [222, 297, 301], "optimis": [222, 267, 297, 301], "flavour": [222, 301, 306], "clipppoloss": [222, 289, 297, 301], "klpenppoloss": [222, 289], "regularis": 222, "06347": 222, "gae": [222, 289, 292, 295, 297, 301], "ppo_loss": 222, "tdlambda": [222, 229, 292, 295], "base_lay": 222, "randn_lik": 222, "samplelogprob": 222, "openreview": [223, 280], "ay8zfzm0tdd": [223, 280], "sub_sample_len": 223, "subsampl": [223, 262, 293], "action_log_prob_actor": 223, "state_action_value_actor": [223, 227], "connectionist": 224, "1992": 224, "doi": 224, "1007": 224, "bf00992696": 224, "actor_net": [224, 295, 297], "1801": 225, "01290": 225, "applic": [225, 233, 302], "1812": 225, "05905": 225, "redqloss": [226, 289], "math": 226, "theta_t": [226, 302], "theta_": [226, 302], "polyak": 226, "policy_nois": 227, "noise_clip": 227, "next_state_valu": [227, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 289], "td0": [228, 295], "v2": [230, 244, 245, 246, 247, 249, 250, 251, 252, 280], "strict_shap": 230, "view_a": 230, "qmixer": [233, 289], "local_valu": 233, "visibl": [233, 301], "dafault": 233, "acceptedkei": 233, "global_valu": 233, "premad": 233, "penultim": 233, "local_value_network": 233, "mixer_network": 233, "suggest": [233, 301], "value_modul": [233, 297, 306], "qnet": [233, 295], "next_val_kei": 234, "pred_next_v": 234, "usus": 234, "mse": 234, "q_valu": 234, "n_steps_to_next": 234, "value_next_st": 234, "1506": [235, 240, 248], "02438": [235, 240, 248], "exponenti": [235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 269], "average_ga": [235, 297], "skip_exist": [235, 236, 237, 238], "advang": 235, "gradient_mod": 235, "value_error": [235, 236, 237, 238, 239], "sign": 235, "unused_arg": 235, "target_param": [235, 236, 237, 238, 239, 295, 301], "98": [235, 236, 237, 238, 296, 302], "94": [235, 238, 296, 302], "unpack": [235, 236, 237, 238], "tensor_kei": [235, 236, 237, 238, 239], "next_valu": [235, 236, 237, 238, 239], "aka": [236, 296], "average_reward": [236, 237, 238], "tdestim": [236, 237, 239], "infti": 237, "valuefunctionbas": 239, "time_dim": [240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252], "old_stat": [240, 242, 244, 246, 248, 249, 251], "new_stat": [240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "rolling_gamma": [244, 245, 246, 247, 249, 250, 251, 252], "g1": [244, 245, 246, 247, 249, 250, 251, 252], "g2": [244, 245, 246, 247, 249, 250, 251, 252], "g3": [244, 245, 246, 247, 249, 250, 251, 252], "g4": [244, 245, 246, 247, 249, 250, 251, 252], "v3": [244, 245, 246, 247, 249, 250, 251, 252], "v4": [244, 245, 246, 247, 249, 250, 251, 252, 295, 297, 303], "out_file_bas": 253, "skip_reset": 253, "dump": 253, "interv": [253, 254, 263, 273, 296, 302], "center_crop": 254, "make_grid": 254, "Will": 254, "grid": 254, "exp_nam": [255, 256, 259, 260, 261, 283, 296], "log_dir": [255, 256, 258, 260, 296], "templat": 255, "csv": [256, 258, 296], "minim": [256, 304], "dependeci": 256, "experiment_nam": [257, 258], "uuid": [257, 296, 307], "date": 257, "logger_typ": 258, "logger_nam": 258, "tensorboard": [258, 260, 306], "wandb": [258, 261, 306], "mlflow": [258, 259], "wandb_kwarg": 258, "mlflow_kwarg": 258, "tracking_uri": 259, "uri": 259, "datastor": 259, "tb_log": 260, "tensoarboard": 260, "sub_traj_len": 262, "min_sub_traj_len": 262, "register_op": [262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 293, 296], "process_optim_batch": [262, 268, 269, 293], "td_out": [262, 270], "_process_optim_batch_hook": [262, 293], "batch_subsampl": 262, "clear_cuda": 263, "pre_optim_step": [263, 293], "counter": [264, 293], "log_pbar": [264, 265, 267, 269, 293, 296], "progress": [264, 265, 267, 271, 293, 296, 298, 307], "count_fram": 264, "pre_steps_log": [264, 265, 293], "count_frames_log": 264, "lognam": 265, "r_train": [265, 296], "log_reward": [265, 296], "loss_compon": 266, "appl": 266, "omit": [266, 297, 302, 304], "optimizer_hook": 266, "record_interv": [267, 295, 296], "record_fram": [267, 274, 295, 296], "policy_explor": [267, 283, 295, 296], "log_kei": [267, 296], "suffix": 267, "underestim": 267, "suppos": [267, 293, 307], "set_exploration_typ": [267, 289, 297, 298, 306], "r_evalu": [267, 295], "flatten_tensordict": [268, 296], "max_dim": 268, "rb_trainer": 268, "batch_process": [268, 269, 270, 293], "post_loss": [268, 293], "999": [269, 296], "jitter": 269, "finfo": 269, "default_dtyp": 269, "get_default_dtyp": 269, "reward_norm": 269, "update_reward_stat": 269, "normalize_reward": 269, "make_train": [270, 289], "_process_batch_hook": [270, 293], "select_kei": [270, 293], "versatil": 271, "lossmodul": [271, 282, 283, 289], "optim_steps_per_batch": [271, 293, 296], "epoch": [271, 297, 301], "clip_grad_norm": 271, "partial": [271, 298], "clip_norm": 271, "progress_bar": 271, "tqdm": [271, 295, 297, 298, 301, 302], "save_trainer_interv": 271, "disk": [271, 293, 295, 296, 298, 304], "log_interv": [271, 296], "save_trainer_fil": [271, 293], "datacollectorbas": [273, 276, 277, 283, 289], "update_weights_interv": [273, 296], "sit": [273, 296], "update_weight": 273, "post_step": [273, 293], "cfg": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287], "dictconfig": [274, 275, 276, 277, 280, 281, 282, 283, 284, 287], "divid": [274, 291, 295, 301, 302], "unknowingli": 274, "annealing_fram": [274, 295], "init_env_step": [274, 275, 295], "proof_environ": [275, 280, 295], "sta": 275, "ot": 275, "actor_model_explor": [276, 277, 295], "make_env_kwarg": [276, 277], "targetnetupdat": [278, 279, 282, 283], "redqloss_deprec": 279, "actor_net_kwarg": 280, "qvalue_net_kwarg": 280, "observation_kei": 280, "dummi": [280, 295, 307], "parser_env_arg": 280, "parser_model_args_continu": 280, "cattensor": [280, 295, 300, 302, 307], "hydra": 280, "config_stor": 280, "configstor": 280, "halfcheetah": [280, 295], "config_field": 280, "config_cl": 280, "redqmodelconfig": 280, "envconfig": 280, "make_dataclass": 280, "cls_name": 280, "cs": 280, "config_path": 280, "config_nam": 280, "17": [280, 295, 296, 297, 302, 303], "replayargsconfig": 281, "target_net_updat": [283, 295, 296], "constitu": 283, "learnt": [283, 295, 297], "tensorboardlogg": [283, 289], "egreedywrapp": [283, 296, 298], "env_proof": 283, "obs_spec": 283, "net_valu": 283, "dir": [283, 293, 296], "gettempdir": 283, "argpars": [284, 287], "namespac": [284, 287], "parser": [284, 287], "transformed_env_constructor": [284, 289], "num_env_per_collector": [285, 286], "video_tag": 287, "norm_obs_onli": 287, "use_env_cr": 287, "custom_env_mak": 287, "custom_env": 287, "return_transformed_env": 287, "action_dim_gsd": 287, "state_dim_gsd": 287, "obs_norm_state_dict": 287, "wheter": 287, "maker": 287, "asyncdatacollector": 289, "distributedsyncdatacollector": 289, "submitit_delayed_launch": 289, "raycollector": 289, "samplerwithoutreplac": [289, 297, 301, 304], "tensorstorag": 289, "tensordictroundrobinwrit": 289, "d4rlexperiencereplai": 289, "openmlexperiencereplai": 289, "unboundeddiscretetensorspec": [289, 297, 307], "lazystackedtensorspec": 289, "lazystackedcompositespec": 289, "prompttensordicttoken": 289, "rolloutfrommodel": 289, "tokenizeddatasetload": 289, "create_infinite_iter": 289, "consolidate_spec": 289, "check_no_exclusive_kei": 289, "contains_lazy_spec": 289, "tensordictrecord": 289, "videorecord": [289, 297], "get_available_librari": 289, "set_exploration_mod": 289, "make_composite_from_td": [289, 302], "braxwrapp": 289, "dmcontrolenv": [289, 295, 300, 307], "dmcontrolwrapp": 289, "mogymenv": 289, "mogymwrapp": 289, "jumanjienv": 289, "jumanjiwrapp": 289, "openmlenv": 289, "vmaswrapp": 289, "qvaluehook": 289, "distributionalqvaluehook": 289, "reset_nois": 289, "cemplann": 289, "mpcplannerbas": 289, "mppiplann": 289, "independentnorm": 289, "truncatednorm": 289, "maskedcategor": 289, "inv_softplu": 289, "vmapmodul": 289, "distributionaldqnloss": [289, 296], "discretesacloss": 289, "iqlloss": 289, "cqlloss": 289, "dtloss": 289, "onlinedtloss": 289, "a2closs": 289, "reinforceloss": 289, "dreameractorloss": 289, "dreamermodelloss": 289, "dreamervalueloss": 289, "td0estim": [289, 295], "td1estim": [289, 295], "td0_return_estim": 289, "td0_advantage_estim": 289, "td1_return_estim": 289, "vec_td1_return_estim": 289, "td1_advantage_estim": 289, "vec_td1_advantage_estim": 289, "td_lambda_return_estim": 289, "vec_td_lambda_return_estim": 289, "td_lambda_advantage_estim": 289, "vec_td_lambda_advantage_estim": 289, "generalized_advantage_estim": 289, "vec_generalized_advantage_estim": 289, "reward2go": 289, "distance_loss": [289, 295], "hold_out_net": 289, "hold_out_param": [289, 295], "softupd": [289, 295, 296, 298], "hardupd": [289, 295], "batchsubsampl": [289, 293], "clearcudacach": 289, "countframeslog": 289, "logreward": [289, 293, 296], "optimizerhook": [289, 296], "replaybuffertrain": [289, 293, 296], "rewardnorm": 289, "selectkei": [289, 293], "trainerhookbas": [289, 293, 296], "updateweight": [289, 293, 296], "make_collector_offpolici": 289, "make_collector_onpolici": 289, "make_dqn_loss": 289, "make_redq_loss": 289, "make_redq_model": 289, "make_replay_buff": [289, 295], "make_target_updat": 289, "parallel_env_constructor": [289, 295], "sync_async_collector": 289, "sync_sync_collector": 289, "correct_for_frame_skip": 289, "get_stats_random_rollout": 289, "csvlogger": [289, 296], "mlflowlogg": 289, "wandblogg": 289, "get_logg": 289, "generate_exp_nam": 289, "journei": 290, "textbook": 290, "highlight": 290, "ever": [290, 301], "bump": 290, "think": [290, 297, 301, 307], "benefit": [290, 301, 304], "pr": 290, "ground": [291, 295, 302], "categori": [291, 293], "recycl": [291, 304], "impos": 291, "violat": 291, "noisier": 291, "Their": [291, 301], "sd": 291, "prob_modul": 291, "pick": [291, 295, 296], "tabl": [291, 296], "customari": 291, "hopefulli": [291, 296], "mathbb": [291, 296], "rightarrow": [291, 296], "soften": 291, "backbon": [291, 298, 300, 306], "make_actor": 291, "make_valu": 291, "shared_param": 291, "make_common": 291, "reusabl": [292, 295, 304], "swappabl": [292, 295], "characterist": [292, 295, 302], "trainabl": [292, 295, 303], "whatev": [292, 295], "convent": [292, 295, 298, 301, 302], "smth": [292, 295], "metric": [292, 295], "nutshel": [292, 295], "barto": [292, 301], "chapter": 292, "proxi": 292, "significantli": [292, 295, 296, 301], "next_stat": 292, "value_net_loss": 292, "pow": [292, 295], "therebi": 292, "room": 292, "convers": 292, "signifi": [292, 301], "underperform": 292, "thin": 292, "intric": 292, "outer": [293, 295, 296, 307], "believ": 293, "scheme": [293, 307], "substenti": 293, "_pre_steps_log_hook": 293, "_pre_optim_hook": 293, "sub_batch": 293, "_post_loss_hook": 293, "_post_optim_hook": 293, "post_optim": [293, 296], "_post_optim_log": 293, "post_optim_log": 293, "_post_steps_hook": 293, "_post_steps_log_hook": 293, "post_steps_log": 293, "comment": [293, 296, 306], "extens": [293, 304], "reserv": 293, "logginghook": 293, "logging_hook": 293, "save_dict": 293, "some_valu": 293, "torchsnapshot": 293, "ckpt_backend": 293, "pt": [293, 303], "filepath": 293, "save_train": 293, "load_from_fil": 293, "perfectli": [293, 295, 302], "intern": 294, "author": [295, 296, 297, 298, 301, 302, 304], "vincent": [295, 296, 297, 298, 302, 304], "moen": [295, 296, 297, 298, 302, 304], "assembl": 295, "focus": 295, "straightforward": [295, 296, 304], "overview": [295, 297, 301, 306], "transpar": [295, 298], "understood": 295, "sota": [295, 296, 306], "illustr": [295, 296, 304], "device_count": [295, 296, 298, 303, 307], "loss_dict": 295, "modal": 295, "oblivi": [295, 297, 304], "elementari": 295, "didact": 295, "dilut": 295, "pessimist": [295, 296, 297], "target_actor_network_param": 295, "actor_in_kei": 295, "actor_crit": 295, "noth": [295, 297], "compromis": 295, "hp": 295, "hasattr": 295, "_value_estim": 295, "elif": [295, 296], "notimplementederror": 295, "unknown": 295, "_loss_actor": 295, "td_copi": 295, "actor_network_param": 295, "value_network_param": 295, "_loss_valu": 295, "pred_val": 295, "target_value_network_param": 295, "smooth": [295, 296], "loss_funt": 295, "glue": 295, "_forward": 295, "ndimens": 295, "remaind": 295, "focu": [295, 296, 297], "pixels_onli": [295, 296, 306, 307], "env_librari": 295, "env_task": 295, "env_arg": 295, "friendli": 295, "torchr": 295, "rescal": 295, "presum": 295, "leav": 295, "make_transformed_env": 295, "reward_sc": 295, "double_to_float_list": 295, "double_to_float_inv_list": 295, "marker": 295, "leverag": [295, 301, 307], "env_per_collector": 295, "transform_state_dict": 295, "make_t_env": 295, "parallel_env": [295, 306, 307], "adjust": [295, 301, 302], "seem": [295, 298], "cheat": 295, "10m": 295, "cautiou": 295, "deal": [295, 297, 301, 304], "magnitud": 295, "thousand": [295, 298], "get_env_stat": 295, "proof_env": 295, "5000": [295, 296, 297], "maxim": [295, 302], "recal": [295, 297], "ddpgmlpactor": 295, "ddpgmlpqnet": 295, "materi": 295, "ornsteinuhlenbeckprocesswrapp": 295, "make_ddpg_actor": 295, "q_net": 295, "moduless": 295, "sugges": 295, "1_000_000": [295, 298], "tight": 295, "10_000": [295, 297, 304], "traj_len": [295, 298], "make_record": 295, "recorder_obj": 295, "flavor": 295, "circular": 295, "buffer_s": [295, 296], "random_crop_len": 295, "prb": 295, "buffer_scratch_dir": 295, "temporari": 295, "dirrectori": 295, "trajecotri": 295, "25": [295, 296, 297, 302, 304, 305], "sampel": 295, "dataflow": 295, "ceil_div": 295, "utd": [295, 298], "update_to_data": 295, "realiz": 295, "_must_": 295, "001": [295, 302], "outdat": 295, "trick": [295, 296], "despit": 295, "adam": [295, 296, 297, 298, 301, 302], "optimizer_actor": 295, "lr": [295, 296, 297, 298, 301, 302], "weight_decai": [295, 296], "optimizer_valu": 295, "total_collection_step": 295, "pretti": [295, 304], "rewards_ev": 295, "collected_fram": 295, "pbar": [295, 297, 298, 301, 302], "r0": 295, "numel": [295, 297, 298, 303, 304], "current_fram": 295, "sampled_tensordict": 295, "gn1": 295, "clip_grad_norm_": [295, 297, 301, 302], "gn2": 295, "gn": [295, 302], "td_record": 295, "rn": 295, "rs": 295, "set_descript": [295, 297, 298, 301, 302], "2f": 295, "00": [295, 296, 297, 298, 301, 302, 303, 305], "800": [295, 296], "05": [295, 296, 297, 301, 302, 303], "1828": 295, "82it": 295, "1600": [295, 296], "02": [295, 296, 297, 302, 303, 305], "620": [295, 302], "79it": [295, 296, 302], "3200": [295, 296], "1304": 295, "98it": [295, 296, 302], "48": [295, 296, 298, 302, 303], "4800": [295, 296, 302], "1894": 295, "65it": [295, 296], "04": [295, 296, 301, 302, 303, 305], "90": [295, 296, 297, 301, 302], "39": [295, 296, 297, 298, 302, 303, 304], "09": [295, 296, 302], "57": [295, 296, 298, 302], "89": [295, 296, 302, 303, 304], "294": [295, 302], "61": [295, 296, 302, 303], "53": [295, 296, 302, 303], "56": [295, 296, 301, 302, 303], "5600": 295, "6400": [295, 306], "1158": 295, "21it": [295, 296], "68": [295, 296, 302, 303], "43": [295, 296, 298, 302, 303], "49": [295, 296, 301, 302, 303], "248": [295, 302], "86": [295, 296, 302], "72": [295, 296, 302, 303], "7200": 295, "502": [295, 302], "05it": [295, 296, 302], "84": [295, 296, 298, 302, 303], "07": [295, 296, 301, 302], "169": [295, 298, 302, 305], "80": [295, 296, 297, 301, 302], "8000": [295, 297], "480": [295, 296, 302, 303], "02it": [295, 296, 302], "65": [295, 296, 302, 303], "109": [295, 302], "88": [295, 296, 302, 304], "8800": 295, "427": [295, 302, 305], "91it": [295, 296], "69": [295, 296, 302, 303], "91": [295, 296, 298, 302], "51": [295, 296, 300, 302, 304, 305], "211": [295, 302], "213": [295, 302], "76": [295, 296, 302, 303, 304], "73": [295, 296, 302, 303], "96": [295, 296, 302, 303, 304], "9600": 295, "334": [295, 302], "63it": [295, 296], "45": [295, 296, 302, 303], "63": [295, 296, 298, 302, 304], "216": [295, 302], "245": [295, 302], "82": [295, 296, 298, 302, 303], "22": [295, 296, 297, 298, 301, 302, 303, 305], "10400it": 295, "274": [295, 302], "92it": [295, 296, 302], "104": [295, 298, 302], "189": [295, 302], "plot": [295, 297, 298, 301, 302], "mention": [295, 298, 304, 307], "matplotlib": [295, 297, 298, 301, 302, 304, 307], "pyplot": [295, 297, 298, 301, 302, 304, 307], "plt": [295, 297, 298, 301, 302, 304, 307], "zip": [295, 299], "legend": 295, "xlabel": [295, 298, 301, 302], "ylabel": [295, 301], "tight_layout": 295, "concret": [295, 297], "takeawai": [295, 296], "minut": [295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "560": [295, 302, 305], "mb": [295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307], "coding_ddpg": [295, 305], "jupyt": [295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307], "ipynb": [295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307], "galleri": [295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307], "sphinx": [295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307], "customis": [296, 301], "road": 296, "aspect": 296, "did": [296, 297, 304, 307], "highest": 296, "prerequisit": 296, "familiar": [296, 301, 307], "lookup": 296, "amort": [296, 297], "cart": 296, "pole": 296, "un": 296, "actuat": 296, "frictionless": 296, "upright": [296, 307], "duelingcnndqnet": 296, "is_notebook": 296, "shell": 296, "get_ipython": 296, "__class__": 296, "zmqinteractiveshel": 296, "qtconsol": 296, "terminalinteractiveshel": 296, "ipython": [296, 301, 302], "nameerror": 296, "interpret": 296, "umbrella": 296, "misplac": 296, "misus": 296, "orchestr": 296, "everyth": [296, 298], "five": [296, 297], "64x64": 296, "motion": [296, 302], "obs_norm_sd": 296, "simpler": 296, "get_norm_stat": 296, "test_env": 296, "make_model": 296, "dummy_env": 296, "output_s": [296, 298], "init_bia": 296, "actor_explor": 296, "eps_greedy_v": 296, "eps_greedy_val_env": 296, "get_replay_buff": 296, "n_optim": 296, "themselv": 296, "simplic": [296, 297, 303, 304], "get_collector": 296, "data_collector": 296, "bunch": 296, "concept": [296, 304], "power": 296, "ubiquit": 296, "get_loss_modul": 296, "target_updat": 296, "995": [296, 302], "sensit": 296, "variat": 296, "2e": [296, 302], "wd": 296, "upd": 296, "harder": [296, 306], "5_000": 296, "500000": 296, "100000": 296, "005": 296, "mandatori": [296, 297, 301, 302], "fairer": 296, "budget": [296, 297], "dqn_exp_": 296, "uuid1": [296, 307], "9895": 296, "0737": 296, "tmp": [296, 304], "tmpd0jy3y_": 296, "dqn_exp_f1ad7316": 296, "4754": [296, 307], "11ee": [296, 307], "9a74": [296, 307], "0242ac120002": [296, 307], "registr": 296, "cumbersom": 296, "buffer_hook": 296, "weight_updat": 296, "descript": [296, 297], "aliv": 296, "09it": 296, "4045": 296, "9346": [296, 302], "88it": [296, 298, 302], "41it": [296, 297, 302], "3712": 296, "60it": 296, "4345": 296, "160": [296, 302, 307], "19it": 296, "4797": 296, "192": [296, 302, 304], "28": [296, 300, 301, 302, 303, 305], "12it": 296, "4526": 296, "224": [296, 302], "21": [296, 297, 300, 301, 302, 305], "69it": 296, "4948": 296, "59it": [296, 302], "4497": 296, "288": [296, 302], "30it": 296, "4314": 296, "320": [296, 302, 307], "41": [296, 298, 302, 303], "352": [296, 302], "08it": [296, 302], "384": [296, 302, 304, 305], "38it": [296, 302], "3952": 296, "416": [296, 302], "52": [296, 302, 303, 304], "67it": 296, "4375": [296, 302], "448": [296, 302], "54": [296, 298, 302, 303], "06it": [296, 302], "13it": 296, "19": [296, 297, 298, 302, 303], "544": [296, 302], "32it": 296, "4434": 296, "576": [296, 302], "85it": 296, "4254": [296, 302], "608": [296, 302], "80it": [296, 302], "640": 296, "90it": 296, "672": 296, "01it": [296, 302], "704": 296, "58": [296, 297, 302, 303], "47it": 296, "736": 296, "59": [296, 302, 303, 305], "52it": 296, "4676": 296, "768": 296, "22it": 296, "4586": 296, "73it": [296, 302], "832": 296, "4134": 296, "864": 296, "83it": 296, "4645": 296, "896": 296, "43it": [296, 297], "928": 296, "64it": [296, 297], "960": 296, "78it": 296, "992": [296, 302], "87it": [296, 302], "4224": 296, "1056": 296, "37it": [296, 298], "1088": 296, "1120": 296, "1152": 296, "54it": 296, "1184": 296, "96it": [296, 297, 302], "1216": 296, "31": [296, 302, 303], "1248": 296, "1280": 296, "40it": [296, 302], "1344": 296, "72it": [296, 302], "1376": 296, "1408": 296, "1440": 296, "27it": 296, "1472": 296, "55": [296, 302, 303], "1504": 296, "36": [296, 297, 302], "1536": 296, "61it": 296, "1568": 296, "37": [296, 297, 301, 302, 303, 304, 305], "25it": [296, 297], "26it": 296, "1632": 296, "56it": [296, 302], "1696": 296, "1728": 296, "40": [296, 297, 301, 302, 303, 304, 305], "1760": 296, "1792": 296, "1824": 296, "53it": 296, "1856": 296, "1888": 296, "24it": 296, "1920": 296, "35it": 296, "1952": 296, "18it": [296, 302], "1984": 296, "2016": 296, "93it": [296, 297, 302], "2048": [296, 303], "2080": 296, "51it": 296, "2112": [296, 302], "2144": 296, "47": [296, 302, 303], "2176": 296, "2208": 296, "2240": 296, "42it": 296, "2272": 296, "2304": 296, "2336": 296, "2368": 296, "2400": 296, "39it": 296, "2432": 296, "2464": 296, "2496": 296, "74it": 296, "2528": [296, 302], "2560": 296, "11it": 296, "2592": 296, "2624": 296, "2656": [296, 302], "29it": 296, "4524": 296, "2688": 296, "2720": [296, 302], "2752": 296, "2784": 296, "95it": [296, 302], "2816": 296, "3742": 296, "2848": 296, "2880": 296, "2912": 296, "2944": [296, 302], "62it": 296, "60": [296, 297, 301, 302, 303, 304, 306], "2976": [296, 302], "3008": 296, "3040": 296, "57it": 296, "3072": 296, "62": [296, 297, 302, 303], "3104": 296, "3136": 296, "66it": 296, "3168": 296, "49it": 296, "3232": [296, 302], "3333": 296, "3264": 296, "89it": [296, 302], "66": [296, 302], "3296": 296, "97it": [296, 302], "67": [296, 300, 302, 303, 304], "3328": 296, "3360": 296, "3392": 296, "3424": 296, "3456": [296, 302], "4104": 296, "70": [296, 297, 301, 302, 303], "3488": 296, "50it": 296, "3520": 296, "77it": 296, "71": [296, 302, 303], "3552": 296, "3584": 296, "3616": 296, "03it": [296, 298, 302], "3648": 296, "74": [296, 302, 303], "3680": 296, "75": [296, 302], "3744": 296, "3776": 296, "23it": 296, "3808": 296, "77": [296, 302, 304], "3840": 296, "3872": 296, "78": [296, 302, 303], "3904": 296, "81it": [296, 302], "79": [296, 302], "3936": 296, "3968": 296, "4000": [296, 297], "4032": 296, "4064": 296, "4096": 296, "71it": [296, 302], "83": [296, 302, 304], "4128": [296, 302], "4160": 296, "4192": 296, "85": [296, 302], "4256": [296, 302], "4288": [296, 302], "55it": 296, "4320": 296, "17it": [296, 302], "4352": 296, "4384": 296, "4416": 296, "4448": 296, "4480": 296, "4512": 296, "4544": 296, "10it": 296, "92": [296, 302, 303], "4576": 296, "44it": 296, "4608": 296, "93": [296, 302, 303], "4640": 296, "99it": [296, 302], "4672": [296, 302], "4704": 296, "4736": 296, "4768": 296, "97": [296, 302, 303], "4832": 296, "31it": 296, "4864": 296, "4896": 296, "4928": 296, "4960": 296, "14it": [296, 302], "4992": 296, "48it": 296, "5024it": 296, "quickli": [296, 301, 307], "print_csv_files_in_fold": 296, "folder_path": 296, "csv_file": 296, "output_str": 296, "dirpath": 296, "walk": [296, 300, 307], "endswith": 296, "strip": 296, "4044681489467621": 296, "42241954803466797": 296, "43136513233184814": 296, "45262259244918823": 296, "44965070486068726": 296, "4948333501815796": 296, "19799169898033142": 296, "17963804304599762": 296, "15383748710155487": 296, "24139295518398285": 296, "3612312078475952": 296, "5208035111427307": 296, "29907965660095215": 296, "3879074156284332": 296, "5331091284751892": 296, "grad_norm_0": 296, "9893126487731934": 296, "9064675569534302": 296, "4350346326828003": 296, "257754325866699": 296, "3871896266937256": 296, "4220967292785645": 296, "7427821159362793": 296, "790658950805664": 296, "70830774307251": 296, "10000000894069672": 296, "333333015441895": 296, "qvaluenetwork": 296, "worst": 296, "accuraci": 296, "fanci": 296, "458": [296, 302, 305], "691": [296, 305], "coding_dqn": [296, 305], "demonstr": [297, 301, 302, 307], "talk": 297, "repetit": 297, "six": 297, "sophist": [297, 301], "invent": 297, "theta_k": 297, "frac": 297, "pi_": 297, "exceed": 297, "discourag": [297, 302], "indispens": 297, "analyz": 297, "lingua": 297, "franca": 297, "defaultdict": [297, 302], "has_cuda": [297, 301, 307], "3e": [297, 298, 301], "max_grad_norm": [297, 301], "big": [297, 304, 307], "ourselv": [297, 307], "benefici": 297, "errat": 297, "hamper": [297, 304], "reactiv": 297, "xy": 297, "sub_batch_s": 297, "num_epoch": [297, 301], "entropy_ep": [297, 301], "generalist": 297, "interchang": [297, 303, 304], "panel": 297, "charact": 297, "inverteddoublependulum": 297, "transmit": 297, "stai": 297, "thumb": 297, "supplementari": [297, 307], "told": 297, "stringent": [297, 301], "nevertheless": [297, 304], "confid": [297, 301], "pack": [297, 307], "ran": 297, "f_": 297, "mu_": 297, "difficulti": [297, 307], "brought": [297, 298], "scrictli": 297, "d_ob": 297, "d_action": 297, "policy_modul": [297, 301], "That": 297, "said": 297, "briefli": [297, 301], "refil": [297, 301], "capac": 297, "conveni": [297, 301, 302], "easiest": [297, 301], "mathemat": [297, 301], "tradeoff": [297, 301], "advantage_modul": 297, "lr_schedul": [297, 302], "cosineannealinglr": [297, 302], "eval_str": 297, "tensordict_data": [297, 301], "data_view": [297, 301], "subdata": [297, 301], "cum_reward_str": 297, "4f": [297, 298, 302], "stepcount_str": 297, "param_group": 297, "lr_str": 297, "eval_rollout": 297, "nice": 297, "357": [297, 302], "84it": 297, "3061": 297, "0878": 297, "0003": [297, 302], "1153": 297, "3000": 297, "361": [297, 302], "1550": 297, "364": [297, 302], "1907": 297, "0002": [297, 298, 302], "366": [297, 302], "2082": [297, 302], "6000": 297, "362": [297, 302], "46it": 297, "2383": 297, "7000": 297, "68it": 297, "2420": 297, "369": [297, 302], "2399": 297, "9000": 297, "371": [297, 302], "2588": [297, 302], "373": [297, 302], "94it": 297, "2601": 297, "cap": [297, 304], "figsiz": [297, 302], "subplot": [297, 302, 307], "titl": [297, 298, 301, 302], "bit": [297, 298, 301, 304], "094": [297, 302, 305], "coding_ppo": [297, 305], "rnn": 298, "lstmmodul": 298, "84x84": 298, "accessori": 298, "stamp": 298, "tensordictprim": 298, "se": 298, "flank": 298, "assist": 298, "emb": 298, "n_cell": 298, "customiz": 298, "almost": 298, "bidirect": 298, "wouldn": 298, "make_tensordict_prim": 298, "interpolationmod": 298, "qval": 298, "stoch_polici": 298, "cudnn": 298, "opportun": 298, "coupl": [298, 302, 304], "uniniti": 298, "again": [298, 301, 303, 304, 307], "redund": 298, "strongli": 298, "million": 298, "sake": [298, 303, 304], "20_000": [298, 302], "longest": 298, "npai": 298, "recurrent_st": 298, "action_spread": 298, "1000000": 298, "0004": [298, 302], "150": [298, 302], "36it": 298, "2122": [298, 305], "dqn_with_rnn": [298, 305], "tutorials_python": 299, "tutorials_jupyt": 299, "distinct": 300, "humanoid": [300, 307], "env1_obs_kei": 300, "observation_stand": 300, "env2_obs_kei": 300, "observation_walk": 300, "tdreset1": 300, "tdreset2": 300, "tdreset": 300, "policy_common": 300, "policy_stand": 300, "policy_walk": 300, "But": 300, "exclusive_field": [300, 306], "stack_dim": [300, 306], "env1_mak": 300, "env2_mak": 300, "_single_task": 300, "td_rollout": 300, "077": [300, 305], "multi_task": [300, 305], "matteo": 301, "bettini": 301, "marl": 301, "maddpg": 301, "navig": 301, "lidar": 301, "sensor": 301, "collis": 301, "tie": 301, "mappo": 301, "ippo": 301, "phase": [301, 304], "mathbf": 301, "pi": [301, 302], "_t": [301, 302], "fed": [301, 304], "approxim": [301, 307], "decentralis": 301, "literatur": 301, "overcom": 301, "stationari": 301, "concurr": 301, "analys": 301, "gui": 301, "visualis": 301, "rewardsum": 301, "multiagentmlp": 301, "divic": 301, "vmas_devic": 301, "6_000": 301, "team": [301, 306], "n_iter": 301, "minibatch_s": 301, "generalis": 301, "furthermor": 301, "simd": 301, "parallelis": 301, "warp": 301, "todai": 301, "circl": 301, "surround": 301, "dot": [301, 302], "collid": 301, "drag": 301, "elast": 301, "acceler": 301, "penalis": 301, "num_vmas_env": 301, "scenario_nam": 301, "four": [301, 302], "environmnet": 301, "final_rew": 301, "agent_collis": 301, "enviorn": 301, "stress": 301, "paramount": 301, "episode_reward": 301, "n_rollout_step": 301, "evolut": 301, "yourself": 301, "utilis": 301, "n_actions_per_ag": 301, "n_obs_per_ag": 301, "share_parameters_polici": 301, "policy_net": 301, "denot": 301, "unbatched_action_spec": 301, "carefulli": [301, 307], "grant": 301, "converg": 301, "cooper": 301, "share_parameters_crit": 301, "critic_net": 301, "fantast": 301, "minibatch": 301, "desc": 301, "episode_reward_mean": 301, "episode_reward_mean_list": 301, "critic_param": 301, "target_critic_param": 301, "refresh": 301, "3390621244907379": 301, "1457589715719223": 301, "0210180282592773": 301, "5489939451217651": 301, "7553492784500122": 301, "2441396713256836": 301, "5985326766967773": 301, "5103886127471924": 301, "7321016788482666": 301, "9089064598083496": 301, "xvfb": 301, "pyvirtualdisplai": 301, "1400": [301, 302], "900": 301, "pil": 301, "rendering_callback": 301, "fromarrai": 301, "rgb_arrai": [301, 302], "gif": 301, "save_al": 301, "append_imag": 301, "profici": 301, "master": 301, "157": [301, 302, 305], "multiagent_ppo": [301, 305], "freeli": 302, "sep": 302, "touch": 302, "undertaken": 302, "broader": 302, "challeng": [302, 303], "wider": 302, "algebra": 302, "acquaint": 302, "avenu": 302, "_apply_to_composit": 302, "default_x": 302, "default_i": 302, "torqu": 302, "upward": 302, "angular": 302, "sin": 302, "rad": 302, "sec": 302, "gravit": 302, "angl": 302, "deleg": 302, "new_th": 302, "new_thdot": 302, "thdot": 302, "g_forc": 302, "max_torqu": 302, "angle_norm": 302, "max_spe": 302, "zeros_lik": 302, "albeit": 302, "is_empti": 302, "gen_param": 302, "high_th": 302, "high_thdot": 302, "low_th": 302, "low_thdot": 302, "rng": 302, "lazili": 302, "trivial": 302, "neither": 302, "shortcut": [302, 307], "irrelev": 302, "_make_spec": 302, "td_param": 302, "commong": 302, "pseudo": 302, "render_mod": 302, "render_fp": 302, "random_": 302, "_make_step": 302, "staticmethod": 302, "complic": [302, 304, 307], "showcas": 302, "skeleton": 302, "_apply_transform": [302, 307], "_inv_apply_transform": [302, 307], "subset": [302, 303], "unitari": 302, "sine": 302, "cosin": 302, "sintransform": 302, "costransform": 302, "t_sin": 302, "t_co": 302, "cat_transform": 302, "mdp": 302, "convin": 302, "simple_rollout": 302, "_data": 302, "unexplor": 302, "assumpt": [302, 304], "recreat": 302, "init_td": 302, "traj_return": 302, "last_reward": 302, "is_ipython": 302, "inlin": 302, "get_backend": 302, "ion": 302, "gcf": 302, "clear_output": 302, "625": 302, "0488": 302, "0748": 302, "519": 302, "0499": 302, "4472": 302, "073": 302, "0685": 302, "0408": 302, "552": 302, "5154": 302, "9086": 302, "527": 302, "9385": 302, "155": 302, "04it": 302, "2568": 302, "4981": 302, "223": 302, "8929": 302, "4491": 302, "581": 302, "3233": 302, "0664": 302, "596": 302, "1021": 302, "5263": 302, "9579": 302, "07it": 302, "5807": 302, "8075": 302, "212": 302, "2009": 302, "5525": 302, "914": 302, "2894": 302, "0115": 302, "0977": 302, "1845": 302, "1830": 302, "4858": 302, "233": 302, "2863": 302, "0297": 302, "464": 302, "4617": 302, "5997": 302, "904": 302, "1647": 302, "0777": 302, "901": 302, "4709": 302, "6813": 302, "8317": 302, "3221": 302, "5554": 302, "276": 302, "3353": 302, "701": 302, "8570": 302, "6656": 302, "463": 302, "7779": 302, "6911": 302, "875": 302, "0796": 302, "7082": 302, "308": 302, "0421": 302, "1496": 302, "5037": 302, "1755": 302, "5029": 302, "9454": 302, "665": 302, "9330": 302, "2118": 302, "444": 302, "0995": 302, "6294": 302, "3146": 302, "2909": 302, "461": 302, "9720": 302, "1298": 302, "9923": 302, "0345": 302, "3438": 302, "3688": 302, "424": 302, "6953": 302, "5233": 302, "411": 302, "8011": 302, "5329": 302, "2677": 302, "6969": 302, "7010": 302, "376": 302, "9352": 302, "7707": 302, "6178": 302, "5646": 302, "348": 302, "7304": 302, "9407": 302, "942": 302, "3882": 302, "7604": 302, "3507": 302, "8928": 302, "258": 302, "6978": 302, "4641": 302, "549": 302, "6047": 302, "5005": 302, "4136": 302, "2993": 302, "3222": 302, "4046": 302, "7314": 302, "275": 302, "6331": 302, "9318": 302, "961": 302, "8331": 302, "1604": 302, "4099": 302, "4761": 302, "125": 302, "4262": 302, "6363": 302, "382": 302, "3593": 302, "7377": 302, "2847": 302, "3443": 302, "867": 302, "3592": 302, "4760": 302, "441": 302, "9950": 302, "8021": 302, "3528": 302, "1214": 302, "708": 302, "4023": 302, "3583": 302, "041": 302, "3801": 302, "0310": 302, "120": 302, "4244": 302, "2039": 302, "4850": 302, "8748": 302, "706": 302, "4897": 302, "9210": 302, "8964": 302, "0832": 302, "3934": 302, "456": 302, "8971": 302, "2933": 302, "3377": 302, "6996": 302, "2274": 302, "8916": 302, "098": 302, "2660": 302, "9110": 302, "4503": 302, "6956": 302, "9172": 302, "4026": 302, "946": 302, "9229": 302, "5205": 302, "8872": 302, "6637": 302, "019": 302, "9281": 302, "724": 302, "8561": 302, "6574": 302, "4138": 302, "5230": 302, "385": 302, "4065": 302, "5642": 302, "921": 302, "9786": 302, "4129": 302, "5831": 302, "266": 302, "7723": 302, "4152": 302, "0898": 302, "389": 302, "5155": 302, "5376": 302, "5616": 302, "4094": 302, "283": 302, "5333": 302, "4803": 302, "895": 302, "6566": 302, "662": 302, "4732": 302, "7503": 302, "068": 302, "0714": 302, "3370": 302, "059": 302, "8612": 302, "1915": 302, "3855": 302, "0349": 302, "9644": 302, "4538": 302, "445": 302, "0392": 302, "4080": 302, "1648": 302, "9599": 302, "143": [302, 304], "4284": 302, "5946": 302, "2590": 302, "9181": 302, "4621": 302, "9075": 302, "674": 302, "1772": 302, "9444": 302, "351": 302, "9391": 302, "5595": 302, "8673": 302, "6240": 302, "5919": 302, "0018": 302, "1071": 302, "9127": 302, "251": 302, "9799": 302, "3131": 302, "9612": 302, "9705": 302, "8741": 302, "2230": 302, "0972": 302, "0337": 302, "0350": 302, "0654": 302, "102": [302, 304], "2441": 302, "4596": 302, "103": [302, 304], "4362": 302, "171": 302, "4041": 302, "6907": 302, "105": 302, "4664": 302, "2760": 302, "0299": 302, "9712": 302, "349": 302, "107": 302, "3332": 302, "4479": 302, "772": 302, "108": 302, "4357": 302, "9591": 302, "543": 302, "6216": 302, "1353": 302, "692": 302, "110": 302, "6261": 302, "7086": 302, "496": 302, "111": [302, 304], "7758": 302, "9818": 302, "112": 302, "7772": 302, "5055": 302, "113": [302, 304], "5840": 302, "3180": 302, "2083": 302, "115": 302, "5275": 302, "6873": 302, "116": 302, "4107": 302, "1624": 302, "117": [302, 304], "6372": 302, "2571": 302, "118": 302, "4039": 302, "4428": 302, "119": 302, "4728": 302, "5628": 302, "6767": 302, "2466": 302, "522": 302, "121": [302, 304, 307], "5873": 302, "5072": 302, "122": [302, 307], "6548": 302, "3766": 302, "123": 302, "5134": 302, "1955": 302, "124": 302, "2481": 302, "0591": 302, "4500": 302, "3368": 302, "126": [302, 304], "9708": 302, "7059": 302, "127": [302, 304], "3031": 302, "2534": 302, "843": 302, "3327": 302, "6193": 302, "129": 302, "4831": 302, "1172": 302, "2593": 302, "4219": 302, "962": 302, "131": 302, "8380": 302, "899": 302, "132": [302, 304], "2721": 302, "9048": 302, "166": 302, "133": 302, "2419": 302, "5248": 302, "134": 302, "2139": 302, "4278": 302, "135": 302, "0690": 302, "5140": 302, "136": 302, "1140": 302, "7402": 302, "137": 302, "5356": 302, "1636": 302, "138": 302, "0671": 302, "8798": 302, "139": 302, "8918": 302, "3298": 302, "307": 302, "140": 302, "1779": 302, "141": 302, "1771": 302, "3624": 302, "936": 302, "142": 302, "1683": 302, "4810": 302, "9373": 302, "4435": 302, "144": 302, "4396": 302, "8092": [302, 307], "145": 302, "2572": 302, "146": 302, "4212": 302, "0260": 302, "147": 302, "0939": 302, "6478": 302, "605": 302, "148": [302, 304], "6606": 302, "7289": 302, "149": 302, "9300": 302, "7193": 302, "563": 302, "1166": 302, "8514": 302, "151": 302, "9108": 302, "0672": 302, "292": 302, "152": 302, "8591": 302, "3768": 302, "153": 302, "9976": 302, "154": 302, "0576": 302, "0067": 302, "935": 302, "4199": 302, "1722": 302, "156": 302, "8310": 302, "3466": 302, "8631": 302, "2492": 302, "158": 302, "8763": 302, "1277": 302, "159": [302, 304], "5562": 302, "7446": 302, "1082": 302, "9830": 302, "161": [302, 304], "0946": 302, "5229": 302, "162": 302, "4574": 302, "6900": 302, "163": [302, 303], "2229": 302, "0318": 302, "482": 302, "164": 302, "0543": 302, "0817": 302, "761": 302, "165": 302, "2809": 302, "5118": 302, "1142": 302, "5635": 302, "167": 302, "1949": 302, "2327": 302, "982": 302, "168": 302, "0967": 302, "0387": 302, "457": 302, "0782": 302, "2150": 302, "170": 302, "5222": 302, "3725": 302, "9288": 302, "9837": 302, "172": [302, 305, 307], "1416": 302, "1099": 302, "173": 302, "8620": 302, "8475": 302, "174": 302, "1807": 302, "175": 302, "1148": 302, "0645": 302, "176": 302, "2751": 302, "8313": 302, "177": 302, "9286": 302, "9770": 302, "178": 302, "5735": 302, "2837": 302, "179": 302, "2926": 302, "9489": 302, "180": 302, "1507": 302, "181": 302, "8724": 302, "3567": 302, "182": 302, "3574": 302, "6140": 302, "183": [302, 304], "7895": 302, "2518": 302, "184": 302, "6146": 302, "185": 302, "8776": 302, "7358": 302, "186": 302, "3722": 302, "8428": 302, "187": 302, "7955": 302, "188": 302, "0092": 302, "7106": 302, "829": 302, "2264": 302, "6919": 302, "190": 302, "1438": 302, "1362": 302, "191": 302, "0618": 302, "8217": 302, "9420": 302, "6765": 302, "193": 302, "7745": 302, "0709": 302, "194": 302, "9478": 302, "6867": 302, "195": 302, "6507": 302, "6225": 302, "196": 302, "2244": 302, "2195": 302, "197": 302, "5385": 302, "9263": 302, "198": 302, "1878": 302, "2374": 302, "199": 302, "8054": 302, "3504": 302, "557": 302, "0766": 302, "6825": 302, "201": 302, "2011": 302, "8393": 302, "202": 302, "0803": 302, "7815": 302, "203": 302, "8363": 302, "2460": 302, "204": 302, "58it": 302, "8643": 302, "2191": 302, "593": 302, "205": 302, "0773": 302, "1343": 302, "206": 302, "8657": 302, "207": 302, "9304": 302, "7584": 302, "208": 302, "8752": 302, "2307": 302, "209": 302, "5250": 302, "4869": 302, "210": [302, 307], "00it": 302, "7837": 302, "5762": 302, "6661": 302, "8600": 302, "2502": 302, "1752": 302, "3075": 302, "8871": 302, "214": 302, "9406": 302, "8090": 302, "215": 302, "6291": 302, "8923": 302, "876": 302, "9504": 302, "21e": 302, "217": 302, "7431": 302, "7880": 302, "218": 302, "4463": 302, "5432": 302, "219": 302, "3793": 302, "3313": 302, "220": 302, "8843": 302, "0369": 302, "065": 302, "221": 302, "4828": 302, "8391": 302, "222": 302, "6265": 302, "2913": 302, "947": 302, "5541": 302, "1252": 302, "7342": 302, "2396": 302, "225": 302, "5936": 302, "1924": 302, "226": 302, "9975": 302, "2045": 302, "227": 302, "8367": 302, "9540": 302, "228": 302, "7259": 302, "6743": 302, "229": 302, "4827": 302, "7528": 302, "230": 302, "7361": 302, "8756": 302, "231": 302, "7646": 302, "1116": 302, "232": 302, "5426": 302, "8385": 302, "5662": 302, "8585": 302, "234": 302, "8234": 302, "7930": 302, "235": 302, "2648": 302, "9309": 302, "236": 302, "6817": 302, "237": 302, "0943": 302, "1533": 302, "238": 302, "3045": 302, "0483": 302, "239": 302, "240": [302, 306, 307], "6415": 302, "0201": 302, "241": 302, "4437": 302, "4365": 302, "242": 302, "0358": 302, "4943": 302, "243": 302, "1272": 302, "5003": 302, "1180": 302, "2637": 302, "7197": 302, "0873": 302, "246": 302, "2917": 302, "247": 302, "0160": 302, "0738": 302, "3689": 302, "0120": 302, "249": 302, "5570": 302, "0475": 302, "250": 302, "4423": 302, "2220": 302, "6803": 302, "252": 302, "1465": 302, "7214": 302, "253": 302, "8801": 302, "7034": 302, "254": 302, "9136": 302, "4076": 302, "7589": 302, "5013": 302, "8150": 302, "2241": 302, "257": 302, "0753": 302, "8081": 302, "1951": 302, "8314": 302, "259": 302, "0038": 302, "260": 302, "0889": 302, "4616": 302, "261": 302, "0655": 302, "262": 302, "8333": 302, "9476": 302, "263": 302, "7554": 302, "3798": 302, "264": 302, "3717": 302, "3947": 302, "529": 302, "265": 302, "3060": 302, "6495": 302, "7467": 302, "8889": 302, "267": 302, "8457": 302, "591": 302, "268": 302, "7137": 302, "0536": 302, "771": 302, "269": 302, "1651": 302, "388": 302, "270": 302, "8246": 302, "5709": 302, "281": 302, "271": 302, "7502": 302, "0521": 302, "032": 302, "272": 302, "5475": 302, "7253": 302, "273": 302, "2856": 302, "7130": 302, "2778": 302, "4122": 302, "8368": 302, "1841": 302, "9622": 302, "1603": [302, 307], "003e": 302, "277": 302, "70it": 302, "0247": 302, "346": 302, "278": 302, "2238": 302, "6418": 302, "279": 302, "0626": 302, "2538": 302, "280": 302, "0149": 302, "7380": 302, "2167": 302, "8911": 302, "282": 302, "8725": 302, "1983": 302, "8142": 302, "3709": 302, "284": 302, "4989": 302, "285": 302, "6464": 302, "6210": 302, "286": 302, "9726": 302, "0820": 302, "287": 302, "6975": 302, "9091": 302, "4926": 302, "4791": 302, "289": 302, "0905": 302, "3500": 302, "290": 302, "2287": 302, "291": 302, "9918": 302, "5543": 302, "9245": 302, "6444": 302, "631": 302, "293": 302, "0448": 302, "4769": 302, "8566": 302, "7208": 302, "295": 302, "0966": 302, "296": 302, "5303": 302, "1537": 302, "023": 302, "297": 302, "2682": 302, "564": 302, "298": 302, "4318": 302, "5063": 302, "299": 302, "7475": 302, "4190": 302, "8186": 302, "5077": 302, "301": 302, "1883": 302, "5291": 302, "472": 302, "302": 302, "1256": 302, "3998": 302, "303": 302, "3622": 302, "0930": 302, "626": 302, "304": 302, "9500": 302, "0075": 302, "5664": 302, "305": 302, "5697": 302, "3024": 302, "306": 302, "3117": 302, "0052": 302, "006": 302, "0981": 302, "9312": 302, "3873": 302, "309": 302, "0411": 302, "2650": 302, "310": 302, "1656": 302, "0228": 302, "004": 302, "311": 302, "1196": 302, "2478": 302, "312": 302, "7353": 302, "0812": 302, "313": 302, "3022": 302, "758": 302, "314": 302, "1406": 302, "4626": 302, "315": 302, "2156": 302, "851": 302, "316": 302, "1953": 302, "3774": 302, "317": 302, "6385": 302, "9917": 302, "318": 302, "2764": 302, "905": 302, "319": 302, "6391": 302, "9317": 302, "9748": 302, "2679": 302, "321": 302, "8495": 302, "5125": 302, "322": 302, "8177": 302, "6602": 302, "323": 302, "0704": 302, "5776": 302, "324": 302, "9833": [302, 306], "1339": 302, "402": 302, "325": 302, "1238": 302, "326": 302, "9299": 302, "0227": 302, "327": 302, "7727": 302, "1607": 302, "336": 302, "328": 302, "3958": 302, "3223": 302, "763": 302, "329": 302, "4742": 302, "1797": 302, "330": 302, "0144": 302, "0085": 302, "791": 302, "331": 302, "8284": 302, "0428": 302, "332": 302, "0098": 302, "7365": 302, "333": 302, "4566": 302, "0781": 302, "086": 302, "3355": 302, "0230": 302, "335": 302, "0423": 302, "076": 302, "3711": 302, "1335": 302, "6855": 302, "337": 302, "0304": 302, "0023": 302, "8459": 302, "338": 302, "9998": 302, "4399": 302, "339": 302, "2303": 302, "1346": 302, "340": 302, "2915": 302, "7116": 302, "341": 302, "5560": 302, "0487": 302, "342": 302, "5119": 302, "061": 302, "343": 302, "3305": 302, "3705": 302, "957": 302, "344": 302, "6068": 302, "345": 302, "5731": 302, "3897": 302, "0376": 302, "347": 302, "0434": 302, "012": 302, "1300": 302, "1215": 302, "0968": 302, "0885": 302, "350": 302, "1348": 302, "0073": 302, "5052": 302, "4184": 302, "2817": 302, "8887": 302, "353": 302, "4779": 302, "1009": 302, "354": 302, "0604": 302, "599": 302, "355": 302, "4486": 302, "1176": 302, "656": 302, "356": 302, "2436": 302, "0668": 302, "8849": 302, "0012": 302, "358": 302, "7511": 302, "8804": 302, "359": 302, "8870": 302, "6728": 302, "360": 302, "8841": 302, "5508": 302, "5242": 302, "0268": 302, "0013": 302, "6185": 302, "363": 302, "1378": 302, "0204": 302, "0355": 302, "685": 302, "365": 302, "4884": 302, "0231": 302, "0770": 302, "0014": 302, "6793": 302, "367": 302, "9834": 302, "863": 302, "368": 302, "6709": 302, "462": 302, "5199": 302, "9790": 302, "370": 302, "9401": 302, "7802": 302, "6723": 302, "372": 302, "2678": 302, "6201": 302, "2184": 302, "7385": 302, "374": 302, "6344": 302, "617": 302, "375": 302, "9945": 302, "0772": 302, "567": 302, "7576": 302, "0398": 302, "377": 302, "3396": 302, "0022": 302, "378": 302, "3073": 302, "4018": 302, "379": 302, "1869": 302, "380": 302, "0481": 302, "1117": 302, "381": 302, "6823": 302, "981": 302, "8305": 302, "0210": 302, "383": 302, "4908": 302, "0272": 302, "538": 302, "3267": 302, "0111": 302, "7965": 302, "1796": 302, "0039": 302, "5396": 302, "386": 302, "3757": 302, "0490": 302, "387": 302, "1394": 302, "4187": 302, "2986": 302, "7954": 302, "1274": 302, "0063": 302, "813": 302, "390": 302, "8706": 302, "0114": 302, "391": 302, "6922": 302, "2423": 302, "392": 302, "9115": 302, "2602": 302, "393": 302, "2449": 302, "0783": 302, "394": 302, "0631": 302, "0057": 302, "7444": 302, "395": 302, "3339": 302, "0167": 302, "396": 302, "4806": 302, "397": 302, "4171": 302, "067": 302, "398": 302, "2618": 302, "5809": 302, "399": 302, "0054": 302, "3364": 302, "8733": 302, "0184": 302, "401": 302, "9137": 302, "0113": 302, "025": 302, "0386": 302, "0625": 302, "403": 302, "1332": 302, "0582": 302, "7816": 302, "404": 302, "8341": 302, "0941": 302, "854": 302, "405": 302, "8615": 302, "588": 302, "406": 302, "3849": 302, "008": 302, "407": 302, "9395": 302, "0765": 302, "055": 302, "408": 302, "2685": 302, "2235": 302, "688": 302, "409": 302, "3052": 302, "4249": 302, "410": 302, "6806": 302, "6383": 302, "3721": 302, "9981": 302, "412": 302, "1862": 302, "822": 302, "413": 302, "9811": 302, "0171": 302, "013": 302, "414": 302, "0252": 302, "0049": 302, "6205": 302, "415": 302, "1108": 302, "4921": 302, "9142": 302, "8130": 302, "417": 302, "1725": 302, "0036": 302, "3196": 302, "418": 302, "7795": 302, "0242": 302, "799": 302, "419": 302, "7737": 302, "0138": 302, "420": 302, "1462": 302, "0053": 302, "421": 302, "9226": 302, "6139": 302, "422": 302, "9889": 302, "0403": 302, "423": 302, "6194": 302, "0032": 302, "3989": 302, "0104": 302, "425": 302, "9960": 302, "0009": 302, "6009": 302, "426": 302, "2697": 302, "0914": 302, "1114": 302, "428": 302, "9862": 302, "1932": 302, "429": 302, "0637": 302, "0623": 302, "082": 302, "430": 302, "9906": 302, "2031": 302, "431": 302, "9948": 302, "0895": 302, "432": 302, "1970": 302, "0256": 302, "433": 302, "4231": 302, "0449": 302, "644": 302, "434": 302, "1039": 302, "1973": 302, "435": 302, "4561": 302, "1225": [302, 307], "436": 302, "0211": 302, "2125": 302, "437": 302, "3866": 302, "0050": 302, "7202": 302, "438": 302, "6388": 302, "0072": 302, "439": 302, "1187": 302, "0015": 302, "5116": 302, "440": 302, "0432": 302, "0025": 302, "7809": 302, "1925": 302, "0103": 302, "442": 302, "9570": 302, "443": 302, "0871": 302, "5601": 302, "0165": 302, "0047": 302, "6061": 302, "2746": 302, "0027": 302, "7887": 302, "446": 302, "1835": 302, "0035": 302, "855": 302, "447": 302, "8420": 302, "548": 302, "2653": 302, "0126": 302, "9736": 302, "449": 302, "0594": 302, "0119": 302, "6196": 302, "450": 302, "4509": 302, "0373": 302, "451": 302, "0620": 302, "452": 302, "6898": 302, "3235": 302, "687": 302, "453": [302, 305, 306], "5879": 302, "454": 302, "8406": 302, "0694": 302, "455": 302, "8259": 302, "0235": 302, "8500": 302, "0024": 302, "4054": 302, "2027": 302, "0894": 302, "459": 302, "5966": 302, "460": 302, "6942": 302, "0016": 302, "6703": 302, "0145": 302, "8124": 302, "0218": 302, "9196": 302, "0188": 302, "8986": 302, "0884": 302, "0084": 302, "5624": 302, "465": [302, 305, 307], "8862": 302, "0006": 302, "5384": 302, "466": 302, "5837": 302, "467": 302, "8954": 302, "0101": 302, "6751": 302, "468": 302, "8063": 302, "0122": 302, "9635": 302, "469": 302, "0692": 302, "4216": 302, "470": 302, "1227": 302, "0586": 302, "162e": 302, "471": 302, "9690": 302, "0074": 302, "4166": 302, "6324": 302, "473": 302, "0778": 302, "474": 302, "8548": 302, "0017": 302, "4408": 302, "475": 302, "8125": 302, "1515": 302, "476": 302, "2733": 302, "0044": 302, "2836": 302, "477": 302, "7497": 302, "7681": 302, "478": 302, "8547": 302, "0105": 302, "7212": 302, "479": 302, "9848": 302, "0019": 302, "6498": 302, "1987": 302, "0011": 302, "5473": 302, "481": 302, "8991": 302, "0033": 302, "6091": 302, "9189": 302, "5771": 302, "483": 302, "6781": 302, "7542": 302, "484": 302, "5959": 302, "0064": 302, "4295": 302, "485": 302, "2547": 302, "486": 302, "0636": 302, "547": 302, "487": 302, "0065": 302, "488": 302, "1694": 302, "0083": 302, "5759": 302, "489": 302, "0493": 302, "0021": 302, "7805": 302, "490": 302, "0950": 302, "497": 302, "491": 302, "9717": 302, "3672": 302, "492": 302, "0207": 302, "493": 302, "8266": 302, "0069": 302, "5365": 302, "494": 302, "2623": 302, "5078": 302, "495": 302, "4545": 302, "09636": 302, "8754": 302, "0010": 302, "498": 302, "0031": 302, "8269": 302, "499": 302, "4082": 302, "6642": 302, "2284": 302, "501": 302, "9130": 302, "0008": 302, "503": 302, "7624": 302, "0056": 302, "3858": 302, "504": 302, "0890": 302, "0042": 302, "505": 302, "7505": 302, "2157": 302, "506": 302, "8394": 302, "3413": 302, "507": 302, "9609": 302, "0041": 302, "6905": 302, "508": 302, "8467": 302, "4409": 302, "509": 302, "510": 302, "8128": 302, "3559": 302, "511": 302, "1479": 302, "0264": 302, "1589": 302, "566": 302, "513": 302, "2756": 302, "0046": 302, "5266": 302, "514": 302, "9873": 302, "0112": 302, "9314": 302, "515": 302, "3791": 302, "0721": 302, "516": 302, "4580": 302, "0758": 302, "6114": 302, "517": 302, "2431": 302, "518": 302, "1958": 302, "5553": 302, "8924": 302, "0097": 302, "520": 302, "3737": 302, "0234": 302, "521": 302, "9125": 302, "4623": 302, "3230": 302, "0589": 302, "3784": 302, "523": 302, "9482": 302, "0051": 302, "524": 302, "1979": 302, "0045": 302, "6401": 302, "525": 302, "1588": 302, "0048": 302, "6255": 302, "526": 302, "6084": 302, "3477": 302, "1475": 302, "0209": 302, "528": 302, "7611": 302, "1040": 302, "0099": 302, "0173": 302, "643": 302, "530": 302, "8189": 302, "4358": 302, "531": 302, "9897": 302, "532": 302, "1548": 302, "9751": 302, "533": 302, "6362": 302, "7495": 302, "534": 302, "1749": 302, "9513": 302, "535": 302, "7708": 302, "0371": 302, "536": 302, "2649": 302, "0437": 302, "537": 302, "5491": 302, "0276": 302, "6426": 302, "7294": 302, "078e": 302, "539": 302, "9928": 302, "540": 302, "7937": 302, "0124": 302, "9664": 302, "541": 302, "3342": 302, "542": 302, "2046": 302, "5496": 302, "0956": 302, "0059": 302, "545": 302, "9028": 302, "5843": 302, "546": 302, "0674": 302, "0178": 302, "797": 302, "2815": 302, "0599": 302, "1587": 302, "9276": 302, "8228": 302, "6164": 302, "551": 302, "6850": 302, "9167": 302, "3092": [302, 307], "0670": 302, "9177": 302, "553": 302, "1599": 302, "0043": 302, "554": 302, "6367": 302, "555": 302, "3657": 302, "556": 302, "6694": 302, "2622": 302, "0372": 302, "4841": 302, "558": 302, "2707": 302, "0058": 302, "757": 302, "559": 302, "2267": [302, 303, 305], "5415": 302, "4556": 302, "0163": 302, "561": 302, "1839": 302, "0809": 302, "6262": 302, "562": 302, "0278": 302, "1112": 302, "6155": 302, "565": 302, "1427": 302, "3582": 302, "624": 302, "7870": 302, "9490": 302, "0439": 302, "8796": 302, "568": 302, "8026": 302, "612": 302, "569": 302, "3147": 302, "8486": 302, "570": 302, "7917": 302, "0129": 302, "571": 302, "9553": 302, "0020": 302, "6871": 302, "572": 302, "3132": 302, "0159": 302, "8646": 302, "573": 302, "5320": 302, "0269": 302, "574": 302, "2955": 302, "0245": 302, "575": 302, "3347": 302, "0179": 302, "9718": 302, "1629": 302, "804": 302, "577": 302, "4164": 302, "0070": 302, "4335": 302, "578": 302, "579": 302, "3049": 302, "9063": 302, "580": 302, "8785": 302, "3295": 302, "5184": 302, "0546": 302, "582": 302, "4589": 302, "583": 302, "4697": 302, "2476": 302, "584": 302, "2397": 302, "585": 302, "4953": 302, "1775": 302, "586": 302, "2258": 302, "0110": 302, "7671": 302, "587": 302, "3981": 302, "8590": 302, "0007": 302, "589": 302, "9820": 302, "4221": 302, "590": 302, "1293": 302, "0116": 302, "868": 302, "1675": 302, "5931": 302, "592": 302, "2910": 302, "5219": 302, "2124": 302, "1730": 302, "737": 302, "594": 302, "2914": 302, "0206": 302, "595": 302, "0172": 302, "3982": 302, "0945": 302, "0121": 302, "4789": 302, "597": 302, "3805": 302, "4074": 302, "598": 302, "3310": 302, "5065": 302, "6028": 302, "6316": 302, "6724": 302, "6523": 302, "601": 302, "0136": 302, "4298": 302, "602": 302, "3524": 302, "2629": 302, "603": [302, 303, 305], "2635": 302, "7839": 302, "604": 302, "6041": 302, "8027": 302, "4170": 302, "4675": 302, "606": 302, "3153": 302, "9316": 302, "607": 302, "0649": 302, "9722": 302, "7989": 302, "0329": 302, "609": 302, "1976": 302, "6852": 302, "610": 302, "4793": 302, "1255": 302, "611": 302, "4581": 302, "0394": 302, "2047": 302, "0326": 302, "613": 302, "8967": 302, "8619": 302, "614": 302, "5906": 302, "6491": 302, "615": 302, "6634": 302, "4394": 302, "616": 302, "0624": 302, "0061": 302, "5676": 302, "3259": 302, "0131": 302, "7733": 302, "618": 302, "7515": 302, "0189": 302, "5575": 302, "619": 302, "9313": 302, "6286": 302, "4325": 302, "7832": 302, "621": 302, "1134": 302, "622": 302, "4572": 302, "0500": 302, "5838": 302, "623": 302, "3818": 302, "8623": 302, "1253": 302, "6622": 302, "subject": 302, "saw": [302, 304], "709": [302, 305], "explain": 303, "semat": 303, "r3mtransform": 303, "embodi": 303, "ai": 303, "env_transform": [303, 307], "s3": 303, "amazonaw": 303, "r3m_50": 303, "374m": 303, "8m": 303, "8mb": 303, "6m": 303, "2m": 303, "7mb": 303, "4m": 303, "6mb": 303, "9mb": 303, "0m": 303, "2mb": 303, "9m": 303, "5mb": 303, "103m": 303, "115m": 303, "130m": 303, "0mb": 303, "138m": 303, "1mb": 303, "146m": 303, "153m": 303, "162m": 303, "168m": 303, "4mb": 303, "180m": 303, "195m": 303, "202m": 303, "210m": 303, "217m": 303, "229m": 303, "243m": 303, "251m": 303, "3mb": 303, "261m": 303, "267m": 303, "279m": 303, "293m": 303, "305m": 303, "314m": 303, "324m": 303, "332m": 303, "342m": 303, "349m": 303, "360m": 303, "wiser": 303, "conclud": 303, "_storag": [303, 304], "pretrained_model": [303, 305], "supervis": [304, 307], "pull": 304, "temporarili": 304, "drastic": 304, "ram": [304, 307], "batteri": 304, "dataliststorag": 304, "datalazytensorstorag": 304, "tensordidct": 304, "basi": 304, "datalazymemmapstorag": 304, "buffer_list": 304, "lowest": 304, "medium": 304, "buffer_lazytensor": 304, "buffer_lazymemmap": 304, "fullest": 304, "organ": 304, "convini": 304, "mydata": 304, "background": 304, "question": [304, 306], "_i": 304, "artifici": 304, "0892946e": 304, "she": 304, "augment": 304, "pars": 304, "proport": 304, "hist": 304, "barcontain": 304, "artist": 304, "revert": 304, "expens": 304, "reappear": 304, "unfold": 304, "problemat": 304, "window": 304, "4th": 304, "683": [304, 305], "rb_tutori": [304, 305], "torchrl_demo": [305, 306], "torchrl_env": [305, 307], "demo": 306, "icml": 306, "vmoen": 306, "fb": 306, "invest": 306, "platform": 306, "media": 306, "truli": 306, "predominantli": 306, "tensordict1": 306, "tensordict2": 306, "tensordict_sampl": 306, "_sampler": 306, "_sum_tre": 306, "modulenotfounderror": 306, "28791671991348267": 306, "gym_env": 306, "noopresetenv": [306, 307], "lazyconv2d": 306, "backbone_modul": 306, "params_expand": 306, "tensordict_exp": 306, "base_modul": 306, "0137": 306, "1524": 306, "0641": 306, "viewbackward0": 306, "asstridedbackward0": 306, "8728": 306, "1334": 306, "3494": 306, "6887": 306, "6402": 306, "_safetanhbackward": 306, "1132": 306, "1762": 306, "3430": 306, "2668": 306, "2918": 306, "6239": 306, "roughli": 306, "tensordicts_prealloc": 306, "tensordicts_stack": 306, "tensordict_rollout": [306, 307], "disclaim": 306, "concatmodul": 306, "loss_td": 306, "year": 306, "roadmap": 306, "compris": 306, "contributor": 306, "curiou": 306, "nascent": 306, "unsupervis": 307, "rom": 307, "licens": 307, "pygam": 307, "unifi": 307, "insid": 307, "_build_env": 307, "sphinx_gallery_start_ignor": 307, "filterwarn": 307, "sphinx_gallery_end_ignor": 307, "adventur": 307, "v5": 307, "airraid": 307, "alien": 307, "amidar": 307, "assault": 307, "2922": 307, "void": 307, "reproduct": 307, "tensordict_tprim": 307, "imshow": 307, "axesimag": 307, "0x7f943d756d60": 307, "inconsist": 307, "pong": 307, "swingup": 307, "swingup_spars": 307, "ball_in_cup": 307, "catch": 307, "balance_spars": 307, "three_pol": 307, "two_pol": 307, "finger": 307, "turn_easi": 307, "turn_hard": 307, "fish": 307, "swim": 307, "hopper": 307, "hop": 307, "run_pure_st": 307, "bring_bal": 307, "bring_peg": 307, "insert_bal": 307, "insert_peg": 307, "point_mass": 307, "reacher": 307, "swimmer": 307, "swimmer6": 307, "swimmer15": 307, "walker": 307, "dog": 307, "trot": 307, "humanoid_cmu": 307, "lqr": 307, "lqr_2_1": 307, "lqr_6_2": 307, "quadrup": 307, "escap": 307, "stacker": 307, "stack_2": 307, "stack_4": 307, "wrapper1": 307, "wrapper2": 307, "obviou": 307, "truth": 307, "env0": 307, "env_transformed_bi": 307, "stanc": 307, "transformeddistribut": 307, "base_dist": 307, "concat": 307, "mofidi": 307, "transformedenviron": 307, "moderet": 307, "computation": 307, "legitim": 307, "incom": 307, "amongst": 307, "wor": 307, "convention": 307, "scope": 307, "markovian": 307, "3288080526": 307, "constain": 307, "bar_": 307, "get_someth": 307, "bar_1e875fa6": 307, "aargh": 307, "foo_list": 307, "vec_env": 307, "_dispatch_caller_parallel": 307, "0x7f933c611130": 307, "bar_25e87956": 307, "bar_25e5de62": 307, "9588": 307, "bar_25dda058": 307, "a9f4": 307, "parallen": 307, "particularili": 307, "evolv": 307, "steadi": 307, "approx": 307, "5488": 307, "1432": 307, "3646": 307, "4577": 307, "2740": 307, "3026": 307, "_extra_st": 307, "observation_ssq": 307, "observation_sum": 307, "2012": 307, "3177": 307, "1900": 307, "dispach": 307, "absor": 307}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 0, 1, "", "EnvBase"], [68, 0, 1, "", "EnvCreator"], [69, 0, 1, "", "EnvMetaData"], [70, 0, 1, "", "GymLikeEnv"], [71, 2, 1, "", "ModelBasedEnvBase"], [72, 0, 1, "", "MultiThreadedEnv"], [73, 0, 1, "", "ParallelEnv"], [74, 0, 1, "", "SerialEnv"], [71, 1, 1, "", "rand_step"], [71, 1, 1, "", "reset"], [71, 1, 1, "", "rollout"], [71, 1, 1, "", "set_seed"], [71, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[67, 3, 1, "", "action_key"], [67, 3, 1, "", "action_keys"], [67, 3, 1, "", "action_spec"], [67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 3, 1, "", "batch_locked"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 3, 1, "", "done_key"], [67, 3, 1, "", "done_keys"], [67, 3, 1, "", "done_spec"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fake_tensordict"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 3, 1, "", "input_spec"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 3, 1, "", "observation_spec"], [67, 3, 1, "", "output_spec"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "rand_action"], [67, 1, 1, "id0", "rand_step"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "id1", "reset"], [67, 3, 1, "", "reward_key"], [67, 3, 1, "", "reward_keys"], [67, 3, 1, "", "reward_spec"], [67, 1, 1, "id2", "rollout"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "id3", "set_seed"], [67, 1, 1, "", "share_memory"], [67, 3, 1, "", "specs"], [67, 1, 1, "", "state_dict"], [67, 3, 1, "", "state_spec"], [67, 1, 1, "id4", "step"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[70, 3, 1, "", "action_key"], [70, 3, 1, "", "action_keys"], [70, 3, 1, "", "action_spec"], [70, 1, 1, "", "add_module"], [70, 1, 1, "", "apply"], [70, 3, 1, "", "batch_locked"], [70, 1, 1, "", "bfloat16"], [70, 1, 1, "", "buffers"], [70, 1, 1, "", "children"], [70, 1, 1, "", "close"], [70, 1, 1, "", "compile"], [70, 1, 1, "", "cpu"], [70, 1, 1, "", "cuda"], [70, 3, 1, "", "done_key"], [70, 3, 1, "", "done_keys"], [70, 3, 1, "", "done_spec"], [70, 1, 1, "", "double"], [70, 1, 1, "", "eval"], [70, 1, 1, "", "extra_repr"], [70, 1, 1, "", "fake_tensordict"], [70, 1, 1, "", "float"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "get_buffer"], [70, 1, 1, "", "get_extra_state"], [70, 1, 1, "", "get_parameter"], [70, 1, 1, "", "get_submodule"], [70, 1, 1, "", "half"], [70, 3, 1, "", "input_spec"], [70, 1, 1, "", "ipu"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "modules"], [70, 1, 1, "", "named_buffers"], [70, 1, 1, "", "named_children"], [70, 1, 1, "", "named_modules"], [70, 1, 1, "", "named_parameters"], [70, 3, 1, "", "observation_spec"], [70, 3, 1, "", "output_spec"], [70, 1, 1, "", "parameters"], [70, 1, 1, "", "rand_action"], [70, 1, 1, "", "rand_step"], [70, 1, 1, "", "read_action"], [70, 1, 1, "", "read_done"], [70, 1, 1, "", "read_obs"], [70, 1, 1, "", "read_reward"], [70, 1, 1, "", "register_backward_hook"], [70, 1, 1, "", "register_buffer"], [70, 1, 1, "", "register_forward_hook"], [70, 1, 1, "", "register_forward_pre_hook"], [70, 1, 1, "", "register_full_backward_hook"], [70, 1, 1, "", "register_full_backward_pre_hook"], [70, 1, 1, "", "register_load_state_dict_post_hook"], [70, 1, 1, "", "register_module"], [70, 1, 1, "", "register_parameter"], [70, 1, 1, "", "register_state_dict_pre_hook"], [70, 1, 1, "", "requires_grad_"], [70, 1, 1, "", "reset"], [70, 3, 1, "", "reward_key"], [70, 3, 1, "", "reward_keys"], [70, 3, 1, "", "reward_spec"], [70, 1, 1, "", "rollout"], [70, 1, 1, "", "set_extra_state"], [70, 1, 1, "", "set_info_dict_reader"], [70, 1, 1, "", "set_seed"], [70, 1, 1, "", "share_memory"], [70, 3, 1, "", "specs"], [70, 1, 1, "", "state_dict"], [70, 3, 1, "", "state_spec"], [70, 1, 1, "", "step"], [70, 1, 1, "", "to"], [70, 1, 1, "", "to_empty"], [70, 1, 1, "", "train"], [70, 1, 1, "", "type"], [70, 1, 1, "", "xpu"], [70, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[72, 3, 1, "", "action_key"], [72, 3, 1, "", "action_keys"], [72, 3, 1, "", "action_spec"], [72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "close"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 3, 1, "", "done_key"], [72, 3, 1, "", "done_keys"], [72, 3, 1, "", "done_spec"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "fake_tensordict"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 3, 1, "", "input_spec"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 3, 1, "", "observation_spec"], [72, 3, 1, "", "output_spec"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "rand_action"], [72, 1, 1, "", "rand_step"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset"], [72, 3, 1, "", "reward_key"], [72, 3, 1, "", "reward_keys"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "", "rollout"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "share_memory"], [72, 3, 1, "", "specs"], [72, 1, 1, "", "state_dict"], [72, 3, 1, "", "state_spec"], [72, 1, 1, "", "step"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_keys"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_keys"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 3, 1, "", "input_spec"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 3, 1, "", "observation_spec"], [73, 3, 1, "", "output_spec"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "reset"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_keys"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 3, 1, "", "state_spec"], [73, 1, 1, "", "step"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "update_kwargs"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[74, 3, 1, "", "action_key"], [74, 3, 1, "", "action_keys"], [74, 3, 1, "", "action_spec"], [74, 1, 1, "", "add_module"], [74, 1, 1, "", "apply"], [74, 3, 1, "", "batch_locked"], [74, 1, 1, "", "bfloat16"], [74, 1, 1, "", "buffers"], [74, 1, 1, "", "children"], [74, 1, 1, "", "compile"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 3, 1, "", "done_key"], [74, 3, 1, "", "done_keys"], [74, 3, 1, "", "done_spec"], [74, 1, 1, "", "double"], [74, 1, 1, "", "eval"], [74, 1, 1, "", "extra_repr"], [74, 1, 1, "", "fake_tensordict"], [74, 1, 1, "", "float"], [74, 1, 1, "", "forward"], [74, 1, 1, "", "get_buffer"], [74, 1, 1, "", "get_extra_state"], [74, 1, 1, "", "get_parameter"], [74, 1, 1, "", "get_submodule"], [74, 1, 1, "", "half"], [74, 3, 1, "", "input_spec"], [74, 1, 1, "", "ipu"], [74, 1, 1, "", "load_state_dict"], [74, 1, 1, "", "modules"], [74, 1, 1, "", "named_buffers"], [74, 1, 1, "", "named_children"], [74, 1, 1, "", "named_modules"], [74, 1, 1, "", "named_parameters"], [74, 3, 1, "", "observation_spec"], [74, 3, 1, "", "output_spec"], [74, 1, 1, "", "parameters"], [74, 1, 1, "", "rand_action"], [74, 1, 1, "", "rand_step"], [74, 1, 1, "", "register_backward_hook"], [74, 1, 1, "", "register_buffer"], [74, 1, 1, "", "register_forward_hook"], [74, 1, 1, "", "register_forward_pre_hook"], [74, 1, 1, "", "register_full_backward_hook"], [74, 1, 1, "", "register_full_backward_pre_hook"], [74, 1, 1, "", "register_load_state_dict_post_hook"], [74, 1, 1, "", "register_module"], [74, 1, 1, "", "register_parameter"], [74, 1, 1, "", "register_state_dict_pre_hook"], [74, 1, 1, "", "requires_grad_"], [74, 1, 1, "", "reset"], [74, 3, 1, "", "reward_key"], [74, 3, 1, "", "reward_keys"], [74, 3, 1, "", "reward_spec"], [74, 1, 1, "", "rollout"], [74, 1, 1, "", "set_extra_state"], [74, 1, 1, "", "set_seed"], [74, 1, 1, "", "share_memory"], [74, 3, 1, "", "specs"], [74, 1, 1, "", "state_dict"], [74, 3, 1, "", "state_spec"], [74, 1, 1, "", "step"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_empty"], [74, 1, 1, "", "train"], [74, 1, 1, "", "type"], [74, 1, 1, "", "update_kwargs"], [74, 1, 1, "", "xpu"], [74, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[75, 2, 1, "", "BraxEnv"], [76, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[77, 2, 1, "", "DMControlEnv"], [78, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[79, 2, 1, "", "GymEnv"], [80, 2, 1, "", "GymWrapper"], [81, 2, 1, "", "MOGymEnv"], [82, 2, 1, "", "MOGymWrapper"], [83, 2, 1, "", "gym_backend"], [84, 2, 1, "", "set_gym_backend"]], "torchrl.envs.libs.habitat": [[85, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[86, 2, 1, "", "JumanjiEnv"], [87, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[88, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[89, 2, 1, "", "VmasEnv"], [90, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[91, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[92, 0, 1, "", "BinarizeReward"], [93, 0, 1, "", "CatFrames"], [94, 0, 1, "", "CatTensors"], [95, 0, 1, "", "CenterCrop"], [96, 0, 1, "", "Compose"], [97, 0, 1, "", "DTypeCastTransform"], [98, 0, 1, "", "DiscreteActionProjection"], [99, 0, 1, "", "DoubleToFloat"], [100, 0, 1, "", "ExcludeTransform"], [101, 0, 1, "", "FiniteTensorDictCheck"], [102, 0, 1, "", "FlattenObservation"], [103, 0, 1, "", "FrameSkipTransform"], [104, 0, 1, "", "GrayScale"], [105, 0, 1, "", "InitTracker"], [106, 0, 1, "", "KLRewardTransform"], [107, 0, 1, "", "NoopResetEnv"], [108, 0, 1, "", "ObservationNorm"], [109, 0, 1, "", "ObservationTransform"], [110, 0, 1, "", "PinMemoryTransform"], [111, 0, 1, "", "R3MTransform"], [112, 0, 1, "", "RandomCropTensorDict"], [113, 0, 1, "", "RenameTransform"], [114, 0, 1, "", "Resize"], [115, 0, 1, "", "Reward2GoTransform"], [116, 0, 1, "", "RewardClipping"], [117, 0, 1, "", "RewardScaling"], [118, 0, 1, "", "RewardSum"], [119, 0, 1, "", "SelectTransform"], [120, 0, 1, "", "SqueezeTransform"], [121, 0, 1, "", "StepCounter"], [122, 0, 1, "", "TargetReturn"], [123, 0, 1, "", "TensorDictPrimer"], [124, 0, 1, "", "TimeMaxPool"], [125, 0, 1, "", "ToTensorImage"], [126, 0, 1, "", "Transform"], [127, 0, 1, "", "TransformedEnv"], [128, 0, 1, "", "UnsqueezeTransform"], [129, 0, 1, "", "VC1Transform"], [130, 0, 1, "", "VIPRewardTransform"], [131, 0, 1, "", "VIPTransform"], [132, 0, 1, "", "VecNorm"], [133, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[92, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "reset"], [93, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[94, 1, 1, "", "forward"], [94, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[95, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "reset"], [96, 1, 1, "", "to"], [96, 1, 1, "", "transform_input_spec"], [96, 1, 1, "", "transform_observation_spec"], [96, 1, 1, "", "transform_output_spec"], [96, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[97, 1, 1, "", "forward"], [97, 1, 1, "", "transform_input_spec"], [97, 1, 1, "", "transform_observation_spec"], [97, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[98, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "reset"], [100, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[101, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[103, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[105, 1, 1, "", "forward"], [105, 1, 1, "", "reset"], [105, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[107, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[108, 1, 1, "", "init_stats"], [108, 1, 1, "", "transform_input_spec"], [108, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[110, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[111, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "transform_input_spec"], [113, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[114, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[115, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[116, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[117, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "reset"], [118, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "reset"], [121, 1, 1, "", "transform_input_spec"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "reset"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "reset"], [123, 1, 1, "", "to"], [123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "reset"], [124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "reset"], [126, 1, 1, "", "to"], [126, 1, 1, "", "transform_done_spec"], [126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_observation_spec"], [126, 1, 1, "", "transform_output_spec"], [126, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[127, 3, 1, "", "batch_locked"], [127, 1, 1, "", "eval"], [127, 3, 1, "", "input_spec"], [127, 1, 1, "", "load_state_dict"], [127, 3, 1, "", "output_spec"], [127, 1, 1, "", "set_missing_tolerance"], [127, 1, 1, "", "set_seed"], [127, 1, 1, "", "state_dict"], [127, 1, 1, "", "to"], [127, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[128, 1, 1, "", "transform_input_spec"], [128, 1, 1, "", "transform_observation_spec"], [128, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "make_noload_model"], [129, 1, 1, "", "to"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[131, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[132, 1, 1, "", "build_td_for_shared_vecnorm"], [132, 1, 1, "", "forward"], [132, 1, 1, "", "get_extra_state"], [132, 1, 1, "", "set_extra_state"], [132, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[134, 2, 1, "", "check_env_specs"], [135, 2, 1, "", "exploration_mode"], [136, 2, 1, "", "exploration_type"], [137, 2, 1, "", "get_available_libraries"], [138, 2, 1, "", "make_composite_from_td"], [139, 2, 1, "", "set_exploration_mode"], [140, 2, 1, "", "set_exploration_type"], [141, 2, 1, "", "step_mdp"]], "torchrl.modules": [[142, 0, 1, "", "CEMPlanner"], [143, 0, 1, "", "ConvNet"], [144, 0, 1, "", "DTActor"], [145, 0, 1, "", "DdpgCnnActor"], [146, 0, 1, "", "DdpgCnnQNet"], [147, 0, 1, "", "DdpgMlpActor"], [148, 0, 1, "", "DdpgMlpQNet"], [149, 0, 1, "", "DecisionTransformer"], [150, 0, 1, "", "Delta"], [151, 0, 1, "", "DistributionalDQNnet"], [152, 0, 1, "", "DistributionalQValueHook"], [153, 0, 1, "", "DreamerActor"], [154, 0, 1, "", "DuelingCnnDQNet"], [155, 0, 1, "", "IndependentNormal"], [156, 0, 1, "", "LSTMModule"], [157, 0, 1, "", "LSTMNet"], [158, 0, 1, "", "MLP"], [159, 0, 1, "", "MPCPlannerBase"], [160, 0, 1, "", "MPPIPlanner"], [161, 0, 1, "", "MaskedCategorical"], [162, 0, 1, "", "MultiAgentMLP"], [163, 0, 1, "", "NoisyLazyLinear"], [164, 0, 1, "", "NoisyLinear"], [165, 0, 1, "", "NormalParamWrapper"], [166, 0, 1, "", "ObsDecoder"], [167, 0, 1, "", "ObsEncoder"], [168, 0, 1, "", "OneHotCategorical"], [169, 0, 1, "", "OnlineDTActor"], [170, 0, 1, "", "QMixer"], [171, 0, 1, "", "QValueHook"], [172, 0, 1, "", "RSSMPosterior"], [173, 0, 1, "", "RSSMPrior"], [174, 0, 1, "", "Squeeze2dLayer"], [175, 0, 1, "", "SqueezeLayer"], [176, 0, 1, "", "TanhDelta"], [177, 0, 1, "", "TanhNormal"], [178, 0, 1, "", "TruncatedNormal"], [179, 0, 1, "", "VDNMixer"], [180, 0, 1, "", "VmapModule"], [181, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[142, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[143, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[144, 1, 1, "", "default_config"], [144, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[145, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[146, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[147, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[148, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[149, 0, 1, "", "DTConfig"], [149, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[150, 1, 1, "", "log_prob"], [150, 3, 1, "", "mean"], [150, 3, 1, "", "mode"], [150, 1, 1, "", "rsample"], [150, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[151, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[153, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[154, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[155, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "set_recurrent_mode"], [156, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[157, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[158, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[160, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[161, 1, 1, "", "log_prob"], [161, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[162, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[163, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[165, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[166, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[167, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[168, 1, 1, "", "log_prob"], [168, 3, 1, "", "mode"], [168, 1, 1, "", "rsample"], [168, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[169, 1, 1, "", "default_config"], [169, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[170, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[172, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[173, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[175, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[176, 3, 1, "", "mean"], [176, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[177, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[178, 1, 1, "", "log_prob"], [178, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[179, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[180, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[182, 0, 1, "", "Actor"], [183, 0, 1, "", "ActorCriticOperator"], [184, 0, 1, "", "ActorCriticWrapper"], [185, 0, 1, "", "ActorValueOperator"], [186, 0, 1, "", "AdditiveGaussianWrapper"], [187, 0, 1, "", "DecisionTransformerInferenceWrapper"], [188, 0, 1, "", "DistributionalQValueActor"], [189, 0, 1, "", "DistributionalQValueModule"], [190, 0, 1, "", "EGreedyWrapper"], [191, 0, 1, "", "LMHeadActorValueOperator"], [192, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [193, 0, 1, "", "ProbabilisticActor"], [194, 0, 1, "", "QValueActor"], [195, 0, 1, "", "QValueModule"], [196, 0, 1, "", "SafeModule"], [197, 0, 1, "", "SafeProbabilisticModule"], [198, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [199, 0, 1, "", "SafeSequential"], [200, 0, 1, "", "TanhModule"], [201, 0, 1, "", "ValueOperator"], [202, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[183, 1, 1, "", "get_critic_operator"], [183, 1, 1, "", "get_policy_head"], [183, 1, 1, "", "get_value_head"], [183, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[184, 1, 1, "", "get_policy_head"], [184, 1, 1, "", "get_policy_operator"], [184, 1, 1, "", "get_value_head"], [184, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[185, 1, 1, "", "get_policy_head"], [185, 1, 1, "", "get_policy_operator"], [185, 1, 1, "", "get_value_head"], [185, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "mask_context"], [187, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[189, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[195, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[196, 1, 1, "", "random"], [196, 1, 1, "", "random_sample"], [196, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[197, 1, 1, "", "random"], [197, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[200, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[202, 1, 1, "", "get_reward_operator"], [202, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[203, 0, 1, "", "biased_softplus"], [204, 0, 1, "", "inv_softplus"], [205, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[203, 1, 1, "", "forward"]], "torchrl.objectives": [[206, 0, 1, "", "A2CLoss"], [207, 0, 1, "", "CQLLoss"], [208, 0, 1, "", "ClipPPOLoss"], [209, 0, 1, "", "DDPGLoss"], [210, 0, 1, "", "DQNLoss"], [211, 0, 1, "", "DTLoss"], [212, 0, 1, "", "DiscreteSACLoss"], [213, 0, 1, "", "DistributionalDQNLoss"], [214, 0, 1, "", "DreamerActorLoss"], [215, 0, 1, "", "DreamerModelLoss"], [216, 0, 1, "", "DreamerValueLoss"], [217, 0, 1, "", "HardUpdate"], [218, 0, 1, "", "IQLLoss"], [219, 0, 1, "", "KLPENPPOLoss"], [220, 0, 1, "", "LossModule"], [221, 0, 1, "", "OnlineDTLoss"], [222, 0, 1, "", "PPOLoss"], [223, 0, 1, "", "REDQLoss"], [224, 0, 1, "", "ReinforceLoss"], [225, 0, 1, "", "SACLoss"], [226, 0, 1, "", "SoftUpdate"], [227, 0, 1, "", "TD3Loss"], [228, 0, 1, "", "ValueEstimators"], [229, 0, 1, "", "default_value_kwargs"], [230, 0, 1, "", "distance_loss"], [231, 0, 1, "", "hold_out_net"], [232, 0, 1, "", "hold_out_params"], [234, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[208, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[211, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[215, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[216, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "loss_value_diff"], [218, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[219, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[220, 1, 1, "", "convert_to_functional"], [220, 1, 1, "", "forward"], [220, 1, 1, "", "make_value_estimator"], [220, 1, 1, "", "named_parameters"], [220, 1, 1, "", "parameters"], [220, 1, 1, "", "set_keys"], [220, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[221, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[233, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[235, 0, 1, "", "GAE"], [236, 0, 1, "", "TD0Estimator"], [237, 0, 1, "", "TD1Estimator"], [238, 0, 1, "", "TDLambdaEstimator"], [239, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "set_keys"], [239, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[240, 0, 1, "", "generalized_advantage_estimate"], [241, 0, 1, "", "reward2go"], [242, 0, 1, "", "td0_advantage_estimate"], [243, 0, 1, "", "td0_return_estimate"], [244, 0, 1, "", "td1_advantage_estimate"], [245, 0, 1, "", "td1_return_estimate"], [246, 0, 1, "", "td_lambda_advantage_estimate"], [247, 0, 1, "", "td_lambda_return_estimate"], [248, 0, 1, "", "vec_generalized_advantage_estimate"], [249, 0, 1, "", "vec_td1_advantage_estimate"], [250, 0, 1, "", "vec_td1_return_estimate"], [251, 0, 1, "", "vec_td_lambda_advantage_estimate"], [252, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[253, 2, 1, "", "TensorDictRecorder"], [254, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[255, 2, 1, "", "Logger"], [257, 2, 1, "", "generate_exp_name"], [258, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[256, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[259, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[260, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[261, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[262, 0, 1, "", "BatchSubSampler"], [263, 0, 1, "", "ClearCudaCache"], [264, 0, 1, "", "CountFramesLog"], [265, 0, 1, "", "LogReward"], [266, 0, 1, "", "OptimizerHook"], [267, 0, 1, "", "Recorder"], [268, 0, 1, "", "ReplayBufferTrainer"], [269, 0, 1, "", "RewardNormalizer"], [270, 0, 1, "", "SelectKeys"], [271, 0, 1, "", "Trainer"], [272, 0, 1, "", "TrainerHookBase"], [273, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[262, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[263, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[264, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[265, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[266, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[267, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[268, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[269, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[270, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[272, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[273, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[274, 2, 1, "", "correct_for_frame_skip"], [275, 2, 1, "", "get_stats_random_rollout"], [276, 2, 1, "", "make_collector_offpolicy"], [277, 2, 1, "", "make_collector_onpolicy"], [278, 2, 1, "", "make_dqn_loss"], [279, 2, 1, "", "make_redq_loss"], [280, 2, 1, "", "make_redq_model"], [281, 2, 1, "", "make_replay_buffer"], [282, 2, 1, "", "make_target_updater"], [283, 2, 1, "", "make_trainer"], [284, 2, 1, "", "parallel_env_constructor"], [285, 2, 1, "", "sync_async_collector"], [286, 2, 1, "", "sync_sync_collector"], [287, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 291, 292, 293, 294, 295, 296, 297, 301, 302, 306, 307], "tutori": [0, 297, 301], "basic": [0, 304], "intermedi": [0, 8], "advanc": 0, "refer": [0, 289], "knowledg": [0, 290], "base": [0, 7, 290], "indic": 0, "tabl": 0, "collector": [1, 295, 296, 297, 298, 301, 306], "packag": [1, 2, 3, 291, 292, 293, 294], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 295, 296, 297, 301, 306], "distribut": [1, 291], "helper": [1, 3], "function": [1, 4, 292, 296, 297, 301, 306], "replai": [2, 295, 296, 297, 298, 301, 304, 306], "buffer": [2, 295, 296, 297, 298, 301, 304, 306], "compos": [2, 96], "store": [2, 296], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 292, 297, 301], "learn": [2, 4, 297, 301], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 291, 292, 293], "env": [3, 302, 306, 307], "vector": [3, 306], "multi": [3, 291, 292, 300, 301], "agent": [3, 4, 291, 292, 301], "environ": [3, 4, 6, 7, 295, 296, 297, 298, 300, 301, 302, 306, 307], "transform": [3, 126, 295, 297, 301, 302, 304, 306, 307], "clone": [3, 7], "record": [3, 267, 293, 295], "domain": [3, 291], "specif": [3, 291, 300], "librari": [3, 306], "thing": [4, 295, 302], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 306], "gener": [4, 291], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 295, 302], "algorithm": [4, 291], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 295, 296], "return": [4, 292], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 295, 297, 298, 300, 301, 302], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 306], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "action": [4, 298, 302], "magnitud": 4, "task": [4, 300], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 295, 296, 297], "standard": 4, "explor": [4, 291, 295, 296], "valu": [4, 291, 292, 295, 297, 298], "loss": [4, 295, 296, 297, 298, 301], "earli": 4, "train": [4, 8, 292, 295, 297, 298, 301, 302], "roughli": 4, "uniformli": 4, "random": [4, 301], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 296], "increas": 4, "an": [4, 297, 298, 302], "dynam": [4, 304], "can": 4, "low": 4, "forward": [4, 295], "model": [4, 291, 295, 296, 298, 303, 306], "also": 4, "us": [4, 6, 9, 298, 303, 304, 306], "offlin": 4, "observ": [4, 295], "space": 4, "effect": [4, 302], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 307], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 306], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 301, 307], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 295], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 302], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 295, 304], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "envbas": [67, 302], "envcreat": 68, "envmetadata": 69, "gymlikeenv": 70, "modelbasedenvbas": 71, "multithreadedenv": 72, "parallelenv": 73, "serialenv": 74, "braxenv": 75, "braxwrapp": 76, "dmcontrolenv": 77, "dmcontrolwrapp": 78, "gymenv": 79, "gymwrapp": 80, "mogymenv": 81, "mogymwrapp": 82, "gym_backend": 83, "set_gym_backend": 84, "habitatenv": 85, "jumanjienv": 86, "jumanjiwrapp": 87, "openmlenv": 88, "vmasenv": 89, "vmaswrapp": 90, "dreamerenv": 91, "binarizereward": 92, "catfram": [93, 304], "cattensor": 94, "centercrop": 95, "dtypecasttransform": 97, "discreteactionproject": 98, "doubletofloat": 99, "excludetransform": 100, "finitetensordictcheck": 101, "flattenobserv": 102, "frameskiptransform": 103, "grayscal": 104, "inittrack": 105, "klrewardtransform": 106, "noopresetenv": 107, "observationnorm": 108, "observationtransform": 109, "pinmemorytransform": 110, "r3mtransform": 111, "randomcroptensordict": 112, "renametransform": 113, "resiz": 114, "reward2gotransform": 115, "rewardclip": 116, "rewardsc": 117, "rewardsum": 118, "selecttransform": 119, "squeezetransform": 120, "stepcount": 121, "targetreturn": 122, "tensordictprim": 123, "timemaxpool": 124, "totensorimag": 125, "transformedenv": 127, "unsqueezetransform": 128, "vc1transform": 129, "viprewardtransform": 130, "viptransform": 131, "vecnorm": [132, 307], "gsdenois": 133, "check_env_spec": 134, "exploration_mod": 135, "exploration_typ": 136, "get_available_librari": 137, "make_composite_from_td": 138, "set_exploration_mod": 139, "set_exploration_typ": 140, "step_mdp": 141, "cemplann": 142, "convnet": 143, "dtactor": 144, "ddpgcnnactor": 145, "ddpgcnnqnet": 146, "ddpgmlpactor": 147, "ddpgmlpqnet": 148, "decisiontransform": 149, "delta": 150, "distributionaldqnnet": 151, "distributionalqvaluehook": 152, "dreameractor": 153, "duelingcnndqnet": 154, "independentnorm": 155, "lstmmodul": 156, "lstmnet": 157, "mlp": [158, 298], "mpcplannerbas": 159, "mppiplann": 160, "maskedcategor": 161, "multiagentmlp": 162, "noisylazylinear": 163, "noisylinear": 164, "normalparamwrapp": 165, "obsdecod": 166, "obsencod": 167, "onehotcategor": 168, "onlinedtactor": 169, "qmixer": [170, 292], "qvaluehook": 171, "rssmposterior": 172, "rssmprior": 173, "squeeze2dlay": 174, "squeezelay": 175, "tanhdelta": 176, "tanhnorm": 177, "truncatednorm": 178, "vdnmixer": 179, "vmapmodul": 180, "reset_nois": 181, "actor": [182, 291, 295], "actorcriticoper": 183, "actorcriticwrapp": 184, "actorvalueoper": 185, "additivegaussianwrapp": 186, "decisiontransformerinferencewrapp": 187, "distributionalqvalueactor": 188, "distributionalqvaluemodul": 189, "egreedywrapp": 190, "lmheadactorvalueoper": 191, "ornsteinuhlenbeckprocesswrapp": 192, "probabilisticactor": 193, "qvalueactor": 194, "qvaluemodul": 195, "safemodul": [196, 291], "safeprobabilisticmodul": 197, "safeprobabilistictensordictsequenti": 198, "safesequenti": 199, "tanhmodul": 200, "valueoper": 201, "worldmodelwrapp": 202, "biased_softplu": 203, "inv_softplu": 204, "map": 205, "a2closs": 206, "cqlloss": 207, "clipppoloss": 208, "ddpgloss": 209, "dqnloss": 210, "dtloss": 211, "discretesacloss": 212, "distributionaldqnloss": 213, "dreameractorloss": 214, "dreamermodelloss": 215, "dreamervalueloss": 216, "hardupd": 217, "iqlloss": 218, "klpenppoloss": 219, "lossmodul": [220, 295], "onlinedtloss": 221, "ppoloss": 222, "redqloss": 223, "reinforceloss": 224, "sacloss": 225, "softupd": 226, "td3loss": 227, "valueestim": 228, "default_value_kwarg": 229, "distance_loss": 230, "hold_out_net": 231, "hold_out_param": 232, "qmixerloss": 233, "next_state_valu": 234, "gae": 235, "td0estim": 236, "td1estim": 237, "tdlambdaestim": 238, "valueestimatorbas": 239, "generalized_advantage_estim": 240, "reward2go": 241, "td0_advantage_estim": 242, "td0_return_estim": 243, "td1_advantage_estim": 244, "td1_return_estim": 245, "td_lambda_advantage_estim": 246, "td_lambda_return_estim": 247, "vec_generalized_advantage_estim": 248, "vec_td1_advantage_estim": 249, "vec_td1_return_estim": 250, "vec_td_lambda_advantage_estim": 251, "vec_td_lambda_return_estim": 252, "tensordictrecord": 253, "videorecord": 254, "logger": [255, 293], "csvlogger": 256, "generate_exp_nam": 257, "get_logg": 258, "mlflowlogg": 259, "tensorboardlogg": 260, "wandblogg": 261, "batchsubsampl": 262, "clearcudacach": 263, "countframeslog": 264, "logreward": 265, "optimizerhook": 266, "replaybuffertrain": 268, "rewardnorm": 269, "selectkei": 270, "trainer": [271, 293, 296], "trainerhookbas": 272, "updateweight": 273, "correct_for_frame_skip": 274, "get_stats_random_rollout": 275, "make_collector_offpolici": 276, "make_collector_onpolici": 277, "make_dqn_loss": 278, "make_redq_loss": 279, "make_redq_model": 280, "make_replay_buff": 281, "make_target_updat": 282, "make_train": 283, "parallel_env_constructor": 284, "sync_async_collector": 285, "sync_sync_collector": 286, "transformed_env_constructor": 287, "readm": [288, 299], "tuto": [288, 299], "api": 289, "contribut": [290, 306], "content": 290, "modul": [291, 295, 298, 306], "tensordict": [291, 304, 306], "wrapper": 291, "probabilist": 291, "q": [291, 296, 298], "oper": 291, "join": 291, "hook": [291, 293, 296], "regular": 291, "planner": 291, "object": [292, 295, 306], "dqn": [292, 296, 298], "ddpg": [292, 295], "sac": 292, "redq": 292, "iql": 292, "cql": 292, "dt": 292, "td3": 292, "ppo": [292, 297, 301], "a2c": 292, "dreamer": 292, "checkpoint": 293, "builder": 293, "_util": 294, "code": [295, 302], "setup": [295, 298], "The": 295, "__init__": 295, "method": 295, "estim": 295, "put": 295, "togeth": [295, 302], "call": 295, "parallel": [295, 300, 307], "execut": [295, 300, 302], "stat": 295, "build": [295, 296, 304], "evalu": 295, "batch": [295, 302, 304], "size": [295, 304], "construct": 295, "target": [295, 296], "network": [295, 296, 297, 298, 301], "updat": 295, "time": [295, 305], "experi": [295, 302], "result": [295, 297, 301], "conclus": [295, 296, 297, 298, 301, 302, 304], "A": [296, 304], "exampl": [296, 304], "comput": [296, 302, 305], "deep": 296, "collect": [296, 297], "paramet": [296, 297], "hyperparamet": [296, 297, 301], "regist": 296, "possibl": 296, "improv": 296, "defin": [297, 301], "loop": [297, 298, 301, 302], "next": [297, 301], "step": [297, 301, 307], "recurr": 298, "convolut": 298, "lstm": 298, "select": 298, "divers": 300, "rollout": [300, 301, 302, 307], "critic": 301, "pendulum": 302, "write": 302, "_step": 302, "reset": [302, 307], "simul": 302, "_reset": 302, "metadata": 302, "_spec": 302, "spec": [302, 307], "shape": 302, "seed": [302, 307], "wrap": 302, "class": [302, 306], "test": 302, "our": 302, "custom": [302, 304], "simpl": 302, "pretrain": 303, "vanilla": 304, "integr": 304, "tensorclass": 304, "sampl": 304, "iter": 304, "over": 304, "fix": 304, "priorit": 304, "save": 304, "raw": 304, "imag": 304, "more": 304, "complex": 304, "introduct": 306, "config": 306, "tensordictmodul": 306, "sequenc": 306, "program": 306, "ensembl": 306, "meta": 306, "special": 306, "state": 306, "frame_skip": 307, "deepmind": 307, "control": 307, "devic": 307, "run": 307, "close": 307, "access": 307, "attribut": 307, "kwarg": 307}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})