Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.gym.MOGymEnv", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper", "reference/generated/torchrl.envs.libs.gym.gym_backend", "reference/generated/torchrl.envs.libs.gym.set_gym_backend", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.pettingzoo.PettingZooEnv", "reference/generated/torchrl.envs.libs.pettingzoo.PettingZooWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.MOGymEnv.rst", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.gym_backend.rst", "reference/generated/torchrl.envs.libs.gym.set_gym_backend.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.pettingzoo.PettingZooEnv.rst", "reference/generated/torchrl.envs.libs.pettingzoo.PettingZooWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "check_marl_grouping", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "MOGymEnv", "MOGymWrapper", "gym_backend", "set_gym_backend", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "PettingZooEnv", "PettingZooWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 79, 90, 91, 92, 96, 98, 100, 103, 105, 106, 108, 114, 115, 118, 119, 120, 122, 130, 132, 133, 134, 136, 139, 141, 150, 152, 153, 154, 155, 163, 164, 165, 166, 170, 171, 175, 182, 183, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 210, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 262, 265, 274, 275, 279, 280, 283, 292, 293, 294, 295, 298, 299, 300, 303, 304, 308, 309, 311, 312, 314, 315], "open": [0, 5, 7, 11, 304, 309, 314], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315], "reinforc": [0, 3, 9, 98, 152, 153, 154, 155, 159, 197, 200, 214, 215, 219, 221, 225, 226, 232, 233, 234, 297, 304, 307, 310, 313, 314], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 98, 152, 153, 154, 155, 159, 167, 172, 197, 200, 214, 215, 219, 221, 225, 226, 231, 232, 233, 234, 297, 299, 300, 303, 304, 306, 307, 308, 310, 312, 313, 314, 315], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 72, 129, 172, 190, 201, 209, 214, 228, 230, 270, 298, 299, 300, 301, 303, 304, 305, 309, 311, 312, 315], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 73, 144, 297, 298, 299, 302, 303, 304, 305, 309, 310, 315], "pytorch": [0, 1, 2, 3, 132, 171, 172, 279, 298, 301, 303, 305, 306, 309, 310, 311, 314, 315], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 67, 70, 72, 73, 74, 75, 87, 91, 92, 113, 115, 119, 129, 134, 141, 152, 154, 160, 170, 178, 180, 181, 187, 188, 197, 198, 200, 203, 205, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 241, 242, 243, 275, 288, 298, 299, 300, 303, 304, 306, 309, 310, 311, 312, 314, 315], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 67, 70, 72, 73, 74, 75, 91, 92, 99, 100, 101, 103, 106, 109, 114, 115, 118, 119, 122, 125, 130, 134, 136, 138, 139, 150, 156, 159, 163, 164, 165, 166, 168, 169, 170, 188, 190, 194, 197, 198, 200, 201, 202, 203, 208, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 262, 266, 270, 276, 283, 288, 291, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "python": [0, 3, 5, 6, 7, 10, 21, 86, 168, 169, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 70, 98, 99, 109, 115, 118, 119, 132, 134, 136, 163, 165, 170, 171, 175, 190, 195, 196, 197, 201, 202, 204, 205, 216, 223, 227, 228, 230, 261, 278, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "low": [0, 25, 67, 70, 73, 74, 75, 101, 105, 145, 197, 201, 208, 303, 304, 305, 309, 310, 314, 315], "high": [0, 9, 25, 41, 67, 70, 73, 74, 75, 101, 105, 114, 145, 197, 201, 208, 243, 248, 256, 303, 304, 305, 309, 310, 312, 314, 315], "level": [0, 3, 4, 22, 26, 28, 98, 227, 303, 304, 314], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 67, 116, 166, 247, 271, 280, 301, 305, 310, 314], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 90, 91, 92, 101, 102, 103, 105, 106, 108, 109, 113, 114, 118, 125, 130, 132, 133, 134, 135, 136, 138, 139, 145, 149, 155, 157, 163, 164, 166, 168, 169, 172, 176, 178, 181, 195, 196, 198, 200, 201, 202, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 238, 241, 242, 243, 244, 245, 246, 247, 276, 291, 295, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 105, 188, 228, 299, 314], "effici": [0, 1, 2, 4, 8, 172, 299, 303, 304, 305, 306, 308, 309, 311, 312, 314], "modular": [0, 207, 312, 314], "document": [0, 5, 7, 18, 19, 21, 32, 67, 70, 73, 74, 75, 134, 304, 314], "properli": [0, 67, 70, 73, 74, 75, 305, 309, 310, 314], "test": [0, 3, 5, 136, 141, 163, 164, 275, 291, 305, 306, 314], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 73, 74, 75, 91, 92, 98, 102, 103, 106, 107, 115, 118, 122, 124, 126, 129, 130, 133, 134, 136, 138, 148, 149, 152, 153, 154, 155, 156, 159, 163, 164, 166, 167, 168, 169, 172, 173, 179, 180, 181, 190, 191, 195, 196, 197, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 249, 264, 267, 268, 269, 270, 274, 291, 293, 294, 299, 300, 301, 304, 305, 306, 309, 310, 311, 312, 314, 315], "code": [0, 3, 5, 7, 8, 118, 136, 163, 207, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315], "aim": [0, 3, 7, 28, 29, 118, 136, 138, 165, 282, 298, 299, 300, 303, 304, 314], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 73, 90, 91, 115, 133, 144, 159, 188, 196, 197, 204, 207, 221, 243, 244, 245, 246, 267, 299, 301, 305, 306, 309, 310, 312, 314], "research": [0, 7, 9, 314], "most": [0, 3, 7, 8, 32, 105, 303, 305, 310, 314, 315], "written": [0, 3, 34, 36, 39, 45, 52, 55, 67, 70, 73, 74, 75, 98, 113, 125, 128, 131, 148, 190, 200, 201, 204, 205, 209, 214, 216, 227, 230, 232, 242, 261, 262, 299, 300, 301, 303, 306, 308, 310, 314], "highli": [0, 2, 314, 315], "wai": [0, 3, 4, 118, 120, 138, 230, 243, 244, 245, 246, 299, 303, 304, 305, 308, 309, 310, 311, 312, 314, 315], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 67, 68, 70, 71, 73, 74, 75, 86, 91, 92, 96, 98, 101, 102, 103, 105, 106, 114, 115, 118, 119, 122, 125, 129, 130, 133, 134, 136, 138, 139, 149, 162, 163, 166, 167, 170, 172, 173, 186, 188, 190, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 275, 288, 293, 294, 295, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "easili": [0, 3, 7, 288, 300, 303, 304, 305, 309, 314, 315], "swap": [0, 3, 305, 311, 314], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 159, 179, 196, 197, 203, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 274, 279, 303, 304, 305, 306, 308, 309, 310, 311, 314], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 67, 68, 70, 73, 74, 75, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 151, 152, 156, 159, 160, 177, 178, 179, 187, 195, 199, 208, 211, 213, 219, 229, 262, 276, 288, 295, 297, 304, 306, 307, 311, 313], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 71, 73, 74, 75, 91, 92, 103, 106, 134, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 187, 188, 194, 195, 197, 198, 200, 203, 208, 211, 227, 262, 303, 304, 306, 308, 309, 310, 311, 312, 314, 315], "write": [0, 3, 8, 23, 32, 37, 45, 70, 101, 117, 190, 204, 205, 207, 209, 215, 217, 218, 220, 226, 231, 233, 235, 242, 247, 262, 299, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 67, 70, 73, 74, 75, 125, 133, 139, 148, 163, 200, 204, 205, 210, 214, 215, 216, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 303, 305, 306, 309, 310, 314, 315], "ones": [0, 15, 26, 32, 35, 41, 42, 67, 70, 73, 74, 75, 99, 102, 103, 104, 106, 115, 118, 122, 129, 130, 133, 134, 136, 138, 168, 169, 188, 204, 214, 215, 217, 226, 230, 231, 233, 235, 249, 303, 305, 309, 310, 312, 314, 315], "littl": [0, 3, 43, 305, 306, 312, 314, 315], "effort": [0, 3, 310, 312, 314], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 75, 86, 87, 91, 92, 96, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 115, 118, 119, 120, 122, 125, 126, 130, 131, 133, 134, 136, 137, 138, 139, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 241, 243, 244, 245, 246, 247, 261, 270, 272, 275, 276, 279, 281, 282, 283, 288, 291, 295, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "repo": [0, 6, 52, 136, 298, 309, 314], "attempt": [0, 194, 200, 218, 226, 241, 314], "align": [0, 314], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 67, 70, 73, 74, 75, 99, 104, 134, 283, 295, 309, 314, 315], "ecosystem": [0, 314], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 67, 68, 70, 73, 74, 75, 98, 130, 134, 163, 194, 197, 200, 205, 227, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 90, 139, 297, 303, 304, 311, 312, 314, 315], "pillar": [0, 314], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 103, 104, 105, 106, 110, 114, 115, 118, 119, 129, 133, 134, 136, 139, 141, 149, 163, 164, 166, 167, 194, 200, 222, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 270, 272, 275, 282, 283, 284, 285, 288, 291, 292, 293, 294, 295, 297, 298, 299, 307, 311, 312, 313], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 67, 70, 72, 73, 74, 75, 103, 118, 130, 136, 138, 140, 150, 151, 156, 163, 165, 166, 167, 170, 177, 178, 187, 191, 192, 193, 199, 204, 210, 214, 215, 216, 218, 219, 222, 223, 224, 226, 227, 228, 230, 231, 233, 241, 279, 284, 285, 286, 287, 288, 297, 298, 301, 305, 307, 309, 310, 312, 313, 315], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 90, 91, 92, 96, 98, 103, 104, 106, 113, 115, 122, 128, 141, 145, 149, 159, 163, 164, 167, 170, 179, 188, 190, 196, 198, 200, 201, 202, 204, 207, 208, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 270, 276, 279, 281, 284, 291, 293, 294, 295, 297, 299, 300, 301, 306, 310, 311, 312, 315], "util": [0, 3, 17, 23, 32, 40, 67, 70, 73, 74, 75, 76, 91, 92, 118, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 156, 211, 212, 213, 228, 291, 297, 302, 303, 305, 309, 310, 314, 315], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 67, 68, 70, 73, 74, 75, 99, 102, 109, 115, 118, 125, 130, 133, 134, 136, 138, 141, 162, 163, 167, 170, 173, 179, 185, 186, 195, 197, 201, 203, 204, 205, 242, 243, 244, 245, 246, 270, 282, 294, 299, 303, 304, 305, 309, 310, 311, 314, 315], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 67, 68, 70, 73, 74, 75, 99, 102, 109, 115, 118, 125, 130, 133, 134, 136, 138, 141, 162, 163, 167, 170, 185, 186, 195, 201, 204, 205, 242, 252, 253, 254, 255, 257, 258, 259, 260, 294, 299, 303, 304, 305, 309, 310, 311, 314, 315], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 98, 122, 128, 200, 276, 279, 281, 284, 285, 291, 293, 294, 297, 301, 312, 315], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 67, 70, 72, 73, 74, 75, 102, 103, 106, 118, 130, 133, 134, 136, 138, 139, 148, 149, 150, 165, 167, 170, 190, 196, 197, 201, 203, 204, 209, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 249, 266, 270, 282, 288, 291, 292, 293, 294, 295, 299, 300, 301, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 67, 70, 73, 74, 75, 113, 134, 165, 170, 303, 304, 305, 312, 314, 315], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 67, 70, 73, 74, 75, 91, 92, 98, 103, 106, 113, 114, 115, 129, 130, 133, 134, 139, 141, 150, 164, 165, 170, 188, 206, 207, 214, 216, 227, 230, 238, 241, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 279, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "few": [0, 2, 8, 270, 305, 306, 309, 312, 314, 315], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 103, 106, 209, 230, 299, 303, 305, 306, 309, 310, 314, 315], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 150, 204, 275, 279, 299, 303, 305, 306, 309, 310, 312, 314, 315], "standard": [0, 3, 115, 124, 139, 149, 160, 167, 171, 172, 194, 195, 235, 243, 244, 245, 246, 303, 304, 309, 312, 314], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 132, 279, 310, 312, 314, 315], "common": [0, 3, 4, 21, 70, 74, 75, 96, 191, 192, 193, 199, 214, 215, 216, 220, 226, 227, 230, 231, 232, 233, 235, 291, 298, 299, 301, 303, 305, 308, 309, 310, 311, 314, 315], "openai": [0, 7, 81, 82, 305, 310, 314, 315], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 67, 68, 70, 73, 74, 75, 81, 82, 83, 84, 85, 86, 98, 101, 112, 113, 115, 120, 122, 130, 133, 139, 163, 288, 291, 298, 303, 304, 305, 306, 310, 311, 312, 314], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 67, 70, 73, 74, 75, 91, 92, 98, 99, 101, 102, 103, 105, 106, 109, 115, 118, 119, 122, 129, 130, 133, 134, 136, 138, 139, 163, 164, 170, 190, 195, 196, 201, 202, 204, 205, 206, 207, 214, 216, 217, 220, 226, 227, 228, 230, 231, 232, 233, 234, 235, 243, 244, 245, 246, 247, 283, 301, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 68, 70, 72, 73, 74, 75, 79, 90, 91, 92, 96, 97, 98, 99, 100, 101, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 188, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 267, 270, 272, 273, 274, 275, 276, 277, 279, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 295, 299, 306, 309, 310, 312, 314], "On": [0, 3, 7, 18, 19, 20, 21, 299, 304, 309], "end": [0, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 67, 70, 73, 74, 75, 129, 134, 150, 166, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "come": [0, 1, 3, 8, 71, 74, 75, 103, 106, 190, 191, 192, 193, 201, 209, 303, 304, 305, 306, 309, 312, 314, 315], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 86, 91, 92, 96, 99, 102, 103, 106, 112, 113, 118, 128, 129, 130, 133, 134, 136, 138, 141, 146, 147, 163, 166, 170, 194, 195, 204, 228, 230, 247, 270, 275, 276, 285, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "re": [0, 3, 8, 32, 62, 67, 70, 73, 74, 75, 163, 168, 169, 201, 205, 301, 303, 305, 306, 308, 310, 314, 315], "usabl": [0, 301, 306, 314], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 67, 68, 70, 73, 74, 75, 86, 103, 106, 134, 139, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 168, 169, 170, 173, 174, 175, 176, 177, 180, 181, 183, 186, 188, 191, 192, 193, 194, 195, 197, 198, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 288, 291, 297, 299, 303, 306, 308, 310, 312, 315], "cost": [0, 2, 27, 303, 304, 309, 310, 312], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 67, 68, 70, 72, 73, 74, 75, 79, 85, 86, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 115, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 148, 149, 151, 152, 153, 154, 155, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 176, 177, 178, 180, 181, 184, 185, 186, 187, 190, 191, 192, 193, 195, 201, 203, 204, 205, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 279, 282, 284, 288, 291, 292, 293, 294, 295, 297, 299, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 67, 68, 70, 71, 73, 74, 75, 91, 92, 139, 170, 197, 200, 203, 301, 303, 304, 306, 309, 310, 311, 312, 314, 315], "good": [0, 1, 4, 9, 303, 305, 306, 309, 314, 315], "runtim": [0, 3, 32, 67, 70, 73, 74, 75, 310], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 67, 70, 73, 74, 75, 76, 103, 106, 114, 134, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 223, 230, 275, 279, 300, 303, 304, 305, 306, 308, 309, 310, 315], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 67, 70, 71, 73, 74, 75, 91, 92, 139, 191, 192, 193, 200, 220, 228, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 299, 300, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 67, 70, 73, 74, 75, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 117, 119, 120, 122, 125, 126, 128, 129, 130, 131, 133, 136, 137, 139, 176, 190, 191, 192, 193, 196, 201, 204, 205, 207, 209, 210, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 262, 275, 279, 288, 299, 303, 304, 305, 306, 308, 309, 310, 311, 315], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 73, 74, 75, 91, 92, 132, 136, 140, 159, 165, 171, 173, 190, 194, 196, 197, 204, 209, 214, 221, 228, 230, 243, 248, 256, 274, 298, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 315], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 300, 303, 304, 305, 309, 310, 314, 315], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 301, 303, 308, 311, 315], "beyond": 0, "api": [0, 3, 5, 91, 92, 118, 138, 300, 301, 309, 310, 314, 315], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 67, 68, 70, 72, 73, 74, 75, 76, 98, 99, 108, 113, 119, 141, 163, 190, 196, 197, 201, 202, 203, 204, 205, 299, 300, 304, 305, 306, 308, 309, 310, 311, 312, 315], "paper": [0, 118, 136, 138, 178, 187, 225, 288, 303, 305, 309], "ppo": [0, 4, 8, 201, 205, 216, 227, 230, 297, 299, 303, 304, 307, 313], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 67, 68, 70, 73, 74, 75, 81, 82, 98, 101, 102, 112, 113, 115, 120, 122, 130, 133, 134, 139, 163, 291, 299, 304, 305, 307, 313, 314, 315], "your": [0, 2, 3, 7, 8, 10, 18, 32, 67, 70, 71, 73, 74, 75, 91, 92, 139, 295, 298, 299, 300, 304, 305, 306, 307, 309, 312, 313, 314], "introduct": [0, 300, 307, 309, 313, 315], "multi": [0, 7, 9, 28, 29, 32, 67, 70, 73, 74, 75, 163, 164, 165, 170, 241, 243, 244, 245, 246, 297, 303, 304, 305, 306, 307, 310, 313, 314], "agent": [0, 9, 28, 29, 71, 76, 91, 92, 129, 168, 169, 170, 172, 178, 187, 241, 297, 307, 310, 313], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 163, 166, 167, 204, 228, 261, 283, 284, 285, 288, 291, 293, 294, 295, 297, 299, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 67, 68, 70, 72, 73, 74, 75, 79, 86, 90, 91, 92, 96, 98, 99, 100, 102, 103, 104, 105, 106, 112, 113, 115, 118, 119, 120, 122, 129, 130, 132, 133, 134, 136, 138, 139, 141, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 160, 162, 163, 165, 166, 167, 169, 170, 172, 173, 176, 177, 178, 179, 185, 186, 187, 188, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 256, 265, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 291, 295, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 313, 315], "pretrain": [0, 307, 313], "recurr": [0, 163, 181, 304, 307, 312, 313], "dqn": [0, 159, 196, 197, 214, 215, 217, 218, 220, 221, 222, 225, 226, 228, 230, 231, 232, 233, 234, 235, 241, 286, 297, 299, 307, 313], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 67, 70, 73, 74, 75, 91, 92, 103, 110, 118, 129, 134, 136, 138, 141, 152, 154, 163, 194, 198, 200, 214, 215, 216, 217, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 243, 279, 281, 291, 297, 301, 304, 307, 311, 312, 313, 315], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 67, 70, 72, 73, 74, 75, 105, 113, 129, 146, 147, 159, 163, 170, 172, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 214, 215, 216, 217, 220, 226, 227, 229, 230, 231, 232, 233, 235, 275, 281, 284, 285, 291, 293, 294, 299, 300, 301, 304, 307, 311, 312, 313, 314, 315], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 98, 105, 119, 122, 130, 215, 217, 218, 220, 226, 231, 233, 235, 276, 279, 289, 291, 297, 301, 307, 310, 311, 313], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 72, 73, 74, 75, 98, 102, 105, 118, 119, 122, 130, 133, 134, 136, 138, 204, 207, 215, 217, 218, 220, 226, 231, 233, 235, 276, 279, 289, 291, 297, 301, 307, 310, 311, 313, 315], "task": [0, 3, 9, 28, 29, 40, 45, 74, 75, 79, 91, 92, 118, 136, 138, 226, 303, 304, 305, 306, 307, 309, 310, 313, 314, 315], "specif": [0, 2, 5, 8, 41, 42, 70, 156, 195, 279, 297, 300, 301, 305, 306, 307, 309, 312, 313], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 67, 70, 73, 74, 75, 103, 106, 115, 118, 133, 134, 136, 139, 167, 178, 187, 190, 191, 201, 204, 205, 206, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 283, 284, 285, 290, 291, 295, 297, 299, 301, 304, 305, 306, 307, 309, 310, 312, 313, 315], "ddpg": [0, 152, 153, 154, 155, 217, 225, 234, 297, 299, 304, 307, 313], "loss": [0, 3, 8, 36, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 274, 279, 286, 287, 288, 291, 300, 301, 307, 310, 312, 313, 314], "trainer": [0, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 303, 307, 313], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 73, 74, 75, 87, 101, 105, 110, 113, 118, 119, 120, 130, 133, 134, 136, 137, 139, 140, 141, 148, 149, 150, 159, 163, 165, 167, 168, 169, 170, 172, 173, 188, 194, 195, 196, 197, 198, 201, 202, 205, 207, 208, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 238, 241, 243, 244, 245, 246, 247, 249, 263, 264, 267, 272, 279, 281, 288, 291, 300, 303, 305, 307, 309, 310, 313, 315], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 112, 113, 115, 118, 120, 122, 129, 130, 132, 133, 134, 136, 138, 139, 145, 148, 149, 150, 151, 156, 159, 163, 164, 165, 167, 170, 173, 176, 177, 178, 179, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 209, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 236, 237, 241, 243, 244, 245, 246, 249, 270, 271, 272, 273, 274, 276, 277, 278, 281, 288, 291, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315], "packag": [0, 6, 7, 10, 86, 297, 298, 315], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 73, 74, 75, 98, 99, 118, 138, 150, 163, 164, 165, 170, 203, 207, 216, 218, 220, 221, 227, 230, 231, 235, 243, 244, 245, 246, 252, 253, 254, 255, 257, 258, 259, 260, 288, 295, 297, 303, 304, 305, 306, 308, 309, 310, 311, 312], "node": [0, 2, 18, 19, 20, 21, 22, 288, 297], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 91, 92, 113, 115, 149, 157, 158, 159, 160, 162, 167, 168, 169, 173, 176, 177, 180, 181, 184, 185, 186, 194, 195, 196, 197, 201, 205, 206, 214, 215, 216, 220, 221, 226, 227, 230, 231, 232, 233, 235, 297, 301, 304, 305, 309, 310, 314, 315], "helper": [0, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 303, 304, 306, 310], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 67, 70, 73, 74, 75, 98, 133, 134, 139, 199, 223, 288, 297, 303, 304, 305, 306, 308, 309, 312, 314, 315], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 67, 70, 72, 73, 74, 75, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 115, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 181, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 215, 218, 220, 231, 233, 235, 241, 297, 310], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 86, 91, 92, 96, 98, 99, 101, 103, 104, 105, 106, 107, 112, 113, 115, 118, 119, 120, 122, 126, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 145, 148, 149, 152, 153, 154, 155, 156, 159, 162, 163, 165, 166, 167, 169, 170, 171, 173, 176, 177, 178, 179, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 220, 221, 222, 226, 227, 228, 230, 231, 232, 233, 235, 237, 241, 242, 243, 244, 245, 246, 261, 262, 270, 276, 279, 282, 283, 288, 289, 291, 292, 295, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "human": [0, 297, 310], "feedback": [0, 297, 314], "rlhf": [0, 34, 40, 45, 54, 113, 297, 299], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 68, 70, 73, 74, 75, 96, 103, 106, 114, 120, 133, 134, 139, 141, 149, 166, 167, 275, 283, 284, 285, 288, 291, 293, 294, 295, 297, 306], "gymlikeenv": [0, 297], "envmetadata": [0, 297], "vector": [0, 1, 8, 24, 27, 33, 71, 91, 92, 105, 152, 154, 165, 243, 246, 256, 257, 258, 259, 260, 297, 303, 304, 306, 308, 309, 310, 311, 315], "record": [0, 32, 67, 70, 73, 74, 75, 113, 230, 261, 262, 263, 264, 265, 266, 267, 268, 269, 291, 297, 304, 305], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 67, 70, 73, 74, 75, 105, 130, 145, 190, 196, 197, 201, 202, 203, 204, 205, 206, 207, 297, 305, 306, 309, 310, 314, 315], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 67, 70, 71, 72, 73, 74, 75, 86, 102, 105, 113, 118, 119, 129, 130, 133, 134, 136, 138, 139, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 239, 241, 243, 244, 245, 246, 247, 279, 286, 287, 291, 297, 300, 301, 304, 305, 308, 309, 310, 311, 312], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145, 148, 149, 158, 159, 163, 164, 166, 167, 178, 179, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 261, 270, 274, 275, 276, 278, 279, 288, 297, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 315], "actor": [0, 4, 15, 21, 113, 149, 151, 152, 154, 159, 160, 167, 177, 179, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 241, 288, 297, 300, 304, 305, 306, 309, 311, 314], "explor": [0, 1, 140, 172, 190, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 214, 275, 284, 285, 291, 297, 305, 306, 309, 310], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 67, 70, 71, 73, 74, 75, 86, 97, 98, 99, 101, 103, 105, 106, 114, 115, 118, 119, 122, 123, 125, 130, 131, 133, 134, 138, 139, 145, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 270, 272, 273, 274, 275, 276, 279, 288, 291, 297, 301, 304, 308, 309, 310, 312, 314, 315], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 67, 68, 70, 72, 73, 74, 75, 91, 92, 102, 104, 113, 115, 120, 125, 126, 133, 157, 168, 169, 176, 190, 201, 205, 209, 210, 231, 237, 243, 248, 256, 265, 279, 297, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315], "hook": [0, 32, 67, 70, 73, 74, 75, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 179, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 297], "planner": [0, 149, 167, 297], "sac": [0, 220, 231, 233, 297], "redq": [0, 231, 287, 288, 297], "iql": [0, 226, 297, 309], "cql": [0, 215, 297], "dt": [0, 200, 297, 310], "td3": [0, 235, 297], "a2c": [0, 214, 297], "dreamer": [0, 95, 160, 222, 223, 224, 297, 299], "checkpoint": [0, 297, 311], "builder": [0, 297, 304, 315], "logger": [0, 262, 264, 265, 266, 267, 268, 269, 273, 279, 291, 295, 297, 304], "_util": [0, 3, 11, 297], "implement_for": [0, 3, 297], "contribut": 0, "thing": [0, 3, 7, 8, 298, 305, 306, 309, 312, 315], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 67, 70, 73, 74, 75, 105, 139, 157, 184, 298, 303, 310, 312], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 68, 70, 71, 73, 74, 75, 90, 91, 92, 96, 98, 102, 103, 105, 106, 113, 114, 115, 118, 119, 125, 129, 130, 133, 134, 136, 138, 139, 146, 147, 149, 159, 165, 166, 167, 168, 169, 171, 179, 185, 201, 204, 205, 207, 211, 216, 218, 221, 227, 230, 236, 241, 242, 243, 244, 245, 246, 261, 262, 276, 295, 298, 299, 301, 303, 304, 305, 306, 309, 310, 311, 312, 315], "debug": [0, 6, 8, 40, 298, 315], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 67, 70, 73, 74, 75, 99, 113, 118, 136, 139, 150, 165, 197, 203, 208, 216, 227, 230, 279, 298, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "habitat": [0, 3, 87, 298, 311], "lab": [0, 3, 79, 80, 298], "mujoco": [0, 6, 8, 298, 305, 306], "error": [0, 1, 3, 7, 10, 11, 29, 32, 67, 70, 73, 74, 75, 76, 119, 141, 298, 303, 305, 309, 315], "solut": [0, 3, 6, 7, 9, 21, 298, 299, 301, 314], "resourc": [0, 1, 21, 298, 303, 305, 309], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 67, 70, 73, 74, 75, 91, 193, 228, 233, 243, 246, 298, 299, 303, 305, 306, 309, 310, 311, 315], "issu": [0, 4, 5, 8, 55, 56, 65, 119, 190, 196, 197, 201, 202, 203, 204, 205, 298, 314], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 67, 70, 73, 74, 75, 98, 105, 148, 168, 169, 308, 309, 312, 314], "search": [0, 304], "page": [0, 7], "somewhat": [1, 300, 315], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 67, 70, 73, 74, 75, 104, 134, 159, 179, 196, 197, 202, 203, 230, 276, 314, 315], "dataload": [1, 54, 62, 304, 305, 312], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 73, 74, 75, 108, 122, 163, 176, 194, 198, 200, 299, 304, 312, 314, 315], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 110, 113, 114, 115, 118, 119, 120, 122, 129, 130, 131, 132, 133, 134, 136, 138, 139, 145, 148, 149, 150, 151, 152, 153, 155, 156, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 207, 208, 209, 211, 214, 215, 216, 217, 218, 220, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 241, 242, 243, 244, 245, 246, 249, 251, 252, 253, 257, 258, 260, 270, 275, 276, 277, 288, 291, 295, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 71, 73, 74, 75, 91, 92, 108, 113, 118, 133, 134, 138, 163, 164, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 276, 279, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 98, 115, 118, 138, 141, 200, 215, 217, 220, 231, 233, 235, 270, 276, 279, 281, 282, 283, 291, 301, 303, 306, 309, 310, 311, 312, 314, 315], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 67, 70, 73, 74, 75, 105, 115, 131, 148, 188, 207, 221, 223, 228, 249, 282, 301, 303, 304, 305, 309, 310, 315], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 73, 74, 75, 91, 92, 97, 102, 109, 118, 130, 133, 134, 135, 136, 138, 148, 163, 204, 205, 214, 215, 217, 218, 220, 221, 222, 223, 226, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 299, 303, 306, 309, 310, 312, 315], "static": [1, 11, 40, 45, 139, 226, 310, 312], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 67, 68, 70, 71, 73, 74, 75, 90, 91, 92, 93, 94, 99, 102, 103, 104, 105, 106, 113, 115, 118, 122, 130, 133, 134, 136, 138, 139, 145, 150, 151, 152, 153, 154, 156, 159, 161, 163, 164, 165, 168, 169, 170, 173, 177, 188, 195, 196, 197, 198, 200, 204, 208, 209, 214, 215, 216, 217, 220, 226, 227, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 270, 299, 300, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 67, 70, 71, 73, 74, 75, 87, 91, 92, 129, 132, 141, 170, 199, 231, 300, 303, 305, 306, 309, 310, 311, 312, 315], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 67, 70, 73, 74, 75, 103, 105, 106, 114, 120, 134, 146, 147, 163, 198, 200, 216, 227, 230, 262, 276, 281, 293, 294, 295, 299, 303, 304, 305, 306, 309, 310, 312], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 67, 70, 73, 74, 75, 91, 92, 98, 102, 118, 130, 132, 133, 134, 136, 138, 139, 141, 150, 163, 169, 170, 172, 178, 187, 191, 193, 194, 197, 198, 201, 204, 205, 208, 215, 226, 228, 233, 243, 244, 245, 246, 247, 288, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 67, 70, 72, 73, 74, 75, 98, 102, 109, 118, 125, 130, 133, 134, 135, 136, 138, 188, 204, 205, 206, 228, 301, 305, 315], "two": [1, 3, 4, 8, 10, 32, 62, 67, 70, 73, 74, 75, 115, 118, 138, 155, 163, 182, 205, 227, 238, 275, 279, 288, 300, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315], "main": [1, 2, 3, 5, 20, 22, 68, 205, 279, 299, 300, 303, 304, 308, 315], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 67, 70, 73, 74, 75, 91, 101, 102, 118, 130, 133, 134, 136, 138, 148, 150, 163, 165, 168, 169, 170, 171, 188, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 261, 272, 282, 288, 291, 292, 295, 303, 304, 305, 306, 309, 310, 312, 315], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 67, 70, 72, 73, 74, 75, 76, 91, 92, 101, 103, 106, 113, 115, 118, 125, 134, 136, 138, 139, 148, 158, 163, 165, 168, 169, 174, 179, 197, 202, 203, 205, 207, 208, 209, 228, 240, 243, 246, 261, 275, 276, 293, 294, 299, 303, 305, 308, 310, 311, 312, 314, 315], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 133, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 288, 292, 295, 299, 303, 304, 305, 309, 312], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 67, 70, 73, 74, 75, 107, 115, 126, 150, 165, 170, 183, 190, 196, 201, 202, 204, 206, 207, 209, 228, 240, 275, 278, 279, 288, 300, 301, 303, 305, 306, 309, 310], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 72, 73, 74, 75, 96, 130, 163, 198, 206, 207, 283, 295, 299, 301, 304, 305, 306, 309, 312, 313, 315], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 68, 70, 72, 73, 74, 75, 78, 89, 91, 92, 96, 109, 112, 114, 115, 128, 129, 130, 131, 134, 148, 149, 160, 163, 164, 166, 167, 194, 198, 200, 201, 205, 214, 222, 230, 242, 243, 244, 245, 246, 249, 250, 251, 261, 270, 275, 279, 301, 303, 304, 306, 308, 310, 311, 312, 314], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 67, 70, 73, 74, 75, 118, 133, 136, 139, 207, 303, 310, 314], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 67, 70, 73, 74, 75, 119, 129, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 218, 228, 243, 244, 245, 246, 247, 261, 292, 303, 304, 306, 310, 312, 315], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 67, 70, 72, 73, 74, 75, 90, 91, 92, 98, 105, 110, 114, 115, 124, 128, 131, 139, 149, 150, 157, 158, 160, 161, 162, 163, 165, 167, 170, 173, 174, 175, 178, 180, 181, 184, 185, 186, 187, 190, 194, 195, 198, 200, 201, 204, 205, 209, 213, 215, 220, 222, 226, 227, 229, 231, 233, 235, 270, 272, 275, 279, 281, 282, 283, 293, 294, 295, 299, 303, 304, 305, 306, 309, 310, 311, 315], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 67, 70, 73, 74, 75, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 163, 165, 171, 172, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 244, 245, 246, 276, 303, 305, 306, 309, 310, 312, 315], "deliv": [1, 16, 18, 19, 20, 303, 304, 314], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 67, 70, 71, 73, 74, 75, 91, 92, 139, 163, 206, 207, 261, 270, 299, 304, 308, 310, 314], "user": [1, 2, 3, 5, 8, 21, 32, 52, 67, 70, 73, 74, 75, 129, 134, 156, 164, 230, 292, 300, 301, 303, 304, 310, 314, 315], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 96, 98, 102, 107, 109, 112, 114, 118, 125, 126, 128, 129, 130, 131, 133, 136, 137, 139, 141, 163, 189, 200, 261, 288, 303, 304, 305, 306, 308, 309, 314], "whenev": [1, 3, 32, 35, 38, 41, 42, 86, 112, 134, 228, 243, 244, 245, 246, 281, 299], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 67, 70, 73, 74, 75, 194, 198, 200, 303, 305, 309, 314, 315], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 96, 103, 104, 106, 114, 115, 120, 122, 124, 126, 128, 130, 133, 139, 148, 149, 163, 167, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 288, 300, 303, 305, 306, 308, 309, 310, 311, 312, 314, 315], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 67, 70, 72, 73, 74, 75, 78, 89, 91, 92, 96, 98, 99, 101, 102, 107, 112, 115, 120, 126, 128, 129, 133, 134, 137, 139, 148, 149, 151, 156, 160, 163, 164, 165, 167, 174, 177, 178, 180, 181, 187, 191, 204, 210, 214, 216, 227, 228, 230, 231, 232, 241, 242, 243, 244, 245, 246, 247, 249, 295, 299, 300, 303, 304, 305, 306, 309, 310, 315], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 67, 70, 73, 74, 75, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 114, 115, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 148, 163, 171, 194, 196, 198, 202, 223, 304, 305, 306, 309, 310, 311, 312, 315], "predefin": [1, 304, 305, 312], "becaus": [1, 3, 4, 7, 40, 67, 70, 73, 74, 75, 113, 133, 155, 164, 170, 190, 196, 197, 201, 202, 203, 204, 205, 303, 304, 306, 308, 309, 310, 312, 315], "potenti": [1, 310, 312], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 67, 70, 73, 74, 75, 115, 134, 137, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 173, 174, 175, 176, 177, 180, 181, 183, 185, 186, 188, 191, 194, 195, 197, 198, 200, 201, 203, 205, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 283, 300, 303, 305, 306, 308, 309, 311, 312], "heavi": [1, 8, 312], "crucial": [1, 194, 198, 200, 226, 228, 303, 304, 305, 306, 309, 310, 315], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 113, 151, 156, 177, 228, 230, 288, 299, 303, 304, 305, 309, 310], "hyperparamet": [1, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 303, 310, 312], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 130, 292, 295, 303, 312], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 72, 73, 74, 75, 76, 79, 80, 85, 86, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 291, 292, 293, 294, 295, 299, 300, 303, 306, 309, 310, 311, 314], "take": [1, 3, 8, 23, 40, 67, 70, 73, 74, 75, 101, 128, 129, 131, 133, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 199, 200, 203, 208, 211, 213, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 281, 299, 301, 303, 304, 305, 309, 310, 312, 315], "consider": [1, 3, 8, 304, 309, 312], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 75, 91, 92, 103, 106, 129, 134, 150, 163, 165, 209, 215, 216, 217, 218, 220, 221, 227, 228, 230, 231, 233, 235, 241, 243, 246, 303, 304, 305, 309, 310, 315], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 71, 72, 73, 74, 75, 91, 92, 98, 101, 102, 104, 109, 113, 115, 119, 120, 122, 125, 126, 128, 129, 133, 134, 139, 141, 148, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 201, 203, 204, 205, 208, 211, 220, 225, 227, 228, 230, 231, 234, 242, 243, 244, 245, 246, 247, 262, 274, 275, 276, 279, 291, 293, 294, 295, 299, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "occur": [1, 8, 14, 28, 29, 99, 115, 119, 190, 196, 197, 201, 202, 203, 204, 205, 223, 312, 315], "serial": [1, 3, 32, 67, 70, 73, 74, 75, 139], "optim": [1, 2, 8, 32, 67, 70, 73, 74, 75, 134, 149, 167, 171, 172, 215, 228, 229, 230, 233, 274, 279, 291, 300, 301, 305, 306, 309, 310], "parallel": [1, 3, 8, 17, 91, 92, 141, 214, 292, 293, 294, 295, 304, 305, 309], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 98, 122, 291, 294, 297, 305, 306, 309, 312], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 86, 87, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 293, 294, 295, 299, 300, 301, 303, 304, 305, 306, 309, 312, 315], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 68, 73, 74, 75, 139, 293, 294, 295, 303, 305, 314, 315], "multisyncdatacollector": [1, 18, 19, 20, 21, 294, 297, 305, 314], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 71, 91, 92, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 299, 301, 305, 312, 314], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 139, 200, 281, 299, 303, 309, 310], "aggreg": [1, 150, 152, 153, 207], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 67, 68, 70, 73, 74, 75, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 114, 115, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 148, 163, 165, 179, 195, 197, 198, 203, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 243, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 281, 299, 304, 306, 310, 311, 314, 315], "final": [1, 3, 4, 21, 34, 36, 39, 40, 163, 194, 198, 199, 200, 206, 243, 275, 299, 303, 304, 305, 309, 310, 315], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 293, 297, 303, 304, 305, 314], "sever": [1, 8, 30, 32, 45, 67, 70, 73, 74, 75, 99, 101, 134, 230, 303, 305, 312, 315], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 67, 70, 72, 73, 74, 75, 90, 98, 109, 115, 119, 122, 130, 134, 135, 139, 157, 158, 163, 164, 168, 169, 170, 171, 176, 178, 184, 188, 200, 204, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 270, 273, 276, 277, 278, 279, 281, 293, 294, 295, 301, 304, 305, 306, 308, 309, 311, 314, 315], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 119, 169, 176, 242, 283, 298, 303, 304, 305, 306, 309, 310, 312, 315], "continu": [1, 9, 25, 46, 67, 70, 73, 74, 75, 91, 92, 145, 152, 153, 154, 155, 200, 207, 214, 215, 220, 226, 230, 231, 232, 233, 234, 235, 243, 248, 256, 299, 303, 305, 306, 309, 310, 312, 314, 315], "concomitantli": 1, "network": [1, 4, 8, 32, 67, 70, 71, 73, 74, 75, 91, 92, 150, 152, 153, 154, 155, 158, 160, 161, 165, 170, 172, 174, 175, 178, 180, 181, 182, 187, 191, 192, 193, 204, 208, 215, 216, 217, 218, 220, 221, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 239, 241, 243, 244, 245, 246, 247, 290, 291, 299, 300, 301, 308, 310, 315], "impli": [1, 315], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 163, 172, 204, 214, 215, 216, 220, 223, 281, 290, 299, 301, 303, 304, 305, 306, 308, 310, 312, 314], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 67, 70, 73, 74, 75, 113, 115, 126, 134, 135, 139, 141, 165, 300, 301, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315], "slightli": [1, 299, 300, 306, 310, 311, 312, 315], "lag": [1, 13, 14, 16, 17, 303, 304, 305], "therefor": [1, 3, 7, 67, 70, 73, 74, 75, 122, 129, 230, 241, 315], "although": [1, 8, 67, 70, 73, 74, 75, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 301, 303, 304, 312], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 75, 90, 91, 92, 96, 98, 113, 118, 125, 128, 131, 133, 135, 138, 148, 168, 169, 194, 198, 200, 201, 204, 205, 213, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 300, 301, 303, 304, 305, 308, 309, 310, 312, 315], "asynchron": [1, 9, 14, 21, 32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204, 214, 293, 304, 305], "off": [1, 2, 4, 162, 186, 196, 233, 275, 284, 299, 301, 303, 304, 305, 309, 311, 315], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 67, 70, 73, 74, 75, 91, 92, 103, 106, 109, 115, 129, 159, 163, 170, 171, 191, 193, 195, 197, 202, 214, 221, 226, 230, 275, 299, 301, 303, 304, 305, 306, 309, 310, 311, 312, 315], "remot": [1, 18, 19, 20, 21, 74, 75, 315], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 67, 70, 72, 73, 74, 75, 91, 92, 93, 94, 96, 98, 101, 103, 106, 113, 120, 141, 149, 163, 167, 200, 214, 283, 299, 303, 305, 306, 311, 312, 314], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 126, 231, 243, 244, 245, 246, 247, 300, 303, 305], "synchronis": [1, 68, 309], "either": [1, 5, 22, 32, 40, 54, 67, 70, 73, 74, 75, 129, 210, 235, 266, 301, 303, 304, 306, 311, 312, 314, 315], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 303, 309, 314], "update_at_each_batch": [1, 13, 14, 17, 303], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 90, 91, 92, 93, 94, 96, 98, 99, 102, 105, 109, 112, 113, 114, 115, 118, 119, 120, 124, 128, 130, 132, 133, 134, 135, 136, 138, 139, 141, 145, 148, 149, 150, 152, 153, 154, 155, 161, 163, 165, 167, 168, 169, 170, 171, 172, 185, 186, 190, 191, 192, 193, 194, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 215, 216, 217, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 243, 244, 245, 246, 249, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 272, 273, 275, 276, 279, 295, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "second": [1, 8, 163, 197, 216, 227, 230, 233, 278, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 102, 103, 104, 106, 113, 117, 118, 120, 122, 130, 132, 133, 134, 136, 138, 145, 148, 149, 150, 151, 152, 153, 154, 155, 159, 161, 163, 164, 165, 167, 170, 171, 172, 177, 178, 179, 187, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 207, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 276, 281, 288, 289, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 67, 70, 73, 74, 75, 109, 113, 133, 158, 159, 173, 191, 192, 193, 196, 197, 199, 204, 210, 214, 216, 217, 218, 221, 227, 230, 232, 241, 242, 243, 244, 245, 246, 279, 288, 297, 301, 303, 304, 305, 306, 308, 309, 310, 315], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 67, 68, 70, 72, 73, 74, 75, 80, 98, 115, 130, 133, 139, 145, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 211, 218, 220, 228, 241, 243, 244, 245, 246, 262, 266, 275, 283, 284, 285, 288, 291, 293, 294, 299, 300, 301, 303, 305, 306, 310, 312, 315], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 102, 103, 104, 106, 118, 120, 122, 130, 133, 134, 136, 138, 145, 148, 149, 163, 167, 171, 172, 178, 179, 187, 190, 191, 192, 193, 195, 196, 197, 201, 202, 203, 204, 207, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 276, 288, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 67, 70, 73, 74, 75, 120, 155, 163, 165, 173, 188, 190, 194, 196, 204, 209, 228, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 298, 300, 303, 304, 305, 309, 310, 312, 314, 315], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 67, 68, 70, 71, 73, 74, 75, 90, 91, 92, 96, 98, 101, 103, 104, 105, 106, 114, 115, 118, 127, 133, 134, 135, 138, 139, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 170, 173, 174, 175, 176, 177, 179, 180, 181, 183, 188, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 241, 243, 244, 245, 246, 250, 251, 272, 274, 275, 279, 283, 288, 295, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 73, 74, 75, 102, 113, 117, 118, 130, 133, 134, 136, 138, 204, 271, 303, 304, 305, 306, 309, 311, 315], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 74, 75, 99, 101, 105, 114, 125, 133, 139, 163, 164, 171, 172, 190, 196, 201, 202, 204, 205, 208, 216, 220, 227, 230, 231, 235, 249, 288, 295, 299, 301, 303, 304, 305, 309, 310, 312, 314], "infer": [1, 74, 75, 98, 129, 139, 163, 171, 195, 303, 305, 312], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 67, 70, 72, 73, 74, 75, 79, 80, 114, 115, 134, 139, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 206, 207, 208, 211, 275, 293, 294, 295, 298, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314], "dispatch": [1, 18, 19, 20, 21, 188], "avail": [1, 3, 4, 6, 21, 62, 91, 92, 113, 159, 179, 201, 205, 228, 293, 294, 299, 303, 304, 305, 306, 309, 310, 312, 315], "speed": [1, 2, 4, 8, 27, 300, 303, 304, 305, 306, 309, 310, 312], "up": [1, 2, 3, 8, 9, 27, 40, 52, 133, 230, 298, 299, 300, 303, 304, 305, 306, 309, 310, 312, 315], "avoid": [1, 32, 55, 56, 65, 67, 70, 73, 74, 75, 86, 134, 139, 190, 204, 209, 216, 227, 230, 282, 305, 309], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 173, 299, 300, 303, 304, 309], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 99, 103, 106, 109, 118, 120, 122, 127, 130, 132, 133, 134, 135, 138, 139, 145, 148, 149, 150, 151, 156, 157, 159, 163, 164, 165, 167, 168, 169, 170, 173, 176, 177, 178, 179, 180, 181, 184, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 209, 214, 215, 217, 218, 220, 226, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 262, 270, 276, 288, 299, 304, 305, 306, 308, 309, 310, 311, 314, 315], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 67, 68, 69, 70, 71, 73, 74, 75, 91, 92, 103, 106, 120, 133, 135, 139, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 171, 173, 174, 175, 177, 178, 180, 181, 183, 187, 188, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 216, 227, 228, 230, 243, 244, 245, 246, 247, 276, 293, 294, 295, 299, 303, 304, 305, 306, 308, 309, 310, 312, 315], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 90, 98, 109, 135, 139, 163, 195, 214, 216, 217, 220, 226, 227, 228, 230, 231, 232, 233, 235, 243, 244, 245, 246, 299, 300, 304, 305, 309, 312], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 67, 70, 73, 74, 75, 139, 149, 164, 167, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 288, 297, 301, 303, 305, 306, 309, 311, 312, 315], "while": [1, 3, 7, 8, 32, 67, 70, 73, 74, 75, 122, 134, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 226, 227, 230, 299, 303, 305, 306, 309, 310, 311, 312, 314], "wait": [1, 20, 21, 22, 306, 310], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 67, 70, 73, 74, 75, 86, 91, 92, 98, 105, 115, 120, 122, 125, 126, 130, 134, 181, 206, 207, 208, 214, 215, 217, 218, 220, 226, 230, 233, 243, 250, 251, 299, 301, 303, 304, 305, 306, 308, 309, 310, 312, 315], "impact": [1, 103, 106, 304, 306, 309], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 67, 68, 70, 73, 74, 75, 98, 102, 118, 130, 133, 134, 136, 138, 139, 204, 295, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "manag": [1, 8, 239, 240, 243, 244, 245, 246, 275], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 67, 70, 73, 74, 75, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 122, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 148, 149, 158, 159, 163, 166, 167, 179, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 262, 273, 274, 275, 277, 278, 279, 283, 288, 300, 301, 303, 305, 306, 308, 309, 310, 312, 314, 315], "control": [1, 3, 5, 8, 16, 71, 79, 80, 91, 92, 105, 148, 152, 153, 154, 155, 163, 166, 167, 181, 188, 200, 204, 205, 206, 214, 216, 227, 230, 234, 243, 248, 256, 299, 301, 303, 304, 305, 309, 310, 312], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 67, 70, 73, 74, 75, 98, 99, 110, 113, 114, 115, 118, 119, 128, 130, 131, 133, 134, 136, 141, 162, 163, 168, 169, 186, 191, 192, 193, 195, 201, 204, 205, 207, 214, 215, 216, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 238, 241, 243, 244, 245, 246, 270, 274, 288, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 303, 304, 309, 314], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 67, 70, 73, 74, 75, 91, 92, 98, 101, 103, 106, 110, 129, 134, 163, 275, 279, 300, 303, 304, 305, 306, 309, 310, 312, 315], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 200, 303, 315], "usual": [1, 3, 4, 6, 7, 8, 52, 67, 70, 73, 74, 75, 172, 230, 243, 244, 245, 246, 247, 261, 288, 298, 299, 301, 303, 304, 305, 306, 309, 312, 315], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 67, 68, 70, 71, 73, 74, 75, 91, 92, 98, 103, 105, 106, 110, 114, 115, 133, 134, 139, 150, 163, 165, 168, 169, 170, 195, 200, 208, 303, 304, 305, 308, 309, 311, 312, 315], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 67, 69, 70, 73, 74, 75, 98, 103, 106, 122, 297, 301, 304, 305, 306, 309, 311], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 73, 74, 75, 79, 90, 91, 92, 96, 98, 99, 105, 109, 113, 114, 115, 118, 119, 122, 124, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 183, 184, 185, 186, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 241, 242, 243, 244, 245, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 291, 295, 301, 303, 304, 305, 306, 311, 312, 314, 315], "behaviour": [1, 3, 21, 70, 99, 103, 106, 115, 119, 129, 148, 162, 163, 186, 275, 299, 304, 306, 310, 312], "besid": 1, "those": [1, 5, 7, 26, 28, 74, 75, 103, 106, 115, 130, 163, 201, 205, 206, 207, 281, 293, 294, 299, 303, 304, 309, 310, 315], "choos": [1, 71, 163, 230, 299, 300, 303, 304, 305, 309, 312], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 67, 70, 72, 73, 74, 75, 90, 91, 92, 113, 118, 136, 150, 163, 165, 197, 202, 203, 213, 214, 215, 216, 217, 220, 226, 227, 228, 230, 231, 232, 233, 235, 279, 288, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 282, 303, 305, 314], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 98, 110, 194, 198, 200, 261, 262, 272, 275, 279, 282, 283, 303, 304, 305, 306, 309, 312, 314, 315], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 70, 73, 74, 75, 90, 98, 101, 102, 105, 109, 112, 113, 115, 117, 118, 125, 128, 130, 133, 134, 136, 138, 139, 141, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 167, 170, 171, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 204, 205, 207, 208, 211, 216, 227, 230, 242, 243, 244, 245, 246, 261, 275, 301, 304, 305, 306, 309, 310, 312, 315], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 98, 122, 282, 303, 304, 305, 306, 309, 312, 314], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 67, 68, 70, 73, 74, 75, 91, 92, 118, 125, 128, 129, 130, 131, 138, 139, 159, 163, 170, 174, 178, 179, 187, 194, 196, 197, 198, 203, 207, 249, 252, 253, 254, 255, 257, 258, 259, 260, 275, 276, 293, 294, 299, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 282, 303, 304], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 67, 70, 72, 73, 74, 75, 105, 114, 115, 130, 141, 163, 198, 201, 204, 205, 215, 231, 275, 283, 299, 303, 304, 305, 306, 310, 311, 312, 314, 315], "rand_step": [1, 3, 67, 68, 70, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 88, 112, 130, 139, 310, 314, 315], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 303], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 303, 304, 305], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 67, 70, 73, 74, 75, 119, 133, 149, 163, 167, 200, 230, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 297, 300, 303, 304, 305, 306, 310, 312, 314, 315], "pad": [1, 23, 37, 43, 52, 98, 150, 152, 153, 163, 164, 168, 169, 276], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 98, 99, 115, 119, 125, 132, 163, 165, 168, 169, 172, 196, 201, 204, 205, 228, 299, 303, 304, 306, 309, 310, 312], "mask": [1, 4, 23, 27, 30, 31, 33, 91, 92, 96, 119, 159, 168, 169, 179, 195, 196, 197, 198, 202, 203, 276, 304, 306, 315], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 67, 70, 73, 74, 75, 98, 102, 118, 130, 132, 133, 134, 136, 138, 166, 204, 213, 221, 279, 298, 304, 305, 308, 309, 310, 312, 315], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 70, 119, 168, 169, 194, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 301, 306], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 67, 70, 73, 74, 75, 110, 119, 139, 159, 168, 169, 179, 196, 197, 202, 203, 205, 238, 243, 276, 303, 305, 306, 309], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 76, 119, 134, 150, 165, 168, 169, 194, 200, 227, 243, 244, 245, 246, 276, 301, 315], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 275, 297, 303, 304], "strategi": [1, 16, 71, 169, 176, 198, 299, 301, 303, 304, 309, 312], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 67, 70, 73, 74, 75, 118, 138, 299, 300, 303, 305, 309, 310, 312, 315], "tool": [1, 2, 3, 5, 306, 310, 312, 315], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 85, 86, 301, 303, 305, 306, 310], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 297], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 297], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 96, 99, 102, 103, 104, 105, 106, 113, 115, 118, 120, 122, 124, 129, 130, 132, 133, 134, 136, 138, 139, 145, 148, 149, 150, 151, 156, 157, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 249, 270, 277, 278, 288, 291, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "multiprocess": [1, 18, 19, 20, 68, 69, 139, 304, 305, 310, 315], "synchron": [1, 13, 19, 21, 73, 293, 294, 304, 305], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 73, 74, 75, 103, 106, 129, 134, 139, 142, 146, 147, 157, 162, 163, 176, 184, 185, 186, 201, 205, 228, 275, 303, 304, 306, 309, 314, 315], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 194, 200, 273, 277, 303, 304, 309], "dedic": [1, 3, 18, 19, 20, 21, 191, 192, 193, 299, 303, 308, 309], "folder": [1, 304], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 67, 70, 73, 74, 75, 119, 206, 207, 270, 279, 299, 303, 304, 305, 308, 314, 315], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 67, 68, 70, 72, 73, 74, 75, 76, 91, 92, 98, 101, 102, 103, 104, 106, 108, 113, 114, 115, 118, 125, 130, 131, 133, 134, 136, 138, 139, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 204, 205, 207, 208, 211, 223, 228, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 274, 279, 282, 293, 294, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315], "variou": [1, 3, 13, 14, 16, 17, 163, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 241, 293, 294, 303, 304, 305, 309, 315], "machin": [1, 7, 18, 19, 20, 32, 53, 309], "One": [1, 2, 4, 8, 31, 33, 45, 98, 122, 136, 176, 194, 204, 208, 234, 238, 266, 303, 304, 312, 315], "wonder": 1, "why": [1, 3, 310, 315], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 73, 75, 91, 92, 292, 297, 303, 304, 305, 308, 314, 315], "instead": [1, 4, 7, 8, 11, 27, 32, 67, 70, 73, 74, 75, 109, 130, 134, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 214, 215, 216, 218, 220, 221, 226, 227, 230, 231, 232, 233, 241, 243, 247, 295, 299, 310, 312, 315], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 67, 70, 73, 74, 75, 91, 92, 102, 103, 104, 106, 118, 126, 129, 130, 132, 133, 134, 136, 138, 162, 165, 181, 185, 186, 204, 207, 213, 214, 215, 217, 218, 220, 226, 228, 230, 231, 232, 233, 235, 281, 293, 294, 295, 299, 300, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315], "lower": [1, 2, 17, 21, 25, 101, 139, 180, 181, 208, 305, 310], "io": [1, 73], "footprint": [1, 2, 312], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 63, 67, 70, 71, 73, 74, 75, 91, 92, 98, 101, 109, 118, 120, 134, 138, 139, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 171, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 202, 203, 204, 208, 211, 213, 220, 231, 232, 233, 235, 242, 247, 262, 279, 295, 299, 300, 303, 304, 305, 306, 309, 310, 312, 314, 315], "commun": [1, 2, 3, 298, 305, 315], "yet": [1, 228, 311], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 67, 69, 70, 72, 73, 74, 75, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 115, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 145, 159, 179, 181, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 288, 299, 303, 304, 305, 306, 308, 309, 314], "plai": [1, 3, 91, 92, 98, 304, 305, 312, 315], "role": [1, 3, 304, 315], "opposit": 1, "direct": [1, 32, 67, 70, 73, 74, 75, 228, 304], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 67, 70, 73, 74, 75, 91, 92, 148, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 196, 197, 198, 200, 202, 203, 208, 211, 303, 304, 305, 306, 310, 311, 312, 314, 315], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 73, 243, 244, 245, 246, 306, 309], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 68, 74, 75, 139, 163, 170, 191, 192, 193, 214, 216, 217, 220, 226, 227, 230, 231, 232, 233, 235, 295, 299, 305, 306, 308, 309, 314, 315], "among": [1, 3, 91, 92, 309], "achiev": [1, 3, 4, 32, 67, 70, 73, 74, 75, 129, 276, 301, 303, 304, 305, 306, 309, 310, 315], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 52, 53, 74, 118, 133, 138, 219, 228, 300, 301, 303, 304, 305, 306, 312, 315], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 275, 300, 303, 305, 309, 312, 315], "gpu": [1, 7, 8, 32, 55, 56, 65, 67, 70, 73, 74, 75, 303, 305, 306, 309, 315], "nativ": [1, 7, 9, 67, 70, 73, 74, 75, 98, 306, 312], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 162, 185, 186, 213, 298, 303, 304, 305, 306, 309, 311, 315], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 115, 139, 149, 157, 160, 163, 164, 167, 184, 194, 201, 205, 228, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 299, 300, 303, 304, 305, 309, 310, 312, 314, 315], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 67, 70, 73, 74, 75, 101, 102, 118, 130, 133, 134, 136, 138, 163, 168, 169, 190, 194, 195, 196, 198, 200, 201, 202, 204, 205, 208, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 292, 303, 304, 305, 309, 312, 315], "build": [1, 3, 7, 23, 26, 32, 67, 70, 73, 74, 75, 139, 149, 163, 167, 199, 201, 205, 279, 286, 287, 289, 290, 299, 301, 305, 306, 309, 310, 311, 314, 315], "central": [2, 303, 304, 309, 312], "part": [2, 4, 8, 32, 40, 67, 70, 73, 74, 75, 115, 122, 125, 163, 209, 270, 295, 303, 305, 306, 310, 315], "algorithm": [2, 3, 8, 9, 13, 14, 72, 110, 214, 230, 231, 232, 233, 270, 284, 297, 300, 301, 303, 304, 305, 306, 309, 311, 312, 314], "implement": [2, 3, 9, 11, 16, 32, 63, 67, 70, 73, 74, 75, 102, 104, 113, 120, 133, 139, 162, 184, 185, 186, 214, 215, 219, 226, 228, 229, 230, 233, 288, 299, 301, 303, 304, 305, 306, 310, 314], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 52, 62, 67, 68, 70, 73, 74, 75, 98, 113, 118, 120, 130, 136, 139, 149, 163, 164, 170, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "give": [2, 7, 41, 67, 70, 72, 73, 74, 75, 98, 298, 300, 303, 304, 309, 310, 311, 314], "abil": [2, 228, 310, 312], "veri": [2, 3, 304, 310, 312, 314, 315], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 70, 72, 73, 74, 75, 90, 98, 119, 122, 142, 143, 146, 147, 149, 157, 162, 167, 168, 169, 176, 177, 180, 185, 186, 190, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 214, 215, 216, 217, 218, 227, 229, 230, 235, 270, 276, 279, 282, 299, 303, 304, 305, 306, 309, 311, 314, 315], "latenc": 2, "especi": [2, 3, 7, 8, 99], "larger": [2, 4, 226], "volum": 2, "lazymemmapstorag": [2, 98, 297, 303, 304, 306, 311, 312], "advis": [2, 315], "due": [2, 3, 5, 311, 312, 315], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 311, 312], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 67, 70, 73, 74, 75, 180, 181, 228, 247, 303, 304, 306, 311, 312, 314, 315], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 67, 70, 73, 74, 75, 91, 92, 103, 104, 106, 125, 127, 129, 135, 149, 204, 205, 228, 234, 299, 303, 305, 306], "file": [2, 6, 7, 8, 261, 301, 304, 312, 313], "locat": [2, 7, 45, 70, 115, 124, 162, 173, 185, 186, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 303, 304, 305, 309, 312], "improv": [2, 4, 110, 214, 300, 309, 312], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 297, 312], "were": [2, 7, 74, 75, 305, 312], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 67, 70, 73, 74, 75, 96, 139, 198, 201, 205, 227, 228, 230, 303, 304, 306], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 73, 91, 92, 98, 118, 136, 151, 152, 153, 154, 155, 156, 159, 160, 161, 167, 168, 169, 172, 174, 175, 177, 178, 180, 181, 187, 197, 200, 214, 215, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 243, 248, 256, 288, 311, 314], "github": [2, 5, 6, 7, 10, 18, 19, 20, 91, 92, 136, 311, 314], "com": [2, 5, 6, 7, 10, 18, 19, 20, 91, 92, 311, 314], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 67, 70, 71, 72, 73, 74, 75, 91, 92, 102, 104, 113, 118, 120, 130, 133, 134, 136, 138, 139, 143, 147, 150, 165, 170, 172, 178, 187, 194, 196, 201, 204, 205, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 237, 241, 249, 288, 293, 299, 303, 304, 305, 309, 310, 312, 315], "1x": 2, "lazytensorstorag": [2, 41, 42, 122, 297, 305, 309, 312], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 67, 70, 71, 73, 74, 75, 90, 91, 92, 96, 98, 102, 105, 113, 115, 118, 120, 122, 130, 132, 133, 134, 136, 138, 145, 149, 150, 152, 153, 156, 159, 161, 163, 164, 165, 167, 170, 173, 176, 178, 188, 190, 191, 192, 193, 196, 197, 201, 203, 204, 207, 208, 209, 214, 215, 217, 218, 220, 221, 222, 223, 226, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 249, 252, 253, 254, 255, 257, 258, 259, 260, 262, 278, 299, 301, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 114, 162, 185, 186, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 304, 305, 310, 312, 315], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 90, 98, 119, 150, 190, 194, 196, 204, 205, 209, 270, 303, 305, 312, 315], "pai": [2, 8, 303, 306], "attent": [2, 8, 303, 306], "alwai": [2, 3, 20, 26, 28, 32, 54, 67, 70, 73, 74, 75, 113, 114, 221, 228, 299, 300, 304, 305, 306, 309, 310, 312], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 130, 162, 178, 185, 186, 303, 306, 309, 310, 312, 314], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 73, 74, 75, 98, 99, 109, 115, 119, 127, 132, 135, 139, 150, 151, 156, 163, 165, 168, 169, 171, 172, 177, 178, 182, 183, 184, 185, 188, 196, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 295, 299, 303, 304, 305, 306, 309, 310, 312], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 67, 70, 72, 73, 74, 75, 101, 104, 105, 126, 132, 136, 139, 163, 172, 173, 195, 197, 198, 203, 205, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 243, 276, 288, 293, 294, 299, 301, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315], "word": [2, 40, 52, 228, 303, 310, 315], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 67, 68, 70, 73, 74, 75, 91, 98, 118, 125, 133, 134, 136, 139, 145, 148, 150, 152, 153, 154, 155, 156, 161, 163, 165, 166, 170, 195, 205, 218, 221, 231, 241, 262, 276, 283, 284, 285, 291, 293, 294, 299, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315], "1m": [2, 282, 303, 305, 306, 311], "multidimension": [2, 41, 58, 312], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 156, 163, 171, 188, 195, 206, 207, 214, 216, 221, 227, 230, 242, 279, 299, 301, 303, 304, 305, 306, 310, 312, 315], "desir": [2, 3, 32, 67, 70, 73, 74, 75, 102, 115, 118, 119, 130, 133, 134, 136, 138, 146, 147, 150, 165, 170, 190, 196, 197, 201, 202, 203, 204, 205, 299, 303, 309, 310], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 67, 70, 73, 74, 75, 82, 84, 89, 115, 118, 119, 122, 136, 141, 170, 171, 196, 205, 228, 230, 243, 244, 245, 246, 276, 285, 295, 299, 300, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "do": [2, 3, 4, 7, 70, 114, 119, 139, 148, 170, 171, 192, 243, 301, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315], "custom": [2, 3, 5, 32, 67, 70, 73, 74, 75, 136, 170, 208, 221, 230, 236, 295, 299, 303, 304, 305, 306, 309], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 67, 70, 71, 73, 74, 75, 76, 79, 91, 92, 105, 107, 120, 125, 126, 134, 136, 163, 196, 202, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 247, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 288, 301, 303, 304, 305, 306, 309, 310, 315], "randomcroptensordict": [2, 303], "here": [2, 3, 4, 7, 8, 9, 10, 67, 70, 73, 74, 75, 91, 92, 98, 299, 300, 303, 304, 305, 306, 309, 310, 312, 314, 315], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 67, 70, 73, 74, 75, 91, 92, 214, 216, 225, 227, 230, 279, 298, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 173, 188, 194, 195, 200, 205, 210, 243, 267, 268, 269, 295, 297, 305, 306, 309, 311, 315], "around": [2, 5, 7, 15, 17, 41, 42, 72, 205, 243, 303, 304, 309, 315], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 98, 141, 215, 226, 301, 311, 312, 314], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 67, 70, 73, 74, 75, 107, 125, 126, 148, 151, 152, 153, 154, 155, 161, 172, 177, 200, 204, 205, 206, 207, 214, 215, 216, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 295, 301, 303, 308, 309, 312, 314], "replaybuff": [2, 41, 42, 66, 98, 119, 122, 218, 221, 241, 289, 291, 297, 305, 309, 311, 312, 314], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 119, 218, 221, 241, 297, 303, 305, 309, 312], "By": [2, 3, 33, 67, 70, 73, 74, 75, 91, 92, 188, 205, 228, 275, 295, 303, 311, 312, 315], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 67, 70, 71, 73, 74, 75, 76, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 115, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 139, 145, 159, 173, 190, 191, 192, 193, 196, 201, 202, 204, 205, 207, 208, 209, 210, 241, 275, 297, 299, 300, 303, 304, 305, 306, 311], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 96, 98, 99, 102, 103, 105, 106, 109, 112, 115, 118, 119, 120, 122, 124, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 214, 215, 217, 218, 220, 223, 224, 226, 228, 230, 231, 232, 233, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 288, 299, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 67, 70, 73, 74, 75, 120, 130, 148, 165, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 236, 238, 241, 299, 301, 303, 305, 306, 309, 310, 312, 315], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 91, 92, 279, 298, 305, 306, 309, 315], "respons": [2, 3, 8, 279, 315], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 113, 191, 192, 193, 204, 226, 288, 297, 303, 310, 314], "repositori": [2, 7, 53], "latest": [2, 10, 73, 91, 92, 276, 305, 309, 310, 314], "wheel": [2, 305], "publish": 2, "pypi": [2, 314], "openml": [2, 53, 90], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 165, 188, 204, 206, 207, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 299, 301, 303, 304, 305, 306, 309, 310, 312, 315], "parent": [2, 3, 21, 26, 28, 44, 67, 99, 102, 104, 109, 110, 115, 118, 130, 133, 135, 136, 191, 228, 230, 247, 303, 310, 314, 315], "subclass": [2, 3, 67, 70, 73, 74, 75, 133, 141, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 204, 205, 206, 208, 211, 228, 230, 304, 306, 310, 312], "basic": [2, 72, 299, 305, 315], "properti": [2, 3, 32, 34, 36, 39, 67, 70, 72, 73, 74, 75, 133, 134, 157, 162, 171, 176, 184, 185, 186, 228, 310, 312], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 107, 109, 111, 112, 113, 115, 116, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 148, 151, 152, 153, 154, 155, 156, 159, 163, 164, 174, 175, 177, 179, 180, 190, 191, 192, 193, 195, 196, 198, 200, 201, 202, 209, 210, 214, 215, 216, 217, 218, 220, 223, 226, 227, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 262, 288, 291, 299, 301, 304, 305, 306, 308, 309, 310, 312, 314, 315], "action": [2, 3, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 67, 70, 71, 72, 73, 74, 75, 78, 89, 91, 92, 93, 94, 96, 101, 103, 105, 106, 110, 113, 114, 120, 122, 126, 134, 145, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 165, 166, 167, 168, 169, 177, 178, 179, 181, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 208, 209, 214, 215, 217, 218, 220, 226, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 288, 291, 295, 299, 300, 301, 303, 304, 305, 308, 309, 311, 312, 314, 315], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 67, 70, 71, 73, 74, 75, 90, 91, 92, 94, 99, 103, 106, 113, 115, 120, 122, 130, 132, 139, 140, 141, 145, 148, 149, 151, 156, 157, 158, 163, 165, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 184, 187, 190, 191, 192, 193, 195, 196, 197, 201, 202, 203, 204, 207, 208, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 238, 241, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 270, 276, 279, 291, 299, 303, 304, 305, 306, 308, 309, 311, 312, 314, 315], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 96, 102, 103, 104, 105, 106, 113, 115, 118, 120, 122, 130, 132, 133, 134, 136, 138, 141, 145, 148, 149, 159, 163, 167, 171, 172, 178, 179, 187, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 207, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 249, 288, 299, 305, 306, 308, 309, 310, 311, 312, 314, 315], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 67, 68, 70, 72, 73, 74, 75, 76, 84, 85, 86, 91, 92, 96, 98, 101, 112, 113, 115, 118, 120, 122, 130, 133, 138, 139, 145, 148, 149, 159, 163, 165, 167, 170, 173, 178, 179, 187, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 209, 214, 215, 216, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 272, 275, 288, 291, 299, 300, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 67, 68, 70, 73, 74, 75, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 115, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 150, 157, 163, 165, 170, 184, 190, 195, 196, 201, 202, 204, 205, 208, 209, 215, 220, 227, 229, 231, 233, 276, 281, 299, 303, 305, 308, 309, 310, 312, 314, 315], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 67, 70, 72, 73, 74, 75, 90, 91, 92, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 148, 150, 152, 153, 154, 155, 158, 159, 163, 164, 165, 170, 171, 172, 179, 180, 181, 182, 183, 188, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 273, 277, 282, 291, 299, 300, 301, 303, 304, 305, 306, 309, 310, 314, 315], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 75, 90, 91, 92, 98, 101, 102, 103, 104, 106, 113, 115, 118, 120, 131, 133, 136, 138, 141, 150, 151, 152, 153, 156, 158, 159, 160, 163, 164, 165, 170, 173, 179, 188, 190, 191, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 262, 270, 299, 300, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315], "send": [2, 3, 8, 314], "receiv": [2, 3, 32, 40, 67, 70, 73, 74, 75, 129, 133, 165, 249, 300, 303, 305, 308, 310], "spawn": [2, 3, 4, 18, 22, 73, 309], "check_env_spec": [2, 3, 297, 305, 309, 310], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 70, 73, 74, 75, 98, 102, 104, 109, 113, 115, 118, 120, 121, 122, 130, 133, 134, 136, 138, 149, 164, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 247, 261, 292, 300, 301, 302, 304, 305, 306, 310, 312, 315], "saniti": [2, 3, 7, 141, 305], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 67, 70, 72, 73, 74, 75, 102, 105, 115, 118, 130, 133, 134, 136, 138, 148, 149, 159, 160, 167, 179, 183, 190, 196, 197, 198, 200, 203, 204, 205, 206, 207, 209, 213, 217, 218, 242, 243, 244, 245, 246, 247, 249, 271, 275, 291, 299, 301, 303, 304, 305, 309, 310, 315], "techniqu": [2, 8, 304, 312], "commonli": [2, 315], "emploi": [2, 172], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 312], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 67, 70, 73, 74, 75, 98, 103, 106, 139, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 218, 221, 241, 299, 310, 314], "offer": [2, 3, 7, 299, 304, 310, 315], "facilit": [2, 3, 7, 117, 118, 136, 138, 191, 192, 193, 299, 303, 306, 310], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 129, 201, 205, 303, 305, 309, 310, 315], "extern": [2, 3, 103, 106, 315], "consist": [2, 3, 32, 35, 38, 41, 42, 67, 70, 73, 74, 75, 113, 150, 165, 303, 304, 305, 310, 311, 315], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204, 303, 304, 315], "manner": [2, 70, 118, 136, 299, 303, 304, 305, 308, 310, 312], "handl": [3, 21, 32, 67, 70, 73, 74, 75, 139, 163, 165, 279, 293, 294, 303, 304, 305, 309, 312], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 67, 70, 71, 73, 74, 75, 91, 92, 98, 105, 115, 120, 129, 134, 135, 159, 163, 165, 167, 170, 179, 226, 230, 238, 243, 244, 245, 250, 251, 275, 279, 281, 293, 294, 299, 300, 301, 303, 304, 305, 308, 309, 310, 311, 312, 315], "dm": [3, 303, 315], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 72, 73, 122, 130, 136, 137, 191, 199, 214, 215, 217, 218, 220, 222, 226, 230, 231, 232, 233, 235, 279, 288, 299, 300, 301, 303, 304, 306, 309, 310, 312, 315], "goal": [3, 4, 129, 303, 304, 305, 306, 309, 310], "abl": [3, 71, 91, 92, 303, 305, 306, 308, 309, 310, 312, 314], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 141, 264, 265, 266, 267, 268, 269, 298, 304, 305, 309, 312], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 67, 68, 70, 73, 74, 75, 303, 305, 309, 310, 315], "simul": [3, 5, 7, 8, 95, 149, 167, 299, 303, 305, 309], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 73, 74, 75, 91, 92, 118, 136, 141, 152, 163, 183, 205, 206, 207, 270, 282, 299, 301, 303, 304, 305, 306, 309, 310, 312, 314, 315], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 67, 70, 73, 74, 75, 91, 92, 130, 141, 168, 169, 171, 172, 190, 195, 196, 197, 200, 201, 202, 203, 204, 205, 239, 240, 301, 303, 304, 305, 306, 309, 310, 312, 314, 315], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 67, 70, 73, 74, 75, 190, 196, 197, 201, 202, 203, 204, 205, 228, 243, 244, 245, 246, 247, 300, 303, 304, 310, 315], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 67, 68, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 112, 113, 115, 120, 122, 130, 133, 139, 163, 288, 291, 303, 304, 305, 306, 308, 309, 311, 312, 314, 315], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 67, 70, 72, 73, 74, 75, 102, 105, 113, 118, 130, 133, 134, 136, 138, 149, 150, 152, 153, 154, 155, 158, 159, 160, 161, 163, 165, 167, 169, 170, 173, 178, 179, 187, 190, 191, 192, 193, 195, 196, 198, 200, 201, 202, 204, 205, 206, 207, 209, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 288, 291, 299, 300, 303, 304, 305, 306, 308, 309, 310, 311, 314], "typic": [3, 4, 8, 32, 67, 70, 73, 74, 75, 129, 215, 228, 230, 233, 299, 300, 301, 305, 309, 310], "organis": [3, 304, 310], "arbitrari": [3, 33, 74, 75, 299, 303, 304, 310], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 67, 70, 73, 74, 75, 243, 244, 245, 246, 247, 301, 304, 305, 309, 310, 312, 314], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 103, 106, 200, 243, 244, 245, 246, 247, 300, 303, 305, 306, 309, 310, 311, 312], "attribut": [3, 4, 32, 45, 67, 70, 73, 74, 75, 118, 128, 136, 163, 205, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 303, 306, 310], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 98, 103, 106, 120, 122, 130, 133, 148, 149, 156, 159, 163, 167, 178, 179, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 270, 276, 288, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 67, 70, 71, 73, 74, 75, 91, 92, 98, 119, 163, 187, 191, 192, 193, 210, 299, 304, 305, 306, 309], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 67, 70, 72, 73, 74, 75, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 115, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 141, 163, 170, 197, 200, 204, 207, 214, 215, 216, 217, 218, 220, 226, 227, 228, 230, 231, 232, 233, 235, 241, 283, 298, 299, 300, 301, 303, 305, 306, 309, 310, 312, 315], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 75], "actual": [3, 4, 7, 17, 67, 70, 73, 74, 75, 129, 282, 300, 303, 305, 309, 310], "just": [3, 4, 67, 70, 71, 73, 74, 75, 91, 92, 101, 170, 270, 299, 301, 303, 304, 305, 306, 309, 310, 312, 314, 315], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 67, 70, 73, 74, 75, 99, 104, 115, 148, 149, 167, 201, 205, 208, 214, 215, 216, 218, 227, 230, 231, 233, 235, 241, 243, 244, 245, 246, 288, 295, 301, 304, 305, 310, 315], "care": [3, 8, 67, 70, 73, 74, 75, 133, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 303, 305, 309, 310, 312], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 67, 70, 73, 74, 75, 91, 92, 102, 118, 130, 132, 133, 134, 136, 138, 140, 150, 162, 165, 170, 171, 178, 186, 187, 191, 193, 204, 205, 276, 303, 304, 305, 306, 309, 310, 312, 315], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 150, 162, 165, 170, 186, 204, 276, 303, 304, 305, 306, 310], "parametr": [3, 172, 205, 215, 226, 233, 303, 305], "hardwar": 3, "observation_spec": [3, 67, 70, 72, 73, 74, 75, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 115, 118, 121, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 149, 163, 167, 283, 291, 303, 305, 308, 309, 310, 315], "compositespec": [3, 28, 49, 67, 69, 70, 72, 73, 74, 75, 96, 103, 104, 105, 106, 113, 120, 128, 129, 130, 133, 145, 149, 167, 190, 194, 201, 207, 208, 297, 303, 305, 309, 310, 315], "pair": [3, 32, 34, 36, 39, 52, 67, 70, 73, 74, 75, 130, 191, 201, 205, 228, 243, 244, 245, 246, 247, 299, 300, 303, 304, 305, 308, 310, 315], "state_spec": [3, 67, 70, 72, 73, 74, 75, 96, 305, 310, 315], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 67, 70, 73, 74, 75, 90, 118, 131, 134, 136, 138, 303, 310], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 67, 70, 72, 73, 74, 75, 78, 89, 91, 92, 96, 98, 103, 106, 113, 122, 159, 179, 181, 190, 196, 201, 202, 215, 218, 231, 233, 235, 291, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "reward_spec": [3, 67, 70, 72, 73, 74, 75, 96, 97, 101, 102, 103, 104, 106, 123, 124, 125, 133, 135, 149, 167, 305, 309, 310, 315], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 67, 70, 72, 73, 74, 75, 78, 89, 90, 93, 94, 96, 97, 101, 102, 103, 104, 106, 113, 120, 122, 123, 124, 125, 126, 129, 133, 135, 137, 138, 139, 145, 148, 149, 167, 195, 210, 214, 215, 217, 218, 220, 223, 226, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 272, 273, 275, 277, 295, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "done_spec": [3, 67, 70, 73, 74, 75, 103, 104, 106, 133, 305, 309, 310, 315], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 200, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 299, 309, 310, 311], "input_spec": [3, 67, 70, 72, 73, 74, 75, 102, 103, 104, 105, 115, 120, 125, 126, 128, 133, 134, 135, 149, 167, 309, 310], "full_action_spec": [3, 67, 70, 73, 74, 75, 309], "full_state_spec": [3, 67, 70, 73, 74, 75], "lock": [3, 26, 28, 67, 70, 73, 74, 75, 130, 139, 310], "modifi": [3, 7, 8, 26, 28, 32, 45, 67, 70, 73, 74, 75, 102, 109, 113, 118, 130, 133, 134, 136, 138, 195, 200, 204, 282, 288, 303, 304, 305, 309, 310], "directli": [3, 4, 8, 67, 70, 72, 73, 74, 75, 122, 228, 295, 299, 305, 309, 310, 312], "output_spec": [3, 67, 70, 73, 74, 75, 102, 104, 113, 120, 133, 134, 309, 310], "full_observation_spec": [3, 67, 70, 73, 74, 75], "full_reward_spec": [3, 67, 70, 73, 74, 75, 309], "full_done_spec": [3, 67, 70, 73, 74, 75, 309], "importantli": [3, 201, 205], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 67, 70, 71, 72, 73, 74, 75, 79, 80, 81, 83, 84, 88, 96, 98, 122, 139, 149, 150, 151, 152, 153, 156, 159, 160, 161, 164, 165, 167, 170, 173, 174, 175, 176, 177, 178, 179, 187, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 209, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 261, 299, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315], "action_s": 3, "help": [3, 4, 32, 67, 70, 73, 74, 75, 298, 300, 303, 304, 305, 306, 309], "prealloc": [3, 310], "With": [3, 71, 129, 301, 303, 304, 309, 312, 315], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 72, 73, 74, 75, 85, 91, 92, 99, 100, 101, 103, 104, 105, 106, 107, 109, 113, 114, 115, 118, 119, 125, 126, 130, 133, 134, 136, 138, 139, 148, 150, 163, 164, 165, 168, 169, 170, 188, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 257, 258, 259, 260, 274, 276, 279, 281, 283, 288, 291, 295, 298, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315], "instanti": [3, 21, 34, 36, 39, 74, 75, 133, 170, 303, 304, 309, 310, 312, 315], "0s": [3, 130, 306], "stateless": [3, 133, 303, 310, 315], "set_se": [3, 13, 14, 16, 17, 21, 67, 70, 72, 73, 74, 75, 78, 89, 115, 120, 134, 310, 314, 315], "seed": [3, 13, 14, 16, 17, 21, 67, 70, 72, 73, 74, 75, 79, 91, 92, 93, 94, 96, 103, 106, 134, 141, 279], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 67, 68, 70, 72, 73, 74, 75, 78, 89, 93, 94, 98, 103, 106, 112, 113, 120, 122, 129, 130, 139, 145, 148, 149, 163, 167, 181, 210, 214, 215, 217, 218, 220, 221, 226, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 273, 275, 277, 303, 304, 306, 308, 310, 311, 312, 314, 315], "determinist": [3, 32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 151, 160, 174, 181, 190, 204, 205, 208, 215, 299, 303, 304, 306, 310, 315], "preced": [3, 164, 306], "without": [3, 7, 9, 32, 40, 67, 70, 73, 74, 75, 96, 103, 106, 132, 192, 193, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 247, 291, 298, 299, 303, 304, 305, 309, 310, 312, 315], "risk": [3, 119], "overlap": [3, 41], "consecut": [3, 62, 163, 200, 306, 309, 315], "still": [3, 9, 128, 194, 227, 228, 303, 304, 306, 308, 310, 312, 315], "reproduc": [3, 98, 141, 303, 305, 309], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 67, 70, 73, 74, 75, 105, 123, 128, 129, 131, 184, 185, 186, 208, 215, 220, 226, 228, 229, 233, 276, 303, 304, 305, 306, 309, 312], "max_step": [3, 13, 67, 70, 72, 73, 74, 75, 93, 94, 128, 309, 314, 315], "n": [3, 6, 7, 24, 27, 32, 33, 40, 67, 70, 73, 74, 75, 98, 105, 109, 135, 167, 200, 205, 214, 220, 228, 242, 276, 299, 301, 304, 305, 306, 309, 312, 315], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 72, 113, 159, 163, 167, 178, 179, 187, 188, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 206, 207, 208, 210, 215, 217, 220, 222, 223, 224, 226, 228, 231, 233, 235, 241, 242, 243, 244, 245, 246, 275, 291, 299, 303, 305, 306, 308, 309, 310, 311], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 91, 92, 96, 109, 118, 119, 122, 134, 136, 139, 141, 150, 156, 165, 172, 195, 204, 205, 206, 207, 214, 215, 217, 218, 220, 226, 228, 230, 231, 232, 233, 235, 243, 267, 279, 298, 303, 304, 305, 309, 310, 312, 314, 315], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 67, 70, 73, 74, 75, 87, 90, 98, 136, 139, 163, 202, 214, 215, 217, 218, 220, 226, 228, 230, 231, 232, 233, 235, 238, 303, 306, 312, 314], "mark": [3, 16, 67, 70, 73, 74, 75, 163], "trail": [3, 139], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 67, 68, 70, 71, 73, 74, 75, 86, 90, 91, 92, 99, 119, 130, 131, 139, 148, 160, 163, 164, 200, 216, 220, 223, 227, 228, 230, 231, 235, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 279, 299, 300, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "treat": 3, "figur": [3, 303, 305, 306, 309, 310, 315], "summar": [3, 310], "brief": [3, 305], "popul": [3, 38, 112, 130, 303, 305, 306, 310, 312], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 67, 70, 73, 74, 75, 98, 100, 101, 103, 106, 109, 112, 115, 118, 120, 122, 128, 130, 138, 139, 148, 168, 169, 195, 196, 202, 203, 215, 233, 243, 244, 245, 246, 299, 303, 305, 306, 309, 310, 311, 312], "deliveri": 3, "step_mdp": [3, 163, 297, 306, 310, 314, 315], "nasium": 3, "recent": [3, 7, 11, 315], "shift": [3, 32, 211, 243, 244, 245, 246, 305], "termin": [3, 7, 32, 40, 52, 206, 303, 304, 305, 310, 314], "trust": [3, 163], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 67, 70, 73, 74, 75, 114, 128, 186, 249, 303, 305, 315], "refer": [3, 7, 8, 9, 21, 32, 40, 67, 70, 73, 74, 75, 134, 139, 149, 159, 160, 167, 168, 169, 174, 175, 180, 181, 197, 214, 221, 222, 223, 224, 230, 243, 248, 256, 303, 305, 309], "stepcount": [3, 13, 67, 70, 73, 74, 75, 133, 303, 304, 305, 306, 309, 314], "chosen": [3, 129, 130, 178, 179, 187, 203, 288, 299], "someth": [3, 32, 67, 70, 71, 73, 74, 75, 298, 304, 305, 310, 315], "els": [3, 174, 299, 301, 303, 304, 305, 306, 309, 310, 311], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 67, 70, 73, 74, 75, 101, 115, 122, 197, 271, 291, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "truncated_kei": [3, 128], "look": [3, 5, 7, 8, 32, 67, 70, 71, 73, 74, 75, 91, 92, 118, 119, 136, 201, 205, 206, 207, 300, 305, 306, 309, 310, 311, 312, 314, 315], "assess": [3, 76, 303], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 297], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 109], "reli": [3, 214, 300, 303, 305, 310, 315], "traj_id": [3, 13, 14, 16, 23, 122, 306, 312, 314], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 67, 70, 73, 74, 75, 130, 134, 148, 206, 207, 298, 303, 306], "context": [3, 5, 8, 32, 67, 68, 70, 73, 74, 75, 90, 130, 135, 170, 171, 195, 239, 240, 243, 244, 245, 246, 248, 256, 275, 299, 300, 303, 304, 305, 309, 310, 311, 312], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 71, 74, 75, 91, 92, 103, 106, 119, 165, 178, 205, 206, 207, 211, 243, 244, 245, 246, 299, 303, 304, 305, 308, 309, 310, 311, 312, 315], "inittrack": [3, 163, 303, 306], "our": [3, 7, 8, 18, 98, 299, 303, 304, 305, 306, 308, 309, 311, 312, 314], "tutori": [3, 303, 304, 306, 307, 308, 310, 311, 312, 313, 315], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 67, 68, 70, 73, 74, 75, 150, 165, 170, 300, 301, 303, 304, 305, 306, 309, 310, 312], "design": [3, 13, 14, 32, 33, 67, 70, 73, 74, 75, 98, 119, 134, 195, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 303, 304, 305, 306, 308, 309, 310, 312, 315], "scratch": [3, 8, 304, 310], "better": [3, 8, 9, 163, 300, 305, 310], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 67, 70, 71, 73, 74, 75, 91, 92, 98, 109, 113, 130, 135, 139, 150, 160, 161, 163, 165, 171, 172, 205, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 295, 299, 303, 304, 305, 306, 310, 312, 315], "intens": [3, 8], "gym3": 3, "envpool": [3, 73], "interfac": [3, 90, 165, 171, 299, 303, 305, 310, 312], "simultan": [3, 20, 74, 75, 310], "often": [3, 8, 225, 279, 303, 304, 310, 312, 315], "competit": [3, 309], "advantag": [3, 8, 161, 214, 216, 227, 230, 232, 243, 244, 245, 246, 247, 248, 250, 252, 254, 256, 257, 259, 300, 301, 303, 304, 305, 306, 309, 310, 315], "scale": [3, 4, 52, 98, 113, 115, 124, 129, 132, 160, 162, 173, 180, 181, 185, 186, 191, 192, 193, 201, 205, 207, 214, 215, 226, 230, 231, 232, 233, 277, 283, 288, 295, 299, 303, 304, 305, 306, 309, 314], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 67, 70, 72, 73, 74, 75, 76, 91, 92, 98, 113, 129, 133, 134, 139, 150, 168, 169, 170, 194, 196, 201, 202, 205, 208, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 241, 279, 291, 301, 303, 304, 305, 306, 309, 310, 311, 312, 315], "own": [3, 13, 14, 17, 22, 32, 67, 70, 73, 74, 75, 91, 92, 304, 305, 309, 310], "As": [3, 4, 67, 70, 71, 73, 74, 75, 91, 92, 122, 205, 243, 299, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315], "inherit": [3, 166, 228, 301, 305, 309], "serialenv": [3, 67, 70, 73, 74, 130, 297, 315], "enjoi": 3, "exact": 3, "Of": [3, 7, 298, 310, 315], "cours": [3, 4, 298, 305, 310, 315], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 67, 70, 72, 73, 74, 75, 118, 130, 134, 138, 139, 163, 168, 169, 198, 200, 201, 205, 218, 220, 241, 243, 244, 245, 246, 247, 303, 304, 305, 309, 310, 311], "count": [3, 68, 128, 200, 275, 279, 282, 303, 304, 305, 306, 312, 315], "def": [3, 11, 22, 32, 67, 68, 70, 72, 73, 74, 75, 86, 96, 103, 106, 149, 159, 167, 209, 215, 217, 220, 226, 228, 231, 233, 235, 301, 303, 304, 308, 309, 310, 314, 315], "make_env": [3, 94, 139, 284, 285, 303, 304, 315], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 67, 68, 70, 73, 74, 75, 87, 98, 101, 102, 112, 113, 115, 120, 122, 130, 133, 134, 139, 163, 288, 291, 297, 299, 303, 304, 305, 306, 311, 312, 314, 315], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 67, 68, 70, 73, 74, 75, 98, 101, 112, 113, 115, 120, 122, 130, 133, 163, 238, 252, 253, 254, 255, 257, 258, 259, 260, 299, 304, 306, 310, 312, 314, 315], "from_pixel": [3, 79, 80, 98, 288, 303, 304, 306, 311, 312, 314, 315], "9": [3, 7, 32, 35, 38, 41, 71, 91, 92, 129, 139, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 236, 241, 300, 303, 304, 305, 306, 309, 310, 311, 312, 313], "81": [3, 304, 310, 311], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 72, 73, 74, 75, 78, 89, 96, 97, 98, 99, 101, 102, 104, 105, 113, 114, 115, 118, 122, 129, 130, 132, 133, 134, 136, 138, 139, 141, 149, 150, 152, 153, 155, 156, 160, 162, 163, 165, 167, 169, 170, 171, 172, 173, 176, 180, 181, 184, 185, 186, 188, 190, 194, 195, 197, 198, 200, 203, 204, 207, 208, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 241, 242, 243, 244, 245, 246, 249, 250, 251, 270, 277, 291, 295, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 67, 68, 70, 73, 74, 75, 91, 92, 101, 110, 113, 115, 130, 134, 135, 139, 150, 159, 163, 165, 168, 169, 170, 179, 190, 196, 197, 201, 202, 203, 204, 205, 208, 209, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 234, 235, 241, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 303, 304, 305, 306, 308, 310, 312, 314], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 98, 99, 103, 104, 105, 106, 112, 115, 120, 122, 130, 132, 139, 145, 148, 150, 156, 159, 165, 168, 169, 170, 173, 176, 179, 190, 191, 192, 193, 195, 196, 198, 200, 202, 204, 207, 209, 228, 288, 291, 299, 301, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "simpli": [3, 6, 34, 36, 39, 45, 107, 126, 228, 299, 300, 303, 305, 309, 315], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 170, 171, 172, 178, 187, 208, 243, 244, 245, 246, 247, 249, 262, 299, 304, 311, 312], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 115, 132, 304, 312], "d": [3, 35, 53, 54, 58, 205, 314], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 68, 74, 75, 96, 99, 103, 105, 106, 113, 115, 119, 129, 130, 132, 139, 190, 198, 201, 202, 205, 243, 244, 245, 246, 247, 266, 299, 303, 304, 305, 306, 309, 310, 312, 314, 315], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 304, 309, 310], "_reset": [3, 67, 70, 72, 73, 74, 75, 96, 98, 103, 106, 149, 167, 308], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 89, 90, 91, 92, 93, 94, 96, 98, 99, 102, 103, 106, 109, 112, 113, 114, 115, 118, 119, 120, 122, 124, 130, 132, 133, 134, 135, 136, 138, 139, 141, 148, 149, 150, 152, 159, 162, 163, 165, 167, 168, 169, 170, 178, 179, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 241, 243, 244, 245, 246, 252, 253, 254, 255, 257, 258, 259, 260, 272, 273, 275, 276, 277, 279, 288, 295, 299, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 67, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 103, 106, 120, 122, 130, 134, 148, 149, 159, 163, 167, 178, 179, 187, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 207, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 283, 288, 298, 299, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 89, 90, 91, 92, 93, 94, 96, 98, 99, 103, 105, 106, 109, 113, 114, 115, 118, 120, 122, 124, 130, 132, 134, 135, 136, 138, 139, 141, 148, 149, 150, 152, 153, 162, 163, 165, 167, 170, 171, 172, 185, 186, 190, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 241, 243, 244, 245, 246, 249, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 272, 273, 275, 276, 277, 279, 288, 295, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "pixel": [3, 7, 26, 98, 100, 109, 111, 115, 118, 121, 132, 136, 138, 152, 174, 175, 262, 288, 299, 303, 304, 306, 311, 312, 314, 315], "500": [3, 303, 304, 310, 314, 315], "uint8": [3, 47, 132, 304, 311, 312, 314, 315], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 85, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 111, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 214, 215, 217, 218, 220, 221, 222, 226, 228, 229, 230, 231, 232, 233, 234, 235, 241, 242, 243, 244, 245, 246, 247, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 273, 274, 275, 276, 277, 278, 279, 283, 284, 285, 288, 291, 293, 294, 295, 299, 301, 303, 304, 305, 306, 309, 310, 312, 314, 315], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 103, 106, 120, 122, 130, 139, 148, 149, 159, 163, 167, 178, 179, 187, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 207, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 288, 299, 305, 306, 308, 309, 310, 311, 312, 314, 315], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 73, 74, 75, 139, 163, 200, 201, 205, 303, 304, 308, 309, 315], "launch": [3, 18, 19, 20, 22], "quit": [3, 299, 303, 304, 305, 309, 315], "mani": [3, 4, 38, 67, 214, 216, 220, 227, 230, 231, 235, 299, 303, 304, 305, 309, 310, 312, 315], "start": [3, 4, 5, 13, 21, 45, 68, 71, 148, 274, 303, 304, 309, 310, 312, 315], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 67, 70, 73, 74, 75, 130, 139, 206, 207, 305, 306, 309, 310, 315], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 67, 70, 73, 74, 75, 122, 134, 194, 200, 277, 301, 304, 305, 306, 310, 312, 315], "great": [3, 7, 8, 314], "speedup": [3, 8, 315], "precis": [3, 148, 303, 305], "anoth": [3, 8, 34, 36, 39, 67, 70, 73, 74, 75, 103, 104, 106, 130, 133, 165, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 299, 300, 303, 305, 306, 308, 309, 310, 315], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 67, 70, 73, 74, 75, 119], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 67, 68, 70, 73, 74, 75, 98, 103, 106, 118, 122, 131, 138, 139, 148, 196, 200, 204, 234, 243, 244, 245, 246, 247, 249, 279, 281, 295, 298, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 73, 74, 75, 76, 108, 114, 122, 134, 141, 194, 198, 200, 303, 305, 309, 312], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 86, 98, 101, 103, 106, 113, 120, 139, 141, 145, 170, 173, 188, 243, 244, 245, 246, 270, 278, 308, 309, 312, 315], "mismatch": [3, 304], "mostli": [3, 17, 300, 312, 315], "purpos": [3, 7, 98, 291, 303, 305, 306, 309, 311, 315], "want": [3, 6, 7, 8, 115, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 299, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315], "subprocess": [3, 68], "addit": [3, 4, 32, 52, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 194, 195, 204, 213, 228, 243, 300, 303, 304, 309, 312], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 73, 312], "multithreadedenv": [3, 297], "underneath": 3, "higher": [3, 4, 101, 208, 303, 304, 305, 312, 315], "restrict": [3, 304, 311, 312, 315], "flexibl": [3, 9, 73, 236, 300, 301, 312, 315], "cover": [3, 298, 305, 310, 314], "popular": [3, 299, 306, 309], "atari": [3, 4, 98, 315], "classic": [3, 72, 92, 304], "benchmark_batched_env": 3, "py": [3, 86, 178, 187, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315], "pipelin": [3, 7, 299, 305], "seamlessli": [3, 310], "modif": [3, 5, 26, 28, 32, 67, 70, 73, 74, 75, 109, 228, 305, 310], "infrastructur": [3, 309], "view": [3, 8, 27, 32, 33, 67, 70, 73, 74, 75, 96, 159, 165, 310, 312, 314, 315], "core": [3, 8, 288, 301, 306, 314], "decis": [3, 151, 177, 195, 219, 229, 306, 309, 312], "act": [3, 4, 91, 92, 170, 215, 217, 226, 231, 233, 235, 306, 309], "world": [3, 5, 72, 210, 223, 309, 310, 315], "paradigm": [3, 17, 309], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 67, 70, 73, 74, 75, 105, 114, 123, 134, 141, 150, 163, 165, 170, 197, 201, 205, 214, 216, 217, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 238, 243, 275, 279, 300, 303, 304, 306, 309, 310, 315], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 75, 129, 134, 139, 228, 282, 299, 301, 303, 304, 305, 306, 309, 310, 312, 315], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 74, 91, 92, 101, 160, 170, 198, 279, 293, 294, 303, 304, 305, 306, 309, 312, 314], "accommod": [3, 13, 14, 16, 17], "thank": [3, 303], "carrier": [3, 305, 306, 312], "particular": [3, 32, 45, 52, 67, 70, 73, 74, 75, 134, 300, 301, 304, 306, 308, 309, 312], "carri": [3, 21, 45, 67, 70, 73, 74, 75, 130, 228, 304, 306, 309, 310, 312], "thu": [3, 227, 309], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 76, 91, 92, 299, 304, 305, 309], "hand": [3, 7, 21, 309, 310], "kept": [3, 13, 14, 16, 17, 62, 74, 75, 105, 133, 141, 148, 162, 185, 186], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 67, 70, 73, 74, 75, 104, 130, 132, 134, 141, 163, 165, 170, 201, 204, 205, 207, 208, 213, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 243, 244, 245, 246, 270, 281, 293, 294, 295, 299, 301, 303, 304, 305, 306, 309, 310, 312, 315], "let": [3, 6, 7, 32, 43, 67, 70, 73, 74, 75, 91, 92, 98, 163, 170, 196, 275, 300, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "understand": [3, 8, 303, 304, 309], "go": [3, 7, 71, 119, 122, 195, 249, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "vma": [3, 93, 94, 309], "robot": [3, 5, 7, 118, 136, 138, 309], "what": [3, 8, 35, 44, 67, 70, 73, 74, 75, 130, 148, 202, 298, 299, 300, 304, 305, 306, 309, 310, 311, 312, 314, 315], "vmasenv": [3, 297, 309], "balanc": [3, 303, 304, 315], "num_env": [3, 21, 93, 94, 309], "n_agent": [3, 93, 94, 170, 178, 187, 241, 309], "5": [3, 24, 26, 28, 35, 38, 41, 42, 68, 73, 89, 93, 94, 122, 149, 150, 159, 160, 162, 164, 165, 167, 170, 174, 179, 185, 186, 195, 196, 202, 208, 227, 230, 232, 235, 299, 303, 304, 306, 309, 310, 312, 313, 314, 315], "td": [3, 15, 26, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 96, 99, 103, 104, 105, 106, 112, 113, 115, 122, 129, 130, 132, 134, 139, 148, 149, 159, 163, 166, 167, 178, 179, 187, 190, 191, 192, 193, 195, 196, 198, 200, 201, 202, 204, 207, 209, 241, 244, 245, 246, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 270, 278, 288, 299, 300, 303, 306, 309, 310, 314, 315], "info": [3, 35, 38, 41, 42, 52, 53, 67, 70, 73, 74, 75, 91, 92, 93, 94, 136, 140, 309, 312], "ground_rew": 3, "pos_rew": [3, 309], "16": [3, 32, 67, 70, 73, 74, 75, 98, 303, 304, 306, 310, 312], "root": [3, 26, 28, 98, 148, 162, 185, 186, 306, 309, 310, 312, 315], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 109, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 304, 310], "vari": [3, 91, 92, 119, 309], "creation": [3, 74, 75, 303, 315], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 67, 70, 73, 74, 75, 118, 122, 125, 134, 138, 173, 179, 197, 201, 203, 204, 205, 243, 244, 245, 246, 270, 282, 303, 304, 305, 306, 309, 310, 312, 314, 315], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 68, 122, 132, 139, 227, 235, 300, 301, 303, 305, 306, 309, 310, 312, 314], "append": [3, 8, 35, 38, 41, 42, 52, 53, 68, 101, 122, 130, 163, 196, 202, 303, 304, 305, 306, 309, 310, 311, 312, 314], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 67, 70, 73, 74, 75, 96, 218, 220, 241, 297, 305, 309, 315], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 67, 70, 71, 73, 74, 75, 86, 91, 92, 139, 298, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "simpl": [3, 9, 32, 33, 67, 70, 73, 74, 75, 152, 205, 218, 228, 232, 243, 299, 300, 303, 304, 305, 309, 315], "composit": [3, 26, 28, 67, 70, 73, 74, 75, 305, 310], "prefix": [3, 23, 32, 45, 67, 70, 73, 74, 75, 134, 228, 261, 306, 315], "exactli": [3, 32, 67, 70, 73, 74, 75, 87, 134, 303, 306, 309], "action_kei": [3, 15, 67, 70, 73, 74, 75, 96, 105, 148, 149, 166, 167, 194, 198, 200, 309], "reward_kei": [3, 67, 70, 73, 74, 75, 148, 149, 167, 273, 277, 309], "done_kei": [3, 67, 70, 73, 74, 75, 148, 309], "automat": [3, 5, 55, 56, 65, 67, 70, 73, 74, 75, 91, 92, 103, 106, 115, 190, 201, 299, 303, 305, 309, 310, 312, 314], "right": [3, 6, 7, 40, 164, 304, 305, 309, 310, 315], "sure": [3, 4, 7, 53, 63, 122, 196, 295, 299, 303, 305, 306, 309, 310, 312, 314, 315], "set_kei": [3, 214, 215, 216, 218, 220, 221, 226, 227, 228, 230, 231, 232, 233, 241, 247, 309], "awai": [3, 305, 309], "eas": [3, 309], "access": [3, 7, 8, 32, 35, 53, 67, 70, 73, 74, 75, 118, 136, 295, 298, 303, 309, 310, 312], "leaf": [3, 26, 28, 67, 70, 73, 74, 75, 205, 309], "abov": [3, 7, 32, 67, 70, 73, 74, 75, 162, 185, 186, 213, 300, 301, 303, 305, 309, 310, 315], "would": [3, 32, 40, 67, 70, 73, 74, 75, 163, 165, 301, 304, 305, 306, 310, 312, 315], "full": [3, 67, 70, 73, 74, 75, 197, 270, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "raw": [3, 4, 40, 162, 185, 186, 304, 310], "logic": 3, "torchvis": [3, 118, 138, 314, 315], "transformedenv": [3, 13, 67, 68, 70, 73, 74, 75, 96, 98, 101, 102, 103, 106, 109, 112, 113, 114, 115, 120, 122, 130, 133, 139, 163, 288, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "primit": [3, 4, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235], "built": [3, 5, 7, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 236, 241, 289, 291, 292, 295, 303, 304, 305, 306, 312, 315], "base_env": [3, 96, 101, 103, 105, 106, 113, 130, 303, 304, 305, 311, 314, 315], "totensorimag": [3, 98, 304, 306, 312, 314, 315], "in_kei": [3, 13, 14, 16, 17, 21, 72, 97, 98, 99, 100, 101, 103, 105, 106, 109, 111, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 129, 131, 132, 133, 134, 136, 138, 139, 149, 158, 163, 167, 178, 187, 188, 190, 191, 192, 193, 195, 196, 201, 202, 204, 205, 207, 208, 209, 214, 215, 216, 217, 218, 220, 226, 227, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 261, 262, 288, 291, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "resiz": [3, 98, 304, 306, 312, 315], "64": [3, 98, 152, 153, 161, 163, 170, 178, 241, 303, 304, 305, 306, 308, 310, 311, 312, 314, 315], "now": [3, 7, 35, 98, 170, 303, 304, 305, 306, 308, 309, 311, 312, 315], "appar": [3, 272], "bring": [3, 305, 315], "signific": [3, 5, 8, 305, 315], "kind": [3, 38, 44, 148, 312], "consult": 3, "interest": [3, 201, 205, 299, 304, 305, 309, 310, 315], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 72, 97, 98, 99, 100, 101, 109, 111, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 129, 131, 132, 133, 136, 138, 149, 158, 159, 163, 167, 178, 179, 187, 188, 190, 191, 192, 193, 195, 197, 201, 202, 203, 204, 205, 207, 208, 209, 214, 215, 216, 220, 226, 227, 230, 231, 232, 233, 241, 243, 244, 245, 246, 275, 291, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "easi": [3, 5, 53, 194, 198, 200, 299, 300, 303, 304, 305, 309, 311, 312, 315], "graph": [3, 4, 8, 239, 240, 303, 310], "inv": [3, 101, 105, 122, 310], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 73, 74, 75, 96, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 122, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 139, 185, 196, 243, 274, 301, 303, 304, 305, 310, 314, 315], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 67, 70, 73, 74, 75, 134, 190, 196, 204, 206, 207, 209, 214, 215, 217, 220, 226, 230, 231, 232, 233, 235, 304, 309], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 102, 105, 150, 207, 315], "taken": [3, 67, 70, 73, 74, 75, 168, 169, 300, 303, 305, 306, 309, 310], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 98, 103, 106, 115, 122, 212, 226, 310], "in_keys_inv": [3, 101, 103, 106, 115, 116, 120, 122, 133, 303, 308, 310, 315], "append_transform": [3, 35, 38, 41, 42, 52, 53, 118, 130, 136, 303, 306, 310, 314, 315], "doubletofloat": [3, 288, 303, 305, 308], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 67, 70, 72, 73, 74, 75, 78, 89, 90, 93, 94, 103, 106, 115, 120, 122, 130, 132, 145, 148, 149, 159, 163, 167, 178, 179, 187, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 207, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 288, 299, 305, 306, 308, 309, 310, 311, 312, 314, 315], "float64": [3, 32, 67, 70, 73, 74, 75, 93, 102, 103, 106, 118, 130, 133, 134, 136, 138, 204, 308, 315], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 73, 74, 75, 103, 106, 134, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 301, 303, 305, 312], "manipul": [3, 4, 8, 118, 136, 315], "keep": [3, 4, 7, 8, 14, 42, 62, 115, 118, 138, 139, 148, 200, 272, 279, 303, 304, 305, 306, 309, 310, 312, 314, 315], "mind": [3, 309], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 105, 148, 198, 299, 312], "unexpect": [3, 32, 67, 70, 73, 74, 75, 134, 315], "behviour": 3, "fortun": [3, 306], "eras": [3, 67, 70, 73, 74, 75], "ident": [3, 13, 14, 16, 32, 74, 75, 170, 243, 244, 245, 246, 293, 294, 304, 309], "alreadi": [3, 8, 11, 32, 45, 67, 70, 73, 74, 75, 130, 205, 243, 244, 245, 246, 303, 305, 309], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 67, 68, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 139, 195, 204, 276, 281, 282, 304, 305, 309, 310, 312], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 67, 70, 73, 74, 75, 102, 103, 104, 106, 113, 120, 133, 134, 139, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 300, 303, 305, 306, 309, 310, 311, 312, 315], "happen": [3, 67, 70, 73, 74, 75, 194, 304, 311, 315], "catfram": [3, 304], "hold": [3, 239, 240, 310, 312], "notic": [3, 98, 305, 310], "parenthood": 3, "reason": [3, 4, 8, 32, 67, 70, 73, 74, 75, 91, 92, 118, 136, 163, 300, 303, 304, 305, 310, 312], "henc": [3, 35, 119, 299, 303, 305, 309, 310], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 310], "log": [3, 4, 8, 40, 157, 158, 159, 168, 169, 176, 186, 196, 197, 201, 205, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 272, 273, 275, 279, 291, 299, 300, 301, 303, 304, 305, 309, 310, 314], "mission": 3, "irrespect": [3, 204, 205], "dmcontrol": [3, 303], "jumanji": [3, 88, 89], "natur": [3, 303, 306], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 67, 70, 73, 74, 75, 109, 115, 119, 131, 150, 163, 164, 165, 168, 169, 174, 182, 188, 194, 195, 198, 205, 304, 305, 306, 309, 310, 311, 312, 314, 315], "special": [3, 299, 303, 306, 315], "statu": 3, "framework": [3, 4, 9, 22, 72, 314, 315], "Its": [3, 32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 139, 204, 247], "success": [3, 98, 133, 198, 304, 310, 312, 314], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 67, 70, 73, 74, 75, 113, 133, 194, 200, 303, 304, 305, 306, 308, 309, 310, 312, 315], "foundat": [3, 5, 91, 92, 305, 309], "inspir": [3, 310], "howev": [3, 5, 7, 32, 67, 70, 73, 74, 75, 98, 125, 128, 129, 134, 299, 303, 304, 305, 306, 312, 315], "gone": [3, 4, 5], "sometim": [3, 306, 315], "hard": [3, 7, 225, 304, 315], "adopt": [3, 5, 303, 315], "prefer": [3, 17, 20, 35, 38, 41, 42, 119, 126, 230, 276, 299, 305, 309, 312], "moreov": 3, "maintain": [3, 5, 9, 310], "gymnasium": [3, 5, 11, 83, 84, 85, 86, 304, 305, 310, 314], "both": [3, 7, 32, 67, 68, 70, 73, 74, 75, 91, 92, 98, 120, 134, 150, 163, 165, 170, 191, 192, 193, 197, 203, 214, 216, 217, 220, 226, 227, 228, 230, 231, 232, 233, 235, 275, 299, 303, 305, 309, 310, 311, 312, 315], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 304, 305, 306, 309, 310, 312, 315], "decor": [3, 8, 11, 86, 228, 243, 244, 245, 246], "set_gym_backend": [3, 85, 297], "relev": [3, 40, 243, 244, 245, 246, 247, 310], "gym_backend": [3, 86, 297], "env1": [3, 308], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 67, 70, 73, 74, 75, 86, 118, 138, 167, 279, 301, 304], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 86], "__init__": [3, 7, 72, 86, 96, 103, 106, 149, 159, 167, 209, 215, 217, 220, 226, 231, 233, 235, 301, 310, 315], "env2": [3, 308], "_env": [3, 6, 315], "classic_control": 3, "pendulumenv": [3, 310], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 305], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 67, 70, 73, 74, 75, 98, 99, 128, 130, 134, 150, 165, 168, 169, 170, 200, 202, 203, 211, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 283, 295, 298, 301, 305, 306, 310, 312, 315], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 73, 74, 75, 87, 119, 129, 130, 133, 134, 142, 143, 148, 160, 164, 181, 200, 221, 265, 301, 303, 304, 305, 306, 309, 310, 314, 315], "tell": [3, 4, 7, 91, 92, 303, 306, 309], "mo_gymnasium": [3, 84, 85], "handi": 3, "side": [3, 4, 315], "v0": [3, 70, 81, 82, 83, 84, 88, 89, 102, 134, 139, 291], "26": [3, 303, 304, 309, 310, 311, 313], "fun": [3, 11, 86, 305, 309], "reveal": 4, "bug": [4, 314], "curv": 4, "won": [4, 32, 67, 68, 70, 73, 74, 75, 118, 138, 279, 295, 304, 305], "exploit": 4, "video": [4, 9, 262, 275, 295, 309], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 67, 70, 73, 74, 75, 119, 202, 304, 305, 306, 309, 310], "cv": 4, "flip": 4, "imag": [4, 7, 79, 100, 118, 132, 138, 165, 303, 304, 309, 311, 315], "correspondingli": 4, "prescript": 4, "tune": [4, 113, 309, 311], "coeffici": [4, 40, 113, 309], "bonu": [4, 214, 216, 227, 230], "beta": [4, 35, 41, 58, 226, 227, 303, 304, 312, 314], "altern": [4, 27, 73, 156, 168, 169, 213, 228, 303, 305, 309], "reduc": [4, 6, 27, 129, 304, 305], "downstream": [4, 303], "formul": [4, 309], "ob": [4, 8, 26, 28, 96, 103, 104, 106, 115, 132, 145, 148, 170, 202, 209, 215, 217, 220, 226, 231, 233, 235, 243, 244, 245, 246, 304, 308, 310, 314, 315], "rate": [4, 139, 242, 304, 305, 309], "gradient": [4, 32, 67, 70, 73, 74, 75, 134, 162, 169, 172, 176, 185, 186, 214, 216, 217, 220, 226, 227, 228, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 279, 303, 305, 309, 310], "norm": [4, 8, 279, 303, 304, 305, 309, 310], "easier": [4, 299, 303], "behavior": [4, 32, 67, 70, 73, 74, 75, 134, 226, 305, 309], "local": [4, 7, 10, 16, 21, 32, 67, 70, 73, 74, 75, 134, 170, 178, 187, 241, 267, 309], "optima": 4, "sens": [4, 310], "product": [4, 9, 293, 294], "sum": [4, 21, 31, 33, 168, 169, 187, 223, 242, 249, 300, 303, 304, 305, 306, 309, 310, 315], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 125, 139, 200, 267, 272, 304, 306, 309, 310, 312], "stat": [4, 115, 283, 295, 304, 305], "w": [4, 98, 100, 121, 132, 200, 262, 304, 306, 312], "r": [4, 32, 96, 101, 115, 205, 213, 242, 299, 304, 310, 315], "yield": [4, 16, 21, 32, 67, 70, 73, 74, 75, 228, 303], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 67, 70, 73, 74, 75, 134, 217, 218, 305, 309, 312], "futur": [4, 32, 67, 70, 73, 74, 75, 118, 134, 138, 165, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 298, 314], "past": [4, 304, 312], "becom": [4, 21, 309, 315], "spars": [4, 306], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 67, 70, 73, 74, 75, 125, 134, 171, 172, 200, 214, 216, 218, 221, 227, 230, 241, 304, 306, 312, 315], "intermedi": [4, 163, 197, 303, 311], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 303], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 67, 70, 73, 74, 75, 165, 305, 309], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 67, 70, 73, 74, 75, 98, 99, 103, 105, 106, 115, 122, 145, 148, 149, 163, 164, 168, 169, 170, 178, 187, 198, 200, 203, 211, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 249, 306, 314], "subtask": 4, "hierarch": [4, 314], "individu": [4, 18, 19, 20, 21, 32, 45, 67, 70, 73, 74, 75, 303, 309], "select": [4, 15, 35, 38, 41, 42, 52, 53, 91, 92, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 122, 125, 126, 128, 129, 130, 131, 133, 136, 137, 139, 149, 163, 196, 202, 278, 303, 312], "fall": 4, "section": [4, 304, 309], "explicit": [4, 11, 45, 164, 312], "mechan": [4, 32, 67, 70, 73, 74, 75, 134, 304, 310], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 67, 70, 73, 74, 75, 226, 305, 309], "addition": 4, "timestep": [4, 40, 122, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 309], "realli": 4, "larg": [4, 27, 103, 106, 136, 304, 305, 309, 312], "target": [4, 8, 21, 32, 67, 68, 70, 73, 74, 75, 129, 133, 204, 205, 214, 215, 216, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 241, 242, 243, 244, 245, 246, 247, 282, 290, 291, 300, 301, 306, 310], "huge": [4, 170, 306], "std": [4, 115, 139, 173, 177, 194, 303, 315], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 306, 307, 308, 311, 312, 313], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 67, 70, 73, 74, 75, 115, 118, 130, 133, 134, 136, 140, 149, 167, 171, 172, 194, 198, 200, 214, 215, 217, 218, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 235, 241, 288, 295, 304, 306, 310, 315], "estim": [4, 113, 191, 192, 193, 214, 215, 216, 217, 218, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 300, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "encount": [4, 298, 304, 310], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 91, 92, 303, 305, 309, 315], "bonus": 4, "denser": 4, "prior": [4, 181, 223, 309], "freshli": 4, "proper": [4, 6, 7, 243, 244, 245, 246, 304, 305, 309, 312], "doesn": [4, 11, 73, 103, 106], "drop": [4, 62, 148], "meant": [4, 72], "encourag": [4, 303, 304, 312], "measur": [4, 305], "novelti": 4, "revisit": 4, "previous": [4, 305, 315], "diminish": 4, "decreas": 4, "ideal": [4, 115, 310], "down": [4, 13, 14, 16, 17, 306], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 304, 305, 306, 309, 310, 314, 315], "distil": 4, "add": [4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 67, 70, 73, 74, 75, 98, 113, 163, 171, 199, 214, 274, 305, 306, 309, 310, 312, 314], "nois": [4, 140, 172, 189, 200, 231, 235, 275, 295, 303], "exploratori": [4, 214, 216, 227, 230], "could": [4, 6, 304, 305, 309, 311, 315], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 215, 217, 218, 220, 221, 226, 231, 233, 235, 241, 301, 303, 304, 312], "schedul": [4, 7, 40, 275, 305, 310], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 118, 138, 215, 217, 220, 231, 233, 235, 303, 304, 309, 312, 315], "divers": [4, 74, 75], "bootstrap": [4, 221, 244, 250, 251, 303, 306], "noisi": [4, 171, 172, 189, 299], "unstabl": [4, 162, 185, 186], "inher": 4, "stochast": [4, 113, 160, 172, 174, 181, 215, 219, 220, 226, 229, 231, 233, 299, 305, 309], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 163, 167, 191, 192, 193, 228, 231, 301, 304], "pomdp": [4, 312], "previou": [4, 10, 32, 40, 41, 130, 181, 195, 305, 306, 310, 315], "loos": [4, 299, 304, 305], "nonexist": 4, "architectur": [4, 156, 309], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 97, 98, 99, 100, 103, 105, 106, 109, 111, 115, 116, 119, 120, 121, 122, 123, 124, 125, 129, 131, 132, 133, 139, 150, 157, 159, 165, 168, 169, 170, 176, 179, 183, 195, 206, 207, 219, 261, 262, 274, 275, 276, 278, 279, 288, 299, 303, 305, 306, 308, 309, 315], "rather": [4, 120, 303, 304, 305, 309], "lstm": [4, 163, 164, 173], "explicitli": [4, 304, 306, 309, 312], "rel": [4, 130, 157, 184, 303, 304, 309, 312], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 98, 304, 305, 312, 314, 315], "compens": 4, "descent": [4, 172], "1000": [4, 38, 67, 70, 73, 74, 75, 98, 139, 198, 200, 201, 205, 225, 303, 304, 305, 306, 311, 312], "know": [4, 9, 35, 38, 41, 42, 194, 231, 275, 303, 304, 305, 306, 309, 312], "minimum": [4, 123, 160, 173, 184, 185, 186, 208, 211, 213, 215, 220, 228, 229, 233, 270, 303, 305, 309], "manual": [4, 18, 20, 21, 303, 306, 312], "deviat": [4, 115, 139, 149, 160, 167, 171, 172, 194, 230, 235, 303, 309], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 67, 70, 72, 73, 74, 75, 91, 92, 96, 103, 105, 106, 129, 134, 137, 139, 149, 163, 167, 194, 198, 200, 201, 202, 203, 204, 205, 214, 215, 217, 218, 220, 221, 222, 225, 226, 228, 230, 231, 232, 233, 234, 235, 241, 243, 244, 245, 246, 247, 275, 279, 281, 284, 285, 290, 291, 301, 304, 305, 306, 309, 310, 312, 314, 315], "stabil": [4, 110], "stage": [4, 303, 310], "never": 4, "prevent": [4, 26, 28, 162, 185, 186, 227, 230, 277, 312], "solv": [4, 9, 10, 298, 303, 304, 305, 309, 310, 312], "entir": [4, 305, 310, 312], "submit": [4, 298, 314], "suffici": [4, 303], "recommend": [4, 7, 309], "system": [4, 5, 305, 309, 310], "adequ": [4, 141, 305, 309], "infeas": 4, "allevi": [4, 299], "prune": 4, "develop": [4, 7, 303, 314], "filter": [4, 45, 214, 215, 217, 220, 226, 230, 231, 233], "fire": [4, 32, 67, 70, 73, 74, 75], "certain": [4, 18, 20, 21, 32, 45, 67, 70, 73, 74, 75, 86, 110, 128, 134, 198, 227, 299, 303, 304, 305, 309, 315], "illeg": 4, "move": [4, 21, 32, 67, 70, 73, 74, 75, 102, 104, 118, 130, 133, 134, 136, 138, 139, 148, 165, 204, 277, 303, 304, 306, 314, 315], "chess": 4, "combin": [4, 133, 304, 312], "grasp": 4, "releas": [4, 7, 10, 32, 67, 70, 73, 74, 75, 134, 314], "top": [4, 149, 167], "p": [4, 68], "wherein": 4, "cumul": [4, 125, 129, 149, 249, 305], "probabl": [4, 8, 40, 157, 159, 163, 165, 168, 169, 176, 186, 198, 201, 205, 299, 304, 314], "q": [4, 9, 152, 153, 154, 155, 158, 159, 161, 178, 179, 187, 193, 197, 202, 203, 215, 217, 218, 220, 221, 225, 226, 231, 233, 235, 241, 288, 297, 303], "flow": [4, 303, 305, 309, 310, 312], "reparameter": [4, 157, 169, 176], "soft": [4, 225, 233, 234], "critic": [4, 8, 191, 199, 214, 216, 217, 220, 226, 227, 230, 231, 232, 233, 235, 303, 305], "clip": [4, 40, 101, 123, 216, 235, 279, 305, 309, 310], "oppos": [4, 45], "incorrect": 4, "thought": [4, 67, 70, 73, 74, 75], "bound": [4, 17, 21, 25, 26, 32, 67, 70, 73, 74, 75, 101, 114, 139, 180, 181, 190, 196, 197, 200, 201, 202, 203, 204, 205, 208, 235, 299, 303, 304, 305, 315], "region": 4, "squash": [4, 306, 314], "tanh": [4, 150, 162, 165, 170, 184, 185, 186, 208, 305, 309, 310, 311, 314], "correct": [4, 113, 129, 282, 305, 306], "prob": [4, 168, 169, 176, 305, 309], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 104, 105, 113, 118, 134, 138, 201, 204, 205, 225, 228, 230, 288, 303, 308, 310, 315], "real": [5, 205, 300, 306, 310], "histor": 5, "wa": [5, 7, 67, 70, 73, 74, 75, 134, 225, 234, 300, 304, 305, 308, 312, 314], "ceas": 5, "fork": 5, "farama": [5, 83, 84, 91, 92, 305, 310], "detail": [5, 6, 7, 32, 67, 70, 73, 74, 75, 91, 92, 132, 134, 159, 197, 214, 221, 230, 298, 304, 308, 312], "usag": [5, 7, 52, 98, 163, 215, 226, 233, 236, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "known": [5, 7, 8, 250, 251, 303, 304], "bc": [5, 314], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 67, 70, 73, 74, 75, 98, 122, 139, 304, 312, 314], "face": [5, 8, 9, 315], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 73, 74, 75, 141, 190, 196, 197, 201, 202, 203, 204, 205, 305, 309], "13": [5, 10, 11, 303, 304, 305, 306, 310, 311, 312], "construct": [5, 32, 35, 38, 41, 42, 67, 70, 73, 74, 75, 91, 103, 106, 141, 163, 181, 205, 279, 299, 304, 305, 306, 310, 312, 315], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 70, 73, 74, 75, 91, 92, 141, 163, 188, 191, 192, 193, 194, 200, 202, 210, 241, 299, 303, 304, 305, 306, 309, 315], "best": [5, 9, 163, 309, 312, 314], "gymwrapp": [5, 70, 297, 305, 314], "feel": [5, 298, 314], "free": [5, 7, 103, 106, 214, 223, 230, 301, 305, 309, 314], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 105, 303, 304, 305, 306, 309, 312], "prepar": [6, 305], "conda": [6, 7, 298], "assum": [6, 26, 33, 40, 41, 42, 52, 70, 74, 75, 100, 109, 118, 119, 125, 130, 136, 138, 145, 163, 164, 188, 208, 218, 221, 233, 241, 252, 253, 254, 255, 257, 258, 259, 260, 262, 303, 305, 306, 308, 310], "7": [6, 10, 27, 33, 35, 38, 41, 149, 150, 164, 165, 167, 249, 303, 304, 305, 309, 310, 311, 312, 313, 314], "cmake": 6, "14": [6, 11, 115, 303, 304, 309, 310, 311, 312, 313], "activ": [6, 7, 9, 150, 156, 160, 165, 170, 216, 227, 230, 299, 314], "sim": 6, "bullet": 6, "physic": [6, 7, 301, 303, 309, 310], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 298], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 306], "y": [6, 7, 90, 164, 188, 303, 305, 309], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 67, 70, 73, 74, 75, 127, 228, 309, 315], "command": [6, 7, 10, 305, 309, 310, 315], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 297], "_has_habitat": 6, "available_env": [6, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 315], "startswith": [6, 300, 303], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 80, 86, 295, 301, 303, 312], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 68, 228, 303], "env_nam": [6, 73, 77, 79, 81, 83, 88, 303, 305, 315], "llvmlite": 6, "config": [6, 7, 118, 138, 151, 156, 177, 283, 284, 285, 288, 289, 292], "var": [6, 7, 32, 67, 70, 73, 74, 75, 134, 228], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 78, 150, 152, 153, 161, 165, 191, 192, 193, 201, 204, 207, 226, 303, 304, 309, 310, 311, 312, 313, 314], "bind": 6, "deactiv": [6, 7, 196], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 67, 70, 73, 74, 75, 134, 228, 312], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 304], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 308, 310, 315], "joint": [7, 304], "dynam": [7, 226, 305, 310], "contact": [7, 37], "engin": [7, 310], "biomechan": 7, "graphic": 7, "anim": [7, 309], "area": 7, "demand": [7, 315], "fast": [7, 9, 78, 120, 231, 303, 304, 305], "accur": [7, 52, 304, 310, 312], "articul": 7, "acquir": [7, 305], "deepmind": [7, 8, 9, 79, 80, 305], "whomev": 7, "licenc": 7, "incorpor": [7, 194, 198, 200, 306, 310], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 75, 114, 133, 262, 299, 300, 303, 304, 305, 309, 312, 315], "legaci": 7, "pro": [7, 298], "tip": [7, 298], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 315], "sudo": [7, 298], "enabl": [7, 8, 52, 55, 56, 65, 163, 200, 275, 305, 309, 310, 312], "apt": [7, 309], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 304, 306], "fact": [7, 8, 303, 305, 309, 310, 311, 312, 315], "workflow": [7, 191, 192, 193], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 67, 70, 73, 74, 75, 118, 136, 138, 306, 315], "binari": [7, 24, 27, 33, 97, 159, 179, 196, 197, 202, 203, 218, 220, 241], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 262, 267, 295], "earlier": [7, 303, 305, 306, 309, 312], "roboti": 7, "download": [7, 10, 118, 138, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315], "html": [7, 73], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 67, 70, 73, 74, 75, 118, 129, 138, 149, 178, 276, 303, 305, 309], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54, 311], "bin": [7, 159, 197, 299], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 155, 201, 205, 303, 305, 312], "nvidia": 7, "older": [7, 11], "hack": [7, 303], "line": [7, 32, 67, 70, 73, 74, 75, 304, 309], "adatp": 7, "script": [7, 141, 288, 291, 295, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "unnot": [7, 119], "until": [7, 21, 133, 305, 306, 309], "complet": [7, 9, 62, 70, 98, 298, 300, 303, 305, 308], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 304, 312], "troubleshoot": 7, "gl": 7, "h": [7, 98, 100, 121, 132, 163, 167, 262, 304, 306, 312], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 68, 72, 91, 92, 93, 94, 96, 98, 129, 132, 149, 151, 156, 164, 167, 177, 188, 198, 200, 208, 215, 218, 220, 230, 231, 232, 235, 241, 243, 244, 245, 246, 249, 270, 301, 303, 304, 305, 306, 309, 310, 312, 314, 315], "fatal": 7, "No": 7, "directori": [7, 45, 55, 267, 301], "devel": 7, "ubuntu": 7, "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 304, 310, 312], "disappear": [7, 304, 306, 308], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 89, 115, 150, 157, 164, 165, 170, 174, 184, 209, 288, 303, 304, 309, 310, 312, 314, 315], "glibcxx_3": 7, "29": [7, 303, 304, 305, 309, 310], "compil": [7, 32, 67, 70, 73, 74, 75], "libosmesa": 7, "libgcc": 7, "Then": [7, 305, 308], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 67, 70, 73, 74, 75, 114, 134, 315], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 304, 305, 310], "114": [7, 306, 310, 312], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 310], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 96, 141], "opengl": [7, 309], "global": [7, 32, 67, 70, 73, 74, 75, 91, 92, 178, 187, 201, 205, 241, 301, 303, 309], "cuda_visible_devic": 7, "id": [7, 23, 40, 200, 231, 265, 288], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 310, 312], "displai": [7, 279, 301, 303, 304, 309, 310], "correctli": [7, 32, 67, 70, 73, 74, 75], "lgl": 7, "libegl": 7, "x11": [7, 309], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 70, 148, 194, 198, 200, 230, 279, 301, 303, 304, 308, 312], "sketch": [8, 301], "_": [8, 68, 99, 103, 105, 106, 113, 115, 120, 132, 139, 190, 204, 209, 213, 214, 215, 217, 220, 226, 230, 231, 233, 235, 243, 244, 245, 246, 303, 304, 305, 306, 309, 310, 312, 314], "n_training_step": 8, "datapoint": [8, 45, 312], "onlin": [8, 13, 17, 98, 156, 177, 214, 219, 229, 230, 270, 295, 305, 306, 309, 312], "n_data_per_train": 8, "no_grad": [8, 32, 67, 70, 73, 74, 75, 113, 243, 244, 245, 246, 305, 306, 309], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 276, 291, 303, 304, 305, 309, 312], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 122, 276, 301, 303, 304, 305, 306, 309, 311, 312, 314], "loss_fn": [8, 306, 314], "backward": [8, 32, 67, 70, 73, 74, 75, 139, 214, 215, 217, 220, 226, 230, 231, 232, 233, 235, 303, 305, 306, 309, 310], "zero_grad": [8, 32, 67, 70, 73, 74, 75, 301, 303, 305, 306, 309, 310], "backpropag": [8, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 309, 310], "differenti": [8, 45, 113, 243, 244, 245, 246, 306, 309, 310], "denomin": 8, "artifact": 8, "numer": [8, 38, 139, 162, 185, 186, 190, 196, 197, 201, 202, 203, 204, 205, 277, 305, 312, 315], "misconcept": 8, "save": [8, 32, 34, 36, 39, 67, 70, 73, 74, 75, 261, 279, 301, 309], "freed": 8, "appear": [8, 33, 310, 312], "compuat": 8, "twice": 8, "fix": [8, 130, 215, 229, 233, 304, 310, 315], "retain_graph": 8, "discuss": [8, 9, 309], "inplac": [8, 32, 34, 36, 39, 67, 70, 73, 74, 75, 134, 303], "accumul": 8, "onto": [8, 33, 145, 190, 194, 196, 197, 200, 201, 202, 203, 204, 205, 306, 310], "exclud": [8, 52, 98, 107, 148, 178, 309, 312], "forward": [8, 32, 67, 70, 73, 74, 75, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 122, 125, 126, 128, 129, 130, 131, 133, 136, 137, 139, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 170, 171, 173, 174, 175, 177, 178, 180, 181, 183, 187, 188, 194, 195, 197, 198, 200, 203, 204, 205, 208, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 300, 310, 314], "submodul": [8, 32, 67, 70, 73, 74, 75, 85, 228], "param": [8, 32, 40, 67, 70, 72, 73, 74, 75, 102, 104, 113, 120, 133, 157, 159, 184, 195, 201, 204, 207, 209, 228, 237, 240, 243, 244, 245, 246, 247, 303, 309, 310, 311, 314], "grad": [8, 32, 67, 70, 73, 74, 75, 303, 305], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 67, 70, 73, 74, 75, 91, 92, 102, 118, 130, 133, 134, 136, 138, 173, 178, 204], "strictli": [8, 32, 67, 70, 73, 74, 75, 134, 303, 305], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 98, 109, 119, 135, 222, 300, 305, 309, 310], "ask": [8, 303, 305, 306, 309, 311, 315], "much": [8, 35, 41, 58, 227, 230, 305, 309, 310, 312, 315], "render": [8, 275, 303, 304, 305], "upon": [8, 310], "factor": [8, 32, 122, 162, 172, 185, 186, 194, 198, 200, 215, 221, 222, 224, 234, 249, 303, 304, 309, 312, 315], "fit": [8, 11, 115, 300, 301, 303], "everi": [8, 17, 26, 28, 32, 33, 63, 67, 70, 73, 74, 75, 129, 139, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 279, 301, 303, 304, 305, 306, 309, 310], "bottlneck": 8, "affect": [8, 32, 67, 70, 73, 74, 75, 133, 134, 141, 243, 244, 245, 246], "brax": [8, 77, 78, 120, 315], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 67, 70, 73, 74, 75, 108, 134, 168, 169, 217, 218, 270, 300, 301, 303, 305, 306, 309, 310, 312], "underli": [8, 67, 70, 73, 74, 75, 228, 310], "tedeiou": 8, "priorit": [8, 35, 41, 58, 215, 217, 218, 220, 226, 231, 233, 235, 303, 304], "amount": [8, 200, 304, 312], "isn": [8, 34, 36, 39, 196, 204, 309], "contigu": [8, 67, 70, 73, 74, 75, 145, 305, 309, 310, 312, 314, 315], "costli": [8, 310], "concaten": [8, 21, 30, 31, 98, 99, 115, 133, 165, 207, 303, 304, 309, 310, 312, 315], "constitut": [8, 304, 309, 310], "plain": 8, "profil": 8, "fulli": [8, 32, 67, 70, 73, 74, 75, 304, 310, 312], "frequent": [8, 312], "program": [8, 226, 315], "functorch": [8, 10], "incl": 8, "suit": [8, 80, 305, 315], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 204, 207, 228, 309, 310, 314], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 73, 150, 165, 170, 228, 305, 310, 314], "lost": 8, "permut": [8, 62, 314, 315], "idea": [9, 231, 301, 306, 309], "introductori": 9, "intro": [9, 305, 306], "dai": [9, 314], "2022": [9, 10, 310, 314], "spin": [9, 315], "deep": [9, 98, 152, 153, 154, 155, 158, 200, 214, 225, 233, 234, 303], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 115, 139, 303, 304, 305, 306], "reddit": 9, "reagent": 9, "orient": [9, 315], "baselines3": 9, "tf": 9, "bandit": [9, 90], "tensorflow": [9, 168, 169], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 67, 70, 73, 74, 75, 113, 206, 207, 230, 299, 305, 306, 309, 310, 311, 315], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 314], "grade": 9, "factori": [9, 43], "throughput": [9, 303], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 67, 70, 73, 74, 75, 101, 105, 145, 156, 159, 175, 179, 190, 194, 196, 197, 200, 201, 202, 203, 204, 205, 207, 208, 209, 218, 220, 235, 241, 299, 304, 305, 306, 309, 310, 314, 315], "mbrl": [9, 72, 299], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 310], "dist": [10, 168, 169, 176], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 305, 306, 309], "notebook": [10, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315], "24": [10, 304, 305, 306, 310, 311, 313], "11": [10, 27, 33, 45, 55, 56, 65, 68, 132, 149, 167, 303, 304, 305, 309, 310, 312, 313], "12": [10, 55, 56, 65, 303, 304, 310, 312], "pip": [10, 53, 309, 314, 315], "pip3": [10, 305, 306, 309], "extra": [10, 32, 67, 70, 73, 74, 75, 98, 139, 148, 299, 305, 306, 312], "url": 10, "org": [10, 35, 58, 98, 118, 136, 151, 152, 153, 154, 155, 156, 159, 160, 161, 167, 168, 169, 172, 174, 175, 177, 178, 180, 181, 187, 197, 200, 214, 215, 219, 221, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 243, 248, 256, 311], "whl": 10, "u": [10, 53, 310], "There": [10, 163, 299, 301, 305, 306, 309, 310, 312, 315], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 228], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 67, 70, 73, 74, 75, 96, 97, 98, 99, 100, 103, 105, 106, 109, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 136, 138, 139, 148, 150, 152, 153, 154, 155, 157, 159, 161, 164, 165, 168, 169, 170, 171, 172, 176, 178, 179, 184, 185, 186, 187, 204, 220, 225, 231, 234, 256, 273, 275, 276, 284, 285, 288, 289, 291, 292, 293, 294, 295], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 67, 69, 70, 73, 74, 75, 76, 79, 85, 90, 91, 92, 96, 97, 98, 99, 100, 103, 105, 106, 109, 111, 112, 113, 115, 116, 118, 119, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 136, 138, 139, 142, 146, 148, 149, 150, 152, 153, 154, 155, 158, 159, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 178, 179, 187, 190, 196, 197, 201, 202, 203, 204, 205, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 241, 242, 243, 244, 245, 246, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 288, 289, 295, 304, 305], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 67, 68, 70, 72, 73, 74, 75, 86, 213, 228, 284, 285, 293, 294, 295, 304], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 55, 56, 57, 63, 65, 105, 195], "vs": [11, 163, 164, 314], "longer": [11, 304, 309, 312], "self": [11, 26, 28, 32, 34, 36, 39, 67, 70, 72, 73, 74, 75, 96, 102, 103, 106, 118, 130, 133, 134, 136, 138, 149, 159, 167, 178, 187, 194, 198, 204, 209, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 301, 303, 304, 310, 314], "x": [11, 23, 26, 32, 38, 40, 113, 132, 150, 159, 161, 163, 164, 165, 167, 170, 188, 196, 202, 211, 213, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 279, 303, 305, 310, 312, 314], "23": [11, 304, 310, 311], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 67, 68, 70, 73, 74, 75, 86, 113, 130, 188, 196, 202, 222, 224, 243, 246, 254, 255, 259, 260, 291, 300, 303, 304, 309, 312, 314, 315], "import_modul": 11, "27": [11, 303, 304, 305, 310, 312], "get_class_that_defined_method": 11, "f": [11, 70, 213, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 303, 304, 305, 306, 309, 310, 312, 315], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 67, 70, 71, 73, 74, 75, 91, 92, 105, 115, 130, 134, 139, 162, 170, 185, 186, 196, 202, 208, 215, 223, 228, 229, 233, 275, 276, 301, 303, 304, 305, 306, 310, 315], "module_set": 11, "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 118, 127, 133, 134, 135, 137, 138, 149, 150, 158, 163, 165, 166, 167, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 247, 269, 272, 276, 279, 295, 304], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 67, 69, 70, 73, 74, 75, 96, 98, 99, 102, 103, 104, 107, 108, 109, 112, 113, 114, 117, 119, 120, 122, 125, 126, 128, 129, 130, 131, 133, 137, 139, 148, 149, 163, 166, 167, 194, 195, 197, 198, 200, 203, 204, 205, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 228, 229, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 279, 303, 310], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 68, 74, 75, 303, 314], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 79, 91, 92, 98, 99, 100, 105, 109, 110, 114, 115, 118, 119, 121, 127, 128, 131, 134, 135, 136, 138, 141, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 214, 215, 216, 220, 222, 223, 227, 228, 229, 230, 231, 235, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 270, 271, 272, 275, 276, 279, 281, 288, 289, 293, 294, 295, 310], "200": [13, 14, 16, 17, 21, 32, 67, 70, 73, 74, 75, 93, 94, 122, 152, 153, 160, 180, 181, 303, 306, 310], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 98, 122, 279, 282, 291, 301, 303, 304, 305, 306, 309, 312, 314], "create_env_kwarg": [13, 14, 16, 17, 68, 73, 74, 75, 303], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 67, 68, 70, 73, 74, 75, 76, 91, 92, 113, 130, 134, 139, 150, 151, 152, 153, 154, 155, 156, 161, 164, 165, 177, 201, 205, 266, 267, 275, 284, 285, 288, 293, 294, 295, 303, 304, 305, 315], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 122, 304, 312], "interactiontyp": [13, 16, 18, 19, 20, 21, 143, 147, 201, 205, 275], "exploration_mod": [13, 16, 18, 19, 20, 297, 299], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 67, 70, 73, 74, 75, 102, 103, 106, 113, 115, 118, 122, 123, 124, 129, 130, 132, 133, 134, 136, 138, 139, 157, 160, 162, 165, 168, 169, 171, 172, 180, 181, 184, 186, 194, 204, 208, 211, 212, 213, 214, 215, 220, 223, 224, 225, 226, 229, 231, 233, 234, 235, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 277, 303, 304, 312, 315], "datacollector": [13, 14, 16, 17, 201, 205, 230, 305], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 190, 194, 196, 197, 200, 201, 202, 203, 204, 205, 207, 299, 314], "env_mak": [13, 14, 16, 21, 291, 315], "50": [13, 14, 16, 21, 37, 40, 304, 305, 306, 309, 310, 311, 312], "linear": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 75, 102, 113, 118, 130, 133, 134, 136, 138, 149, 150, 159, 165, 167, 170, 171, 172, 173, 179, 180, 181, 190, 191, 192, 193, 198, 199, 200, 201, 202, 204, 207, 209, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 243, 244, 245, 246, 291, 299, 304, 308, 311, 314], "2000": [13, 14, 16, 45, 305, 312], "enumer": [13, 14, 16, 21, 32, 38, 42, 67, 70, 73, 74, 75, 236, 300, 303, 304, 305, 306, 312, 314], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 67, 70, 71, 73, 74, 75, 90, 91, 92, 122, 159, 179, 196, 197, 200, 202, 203, 299, 305, 306, 310, 312, 314, 315], "step_count": [13, 14, 16, 67, 70, 73, 74, 75, 128, 305, 306, 314], "shutdown": [13, 14, 16, 17, 21, 303, 314], "del": [13, 14, 16, 303, 305, 308, 314, 315], "randompolici": [13, 14, 16, 18, 19, 20, 22, 98, 122, 297, 312], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 216, 227, 230, 270, 272, 275, 279, 282, 283, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315], "lifespan": [13, 14, 16, 18, 19, 20, 304], "divis": [13, 14, 16, 18, 19, 20, 309], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 105, 306, 312], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 67, 70, 73, 74, 75, 130, 134, 201, 205, 275, 293, 294, 295, 301, 304, 305, 310, 315], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 67, 70, 73, 74, 75, 305], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 304, 305, 309], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 133, 135, 170, 300, 301, 303, 304, 309, 312, 314], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 67, 70, 73, 74, 75, 105, 107, 126, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 168, 169, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 243, 312, 315], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 299, 309, 310], "post": [13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 73, 74, 75], "multistep": [13, 14, 16, 18, 19, 20, 21, 297, 304], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 115, 124, 162, 171, 180, 185, 186, 241, 299, 310, 312], "explorationtyp": [13, 14, 16, 20, 21, 228, 275, 303, 304, 305, 306, 314], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 230], "whole": [13, 14, 16, 26, 28, 32, 45, 67, 70, 73, 74, 75, 134, 270, 303, 305], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 281, 291, 301, 303, 314], "async": [13, 14, 18, 19, 20, 21, 303, 314], "ratio": [13, 14, 40, 303, 305], "finish": [13, 14, 21, 122], "rest": [13, 14, 299, 305, 306, 310, 314], "earli": [13, 14, 314], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 73, 74, 75, 134, 139, 301, 303], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 73, 74, 75, 134, 139, 295, 301, 303, 304, 315], "ordereddict": [13, 14, 16, 17, 21, 32, 67, 70, 73, 74, 75, 134, 139, 304], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 73, 74, 75, 139, 163, 213, 214, 216, 227, 230, 279, 299, 309], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 67, 70, 73, 74, 75, 134], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 67, 70, 73, 74, 75, 110, 115, 128, 150, 165, 170, 226, 233, 312], "increment": [13, 14, 16, 17, 67, 70, 73, 74, 75, 128, 227], "env_fn": [13, 14, 16, 17, 68, 293, 294], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 154, 155, 310], "out_se": [13, 14, 16, 17, 315], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 55, 56, 65, 67, 68, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 118, 127, 130, 133, 134, 135, 137, 138, 149, 150, 152, 153, 154, 155, 158, 161, 162, 163, 165, 166, 167, 170, 176, 184, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 241, 242, 243, 244, 245, 246, 247, 262, 266, 267, 269, 272, 279, 284, 285, 288, 292, 293, 294, 300, 305, 309], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 67, 70, 73, 74, 75, 96, 97, 98, 99, 100, 103, 105, 106, 109, 111, 112, 113, 115, 116, 119, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 139, 148, 152, 158, 159, 163, 164, 165, 170, 173, 177, 178, 179, 196, 197, 202, 203, 208, 214, 215, 217, 220, 222, 226, 228, 230, 231, 232, 233, 235, 243, 244, 245, 246, 273, 275, 277, 286, 287, 303], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 72, 78, 89, 96, 103, 106, 149, 167, 214, 215, 217, 218, 220, 226, 230, 231, 233, 235, 310, 314, 315], "describ": [15, 44, 99, 133, 184, 185, 265, 300, 303, 305, 309, 310, 315], "tensor_spec": [15, 96, 220, 230, 232], "boundedtensorspec": [15, 22, 26, 67, 70, 73, 74, 75, 198, 200, 201, 208, 214, 215, 217, 226, 230, 231, 233, 235, 297, 305, 309, 310, 314, 315], "cube": 15, "envcreat": [16, 22, 291, 292, 295, 297, 303, 304, 314, 315], "interruptor": 16, "_interruptor": 16, "outsid": [16, 309], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 67, 70, 73, 74, 75, 305, 309, 314, 315], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 70, 73, 113, 214, 216, 227, 230, 303, 308, 310, 314], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 117, 303, 314], "regular": [17, 34, 36, 39, 179, 197, 202, 203, 204, 205, 221, 281, 297, 301, 303, 304, 312, 315], "mere": 17, "greater": [17, 163, 303, 304, 314], "signal": [17, 52, 128, 300, 303, 305, 309, 312], "sent": [17, 55, 56, 65, 139], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 74, 75, 119, 139, 149, 150, 152, 154, 156, 158, 165, 167, 170, 190, 204, 209, 270, 276, 303, 305, 306, 310, 312, 315], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 279], "string": [18, 19, 20, 32, 37, 45, 54, 67, 70, 73, 74, 75, 86, 118, 138, 163, 196, 201, 202, 213, 261, 278, 288, 300, 303, 305, 306], "respect": [18, 19, 20, 32, 67, 70, 73, 74, 75, 97, 102, 103, 106, 118, 119, 130, 133, 134, 136, 138, 181, 204, 209, 274, 305, 306, 309], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 67, 70, 73, 74, 75, 120, 134, 148, 163, 195, 228, 300, 303, 304, 306, 312], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 298, 304, 305, 308, 312], "serv": [18, 20, 21, 87, 312, 315], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 67, 70, 73, 74, 75, 109], "seen": [18, 20, 21, 300, 303, 304, 306, 309, 312], "turn": [18, 20, 21, 111, 135, 196, 275, 300, 303, 304, 306, 310, 311], "mp": [18, 19, 20, 68, 139], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 67, 70, 73, 74, 75, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 303], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 67, 70, 73, 74, 75, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 230, 293, 294], "homonym": [18, 19, 20, 310], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 303], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 201, 205], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 293, 294, 303, 304], "coordin": 21, "hood": [21, 310], "init": [21, 32, 67, 70, 73, 74, 75, 303, 304, 305], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 312], "similarli": [21, 32, 62, 67, 70, 73, 74, 75, 206, 207, 226, 315], "num_cpu": 21, "num_gpu": 21, "1024": [21, 156, 304, 312], "equat": [21, 200, 213, 216, 234, 305, 310], "exce": [21, 305, 312], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 279, 303, 305, 306], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 93, 94, 150, 151, 152, 153, 156, 161, 165, 170, 174, 175, 177, 178, 187, 241, 303, 304, 306, 310, 311, 312, 314, 315], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "wherea": [22, 105, 228, 301], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 151, 156, 177, 195], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 68, 304], "__main__": [22, 68], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 105, 131, 184, 185, 186, 195, 200, 215, 216, 220, 229, 231, 233, 303, 305, 306, 309], "durat": [23, 309], "meta": [23, 44, 52, 69, 301, 305, 309, 312], "aren": [23, 306], "discret": [24, 27, 30, 31, 33, 47, 67, 70, 73, 74, 75, 91, 92, 105, 176, 179, 220, 221, 299, 304, 305, 309, 315], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 139, 299, 303, 309], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 105, 175, 176, 180, 213, 299, 304, 305, 306, 310, 312], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 314], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 200, 208], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 208, 310], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 67, 70, 73, 74, 75, 102, 103, 106, 113, 118, 130, 133, 134, 136, 138, 139, 204, 288, 315], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 101], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 150, 165, 182, 183], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 136, 151, 177], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 67, 70, 73, 74, 75, 295, 299], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 315], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 105, 163, 190, 194, 196, 197, 200, 201, 202, 203, 204, 205, 299, 314, 315], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 190, 196, 197, 201, 202, 203, 204, 205, 305, 309, 310, 312], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 130, 145, 310, 312], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 98, 127, 150, 182, 183, 303, 310, 312], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 98, 99, 130, 135, 139, 164, 183, 188, 295, 304, 305, 310, 312], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 133, 134, 173, 184, 295], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 91, 92, 96, 105, 159, 176, 179, 196, 197, 202, 203, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 306], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 159, 179, 196, 202, 218, 220, 241, 297, 299], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 67, 70, 73, 74, 75, 102, 103, 106, 118, 130, 133, 134, 136, 138, 139, 204, 213, 228, 303, 304, 305, 310, 312], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 130, 163, 306, 310, 311], "upper": [25, 114], "unnam": 26, "effect": [26, 32, 67, 70, 73, 74, 75, 98, 125, 134, 279, 303, 312, 315], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 67, 70, 73, 74, 75, 150, 165, 304, 310, 311, 313], "composite_spec": 26, "observation_vector": [26, 99, 288, 303], "randn": [26, 34, 36, 39, 55, 56, 65, 115, 145, 151, 156, 159, 164, 168, 169, 173, 176, 177, 179, 190, 191, 192, 193, 195, 196, 201, 202, 204, 207, 208, 209, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 243, 244, 245, 246, 278, 299, 314, 315], "td_project": 26, "is_empti": [26, 28, 310], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 67, 70, 73, 74, 75, 242, 309], "children": [26, 28, 32, 67, 70, 73, 74, 75], "keysview": [26, 28], "reflect": [26, 28, 91, 92, 148, 228, 282, 304, 305, 306, 309], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 67, 70, 73, 74, 75, 228], "succeed": [26, 28, 305, 309, 310], "selected_kei": [26, 28, 126, 303], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "device_typ": [27, 30, 33, 150, 151, 152, 153, 154, 155, 161, 165, 171, 172, 177], "onehottensorspec": 27, "categor": [27, 31, 33, 91, 92, 96, 159, 176, 179, 196, 197, 202, 203, 218, 220, 241, 306], "action_valu": [27, 33, 158, 159, 179, 196, 197, 202, 203, 220, 228, 241, 299, 306], "arang": [27, 33, 159, 169, 196, 270, 299, 312], "argmax": [27, 159, 179, 197, 203], "chosen_action_valu": [27, 33, 178, 179, 187, 202, 203, 241, 299, 306], "outcom": [27, 33, 157, 184], "lazi": [28, 29, 49, 50, 67, 70, 73, 74, 75, 118, 136, 171, 206, 207, 303, 304, 308, 312, 315], "represent": [28, 29, 32, 67, 70, 73, 74, 75, 118, 136, 138, 303, 310, 311, 315], "drawn": [28, 29, 130, 198, 201, 205, 305, 309], "lazystackedtensordict": [28, 67, 70, 72, 73, 74, 75, 308, 314], "heterogen": [28, 29, 71, 91, 92, 141, 170, 303, 304], "semant": [28, 29, 299], "thrown": [29, 32, 67, 70, 73, 74, 75, 312], "nvec": [30, 31], "cardin": [30, 31, 159, 179, 196, 197, 203, 305], "ax": [30, 171, 172], "m": [30, 32, 67, 70, 73, 74, 75, 105, 205, 299, 304, 310], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 218, 220, 241, 297], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 297], "gamma": [32, 122, 167, 214, 215, 217, 218, 220, 221, 222, 224, 226, 228, 230, 231, 232, 233, 235, 236, 237, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 291, 300, 303, 304, 305, 309, 314], "sutton": [32, 300, 309], "1988": 32, "predict": [32, 40, 160, 166, 167, 195, 210, 221, 223, 224, 242, 299, 303, 304], "tempor": [32, 163, 167, 244, 245, 250, 251], "44": [32, 304, 310, 311], "discount": [32, 68, 122, 215, 221, 222, 224, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 300, 304, 305, 309], "ahead": [32, 315], "add_modul": [32, 67, 70, 73, 74, 75], "child": [32, 67, 70, 73, 74, 75], "fn": [32, 37, 67, 70, 73, 74, 75, 173, 293, 294], "init_weight": [32, 67, 70, 73, 74, 75], "fill_": [32, 67, 70, 73, 74, 75, 304, 306, 315], "net": [32, 67, 70, 73, 74, 75, 164, 170, 214, 215, 220, 226, 230, 231, 232, 233, 288, 291, 304, 310, 311, 314], "in_featur": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 150, 152, 153, 154, 155, 164, 165, 170, 171, 172, 191, 204, 218, 314], "out_featur": [32, 67, 70, 72, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 149, 150, 152, 153, 154, 155, 160, 161, 163, 164, 165, 167, 170, 171, 172, 191, 196, 204, 218, 299, 303, 306, 314], "bia": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 150, 160, 163, 165, 170, 171, 172, 173, 198, 200, 204, 211, 212, 213, 228, 300, 303, 304, 305, 306, 309, 314], "requires_grad": [32, 67, 70, 73, 74, 75, 113], "bfloat16": [32, 67, 70, 73, 74, 75], "datatyp": [32, 67, 70, 73, 74, 75, 312], "member": [32, 67, 70, 73, 74, 75, 228], "xdoctest": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204, 228], "skip": [32, 67, 70, 73, 74, 75, 110, 134, 141, 201, 205, 228, 243, 244, 245, 246, 261, 262, 272, 275, 303, 304, 305, 310], "buf": [32, 67, 70, 73, 74, 75], "20l": [32, 67, 70, 73, 74, 75, 228], "1l": [32, 67, 70, 73, 74, 75, 228], "5l": [32, 67, 70, 73, 74, 75, 228], "__call__": [32, 37, 67, 70, 73, 74, 75, 205, 301], "associ": [32, 67, 70, 73, 74, 75, 180, 295, 303, 312], "doubl": [32, 46, 67, 70, 73, 74, 75, 102, 103, 104, 106, 118, 130, 133, 134, 136, 138, 204, 218, 221, 225, 231, 234, 241, 303, 304, 305, 306, 315], "eval": [32, 67, 70, 73, 74, 75, 134, 139, 303, 304, 305], "evalu": [32, 67, 70, 73, 74, 75, 134, 157, 168, 169, 176, 186, 231, 284, 285, 304, 305], "dropout": [32, 67, 70, 73, 74, 75, 134, 163, 165, 306], "batchnorm": [32, 67, 70, 73, 74, 75, 134], "disabl": [32, 67, 70, 73, 74, 75, 134, 162, 186, 303], "comparison": [32, 54, 67, 70, 73, 74, 75, 134, 228, 303, 304], "similar": [32, 67, 70, 73, 74, 75, 91, 92, 102, 118, 130, 133, 134, 136, 137, 138, 139, 191, 193, 201, 204, 205, 300, 303, 304, 305, 306, 310, 315], "confus": [32, 67, 70, 73, 74, 75, 134], "extra_repr": [32, 67, 70, 73, 74, 75], "nontermin": 32, "original_reward": 32, "newli": [32, 67, 70, 73, 74, 75], "OR": 32, "reshap": [32, 163, 165, 305, 309], "get_buff": [32, 67, 70, 73, 74, 75], "throw": [32, 67, 70, 73, 74, 75, 315], "docstr": [32, 67, 70, 73, 74, 75], "get_submodul": [32, 67, 70, 73, 74, 75], "explan": [32, 67, 70, 73, 74, 75], "qualifi": [32, 67, 70, 73, 74, 75], "referenc": [32, 67, 70, 73, 74, 75], "attributeerror": [32, 67, 70, 73, 74, 75], "invalid": [32, 67, 70, 73, 74, 75, 76, 168, 169], "resolv": [32, 67, 70, 73, 74, 75], "get_extra_st": [32, 67, 70, 73, 74, 75, 139], "set_extra_st": [32, 67, 70, 73, 74, 75, 139], "picklabl": [32, 67, 70, 73, 74, 75, 139], "ensur": [32, 35, 41, 58, 62, 67, 70, 73, 74, 75, 98, 118, 136, 139, 196, 299, 304, 305, 310, 312], "guarante": [32, 55, 56, 57, 63, 65, 67, 70, 73, 74, 75, 139, 314], "pickl": [32, 67, 70, 73, 74, 75, 139], "get_paramet": [32, 67, 70, 73, 74, 75], "sai": [32, 67, 70, 73, 74, 75, 311, 315], "net_b": [32, 67, 70, 73, 74, 75], "net_c": [32, 67, 70, 73, 74, 75], "conv": [32, 67, 70, 73, 74, 75, 150, 304], "conv2d": [32, 67, 70, 73, 74, 75, 150, 314], "kernel_s": [32, 67, 70, 73, 74, 75, 150, 152, 153, 174, 304, 314], "stride": [32, 67, 70, 73, 74, 75, 150, 152, 153, 161, 304, 314], "diagram": [32, 67, 70, 73, 74, 75], "show": [32, 67, 70, 73, 74, 75, 170, 299, 303, 305, 306, 309, 310, 312, 314], "itself": [32, 67, 70, 73, 74, 75, 85, 228, 305], "degre": [32, 67, 70, 73, 74, 75], "named_modul": [32, 67, 70, 73, 74, 75], "o": [32, 67, 70, 73, 74, 75], "transit": [32, 52, 67, 70, 73, 74, 75, 210, 303, 306, 310, 312], "half": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204, 303], "ipu": [32, 67, 70, 73, 74, 75], "strict": [32, 67, 70, 73, 74, 75, 134], "descend": [32, 67, 70, 73, 74, 75, 134], "persist": [32, 67, 70, 73, 74, 75, 134, 148], "enforc": [32, 62, 67, 70, 73, 74, 75, 134, 206, 310], "preserv": [32, 67, 70, 73, 74, 75, 134], "missing_kei": [32, 67, 70, 73, 74, 75, 134], "unexpected_kei": [32, 67, 70, 73, 74, 75, 134], "namedtupl": [32, 67, 70, 73, 74, 75, 134], "duplic": [32, 62, 67, 70, 73, 74, 75, 218, 221, 228, 241], "l": [32, 67, 70, 73, 74, 75, 242, 305, 310], "idx": [32, 67, 70, 73, 74, 75], "named_buff": [32, 67, 70, 73, 74, 75], "remove_dupl": [32, 67, 70, 73, 74, 75, 228], "prepend": [32, 67, 70, 73, 74, 75, 228], "running_var": [32, 67, 70, 73, 74, 75], "named_children": [32, 67, 70, 73, 74, 75], "conv4": [32, 67, 70, 73, 74, 75], "conv5": [32, 67, 70, 73, 74, 75], "memo": [32, 67, 70, 73, 74, 75], "named_paramet": [32, 67, 70, 73, 74, 75, 113, 228], "register_backward_hook": [32, 67, 70, 73, 74, 75], "removablehandl": [32, 67, 70, 73, 74, 75], "deprec": [32, 67, 70, 73, 74, 75, 134, 142, 146, 158, 214, 215, 216, 218, 220, 221, 226, 227, 230, 231, 232, 233, 241, 243, 244, 245, 246, 315], "favor": [32, 67, 70, 73, 74, 75, 305], "register_full_backward_hook": [32, 67, 70, 73, 74, 75], "register_buff": [32, 67, 70, 73, 74, 75], "running_mean": [32, 67, 70, 73, 74, 75], "alongsid": [32, 67, 70, 73, 74, 75, 309], "num_featur": [32, 67, 70, 73, 74, 75], "register_forward_hook": [32, 67, 70, 73, 74, 75, 159, 179], "with_kwarg": [32, 67, 70, 73, 74, 75], "always_cal": [32, 67, 70, 73, 74, 75], "posit": [32, 35, 38, 41, 42, 52, 53, 67, 70, 73, 74, 75, 109, 110, 127, 128, 131, 134, 135, 173, 300, 305, 309, 310, 312], "signatur": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204, 228, 300, 303, 310], "register_module_forward_hook": [32, 67, 70, 73, 74, 75], "regardless": [32, 67, 70, 73, 74, 75, 216, 227, 230], "register_forward_pre_hook": [32, 67, 70, 73, 74, 75], "invok": [32, 67, 70, 73, 74, 75], "And": [32, 67, 70, 73, 74, 75], "forward_pr": [32, 67, 70, 73, 74, 75], "register_module_forward_pre_hook": [32, 67, 70, 73, 74, 75], "grad_input": [32, 67, 70, 73, 74, 75], "grad_output": [32, 67, 70, 73, 74, 75], "subsequ": [32, 67, 70, 73, 74, 75, 306], "technic": [32, 67, 70, 73, 74, 75, 304, 306], "caller": [32, 67, 70, 73, 74, 75], "register_module_full_backward_hook": [32, 67, 70, 73, 74, 75], "register_full_backward_pre_hook": [32, 67, 70, 73, 74, 75], "backward_pr": [32, 67, 70, 73, 74, 75], "register_module_full_backward_pre_hook": [32, 67, 70, 73, 74, 75], "register_load_state_dict_post_hook": [32, 67, 70, 73, 74, 75], "incompatible_kei": [32, 67, 70, 73, 74, 75], "clear": [32, 67, 70, 73, 74, 75, 271], "register_modul": [32, 67, 70, 73, 74, 75, 301], "alia": [32, 67, 70, 73, 74, 75], "register_paramet": [32, 67, 70, 73, 74, 75], "register_state_dict_pre_hook": [32, 67, 70, 73, 74, 75], "keep_var": [32, 67, 70, 73, 74, 75, 134], "made": [32, 55, 56, 57, 63, 65, 67, 70, 73, 74, 75, 200, 218, 228, 241, 303, 304, 306, 309, 311], "requires_grad_": [32, 67, 70, 73, 74, 75], "autograd": [32, 67, 70, 73, 74, 75, 134], "freez": [32, 67, 70, 73, 74, 75], "finetun": [32, 67, 70, 73, 74, 75], "gan": [32, 67, 70, 73, 74, 75], "share_memori": [32, 67, 68, 70, 73, 74, 75, 303], "share_memory_": [32, 67, 70, 73, 74, 75, 314], "destin": [32, 34, 36, 39, 67, 70, 73, 74, 75, 104, 134, 136, 148], "averag": [32, 67, 70, 73, 74, 75, 134, 139, 200, 222, 223, 277, 303, 305], "shallow": [32, 67, 70, 73, 74, 75, 134, 306], "pleas": [32, 67, 70, 73, 74, 75, 91, 92, 134, 298], "detach": [32, 67, 70, 73, 74, 75, 134, 228, 243, 244, 245, 246, 303], "non_block": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "memory_format": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "channels_last": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "complex": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204, 303, 304], "integr": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 155, 163, 167, 204, 299, 309, 310, 311], "unchang": [32, 67, 70, 73, 74, 75, 102, 105, 118, 130, 133, 134, 136, 138, 198, 204, 276, 303, 312], "tri": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "pin": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "4d": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "ignore_w": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "1913": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "3420": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "5113": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "2325": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "torch_doctest_cuda1": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "gpu1": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "1914": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "5112": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204, 310], "2324": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "float16": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "cdoubl": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "3741": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "j": [32, 35, 58, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204, 301], "2382": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "5593": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204, 310], "4443": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "complex128": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "6122": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "1150": [32, 67, 70, 73, 74, 75, 102, 118, 130, 133, 134, 136, 138, 204], "to_empti": [32, 67, 70, 73, 74, 75], "dst_type": [32, 67, 70, 73, 74, 75], "xpu": [32, 67, 70, 73, 74, 75], "set_to_non": [32, 67, 70, 73, 74, 75], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 312], "discretebox": [33, 67, 70, 73, 74, 75, 305, 309, 315], "chosen_data": [34, 54], "rewarddata": [34, 54, 297], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 90], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 310], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 103, 106, 118, 134, 138, 271, 311], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 295], "determin": [34, 35, 36, 39, 41, 52, 58, 118, 138, 200, 304, 309], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 157, 184], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 306], "memmap": [34, 36, 39, 55, 74, 75, 139, 276, 312], "unbind": [34, 36, 39, 163], "alpha": [35, 41, 58, 150, 215, 220, 229, 231, 233, 303, 312, 314], "ep": [35, 41, 58, 139, 200, 216, 234, 277, 303, 304, 306], "1e": [35, 41, 58, 139, 157, 160, 173, 184, 303, 304, 305, 309], "08": [35, 41, 58, 303, 304, 305, 310], "collate_fn": [35, 38, 41, 42, 52, 53, 312, 314], "prefetch": [35, 38, 41, 42, 52, 53, 54, 303, 304, 306, 312], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 98, 118, 136, 151, 152, 153, 154, 155, 156, 159, 160, 161, 167, 172, 174, 175, 177, 178, 180, 181, 187, 197, 200, 214, 215, 219, 221, 222, 223, 224, 225, 226, 229, 230, 233, 234, 243, 248, 256, 311], "ab": [35, 58, 118, 136, 139, 151, 156, 160, 161, 167, 172, 174, 175, 177, 178, 180, 181, 187, 214, 215, 219, 222, 223, 224, 225, 226, 229, 230, 233, 311], "1511": [35, 58, 161], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 184, 201, 205, 297, 300], "null": [35, 41, 58, 97], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 312], "merg": [35, 38, 41, 42, 52, 53, 310], "mini": [35, 38, 41, 42, 52, 53, 309], "decid": [35, 38, 41, 42, 314], "rb": [35, 38, 41, 42, 52, 53, 98, 122, 304, 306, 309, 311, 312, 314], "meth": [35, 38, 41, 42, 228], "incompat": [35, 38, 41, 42, 312], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 312], "tensordictprioritizedreplaybuff": [35, 297, 314], "simplifi": [35, 310, 312], "manual_se": [35, 38, 41, 42, 96, 105, 115, 122, 168, 169, 176, 190, 197, 198, 200, 208, 214, 215, 217, 226, 233, 309, 310, 314, 315], "_weight": [35, 41, 312, 314], "arrai": [35, 40, 303, 312], "update_prior": [35, 58, 276, 301, 304, 312, 314], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 135], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 129, 303, 312], "nonetyp": [36, 39], "logit": [36, 40, 168, 169, 176, 197, 220, 299], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 67, 70, 73, 74, 75, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211], "text": [37, 40, 43, 200, 305], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 151, 156, 177], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 312], "inde": [37, 105, 305, 310], "might": [37, 129, 266, 298, 303, 315], "writer": [38, 42, 52, 53, 60, 64, 297, 305], "randomsampl": [38, 42, 52, 53, 297, 303], "roundrobinwrit": [38, 42, 52, 53, 297], "Not": 38, "ref_model": 40, "reward_model": [40, 210], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 113], "kl": [40, 113, 223, 227], "penalti": [40, 227], "strai": 40, "far": [40, 162, 185, 186, 310, 315], "calcul": [40, 122], "gpt2rewardmodel": 40, "get_dataload": [40, 297], "promptdata": [40, 297], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 310, 312], "reward_kl": [40, 113], "reward_raw": 40, "sample_log_prob": [40, 191, 192, 193, 201, 205, 207, 230, 288, 305, 309, 314], "create_rollout_td": 40, "log_prob": [40, 157, 168, 169, 176, 186, 205], "log_ratio": 40, "kl_coef": 40, "plu": [40, 310], "replic": 40, "rindex": 40, "multipli": [40, 215, 216, 220, 227, 229, 230, 231, 233, 277, 303], "term": [40, 113, 171, 172, 213, 214, 220, 281, 304, 305, 309], "subtract": [40, 129], "ve": [40, 303, 306], "eo": 40, "limit": [40, 72, 98, 113, 303, 304, 306, 309, 310], "generation_config": 40, "generationconfig": 40, "ti": [40, 252, 253, 254, 255, 257, 258, 259, 260, 304], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 215, 218, 220, 221, 226, 228, 231, 233, 235, 241, 312, 314], "td_error": [41, 42, 215, 217, 218, 220, 221, 226, 228, 231, 233, 235, 241, 303, 312, 314], "reduct": [41, 58], "prioritizedreplaybuff": [41, 297, 314], "update_tensordict_prior": [41, 303, 312, 314], "prioritizedsampl": [41, 42, 218, 221, 241, 297, 303, 312], "min": [41, 58, 184, 185, 186, 195, 200, 215, 216, 220, 229, 231, 233, 304, 305, 309], "median": [41, 58, 201, 205], "len": [41, 55, 56, 65, 150, 165, 170, 303, 310, 311, 312, 314], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 89, 145], "huggingfac": [43, 199], "co": [43, 310], "doc": [43, 304, 309], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 297], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 73, 74, 75, 303, 304], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 70, 136, 148, 261, 312, 315], "condit": [45, 129, 196, 197, 202, 203, 213, 303, 310, 312], "elementwis": 45, "os": [45, 304], "cpu_count": 45, "vocabulari": 45, "loader": [45, 305], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 96, 98, 99, 100, 101, 103, 105, 106, 107, 109, 112, 115, 119, 120, 122, 126, 128, 131, 136, 139, 148, 194, 195, 198, 200, 205, 218, 241], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 304], "batch_dimens": 45, "filder": 45, "tempfil": [45, 291, 303, 304], "randint": [45, 132, 312], "20": [45, 67, 70, 73, 74, 75, 195, 270, 303, 304, 305, 306, 309, 310, 314, 315], "temporarydirectori": [45, 303, 304], "tmpdir": [45, 303, 304], "data_memmap": 45, "exclus": [48, 49, 109, 163, 168, 169, 196, 197, 202, 203, 234, 235, 243, 244, 245, 246, 247, 295, 299], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_timeout_as_don": 52, "env_kwarg": [52, 293, 294, 303], "metadata": [52, 305, 309, 315], "reconstruct": [52, 223, 303, 315], "timeout": 52, "recov": [52, 194, 200, 206, 226, 308], "regard": [52, 159, 197, 214, 221, 230, 303, 305, 310], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 73, 188, 293, 294, 300, 305, 306, 312, 314], "left": [52, 102, 104, 113, 118, 120, 131, 133, 136, 138, 198, 304, 305], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 122, 125, 129, 149, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 304, 309], "absent": 52, "traj_split": 52, "observationnorm": [52, 139, 295, 303, 304, 305, 306, 314], "maze2d": 52, "umaz": 52, "loc": [52, 113, 115, 124, 162, 173, 185, 186, 191, 192, 193, 201, 205, 207, 214, 215, 226, 230, 231, 232, 233, 283, 288, 295, 299, 303, 304, 305, 306, 309, 314], "128": [52, 153, 156, 304, 306, 310, 311, 312], "public": [53, 118, 138], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 90], "adult_onehot": [53, 90], "mushroom_num": [53, 90], "mushroom_onehot": [53, 90], "covertyp": [53, 90], "shuttl": [53, 90], "magic": [53, 90], "infinit": [54, 312], "three": [54, 299, 301, 305, 309, 310, 312], "block": [54, 299, 306], "pairwisedataset": [54, 297], "256": [54, 156, 304, 305, 309, 310], "scratch_dir": [55, 303, 312], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 195, 312, 315], "bar": [55, 56, 65, 195, 272, 273, 275, 279, 301, 304], "attach": [55, 56, 57, 63, 65, 304], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 168, 169, 303], "auto": [56, 65, 200, 215, 220, 229, 231, 233, 235, 300, 309], "zero_": [56, 65, 145], "max_capac": [58, 303, 312], "uniformli": [59, 228, 315], "roundrobin": [60, 64], "piec": [60, 64, 66, 303, 304, 305, 309, 310, 312], "consum": [62, 304, 305, 309, 312], "incomplet": 62, "unlik": [62, 221, 230, 304, 314], "fresh": 62, "caution": [62, 141, 315], "shuffl": [62, 309], "haven": [62, 311], "remain": [62, 104, 105, 113, 129, 172], "draw": [62, 198], "__len__": 63, "_inplace_upd": [67, 73, 74, 75, 77, 78, 90, 91, 92, 93, 94, 134], "_batch_lock": [67, 73, 74, 75, 77, 78, 90, 91, 92, 93, 94, 134], "continuousbox": [67, 70, 73, 74, 75, 145, 305, 309, 310, 314, 315], "unboundedcontinuoustensorspec": [67, 70, 72, 73, 74, 75, 96, 103, 106, 130, 145, 149, 167, 190, 204, 207, 209, 232, 297, 305, 306, 309, 310, 315], "another_act": [67, 70, 73, 74, 75], "mutabl": [67, 70, 73, 74, 75], "batch_lock": [67, 69, 70, 73, 74, 75, 130, 134, 310], "immut": [67, 70, 73, 74, 75, 120, 134], "another_don": [67, 70, 73, 74, 75], "fake_tensordict": [67, 70, 73, 74, 75, 304], "fake": [67, 70, 73, 74, 75, 303, 304], "overridden": [67, 70, 73, 74, 75, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 306], "afterward": [67, 70, 73, 74, 75, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211, 315], "silent": [67, 70, 73, 74, 75, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 165, 170, 173, 174, 175, 177, 180, 181, 183, 188, 194, 195, 197, 198, 200, 203, 208, 211], "attibut": [67, 70, 73, 74, 75], "speak": [67, 70, 73, 74, 75, 303], "rand_act": [67, 70, 71, 73, 74, 75, 91, 92], "_step": [67, 70, 73, 74, 75, 96, 103, 106, 109, 120, 129], "privat": [67, 70, 73, 74, 75, 310, 315], "another_reward": [67, 70, 73, 74, 75], "callback": [67, 70, 73, 74, 75, 309], "auto_reset": [67, 70, 73, 74, 75, 310], "auto_cast_to_devic": [67, 70, 73, 74, 75, 309], "break_when_any_don": [67, 70, 73, 74, 75, 309], "return_contigu": [67, 70, 73, 74, 75, 141, 308], "soon": [67, 70, 73, 74, 75, 91, 92], "ndim": [67, 70, 73, 74, 75], "concomitt": [67, 70, 73, 74, 75], "workspac": [67, 70, 73, 74, 75], "prevail": [67, 70, 73, 74, 75], "creator": [68, 284, 285, 293, 294, 295], "substitut": [68, 139], "vecnorm": [68, 295], "env_creat": [68, 303], "test_env1": 68, "_td": 68, "observation_count": [68, 315], "test_env2": 68, "sleep": [68, 315], "ps": 68, "p1": 68, "p2": 68, "join": [68, 297, 304, 305], "9934": 68, "env_str": 69, "info_dict_read": 70, "set_info_dict_read": 70, "put": [70, 139, 295, 299, 304, 305, 306, 310], "read_act": 70, "read_don": 70, "reader": [70, 304], "frame_skip": [70, 79, 80, 81, 83, 84, 88, 110, 272, 275, 282, 301, 303, 304, 305, 314], "broken": [70, 141], "read_ob": 70, "dictat": [70, 201, 205, 230, 303, 310], "inner": [70, 105, 301, 304, 305, 309, 315], "read_reward": 70, "baseinfodictread": 70, "info_dict": 70, "hoc": 70, "dict_read": 70, "default_info_dict_read": 70, "my_info_kei": 70, "some_env": 70, "qualnam": 71, "marl": [71, 76, 309], "multiag": [71, 91, 92, 170, 178, 187, 241], "leverag": [71, 91, 92, 303, 309, 315], "neural": [71, 91, 92, 150, 182, 204, 299, 304, 305, 306, 309, 310, 315], "group_map": [71, 76, 91, 92], "constructiuon": [71, 91, 92], "premad": [71, 91, 92, 241], "all_in_one_group": [71, 76], "agent_0": [71, 76, 91, 92], "agent_1": [71, 76, 91, 92], "agent_2": [71, 76, 91, 92], "agent_3": 71, "int8": [71, 91, 92], "one_group_per_ag": [71, 91, 92], "environn": 72, "safeti": 72, "constraint": [72, 305, 309], "behav": [72, 87, 176, 226, 311], "mymbenv": [72, 149, 167], "world_model": [72, 149, 167, 223], "super": [72, 96, 103, 106, 149, 159, 167, 209, 215, 217, 220, 226, 231, 233, 235, 303, 310, 314], "hidden_observ": [72, 149, 167], "mlp": [72, 149, 150, 152, 153, 154, 155, 163, 164, 167, 170, 191, 196, 218, 288, 299, 304, 308, 311, 314], "worldmodelwrapp": [72, 149, 167], "activation_class": [72, 149, 150, 152, 153, 154, 155, 160, 161, 165, 167, 170, 304, 309, 314], "relu": [72, 149, 156, 167, 173, 213], "activate_last_lay": [72, 149, 155, 165, 167], "depth": [72, 149, 150, 152, 153, 154, 155, 160, 161, 165, 167, 170, 174, 175, 196, 299, 304, 308, 309], "run_type_check": 72, "equal": [73, 74, 75, 114, 115, 150, 158, 163, 165, 170, 234, 238, 270, 293, 294, 303, 305, 311], "readthedoc": 73, "en": 73, "python_interfac": 73, "thread": 73, "task_id": 73, "my_env_fun": [74, 75], "custom_attribute_list": [74, 75], "custom_attribut": [74, 75], "custom_method_list": [74, 75], "custom_method": [74, 75], "deploi": [74, 75], "slight": [74, 75, 304], "overhead": [74, 75], "share_individual_td": [74, 75], "shared_memori": [74, 75], "policy_proof": [74, 75], "ll": [74, 75, 303, 304, 305, 306, 309, 315], "hidden": [74, 75, 160, 163, 164, 174, 175, 180, 181, 191, 192, 193, 195, 204, 207, 216, 227, 230, 299, 306, 308, 314], "update_kwarg": [74, 75], "agent_nam": 76, "ca": 76, "environment4": 76, "marlgroupmaptyp": [76, 91, 92, 297], "get_group_map": 76, "googl": [77, 78, 305, 306, 309], "ant": [77, 78, 311], "get_environ": 78, "87": [78, 303, 304, 306, 310, 311, 312], "acrobot": [78, 315], "fetch": [78, 113, 311, 312, 315], "dm_control": [79, 80, 303, 308, 315], "task_nam": 79, "cheetah": [79, 80, 303, 315], "mo": [83, 84], "minecart": [83, 84], "mo_gym": 84, "sumbodul": 85, "wish": [86, 312], "placehold": [87, 134], "secur": 87, "snake": [88, 89], "6x6": [88, 89], "td1": [89, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 303], "12x12": 89, "tsp50": 89, "tsp100": 89, "106": [90, 310], "pettingzoo": [91, 92], "pet": [91, 92], "zoo": [91, 92], "guid": [91, 92, 129, 298, 303, 309], "__": [91, 92], "aecenv": [91, 92], "use_mask": [91, 92], "dead": [91, 92], "compulsori": [91, 92], "unavail": [91, 92], "action_mask": [91, 92, 96], "adversary_0": [91, 92], "adversari": [91, 92], "vectoris": [91, 92], "multiwalker_v9": 91, "return_st": [91, 92], "categorical_act": [91, 92], "enviorn": [91, 92, 309], "n_piston": [91, 92], "21": [91, 92, 303, 304, 305, 308, 309, 310, 311], "pistonball_v6": [91, 92], "piston": [91, 92], "piston_0": [91, 92], "piston_1": [91, 92], "piston_20": [91, 92], "aec": [91, 92], "tictactoe_v3": [91, 92], "player": [91, 92], "player_1": [91, 92], "player_2": [91, 92], "butterfli": 92, "parallel_env": [92, 303, 314, 315], "scenario": [93, 94, 303, 309, 310], "flock": [93, 94], "continuous_act": [93, 94, 309], "cohesion_rew": 93, "collision_rew": 93, "separation_rew": 93, "velocity_rew": 93, "18": [93, 94, 170, 304, 305, 309, 310, 313, 314, 315], "agent_collision_rew": 94, "agent_distance_rew": 94, "model_bas": [95, 149, 167], "mask_kei": [96, 119], "adapt": [96, 227, 303, 310], "masker": 96, "binarydiscretetensorspec": [96, 218, 220, 241, 297], "maskedenv": 96, "ones_lik": 96, "scatter": 96, "unsqueez": [96, 98, 99, 132, 135, 164, 303, 306, 309, 310], "_set_se": [96, 103, 106, 310], "tranform": [96, 102, 107, 112, 126, 128, 129, 133, 137], "transform_reward_spec": [97, 101, 102, 103, 104, 113, 120, 123, 124, 133, 135], "as_invers": 98, "account": [98, 168, 169, 299, 304, 306, 312], "movement": 98, "veloc": [98, 309, 310, 315], "propos": [98, 166, 225, 234, 288, 299, 306, 312], "pdf": [98, 151, 152, 153, 154, 155, 159, 177, 197, 200, 221, 231, 234, 243, 248, 256, 288], "1312": [98, 304], "5602": 98, "uesd": 98, "unsqueezetransform": [98, 310, 312], "consumpt": 98, "followin": 98, "pictur": 98, "cartpol": [98, 304, 306, 312, 315], "pixels_trsf": [98, 312], "grayscal": [98, 304, 306, 312, 315], "tensordictreplaybuff": [98, 276, 291, 297, 303, 304, 306, 312], "data_exclud": [98, 312], "_buffer": [98, 131], "transform_observation_spec": [98, 99, 100, 101, 102, 103, 104, 107, 109, 111, 112, 113, 115, 120, 121, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 310], "del_kei": [99, 136, 308, 310], "unsqueeze_if_oor": 99, "observation_posit": 99, "observation_veloc": 99, "delet": 99, "key1": [99, 270, 278], "key2": [99, 270, 278], "crop": [100, 119, 262], "center": [100, 262], "width": [100, 121], "height": [100, 121], "squar": [100, 162, 185, 186, 262], "out_keys_inv": [101, 115, 116, 120, 133, 310], "scalar": [101, 123, 153, 155, 171, 172, 194, 198, 200, 211, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 241, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 299, 304, 310], "permit": [101, 109, 135], "rewardsc": [102, 134, 303, 304, 306], "rewardclip": 102, "transformed_env": [102, 133, 134], "transform_env_devic": [102, 104, 133], "transform_input_spec": [102, 103, 104, 105, 115, 120, 125, 128, 133, 135], "transform_output_spec": [102, 104, 113, 120, 133], "untouch": [102, 104, 113, 120, 133], "transformfull_done_spec": [102, 104, 113, 120, 133], "dtype_in": 103, "dtype_out": 103, "scan": [103, 106, 206, 207], "expos": [103, 106, 206, 304], "not_transform": [103, 106], "rule": [103, 106, 205, 299, 305], "constructedw": [103, 106], "myenv": [103, 106], "orig_devic": 104, "unspecifi": 104, "transform_done_spec": [104, 133], "num_actions_effect": 105, "max_act": 105, "include_forward": 105, "dimension": [105, 163, 243, 248, 256, 309], "num_act": [105, 220], "action_out": 105, "_call": [105, 109, 310], "excluded_kei": 107, "finit": [108, 312], "first_dim": 109, "last_dim": 109, "allow_positive_dim": [109, 135], "flatten": [109, 276, 306, 309], "th": [109, 135, 310], "frameskip": 109, "repeatedli": [110, 305, 309], "init_kei": 112, "is_init": [112, 163, 200, 306], "tracker": 112, "probabilistictensordictmodul": [113, 205, 206, 314], "coef": 113, "pi_curr": 113, "pi_0": 113, "constrain": [113, 163, 230], "overfit": 113, "fine": [113, 311], "probabilist": [113, 201, 297, 305, 314], "get_dist": [113, 205, 206], "mod": [113, 163, 208, 306], "normalparamextractor": [113, 299, 305, 309], "probabilisticactor": [113, 191, 192, 193, 195, 214, 215, 219, 220, 226, 229, 230, 231, 232, 233, 235, 299, 303, 305, 309], "tanhnorm": [113, 191, 192, 193, 201, 207, 214, 215, 226, 230, 231, 232, 233, 235, 297, 305, 309, 314], "n_ob": [113, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235], "n_act": [113, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235], "distribution_class": [113, 191, 192, 193, 195, 201, 205, 207, 214, 215, 220, 226, 230, 231, 232, 233, 299, 303, 305, 309, 314], "return_log_prob": [113, 191, 192, 193, 201, 205, 207, 232, 299, 305, 309, 314], "apply_": 113, "copy_": [113, 303], "formulat": 113, "diverg": [113, 163, 201, 205, 223, 227], "noop": [114, 314], "30": [114, 180, 181, 303, 304, 305, 309, 310, 312], "trial": 114, "op": [114, 194, 198, 281], "randomli": [114, 115, 130, 198, 201, 205, 309, 310, 312], "noop_max": 114, "standard_norm": [115, 124, 303, 304, 306], "affin": [115, 124], "layer": [115, 139, 150, 152, 153, 160, 163, 165, 170, 171, 172, 174, 175, 182, 183, 189, 199, 208, 299, 304, 305, 306, 311], "normal": [115, 139, 150, 162, 165, 168, 169, 173, 185, 186, 194, 201, 205, 216, 227, 230, 275, 277, 295, 299, 301, 306, 309, 315], "set_default_tensor_typ": 115, "doubletensor": 115, "isclos": 115, "next_ob": [115, 243, 244, 245, 246, 314], "rubric": [115, 207], "init_stat": [115, 303, 304, 305, 306], "3752e": 115, "01": [115, 200, 211, 216, 227, 230, 303, 304, 306, 309, 310, 311, 313], "5087e": 115, "03": [115, 303, 304, 310, 311, 313], "9294e": 115, "9636": 115, "5608": 115, "6408": 115, "num_it": [115, 304, 305], "reduce_dim": [115, 303, 304, 305, 306], "cat_dim": [115, 303, 304, 305, 306], "keep_dim": [115, 304, 306], "constant": [115, 129, 301, 303, 305, 306, 315], "statist": [115, 139, 232, 295, 303, 304, 305, 315], "approach": [115, 303, 305, 315], "gaussian": [115, 130, 149, 167, 171, 172, 177, 194, 305], "empir": [115, 149, 167, 201, 205, 303, 305, 309], "3d": 115, "third": [115, 197, 309], "r3m": [118, 311], "resnet": [118, 136, 138], "visual": [118, 136, 138, 305, 310], "embed": [118, 136, 137, 138, 178, 190, 191, 192, 193, 204, 209, 311], "ego4d": [118, 136, 138], "univers": [118, 136, 138], "suraj": [118, 136], "nair": [118, 136], "aravind": [118, 136], "rajeswaran": [118, 136], "vikash": [118, 136, 138], "kumar": [118, 136, 138], "chelsea": [118, 136], "finn": [118, 136], "abhinav": [118, 136], "gupta": [118, 136], "2203": [118, 136, 167, 311], "12601": [118, 136, 311], "_init": [118, 136, 303], "snippet": [118, 136, 303], "resnet50": [118, 138, 311], "model_nam": [118, 136, 138, 265], "resnet34": 118, "resnet18": 118, "r3m_vec": [118, 311], "feed": [118, 138, 228, 299, 303, 309, 312], "244": [118, 138, 310], "stack_imag": [118, 138], "tread": [118, 138], "separet": [118, 138], "hub": [118, 138, 311], "resnet50_weight": [118, 138], "imagenet1k_v1": [118, 138], "download_path": [118, 138], "tensor_pixels_kei": [118, 138], "dest": [118, 136, 138, 204], "sub_seq_len": 119, "sample_dim": [119, 303], "primarili": 119, "hesit": 119, "request": 119, "robust": 119, "mix": [119, 178, 187, 241, 303, 309], "NOT": 119, "improp": 119, "create_copi": 120, "renam": [120, 122, 148, 303], "stuff": 120, "braxenv": [120, 297], "newnam": 120, "interpol": [121, 304, 306], "bilinear": [121, 306], "r2g": 122, "99": [122, 139, 167, 224, 237, 242, 249, 291, 303, 304, 305, 310, 314], "reward_to_go": 122, "bernoulli_": 122, "9010": 122, "9404": [122, 249], "9701": [122, 249], "9900": [122, 249], "0000": [122, 198, 208, 249, 305, 306, 310, 314], "crash": 122, "clamp_min": 123, "clamp_max": 123, "clip_min": 123, "clip_max": 123, "episode_": 125, "reward1": 125, "reward2": 125, "ho": 125, "excludetransform": [126, 312], "squeeze_dim": 127, "step_count_kei": 128, "recognis": 128, "target_return": 129, "accordingli": [129, 202, 306], "conjunct": [129, 304], "hindsight": 129, "relabel": 129, "reward2gotransform": 129, "primer": [130, 306], "default_valu": [130, 306], "unit": [130, 149, 160, 174, 175, 180, 181, 305], "transfomedenv": 130, "mykei": 130, "__unless": 130, "exists__": 130, "dtype_or_devic": 130, "pool": 131, "from_int": 132, "255": [132, 310, 312], "ri": 132, "principl": 133, "cattransform": 133, "notabl": 133, "rewardsum": [133, 309], "cache_spec": 134, "anymor": [134, 204], "set_missing_toler": 134, "keyerror": 134, "unsqueeze_dim": [135, 310], "danger": 135, "vc1": 136, "vc1_vec": 136, "small": [136, 303, 305, 309, 315], "untrain": 136, "make_noload_model": 136, "naiv": 136, "vip": [137, 138, 311], "toward": 138, "implicit": [138, 226, 312], "jason": 138, "ma": 138, "shagun": 138, "sodhani": 138, "dinesh": 138, "jayaraman": 138, "osbert": 138, "bastani": 138, "ami": 138, "zhang": 138, "vip_vec": 138, "shared_td": 139, "decai": [139, 194, 198, 234, 277, 303, 304, 306, 315], "9999": [139, 310], "0001": [139, 160, 173, 305, 306, 310], "fly": [139, 227, 300, 305, 310, 312, 315], "to_observation_norm": 139, "underflow": [139, 277], "build_td_for_shared_vecnorm": 139, "memmori": 139, "memmap_": 139, "queue": [139, 312], "td_share": 139, "v": [139, 191, 226, 233, 299, 303, 304], "state_dim": [140, 151, 156, 177, 180, 181, 195], "action_dim": [140, 151, 152, 154, 156, 177, 195, 303, 308], "gsde": [140, 231, 295], "func": 140, "gsdemodul": 140, "check_dtyp": 141, "short": [141, 304, 305, 309], "discrep": [141, 214, 216, 217, 218, 227, 230, 232, 241], "imposs": 141, "probabilistictdmodul": [146, 147, 165, 201, 205, 242, 275], "next_tensordict": 148, "keep_oth": [148, 310], "exclude_reward": 148, "exclude_don": 148, "exclude_act": 148, "next_": 148, "funtion": [148, 310], "cross": 149, "entropi": [149, 214, 215, 216, 220, 226, 227, 229, 230, 231, 233, 235, 309], "botev": 149, "et": 149, "al": [149, 315], "2013": 149, "cem": 149, "plan": [149, 166, 167], "varianc": [149, 162, 173, 185, 186, 300, 303, 305, 309], "rank": 149, "k": 149, "repeat": [149, 305, 309, 310], "maximis": [149, 152, 154, 167, 299, 303, 304, 305, 309, 310], "horizon": [149, 167, 305], "modelbasedenv": [149, 167], "planning_horizon": [149, 167], "optim_step": [149, 167, 304], "mpc": [149, 166, 167], "num_candid": [149, 167], "candid": [149, 167], "top_k": [149, 167], "modelbasedenvbas": [149, 166, 167, 297], "safemodul": [149, 166, 191, 193, 205, 214, 215, 220, 226, 230, 231, 232, 233, 235, 284, 285, 291, 297, 314], "next_hidden_observ": 149, "num_cel": [150, 152, 153, 154, 155, 160, 161, 163, 165, 170, 191, 304, 305, 306, 309, 314], "elu": [150, 152, 153, 154, 155, 160, 161, 304, 314], "activation_kwarg": [150, 165], "norm_class": [150, 152, 153, 165], "norm_kwarg": [150, 165], "bias_last_lay": [150, 152, 153, 154, 155, 161, 165], "aggregator_class": [150, 152, 153, 304, 306, 314], "squashdim": [150, 152, 314], "aggregator_kwarg": [150, 152, 153, 304, 306], "squeeze_output": [150, 152, 153, 304, 306], "convolut": [150, 152, 153, 182], "produc": [150, 165, 170, 176, 191, 193, 195, 262, 305, 306, 312, 315], "cell": [150, 165, 170, 305], "kernel": [150, 161, 164], "cnet": 150, "34": [150, 165, 304, 305, 310, 313], "35": [150, 165, 303, 304, 310, 311], "rectangular": 150, "transformer_config": [151, 177, 195], "decisiontransform": [151, 177], "dtconfig": [151, 156, 177], "2202": [151, 156, 177, 229], "05607": [151, 156, 177, 229], "return_to_go": [151, 156, 177, 195], "conv_net_kwarg": [152, 153], "mlp_net_kwarg": [152, 153, 154], "use_avg_pool": [152, 153], "WITH": [152, 153, 154, 155, 200, 234], "1509": [152, 153, 154, 155, 167, 200, 225, 234, 310], "02971": [152, 153, 154, 155, 200, 234], "convnet": [152, 306, 314], "ndims_in": 152, "avgpool": [152, 153], "adaptiveavgpool2d": [153, 304, 306], "400": [154, 155, 309, 310, 312], "mlp_net_kwargs_net1": 155, "mlp_net_kwargs_net2": 155, "decion": 156, "desdescrib": 156, "n_embd": 156, "n_layer": 156, "n_head": 156, "n_inner": 156, "n_posit": 156, "resid_pdrop": 156, "attn_pdrop": 156, "gpt2config": 156, "atol": [157, 184], "06": [157, 184, 303, 304, 305, 309, 310], "rtol": [157, 184], "batch_shap": [157, 184], "event_shap": [157, 184], "absolut": [157, 184, 303], "densiti": [157, 168, 169, 176, 186], "mass": [157, 168, 169, 176, 186, 310], "rsampl": [157, 169, 176, 205], "sample_shap": [157, 168, 169, 176], "dqnet": 158, "atom": 158, "softmax": [158, 169, 176, 196, 197], "action_spac": [159, 179, 196, 197, 202, 203, 214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 306], "var_num": [159, 179, 196, 197, 203], "action_value_kei": [159, 179, 196, 197, 202, 203, 228, 241], "action_mask_kei": [159, 179, 196, 197, 198, 202, 203], "perspect": [159, 197, 221, 305], "1707": [159, 197, 221, 230], "06887": [159, 197, 221], "mult": [159, 170, 179, 196, 197, 202, 203], "functional_modul": [159, 179, 202, 204, 207, 299], "make_funct": [159, 179, 201, 202, 204, 207, 209, 228, 299, 314], "tensordict_modul": [159, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 217, 220, 226, 230, 231, 232, 233, 235, 299], "nbin": [159, 196, 299], "customdistributionalqv": 159, "log_softmax": [159, 196], "one_hot": [159, 169, 179], "qvalue_actor": [159, 179, 196, 202, 299], "std_bia": 160, "std_min_val": 160, "belief": [160, 174, 180, 181], "1912": [160, 222, 223, 224], "01603": [160, 222, 223, 224], "softplu": [160, 173, 211, 212, 213], "out_features_valu": 161, "cnn_kwarg": [161, 304], "mlp_kwarg": [161, 164, 304], "duel": 161, "cnn": [161, 304, 314], "06581": 161, "512": [161, 304, 310, 312], "upscal": [162, 185, 186], "tanh_loc": [162, 185, 186], "event_dim": [162, 184, 185], "ultim": [162, 185, 186], "poor": [162, 185, 186], "explos": [162, 185, 186], "switch": [162, 186], "sigma": [162, 177, 185, 186, 194, 200, 305], "formula": [162, 185, 186, 214, 216, 227, 230, 300, 305], "embedd": [163, 164], "lstmcell": 163, "correspont": 163, "input_s": [163, 164, 306], "hidden_s": [163, 164, 306], "num_lay": [163, 174, 175], "b_ih": 163, "b_hh": 163, "introduc": [163, 200, 303], "proj_siz": 163, "recurrent_state_h": [163, 306], "recurrent_state_c": [163, 306], "triplet": [163, 202, 203], "custom_kei": 163, "temporal_mod": 163, "set_temporal_mod": 163, "tensordictsequenti": [163, 196, 198, 206, 299, 303, 306, 308, 311, 314], "seq": [163, 306, 308], "lstm_modul": 163, "rs_h": 163, "rs_c": 163, "set_recurrent_mod": [163, 306], "batch_first": [163, 306], "hidden0": 163, "hidden1": 163, "policy_infer": 163, "policy_train": 163, "traj_td": 163, "td_inf": 163, "assert_clos": 163, "lstm_kwarg": 164, "next_observ": [164, 214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 308], "time_step": 164, "2d": [164, 309], "hidden0_in": 164, "hidden1_in": 164, "hidden0_out": 164, "hidden1_out": 164, "single_bias_last_lay": 165, "layer_class": 165, "layer_kwarg": 165, "perceptron": 165, "seamless": 165, "lazylinear": [165, 299, 305, 310, 311, 314], "42": [165, 214, 215, 217, 226, 233, 304, 310], "noisylinear": [165, 171, 297, 304], "noisylazylinear": [165, 297], "At": [166, 198, 304, 305, 306, 308, 310, 311], "mpcplanner": 166, "tensordict_out": [166, 315], "mppi": 167, "covari": 167, "william": [167, 232], "aldrich": 167, "theodor": 167, "01149": 167, "hansen": 167, "wang": 167, "su": 167, "04955": 167, "valueoper": [167, 191, 192, 193, 214, 215, 216, 217, 220, 226, 227, 230, 231, 232, 233, 235, 291, 299, 303, 305], "tdlambdaestim": [167, 297, 303], "value_net": [167, 218, 232, 243, 244, 245, 246, 305], "adv": 167, "lmbda": [167, 237, 243, 246, 248, 254, 255, 256, 259, 260, 300, 303, 305, 309], "95": [167, 237, 304, 305, 306, 310], "value_network": [167, 217, 218, 221, 226, 233, 243, 244, 245, 246, 300, 303, 305], "temperatur": [167, 215, 226], "neg_inf": [168, 169], "inf": [168, 169], "padding_valu": [168, 169], "www": [168, 169], "api_doc": [168, 169], "tf_agent": [168, 169], "event": [168, 169, 176, 252, 253, 254, 255, 257, 258, 259, 260, 312], "unnorm": [168, 169, 176], "sparse_mask": [168, 169], "dens": [168, 169], "0831": [168, 169], "1203": [168, 169], "0928": [168, 169], "1972": [168, 169], "grad_method": [169, 176], "reparamgradientstrategi": [169, 176], "passthrough": [169, 176], "maskedcategor": [169, 297], "proxi": [169, 176, 300], "relaxedonehot": [169, 176], "zeros_lik": [169, 310], "sample_non_valid": 169, "n_agent_input": [170, 309], "n_agent_output": [170, 309], "centralis": [170, 309], "share_param": [170, 309], "homogen": [170, 309], "toech": 170, "agent_network": 170, "modulelist": [170, 288, 314], "centalis": 170, "shown": [170, 299, 308, 309, 312], "std_init": [171, 172], "matrix": [171, 172], "initialize_paramet": 171, "isol": 171, "1706": [172, 187], "10295v3": 172, "induc": 172, "aid": 172, "scale_map": 173, "biased_softplus_1": 173, "scale_lb": [173, 180, 181], "exp": [173, 213], "module_norm": 173, "channel": [174, 175, 304], "decod": 174, "1803": [174, 175, 178], "10122": [174, 175], "rnn_hidden": 174, "latent": 175, "excacli": 176, "inres": 177, "mu": [177, 200, 305], "state_shap": [178, 241], "mixing_embed_dim": [178, 241], "qmix": [178, 309], "mixer": [178, 187, 241], "monoton": 178, "hyper": 178, "11485": 178, "qmixerloss": [178, 187], "qmix_vdn": [178, 187], "eventu": [178, 306, 310], "vdn": [178, 187], "greedi": [179, 197, 198, 203, 304, 306], "hidden_dim": [180, 181], "posterior": [180, 223], "rssm": [180, 181, 223], "1811": [180, 181], "04551": [180, 181], "obs_embed": 180, "rnn_hidden_dim": 181, "dream": 181, "tanhtransform": 185, "decomposit": 187, "05296": 187, "vmap": [188, 204, 207, 314], "hide": [188, 305, 309], "satisfi": [188, 299], "tensordictmodulebas": [188, 196, 202, 306], "vmap_dim": 188, "lam": 188, "sample_in": 188, "sample_in_td": 188, "vm": 188, "translat": [190, 201], "character": [190, 196, 201, 202, 204, 312], "overflow": [190, 196, 197, 201, 202, 203, 204, 205], "td_modul": [190, 191, 192, 193, 201, 204, 205, 207, 209, 314], "3635": 190, "0340": 190, "1476": 190, "3911": [190, 310], "1664": [190, 304, 310], "5455": 190, "2247": 190, "4583": 190, "2916": 190, "2160": 190, "5337": 190, "5193": 190, "grad_fn": [190, 198, 314], "addmmbackward0": 190, "actorvalueoper": [191, 299], "get_policy_oper": [191, 192, 193, 216, 227, 230, 299], "standalon": [191, 192, 193], "tdmodul": [191, 192, 193, 291], "get_critic_oper": 191, "common_oper": [191, 193], "policy_oper": [191, 192, 193], "value_oper": [191, 192, 193], "normalparamwrapp": [191, 192, 193, 201, 207, 214, 215, 220, 226, 230, 231, 232, 233, 235, 297, 314], "module_hidden": [191, 193], "td_module_hidden": [191, 193], "module_act": [191, 193], "td_module_act": [191, 192, 193], "module_valu": [191, 192, 193], "td_module_valu": [191, 192, 193], "state_action_valu": [191, 209, 215, 233, 242, 288, 291, 299, 303, 314], "td_clone": [191, 192, 193], "tensordictmodulewrapp": [191, 284, 285, 291], "get_policy_head": [191, 192, 193], "safesequenti": [191, 192, 193, 241], "head": [191, 193, 216, 227, 230], "get_value_head": [191, 192, 193], "get_value_oper": [191, 192, 193, 216, 227, 230], "action_modul": 192, "state_valu": [192, 193, 209, 216, 227, 230, 231, 233, 243, 244, 245, 246, 248, 250, 252, 254, 256, 257, 259, 299, 303, 305, 309], "qualiti": [193, 299], "actorcriticoper": [193, 216, 227, 230, 299], "embeddig": 193, "refet": 193, "actorcriticwrapp": [193, 299, 303], "po": 194, "sigma_init": 194, "epsilon": [194, 198, 200, 234, 277, 304, 305, 306], "sigma_end": 194, "annealing_num_step": [194, 198, 200, 303, 304, 306], "captur": [194, 198, 200], "omiss": [194, 198, 200], "warn": [194, 198, 200, 304, 315], "ommit": [194, 198, 200, 312], "inferec": 195, "set_tensor_kei": 195, "dt_inference_wrapp": 195, "baz": 195, "inference_context": 195, "obs_dim": 195, "15": [195, 200, 222, 303, 304, 305, 310, 312, 314], "tanhdelta": [195, 297, 303], "dtactor": 195, "actor_modul": [195, 314], "dist_class": 195, "dist_kwarg": 195, "distribution_kwarg": [195, 201, 205, 305, 309], "inference_actor": 195, "sequence_length": 195, "mask_context": 195, "qvaluemodul": [196, 202, 241, 306], "distributionaldqnnet": 196, "make_log_softmax": 196, "my_action_valu": [197, 203], "chanc": 197, "thid": 197, "threshold": [198, 215, 216, 305], "eps_init": [198, 200, 304, 306], "eps_end": [198, 200, 304], "explorative_polici": [198, 200], "9055": [198, 310], "9277": 198, "6295": 198, "2532": 198, "addbackward0": 198, "lmheadmodel": 199, "extract": [199, 303, 305], "actor_head": [199, 216, 227, 230], "base_model": 199, "lm_head": 199, "ornstein": 200, "uhlenbeck": 200, "ou": [200, 303], "correl": 200, "sort": 200, "noise_t": 200, "noise_": 200, "theta": [200, 305, 310], "sigma_t": 200, "sqrt": 200, "sigma_": 200, "anneal": 200, "ou_prev_nois": 200, "ou_step": 200, "increas": [200, 309], "x0": 200, "sigma_min": 200, "n_steps_ann": 200, "is_init_kei": 200, "_ou_prev_nois": 200, "_ou_step": 200, "default_interaction_typ": [201, 205], "interaction_typ": [201, 205], "set_interaction_typ": [201, 205], "cache_dist": [201, 205], "n_empirical_estim": [201, 205], "chose": 203, "functionalmodul": 204, "functionalmodulewithbuff": 204, "grucel": 204, "td_fmodul": 204, "td_function": 204, "td_state": 204, "ensembl": [204, 231], "params_repeat": 204, "td_vmap": [204, 207], "random_sampl": [204, 205], "suppli": 205, "fist": 205, "log_prob_kei": [205, 309], "probabilistictensordictsequenti": [206, 214, 216, 227, 230, 232, 284, 285, 314], "partial_toler": [206, 207, 308], "who": [206, 207], "AND": [206, 207], "tensordictsequenci": 207, "tensordictsequ": 207, "safeprobabilisticmodul": [207, 299], "spec1": 207, "net1": 207, "module1": 207, "td_module1": 207, "spec2": 207, "module2": 207, "td_module2": 207, "clamp": [208, 223, 279, 310], "boundari": [208, 305, 309], "resolut": 208, "simplest": [208, 303, 305, 306, 309, 312, 315], "9944": 208, "9991": 208, "3020": 208, "2299": [208, 310], "5418": 208, "2989": 208, "6849": 208, "3169": 208, "2690": 208, "9649": [208, 310], "5686": 208, "8602": 208, "0315": 208, "8455": [208, 310], "6027": 208, "4746": 208, "7843": 208, "7782": 208, "2111": 208, "5115": 208, "4687": 208, "5760": 208, "custommodul": 209, "cat": [209, 215, 217, 226, 231, 233, 235, 314], "imaginari": 210, "imagin": 210, "transition_model": 210, "get_reward_oper": 210, "get_transition_model_oper": 210, "min_val": [211, 213], "bias": [211, 300, 303], "_bia": 211, "invert": [212, 305], "surject": 213, "expln": 213, "biased_softplu": [213, 297], "beggin": 213, "biased_softplus_": 213, "syntax": [213, 303], "met": [213, 310], "1602": 214, "01783v2": 214, "entropy_bonu": [214, 216, 227, 230, 305], "favour": [214, 216, 227, 230], "samples_mc_entropi": [214, 216, 227, 229, 230], "mont": [214, 216, 227, 230, 303], "carlo": [214, 216, 227, 230, 303], "entropy_coef": [214, 216, 227, 230, 305, 309], "critic_coef": [214, 216, 227, 230, 305], "loss_critic_typ": [214, 216, 227, 230, 232, 305], "l1": [214, 216, 217, 218, 220, 227, 230, 231, 232, 235, 238, 241, 299, 303], "l2": [214, 216, 217, 218, 219, 220, 223, 224, 227, 230, 231, 232, 235, 238, 241, 303], "smooth_l1": [214, 215, 216, 217, 218, 220, 226, 227, 230, 231, 232, 233, 235, 238, 241, 305], "separate_loss": [214, 216, 217, 220, 226, 227, 230, 231, 232, 233, 235], "propag": [214, 216, 217, 220, 226, 227, 230, 231, 232, 233, 235, 243, 244, 245, 246, 305, 309], "advantage_kei": [214, 216, 227, 230, 232, 243, 244, 245, 246], "value_target_kei": [214, 216, 227, 230, 232, 243, 244, 245, 246, 305], "value_target": [214, 216, 227, 230, 232, 243, 244, 245, 246, 305, 309], "loss_crit": [214, 230, 305, 309], "loss_entropi": [214, 230, 305, 309], "loss_object": [214, 230, 305, 309], "recur": [214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235, 243, 244, 245, 246, 247], "next_reward": [214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235], "next_don": [214, 215, 217, 218, 220, 226, 230, 231, 232, 233, 235], "loss_obj": 214, "sacloss": [214, 225, 234, 297], "select_out_kei": [214, 215, 217, 220, 226, 230, 231, 233, 235], "throughout": [214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 305, 315], "essenti": [214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 304, 310, 312], "make_value_estim": [214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 236, 241, 300, 303, 304, 309], "value_typ": [214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 237, 241, 303], "valueestim": [214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 237, 241, 297, 300, 303, 309], "hyperparam": [214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 303, 310], "enum": [214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 237, 241, 303], "default_value_estim": [214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 303], "refin": [214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241], "default_value_kwarg": [214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 241, 297, 303], "dqnloss": [214, 215, 217, 220, 221, 222, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 241, 286, 297, 300, 304, 306], "dqn_loss": [214, 215, 217, 218, 220, 221, 222, 226, 228, 230, 231, 232, 233, 235, 236, 241], "conserv": 215, "2006": [215, 310], "04779": 215, "actor_network": [215, 217, 219, 220, 226, 229, 231, 233, 235, 303], "qvalue_network": [215, 220, 226, 231, 233, 235], "loss_funct": [215, 217, 218, 219, 220, 226, 231, 233, 235, 238, 241, 303], "alpha_init": [215, 220, 229, 231, 233], "min_alpha": [215, 220, 229, 231, 233], "max_alpha": [215, 220, 229, 231, 233], "fixed_alpha": [215, 220, 229, 231, 233], "target_entropi": [215, 220, 229, 231, 233], "prod": [215, 229, 233], "n_action": [215, 218, 229, 233], "delay_actor": [215, 217, 233, 235], "delay_qvalu": [215, 220, 231, 233, 235], "min_q_weight": 215, "max_q_backup": 215, "backup": 215, "deterministic_backup": 215, "num_random": 215, "with_lagrang": 215, "lagrang": 215, "lagrange_thresh": 215, "valueclass": [215, 217, 220, 226, 231, 233, 235], "qvalu": [215, 220, 226, 231, 233, 235, 288], "loss_actor": [215, 217, 220, 226, 231, 232, 233, 235, 274, 303, 314], "loss_alpha": [215, 220, 231, 233], "loss_alpha_prim": 215, "loss_qvalu": [215, 220, 226, 231, 233, 235], "clip_epsilon": [216, 305, 309], "normalize_advantag": [216, 227, 230, 309], "value_kei": [216, 227, 230, 243, 244, 245, 246, 303], "somemodul": [216, 227, 230], "someactor": [216, 227, 230], "value_head": [216, 227, 230], "somevalu": [216, 227, 230], "loss_modul": [216, 225, 227, 228, 230, 234, 279, 290, 291, 300, 301, 303, 304, 305, 309, 312], "ppoloss": [216, 227, 297], "delay_valu": [217, 218, 221, 232, 233, 241, 304, 306], "loss_valu": [217, 226, 232, 233, 303, 305, 309, 314], "pred_valu": [217, 235, 303, 314], "pred_value_max": [217, 303, 314], "target_valu": [217, 231, 235, 242, 300, 303, 314], "target_value_max": [217, 303, 314], "qvalueactor": [218, 241, 299, 304, 306], "mult_one_hot": [218, 220, 241], "loss_val": [218, 300, 303, 305, 306, 309, 312], "2106": 219, "01345": 219, "ste": 220, "num_qvalue_net": [220, 226, 231, 233, 235], "target_entropy_weight": 220, "onehotcategor": [220, 297], "disctount": 221, "distributionalqvalueactor": [221, 299], "input_tensordict": [221, 303], "actor_model": 222, "value_model": [222, 224], "model_based_env": 222, "dreamerenv": [222, 297], "imagination_horizon": 222, "unrol": [222, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260], "discount_loss": [222, 224], "lambda_kl": 223, "lambda_reco": 223, "lambda_reward": 223, "reco_loss": 223, "reward_loss": 223, "free_nat": 223, "nat": 223, "delayed_clamp": 223, "global_averag": 223, "value_loss": 224, "fake_data": 224, "ddpgloss": [225, 234, 291, 297, 303, 314], "td3loss": [225, 234, 297], "value_network_update_interv": 225, "contrast": [225, 312], "06461": 225, "2110": 226, "06169": 226, "expectil": 226, "tau": [226, 234, 303, 304], "antmaz": 226, "sticht": 226, "loss_value_diff": 226, "diff": 226, "old_polici": 227, "new_polici": 227, "old": [227, 315], "distanc": [227, 238, 242, 243, 309], "apart": [227, 309], "dtarg": 227, "samples_mc_kl": 227, "analyt": 227, "decrement": 227, "loss_": [228, 274, 300, 303], "equip": [228, 306], "gh": 228, "_acceptedkei": 228, "dataclass": [228, 288], "_forward_value_estimator_kei": 228, "alter": [228, 299], "value_estim": [228, 243, 244, 245, 246, 247, 300, 303, 309], "myloss": 228, "action2": 228, "convert_to_funct": [228, 303], "expand_dim": 228, "create_target_param": [228, 303], "compare_against": [228, 303], "funs_to_decor": 228, "stuctur": 228, "_param": 228, "expans": 228, "resampl": 228, "_target_param": 228, "valueestimatorbas": [228, 297], "blend": 228, "upcom": [228, 252, 253, 254, 255, 257, 258, 259, 260, 303], "proxim": [230, 305, 309], "optimis": [230, 275, 305, 309], "flavour": [230, 309, 314], "clipppoloss": [230, 297, 305, 309], "klpenppoloss": [230, 297], "regularis": 230, "06347": 230, "gae": [230, 297, 300, 303, 305, 309], "ppo_loss": 230, "tdlambda": [230, 237, 300, 303], "base_lay": 230, "randn_lik": 230, "samplelogprob": 230, "openreview": [231, 288], "ay8zfzm0tdd": [231, 288], "sub_sample_len": 231, "subsampl": [231, 270, 301], "action_log_prob_actor": 231, "state_action_value_actor": [231, 235], "connectionist": 232, "1992": 232, "doi": 232, "1007": 232, "bf00992696": 232, "actor_net": [232, 303, 305], "1801": 233, "01290": 233, "applic": [233, 241, 310], "1812": 233, "05905": 233, "redqloss": [234, 297], "math": 234, "theta_t": [234, 310], "theta_": [234, 310], "polyak": 234, "policy_nois": 235, "noise_clip": 235, "next_state_valu": [235, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 297], "td0": [236, 303], "v2": [238, 252, 253, 254, 255, 257, 258, 259, 260, 288], "strict_shap": 238, "view_a": 238, "qmixer": [241, 297], "local_valu": 241, "visibl": [241, 309], "dafault": 241, "acceptedkei": 241, "global_valu": 241, "penultim": 241, "local_value_network": 241, "mixer_network": 241, "suggest": [241, 309], "value_modul": [241, 305, 314], "qnet": [241, 303], "next_val_kei": 242, "pred_next_v": 242, "usus": 242, "mse": 242, "q_valu": 242, "n_steps_to_next": 242, "value_next_st": 242, "1506": [243, 248, 256], "02438": [243, 248, 256], "exponenti": [243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 277], "average_ga": [243, 305], "skip_exist": [243, 244, 245, 246], "advang": 243, "gradient_mod": 243, "value_error": [243, 244, 245, 246, 247], "sign": 243, "unused_arg": 243, "target_param": [243, 244, 245, 246, 247, 303, 309], "98": [243, 244, 245, 246, 303, 304, 310, 311], "94": [243, 246, 303, 304, 310], "unpack": [243, 244, 245, 246], "tensor_kei": [243, 244, 245, 246, 247], "next_valu": [243, 244, 245, 246, 247], "aka": [244, 304], "average_reward": [244, 245, 246], "tdestim": [244, 245, 247], "infti": 245, "valuefunctionbas": 247, "time_dim": [248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260], "old_stat": [248, 250, 252, 254, 256, 257, 259], "new_stat": [248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "rolling_gamma": [252, 253, 254, 255, 257, 258, 259, 260], "g1": [252, 253, 254, 255, 257, 258, 259, 260], "g2": [252, 253, 254, 255, 257, 258, 259, 260], "g3": [252, 253, 254, 255, 257, 258, 259, 260], "g4": [252, 253, 254, 255, 257, 258, 259, 260], "v3": [252, 253, 254, 255, 257, 258, 259, 260], "v4": [252, 253, 254, 255, 257, 258, 259, 260, 303, 305, 311], "out_file_bas": 261, "skip_reset": 261, "dump": 261, "interv": [261, 262, 271, 281, 304, 310], "center_crop": 262, "make_grid": 262, "Will": 262, "grid": 262, "exp_nam": [263, 264, 267, 268, 269, 291, 304], "log_dir": [263, 264, 266, 268, 304], "templat": 263, "csv": [264, 266, 304], "minim": [264, 312], "dependeci": 264, "experiment_nam": [265, 266], "uuid": [265, 304, 315], "date": 265, "logger_typ": 266, "logger_nam": 266, "tensorboard": [266, 268, 314], "wandb": [266, 269, 314], "mlflow": [266, 267], "wandb_kwarg": 266, "mlflow_kwarg": 266, "tracking_uri": 267, "uri": 267, "datastor": 267, "tb_log": 268, "tensoarboard": 268, "sub_traj_len": 270, "min_sub_traj_len": 270, "register_op": [270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 301, 304], "process_optim_batch": [270, 276, 277, 301], "td_out": [270, 278], "_process_optim_batch_hook": [270, 301], "batch_subsampl": 270, "clear_cuda": 271, "pre_optim_step": [271, 301], "counter": [272, 301], "log_pbar": [272, 273, 275, 277, 301, 304], "progress": [272, 273, 275, 279, 301, 304, 306, 315], "count_fram": 272, "pre_steps_log": [272, 273, 301], "count_frames_log": 272, "lognam": 273, "r_train": [273, 304], "log_reward": [273, 304], "loss_compon": 274, "appl": 274, "omit": [274, 305, 310, 312], "optimizer_hook": 274, "record_interv": [275, 303, 304], "record_fram": [275, 282, 303, 304], "policy_explor": [275, 291, 303, 304], "log_kei": [275, 304], "suffix": 275, "underestim": 275, "suppos": [275, 301, 315], "set_exploration_typ": [275, 297, 305, 306, 314], "r_evalu": [275, 303], "flatten_tensordict": [276, 304], "max_dim": 276, "rb_trainer": 276, "batch_process": [276, 277, 278, 301], "post_loss": [276, 301], "999": [277, 304], "jitter": 277, "finfo": 277, "default_dtyp": 277, "get_default_dtyp": 277, "reward_norm": 277, "update_reward_stat": 277, "normalize_reward": 277, "make_train": [278, 297], "_process_batch_hook": [278, 301], "select_kei": [278, 301], "versatil": 279, "lossmodul": [279, 290, 291, 297], "optim_steps_per_batch": [279, 301, 304], "epoch": [279, 305, 309], "clip_grad_norm": 279, "partial": [279, 306], "clip_norm": 279, "progress_bar": 279, "tqdm": [279, 303, 305, 306, 309, 310], "save_trainer_interv": 279, "disk": [279, 301, 303, 304, 306, 312], "log_interv": [279, 304], "save_trainer_fil": [279, 301], "datacollectorbas": [281, 284, 285, 291, 297], "update_weights_interv": [281, 304], "sit": [281, 304], "update_weight": 281, "post_step": [281, 301], "cfg": [282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295], "dictconfig": [282, 283, 284, 285, 288, 289, 290, 291, 292, 295], "divid": [282, 299, 303, 309, 310], "unknowingli": 282, "annealing_fram": [282, 303], "init_env_step": [282, 283, 303], "proof_environ": [283, 288, 303], "sta": 283, "ot": 283, "actor_model_explor": [284, 285, 303], "make_env_kwarg": [284, 285], "targetnetupdat": [286, 287, 290, 291], "redqloss_deprec": 287, "actor_net_kwarg": 288, "qvalue_net_kwarg": 288, "observation_kei": 288, "dummi": [288, 303, 315], "parser_env_arg": 288, "parser_model_args_continu": 288, "cattensor": [288, 303, 308, 310, 315], "hydra": 288, "config_stor": 288, "configstor": 288, "halfcheetah": [288, 303], "config_field": 288, "config_cl": 288, "redqmodelconfig": 288, "envconfig": 288, "make_dataclass": 288, "cls_name": 288, "cs": 288, "config_path": 288, "config_nam": 288, "17": [288, 303, 304, 305, 310, 311], "replayargsconfig": 289, "target_net_updat": [291, 303, 304], "constitu": 291, "learnt": [291, 303, 305], "tensorboardlogg": [291, 297], "egreedywrapp": [291, 304, 306], "env_proof": 291, "obs_spec": 291, "net_valu": 291, "dir": [291, 301, 304], "gettempdir": 291, "argpars": [292, 295], "namespac": [292, 295], "parser": [292, 295], "transformed_env_constructor": [292, 297], "num_env_per_collector": [293, 294], "video_tag": 295, "norm_obs_onli": 295, "use_env_cr": 295, "custom_env_mak": 295, "custom_env": 295, "return_transformed_env": 295, "action_dim_gsd": 295, "state_dim_gsd": 295, "obs_norm_state_dict": 295, "wheter": 295, "maker": 295, "asyncdatacollector": 297, "distributedsyncdatacollector": 297, "submitit_delayed_launch": 297, "raycollector": 297, "samplerwithoutreplac": [297, 305, 309, 312], "tensorstorag": 297, "tensordictroundrobinwrit": 297, "d4rlexperiencereplai": 297, "openmlexperiencereplai": 297, "unboundeddiscretetensorspec": [297, 305, 315], "lazystackedtensorspec": 297, "lazystackedcompositespec": 297, "prompttensordicttoken": 297, "rolloutfrommodel": 297, "tokenizeddatasetload": 297, "create_infinite_iter": 297, "consolidate_spec": 297, "check_no_exclusive_kei": 297, "contains_lazy_spec": 297, "check_marl_group": 297, "tensordictrecord": 297, "videorecord": [297, 305], "get_available_librari": 297, "set_exploration_mod": 297, "make_composite_from_td": [297, 310], "braxwrapp": 297, "dmcontrolenv": [297, 303, 308, 315], "dmcontrolwrapp": 297, "mogymenv": 297, "mogymwrapp": 297, "jumanjienv": 297, "jumanjiwrapp": 297, "openmlenv": 297, "pettingzooenv": 297, "pettingzoowrapp": 297, "vmaswrapp": 297, "qvaluehook": 297, "distributionalqvaluehook": 297, "reset_nois": 297, "cemplann": 297, "mpcplannerbas": 297, "mppiplann": 297, "independentnorm": 297, "truncatednorm": 297, "maskedonehotcategor": 297, "inv_softplu": 297, "vmapmodul": 297, "distributionaldqnloss": [297, 304], "discretesacloss": 297, "iqlloss": 297, "cqlloss": 297, "dtloss": 297, "onlinedtloss": 297, "a2closs": 297, "reinforceloss": 297, "dreameractorloss": 297, "dreamermodelloss": 297, "dreamervalueloss": 297, "td0estim": [297, 303], "td1estim": [297, 303], "td0_return_estim": 297, "td0_advantage_estim": 297, "td1_return_estim": 297, "vec_td1_return_estim": 297, "td1_advantage_estim": 297, "vec_td1_advantage_estim": 297, "td_lambda_return_estim": 297, "vec_td_lambda_return_estim": 297, "td_lambda_advantage_estim": 297, "vec_td_lambda_advantage_estim": 297, "generalized_advantage_estim": 297, "vec_generalized_advantage_estim": 297, "reward2go": 297, "distance_loss": [297, 303], "hold_out_net": 297, "hold_out_param": [297, 303], "softupd": [297, 303, 304, 306], "hardupd": [297, 303], "batchsubsampl": [297, 301], "clearcudacach": 297, "countframeslog": 297, "logreward": [297, 301, 304], "optimizerhook": [297, 304], "replaybuffertrain": [297, 301, 304], "rewardnorm": 297, "selectkei": [297, 301], "trainerhookbas": [297, 301, 304], "updateweight": [297, 301, 304], "make_collector_offpolici": 297, "make_collector_onpolici": 297, "make_dqn_loss": 297, "make_redq_loss": 297, "make_redq_model": 297, "make_replay_buff": [297, 303], "make_target_updat": 297, "parallel_env_constructor": [297, 303], "sync_async_collector": 297, "sync_sync_collector": 297, "correct_for_frame_skip": 297, "get_stats_random_rollout": 297, "csvlogger": [297, 304], "mlflowlogg": 297, "wandblogg": 297, "get_logg": 297, "generate_exp_nam": 297, "journei": 298, "textbook": 298, "highlight": 298, "ever": [298, 309], "bump": 298, "think": [298, 305, 309, 315], "benefit": [298, 309, 312], "pr": 298, "ground": [299, 303, 310], "categori": [299, 301], "recycl": [299, 312], "impos": 299, "violat": 299, "noisier": 299, "Their": [299, 309], "sd": 299, "prob_modul": 299, "pick": [299, 303, 304], "tabl": [299, 304], "customari": 299, "hopefulli": [299, 304], "mathbb": [299, 304], "rightarrow": [299, 304], "soften": 299, "backbon": [299, 306, 308, 314], "make_actor": 299, "make_valu": 299, "shared_param": 299, "make_common": 299, "reusabl": [300, 303, 312], "swappabl": [300, 303], "characterist": [300, 303, 310], "trainabl": [300, 303, 311], "whatev": [300, 303], "convent": [300, 303, 306, 309, 310], "smth": [300, 303], "metric": [300, 303], "nutshel": [300, 303], "barto": [300, 309], "chapter": 300, "significantli": [300, 303, 304, 309], "next_stat": 300, "value_net_loss": 300, "pow": [300, 303], "therebi": 300, "room": 300, "convers": 300, "signifi": [300, 309], "underperform": 300, "thin": 300, "intric": 300, "outer": [301, 303, 304, 315], "believ": 301, "scheme": [301, 315], "substenti": 301, "_pre_steps_log_hook": 301, "_pre_optim_hook": 301, "sub_batch": 301, "_post_loss_hook": 301, "_post_optim_hook": 301, "post_optim": [301, 304], "_post_optim_log": 301, "post_optim_log": 301, "_post_steps_hook": 301, "_post_steps_log_hook": 301, "post_steps_log": 301, "comment": [301, 304, 314], "extens": [301, 312], "reserv": 301, "logginghook": 301, "logging_hook": 301, "save_dict": 301, "some_valu": 301, "torchsnapshot": 301, "ckpt_backend": 301, "pt": [301, 311], "filepath": 301, "save_train": 301, "load_from_fil": 301, "perfectli": [301, 303, 310], "intern": 302, "author": [303, 304, 305, 306, 309, 310, 312], "vincent": [303, 304, 305, 306, 310, 312], "moen": [303, 304, 305, 306, 310, 312], "assembl": 303, "focus": 303, "straightforward": [303, 304, 312], "overview": [303, 305, 309, 314], "transpar": [303, 306], "understood": 303, "sota": [303, 304, 314], "illustr": [303, 304, 312], "device_count": [303, 304, 306, 311, 315], "loss_dict": 303, "modal": 303, "oblivi": [303, 305, 312], "elementari": 303, "didact": 303, "dilut": 303, "pessimist": [303, 304, 305], "target_actor_network_param": 303, "actor_in_kei": 303, "actor_crit": 303, "noth": [303, 305], "compromis": 303, "hp": 303, "hasattr": 303, "_value_estim": 303, "elif": [303, 304], "notimplementederror": 303, "unknown": 303, "_loss_actor": 303, "td_copi": 303, "actor_network_param": 303, "value_network_param": 303, "_loss_valu": 303, "pred_val": 303, "target_value_network_param": 303, "smooth": [303, 304], "loss_funt": 303, "glue": 303, "_forward": 303, "ndimens": 303, "remaind": 303, "focu": [303, 304, 305], "pixels_onli": [303, 304, 314, 315], "env_librari": 303, "env_task": 303, "env_arg": 303, "friendli": 303, "torchr": 303, "rescal": 303, "presum": 303, "leav": 303, "make_transformed_env": 303, "reward_sc": 303, "double_to_float_list": 303, "double_to_float_inv_list": 303, "marker": 303, "env_per_collector": 303, "transform_state_dict": 303, "make_t_env": 303, "adjust": [303, 309, 310], "seem": [303, 306], "cheat": 303, "10m": 303, "cautiou": 303, "deal": [303, 305, 309, 312], "magnitud": 303, "thousand": [303, 306], "get_env_stat": 303, "proof_env": 303, "5000": [303, 304, 305], "maxim": [303, 310], "recal": [303, 305], "ddpgmlpactor": 303, "ddpgmlpqnet": 303, "materi": 303, "ornsteinuhlenbeckprocesswrapp": 303, "make_ddpg_actor": 303, "q_net": 303, "moduless": 303, "sugges": 303, "1_000_000": [303, 306], "tight": 303, "10_000": [303, 305, 312], "traj_len": [303, 306], "make_record": 303, "recorder_obj": 303, "flavor": 303, "circular": 303, "buffer_s": [303, 304], "random_crop_len": 303, "prb": 303, "buffer_scratch_dir": 303, "temporari": 303, "dirrectori": 303, "trajecotri": 303, "25": [303, 304, 306, 309, 310, 312, 313], "sampel": 303, "dataflow": 303, "ceil_div": 303, "utd": [303, 306], "update_to_data": 303, "realiz": 303, "_must_": 303, "001": [303, 310], "outdat": 303, "trick": [303, 304], "despit": 303, "adam": [303, 304, 305, 306, 309, 310], "optimizer_actor": 303, "lr": [303, 304, 305, 306, 309, 310], "weight_decai": [303, 304], "optimizer_valu": 303, "total_collection_step": 303, "pretti": [303, 312], "rewards_ev": 303, "collected_fram": 303, "pbar": [303, 305, 306, 309, 310], "r0": 303, "numel": [303, 305, 306, 311, 312], "current_fram": 303, "sampled_tensordict": 303, "gn1": 303, "clip_grad_norm_": [303, 305, 309, 310], "gn2": 303, "gn": [303, 310], "td_record": 303, "rn": 303, "rs": 303, "set_descript": [303, 305, 306, 309, 310], "2f": 303, "00": [303, 304, 305, 306, 309, 310, 311, 313], "800": [303, 304], "2863": [303, 310], "87it": [303, 304, 310], "1600": [303, 304], "979": 303, "36it": [303, 304], "3200": [303, 304], "2090": 303, "94it": [303, 304], "40": [303, 304, 305, 306, 309, 310, 312], "4000": [303, 304, 305], "02": [303, 304, 305, 306, 310, 311, 313], "2401": 303, "96it": [303, 304, 305, 310], "48": [303, 304, 310, 311, 312, 313], "4800": [303, 304, 310], "2726": 303, "09it": [303, 304], "09": [303, 304, 310, 313], "05": [303, 304, 309, 310, 311], "307": [303, 310], "04": [303, 304, 305, 310, 311, 313], "67": [303, 304, 308, 310, 311], "56": [303, 304, 306, 310, 313], "5600": 303, "6400": [303, 314], "1208": 303, "23it": [303, 305, 310], "176": [303, 310], "261": [303, 310], "41": [303, 304, 305, 306, 310, 312], "07": [303, 304, 309, 310], "72": [303, 304, 310, 311], "7200": 303, "615": [303, 310], "03it": 303, "36": [303, 304, 309, 310], "117": [303, 310], "354": [303, 310], "97": [303, 304, 310], "80": [303, 304, 305, 309, 310, 311], "8000": [303, 305], "541": [303, 310], "21it": [303, 310], "84": [303, 304, 306, 310], "116": [303, 310], "168": [303, 310], "22": [303, 304, 306, 310], "88": [303, 304, 310, 311], "8800": 303, "494": [303, 310], "53it": [303, 304], "37": [303, 304, 310], "52": [303, 304, 310, 311, 312], "57": [303, 304, 306, 310, 311], "188": [303, 310], "63": [303, 304, 310, 311, 312], "96": [303, 304, 306, 310, 311], "9600": 303, "381": [303, 310], "84it": [303, 304, 310], "66": [303, 304, 306, 308, 310, 311, 313], "83": [303, 304, 310, 311, 312], "202": [303, 310], "82": [303, 304, 310], "62": [303, 304, 310, 311], "78": [303, 304, 310, 311], "19": [303, 304, 305, 306, 310, 311, 313], "10400it": 303, "285": [303, 310], "158": [303, 310], "91": [303, 304, 310], "75": [303, 304, 310, 311, 312], "plot": [303, 305, 306, 309, 310], "mention": [303, 306, 312, 315], "matplotlib": [303, 305, 306, 309, 310, 312, 315], "pyplot": [303, 305, 306, 309, 310, 312, 315], "plt": [303, 305, 306, 309, 310, 312, 315], "zip": [303, 307], "legend": 303, "xlabel": [303, 306, 309, 310], "ylabel": [303, 309], "tight_layout": 303, "concret": [303, 305], "takeawai": [303, 304], "minut": [303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "795": [303, 313], "mb": [303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315], "coding_ddpg": [303, 313], "jupyt": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315], "ipynb": [303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315], "galleri": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315], "sphinx": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315], "customis": [304, 309], "road": 304, "aspect": 304, "did": [304, 305, 312, 315], "highest": 304, "prerequisit": 304, "familiar": [304, 309, 315], "lookup": 304, "amort": [304, 305], "cart": 304, "pole": 304, "un": 304, "actuat": 304, "frictionless": 304, "upright": [304, 315], "duelingcnndqnet": 304, "is_notebook": 304, "shell": 304, "get_ipython": 304, "__class__": 304, "zmqinteractiveshel": 304, "qtconsol": 304, "terminalinteractiveshel": 304, "ipython": [304, 309, 310], "nameerror": 304, "interpret": 304, "umbrella": 304, "misplac": 304, "misus": 304, "orchestr": 304, "everyth": [304, 306], "five": [304, 305], "64x64": 304, "motion": [304, 310], "obs_norm_sd": 304, "simpler": 304, "get_norm_stat": 304, "test_env": 304, "make_model": 304, "dummy_env": 304, "output_s": [304, 306], "init_bia": 304, "actor_explor": 304, "eps_greedy_v": 304, "eps_greedy_val_env": 304, "get_replay_buff": 304, "n_optim": 304, "themselv": 304, "simplic": [304, 305, 311, 312], "get_collector": 304, "data_collector": 304, "bunch": 304, "concept": [304, 312], "power": 304, "ubiquit": 304, "get_loss_modul": 304, "target_updat": 304, "995": [304, 310], "sensit": 304, "variat": 304, "2e": [304, 310], "wd": 304, "upd": 304, "harder": [304, 314], "5_000": 304, "500000": 304, "100000": 304, "005": 304, "mandatori": [304, 305, 309, 310], "fairer": 304, "budget": [304, 305], "dqn_exp_": 304, "uuid1": [304, 315], "9895": 304, "0737": 304, "tmp": [304, 312], "tmpdow4tlbh": 304, "dqn_exp_39fece24": 304, "530a": 304, "11ee": [304, 315], "919b": [304, 315], "0242ac120002": [304, 315], "registr": 304, "cumbersom": 304, "buffer_hook": 304, "weight_updat": 304, "descript": [304, 305], "aliv": 304, "total_reward": 304, "56it": [304, 310], "4948": 304, "9259": 304, "88it": [304, 310], "4074": [304, 310], "3530": 304, "38it": [304, 305], "160": [304, 310, 315], "4045": 304, "192": [304, 310], "63it": [304, 310], "224": [304, 310], "28": [304, 306, 309, 310, 313], "13it": 304, "4404": 304, "48it": 304, "3771": 304, "288": [304, 310], "54": [304, 306, 309, 310, 311], "12it": 304, "320": [304, 310, 315], "45": [304, 306, 310, 311, 312, 313, 315], "16it": 304, "3923": 304, "352": [304, 310], "47": [304, 305, 306, 310], "27it": [304, 310], "4497": 304, "384": [304, 310, 312, 313], "25it": [304, 310], "416": [304, 310], "51it": [304, 305], "4314": 304, "448": [304, 310], "51": [304, 309, 310], "02it": 304, "3892": 304, "480": [304, 310, 311], "4134": 304, "53": [304, 305, 308, 310, 311, 313], "4526": 304, "544": [304, 310], "73it": [304, 305, 310], "576": [304, 310], "35it": [304, 305], "608": [304, 310], "57it": 304, "640": 304, "41it": [304, 310], "3501": 304, "672": 304, "704": 304, "40it": [304, 310], "4797": 304, "736": 304, "85it": [304, 310], "768": 304, "3893": 304, "832": 304, "19it": 304, "864": 304, "896": 304, "20it": 304, "4073": 304, "928": 304, "11it": 304, "960": 304, "65it": [304, 310], "992": [304, 310], "47it": 304, "4345": 304, "29it": [304, 310], "1056": 304, "91it": [304, 310], "4586": 304, "1088": 304, "74it": 304, "1120": 304, "14it": 304, "1152": 304, "93it": 304, "1184": 304, "69it": 304, "1216": 304, "31": [304, 309, 310, 311], "55it": [304, 310], "4375": [304, 310], "1248": 304, "33it": 304, "1280": 304, "49": [304, 310, 311], "34it": 304, "61it": 304, "1344": 304, "15it": [304, 306], "1376": 304, "44it": 304, "1408": 304, "1440": 304, "1472": 304, "64it": [304, 310], "1504": 304, "90it": [304, 310], "4676": 304, "1536": 304, "59": [304, 310, 311], "81it": [304, 310], "1568": 304, "55": [304, 310], "1632": 304, "39": [304, 309, 310, 311], "1696": 304, "1728": 304, "58": [304, 309, 310, 311], "70it": 304, "1760": 304, "1792": 304, "17it": 304, "1824": 304, "1856": 304, "43": [304, 309, 310], "67it": [304, 310], "1888": 304, "1920": 304, "78it": [304, 310], "1952": 304, "1984": 304, "92it": [304, 310], "2016": 304, "50it": 304, "2048": [304, 311], "2080": 304, "97it": [304, 306, 310], "2112": [304, 310], "32it": 304, "2144": 304, "2176": 304, "2208": 304, "2240": 304, "45it": 304, "2272": 304, "2304": 304, "83it": [304, 310], "2336": 304, "71it": [304, 310], "2368": 304, "79it": [304, 310], "2400": 304, "80it": [304, 310], "2432": 304, "95it": 304, "2464": 304, "00it": [304, 310], "2496": 304, "28it": 304, "2528": [304, 310], "2560": 304, "2592": 304, "07it": 304, "2624": 304, "2656": [304, 310], "2688": 304, "58it": 304, "2720": [304, 310], "43it": 304, "2752": 304, "22it": [304, 310], "2784": 304, "39it": 304, "2816": 304, "2848": 304, "2880": 304, "2912": 304, "2944": [304, 310], "77it": [304, 310], "60": [304, 305, 309, 310, 312, 314], "2976": [304, 310], "18it": [304, 306], "3008": 304, "08it": 304, "61": [304, 310, 311], "3040": 304, "3072": 304, "3104": 304, "3136": 304, "3168": 304, "65": [304, 310, 311, 312], "3232": [304, 310], "0909": 304, "3264": 304, "3296": 304, "3328": 304, "3360": 304, "68": [304, 310, 311], "3392": 304, "3424": 304, "01it": 304, "69": [304, 310], "3456": [304, 310], "70": [304, 305, 309, 310, 311], "3488": 304, "3520": 304, "71": [304, 310, 312], "3552": 304, "3584": 304, "3616": 304, "73": [304, 305, 310], "3648": 304, "74": [304, 310, 311], "3680": 304, "3712": 304, "3744": 304, "76": [304, 310, 311], "3776": 304, "37it": 304, "3808": 304, "77": [304, 310, 311, 312], "3840": 304, "3872": 304, "3904": 304, "79": [304, 310, 311], "3936": 304, "3968": 304, "4032": 304, "4064": 304, "4096": 304, "06it": 304, "4128": [304, 310], "62it": [304, 305], "4224": 304, "4160": 304, "30it": 304, "4192": 304, "54it": 304, "85": [304, 310], "4256": [304, 310], "86": [304, 310, 311], "4288": [304, 310], "52it": 304, "4320": 304, "4352": 304, "4384": 304, "4416": 304, "89": [304, 310, 311, 312], "4448": 304, "90": [304, 305, 309, 310], "4480": 304, "4512": 304, "4544": 304, "92": [304, 310, 311, 312], "4576": 304, "4608": 304, "76it": 304, "3350": 304, "93": [304, 310, 311], "4640": 304, "4672": [304, 310], "4704": 304, "3621": 304, "4736": 304, "4768": 304, "24it": [304, 310], "4832": 304, "3982": [304, 310], "4864": 304, "72it": [304, 310], "4896": 304, "4928": 304, "4960": 304, "4992": 304, "5024it": 304, "66it": [304, 310], "quickli": [304, 309, 315], "print_csv_files_in_fold": 304, "folder_path": 304, "csv_file": 304, "output_str": 304, "dirpath": 304, "walk": [304, 308, 315], "endswith": 304, "strip": 304, "grad_norm_0": 304, "qvaluenetwork": 304, "worst": 304, "accuraci": 304, "fanci": 304, "499": [304, 310, 313], "691": [304, 313], "coding_dqn": [304, 313], "demonstr": [305, 309, 310, 315], "talk": 305, "repetit": 305, "six": 305, "sophist": [305, 309], "invent": 305, "theta_k": 305, "frac": 305, "pi_": 305, "exceed": 305, "discourag": [305, 310], "indispens": 305, "analyz": 305, "lingua": 305, "franca": 305, "defaultdict": [305, 310], "has_cuda": [305, 309, 315], "3e": [305, 306, 309], "max_grad_norm": [305, 309], "big": [305, 312, 315], "ourselv": [305, 315], "benefici": 305, "errat": 305, "hamper": [305, 312], "reactiv": 305, "xy": 305, "sub_batch_s": 305, "num_epoch": [305, 309], "entropy_ep": [305, 309], "generalist": 305, "interchang": [305, 311, 312], "panel": 305, "charact": 305, "inverteddoublependulum": 305, "transmit": 305, "stai": 305, "thumb": 305, "supplementari": [305, 315], "told": 305, "stringent": [305, 309], "nevertheless": [305, 312], "confid": [305, 309], "pack": [305, 315], "ran": 305, "f_": 305, "mu_": 305, "difficulti": [305, 315], "brought": [305, 306], "d_ob": 305, "d_action": 305, "policy_modul": [305, 309], "That": 305, "said": 305, "briefli": [305, 309], "refil": [305, 309], "capac": 305, "conveni": [305, 309, 310], "easiest": [305, 309], "mathemat": [305, 309], "tradeoff": [305, 309], "advantage_modul": 305, "lr_schedul": [305, 310], "cosineannealinglr": [305, 310], "eval_str": 305, "tensordict_data": [305, 309], "data_view": [305, 309], "subdata": [305, 309], "cum_reward_str": 305, "4f": [305, 306, 310], "stepcount_str": 305, "param_group": 305, "lr_str": 305, "eval_rollout": 305, "nice": 305, "451": [305, 310], "5169": 305, "0877": 305, "0003": [305, 306, 310], "453": [305, 310], "1113": 305, "3000": 305, "456": [305, 310], "1565": 305, "459": [305, 310], "1960": 305, "0002": [305, 306, 310], "462": [305, 310], "2074": 305, "6000": 305, "452": [305, 310], "2204": [305, 315], "7000": 305, "457": [305, 310], "98it": [305, 310], "2425": 305, "461": [305, 310], "2479": 305, "9000": 305, "2522": 305, "463": [305, 310], "2649": [305, 310], "cap": [305, 312], "figsiz": [305, 310], "subplot": [305, 310, 315], "titl": [305, 306, 309, 310], "bit": [305, 306, 309, 312], "421": [305, 310, 313], "coding_ppo": [305, 313], "rnn": 306, "lstmmodul": 306, "84x84": 306, "accessori": 306, "stamp": 306, "tensordictprim": 306, "se": 306, "flank": 306, "assist": 306, "emb": 306, "n_cell": 306, "customiz": 306, "almost": 306, "bidirect": 306, "wouldn": 306, "make_tensordict_prim": 306, "interpolationmod": 306, "qval": 306, "stoch_polici": 306, "cudnn": 306, "opportun": 306, "coupl": [306, 310, 312], "uniniti": 306, "again": [306, 309, 311, 312, 315], "redund": 306, "strongli": 306, "million": 306, "sake": [306, 311, 312], "20_000": [306, 310], "longest": 306, "npai": 306, "recurrent_st": 306, "action_spread": 306, "1000000": 306, "150": [306, 310], "86it": [306, 310], "635": [306, 313], "2103": [306, 313], "dqn_with_rnn": [306, 313], "tutorials_python": 307, "tutorials_jupyt": 307, "distinct": 308, "humanoid": [308, 315], "env1_obs_kei": 308, "observation_stand": 308, "env2_obs_kei": 308, "observation_walk": 308, "tdreset1": 308, "tdreset2": 308, "tdreset": 308, "policy_common": 308, "policy_stand": 308, "policy_walk": 308, "But": 308, "exclusive_field": [308, 314], "stack_dim": [308, 314], "env1_mak": 308, "env2_mak": 308, "_single_task": 308, "td_rollout": 308, "582": [308, 310, 313], "multi_task": [308, 313], "matteo": 309, "bettini": 309, "maddpg": 309, "navig": 309, "lidar": 309, "sensor": 309, "collis": 309, "tie": 309, "mappo": 309, "ippo": 309, "phase": [309, 312], "mathbf": 309, "pi": [309, 310], "_t": [309, 310], "fed": [309, 312], "approxim": [309, 315], "decentralis": 309, "literatur": 309, "overcom": 309, "stationari": 309, "concurr": 309, "analys": 309, "gui": 309, "visualis": 309, "multiagentmlp": 309, "divic": 309, "vmas_devic": 309, "6_000": 309, "team": [309, 314], "n_iter": 309, "minibatch_s": 309, "generalis": 309, "furthermor": 309, "simd": 309, "parallelis": 309, "warp": 309, "todai": 309, "circl": 309, "surround": 309, "dot": [309, 310], "collid": 309, "drag": 309, "elast": 309, "acceler": 309, "penalis": 309, "num_vmas_env": 309, "scenario_nam": 309, "four": [309, 310], "environmnet": 309, "final_rew": 309, "agent_collis": 309, "stress": 309, "paramount": 309, "episode_reward": 309, "n_rollout_step": 309, "evolut": 309, "yourself": 309, "utilis": 309, "n_actions_per_ag": 309, "n_obs_per_ag": 309, "share_parameters_polici": 309, "policy_net": 309, "denot": 309, "unbatched_action_spec": 309, "carefulli": [309, 315], "grant": 309, "converg": 309, "cooper": 309, "share_parameters_crit": 309, "critic_net": 309, "fantast": 309, "minibatch": 309, "desc": 309, "episode_reward_mean": 309, "episode_reward_mean_list": 309, "critic_param": 309, "target_critic_param": 309, "refresh": 309, "3641679584980011": 309, "5052392482757568": 309, "0283849239349365": 309, "331086277961731": 309, "0674946308135986": 309, "245943784713745": 309, "611856698989868": 309, "8442416191101074": 309, "856468677520752": 309, "9219210147857666": 309, "xvfb": 309, "pyvirtualdisplai": 309, "1400": [309, 310], "900": 309, "pil": 309, "rendering_callback": 309, "fromarrai": 309, "rgb_arrai": [309, 310], "gif": 309, "save_al": 309, "append_imag": 309, "profici": 309, "master": 309, "434": [309, 310, 313], "multiagent_ppo": [309, 313], "freeli": 310, "touch": 310, "undertaken": 310, "broader": 310, "challeng": [310, 311], "wider": 310, "algebra": 310, "acquaint": 310, "avenu": 310, "_apply_to_composit": 310, "default_x": 310, "default_i": 310, "torqu": 310, "upward": 310, "angular": 310, "sin": 310, "rad": 310, "sec": 310, "gravit": 310, "angl": 310, "deleg": 310, "new_th": 310, "new_thdot": 310, "thdot": 310, "g_forc": 310, "max_torqu": 310, "angle_norm": 310, "max_spe": 310, "albeit": 310, "gen_param": 310, "high_th": 310, "high_thdot": 310, "low_th": 310, "low_thdot": 310, "rng": 310, "lazili": 310, "trivial": 310, "neither": 310, "shortcut": [310, 315], "irrelev": 310, "_make_spec": 310, "td_param": 310, "pseudo": 310, "render_mod": 310, "render_fp": 310, "random_": 310, "_make_step": 310, "staticmethod": 310, "complic": [310, 312, 315], "showcas": 310, "skeleton": 310, "_apply_transform": [310, 315], "_inv_apply_transform": [310, 315], "subset": [310, 311], "unitari": 310, "sine": 310, "cosin": 310, "sintransform": 310, "costransform": 310, "t_sin": 310, "t_co": 310, "cat_transform": 310, "mdp": 310, "convin": 310, "simple_rollout": 310, "_data": 310, "unexplor": 310, "assumpt": [310, 312], "recreat": 310, "init_td": 310, "traj_return": 310, "last_reward": 310, "is_ipython": 310, "inlin": 310, "get_backend": 310, "ion": 310, "gcf": 310, "clear_output": 310, "625": 310, "0488": 310, "0748": 310, "519": 310, "0499": 310, "4472": 310, "073": 310, "0685": 310, "0408": 310, "552": 310, "82it": 310, "5154": 310, "9086": 310, "527": 310, "9385": 310, "155": 310, "2568": 310, "4981": 310, "223": 310, "8929": 310, "4491": 310, "581": 310, "3233": 310, "0664": 310, "596": 310, "89it": 310, "1021": 310, "5263": 310, "9579": 310, "5807": 310, "8075": 310, "212": 310, "2009": 310, "5525": 310, "914": 310, "2894": 310, "0115": 310, "0977": 310, "1845": 310, "1830": 310, "4858": 310, "233": 310, "0297": 310, "464": 310, "4617": 310, "5997": 310, "904": 310, "1647": 310, "0777": 310, "901": 310, "4709": 310, "6813": 310, "8317": 310, "3221": 310, "5554": 310, "276": 310, "3353": 310, "701": 310, "8570": 310, "6656": 310, "7779": 310, "6911": 310, "875": 310, "0796": 310, "7082": 310, "308": 310, "0421": 310, "1496": 310, "5037": 310, "1755": 310, "5029": 310, "9454": 310, "665": 310, "9330": 310, "2118": 310, "444": 310, "0995": 310, "6294": 310, "3146": 310, "2909": 310, "9720": 310, "1298": 310, "9923": 310, "0345": 310, "3438": 310, "3688": 310, "424": [310, 311, 313], "6953": 310, "5233": 310, "411": 310, "8011": 310, "5329": 310, "2677": 310, "6969": 310, "7010": 310, "376": 310, "9352": 310, "7707": 310, "6178": 310, "5646": 310, "348": 310, "7304": 310, "9407": 310, "942": 310, "3882": 310, "7604": 310, "3507": 310, "8928": 310, "258": 310, "6978": 310, "4641": 310, "549": 310, "6047": 310, "5005": 310, "4136": 310, "2993": 310, "3222": 310, "4046": 310, "7314": 310, "275": 310, "6331": 310, "9318": 310, "961": 310, "8331": 310, "1604": 310, "4099": 310, "4761": 310, "125": [310, 312], "4262": 310, "6363": 310, "382": 310, "3593": 310, "7377": 310, "2847": 310, "3443": 310, "867": 310, "3592": 310, "4760": 310, "441": 310, "9950": 310, "8021": 310, "3528": 310, "1214": 310, "708": 310, "4023": 310, "3583": 310, "041": 310, "3801": 310, "0310": 310, "120": 310, "4244": 310, "2039": 310, "4850": 310, "8748": 310, "706": 310, "4897": 310, "9210": 310, "8964": 310, "0832": 310, "3934": 310, "8971": 310, "2933": 310, "3377": 310, "6996": 310, "2274": 310, "8916": 310, "098": 310, "2660": 310, "9110": 310, "4503": 310, "6956": 310, "9172": 310, "4026": 310, "946": 310, "9229": 310, "5205": 310, "294": 310, "8872": 310, "6637": 310, "019": 310, "9281": 310, "2082": 310, "724": 310, "8561": 310, "6574": 310, "357": 310, "4138": 310, "5230": 310, "385": 310, "4065": 310, "5642": 310, "921": 310, "9786": 310, "4129": 310, "5831": 310, "266": 310, "7723": 310, "4152": 310, "0898": 310, "389": 310, "5155": 310, "5376": 310, "5616": 310, "4094": 310, "283": 310, "5333": 310, "4803": 310, "895": 310, "6566": 310, "2588": 310, "662": 310, "4732": 310, "7503": 310, "068": 310, "0714": 310, "3370": 310, "059": 310, "8612": 310, "1915": 310, "3855": 310, "0349": 310, "9644": 310, "4538": 310, "445": 310, "0392": 310, "4080": 310, "1648": 310, "9599": 310, "143": 310, "4284": 310, "5946": 310, "2590": 310, "9181": 310, "4621": 310, "9075": 310, "674": 310, "1772": 310, "9444": 310, "351": 310, "9391": 310, "5595": 310, "8673": 310, "6240": 310, "5919": 310, "0018": 310, "1071": 310, "9127": 310, "251": 310, "9799": 310, "3131": 310, "9612": 310, "9705": 310, "8741": 310, "2230": 310, "0972": 310, "0337": 310, "0350": 310, "0654": 310, "102": [310, 312], "2441": 310, "4596": 310, "362": 310, "103": 310, "4362": 310, "171": 310, "104": [310, 312], "4041": 310, "6907": 310, "105": [310, 312], "4664": 310, "2760": 310, "0299": 310, "9712": 310, "349": 310, "107": 310, "3332": 310, "4479": 310, "772": 310, "108": 310, "4357": 310, "9591": 310, "543": 310, "109": 310, "6216": 310, "1353": 310, "692": 310, "110": 310, "6261": 310, "7086": 310, "496": 310, "111": 310, "7758": 310, "9818": 310, "112": [310, 312], "7772": 310, "5055": 310, "113": 310, "5840": 310, "3180": 310, "2083": 310, "115": 310, "5275": 310, "6873": 310, "4107": 310, "1624": 310, "6372": 310, "2571": 310, "118": 310, "4039": 310, "4428": 310, "119": [310, 312], "4728": 310, "5628": 310, "6767": 310, "2466": 310, "522": 310, "121": [310, 315], "5873": 310, "5072": 310, "122": [310, 312, 315], "6548": 310, "3766": 310, "123": 310, "5134": 310, "1955": 310, "124": 310, "2481": 310, "0591": 310, "4500": 310, "3368": 310, "126": 310, "9708": 310, "7059": 310, "127": [310, 312], "3031": 310, "2534": 310, "843": 310, "3327": 310, "6193": 310, "129": 310, "4831": 310, "1172": 310, "2593": 310, "4219": 310, "962": 310, "131": 310, "8380": 310, "899": 310, "132": 310, "2721": 310, "9048": 310, "166": [310, 313], "133": 310, "2419": 310, "5248": 310, "134": 310, "2139": 310, "4278": 310, "135": [310, 312], "0690": 310, "5140": 310, "136": 310, "1140": 310, "7402": 310, "137": 310, "5356": 310, "1636": 310, "138": 310, "0671": 310, "8798": 310, "139": 310, "8918": 310, "3298": 310, "140": 310, "1779": 310, "141": 310, "1771": 310, "3624": 310, "936": 310, "142": 310, "1683": 310, "4810": 310, "9373": 310, "4435": 310, "144": 310, "4396": 310, "8092": 310, "145": 310, "2572": 310, "146": 310, "4212": 310, "0260": 310, "147": 310, "0939": 310, "6478": 310, "605": 310, "148": 310, "6606": 310, "7289": 310, "149": 310, "9300": 310, "7193": 310, "563": 310, "1166": 310, "8514": 310, "151": 310, "9108": 310, "0672": 310, "292": 310, "152": [310, 312], "8591": 310, "3768": 310, "153": 310, "9976": 310, "154": 310, "0576": 310, "0067": 310, "935": 310, "4199": 310, "1722": 310, "156": 310, "8310": 310, "3466": 310, "157": 310, "8631": 310, "2492": 310, "8763": 310, "1277": 310, "159": 310, "5562": 310, "7446": 310, "1082": 310, "9830": 310, "161": 310, "0946": 310, "5229": 310, "162": 310, "4574": 310, "6900": 310, "163": [310, 311, 312], "2229": 310, "0318": 310, "482": 310, "164": 310, "0543": 310, "0817": 310, "761": 310, "165": [310, 312], "2809": 310, "5118": 310, "366": 310, "1142": 310, "5635": 310, "167": [310, 315], "1949": 310, "2327": 310, "982": 310, "0967": 310, "0387": 310, "169": 310, "0782": 310, "2150": 310, "170": 310, "5222": 310, "3725": 310, "9288": 310, "9837": 310, "172": 310, "1416": 310, "1099": 310, "173": 310, "8620": 310, "8475": 310, "174": 310, "1807": 310, "175": 310, "1148": 310, "0645": 310, "2751": 310, "8313": 310, "177": 310, "9286": 310, "9770": 310, "178": 310, "5735": 310, "2837": 310, "179": 310, "2926": 310, "9489": 310, "180": 310, "1507": 310, "181": 310, "8724": 310, "3567": 310, "182": [310, 312], "3574": 310, "6140": 310, "183": 310, "7895": 310, "2518": 310, "184": 310, "6146": 310, "185": 310, "8776": 310, "7358": 310, "186": 310, "3722": 310, "8428": 310, "187": 310, "7955": 310, "0092": 310, "7106": 310, "829": 310, "189": 310, "2264": 310, "6919": 310, "190": 310, "1438": 310, "1362": 310, "191": 310, "0618": 310, "8217": 310, "9420": 310, "6765": 310, "193": 310, "7745": 310, "0709": 310, "194": 310, "9478": 310, "6867": 310, "195": 310, "6507": 310, "6225": 310, "196": 310, "2244": 310, "2195": 310, "197": 310, "5385": 310, "9263": 310, "198": 310, "1878": 310, "2374": 310, "199": 310, "8054": 310, "3504": 310, "557": 310, "0766": 310, "6825": 310, "201": 310, "2011": 310, "8393": 310, "0803": 310, "7815": 310, "203": 310, "8363": 310, "2460": 310, "204": 310, "8643": 310, "2191": 310, "593": 310, "205": 310, "0773": 310, "1343": 310, "206": 310, "8657": 310, "207": 310, "9304": 310, "7584": 310, "208": 310, "8752": 310, "2307": 310, "209": 310, "5250": 310, "4869": 310, "210": [310, 315], "7837": 310, "5762": 310, "211": 310, "6661": 310, "8600": 310, "2502": 310, "1752": 310, "213": 310, "3075": 310, "8871": 310, "214": 310, "9406": 310, "8090": 310, "215": 310, "6291": 310, "8923": 310, "876": 310, "216": 310, "9504": 310, "21e": 310, "217": 310, "7431": 310, "7880": 310, "218": 310, "4463": 310, "5432": 310, "219": 310, "3793": 310, "3313": 310, "220": 310, "8843": 310, "0369": 310, "065": 310, "221": 310, "4828": 310, "8391": 310, "222": 310, "6265": 310, "2913": 310, "947": 310, "5541": 310, "1252": 310, "7342": 310, "2396": 310, "225": 310, "5936": 310, "1924": 310, "226": 310, "9975": 310, "2045": 310, "227": 310, "8367": 310, "9540": 310, "228": 310, "7259": 310, "6743": 310, "229": 310, "4827": 310, "7528": 310, "230": 310, "7361": 310, "8756": 310, "231": 310, "7646": 310, "1116": 310, "232": 310, "5426": 310, "8385": 310, "5662": 310, "8585": 310, "234": 310, "8234": 310, "7930": 310, "235": 310, "2648": 310, "9309": 310, "236": 310, "6817": 310, "237": 310, "0943": 310, "1533": 310, "238": 310, "3045": 310, "0483": 310, "239": 310, "240": [310, 314, 315], "6415": 310, "0201": 310, "241": 310, "4437": 310, "4365": 310, "242": 310, "0358": 310, "4943": 310, "243": 310, "1272": 310, "5003": 310, "1180": 310, "2637": 310, "245": 310, "7197": 310, "0873": 310, "246": 310, "2917": 310, "247": 310, "0160": 310, "0738": 310, "248": 310, "3689": 310, "0120": 310, "249": 310, "5570": 310, "0475": 310, "250": 310, "4423": 310, "2220": 310, "6803": 310, "252": 310, "1465": 310, "7214": 310, "253": 310, "8801": 310, "7034": 310, "254": 310, "9136": 310, "4076": 310, "7589": 310, "5013": 310, "8150": 310, "2241": 310, "257": 310, "0753": 310, "8081": 310, "1951": 310, "8314": 310, "259": 310, "0038": 310, "260": 310, "0889": 310, "4616": 310, "0655": 310, "262": 310, "8333": 310, "9476": 310, "263": 310, "7554": 310, "3798": 310, "264": 310, "3717": 310, "3947": 310, "529": 310, "265": 310, "3060": 310, "6495": 310, "7467": 310, "8889": 310, "267": 310, "8457": 310, "591": 310, "268": 310, "7137": 310, "0536": 310, "771": 310, "269": 310, "1651": 310, "388": 310, "270": 310, "8246": 310, "5709": 310, "281": 310, "271": 310, "7502": 310, "0521": 310, "032": 310, "272": 310, "5475": 310, "7253": 310, "273": 310, "2856": 310, "7130": 310, "274": 310, "2778": 310, "4122": 310, "68it": 310, "8368": 310, "1841": 310, "9622": 310, "1603": 310, "003e": 310, "277": 310, "0247": 310, "346": 310, "278": 310, "42it": 310, "2238": 310, "6418": 310, "279": 310, "0626": 310, "2538": 310, "280": 310, "0149": 310, "7380": 310, "2167": 310, "8911": 310, "282": 310, "8725": 310, "1983": 310, "8142": 310, "3709": 310, "284": 310, "4989": 310, "6464": 310, "6210": 310, "286": 310, "9726": 310, "0820": 310, "287": 310, "6975": 310, "9091": 310, "4926": 310, "4791": 310, "289": 310, "0905": 310, "3500": 310, "290": 310, "2287": 310, "291": 310, "9918": 310, "5543": 310, "9245": 310, "6444": 310, "631": 310, "293": 310, "0448": 310, "4769": 310, "8566": 310, "7208": 310, "295": 310, "0966": 310, "296": 310, "5303": 310, "1537": 310, "023": 310, "297": 310, "2682": 310, "564": 310, "298": 310, "4318": 310, "5063": 310, "299": 310, "7475": 310, "4190": 310, "8186": 310, "5077": 310, "301": 310, "1883": 310, "5291": 310, "472": 310, "302": 310, "1256": 310, "3998": 310, "303": 310, "3622": 310, "0930": 310, "626": 310, "304": 310, "9500": 310, "0075": 310, "5664": 310, "305": 310, "5697": 310, "3024": 310, "306": 310, "3117": 310, "0052": 310, "006": 310, "0981": 310, "9312": 310, "3873": 310, "309": 310, "0411": 310, "2650": 310, "310": 310, "1656": 310, "0228": 310, "004": 310, "311": 310, "1196": 310, "2478": 310, "312": 310, "7353": 310, "0812": 310, "313": 310, "3022": 310, "758": 310, "314": 310, "1406": 310, "4626": 310, "315": 310, "2156": 310, "851": 310, "316": 310, "1953": 310, "3774": 310, "317": 310, "6385": 310, "9917": 310, "318": 310, "2764": 310, "905": 310, "319": 310, "6391": 310, "9317": 310, "9748": 310, "2679": 310, "321": 310, "8495": 310, "5125": 310, "322": 310, "8177": 310, "6602": 310, "323": 310, "0704": 310, "5776": 310, "324": 310, "9833": [310, 314], "1339": 310, "402": 310, "325": 310, "1238": 310, "326": 310, "9299": 310, "0227": 310, "327": 310, "7727": 310, "1607": 310, "336": 310, "328": 310, "3958": 310, "3223": 310, "763": 310, "329": 310, "4742": 310, "1797": 310, "330": 310, "0144": 310, "0085": 310, "791": 310, "331": 310, "8284": 310, "0428": 310, "332": [310, 313, 315], "0098": 310, "7365": 310, "333": 310, "4566": 310, "0781": 310, "086": 310, "334": 310, "3355": 310, "0230": 310, "335": 310, "9346": 310, "0423": 310, "076": 310, "3711": 310, "1335": 310, "6855": 310, "337": 310, "0304": 310, "0023": 310, "8459": 310, "338": 310, "9998": 310, "4399": 310, "339": 310, "2303": 310, "1346": 310, "340": 310, "2915": 310, "7116": 310, "341": 310, "5560": 310, "0487": 310, "342": 310, "5119": 310, "061": 310, "343": 310, "3305": 310, "3705": 310, "957": 310, "344": 310, "6068": 310, "345": 310, "5731": 310, "3897": 310, "0376": 310, "347": 310, "0434": 310, "012": 310, "1300": 310, "1215": 310, "0968": 310, "0885": [310, 315], "350": 310, "1348": 310, "0073": 310, "5052": 310, "4184": 310, "2817": 310, "8887": 310, "353": 310, "4779": 310, "1009": 310, "0604": 310, "599": 310, "355": 310, "4486": 310, "1176": 310, "656": 310, "356": 310, "2436": 310, "0668": 310, "8849": 310, "0012": 310, "358": 310, "7511": 310, "8804": 310, "359": 310, "8870": 310, "6728": 310, "360": 310, "8841": 310, "5508": 310, "361": 310, "5242": 310, "0268": 310, "0013": 310, "6185": 310, "363": 310, "1378": 310, "0204": 310, "364": 310, "0355": 310, "685": 310, "365": 310, "4884": 310, "0231": 310, "0770": 310, "0014": 310, "6793": 310, "367": 310, "9834": 310, "863": 310, "368": 310, "6709": 310, "369": 310, "5199": 310, "9790": 310, "370": 310, "9401": 310, "7802": 310, "371": 310, "6723": 310, "372": 310, "2678": 310, "6201": 310, "373": 310, "2184": 310, "7385": 310, "374": 310, "6344": 310, "617": 310, "375": 310, "9945": 310, "0772": 310, "567": 310, "7576": 310, "0398": 310, "377": 310, "3396": 310, "0022": 310, "094": 310, "378": 310, "3073": 310, "4018": 310, "379": 310, "1869": 310, "380": 310, "0481": 310, "1117": 310, "6823": 310, "981": 310, "8305": 310, "0210": 310, "383": 310, "4908": 310, "0272": 310, "538": 310, "3267": 310, "0111": 310, "7965": 310, "1796": 310, "0039": 310, "5396": 310, "386": 310, "3757": 310, "0490": 310, "387": 310, "1394": 310, "4187": 310, "2986": 310, "7954": 310, "1274": 310, "0063": 310, "813": 310, "390": 310, "8706": 310, "0114": 310, "391": 310, "6922": 310, "0004": 310, "2423": 310, "392": 310, "9115": 310, "2602": 310, "393": 310, "2449": 310, "0783": 310, "394": 310, "0631": 310, "0057": 310, "7444": 310, "395": 310, "3339": 310, "0167": 310, "396": 310, "4806": 310, "397": 310, "4171": 310, "067": 310, "398": 310, "2618": 310, "5809": 310, "399": 310, "0054": 310, "3364": 310, "8733": 310, "0184": 310, "401": 310, "9137": 310, "0113": 310, "025": 310, "0386": 310, "0625": 310, "403": 310, "1332": 310, "0582": 310, "7816": 310, "404": 310, "8341": 310, "0941": 310, "854": 310, "405": 310, "8615": 310, "588": 310, "406": 310, "3849": 310, "008": 310, "407": 310, "9395": 310, "0765": 310, "055": 310, "408": 310, "2685": 310, "2235": 310, "688": 310, "409": 310, "3052": 310, "4249": 310, "410": 310, "6806": 310, "6383": 310, "3721": 310, "9981": 310, "412": 310, "1862": 310, "822": 310, "413": 310, "9811": 310, "0171": 310, "013": 310, "414": 310, "0252": 310, "0049": 310, "6205": 310, "415": 310, "1108": 310, "4921": 310, "9142": 310, "8130": 310, "417": [310, 312, 313], "1725": 310, "0036": 310, "3196": 310, "418": 310, "7795": 310, "0242": 310, "799": 310, "419": 310, "7737": 310, "0138": 310, "420": 310, "1462": 310, "0053": 310, "9226": 310, "6139": 310, "422": 310, "9889": 310, "0403": 310, "423": 310, "6194": 310, "0032": 310, "3989": 310, "0104": 310, "425": 310, "9960": 310, "0009": 310, "6009": 310, "426": 310, "2697": 310, "0914": 310, "427": 310, "1114": 310, "428": 310, "9862": 310, "1932": 310, "429": 310, "0637": 310, "0623": 310, "082": 310, "430": 310, "9906": 310, "2031": 310, "431": 310, "9948": 310, "0895": 310, "432": 310, "1970": 310, "0256": 310, "433": 310, "4231": 310, "0449": 310, "644": 310, "1039": 310, "1973": 310, "435": 310, "4561": 310, "1225": 310, "436": 310, "0211": 310, "2125": 310, "437": [310, 313], "3866": 310, "0050": 310, "7202": 310, "438": 310, "6388": 310, "0072": 310, "439": 310, "1187": 310, "0015": 310, "5116": 310, "440": 310, "0432": 310, "0025": 310, "7809": 310, "1925": 310, "0103": 310, "442": 310, "9570": 310, "443": 310, "0871": 310, "5601": 310, "0165": 310, "0047": 310, "6061": 310, "2746": 310, "0027": 310, "7887": 310, "446": 310, "1835": 310, "0035": 310, "855": 310, "447": 310, "8420": 310, "548": 310, "2653": 310, "0126": 310, "9736": 310, "449": 310, "0594": 310, "0119": 310, "6196": 310, "450": 310, "4509": 310, "0373": 310, "0620": 310, "6898": 310, "3235": 310, "687": 310, "5879": 310, "454": 310, "8406": 310, "0694": 310, "455": 310, "8259": 310, "0235": 310, "8500": 310, "0024": 310, "4054": 310, "458": 310, "2027": 310, "0894": 310, "5966": 310, "460": 310, "6942": 310, "0016": 310, "4254": 310, "6703": 310, "0145": 310, "8124": 310, "0218": 310, "9196": 310, "0188": 310, "8986": 310, "0884": 310, "0084": 310, "5624": 310, "465": 310, "8862": 310, "0006": 310, "5384": 310, "466": 310, "5837": 310, "467": 310, "8954": 310, "0101": 310, "6751": 310, "468": 310, "8063": 310, "0122": 310, "9635": 310, "469": 310, "0692": 310, "4216": 310, "470": 310, "1227": 310, "0586": 310, "162e": 310, "471": 310, "9690": 310, "0074": 310, "4166": 310, "6324": 310, "473": 310, "0778": 310, "474": 310, "8548": 310, "0017": 310, "4408": 310, "475": 310, "8125": 310, "1515": 310, "476": 310, "2733": 310, "0044": 310, "2836": 310, "477": 310, "7497": 310, "7681": 310, "478": 310, "8547": 310, "0105": 310, "7212": 310, "479": 310, "9848": 310, "0019": 310, "6498": 310, "1987": 310, "0011": 310, "5473": 310, "481": 310, "8991": 310, "0033": 310, "6091": 310, "9189": 310, "5771": 310, "483": 310, "6781": 310, "7542": 310, "484": 310, "5959": 310, "0064": 310, "4295": 310, "485": 310, "2547": 310, "486": 310, "0636": 310, "547": 310, "487": 310, "0065": 310, "488": 310, "1694": 310, "0083": 310, "5759": 310, "489": 310, "0493": 310, "0021": 310, "7805": 310, "490": 310, "0950": 310, "497": 310, "491": 310, "9717": 310, "3672": 310, "492": 310, "0207": 310, "493": 310, "8266": 310, "0069": 310, "5365": 310, "2623": 310, "5078": 310, "495": 310, "4545": 310, "09636": 310, "26it": 310, "8754": 310, "0010": 310, "498": 310, "0031": 310, "8269": 310, "4082": 310, "6642": 310, "2284": 310, "501": 310, "9130": 310, "0008": 310, "502": 310, "503": 310, "7624": 310, "0056": 310, "3858": 310, "504": 310, "75it": 310, "0890": 310, "0042": 310, "505": 310, "7505": 310, "2157": 310, "506": 310, "8394": 310, "3413": 310, "507": 310, "9609": 310, "0041": 310, "6905": 310, "508": 310, "8467": 310, "4409": 310, "509": 310, "510": 310, "8128": 310, "3559": 310, "511": 310, "1479": 310, "0264": 310, "1589": 310, "566": 310, "513": 310, "2756": 310, "0046": 310, "5266": 310, "514": 310, "9873": 310, "0112": 310, "9314": 310, "515": 310, "3791": 310, "0721": 310, "516": 310, "4580": 310, "0758": 310, "6114": 310, "517": 310, "2431": 310, "518": 310, "1958": 310, "5553": 310, "8924": 310, "0097": 310, "520": 310, "3737": 310, "0234": 310, "521": 310, "9125": 310, "4623": 310, "3230": 310, "0589": 310, "3784": 310, "523": 310, "9482": 310, "0051": 310, "524": 310, "1979": 310, "0045": 310, "6401": 310, "525": 310, "1588": 310, "0048": 310, "6255": 310, "526": 310, "6084": 310, "3477": 310, "1475": 310, "0209": 310, "528": 310, "7611": 310, "1040": 310, "0099": 310, "0173": 310, "643": 310, "530": 310, "8189": 310, "4358": 310, "531": 310, "9897": 310, "532": 310, "1548": 310, "9751": 310, "533": 310, "6362": 310, "7495": 310, "534": 310, "1749": 310, "9513": 310, "535": 310, "7708": 310, "0371": 310, "536": 310, "0437": 310, "537": 310, "5491": 310, "0276": 310, "6426": 310, "7294": 310, "078e": 310, "539": 310, "9928": 310, "540": 310, "7937": 310, "0124": 310, "9664": 310, "3342": 310, "542": 310, "2046": 310, "5496": 310, "0956": 310, "0059": 310, "545": 310, "9028": 310, "5843": 310, "546": 310, "0674": 310, "0178": 310, "797": 310, "2815": 310, "0599": 310, "1587": 310, "9276": 310, "8228": 310, "6164": 310, "551": 310, "6850": 310, "9167": 310, "3092": 310, "0670": 310, "9177": 310, "553": 310, "1599": 310, "0043": 310, "554": 310, "6367": 310, "555": 310, "3657": 310, "556": 310, "6694": 310, "2622": 310, "0372": 310, "4841": 310, "558": 310, "2707": 310, "0058": 310, "757": 310, "559": 310, "2267": 310, "5415": 310, "560": 310, "4556": 310, "0163": 310, "561": 310, "1839": 310, "0809": 310, "6262": 310, "562": 310, "0278": 310, "1112": 310, "6155": 310, "565": 310, "1427": 310, "3582": 310, "624": 310, "7870": 310, "9490": 310, "0439": 310, "8796": 310, "568": 310, "8026": 310, "612": 310, "569": 310, "3147": 310, "8486": 310, "570": 310, "7917": 310, "0129": 310, "571": 310, "9553": 310, "0020": 310, "6871": 310, "572": 310, "3132": 310, "0159": 310, "8646": 310, "573": 310, "5320": 310, "0269": 310, "574": 310, "2955": 310, "0245": 310, "575": 310, "3347": 310, "0179": 310, "9718": 310, "1629": 310, "804": 310, "577": 310, "4164": 310, "0070": 310, "4335": 310, "578": 310, "579": 310, "3049": 310, "9063": 310, "580": 310, "8785": 310, "3295": 310, "5184": 310, "0546": 310, "4589": 310, "583": 310, "4697": 310, "2476": 310, "584": 310, "2397": 310, "585": 310, "4953": 310, "1775": 310, "586": 310, "2258": 310, "0110": 310, "7671": 310, "587": 310, "3981": 310, "8590": 310, "0007": 310, "589": 310, "9820": 310, "4221": 310, "590": 310, "1293": 310, "0116": 310, "868": 310, "1675": 310, "5931": 310, "592": 310, "2910": 310, "5219": 310, "2124": 310, "1730": 310, "737": 310, "594": 310, "2914": 310, "0206": 310, "595": 310, "0172": 310, "0945": 310, "0121": 310, "4789": 310, "597": 310, "3805": 310, "598": 310, "3310": 310, "5065": 310, "6028": 310, "6316": 310, "6724": 310, "6523": 310, "601": 310, "0136": 310, "4298": 310, "602": 310, "3524": 310, "2629": 310, "603": 310, "2635": 310, "7839": 310, "604": 310, "6041": 310, "8027": 310, "4170": 310, "4675": 310, "606": 310, "3153": 310, "9316": 310, "607": 310, "0649": 310, "9722": 310, "7989": 310, "0329": 310, "609": 310, "1976": 310, "6852": 310, "610": 310, "4793": 310, "1255": 310, "611": 310, "4581": 310, "0394": 310, "2047": 310, "0326": 310, "613": 310, "8967": 310, "8619": 310, "614": 310, "5906": 310, "6491": 310, "6634": 310, "4394": 310, "616": 310, "0624": 310, "0061": 310, "5676": 310, "3259": 310, "0131": 310, "7733": 310, "618": 310, "7515": 310, "0189": 310, "5575": 310, "619": 310, "9313": 310, "6286": 310, "620": 310, "4325": 310, "7832": 310, "621": 310, "1134": 310, "622": 310, "4572": 310, "0500": 310, "5838": 310, "623": 310, "3818": 310, "8623": 310, "1253": 310, "6622": 310, "subject": 310, "saw": [310, 312], "884": [310, 313], "explain": 311, "semat": 311, "r3mtransform": 311, "embodi": 311, "ai": 311, "env_transform": [311, 315], "s3": 311, "amazonaw": 311, "r3m_50": 311, "374m": 311, "8m": 311, "104mb": 311, "7m": 311, "0mb": 311, "9mb": 311, "3mb": 311, "0m": 311, "5mb": 311, "5m": 311, "6mb": 311, "3m": 311, "7mb": 311, "4mb": 311, "115m": 311, "2mb": 311, "131m": 311, "147m": 311, "8mb": 311, "164m": 311, "179m": 311, "186m": 311, "195m": 311, "201m": 311, "212m": 311, "217m": 311, "229m": 311, "246m": 311, "252m": 311, "261m": 311, "268m": 311, "279m": 311, "293m": 311, "301m": 311, "311m": 311, "326m": 311, "335m": 311, "342m": 311, "349m": 311, "360m": 311, "373m": 311, "wiser": 311, "conclud": 311, "_storag": [311, 312], "3252": 311, "pretrained_model": [311, 313], "supervis": [312, 315], "pull": 312, "temporarili": 312, "drastic": 312, "ram": [312, 315], "batteri": 312, "dataliststorag": 312, "datalazytensorstorag": 312, "tensordidct": 312, "basi": 312, "datalazymemmapstorag": 312, "buffer_list": 312, "lowest": 312, "medium": 312, "buffer_lazytensor": 312, "buffer_lazymemmap": 312, "fullest": 312, "organ": 312, "convini": 312, "mydata": 312, "background": 312, "question": [312, 314], "_i": 312, "artifici": 312, "0892946e": 312, "she": 312, "augment": 312, "pars": 312, "proport": 312, "hist": 312, "barcontain": 312, "artist": 312, "revert": 312, "expens": 312, "reappear": 312, "unfold": 312, "problemat": 312, "window": 312, "4th": 312, "rb_tutori": [312, 313], "torchrl_demo": [313, 314], "016": [313, 314], "torchrl_env": [313, 315], "3251": 313, "demo": 314, "icml": 314, "vmoen": 314, "fb": 314, "invest": 314, "platform": 314, "media": 314, "truli": 314, "predominantli": 314, "tensordict1": 314, "tensordict2": 314, "tensordict_sampl": 314, "_sampler": 314, "_sum_tre": 314, "modulenotfounderror": 314, "28791671991348267": 314, "gym_env": 314, "noopresetenv": [314, 315], "lazyconv2d": 314, "backbone_modul": 314, "params_expand": 314, "tensordict_exp": 314, "base_modul": 314, "0137": 314, "1524": 314, "0641": 314, "viewbackward0": 314, "asstridedbackward0": 314, "8728": 314, "1334": 314, "3494": 314, "6887": 314, "6402": 314, "_safetanhbackward": 314, "1132": 314, "1762": 314, "3430": 314, "2668": 314, "2918": 314, "6239": 314, "roughli": 314, "tensordicts_prealloc": 314, "tensordicts_stack": 314, "tensordict_rollout": [314, 315], "disclaim": 314, "concatmodul": 314, "loss_td": 314, "year": 314, "roadmap": 314, "compris": 314, "contributor": 314, "curiou": 314, "nascent": 314, "unsupervis": 315, "rom": 315, "licens": 315, "pygam": 315, "unifi": 315, "insid": 315, "_build_env": 315, "sphinx_gallery_start_ignor": 315, "filterwarn": 315, "sphinx_gallery_end_ignor": 315, "adventur": 315, "v5": 315, "airraid": 315, "alien": 315, "amidar": 315, "assault": 315, "2736": 315, "void": 315, "reproduct": 315, "tensordict_tprim": 315, "imshow": 315, "axesimag": 315, "0x7f1325462bb0": 315, "inconsist": 315, "pong": 315, "swingup": 315, "swingup_spars": 315, "ball_in_cup": 315, "catch": 315, "balance_spars": 315, "three_pol": 315, "two_pol": 315, "finger": 315, "turn_easi": 315, "turn_hard": 315, "fish": 315, "swim": 315, "hopper": 315, "hop": 315, "run_pure_st": 315, "bring_bal": 315, "bring_peg": 315, "insert_bal": 315, "insert_peg": 315, "point_mass": 315, "reacher": 315, "swimmer": 315, "swimmer6": 315, "swimmer15": 315, "walker": 315, "dog": 315, "trot": 315, "humanoid_cmu": 315, "lqr": 315, "lqr_2_1": 315, "lqr_6_2": 315, "quadrup": 315, "escap": 315, "stacker": 315, "stack_2": 315, "stack_4": 315, "wrapper1": 315, "wrapper2": 315, "obviou": 315, "truth": 315, "env0": 315, "env_transformed_bi": 315, "stanc": 315, "transformeddistribut": 315, "base_dist": 315, "concat": 315, "mofidi": 315, "transformedenviron": 315, "moderet": 315, "computation": 315, "legitim": 315, "incom": 315, "amongst": 315, "wor": 315, "convention": 315, "scope": 315, "markovian": 315, "3288080526": 315, "constain": 315, "bar_": 315, "get_someth": 315, "bar_6434ff52": 315, "5309": 315, "aargh": 315, "foo_list": 315, "vec_env": 315, "_dispatch_caller_parallel": 315, "0x7f130c113970": 315, "bar_6bf2da02": 315, "9d4a": 315, "bar_6be85c30": 315, "b281": 315, "bar_6bf2aeba": 315, "a588": 315, "parallen": 315, "particularili": 315, "evolv": 315, "steadi": 315, "approx": 315, "1711": 315, "2806": 315, "2212": 315, "1928": 315, "_extra_st": 315, "observation_ssq": 315, "observation_sum": 315, "2108": 315, "1156": 315, "0959": 315, "2133": 315, "2260": 315, "3038": 315, "dispach": 315, "absor": 315}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 0, 1, "", "EnvBase"], [68, 0, 1, "", "EnvCreator"], [69, 0, 1, "", "EnvMetaData"], [70, 0, 1, "", "GymLikeEnv"], [71, 2, 1, "", "MarlGroupMapType"], [72, 2, 1, "", "ModelBasedEnvBase"], [73, 0, 1, "", "MultiThreadedEnv"], [74, 0, 1, "", "ParallelEnv"], [75, 0, 1, "", "SerialEnv"], [76, 2, 1, "", "check_marl_grouping"], [72, 1, 1, "", "rand_step"], [72, 1, 1, "", "reset"], [72, 1, 1, "", "rollout"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[67, 3, 1, "", "action_key"], [67, 3, 1, "", "action_keys"], [67, 3, 1, "", "action_spec"], [67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 3, 1, "", "batch_locked"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 3, 1, "", "done_key"], [67, 3, 1, "", "done_keys"], [67, 3, 1, "", "done_spec"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fake_tensordict"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 3, 1, "", "input_spec"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 3, 1, "", "observation_spec"], [67, 3, 1, "", "output_spec"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "rand_action"], [67, 1, 1, "id0", "rand_step"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "id1", "reset"], [67, 3, 1, "", "reward_key"], [67, 3, 1, "", "reward_keys"], [67, 3, 1, "", "reward_spec"], [67, 1, 1, "id2", "rollout"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "id3", "set_seed"], [67, 1, 1, "", "share_memory"], [67, 3, 1, "", "specs"], [67, 1, 1, "", "state_dict"], [67, 3, 1, "", "state_spec"], [67, 1, 1, "id4", "step"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[70, 3, 1, "", "action_key"], [70, 3, 1, "", "action_keys"], [70, 3, 1, "", "action_spec"], [70, 1, 1, "", "add_module"], [70, 1, 1, "", "apply"], [70, 3, 1, "", "batch_locked"], [70, 1, 1, "", "bfloat16"], [70, 1, 1, "", "buffers"], [70, 1, 1, "", "children"], [70, 1, 1, "", "close"], [70, 1, 1, "", "compile"], [70, 1, 1, "", "cpu"], [70, 1, 1, "", "cuda"], [70, 3, 1, "", "done_key"], [70, 3, 1, "", "done_keys"], [70, 3, 1, "", "done_spec"], [70, 1, 1, "", "double"], [70, 1, 1, "", "eval"], [70, 1, 1, "", "extra_repr"], [70, 1, 1, "", "fake_tensordict"], [70, 1, 1, "", "float"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "get_buffer"], [70, 1, 1, "", "get_extra_state"], [70, 1, 1, "", "get_parameter"], [70, 1, 1, "", "get_submodule"], [70, 1, 1, "", "half"], [70, 3, 1, "", "input_spec"], [70, 1, 1, "", "ipu"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "modules"], [70, 1, 1, "", "named_buffers"], [70, 1, 1, "", "named_children"], [70, 1, 1, "", "named_modules"], [70, 1, 1, "", "named_parameters"], [70, 3, 1, "", "observation_spec"], [70, 3, 1, "", "output_spec"], [70, 1, 1, "", "parameters"], [70, 1, 1, "", "rand_action"], [70, 1, 1, "", "rand_step"], [70, 1, 1, "", "read_action"], [70, 1, 1, "", "read_done"], [70, 1, 1, "", "read_obs"], [70, 1, 1, "", "read_reward"], [70, 1, 1, "", "register_backward_hook"], [70, 1, 1, "", "register_buffer"], [70, 1, 1, "", "register_forward_hook"], [70, 1, 1, "", "register_forward_pre_hook"], [70, 1, 1, "", "register_full_backward_hook"], [70, 1, 1, "", "register_full_backward_pre_hook"], [70, 1, 1, "", "register_load_state_dict_post_hook"], [70, 1, 1, "", "register_module"], [70, 1, 1, "", "register_parameter"], [70, 1, 1, "", "register_state_dict_pre_hook"], [70, 1, 1, "", "requires_grad_"], [70, 1, 1, "", "reset"], [70, 3, 1, "", "reward_key"], [70, 3, 1, "", "reward_keys"], [70, 3, 1, "", "reward_spec"], [70, 1, 1, "", "rollout"], [70, 1, 1, "", "set_extra_state"], [70, 1, 1, "", "set_info_dict_reader"], [70, 1, 1, "", "set_seed"], [70, 1, 1, "", "share_memory"], [70, 3, 1, "", "specs"], [70, 1, 1, "", "state_dict"], [70, 3, 1, "", "state_spec"], [70, 1, 1, "", "step"], [70, 1, 1, "", "to"], [70, 1, 1, "", "to_empty"], [70, 1, 1, "", "train"], [70, 1, 1, "", "type"], [70, 1, 1, "", "xpu"], [70, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_keys"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "close"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_keys"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 3, 1, "", "input_spec"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 3, 1, "", "observation_spec"], [73, 3, 1, "", "output_spec"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "reset"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_keys"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 3, 1, "", "state_spec"], [73, 1, 1, "", "step"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[74, 3, 1, "", "action_key"], [74, 3, 1, "", "action_keys"], [74, 3, 1, "", "action_spec"], [74, 1, 1, "", "add_module"], [74, 1, 1, "", "apply"], [74, 3, 1, "", "batch_locked"], [74, 1, 1, "", "bfloat16"], [74, 1, 1, "", "buffers"], [74, 1, 1, "", "children"], [74, 1, 1, "", "compile"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 3, 1, "", "done_key"], [74, 3, 1, "", "done_keys"], [74, 3, 1, "", "done_spec"], [74, 1, 1, "", "double"], [74, 1, 1, "", "eval"], [74, 1, 1, "", "extra_repr"], [74, 1, 1, "", "fake_tensordict"], [74, 1, 1, "", "float"], [74, 1, 1, "", "forward"], [74, 1, 1, "", "get_buffer"], [74, 1, 1, "", "get_extra_state"], [74, 1, 1, "", "get_parameter"], [74, 1, 1, "", "get_submodule"], [74, 1, 1, "", "half"], [74, 3, 1, "", "input_spec"], [74, 1, 1, "", "ipu"], [74, 1, 1, "", "load_state_dict"], [74, 1, 1, "", "modules"], [74, 1, 1, "", "named_buffers"], [74, 1, 1, "", "named_children"], [74, 1, 1, "", "named_modules"], [74, 1, 1, "", "named_parameters"], [74, 3, 1, "", "observation_spec"], [74, 3, 1, "", "output_spec"], [74, 1, 1, "", "parameters"], [74, 1, 1, "", "rand_action"], [74, 1, 1, "", "rand_step"], [74, 1, 1, "", "register_backward_hook"], [74, 1, 1, "", "register_buffer"], [74, 1, 1, "", "register_forward_hook"], [74, 1, 1, "", "register_forward_pre_hook"], [74, 1, 1, "", "register_full_backward_hook"], [74, 1, 1, "", "register_full_backward_pre_hook"], [74, 1, 1, "", "register_load_state_dict_post_hook"], [74, 1, 1, "", "register_module"], [74, 1, 1, "", "register_parameter"], [74, 1, 1, "", "register_state_dict_pre_hook"], [74, 1, 1, "", "requires_grad_"], [74, 1, 1, "", "reset"], [74, 3, 1, "", "reward_key"], [74, 3, 1, "", "reward_keys"], [74, 3, 1, "", "reward_spec"], [74, 1, 1, "", "rollout"], [74, 1, 1, "", "set_extra_state"], [74, 1, 1, "", "set_seed"], [74, 1, 1, "", "share_memory"], [74, 3, 1, "", "specs"], [74, 1, 1, "", "state_dict"], [74, 3, 1, "", "state_spec"], [74, 1, 1, "", "step"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_empty"], [74, 1, 1, "", "train"], [74, 1, 1, "", "type"], [74, 1, 1, "", "update_kwargs"], [74, 1, 1, "", "xpu"], [74, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[75, 3, 1, "", "action_key"], [75, 3, 1, "", "action_keys"], [75, 3, 1, "", "action_spec"], [75, 1, 1, "", "add_module"], [75, 1, 1, "", "apply"], [75, 3, 1, "", "batch_locked"], [75, 1, 1, "", "bfloat16"], [75, 1, 1, "", "buffers"], [75, 1, 1, "", "children"], [75, 1, 1, "", "compile"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 3, 1, "", "done_key"], [75, 3, 1, "", "done_keys"], [75, 3, 1, "", "done_spec"], [75, 1, 1, "", "double"], [75, 1, 1, "", "eval"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "fake_tensordict"], [75, 1, 1, "", "float"], [75, 1, 1, "", "forward"], [75, 1, 1, "", "get_buffer"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "get_parameter"], [75, 1, 1, "", "get_submodule"], [75, 1, 1, "", "half"], [75, 3, 1, "", "input_spec"], [75, 1, 1, "", "ipu"], [75, 1, 1, "", "load_state_dict"], [75, 1, 1, "", "modules"], [75, 1, 1, "", "named_buffers"], [75, 1, 1, "", "named_children"], [75, 1, 1, "", "named_modules"], [75, 1, 1, "", "named_parameters"], [75, 3, 1, "", "observation_spec"], [75, 3, 1, "", "output_spec"], [75, 1, 1, "", "parameters"], [75, 1, 1, "", "rand_action"], [75, 1, 1, "", "rand_step"], [75, 1, 1, "", "register_backward_hook"], [75, 1, 1, "", "register_buffer"], [75, 1, 1, "", "register_forward_hook"], [75, 1, 1, "", "register_forward_pre_hook"], [75, 1, 1, "", "register_full_backward_hook"], [75, 1, 1, "", "register_full_backward_pre_hook"], [75, 1, 1, "", "register_load_state_dict_post_hook"], [75, 1, 1, "", "register_module"], [75, 1, 1, "", "register_parameter"], [75, 1, 1, "", "register_state_dict_pre_hook"], [75, 1, 1, "", "requires_grad_"], [75, 1, 1, "", "reset"], [75, 3, 1, "", "reward_key"], [75, 3, 1, "", "reward_keys"], [75, 3, 1, "", "reward_spec"], [75, 1, 1, "", "rollout"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "set_seed"], [75, 1, 1, "", "share_memory"], [75, 3, 1, "", "specs"], [75, 1, 1, "", "state_dict"], [75, 3, 1, "", "state_spec"], [75, 1, 1, "", "step"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_empty"], [75, 1, 1, "", "train"], [75, 1, 1, "", "type"], [75, 1, 1, "", "update_kwargs"], [75, 1, 1, "", "xpu"], [75, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[77, 2, 1, "", "BraxEnv"], [78, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[79, 2, 1, "", "DMControlEnv"], [80, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[81, 2, 1, "", "GymEnv"], [82, 2, 1, "", "GymWrapper"], [83, 2, 1, "", "MOGymEnv"], [84, 2, 1, "", "MOGymWrapper"], [85, 2, 1, "", "gym_backend"], [86, 2, 1, "", "set_gym_backend"]], "torchrl.envs.libs.habitat": [[87, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[88, 2, 1, "", "JumanjiEnv"], [89, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[90, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.pettingzoo": [[91, 2, 1, "", "PettingZooEnv"], [92, 2, 1, "", "PettingZooWrapper"]], "torchrl.envs.libs.vmas": [[93, 2, 1, "", "VmasEnv"], [94, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[95, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[96, 0, 1, "", "ActionMask"], [97, 0, 1, "", "BinarizeReward"], [98, 0, 1, "", "CatFrames"], [99, 0, 1, "", "CatTensors"], [100, 0, 1, "", "CenterCrop"], [101, 0, 1, "", "ClipTransform"], [102, 0, 1, "", "Compose"], [103, 0, 1, "", "DTypeCastTransform"], [104, 0, 1, "", "DeviceCastTransform"], [105, 0, 1, "", "DiscreteActionProjection"], [106, 0, 1, "", "DoubleToFloat"], [107, 0, 1, "", "ExcludeTransform"], [108, 0, 1, "", "FiniteTensorDictCheck"], [109, 0, 1, "", "FlattenObservation"], [110, 0, 1, "", "FrameSkipTransform"], [111, 0, 1, "", "GrayScale"], [112, 0, 1, "", "InitTracker"], [113, 0, 1, "", "KLRewardTransform"], [114, 0, 1, "", "NoopResetEnv"], [115, 0, 1, "", "ObservationNorm"], [116, 0, 1, "", "ObservationTransform"], [117, 0, 1, "", "PinMemoryTransform"], [118, 0, 1, "", "R3MTransform"], [119, 0, 1, "", "RandomCropTensorDict"], [120, 0, 1, "", "RenameTransform"], [121, 0, 1, "", "Resize"], [122, 0, 1, "", "Reward2GoTransform"], [123, 0, 1, "", "RewardClipping"], [124, 0, 1, "", "RewardScaling"], [125, 0, 1, "", "RewardSum"], [126, 0, 1, "", "SelectTransform"], [127, 0, 1, "", "SqueezeTransform"], [128, 0, 1, "", "StepCounter"], [129, 0, 1, "", "TargetReturn"], [130, 0, 1, "", "TensorDictPrimer"], [131, 0, 1, "", "TimeMaxPool"], [132, 0, 1, "", "ToTensorImage"], [133, 0, 1, "", "Transform"], [134, 0, 1, "", "TransformedEnv"], [135, 0, 1, "", "UnsqueezeTransform"], [136, 0, 1, "", "VC1Transform"], [137, 0, 1, "", "VIPRewardTransform"], [138, 0, 1, "", "VIPTransform"], [139, 0, 1, "", "VecNorm"], [140, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[97, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "reset"], [98, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[100, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[101, 1, 1, "", "transform_observation_spec"], [101, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "reset"], [102, 1, 1, "", "to"], [102, 1, 1, "", "transform_env_device"], [102, 1, 1, "", "transform_input_spec"], [102, 1, 1, "", "transform_observation_spec"], [102, 1, 1, "", "transform_output_spec"], [102, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "transform_input_spec"], [103, 1, 1, "", "transform_observation_spec"], [103, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "transform_done_spec"], [104, 1, 1, "", "transform_env_device"], [104, 1, 1, "", "transform_input_spec"], [104, 1, 1, "", "transform_observation_spec"], [104, 1, 1, "", "transform_output_spec"], [104, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[105, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "reset"], [107, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[108, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[109, 1, 1, "", "forward"], [109, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[110, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[111, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[112, 1, 1, "", "forward"], [112, 1, 1, "", "reset"], [112, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[114, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[115, 1, 1, "", "init_stats"], [115, 1, 1, "", "transform_input_spec"], [115, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[117, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[118, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[119, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "transform_input_spec"], [120, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[122, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[123, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[124, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "reset"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "reset"], [126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "reset"], [128, 1, 1, "", "transform_input_spec"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "reset"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "reset"], [130, 1, 1, "", "to"], [130, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[133, 3, 1, "", "container"], [133, 1, 1, "", "forward"], [133, 3, 1, "", "parent"], [133, 1, 1, "", "reset"], [133, 1, 1, "", "to"], [133, 1, 1, "", "transform_done_spec"], [133, 1, 1, "", "transform_env_device"], [133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_observation_spec"], [133, 1, 1, "", "transform_output_spec"], [133, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[134, 3, 1, "", "batch_locked"], [134, 1, 1, "", "eval"], [134, 3, 1, "", "input_spec"], [134, 1, 1, "", "load_state_dict"], [134, 3, 1, "", "output_spec"], [134, 1, 1, "", "set_missing_tolerance"], [134, 1, 1, "", "set_seed"], [134, 1, 1, "", "state_dict"], [134, 1, 1, "", "to"], [134, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[135, 1, 1, "", "transform_input_spec"], [135, 1, 1, "", "transform_observation_spec"], [135, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "make_noload_model"], [136, 1, 1, "", "to"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[138, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[139, 1, 1, "", "build_td_for_shared_vecnorm"], [139, 1, 1, "", "forward"], [139, 1, 1, "", "get_extra_state"], [139, 1, 1, "", "set_extra_state"], [139, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[141, 2, 1, "", "check_env_specs"], [142, 2, 1, "", "exploration_mode"], [143, 2, 1, "", "exploration_type"], [144, 2, 1, "", "get_available_libraries"], [145, 2, 1, "", "make_composite_from_td"], [146, 2, 1, "", "set_exploration_mode"], [147, 2, 1, "", "set_exploration_type"], [148, 2, 1, "", "step_mdp"]], "torchrl.modules": [[149, 0, 1, "", "CEMPlanner"], [150, 0, 1, "", "ConvNet"], [151, 0, 1, "", "DTActor"], [152, 0, 1, "", "DdpgCnnActor"], [153, 0, 1, "", "DdpgCnnQNet"], [154, 0, 1, "", "DdpgMlpActor"], [155, 0, 1, "", "DdpgMlpQNet"], [156, 0, 1, "", "DecisionTransformer"], [157, 0, 1, "", "Delta"], [158, 0, 1, "", "DistributionalDQNnet"], [159, 0, 1, "", "DistributionalQValueHook"], [160, 0, 1, "", "DreamerActor"], [161, 0, 1, "", "DuelingCnnDQNet"], [162, 0, 1, "", "IndependentNormal"], [163, 0, 1, "", "LSTMModule"], [164, 0, 1, "", "LSTMNet"], [165, 0, 1, "", "MLP"], [166, 0, 1, "", "MPCPlannerBase"], [167, 0, 1, "", "MPPIPlanner"], [168, 0, 1, "", "MaskedCategorical"], [169, 0, 1, "", "MaskedOneHotCategorical"], [170, 0, 1, "", "MultiAgentMLP"], [171, 0, 1, "", "NoisyLazyLinear"], [172, 0, 1, "", "NoisyLinear"], [173, 0, 1, "", "NormalParamWrapper"], [174, 0, 1, "", "ObsDecoder"], [175, 0, 1, "", "ObsEncoder"], [176, 0, 1, "", "OneHotCategorical"], [177, 0, 1, "", "OnlineDTActor"], [178, 0, 1, "", "QMixer"], [179, 0, 1, "", "QValueHook"], [180, 0, 1, "", "RSSMPosterior"], [181, 0, 1, "", "RSSMPrior"], [182, 0, 1, "", "Squeeze2dLayer"], [183, 0, 1, "", "SqueezeLayer"], [184, 0, 1, "", "TanhDelta"], [185, 0, 1, "", "TanhNormal"], [186, 0, 1, "", "TruncatedNormal"], [187, 0, 1, "", "VDNMixer"], [188, 0, 1, "", "VmapModule"], [189, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[149, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[150, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[151, 1, 1, "", "default_config"], [151, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[152, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[153, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[154, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[155, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[156, 0, 1, "", "DTConfig"], [156, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[157, 1, 1, "", "log_prob"], [157, 3, 1, "", "mean"], [157, 3, 1, "", "mode"], [157, 1, 1, "", "rsample"], [157, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[158, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[160, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[161, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[162, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "set_recurrent_mode"], [163, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[164, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[165, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[167, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[168, 1, 1, "", "log_prob"], [168, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[169, 1, 1, "", "log_prob"], [169, 1, 1, "", "rsample"], [169, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[170, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[171, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[173, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[174, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[175, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[176, 1, 1, "", "log_prob"], [176, 3, 1, "", "mode"], [176, 1, 1, "", "rsample"], [176, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[177, 1, 1, "", "default_config"], [177, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[178, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[180, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[181, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[183, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[184, 3, 1, "", "mean"], [184, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[185, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[186, 1, 1, "", "log_prob"], [186, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[187, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[188, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[190, 0, 1, "", "Actor"], [191, 0, 1, "", "ActorCriticOperator"], [192, 0, 1, "", "ActorCriticWrapper"], [193, 0, 1, "", "ActorValueOperator"], [194, 0, 1, "", "AdditiveGaussianWrapper"], [195, 0, 1, "", "DecisionTransformerInferenceWrapper"], [196, 0, 1, "", "DistributionalQValueActor"], [197, 0, 1, "", "DistributionalQValueModule"], [198, 0, 1, "", "EGreedyModule"], [199, 0, 1, "", "LMHeadActorValueOperator"], [200, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [201, 0, 1, "", "ProbabilisticActor"], [202, 0, 1, "", "QValueActor"], [203, 0, 1, "", "QValueModule"], [204, 0, 1, "", "SafeModule"], [205, 0, 1, "", "SafeProbabilisticModule"], [206, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [207, 0, 1, "", "SafeSequential"], [208, 0, 1, "", "TanhModule"], [209, 0, 1, "", "ValueOperator"], [210, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[191, 1, 1, "", "get_critic_operator"], [191, 1, 1, "", "get_policy_head"], [191, 1, 1, "", "get_value_head"], [191, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[192, 1, 1, "", "get_policy_head"], [192, 1, 1, "", "get_policy_operator"], [192, 1, 1, "", "get_value_head"], [192, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[193, 1, 1, "", "get_policy_head"], [193, 1, 1, "", "get_policy_operator"], [193, 1, 1, "", "get_value_head"], [193, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "mask_context"], [195, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[197, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[203, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[204, 1, 1, "", "random"], [204, 1, 1, "", "random_sample"], [204, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[205, 1, 1, "", "random"], [205, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[208, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[210, 1, 1, "", "get_reward_operator"], [210, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[211, 0, 1, "", "biased_softplus"], [212, 0, 1, "", "inv_softplus"], [213, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[211, 1, 1, "", "forward"]], "torchrl.objectives": [[214, 0, 1, "", "A2CLoss"], [215, 0, 1, "", "CQLLoss"], [216, 0, 1, "", "ClipPPOLoss"], [217, 0, 1, "", "DDPGLoss"], [218, 0, 1, "", "DQNLoss"], [219, 0, 1, "", "DTLoss"], [220, 0, 1, "", "DiscreteSACLoss"], [221, 0, 1, "", "DistributionalDQNLoss"], [222, 0, 1, "", "DreamerActorLoss"], [223, 0, 1, "", "DreamerModelLoss"], [224, 0, 1, "", "DreamerValueLoss"], [225, 0, 1, "", "HardUpdate"], [226, 0, 1, "", "IQLLoss"], [227, 0, 1, "", "KLPENPPOLoss"], [228, 0, 1, "", "LossModule"], [229, 0, 1, "", "OnlineDTLoss"], [230, 0, 1, "", "PPOLoss"], [231, 0, 1, "", "REDQLoss"], [232, 0, 1, "", "ReinforceLoss"], [233, 0, 1, "", "SACLoss"], [234, 0, 1, "", "SoftUpdate"], [235, 0, 1, "", "TD3Loss"], [236, 0, 1, "", "ValueEstimators"], [237, 0, 1, "", "default_value_kwargs"], [238, 0, 1, "", "distance_loss"], [239, 0, 1, "", "hold_out_net"], [240, 0, 1, "", "hold_out_params"], [242, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[216, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[219, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[223, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[224, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "loss_value_diff"], [226, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[227, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[228, 1, 1, "", "convert_to_functional"], [228, 1, 1, "", "forward"], [228, 1, 1, "", "make_value_estimator"], [228, 1, 1, "", "named_parameters"], [228, 1, 1, "", "parameters"], [228, 1, 1, "", "set_keys"], [228, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[229, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[241, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[243, 0, 1, "", "GAE"], [244, 0, 1, "", "TD0Estimator"], [245, 0, 1, "", "TD1Estimator"], [246, 0, 1, "", "TDLambdaEstimator"], [247, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "set_keys"], [247, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[248, 0, 1, "", "generalized_advantage_estimate"], [249, 0, 1, "", "reward2go"], [250, 0, 1, "", "td0_advantage_estimate"], [251, 0, 1, "", "td0_return_estimate"], [252, 0, 1, "", "td1_advantage_estimate"], [253, 0, 1, "", "td1_return_estimate"], [254, 0, 1, "", "td_lambda_advantage_estimate"], [255, 0, 1, "", "td_lambda_return_estimate"], [256, 0, 1, "", "vec_generalized_advantage_estimate"], [257, 0, 1, "", "vec_td1_advantage_estimate"], [258, 0, 1, "", "vec_td1_return_estimate"], [259, 0, 1, "", "vec_td_lambda_advantage_estimate"], [260, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[261, 2, 1, "", "TensorDictRecorder"], [262, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[263, 2, 1, "", "Logger"], [265, 2, 1, "", "generate_exp_name"], [266, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[264, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[267, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[268, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[269, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[270, 0, 1, "", "BatchSubSampler"], [271, 0, 1, "", "ClearCudaCache"], [272, 0, 1, "", "CountFramesLog"], [273, 0, 1, "", "LogReward"], [274, 0, 1, "", "OptimizerHook"], [275, 0, 1, "", "Recorder"], [276, 0, 1, "", "ReplayBufferTrainer"], [277, 0, 1, "", "RewardNormalizer"], [278, 0, 1, "", "SelectKeys"], [279, 0, 1, "", "Trainer"], [280, 0, 1, "", "TrainerHookBase"], [281, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[270, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[271, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[272, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[273, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[274, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[275, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[276, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[277, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[278, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[280, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[281, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[282, 2, 1, "", "correct_for_frame_skip"], [283, 2, 1, "", "get_stats_random_rollout"], [284, 2, 1, "", "make_collector_offpolicy"], [285, 2, 1, "", "make_collector_onpolicy"], [286, 2, 1, "", "make_dqn_loss"], [287, 2, 1, "", "make_redq_loss"], [288, 2, 1, "", "make_redq_model"], [289, 2, 1, "", "make_replay_buffer"], [290, 2, 1, "", "make_target_updater"], [291, 2, 1, "", "make_trainer"], [292, 2, 1, "", "parallel_env_constructor"], [293, 2, 1, "", "sync_async_collector"], [294, 2, 1, "", "sync_sync_collector"], [295, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 299, 300, 301, 302, 303, 304, 305, 309, 310, 314, 315], "tutori": [0, 305, 309], "basic": [0, 312], "intermedi": [0, 8], "advanc": 0, "refer": [0, 297], "knowledg": [0, 298], "base": [0, 7, 298], "indic": 0, "tabl": 0, "collector": [1, 303, 304, 305, 306, 309, 314], "packag": [1, 2, 3, 299, 300, 301, 302], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 303, 304, 305, 309, 314], "distribut": [1, 299], "helper": [1, 3], "function": [1, 4, 300, 304, 305, 309, 314], "replai": [2, 303, 304, 305, 306, 309, 312, 314], "buffer": [2, 303, 304, 305, 306, 309, 312, 314], "compos": [2, 102], "store": [2, 304], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 300, 305, 309], "learn": [2, 4, 305, 309], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 299, 300, 301], "env": [3, 310, 314, 315], "vector": [3, 314], "multi": [3, 299, 300, 308, 309], "agent": [3, 4, 299, 300, 309], "environ": [3, 4, 6, 7, 303, 304, 305, 306, 308, 309, 310, 314, 315], "transform": [3, 133, 303, 305, 309, 310, 312, 314, 315], "clone": [3, 7], "record": [3, 275, 301, 303], "domain": [3, 299], "specif": [3, 299, 308], "librari": [3, 314], "thing": [4, 303, 310], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 314], "gener": [4, 299], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 303, 310], "algorithm": [4, 299], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 303, 304], "return": [4, 300], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 303, 305, 306, 308, 309, 310], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 314], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "action": [4, 306, 310], "magnitud": 4, "task": [4, 308], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 303, 304, 305], "standard": 4, "explor": [4, 299, 303, 304], "valu": [4, 299, 300, 303, 305, 306], "loss": [4, 303, 304, 305, 306, 309], "earli": 4, "train": [4, 8, 300, 303, 305, 306, 309, 310], "roughli": 4, "uniformli": 4, "random": [4, 309], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 304], "increas": 4, "an": [4, 305, 306, 310], "dynam": [4, 312], "can": 4, "low": 4, "forward": [4, 303], "model": [4, 299, 303, 304, 306, 311, 314], "also": 4, "us": [4, 6, 9, 306, 311, 312, 314], "offlin": 4, "observ": [4, 303], "space": 4, "effect": [4, 310], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 315], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 314], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 309, 315], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 303], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 310], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 303, 312], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "envbas": [67, 310], "envcreat": 68, "envmetadata": 69, "gymlikeenv": 70, "marlgroupmaptyp": 71, "modelbasedenvbas": 72, "multithreadedenv": 73, "parallelenv": 74, "serialenv": 75, "check_marl_group": 76, "braxenv": 77, "braxwrapp": 78, "dmcontrolenv": 79, "dmcontrolwrapp": 80, "gymenv": 81, "gymwrapp": 82, "mogymenv": 83, "mogymwrapp": 84, "gym_backend": 85, "set_gym_backend": 86, "habitatenv": 87, "jumanjienv": 88, "jumanjiwrapp": 89, "openmlenv": 90, "pettingzooenv": 91, "pettingzoowrapp": 92, "vmasenv": 93, "vmaswrapp": 94, "dreamerenv": 95, "actionmask": 96, "binarizereward": 97, "catfram": [98, 312], "cattensor": 99, "centercrop": 100, "cliptransform": 101, "dtypecasttransform": 103, "devicecasttransform": 104, "discreteactionproject": 105, "doubletofloat": 106, "excludetransform": 107, "finitetensordictcheck": 108, "flattenobserv": 109, "frameskiptransform": 110, "grayscal": 111, "inittrack": 112, "klrewardtransform": 113, "noopresetenv": 114, "observationnorm": 115, "observationtransform": 116, "pinmemorytransform": 117, "r3mtransform": 118, "randomcroptensordict": 119, "renametransform": 120, "resiz": 121, "reward2gotransform": 122, "rewardclip": 123, "rewardsc": 124, "rewardsum": 125, "selecttransform": 126, "squeezetransform": 127, "stepcount": 128, "targetreturn": 129, "tensordictprim": 130, "timemaxpool": 131, "totensorimag": 132, "transformedenv": 134, "unsqueezetransform": 135, "vc1transform": 136, "viprewardtransform": 137, "viptransform": 138, "vecnorm": [139, 315], "gsdenois": 140, "check_env_spec": 141, "exploration_mod": 142, "exploration_typ": 143, "get_available_librari": 144, "make_composite_from_td": 145, "set_exploration_mod": 146, "set_exploration_typ": 147, "step_mdp": 148, "cemplann": 149, "convnet": 150, "dtactor": 151, "ddpgcnnactor": 152, "ddpgcnnqnet": 153, "ddpgmlpactor": 154, "ddpgmlpqnet": 155, "decisiontransform": 156, "delta": 157, "distributionaldqnnet": 158, "distributionalqvaluehook": 159, "dreameractor": 160, "duelingcnndqnet": 161, "independentnorm": 162, "lstmmodul": 163, "lstmnet": 164, "mlp": [165, 306], "mpcplannerbas": 166, "mppiplann": 167, "maskedcategor": 168, "maskedonehotcategor": 169, "multiagentmlp": 170, "noisylazylinear": 171, "noisylinear": 172, "normalparamwrapp": 173, "obsdecod": 174, "obsencod": 175, "onehotcategor": 176, "onlinedtactor": 177, "qmixer": [178, 300], "qvaluehook": 179, "rssmposterior": 180, "rssmprior": 181, "squeeze2dlay": 182, "squeezelay": 183, "tanhdelta": 184, "tanhnorm": 185, "truncatednorm": 186, "vdnmixer": 187, "vmapmodul": 188, "reset_nois": 189, "actor": [190, 299, 303], "actorcriticoper": 191, "actorcriticwrapp": 192, "actorvalueoper": 193, "additivegaussianwrapp": 194, "decisiontransformerinferencewrapp": 195, "distributionalqvalueactor": 196, "distributionalqvaluemodul": 197, "egreedymodul": 198, "lmheadactorvalueoper": 199, "ornsteinuhlenbeckprocesswrapp": 200, "probabilisticactor": 201, "qvalueactor": 202, "qvaluemodul": 203, "safemodul": [204, 299], "safeprobabilisticmodul": 205, "safeprobabilistictensordictsequenti": 206, "safesequenti": 207, "tanhmodul": 208, "valueoper": 209, "worldmodelwrapp": 210, "biased_softplu": 211, "inv_softplu": 212, "map": 213, "a2closs": 214, "cqlloss": 215, "clipppoloss": 216, "ddpgloss": 217, "dqnloss": 218, "dtloss": 219, "discretesacloss": 220, "distributionaldqnloss": 221, "dreameractorloss": 222, "dreamermodelloss": 223, "dreamervalueloss": 224, "hardupd": 225, "iqlloss": 226, "klpenppoloss": 227, "lossmodul": [228, 303], "onlinedtloss": 229, "ppoloss": 230, "redqloss": 231, "reinforceloss": 232, "sacloss": 233, "softupd": 234, "td3loss": 235, "valueestim": 236, "default_value_kwarg": 237, "distance_loss": 238, "hold_out_net": 239, "hold_out_param": 240, "qmixerloss": 241, "next_state_valu": 242, "gae": 243, "td0estim": 244, "td1estim": 245, "tdlambdaestim": 246, "valueestimatorbas": 247, "generalized_advantage_estim": 248, "reward2go": 249, "td0_advantage_estim": 250, "td0_return_estim": 251, "td1_advantage_estim": 252, "td1_return_estim": 253, "td_lambda_advantage_estim": 254, "td_lambda_return_estim": 255, "vec_generalized_advantage_estim": 256, "vec_td1_advantage_estim": 257, "vec_td1_return_estim": 258, "vec_td_lambda_advantage_estim": 259, "vec_td_lambda_return_estim": 260, "tensordictrecord": 261, "videorecord": 262, "logger": [263, 301], "csvlogger": 264, "generate_exp_nam": 265, "get_logg": 266, "mlflowlogg": 267, "tensorboardlogg": 268, "wandblogg": 269, "batchsubsampl": 270, "clearcudacach": 271, "countframeslog": 272, "logreward": 273, "optimizerhook": 274, "replaybuffertrain": 276, "rewardnorm": 277, "selectkei": 278, "trainer": [279, 301, 304], "trainerhookbas": 280, "updateweight": 281, "correct_for_frame_skip": 282, "get_stats_random_rollout": 283, "make_collector_offpolici": 284, "make_collector_onpolici": 285, "make_dqn_loss": 286, "make_redq_loss": 287, "make_redq_model": 288, "make_replay_buff": 289, "make_target_updat": 290, "make_train": 291, "parallel_env_constructor": 292, "sync_async_collector": 293, "sync_sync_collector": 294, "transformed_env_constructor": 295, "readm": [296, 307], "tuto": [296, 307], "api": 297, "contribut": [298, 314], "content": 298, "modul": [299, 303, 306, 314], "tensordict": [299, 312, 314], "wrapper": 299, "probabilist": 299, "q": [299, 304, 306], "oper": 299, "join": 299, "hook": [299, 301, 304], "regular": 299, "planner": 299, "object": [300, 303, 314], "dqn": [300, 304, 306], "ddpg": [300, 303], "sac": 300, "redq": 300, "iql": 300, "cql": 300, "dt": 300, "td3": 300, "ppo": [300, 305, 309], "a2c": 300, "dreamer": 300, "checkpoint": 301, "builder": 301, "_util": 302, "code": [303, 310], "setup": [303, 306], "The": 303, "__init__": 303, "method": 303, "estim": 303, "put": 303, "togeth": [303, 310], "call": 303, "parallel": [303, 308, 315], "execut": [303, 308, 310], "stat": 303, "build": [303, 304, 312], "evalu": 303, "batch": [303, 310, 312], "size": [303, 312], "construct": 303, "target": [303, 304], "network": [303, 304, 305, 306, 309], "updat": 303, "time": [303, 313], "experi": [303, 310], "result": [303, 305, 309], "conclus": [303, 304, 305, 306, 309, 310, 312], "A": [304, 312], "exampl": [304, 312], "comput": [304, 310, 313], "deep": 304, "collect": [304, 305], "paramet": [304, 305], "hyperparamet": [304, 305, 309], "regist": 304, "possibl": 304, "improv": 304, "defin": [305, 309], "loop": [305, 306, 309, 310], "next": [305, 309], "step": [305, 309, 315], "recurr": 306, "convolut": 306, "lstm": 306, "select": 306, "divers": 308, "rollout": [308, 309, 310, 315], "critic": 309, "pendulum": 310, "write": 310, "_step": 310, "reset": [310, 315], "simul": 310, "_reset": 310, "metadata": 310, "_spec": 310, "spec": [310, 315], "shape": 310, "seed": [310, 315], "wrap": 310, "class": [310, 314], "test": 310, "our": 310, "custom": [310, 312], "simpl": 310, "pretrain": 311, "vanilla": 312, "integr": 312, "tensorclass": 312, "sampl": 312, "iter": 312, "over": 312, "fix": 312, "priorit": 312, "save": 312, "raw": 312, "imag": 312, "more": 312, "complex": 312, "introduct": 314, "config": 314, "tensordictmodul": 314, "sequenc": 314, "program": 314, "ensembl": 314, "meta": 314, "special": 314, "state": 314, "frame_skip": 315, "deepmind": 315, "control": 315, "devic": 315, "run": 315, "close": 315, "access": 315, "attribut": 315, "kwarg": 315}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})