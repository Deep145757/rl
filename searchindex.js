Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.gym.MOGymEnv", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper", "reference/generated/torchrl.envs.libs.gym.gym_backend", "reference/generated/torchrl.envs.libs.gym.set_gym_backend", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.MOGymEnv.rst", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.gym_backend.rst", "reference/generated/torchrl.envs.libs.gym.set_gym_backend.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "MOGymEnv", "MOGymWrapper", "gym_backend", "set_gym_backend", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 88, 92, 94, 96, 98, 100, 101, 103, 109, 110, 113, 114, 115, 117, 125, 127, 128, 129, 131, 134, 136, 145, 147, 148, 149, 150, 158, 159, 160, 161, 164, 165, 169, 176, 177, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 204, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 256, 259, 268, 269, 273, 274, 277, 286, 287, 288, 289, 292, 293, 294, 297, 298, 302, 303, 305, 306, 308, 309], "open": [0, 5, 7, 11, 298, 303, 308], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309], "reinforc": [0, 3, 9, 94, 147, 148, 149, 150, 154, 191, 194, 208, 209, 213, 215, 219, 220, 226, 227, 228, 291, 298, 301, 304, 307, 308], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 94, 147, 148, 149, 150, 154, 162, 166, 191, 194, 208, 209, 213, 215, 219, 220, 225, 226, 227, 228, 291, 293, 294, 297, 298, 300, 301, 302, 304, 306, 307, 308, 309], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 71, 124, 166, 184, 195, 203, 208, 222, 224, 264, 292, 293, 294, 295, 297, 298, 299, 303, 305, 306, 309], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 72, 139, 291, 292, 293, 296, 297, 298, 299, 303, 304, 309], "pytorch": [0, 1, 2, 3, 127, 165, 166, 273, 292, 295, 297, 299, 300, 303, 304, 305, 308, 309], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 67, 70, 71, 72, 73, 74, 85, 108, 110, 114, 124, 129, 136, 147, 149, 155, 164, 172, 174, 175, 181, 182, 191, 194, 197, 199, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 236, 237, 269, 282, 292, 293, 294, 297, 298, 300, 303, 304, 305, 306, 308, 309], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 67, 70, 71, 72, 73, 74, 95, 96, 98, 101, 104, 109, 110, 113, 114, 117, 120, 125, 129, 131, 133, 134, 145, 151, 154, 158, 159, 160, 161, 163, 164, 182, 184, 188, 191, 192, 194, 195, 196, 197, 202, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 256, 260, 264, 270, 277, 282, 285, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "python": [0, 3, 5, 6, 7, 10, 21, 84, 163, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 70, 94, 95, 104, 110, 113, 114, 127, 129, 131, 158, 160, 164, 165, 169, 184, 189, 190, 191, 195, 196, 198, 199, 210, 217, 221, 222, 224, 255, 272, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "low": [0, 100, 191, 202, 297, 298, 304, 308], "high": [0, 9, 41, 100, 109, 191, 202, 237, 242, 250, 297, 298, 306, 308], "level": [0, 3, 4, 22, 26, 28, 94, 221, 297, 298, 308], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 67, 111, 161, 241, 265, 274, 295, 299, 304, 308], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 67, 68, 70, 71, 72, 73, 74, 88, 97, 98, 100, 101, 103, 104, 108, 109, 113, 120, 125, 127, 128, 129, 130, 131, 133, 134, 140, 144, 150, 152, 158, 159, 161, 163, 166, 170, 172, 175, 189, 190, 194, 195, 196, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 232, 235, 236, 237, 238, 239, 240, 241, 270, 285, 289, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 100, 182, 222, 293, 308], "effici": [0, 1, 2, 4, 8, 166, 293, 297, 298, 299, 300, 302, 303, 305, 306, 308], "modular": [0, 201, 306, 308], "document": [0, 5, 7, 18, 19, 21, 32, 67, 70, 72, 73, 74, 129, 298, 308], "properli": [0, 67, 70, 72, 73, 74, 299, 303, 304, 308], "test": [0, 3, 5, 131, 136, 158, 159, 269, 285, 299, 300, 308], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 72, 73, 74, 94, 97, 98, 101, 102, 110, 113, 117, 119, 121, 124, 125, 128, 129, 131, 133, 143, 144, 147, 148, 149, 150, 151, 158, 159, 161, 162, 163, 166, 167, 173, 174, 175, 184, 185, 189, 191, 194, 195, 197, 198, 199, 201, 203, 204, 205, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 243, 258, 261, 262, 263, 264, 268, 285, 287, 288, 293, 294, 295, 298, 299, 300, 303, 304, 305, 306, 308, 309], "code": [0, 3, 5, 7, 8, 113, 131, 158, 201, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309], "aim": [0, 3, 7, 28, 29, 113, 131, 133, 160, 276, 292, 293, 294, 297, 298, 308], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 72, 88, 110, 128, 139, 154, 182, 190, 191, 198, 201, 215, 237, 238, 239, 240, 261, 293, 295, 299, 300, 303, 304, 306, 308], "research": [0, 7, 9, 308], "most": [0, 3, 7, 8, 32, 100, 297, 299, 304, 308, 309], "written": [0, 3, 34, 36, 39, 45, 52, 55, 67, 70, 72, 73, 74, 94, 108, 120, 123, 126, 143, 184, 194, 195, 198, 199, 203, 208, 210, 221, 224, 226, 236, 255, 256, 293, 294, 295, 297, 300, 302, 304, 308], "highli": [0, 2, 308, 309], "wai": [0, 3, 4, 113, 115, 133, 224, 237, 238, 239, 240, 293, 297, 298, 299, 302, 303, 304, 305, 306, 308, 309], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 67, 68, 70, 72, 73, 74, 84, 94, 97, 98, 100, 101, 109, 110, 113, 114, 117, 120, 124, 125, 128, 129, 131, 133, 134, 144, 157, 158, 161, 162, 164, 166, 167, 180, 182, 184, 188, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 269, 282, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "easili": [0, 3, 7, 282, 294, 297, 298, 299, 303, 308, 309], "swap": [0, 3, 299, 305, 308], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 154, 173, 190, 191, 197, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 268, 273, 297, 298, 299, 300, 302, 303, 304, 305, 308], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 146, 147, 151, 154, 155, 171, 172, 173, 181, 189, 193, 202, 205, 207, 213, 223, 256, 270, 282, 289, 291, 298, 300, 301, 305, 307], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 72, 73, 74, 98, 101, 129, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 181, 182, 188, 189, 191, 192, 194, 197, 202, 205, 221, 256, 297, 298, 300, 302, 303, 304, 305, 306, 308, 309], "write": [0, 3, 8, 23, 32, 37, 45, 70, 112, 184, 198, 199, 201, 203, 209, 211, 212, 214, 220, 225, 227, 229, 236, 241, 256, 293, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 67, 70, 72, 73, 74, 120, 128, 134, 143, 158, 194, 198, 199, 204, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 297, 299, 300, 303, 304, 308, 309], "ones": [0, 15, 26, 32, 35, 41, 42, 67, 70, 72, 73, 74, 95, 97, 98, 99, 101, 110, 113, 117, 124, 125, 128, 129, 131, 133, 163, 182, 198, 208, 209, 211, 220, 224, 225, 227, 229, 243, 297, 299, 303, 304, 306, 308, 309], "littl": [0, 3, 43, 299, 300, 306, 308, 309], "effort": [0, 3, 304, 306, 308], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 84, 85, 92, 94, 95, 97, 98, 99, 100, 101, 103, 105, 107, 108, 110, 113, 114, 115, 117, 120, 121, 125, 126, 128, 129, 131, 132, 133, 134, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 237, 238, 239, 240, 241, 255, 264, 266, 269, 270, 273, 275, 276, 277, 282, 285, 289, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "repo": [0, 6, 52, 131, 292, 303, 308], "attempt": [0, 188, 192, 194, 212, 220, 235, 308], "align": [0, 308], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 67, 70, 72, 73, 74, 95, 99, 129, 277, 289, 303, 308, 309], "ecosystem": [0, 308], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 67, 68, 70, 72, 73, 74, 94, 125, 129, 158, 188, 191, 192, 194, 199, 221, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 88, 134, 291, 297, 298, 305, 306, 308, 309], "pillar": [0, 308], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 105, 109, 110, 113, 114, 124, 128, 129, 131, 134, 136, 144, 158, 159, 161, 162, 188, 192, 194, 216, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 264, 266, 269, 276, 277, 278, 279, 282, 285, 286, 287, 288, 289, 291, 292, 293, 301, 305, 306, 307], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 67, 70, 71, 72, 73, 74, 98, 113, 125, 131, 133, 135, 145, 146, 151, 158, 160, 161, 162, 164, 171, 172, 181, 185, 186, 187, 193, 198, 204, 208, 209, 210, 212, 213, 216, 217, 218, 220, 221, 222, 224, 225, 227, 235, 273, 278, 279, 280, 281, 282, 291, 292, 295, 299, 301, 303, 304, 306, 307, 309], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 88, 92, 94, 98, 99, 101, 108, 110, 117, 123, 136, 140, 144, 154, 158, 159, 162, 164, 173, 182, 184, 190, 192, 194, 195, 196, 198, 201, 202, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 264, 270, 273, 275, 278, 285, 287, 288, 289, 291, 293, 294, 295, 300, 304, 305, 306, 309], "util": [0, 3, 17, 23, 32, 40, 67, 70, 72, 73, 74, 113, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 151, 205, 206, 207, 222, 285, 291, 296, 297, 299, 303, 304, 308, 309], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 67, 68, 70, 72, 73, 74, 95, 97, 104, 110, 113, 120, 125, 128, 129, 131, 133, 136, 157, 158, 162, 164, 167, 173, 179, 180, 189, 191, 195, 197, 198, 199, 236, 237, 238, 239, 240, 264, 276, 288, 293, 297, 298, 299, 303, 304, 305, 308, 309], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 67, 68, 70, 72, 73, 74, 95, 97, 104, 110, 113, 120, 125, 128, 129, 131, 133, 136, 157, 158, 162, 164, 179, 180, 189, 195, 198, 199, 236, 246, 247, 248, 249, 251, 252, 253, 254, 288, 293, 297, 298, 299, 303, 304, 305, 308, 309], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 94, 117, 123, 194, 270, 273, 275, 278, 279, 285, 287, 288, 291, 295, 306, 309], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 67, 70, 71, 72, 73, 74, 97, 98, 101, 113, 125, 128, 129, 131, 133, 134, 143, 144, 145, 160, 162, 164, 184, 190, 191, 195, 197, 198, 203, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 243, 260, 264, 276, 282, 285, 286, 287, 288, 289, 293, 294, 295, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 67, 70, 72, 73, 74, 108, 129, 160, 164, 297, 298, 299, 306, 308, 309], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 67, 70, 72, 73, 74, 94, 98, 101, 108, 109, 110, 124, 125, 128, 129, 134, 136, 145, 159, 160, 164, 182, 200, 201, 208, 210, 221, 224, 232, 235, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 264, 273, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "few": [0, 2, 8, 264, 299, 300, 303, 306, 308, 309], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 98, 101, 203, 224, 293, 297, 299, 300, 303, 304, 308, 309], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 145, 198, 269, 273, 293, 297, 299, 300, 303, 304, 306, 308, 309], "standard": [0, 3, 110, 119, 134, 144, 155, 162, 165, 166, 188, 189, 229, 237, 238, 239, 240, 297, 298, 303, 306, 308], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 127, 273, 304, 306, 308, 309], "common": [0, 3, 4, 21, 70, 73, 74, 92, 185, 186, 187, 193, 208, 209, 210, 214, 220, 221, 224, 225, 226, 227, 229, 285, 292, 293, 295, 297, 299, 302, 303, 305, 308, 309], "openai": [0, 7, 79, 80, 299, 304, 308, 309], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 94, 107, 108, 110, 115, 117, 125, 128, 134, 158, 282, 285, 292, 297, 298, 299, 300, 304, 305, 306, 308], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 94, 95, 97, 98, 100, 101, 104, 110, 113, 114, 117, 124, 125, 128, 129, 131, 133, 134, 158, 159, 164, 184, 189, 190, 195, 196, 198, 199, 200, 201, 208, 210, 211, 214, 220, 221, 222, 224, 225, 226, 227, 228, 229, 237, 238, 239, 240, 241, 277, 295, 297, 298, 299, 300, 302, 303, 304, 306, 308, 309], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 68, 70, 71, 72, 73, 74, 77, 88, 93, 94, 95, 96, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 178, 179, 180, 182, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 261, 264, 266, 267, 268, 269, 270, 271, 273, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 289, 293, 300, 303, 304, 306, 308], "On": [0, 3, 7, 18, 19, 20, 21, 293, 298, 303], "end": [0, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 124, 129, 145, 161, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "come": [0, 1, 3, 8, 73, 74, 98, 101, 184, 185, 186, 187, 195, 203, 297, 298, 299, 300, 303, 306, 308, 309], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 84, 92, 95, 97, 98, 101, 107, 108, 113, 123, 124, 125, 128, 129, 131, 133, 136, 141, 142, 158, 161, 164, 188, 189, 198, 222, 224, 241, 264, 269, 270, 279, 289, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "re": [0, 3, 8, 32, 62, 67, 70, 72, 73, 74, 158, 163, 195, 199, 295, 297, 299, 300, 302, 304, 308, 309], "usabl": [0, 295, 300, 308], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 84, 98, 101, 129, 134, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 163, 164, 167, 168, 169, 170, 171, 174, 175, 177, 180, 182, 185, 186, 187, 188, 189, 191, 192, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 282, 285, 291, 293, 297, 300, 302, 304, 306, 309], "cost": [0, 2, 27, 297, 298, 303, 304, 306], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 143, 144, 146, 147, 148, 149, 150, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 167, 170, 171, 172, 174, 175, 178, 179, 180, 181, 184, 185, 186, 187, 189, 195, 197, 198, 199, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 232, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 273, 276, 278, 282, 285, 286, 287, 288, 289, 291, 293, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 67, 68, 70, 72, 73, 74, 134, 164, 191, 194, 197, 295, 297, 298, 300, 303, 304, 305, 306, 308, 309], "good": [0, 1, 4, 9, 297, 299, 300, 303, 308, 309], "runtim": [0, 3, 32, 67, 70, 72, 73, 74, 304], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 67, 70, 72, 73, 74, 98, 101, 109, 129, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 217, 224, 269, 273, 294, 297, 298, 299, 300, 302, 303, 304, 309], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 67, 70, 72, 73, 74, 134, 185, 186, 187, 194, 214, 222, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 293, 294, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 112, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 131, 132, 134, 170, 184, 185, 186, 187, 190, 195, 198, 199, 201, 203, 204, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 256, 269, 273, 282, 293, 297, 298, 299, 300, 302, 303, 304, 305, 309], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 127, 131, 135, 154, 160, 165, 167, 184, 188, 190, 191, 192, 198, 203, 208, 215, 222, 224, 237, 242, 250, 268, 292, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 309], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 294, 297, 298, 299, 303, 304, 308, 309], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 295, 297, 302, 305, 309], "beyond": 0, "api": [0, 3, 5, 113, 133, 294, 295, 303, 304, 308, 309], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 67, 68, 70, 71, 72, 73, 74, 94, 95, 103, 108, 114, 136, 158, 184, 190, 191, 195, 196, 197, 198, 199, 293, 294, 298, 299, 300, 302, 303, 304, 305, 306, 309], "paper": [0, 113, 131, 133, 172, 181, 219, 282, 297, 299, 303], "ppo": [0, 4, 8, 195, 199, 210, 221, 224, 291, 293, 297, 298, 301, 307], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 94, 97, 107, 108, 110, 115, 117, 125, 128, 129, 134, 158, 285, 293, 298, 299, 301, 307, 308, 309], "your": [0, 2, 3, 7, 8, 10, 18, 32, 67, 70, 72, 73, 74, 134, 289, 292, 293, 294, 298, 299, 300, 301, 303, 306, 307, 308], "introduct": [0, 294, 301, 303, 307, 309], "multi": [0, 7, 9, 28, 29, 32, 67, 70, 72, 73, 74, 158, 159, 160, 164, 235, 237, 238, 239, 240, 291, 297, 298, 299, 300, 301, 304, 307, 308], "agent": [0, 9, 28, 29, 124, 163, 164, 166, 172, 181, 235, 291, 301, 304, 307], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 158, 161, 162, 198, 222, 255, 277, 278, 279, 282, 285, 287, 288, 289, 291, 293, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 67, 68, 70, 71, 72, 73, 74, 77, 84, 88, 92, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 110, 113, 114, 115, 117, 124, 125, 127, 128, 129, 131, 133, 134, 136, 141, 142, 143, 144, 145, 146, 147, 148, 151, 154, 155, 157, 158, 160, 161, 162, 164, 166, 167, 171, 172, 173, 179, 180, 181, 182, 184, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 250, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 283, 285, 289, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 307, 309], "pretrain": [0, 301, 307], "recurr": [0, 158, 175, 298, 301, 306, 307], "dqn": [0, 154, 190, 191, 208, 209, 211, 212, 214, 215, 216, 219, 220, 222, 224, 225, 226, 227, 228, 229, 235, 280, 291, 293, 301, 307], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 67, 70, 72, 73, 74, 98, 105, 113, 124, 129, 131, 133, 136, 147, 149, 158, 188, 192, 194, 208, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 237, 273, 275, 285, 291, 295, 298, 301, 305, 306, 307, 309], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 67, 70, 71, 72, 73, 74, 100, 108, 124, 141, 142, 154, 158, 164, 166, 173, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 208, 209, 210, 211, 214, 220, 221, 223, 224, 225, 226, 227, 229, 269, 275, 278, 279, 285, 287, 288, 293, 294, 295, 298, 301, 305, 306, 307, 308, 309], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 94, 100, 114, 117, 125, 209, 211, 212, 214, 220, 225, 227, 229, 270, 273, 283, 285, 291, 295, 301, 304, 305, 307], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 94, 97, 100, 113, 114, 117, 125, 128, 129, 131, 133, 198, 201, 209, 211, 212, 214, 220, 225, 227, 229, 270, 273, 283, 285, 291, 295, 301, 304, 305, 307, 309], "task": [0, 3, 9, 28, 29, 40, 45, 73, 74, 77, 113, 131, 133, 220, 297, 298, 299, 300, 301, 303, 304, 307, 308, 309], "specif": [0, 2, 5, 8, 41, 42, 70, 151, 189, 273, 291, 294, 295, 299, 300, 301, 303, 306, 307], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 98, 101, 110, 113, 128, 129, 131, 134, 162, 172, 181, 184, 185, 195, 198, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 277, 278, 279, 284, 285, 289, 291, 293, 295, 298, 299, 300, 301, 303, 304, 306, 307, 309], "ddpg": [0, 147, 148, 149, 150, 211, 219, 228, 291, 293, 298, 301, 307], "loss": [0, 3, 8, 36, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 236, 237, 268, 273, 280, 281, 282, 285, 294, 295, 301, 304, 306, 307, 308], "trainer": [0, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 297, 301, 307], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 85, 100, 105, 108, 113, 114, 115, 125, 128, 129, 131, 132, 134, 135, 136, 143, 144, 145, 154, 158, 160, 162, 163, 164, 166, 167, 182, 188, 189, 190, 191, 192, 195, 196, 199, 201, 202, 205, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 232, 235, 237, 238, 239, 240, 241, 243, 257, 258, 261, 266, 273, 275, 282, 285, 294, 297, 299, 301, 303, 304, 307, 309], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 101, 107, 108, 110, 113, 115, 117, 124, 125, 127, 128, 129, 131, 133, 134, 140, 143, 144, 145, 146, 151, 154, 158, 159, 160, 162, 164, 167, 170, 171, 172, 173, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 230, 231, 235, 237, 238, 239, 240, 243, 264, 265, 266, 267, 268, 270, 271, 272, 275, 282, 285, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309], "packag": [0, 6, 7, 10, 84, 291, 292, 309], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 94, 95, 113, 133, 145, 158, 159, 160, 164, 197, 201, 210, 212, 214, 215, 221, 224, 225, 229, 237, 238, 239, 240, 246, 247, 248, 249, 251, 252, 253, 254, 282, 289, 291, 297, 298, 299, 300, 302, 303, 304, 305, 306], "node": [0, 2, 18, 19, 20, 21, 22, 282, 291], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 108, 110, 144, 152, 153, 154, 155, 157, 162, 163, 167, 170, 171, 174, 175, 178, 179, 180, 188, 189, 190, 191, 195, 199, 200, 208, 209, 210, 214, 215, 220, 221, 224, 225, 226, 227, 229, 291, 295, 298, 299, 303, 304, 308, 309], "helper": [0, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 297, 298, 300, 304], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 67, 70, 72, 73, 74, 94, 128, 129, 134, 193, 217, 282, 291, 297, 298, 299, 300, 302, 303, 306, 308, 309], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 67, 70, 71, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 175, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 209, 212, 214, 225, 227, 229, 235, 291, 304], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 84, 92, 94, 95, 98, 99, 100, 101, 102, 107, 108, 110, 113, 114, 115, 117, 121, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 140, 143, 144, 147, 148, 149, 150, 151, 154, 157, 158, 160, 161, 162, 164, 165, 167, 171, 172, 173, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 224, 225, 226, 227, 229, 231, 235, 236, 237, 238, 239, 240, 255, 256, 264, 270, 273, 276, 277, 282, 283, 285, 286, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "human": [0, 291, 304], "feedback": [0, 291, 308], "rlhf": [0, 34, 40, 45, 54, 108, 291, 293], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 68, 70, 72, 73, 74, 92, 98, 101, 109, 115, 128, 129, 134, 136, 144, 161, 162, 269, 277, 278, 279, 282, 285, 287, 288, 289, 291, 300], "gymlikeenv": [0, 291], "envmetadata": [0, 291], "vector": [0, 1, 8, 24, 27, 33, 100, 147, 149, 160, 237, 240, 250, 251, 252, 253, 254, 291, 297, 298, 300, 302, 303, 304, 305, 309], "record": [0, 32, 67, 70, 72, 73, 74, 108, 224, 255, 256, 257, 258, 259, 260, 261, 262, 263, 285, 291, 298, 299], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 67, 70, 72, 73, 74, 100, 125, 140, 184, 190, 191, 195, 196, 197, 198, 199, 200, 201, 291, 299, 300, 303, 304, 308, 309], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 67, 70, 71, 72, 73, 74, 84, 97, 100, 108, 113, 114, 124, 125, 128, 129, 131, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 273, 280, 281, 285, 291, 294, 295, 298, 299, 302, 303, 304, 305, 306], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 143, 144, 153, 154, 158, 159, 161, 162, 172, 173, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 255, 264, 268, 269, 270, 272, 273, 282, 291, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 309], "actor": [0, 4, 15, 21, 108, 144, 146, 147, 149, 154, 155, 162, 171, 173, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 235, 282, 291, 294, 298, 299, 300, 303, 305, 308], "explor": [0, 1, 135, 166, 184, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 208, 269, 278, 279, 285, 291, 299, 300, 303, 304], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 84, 93, 94, 95, 98, 100, 101, 109, 110, 113, 114, 117, 118, 120, 125, 126, 128, 129, 133, 134, 140, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 170, 172, 173, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 264, 266, 267, 268, 269, 270, 273, 282, 285, 291, 295, 298, 302, 303, 304, 306, 308, 309], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 67, 68, 70, 71, 72, 73, 74, 97, 99, 108, 110, 115, 120, 121, 128, 152, 163, 170, 184, 195, 199, 203, 204, 225, 231, 237, 242, 250, 259, 273, 291, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309], "hook": [0, 32, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 173, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 291], "planner": [0, 144, 162, 291], "sac": [0, 214, 225, 227, 291], "redq": [0, 225, 281, 282, 291], "iql": [0, 220, 291, 303], "cql": [0, 209, 291], "dt": [0, 194, 291, 304], "td3": [0, 229, 291], "a2c": [0, 208, 291], "dreamer": [0, 91, 155, 216, 217, 218, 291, 293], "checkpoint": [0, 291, 305], "builder": [0, 291, 298, 309], "logger": [0, 256, 258, 259, 260, 261, 262, 263, 267, 273, 285, 289, 291, 298], "_util": [0, 3, 11, 291], "implement_for": [0, 3, 291], "contribut": 0, "thing": [0, 3, 7, 8, 292, 299, 300, 303, 306, 309], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 67, 70, 72, 73, 74, 100, 134, 152, 178, 292, 297, 304, 306], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 68, 70, 72, 73, 74, 88, 92, 94, 97, 98, 100, 101, 108, 109, 110, 113, 114, 120, 124, 125, 128, 129, 131, 133, 134, 141, 142, 144, 160, 161, 162, 163, 165, 173, 179, 195, 198, 199, 201, 205, 210, 212, 215, 221, 224, 230, 235, 236, 237, 238, 239, 240, 255, 256, 270, 289, 292, 293, 295, 297, 298, 299, 300, 303, 304, 305, 306, 309], "debug": [0, 6, 8, 40, 292, 309], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 67, 70, 72, 73, 74, 95, 108, 113, 131, 134, 145, 160, 191, 197, 202, 210, 221, 224, 273, 292, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "habitat": [0, 3, 85, 292, 305], "lab": [0, 3, 77, 78, 292], "mujoco": [0, 6, 8, 292, 299, 300], "error": [0, 1, 3, 7, 10, 11, 29, 32, 67, 70, 72, 73, 74, 114, 136, 292, 297, 299, 303, 309], "solut": [0, 3, 6, 7, 9, 21, 292, 293, 295, 308], "resourc": [0, 1, 21, 292, 297, 299, 303], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 67, 70, 72, 73, 74, 187, 222, 227, 237, 240, 292, 293, 297, 299, 300, 303, 304, 305, 309], "issu": [0, 4, 5, 8, 55, 56, 65, 114, 184, 190, 191, 195, 196, 197, 198, 199, 292, 308], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 67, 70, 72, 73, 74, 94, 100, 143, 163, 302, 303, 306, 308], "search": [0, 298], "page": [0, 7], "somewhat": [1, 294, 309], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 67, 70, 72, 73, 74, 99, 129, 224, 270, 308, 309], "dataload": [1, 54, 62, 298, 299, 306], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 103, 117, 158, 170, 188, 192, 194, 293, 298, 306, 308, 309], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 105, 108, 109, 110, 113, 114, 115, 117, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 143, 144, 145, 146, 147, 148, 150, 151, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 205, 208, 209, 210, 211, 212, 214, 217, 220, 221, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 243, 245, 246, 247, 251, 252, 254, 264, 269, 270, 271, 282, 285, 289, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 103, 108, 113, 128, 129, 133, 158, 159, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 270, 273, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 94, 110, 113, 133, 136, 194, 209, 211, 214, 225, 227, 229, 264, 270, 273, 275, 276, 277, 285, 295, 297, 300, 303, 304, 305, 306, 308, 309], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 67, 70, 72, 73, 74, 100, 110, 126, 143, 182, 201, 215, 217, 222, 243, 276, 295, 297, 298, 299, 303, 304, 309], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 93, 97, 104, 113, 125, 128, 129, 130, 131, 133, 143, 158, 198, 199, 208, 209, 211, 212, 214, 215, 216, 217, 220, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 293, 297, 300, 303, 304, 306, 309], "static": [1, 11, 40, 45, 134, 220, 304, 306], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 67, 68, 70, 72, 73, 74, 88, 89, 90, 95, 97, 98, 99, 100, 101, 108, 110, 113, 117, 125, 128, 129, 131, 133, 134, 140, 145, 146, 147, 148, 149, 151, 154, 156, 158, 159, 160, 163, 164, 167, 171, 182, 189, 190, 191, 192, 194, 198, 202, 203, 208, 209, 210, 211, 214, 220, 221, 224, 225, 226, 227, 229, 236, 237, 238, 239, 240, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 264, 293, 294, 297, 298, 299, 300, 302, 303, 304, 306, 307, 308, 309], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 67, 70, 72, 73, 74, 85, 124, 127, 136, 164, 193, 225, 294, 297, 299, 300, 303, 304, 305, 306, 309], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 67, 70, 72, 73, 74, 98, 100, 101, 109, 115, 129, 141, 142, 158, 194, 210, 221, 224, 256, 270, 275, 287, 288, 289, 293, 297, 298, 299, 300, 303, 304, 306], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 94, 97, 113, 125, 127, 128, 129, 131, 133, 134, 136, 145, 158, 164, 166, 172, 181, 185, 187, 188, 191, 195, 198, 199, 202, 209, 220, 222, 227, 237, 238, 239, 240, 241, 282, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 67, 70, 71, 72, 73, 74, 94, 97, 104, 113, 120, 125, 128, 129, 130, 131, 133, 182, 198, 199, 200, 222, 295, 299, 309], "two": [1, 3, 4, 8, 10, 32, 62, 67, 70, 72, 73, 74, 110, 113, 133, 150, 158, 176, 199, 221, 232, 269, 273, 282, 294, 297, 298, 299, 300, 302, 303, 304, 306, 308, 309], "main": [1, 2, 3, 5, 20, 22, 68, 199, 273, 293, 294, 297, 298, 302, 309], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 143, 145, 158, 160, 164, 165, 182, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 235, 237, 238, 239, 240, 241, 255, 266, 276, 282, 285, 286, 289, 297, 298, 299, 300, 303, 304, 306, 309], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 67, 70, 71, 72, 73, 74, 98, 101, 108, 110, 113, 120, 129, 131, 133, 134, 143, 153, 158, 160, 163, 168, 173, 191, 196, 197, 199, 201, 202, 203, 222, 234, 237, 240, 255, 269, 270, 287, 288, 293, 297, 299, 302, 304, 305, 306, 308, 309], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 128, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 282, 286, 289, 293, 297, 298, 299, 303, 306], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 67, 70, 72, 73, 74, 102, 110, 121, 145, 160, 164, 177, 184, 190, 195, 196, 198, 200, 201, 203, 222, 234, 269, 272, 273, 282, 294, 295, 297, 299, 300, 303, 304], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 92, 125, 158, 200, 201, 277, 289, 293, 295, 298, 299, 300, 303, 306, 307, 309], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 68, 70, 71, 72, 73, 74, 76, 87, 92, 104, 107, 109, 110, 123, 124, 125, 126, 129, 143, 144, 155, 158, 159, 161, 162, 188, 192, 194, 195, 199, 208, 216, 224, 236, 237, 238, 239, 240, 243, 244, 245, 255, 264, 269, 273, 295, 297, 298, 300, 302, 304, 305, 306, 308], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 67, 70, 72, 73, 74, 113, 128, 131, 134, 201, 297, 304, 308], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 67, 70, 72, 73, 74, 114, 124, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 212, 222, 237, 238, 239, 240, 241, 255, 286, 297, 298, 300, 304, 306, 309], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 67, 70, 71, 72, 73, 74, 88, 94, 100, 105, 109, 110, 119, 123, 126, 134, 144, 145, 152, 153, 155, 156, 157, 158, 160, 162, 164, 167, 168, 169, 172, 174, 175, 178, 179, 180, 181, 184, 188, 189, 192, 194, 195, 198, 199, 203, 207, 209, 214, 216, 220, 221, 223, 225, 227, 229, 264, 266, 269, 273, 275, 276, 277, 287, 288, 289, 293, 297, 298, 299, 300, 303, 304, 305, 309], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 67, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 158, 160, 165, 166, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 238, 239, 240, 270, 297, 299, 300, 303, 304, 306, 309], "deliv": [1, 16, 18, 19, 20, 297, 298, 308], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 67, 70, 72, 73, 74, 134, 158, 200, 201, 255, 264, 293, 298, 302, 304, 308], "user": [1, 2, 3, 5, 8, 21, 32, 52, 67, 70, 72, 73, 74, 124, 129, 151, 159, 224, 286, 294, 295, 297, 298, 304, 308, 309], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 92, 94, 97, 102, 104, 107, 109, 113, 120, 121, 123, 124, 125, 126, 128, 131, 132, 134, 136, 158, 183, 194, 255, 282, 297, 298, 299, 300, 302, 303, 308], "whenev": [1, 3, 32, 35, 38, 41, 42, 84, 107, 129, 222, 237, 238, 239, 240, 275, 293], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 67, 70, 72, 73, 74, 188, 192, 194, 297, 299, 303, 308, 309], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 98, 99, 101, 109, 110, 115, 117, 119, 121, 123, 125, 128, 134, 143, 144, 158, 162, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 282, 294, 297, 299, 300, 302, 303, 304, 305, 306, 308, 309], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 67, 70, 71, 72, 73, 74, 76, 87, 92, 94, 95, 97, 102, 107, 110, 115, 121, 123, 124, 128, 129, 132, 134, 143, 144, 146, 151, 155, 158, 159, 160, 162, 168, 171, 172, 174, 175, 181, 185, 198, 204, 208, 210, 221, 222, 224, 225, 226, 235, 236, 237, 238, 239, 240, 241, 243, 289, 293, 294, 297, 298, 299, 300, 303, 304, 309], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 109, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 158, 165, 188, 190, 192, 196, 217, 298, 299, 300, 303, 304, 305, 306, 309], "predefin": [1, 298, 299, 306], "becaus": [1, 3, 4, 7, 40, 67, 70, 72, 73, 74, 108, 128, 150, 159, 164, 184, 190, 191, 195, 196, 197, 198, 199, 297, 298, 300, 302, 303, 304, 306, 309], "potenti": [1, 304, 306], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 67, 70, 72, 73, 74, 110, 129, 132, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 168, 169, 171, 174, 175, 177, 179, 180, 182, 185, 188, 189, 191, 192, 194, 195, 197, 199, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 277, 294, 297, 299, 300, 302, 303, 305, 306], "heavi": [1, 8, 306], "crucial": [1, 188, 192, 194, 220, 222, 297, 298, 299, 300, 303, 304, 309], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 108, 146, 151, 171, 222, 224, 282, 293, 297, 298, 299, 303, 304], "hyperparamet": [1, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 297, 304, 306], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 125, 286, 289, 297, 306], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 77, 78, 83, 84, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 285, 286, 287, 288, 289, 293, 294, 297, 300, 303, 304, 305, 308], "take": [1, 3, 8, 23, 40, 67, 70, 72, 73, 74, 123, 124, 126, 128, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 193, 194, 197, 202, 205, 207, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 264, 275, 293, 295, 297, 298, 299, 303, 304, 306, 309], "consider": [1, 3, 8, 298, 303, 306], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 71, 72, 73, 74, 98, 101, 124, 129, 145, 158, 160, 203, 209, 210, 211, 212, 214, 215, 221, 222, 224, 225, 227, 229, 235, 237, 240, 297, 298, 299, 303, 304, 309], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 71, 72, 73, 74, 94, 97, 99, 104, 108, 110, 114, 115, 117, 120, 121, 123, 124, 128, 129, 134, 136, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 195, 197, 198, 199, 202, 205, 214, 219, 221, 222, 224, 225, 228, 236, 237, 238, 239, 240, 241, 256, 268, 269, 270, 273, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "occur": [1, 8, 14, 28, 29, 95, 110, 114, 184, 190, 191, 195, 196, 197, 198, 199, 217, 306, 309], "serial": [1, 3, 32, 67, 70, 72, 73, 74, 134], "optim": [1, 2, 8, 32, 67, 70, 72, 73, 74, 129, 144, 162, 165, 166, 209, 222, 223, 224, 227, 268, 273, 285, 294, 295, 299, 300, 303, 304], "parallel": [1, 3, 8, 17, 136, 208, 286, 287, 288, 289, 298, 299, 303], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 94, 117, 285, 288, 291, 299, 300, 303, 306], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 287, 288, 289, 293, 294, 295, 297, 298, 299, 300, 303, 306, 309], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 68, 72, 73, 74, 134, 287, 288, 289, 297, 299, 308, 309], "multisyncdatacollector": [1, 18, 19, 20, 21, 288, 291, 299, 308], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 293, 295, 299, 306, 308], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 134, 194, 275, 293, 297, 303, 304], "aggreg": [1, 145, 147, 148, 201], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 67, 68, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 109, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 143, 158, 160, 173, 189, 191, 197, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 237, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 275, 293, 298, 300, 304, 305, 308, 309], "final": [1, 3, 4, 21, 34, 36, 39, 40, 158, 188, 192, 193, 194, 200, 237, 269, 293, 297, 298, 299, 303, 304, 309], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 287, 291, 297, 298, 299, 308], "sever": [1, 8, 30, 32, 45, 67, 70, 72, 73, 74, 95, 129, 224, 297, 299, 306, 309], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 94, 104, 110, 114, 117, 125, 129, 130, 134, 152, 153, 158, 159, 163, 164, 165, 170, 172, 178, 182, 194, 198, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 264, 267, 270, 271, 272, 273, 275, 287, 288, 289, 295, 298, 299, 300, 302, 303, 305, 308, 309], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 114, 236, 277, 292, 297, 298, 299, 300, 303, 304, 306, 309], "continu": [1, 9, 25, 46, 67, 70, 72, 73, 74, 140, 147, 148, 149, 150, 194, 201, 208, 209, 214, 220, 224, 225, 226, 227, 228, 229, 237, 242, 250, 293, 297, 299, 300, 303, 304, 306, 308, 309], "concomitantli": 1, "network": [1, 4, 8, 32, 67, 70, 72, 73, 74, 145, 147, 148, 149, 150, 153, 155, 156, 160, 164, 166, 168, 169, 172, 174, 175, 176, 181, 185, 186, 187, 198, 202, 209, 210, 211, 212, 214, 215, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 233, 235, 237, 238, 239, 240, 241, 284, 285, 293, 294, 295, 302, 304, 309], "impli": [1, 309], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 158, 166, 198, 208, 209, 210, 214, 217, 275, 284, 293, 295, 297, 298, 299, 300, 302, 304, 306, 308], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 67, 70, 72, 73, 74, 108, 110, 121, 129, 130, 134, 136, 160, 294, 295, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309], "slightli": [1, 293, 294, 300, 304, 305, 306, 309], "lag": [1, 13, 14, 16, 17, 297, 298, 299], "therefor": [1, 3, 7, 67, 70, 72, 73, 74, 117, 124, 224, 235, 309], "although": [1, 8, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 295, 297, 298, 306], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 88, 94, 108, 113, 120, 123, 126, 128, 130, 133, 143, 163, 188, 192, 194, 195, 198, 199, 207, 208, 209, 210, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 294, 295, 297, 298, 299, 302, 303, 304, 306, 309], "asynchron": [1, 9, 14, 21, 32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198, 208, 287, 298, 299], "off": [1, 2, 4, 157, 180, 190, 227, 269, 278, 293, 295, 297, 298, 299, 303, 305, 309], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 67, 70, 72, 73, 74, 98, 101, 104, 110, 124, 154, 158, 164, 165, 185, 187, 189, 191, 196, 208, 215, 220, 224, 269, 293, 295, 297, 298, 299, 300, 303, 304, 305, 306, 309], "remot": [1, 18, 19, 20, 21, 73, 74, 309], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 67, 70, 71, 72, 73, 74, 89, 90, 92, 94, 98, 101, 108, 115, 136, 144, 158, 162, 194, 208, 277, 293, 297, 299, 300, 305, 306, 308], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 121, 225, 237, 238, 239, 240, 241, 294, 297, 299], "synchronis": [1, 68, 303], "either": [1, 5, 22, 32, 40, 54, 67, 70, 72, 73, 74, 124, 204, 229, 260, 295, 297, 298, 300, 305, 306, 308, 309], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 297, 303, 308], "update_at_each_batch": [1, 13, 14, 17, 297], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 89, 90, 92, 94, 95, 97, 100, 104, 107, 108, 109, 110, 113, 114, 115, 119, 123, 125, 127, 128, 129, 130, 131, 133, 134, 136, 140, 143, 144, 145, 147, 148, 149, 150, 156, 158, 160, 162, 163, 164, 165, 166, 179, 180, 184, 185, 186, 187, 188, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 211, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 237, 238, 239, 240, 243, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 266, 267, 269, 270, 273, 289, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "second": [1, 8, 158, 191, 210, 221, 224, 227, 272, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 98, 99, 101, 108, 112, 113, 115, 117, 125, 127, 128, 129, 131, 133, 140, 143, 144, 145, 146, 147, 148, 149, 150, 154, 156, 158, 159, 160, 162, 164, 165, 166, 171, 172, 173, 181, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 201, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 270, 275, 282, 283, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 67, 70, 72, 73, 74, 104, 108, 128, 153, 154, 167, 185, 186, 187, 190, 191, 193, 198, 204, 208, 210, 211, 212, 215, 221, 224, 226, 235, 236, 237, 238, 239, 240, 273, 282, 291, 295, 297, 298, 299, 300, 302, 303, 304, 309], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 67, 68, 70, 71, 72, 73, 74, 78, 94, 110, 125, 128, 134, 140, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 205, 212, 214, 222, 235, 237, 238, 239, 240, 256, 260, 269, 277, 278, 279, 282, 285, 287, 288, 293, 294, 295, 297, 299, 300, 304, 306, 309], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 98, 99, 101, 113, 115, 117, 125, 128, 129, 131, 133, 140, 143, 144, 158, 162, 165, 166, 172, 173, 181, 184, 185, 186, 187, 189, 190, 191, 195, 196, 197, 198, 201, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 270, 282, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 67, 70, 72, 73, 74, 115, 150, 158, 160, 167, 182, 184, 188, 190, 192, 198, 203, 222, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 292, 294, 297, 298, 299, 303, 304, 306, 308, 309], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 67, 68, 70, 72, 73, 74, 88, 92, 94, 98, 99, 100, 101, 109, 110, 113, 122, 128, 129, 130, 133, 134, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 164, 167, 168, 169, 170, 171, 173, 174, 175, 177, 182, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 203, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 237, 238, 239, 240, 244, 245, 266, 268, 269, 273, 277, 282, 289, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 97, 108, 112, 113, 125, 128, 129, 131, 133, 198, 265, 297, 298, 299, 300, 303, 305, 309], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 73, 74, 95, 100, 109, 120, 128, 134, 158, 159, 165, 166, 184, 190, 195, 196, 198, 199, 202, 210, 214, 221, 224, 225, 229, 243, 282, 289, 293, 295, 297, 298, 299, 303, 304, 306, 308], "infer": [1, 73, 74, 94, 124, 134, 158, 165, 189, 297, 299, 306], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 67, 70, 71, 72, 73, 74, 77, 78, 109, 110, 129, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 200, 201, 202, 205, 269, 287, 288, 289, 292, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308], "dispatch": [1, 18, 19, 20, 21, 182], "avail": [1, 3, 4, 6, 21, 62, 108, 154, 173, 195, 199, 222, 287, 288, 293, 297, 298, 299, 300, 303, 304, 306, 309], "speed": [1, 2, 4, 8, 27, 294, 297, 298, 299, 300, 303, 304, 306], "up": [1, 2, 3, 8, 9, 27, 40, 52, 128, 224, 292, 293, 294, 297, 298, 299, 300, 303, 304, 306, 309], "avoid": [1, 32, 55, 56, 65, 67, 70, 72, 73, 74, 84, 129, 134, 184, 198, 203, 210, 221, 224, 276, 299, 303], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 167, 293, 294, 297, 298, 303], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 95, 98, 101, 104, 113, 115, 117, 122, 125, 127, 128, 129, 130, 133, 134, 140, 143, 144, 145, 146, 151, 152, 154, 158, 159, 160, 162, 163, 164, 167, 170, 171, 172, 173, 174, 175, 178, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 203, 208, 209, 211, 212, 214, 220, 222, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 256, 264, 270, 282, 293, 298, 299, 300, 302, 303, 304, 305, 308, 309], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 67, 68, 69, 70, 72, 73, 74, 98, 101, 115, 128, 130, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 165, 167, 168, 169, 171, 172, 174, 175, 177, 181, 182, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 210, 221, 222, 224, 237, 238, 239, 240, 241, 270, 287, 288, 289, 293, 297, 298, 299, 300, 302, 303, 304, 306, 309], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 88, 94, 104, 130, 134, 158, 189, 208, 210, 211, 214, 220, 221, 222, 224, 225, 226, 227, 229, 237, 238, 239, 240, 293, 294, 298, 299, 303, 306], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 67, 70, 72, 73, 74, 134, 144, 159, 162, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 282, 291, 295, 297, 299, 300, 303, 305, 306, 309], "while": [1, 3, 7, 8, 32, 67, 70, 72, 73, 74, 117, 129, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 220, 221, 224, 293, 297, 299, 300, 303, 304, 305, 306, 308], "wait": [1, 20, 21, 22, 300, 304], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 67, 70, 72, 73, 74, 84, 94, 100, 110, 115, 117, 120, 121, 125, 129, 175, 200, 201, 202, 208, 209, 211, 212, 214, 220, 224, 227, 237, 244, 245, 293, 295, 297, 298, 299, 300, 302, 303, 304, 306, 309], "impact": [1, 98, 101, 298, 300, 303], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 67, 68, 70, 72, 73, 74, 94, 97, 113, 125, 128, 129, 131, 133, 134, 198, 289, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "manag": [1, 8, 233, 234, 237, 238, 239, 240, 269], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 67, 70, 72, 73, 74, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 143, 144, 153, 158, 161, 162, 173, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 256, 267, 268, 269, 271, 272, 273, 277, 282, 294, 295, 297, 299, 300, 302, 303, 304, 306, 308, 309], "control": [1, 3, 5, 8, 16, 77, 78, 100, 143, 147, 148, 149, 150, 158, 161, 162, 175, 182, 194, 198, 199, 200, 208, 210, 221, 224, 228, 237, 242, 250, 293, 295, 297, 298, 299, 303, 304, 306], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 67, 70, 72, 73, 74, 94, 95, 105, 108, 109, 110, 113, 114, 123, 125, 126, 128, 129, 131, 136, 157, 158, 163, 180, 185, 186, 187, 189, 195, 198, 199, 201, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 232, 235, 237, 238, 239, 240, 264, 268, 282, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 297, 298, 303, 308], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 67, 70, 72, 73, 74, 94, 98, 101, 105, 124, 129, 158, 269, 273, 294, 297, 298, 299, 300, 303, 304, 306, 309], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 194, 297, 309], "usual": [1, 3, 4, 6, 7, 8, 52, 67, 70, 72, 73, 74, 166, 224, 237, 238, 239, 240, 241, 255, 282, 292, 293, 295, 297, 298, 299, 300, 303, 306, 309], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 67, 68, 70, 72, 73, 74, 94, 98, 100, 101, 105, 109, 110, 128, 129, 134, 145, 158, 160, 163, 164, 189, 194, 202, 297, 298, 299, 302, 303, 305, 306, 309], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 67, 69, 70, 72, 73, 74, 94, 98, 101, 117, 291, 295, 298, 299, 300, 303, 305], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 72, 73, 74, 77, 88, 94, 95, 100, 104, 108, 109, 110, 113, 114, 117, 119, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 178, 179, 180, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 235, 236, 237, 238, 239, 240, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 285, 289, 295, 297, 298, 299, 300, 305, 306, 308, 309], "behaviour": [1, 3, 21, 70, 95, 98, 101, 110, 114, 124, 143, 157, 158, 180, 269, 293, 298, 300, 304, 306], "besid": 1, "those": [1, 5, 7, 26, 28, 73, 74, 98, 101, 110, 125, 158, 195, 199, 200, 201, 275, 287, 288, 293, 297, 298, 303, 304, 309], "choos": [1, 158, 224, 293, 294, 297, 298, 299, 303, 306], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 67, 70, 71, 72, 73, 74, 88, 108, 113, 131, 145, 158, 160, 191, 196, 197, 207, 208, 209, 210, 211, 214, 220, 221, 222, 224, 225, 226, 227, 229, 273, 282, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 306, 308, 309], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 276, 297, 299, 308], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 94, 105, 188, 192, 194, 255, 256, 266, 269, 273, 276, 277, 297, 298, 299, 300, 303, 306, 308, 309], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 70, 72, 73, 74, 88, 94, 97, 100, 104, 107, 108, 110, 112, 113, 120, 123, 125, 128, 129, 131, 133, 134, 136, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 162, 164, 165, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 198, 199, 201, 202, 205, 210, 221, 224, 236, 237, 238, 239, 240, 255, 269, 295, 298, 299, 300, 303, 304, 306, 309], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 94, 117, 276, 297, 298, 299, 300, 303, 306, 308], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 67, 68, 70, 72, 73, 74, 113, 120, 123, 124, 125, 126, 133, 134, 154, 158, 164, 168, 172, 173, 181, 188, 190, 191, 197, 201, 243, 246, 247, 248, 249, 251, 252, 253, 254, 269, 270, 287, 288, 293, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 276, 297, 298], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 67, 70, 71, 72, 73, 74, 100, 109, 110, 125, 136, 158, 195, 198, 199, 209, 225, 269, 277, 293, 297, 298, 299, 300, 304, 305, 306, 308, 309], "rand_step": [1, 3, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 107, 125, 134, 304, 308, 309], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 297], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 297, 298, 299], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 67, 70, 72, 73, 74, 114, 128, 144, 158, 162, 194, 224, 237, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 264, 291, 294, 297, 298, 299, 300, 304, 306, 308, 309], "pad": [1, 23, 37, 43, 52, 94, 145, 147, 148, 158, 159, 163, 270], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 94, 95, 110, 114, 120, 127, 158, 160, 163, 166, 190, 195, 198, 199, 222, 293, 297, 298, 300, 303, 304, 306], "mask": [1, 4, 23, 27, 30, 31, 33, 92, 114, 163, 189, 270, 298, 300, 309], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 67, 70, 72, 73, 74, 94, 97, 113, 125, 127, 128, 129, 131, 133, 161, 198, 207, 215, 273, 292, 298, 299, 302, 303, 304, 306, 309], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 70, 114, 163, 188, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 295, 300], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 67, 70, 72, 73, 74, 105, 114, 134, 154, 163, 173, 190, 191, 196, 197, 199, 232, 237, 270, 297, 299, 300, 303], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 114, 129, 145, 160, 163, 188, 192, 194, 221, 237, 238, 239, 240, 270, 295, 309], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 269, 291, 297, 298], "strategi": [1, 16, 293, 295, 297, 298, 303, 306], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 67, 70, 72, 73, 74, 113, 133, 293, 294, 297, 299, 303, 304, 306, 309], "tool": [1, 2, 3, 5, 300, 304, 306, 309], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 83, 84, 295, 297, 299, 300, 304], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 291], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 291], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 95, 97, 98, 99, 100, 101, 108, 110, 113, 115, 117, 119, 124, 125, 127, 128, 129, 131, 133, 134, 140, 143, 144, 145, 146, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 243, 264, 271, 272, 282, 285, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "multiprocess": [1, 18, 19, 20, 68, 69, 134, 298, 299, 304, 309], "synchron": [1, 13, 19, 21, 72, 287, 288, 298, 299], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 98, 101, 124, 129, 134, 137, 141, 142, 152, 157, 158, 170, 178, 179, 180, 195, 199, 222, 269, 297, 298, 300, 303, 308, 309], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 188, 192, 194, 267, 271, 297, 298, 303], "dedic": [1, 3, 18, 19, 20, 21, 185, 186, 187, 293, 297, 302, 303], "folder": [1, 298], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 67, 70, 72, 73, 74, 114, 200, 201, 264, 273, 293, 297, 298, 299, 302, 308, 309], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 67, 68, 70, 71, 72, 73, 74, 94, 97, 98, 99, 101, 103, 108, 109, 110, 113, 120, 125, 126, 128, 129, 131, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 198, 199, 201, 202, 205, 217, 222, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 268, 273, 276, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309], "variou": [1, 3, 13, 14, 16, 17, 158, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 235, 287, 288, 297, 298, 299, 303, 309], "machin": [1, 7, 18, 19, 20, 32, 53, 303], "One": [1, 2, 4, 8, 31, 33, 45, 94, 117, 131, 170, 188, 192, 198, 202, 228, 232, 260, 297, 298, 306, 309], "wonder": 1, "why": [1, 3, 304, 309], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 72, 74, 286, 291, 297, 298, 299, 302, 308, 309], "instead": [1, 4, 7, 8, 11, 27, 32, 67, 70, 72, 73, 74, 104, 125, 129, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 208, 209, 210, 212, 214, 215, 220, 221, 224, 225, 226, 227, 235, 237, 241, 289, 293, 304, 306, 309], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 67, 70, 72, 73, 74, 97, 98, 99, 101, 113, 121, 124, 125, 127, 128, 129, 131, 133, 157, 160, 175, 179, 180, 198, 201, 207, 208, 209, 211, 212, 214, 220, 222, 224, 225, 226, 227, 229, 275, 287, 288, 289, 293, 294, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309], "lower": [1, 2, 17, 21, 25, 134, 174, 175, 202, 299, 304], "io": [1, 72], "footprint": [1, 2, 306], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 63, 67, 70, 72, 73, 74, 94, 104, 113, 115, 129, 133, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 165, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 196, 197, 198, 202, 205, 207, 214, 225, 226, 227, 229, 236, 241, 256, 273, 289, 293, 294, 297, 298, 299, 300, 303, 304, 306, 308, 309], "commun": [1, 2, 3, 292, 299, 309], "yet": [1, 222, 305], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 67, 69, 70, 71, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 140, 154, 173, 175, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 282, 293, 297, 298, 299, 300, 302, 303, 308], "plai": [1, 3, 94, 298, 299, 306, 309], "role": [1, 3, 298, 309], "opposit": 1, "direct": [1, 32, 67, 70, 72, 73, 74, 222, 298], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 190, 191, 192, 194, 196, 197, 202, 205, 297, 298, 299, 300, 304, 305, 306, 308, 309], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 72, 237, 238, 239, 240, 300, 303], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 68, 73, 74, 134, 158, 164, 185, 186, 187, 208, 210, 211, 214, 220, 221, 224, 225, 226, 227, 229, 289, 293, 299, 300, 302, 303, 308, 309], "among": [1, 3, 303], "achiev": [1, 3, 4, 32, 67, 70, 72, 73, 74, 124, 270, 295, 297, 298, 299, 300, 303, 304, 309], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 52, 53, 73, 113, 128, 133, 213, 222, 294, 295, 297, 298, 299, 300, 306, 309], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 269, 294, 297, 299, 303, 306, 309], "gpu": [1, 7, 8, 32, 55, 56, 65, 67, 70, 72, 73, 74, 297, 299, 300, 303, 309], "nativ": [1, 7, 9, 67, 70, 72, 73, 74, 94, 300, 306], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 157, 179, 180, 207, 292, 297, 298, 299, 300, 303, 305, 309], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 110, 134, 144, 152, 155, 158, 159, 162, 178, 188, 195, 199, 222, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 293, 294, 297, 298, 299, 303, 304, 306, 308, 309], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 158, 184, 188, 189, 190, 192, 194, 195, 196, 198, 199, 202, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 235, 237, 238, 239, 240, 241, 286, 297, 298, 299, 303, 306, 309], "build": [1, 3, 7, 23, 26, 32, 67, 70, 72, 73, 74, 134, 144, 158, 162, 193, 195, 199, 273, 280, 281, 283, 284, 293, 295, 299, 300, 303, 304, 305, 308, 309], "central": [2, 297, 298, 303, 306], "part": [2, 4, 8, 32, 40, 67, 70, 72, 73, 74, 110, 117, 120, 158, 203, 264, 289, 297, 299, 300, 304, 309], "algorithm": [2, 3, 8, 9, 13, 14, 71, 105, 208, 224, 225, 226, 227, 264, 278, 291, 294, 295, 297, 298, 299, 300, 303, 305, 306, 308], "implement": [2, 3, 9, 11, 16, 32, 63, 67, 70, 72, 73, 74, 97, 99, 108, 115, 128, 134, 157, 178, 179, 180, 208, 209, 213, 220, 222, 223, 224, 227, 282, 293, 295, 297, 298, 299, 300, 304, 308], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 52, 62, 67, 68, 70, 72, 73, 74, 94, 108, 113, 115, 125, 131, 134, 144, 158, 159, 164, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "give": [2, 7, 41, 67, 70, 71, 72, 73, 74, 94, 292, 294, 297, 298, 303, 304, 305, 308], "abil": [2, 222, 304, 306], "veri": [2, 3, 298, 304, 306, 308, 309], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 94, 114, 117, 137, 138, 141, 142, 144, 152, 157, 162, 163, 170, 171, 174, 179, 180, 184, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 210, 211, 212, 221, 223, 224, 229, 264, 270, 273, 276, 293, 297, 298, 299, 300, 303, 305, 308, 309], "latenc": 2, "especi": [2, 3, 7, 8, 95], "larger": [2, 4, 220], "volum": 2, "lazymemmapstorag": [2, 94, 291, 297, 298, 300, 305, 306], "advis": [2, 309], "due": [2, 3, 5, 305, 306, 309], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 305, 306], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 67, 70, 72, 73, 74, 174, 175, 222, 241, 297, 298, 300, 305, 306, 308, 309], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 98, 99, 101, 120, 122, 124, 130, 144, 198, 199, 222, 228, 293, 297, 299, 300], "file": [2, 6, 7, 8, 255, 295, 298, 306, 307], "locat": [2, 7, 45, 70, 110, 119, 157, 167, 179, 180, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 297, 298, 299, 303, 306], "improv": [2, 4, 105, 208, 294, 303, 306], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 291, 306], "were": [2, 7, 73, 74, 299, 306], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 134, 195, 199, 221, 222, 224, 297, 298, 300], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 72, 94, 113, 131, 146, 147, 148, 149, 150, 151, 154, 155, 156, 162, 163, 166, 168, 169, 171, 172, 174, 175, 181, 191, 194, 208, 209, 213, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 237, 242, 250, 282, 305, 308], "github": [2, 5, 6, 7, 10, 18, 19, 20, 131, 305, 308], "com": [2, 5, 6, 7, 10, 18, 19, 20, 305, 308], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 67, 70, 71, 72, 73, 74, 97, 99, 108, 113, 115, 125, 128, 129, 131, 133, 134, 138, 142, 145, 160, 163, 164, 166, 172, 181, 188, 190, 192, 195, 198, 199, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 231, 235, 243, 282, 287, 293, 297, 298, 299, 303, 304, 306, 309], "1x": 2, "lazytensorstorag": [2, 41, 42, 117, 291, 299, 303, 306], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 88, 92, 94, 97, 100, 108, 110, 113, 115, 117, 125, 127, 128, 129, 131, 133, 140, 144, 145, 147, 148, 151, 154, 156, 158, 159, 160, 162, 163, 164, 167, 170, 172, 182, 184, 185, 186, 187, 190, 191, 195, 197, 198, 201, 202, 203, 208, 209, 211, 212, 214, 215, 216, 217, 220, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 243, 246, 247, 248, 249, 251, 252, 253, 254, 256, 272, 293, 295, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 109, 157, 179, 180, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 298, 299, 304, 306, 309], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 88, 94, 114, 145, 184, 188, 190, 198, 199, 203, 264, 297, 299, 306, 309], "pai": [2, 8, 297, 300], "attent": [2, 8, 297, 300], "alwai": [2, 3, 20, 26, 28, 32, 54, 67, 70, 72, 73, 74, 108, 109, 215, 222, 293, 294, 298, 299, 300, 303, 304, 306], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 125, 157, 172, 179, 180, 297, 300, 303, 304, 306, 308], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 94, 95, 104, 110, 114, 122, 127, 130, 134, 145, 146, 151, 158, 160, 163, 165, 166, 171, 172, 176, 177, 178, 179, 182, 190, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 289, 293, 297, 298, 299, 300, 303, 304, 306], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 99, 100, 121, 127, 131, 134, 158, 166, 167, 189, 191, 197, 199, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 237, 270, 282, 287, 288, 293, 295, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309], "word": [2, 40, 52, 222, 297, 304, 309], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 67, 68, 70, 72, 73, 74, 94, 113, 120, 128, 129, 131, 134, 140, 143, 145, 147, 148, 149, 150, 151, 156, 158, 160, 161, 164, 189, 199, 212, 215, 225, 235, 256, 270, 277, 278, 279, 285, 287, 288, 293, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309], "1m": [2, 276, 297, 299, 300, 305], "multidimension": [2, 41, 58, 306], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 151, 158, 165, 182, 189, 200, 201, 208, 210, 215, 221, 224, 236, 273, 293, 295, 297, 298, 299, 300, 304, 306, 309], "desir": [2, 3, 32, 67, 70, 72, 73, 74, 97, 110, 113, 114, 125, 128, 129, 131, 133, 141, 142, 145, 160, 164, 184, 190, 191, 195, 196, 197, 198, 199, 293, 297, 303, 304], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 67, 70, 72, 73, 74, 80, 82, 87, 110, 113, 114, 117, 131, 136, 164, 165, 190, 199, 222, 224, 237, 238, 239, 240, 270, 279, 289, 293, 294, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "do": [2, 3, 4, 7, 70, 109, 114, 134, 143, 164, 165, 186, 237, 295, 297, 298, 299, 300, 302, 303, 304, 306, 308, 309], "custom": [2, 3, 5, 32, 67, 70, 72, 73, 74, 131, 164, 202, 215, 224, 230, 289, 293, 297, 298, 299, 300, 303], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 67, 70, 72, 73, 74, 77, 100, 102, 115, 120, 121, 129, 131, 158, 196, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 241, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 282, 295, 297, 298, 299, 300, 303, 304, 309], "randomcroptensordict": [2, 297], "here": [2, 3, 4, 7, 8, 9, 10, 67, 70, 72, 73, 74, 94, 293, 294, 297, 298, 299, 300, 303, 304, 306, 308, 309], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 67, 70, 72, 73, 74, 208, 210, 219, 221, 224, 273, 292, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 167, 182, 188, 189, 192, 194, 199, 204, 237, 261, 262, 263, 289, 291, 299, 300, 303, 305, 309], "around": [2, 5, 7, 15, 17, 41, 42, 71, 199, 237, 297, 298, 303, 309], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 94, 136, 209, 220, 295, 305, 306, 308], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 67, 70, 72, 73, 74, 102, 120, 121, 143, 146, 147, 148, 149, 150, 156, 166, 171, 194, 198, 199, 200, 201, 208, 209, 210, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 289, 295, 297, 302, 303, 306, 308], "replaybuff": [2, 41, 42, 66, 94, 114, 117, 212, 215, 235, 283, 285, 291, 299, 303, 305, 306, 308], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 114, 212, 215, 235, 291, 297, 299, 303, 306], "By": [2, 3, 33, 67, 70, 72, 73, 74, 182, 199, 222, 269, 289, 297, 305, 306, 309], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 67, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 134, 140, 154, 167, 184, 185, 186, 187, 190, 195, 196, 198, 199, 201, 202, 203, 204, 235, 269, 291, 293, 294, 297, 298, 299, 300, 305], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 94, 95, 97, 98, 100, 101, 104, 107, 110, 113, 114, 115, 117, 119, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 211, 212, 214, 217, 218, 220, 222, 224, 225, 226, 227, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 282, 293, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 67, 70, 72, 73, 74, 115, 125, 143, 160, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 230, 232, 235, 293, 295, 297, 299, 300, 303, 304, 306, 309], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 273, 292, 299, 300, 303, 309], "respons": [2, 3, 8, 273, 309], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 108, 185, 186, 187, 198, 220, 282, 291, 297, 304, 308], "repositori": [2, 7, 53], "latest": [2, 10, 72, 270, 299, 303, 304, 308], "wheel": [2, 299], "publish": 2, "pypi": [2, 308], "openml": [2, 53, 88], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 160, 182, 198, 200, 201, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 293, 295, 297, 298, 299, 300, 303, 304, 306, 309], "parent": [2, 3, 21, 26, 28, 44, 67, 95, 97, 99, 104, 105, 110, 113, 125, 128, 130, 131, 185, 222, 224, 241, 297, 304, 308, 309], "subclass": [2, 3, 67, 70, 72, 73, 74, 128, 136, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 198, 199, 200, 202, 205, 222, 224, 298, 300, 304, 306], "basic": [2, 71, 293, 299, 309], "properti": [2, 3, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 128, 129, 152, 157, 165, 170, 178, 179, 180, 222, 304, 306], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 104, 106, 107, 108, 110, 111, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 143, 146, 147, 148, 149, 150, 151, 154, 158, 159, 168, 169, 171, 173, 174, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 203, 204, 208, 209, 210, 211, 212, 214, 217, 220, 221, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 256, 282, 285, 293, 295, 298, 299, 300, 302, 303, 304, 306, 308, 309], "action": [2, 3, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 67, 70, 71, 72, 73, 74, 76, 87, 89, 90, 92, 98, 100, 101, 105, 108, 109, 115, 117, 121, 129, 140, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 158, 160, 161, 162, 163, 171, 172, 173, 175, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 202, 203, 208, 209, 211, 212, 214, 220, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 282, 285, 289, 293, 294, 295, 297, 298, 299, 302, 303, 305, 306, 308, 309], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 67, 70, 72, 73, 74, 88, 90, 95, 98, 101, 108, 110, 115, 117, 125, 127, 134, 135, 136, 140, 143, 144, 146, 151, 152, 153, 158, 160, 162, 163, 164, 165, 167, 170, 171, 172, 173, 178, 181, 184, 185, 186, 187, 189, 190, 191, 195, 196, 197, 198, 201, 202, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 232, 235, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 264, 270, 273, 285, 293, 297, 298, 299, 300, 302, 303, 305, 306, 308, 309], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 97, 98, 99, 100, 101, 108, 110, 113, 115, 117, 125, 127, 128, 129, 131, 133, 136, 140, 143, 144, 154, 158, 162, 165, 166, 172, 173, 181, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 201, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 243, 282, 293, 299, 300, 302, 303, 304, 305, 306, 308, 309], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 67, 68, 70, 71, 72, 73, 74, 82, 83, 84, 92, 94, 107, 108, 110, 113, 115, 117, 125, 128, 133, 134, 140, 143, 144, 154, 158, 160, 162, 164, 167, 172, 173, 181, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 208, 209, 210, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 266, 269, 282, 285, 293, 294, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 67, 68, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 110, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 145, 152, 158, 160, 164, 178, 184, 189, 195, 196, 198, 199, 202, 203, 209, 214, 221, 223, 225, 227, 270, 275, 293, 297, 299, 302, 303, 304, 306, 308, 309], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 67, 70, 71, 72, 73, 74, 88, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 143, 145, 147, 148, 149, 150, 153, 158, 159, 160, 164, 165, 166, 173, 174, 175, 176, 177, 182, 184, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 267, 271, 276, 285, 293, 294, 295, 297, 298, 299, 300, 303, 304, 308, 309], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74, 88, 94, 97, 98, 99, 101, 108, 110, 113, 115, 126, 128, 131, 133, 136, 145, 146, 147, 148, 151, 153, 154, 155, 158, 159, 160, 164, 167, 173, 182, 184, 185, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 256, 264, 293, 294, 297, 298, 299, 300, 302, 303, 304, 305, 308, 309], "send": [2, 3, 8, 308], "receiv": [2, 3, 32, 40, 67, 70, 72, 73, 74, 124, 128, 160, 243, 294, 297, 299, 302, 304], "spawn": [2, 3, 4, 18, 22, 72, 303], "check_env_spec": [2, 3, 291, 299, 303, 304], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 70, 72, 73, 74, 94, 97, 99, 104, 108, 110, 113, 115, 116, 117, 125, 128, 129, 131, 133, 144, 159, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 241, 255, 286, 294, 295, 296, 298, 299, 300, 304, 306, 309], "saniti": [2, 3, 7, 136, 299], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 67, 70, 71, 72, 73, 74, 97, 100, 110, 113, 125, 128, 129, 131, 133, 143, 144, 154, 155, 162, 173, 177, 184, 190, 191, 194, 197, 198, 199, 200, 201, 203, 207, 211, 212, 236, 237, 238, 239, 240, 241, 243, 265, 269, 285, 293, 295, 297, 298, 299, 303, 304, 309], "techniqu": [2, 8, 298, 306], "commonli": [2, 309], "emploi": [2, 166], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 306], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 94, 98, 101, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 212, 215, 235, 293, 304, 308], "offer": [2, 3, 7, 293, 298, 304, 309], "facilit": [2, 3, 7, 112, 113, 131, 133, 185, 186, 187, 293, 297, 300, 304], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 124, 195, 199, 297, 299, 303, 304, 309], "extern": [2, 3, 98, 101, 309], "consist": [2, 3, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 108, 145, 160, 297, 298, 299, 304, 305, 309], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198, 297, 298, 309], "manner": [2, 70, 113, 131, 293, 297, 298, 299, 302, 304, 306], "handl": [3, 21, 32, 67, 70, 72, 73, 74, 134, 158, 160, 273, 287, 288, 297, 298, 299, 303, 306], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 67, 70, 72, 73, 74, 94, 100, 110, 115, 124, 129, 130, 154, 158, 160, 162, 164, 173, 220, 224, 232, 237, 238, 239, 244, 245, 269, 273, 275, 287, 288, 293, 294, 295, 297, 298, 299, 302, 303, 304, 305, 306, 309], "dm": [3, 297, 309], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 71, 72, 117, 125, 131, 132, 185, 193, 208, 209, 211, 212, 214, 216, 220, 224, 225, 226, 227, 229, 273, 282, 293, 294, 295, 297, 298, 300, 303, 304, 306, 309], "goal": [3, 4, 124, 297, 298, 299, 300, 303, 304], "abl": [3, 297, 299, 300, 302, 303, 304, 306, 308], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 136, 258, 259, 260, 261, 262, 263, 292, 298, 299, 303, 306], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 297, 299, 303, 304, 309], "simul": [3, 5, 7, 8, 91, 144, 162, 293, 297, 299, 303], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 113, 131, 136, 147, 158, 177, 199, 200, 201, 264, 276, 293, 295, 297, 298, 299, 300, 303, 304, 306, 308, 309], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 67, 70, 72, 73, 74, 125, 136, 163, 165, 166, 184, 189, 190, 191, 194, 195, 196, 197, 198, 199, 233, 234, 295, 297, 298, 299, 300, 303, 304, 306, 308, 309], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 67, 70, 72, 73, 74, 184, 190, 191, 195, 196, 197, 198, 199, 222, 237, 238, 239, 240, 241, 294, 297, 298, 304, 309], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 107, 108, 110, 115, 117, 125, 128, 134, 158, 282, 285, 297, 298, 299, 300, 302, 303, 305, 306, 308, 309], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 67, 70, 71, 72, 73, 74, 97, 100, 108, 113, 125, 128, 129, 131, 133, 144, 145, 147, 148, 149, 150, 153, 154, 155, 156, 158, 160, 162, 164, 167, 172, 173, 181, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 203, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 282, 285, 293, 294, 297, 298, 299, 300, 302, 303, 304, 305, 308], "typic": [3, 4, 8, 32, 67, 70, 72, 73, 74, 124, 209, 222, 224, 227, 293, 294, 295, 299, 303, 304], "organis": [3, 298, 304], "arbitrari": [3, 33, 73, 74, 293, 297, 298, 304], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 67, 70, 72, 73, 74, 237, 238, 239, 240, 241, 295, 298, 299, 303, 304, 306, 308], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 98, 101, 194, 237, 238, 239, 240, 241, 294, 297, 299, 300, 303, 304, 305, 306], "attribut": [3, 4, 32, 45, 67, 70, 72, 73, 74, 113, 123, 131, 158, 199, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 297, 300, 304], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 94, 98, 101, 115, 117, 125, 128, 143, 144, 151, 154, 158, 162, 172, 173, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 264, 270, 282, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 67, 70, 72, 73, 74, 94, 114, 158, 181, 185, 186, 187, 204, 293, 298, 299, 300, 303], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 67, 70, 71, 72, 73, 74, 88, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 110, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 136, 158, 164, 191, 194, 198, 201, 208, 209, 210, 211, 212, 214, 220, 221, 222, 224, 225, 226, 227, 229, 235, 277, 292, 293, 294, 295, 297, 299, 300, 303, 304, 306, 309], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74], "actual": [3, 4, 7, 17, 67, 70, 72, 73, 74, 124, 276, 294, 297, 299, 303, 304], "just": [3, 4, 67, 70, 72, 73, 74, 164, 264, 293, 295, 297, 298, 299, 300, 303, 304, 306, 308, 309], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 67, 70, 72, 73, 74, 95, 99, 110, 143, 144, 162, 195, 199, 202, 208, 209, 210, 212, 221, 224, 225, 227, 229, 235, 237, 238, 239, 240, 282, 289, 295, 298, 299, 304, 309], "care": [3, 8, 67, 70, 72, 73, 74, 128, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 297, 299, 303, 304, 306], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 67, 70, 72, 73, 74, 97, 113, 125, 127, 128, 129, 131, 133, 135, 145, 157, 160, 164, 165, 172, 180, 181, 185, 187, 198, 199, 270, 297, 298, 299, 300, 303, 304, 306, 309], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 145, 157, 160, 164, 180, 198, 270, 297, 298, 299, 300, 304], "parametr": [3, 166, 199, 209, 220, 227, 297, 299], "hardwar": 3, "observation_spec": [3, 67, 70, 71, 72, 73, 74, 92, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 110, 113, 116, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 144, 158, 162, 277, 285, 297, 299, 302, 303, 304, 309], "compositespec": [3, 28, 49, 67, 69, 70, 71, 72, 73, 74, 92, 98, 99, 100, 101, 108, 115, 123, 124, 125, 128, 140, 144, 162, 184, 188, 192, 195, 201, 202, 291, 297, 299, 303, 304, 309], "pair": [3, 32, 34, 36, 39, 52, 67, 70, 72, 73, 74, 125, 185, 195, 199, 222, 237, 238, 239, 240, 241, 293, 294, 297, 298, 299, 302, 304, 309], "state_spec": [3, 67, 70, 71, 72, 73, 74, 92, 299, 304, 309], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 88, 113, 126, 129, 131, 133, 297, 304], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 67, 70, 71, 72, 73, 74, 76, 87, 92, 94, 98, 101, 108, 117, 154, 173, 175, 184, 190, 195, 196, 209, 212, 225, 227, 229, 285, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "reward_spec": [3, 67, 70, 71, 72, 73, 74, 92, 93, 97, 98, 99, 101, 118, 119, 120, 128, 130, 144, 162, 299, 303, 304, 309], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 93, 97, 98, 99, 101, 108, 115, 117, 118, 119, 120, 121, 124, 128, 130, 132, 133, 134, 140, 143, 144, 162, 189, 204, 208, 209, 211, 212, 214, 217, 220, 222, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 266, 267, 269, 271, 289, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "done_spec": [3, 67, 70, 72, 73, 74, 98, 99, 101, 128, 299, 303, 304, 309], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 194, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 293, 303, 304, 305], "input_spec": [3, 67, 70, 71, 72, 73, 74, 97, 98, 99, 100, 110, 115, 120, 121, 123, 128, 129, 130, 144, 162, 303, 304], "full_action_spec": [3, 67, 70, 72, 73, 74, 303], "full_state_spec": [3, 67, 70, 72, 73, 74], "lock": [3, 26, 28, 67, 70, 72, 73, 74, 125, 134, 304], "modifi": [3, 7, 8, 26, 28, 32, 45, 67, 70, 72, 73, 74, 97, 104, 108, 113, 125, 128, 129, 131, 133, 189, 194, 198, 276, 282, 297, 298, 299, 303, 304], "directli": [3, 4, 8, 67, 70, 71, 72, 73, 74, 117, 222, 289, 293, 299, 303, 304, 306], "output_spec": [3, 67, 70, 72, 73, 74, 97, 99, 108, 115, 128, 129, 303, 304], "full_observation_spec": [3, 67, 70, 72, 73, 74], "full_reward_spec": [3, 67, 70, 72, 73, 74, 303], "full_done_spec": [3, 67, 70, 72, 73, 74, 303], "importantli": [3, 195, 199], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 67, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 86, 92, 94, 117, 134, 144, 145, 146, 147, 148, 151, 154, 155, 156, 159, 160, 162, 164, 167, 168, 169, 170, 171, 172, 173, 181, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 203, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 255, 293, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309], "action_s": 3, "help": [3, 4, 32, 67, 70, 72, 73, 74, 292, 294, 297, 298, 299, 300, 303], "prealloc": [3, 304], "With": [3, 124, 295, 297, 298, 303, 306, 309], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 83, 95, 96, 98, 99, 100, 101, 102, 104, 108, 109, 110, 113, 114, 120, 121, 125, 128, 129, 131, 133, 134, 143, 145, 158, 159, 160, 163, 164, 182, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 251, 252, 253, 254, 268, 270, 273, 275, 277, 282, 285, 289, 292, 297, 298, 299, 300, 302, 303, 304, 306, 308, 309], "instanti": [3, 21, 34, 36, 39, 73, 74, 128, 164, 297, 298, 303, 304, 306, 309], "0s": [3, 125, 300], "stateless": [3, 128, 297, 304, 309], "set_se": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 76, 87, 110, 115, 129, 304, 308, 309], "seed": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 77, 89, 90, 92, 98, 101, 129, 136, 273], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 67, 68, 70, 71, 72, 73, 74, 76, 87, 89, 90, 94, 98, 101, 107, 108, 115, 117, 124, 125, 134, 140, 143, 144, 158, 162, 175, 204, 208, 209, 211, 212, 214, 215, 220, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 267, 269, 271, 297, 298, 300, 302, 304, 305, 306, 308, 309], "determinist": [3, 32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 146, 155, 168, 175, 184, 192, 198, 199, 202, 209, 293, 297, 298, 300, 304, 309], "preced": [3, 159, 300], "without": [3, 7, 9, 32, 40, 67, 70, 72, 73, 74, 92, 98, 101, 127, 186, 187, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 236, 237, 238, 239, 240, 241, 285, 292, 293, 297, 298, 299, 303, 304, 306, 309], "risk": [3, 114], "overlap": [3, 41], "consecut": [3, 62, 158, 194, 300, 303, 309], "still": [3, 9, 123, 188, 221, 222, 297, 298, 300, 302, 304, 306, 309], "reproduc": [3, 94, 136, 297, 299, 303], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 25, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 67, 70, 72, 73, 74, 100, 118, 123, 124, 126, 140, 178, 179, 180, 195, 202, 209, 214, 220, 222, 223, 227, 270, 297, 298, 299, 300, 303, 304, 306, 308, 309], "max_step": [3, 13, 67, 70, 71, 72, 73, 74, 89, 90, 123, 303, 308, 309], "n": [3, 6, 7, 24, 27, 32, 33, 40, 67, 70, 72, 73, 74, 94, 100, 104, 130, 162, 194, 199, 208, 214, 222, 236, 270, 293, 295, 298, 299, 300, 303, 306, 309], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 71, 108, 158, 162, 172, 173, 181, 182, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 209, 211, 214, 216, 217, 218, 220, 222, 225, 227, 229, 235, 236, 237, 238, 239, 240, 269, 285, 293, 297, 299, 300, 302, 303, 304, 305], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 92, 104, 113, 114, 117, 129, 131, 134, 136, 145, 151, 160, 166, 189, 198, 199, 200, 201, 208, 209, 211, 212, 214, 220, 222, 224, 225, 226, 227, 229, 237, 261, 273, 292, 297, 298, 299, 303, 304, 306, 308, 309], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 67, 70, 72, 73, 74, 85, 88, 94, 131, 134, 158, 196, 208, 209, 211, 212, 214, 220, 222, 224, 225, 226, 227, 229, 232, 297, 300, 306, 308], "mark": [3, 16, 67, 70, 72, 73, 74, 158], "trail": [3, 134], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 67, 68, 70, 72, 73, 74, 84, 88, 95, 114, 125, 126, 134, 143, 155, 158, 159, 194, 210, 214, 217, 221, 222, 224, 225, 229, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 273, 293, 294, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "treat": 3, "figur": [3, 297, 299, 300, 303, 304, 309], "summar": [3, 304], "brief": [3, 299], "popul": [3, 38, 107, 125, 297, 299, 300, 304, 306], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 67, 70, 72, 73, 74, 94, 96, 98, 101, 104, 107, 110, 113, 115, 117, 123, 125, 133, 134, 143, 163, 189, 196, 197, 209, 227, 237, 238, 239, 240, 293, 297, 299, 300, 303, 304, 305, 306], "deliveri": 3, "step_mdp": [3, 158, 291, 300, 304, 308, 309], "nasium": 3, "recent": [3, 7, 11, 309], "shift": [3, 32, 205, 237, 238, 239, 240, 299], "termin": [3, 7, 32, 40, 52, 200, 297, 298, 299, 304, 308], "trust": [3, 158], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 67, 70, 72, 73, 74, 109, 123, 180, 243, 297, 299, 309], "refer": [3, 7, 8, 9, 21, 32, 40, 67, 70, 72, 73, 74, 129, 134, 144, 154, 155, 162, 163, 168, 169, 174, 175, 191, 208, 215, 216, 217, 218, 224, 237, 242, 250, 297, 299, 303], "stepcount": [3, 13, 67, 70, 72, 73, 74, 128, 297, 298, 299, 300, 303, 308], "chosen": [3, 124, 125, 172, 173, 181, 197, 282, 293], "someth": [3, 32, 67, 70, 72, 73, 74, 292, 298, 299, 304, 309], "els": [3, 168, 293, 295, 297, 298, 299, 300, 303, 304, 305], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 67, 70, 72, 73, 74, 110, 117, 191, 265, 285, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "truncated_kei": [3, 123], "look": [3, 5, 7, 8, 32, 67, 70, 72, 73, 74, 113, 114, 131, 195, 199, 200, 201, 294, 299, 300, 303, 304, 305, 306, 308, 309], "assess": [3, 297], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 291], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 104], "reli": [3, 208, 294, 297, 299, 304, 309], "traj_id": [3, 13, 14, 16, 23, 117, 300, 306, 308], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 67, 70, 72, 73, 74, 125, 129, 143, 200, 201, 292, 297, 300], "context": [3, 5, 8, 32, 67, 68, 70, 72, 73, 74, 88, 125, 130, 164, 165, 189, 233, 234, 237, 238, 239, 240, 242, 250, 269, 293, 294, 297, 298, 299, 303, 304, 305, 306], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 73, 74, 98, 101, 114, 160, 172, 199, 200, 201, 205, 237, 238, 239, 240, 293, 297, 298, 299, 302, 303, 304, 305, 306, 309], "inittrack": [3, 158, 297, 300], "our": [3, 7, 8, 18, 94, 293, 297, 298, 299, 300, 302, 303, 305, 306, 308], "tutori": [3, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 67, 68, 70, 72, 73, 74, 145, 160, 164, 294, 295, 297, 298, 299, 300, 303, 304, 306], "design": [3, 13, 14, 32, 33, 67, 70, 72, 73, 74, 94, 114, 129, 189, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 297, 298, 299, 300, 302, 303, 304, 306, 309], "scratch": [3, 8, 298, 304], "better": [3, 8, 9, 158, 294, 299, 304], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 67, 70, 72, 73, 74, 94, 104, 108, 125, 130, 134, 145, 155, 156, 158, 160, 165, 166, 199, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 289, 293, 297, 298, 299, 300, 304, 306, 309], "intens": [3, 8], "gym3": 3, "envpool": [3, 72], "interfac": [3, 88, 160, 165, 293, 297, 299, 304, 306], "simultan": [3, 20, 73, 74, 304], "often": [3, 8, 219, 273, 297, 298, 304, 306, 309], "competit": [3, 303], "advantag": [3, 8, 156, 208, 210, 221, 224, 226, 237, 238, 239, 240, 241, 242, 244, 246, 248, 250, 251, 253, 294, 295, 297, 298, 299, 300, 303, 304, 309], "scale": [3, 4, 52, 94, 108, 110, 119, 124, 127, 155, 157, 167, 174, 175, 179, 180, 185, 186, 187, 195, 199, 201, 208, 209, 220, 224, 225, 226, 227, 271, 277, 282, 289, 293, 297, 298, 299, 300, 303, 308], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 67, 70, 71, 72, 73, 74, 94, 108, 124, 128, 129, 134, 145, 163, 164, 188, 192, 195, 196, 199, 202, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235, 273, 285, 295, 297, 298, 299, 300, 303, 304, 305, 306, 309], "own": [3, 13, 14, 17, 22, 32, 67, 70, 72, 73, 74, 298, 299, 303, 304], "As": [3, 4, 67, 70, 72, 73, 74, 117, 199, 237, 293, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309], "inherit": [3, 161, 222, 295, 299, 303], "serialenv": [3, 67, 70, 72, 73, 125, 291, 309], "enjoi": 3, "exact": 3, "Of": [3, 7, 292, 304, 309], "cours": [3, 4, 292, 299, 304, 309], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 67, 70, 71, 72, 73, 74, 113, 125, 129, 133, 134, 158, 163, 194, 195, 199, 212, 214, 235, 237, 238, 239, 240, 241, 297, 298, 299, 303, 304, 305], "count": [3, 68, 123, 194, 269, 273, 276, 297, 298, 299, 300, 306, 309], "def": [3, 11, 22, 32, 67, 68, 70, 71, 72, 73, 74, 84, 92, 98, 101, 144, 154, 162, 203, 209, 211, 214, 220, 222, 225, 227, 229, 295, 297, 298, 302, 303, 304, 308, 309], "make_env": [3, 90, 134, 278, 279, 297, 298, 309], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 85, 94, 97, 107, 108, 110, 115, 117, 125, 128, 129, 134, 158, 282, 285, 291, 293, 297, 298, 299, 300, 305, 306, 308, 309], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 67, 68, 70, 72, 73, 74, 94, 107, 108, 110, 115, 117, 125, 128, 158, 232, 246, 247, 248, 249, 251, 252, 253, 254, 293, 298, 300, 304, 306, 308, 309], "from_pixel": [3, 77, 78, 94, 282, 297, 298, 300, 305, 306, 308, 309], "9": [3, 7, 32, 35, 38, 41, 124, 134, 163, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 230, 235, 294, 297, 298, 299, 303, 304, 305, 306, 307], "81": [3, 297, 298, 304, 305, 306], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 92, 93, 94, 95, 97, 99, 100, 108, 109, 110, 113, 117, 124, 125, 127, 128, 129, 131, 133, 134, 136, 144, 145, 147, 148, 150, 151, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 170, 174, 175, 178, 179, 180, 182, 184, 188, 189, 191, 192, 194, 197, 198, 201, 202, 205, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 240, 243, 244, 245, 264, 271, 285, 289, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 105, 108, 110, 125, 129, 130, 134, 145, 154, 158, 160, 163, 164, 173, 184, 190, 191, 195, 196, 197, 198, 199, 202, 203, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 228, 229, 235, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 297, 298, 299, 300, 302, 304, 306, 308], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 94, 95, 98, 99, 100, 101, 107, 110, 115, 117, 125, 127, 134, 140, 143, 145, 151, 154, 160, 163, 164, 167, 170, 173, 184, 185, 186, 187, 189, 190, 192, 194, 196, 198, 201, 203, 222, 282, 285, 293, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "simpli": [3, 6, 34, 36, 39, 45, 102, 121, 222, 293, 294, 297, 299, 303, 309], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 164, 165, 166, 172, 181, 202, 237, 238, 239, 240, 241, 243, 256, 293, 298, 305, 306], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 110, 127, 298, 306], "d": [3, 35, 53, 54, 58, 199, 308], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 68, 73, 74, 92, 95, 98, 100, 101, 108, 110, 114, 124, 125, 127, 134, 184, 192, 195, 196, 199, 237, 238, 239, 240, 241, 260, 293, 297, 298, 299, 300, 303, 304, 306, 308, 309], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 298, 303, 304], "_reset": [3, 67, 70, 71, 72, 73, 74, 92, 94, 98, 101, 144, 162, 302], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 92, 94, 95, 97, 98, 101, 104, 107, 108, 109, 110, 113, 114, 115, 117, 119, 125, 127, 128, 129, 130, 131, 133, 134, 136, 143, 144, 145, 147, 154, 157, 158, 160, 162, 163, 164, 172, 173, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 235, 237, 238, 239, 240, 246, 247, 248, 249, 251, 252, 253, 254, 266, 267, 269, 270, 271, 273, 282, 289, 293, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 98, 101, 115, 117, 125, 129, 143, 144, 154, 158, 162, 172, 173, 181, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 201, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 277, 282, 292, 293, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 92, 94, 95, 98, 100, 101, 104, 108, 109, 110, 113, 115, 117, 119, 125, 127, 129, 130, 131, 133, 134, 136, 143, 144, 145, 147, 148, 157, 158, 160, 162, 164, 165, 166, 179, 180, 184, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 235, 237, 238, 239, 240, 243, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 266, 267, 269, 270, 271, 273, 282, 289, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "pixel": [3, 7, 26, 94, 96, 104, 106, 110, 113, 116, 127, 131, 133, 147, 168, 169, 256, 282, 293, 297, 298, 300, 305, 306, 308, 309], "500": [3, 297, 298, 304, 308, 309], "uint8": [3, 47, 127, 298, 305, 306, 308, 309], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 68, 70, 71, 72, 73, 74, 83, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 104, 106, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 208, 209, 211, 212, 214, 215, 216, 220, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 282, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 303, 304, 306, 308, 309], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 98, 101, 115, 117, 125, 134, 143, 144, 154, 158, 162, 172, 173, 181, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 201, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 282, 293, 299, 300, 302, 303, 304, 305, 306, 308, 309], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 134, 158, 194, 195, 199, 297, 298, 302, 303, 309], "launch": [3, 18, 19, 20, 22], "quit": [3, 293, 297, 298, 299, 303, 309], "mani": [3, 4, 38, 67, 208, 210, 214, 221, 224, 225, 229, 293, 297, 298, 299, 303, 304, 306, 309], "start": [3, 4, 5, 13, 21, 45, 68, 143, 268, 297, 298, 303, 304, 306, 309], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 67, 70, 72, 73, 74, 125, 134, 200, 201, 299, 300, 303, 304, 309], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 117, 129, 188, 192, 194, 271, 295, 298, 299, 300, 304, 306, 309], "great": [3, 7, 8, 308], "speedup": [3, 8, 309], "precis": [3, 143, 297, 299], "anoth": [3, 8, 34, 36, 39, 67, 70, 72, 73, 74, 98, 99, 101, 125, 128, 160, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 293, 294, 297, 299, 300, 302, 303, 304, 309], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 67, 70, 72, 73, 74, 114], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 67, 68, 70, 72, 73, 74, 94, 98, 101, 113, 117, 126, 133, 134, 143, 190, 194, 198, 228, 237, 238, 239, 240, 241, 243, 273, 275, 289, 292, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 103, 109, 117, 129, 136, 188, 192, 194, 297, 299, 303, 306], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 84, 94, 98, 101, 108, 115, 134, 136, 140, 164, 167, 182, 237, 238, 239, 240, 264, 272, 302, 303, 306, 309], "mismatch": [3, 298], "mostli": [3, 17, 294, 306, 309], "purpos": [3, 7, 94, 285, 297, 299, 300, 303, 305, 309], "want": [3, 6, 7, 8, 110, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 293, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309], "subprocess": [3, 68], "addit": [3, 4, 32, 52, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 188, 189, 198, 207, 222, 237, 294, 297, 298, 303, 306], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 72, 306], "multithreadedenv": [3, 291], "underneath": 3, "higher": [3, 4, 202, 297, 298, 299, 306, 309], "restrict": [3, 298, 305, 306, 309], "flexibl": [3, 9, 72, 230, 294, 295, 306, 309], "cover": [3, 292, 299, 304, 308], "popular": [3, 293, 300, 303], "atari": [3, 4, 94, 309], "classic": [3, 71, 298], "benchmark_batched_env": 3, "py": [3, 84, 172, 181, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309], "pipelin": [3, 7, 293, 299], "seamlessli": [3, 304], "modif": [3, 5, 26, 28, 32, 67, 70, 72, 73, 74, 104, 222, 299, 304], "infrastructur": [3, 303], "view": [3, 8, 27, 32, 33, 67, 70, 72, 73, 74, 92, 154, 160, 304, 306, 308, 309], "core": [3, 8, 282, 295, 300, 308], "decis": [3, 146, 171, 189, 213, 223, 300, 303, 306], "act": [3, 4, 164, 209, 211, 220, 225, 227, 229, 300, 303], "world": [3, 5, 71, 204, 217, 303, 304, 309], "paradigm": [3, 17, 303], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 67, 70, 72, 73, 74, 100, 109, 118, 129, 136, 145, 158, 160, 164, 191, 195, 199, 208, 210, 211, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 232, 237, 269, 273, 294, 297, 298, 300, 303, 304, 309], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 67, 70, 71, 72, 73, 74, 124, 129, 134, 222, 276, 293, 295, 297, 298, 299, 300, 303, 304, 306, 309], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 73, 155, 164, 273, 287, 288, 297, 298, 299, 300, 303, 306, 308], "accommod": [3, 13, 14, 16, 17], "thank": [3, 297], "carrier": [3, 299, 300, 306], "particular": [3, 32, 45, 52, 67, 70, 72, 73, 74, 129, 294, 295, 298, 300, 302, 303, 306], "carri": [3, 21, 45, 67, 70, 72, 73, 74, 125, 222, 298, 300, 303, 304, 306], "thu": [3, 221, 303], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 293, 298, 299, 303], "hand": [3, 7, 21, 303, 304], "kept": [3, 13, 14, 16, 17, 62, 73, 74, 100, 128, 136, 143, 157, 179, 180], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 67, 70, 72, 73, 74, 99, 125, 127, 129, 136, 158, 160, 164, 195, 198, 199, 201, 202, 207, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 237, 238, 239, 240, 264, 275, 287, 288, 289, 293, 295, 297, 298, 299, 300, 303, 304, 306, 309], "let": [3, 6, 7, 32, 43, 67, 70, 72, 73, 74, 94, 158, 164, 190, 269, 294, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "understand": [3, 8, 297, 298, 303], "go": [3, 7, 114, 117, 189, 243, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "vma": [3, 89, 90, 303], "robot": [3, 5, 7, 113, 131, 133, 303], "what": [3, 8, 35, 44, 67, 70, 72, 73, 74, 125, 143, 196, 292, 293, 294, 298, 299, 300, 303, 304, 305, 306, 308, 309], "vmasenv": [3, 291, 303], "balanc": [3, 297, 298, 309], "num_env": [3, 21, 89, 90, 303], "n_agent": [3, 89, 90, 164, 172, 181, 235, 303], "5": [3, 24, 26, 28, 35, 38, 41, 42, 68, 72, 87, 89, 90, 117, 144, 145, 154, 155, 157, 159, 160, 162, 164, 168, 173, 179, 180, 189, 190, 196, 202, 221, 224, 226, 229, 293, 297, 298, 303, 304, 306, 308, 309], "td": [3, 15, 26, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 92, 95, 98, 99, 100, 101, 107, 108, 110, 117, 124, 125, 127, 129, 134, 143, 144, 154, 158, 161, 162, 172, 173, 181, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 198, 201, 203, 235, 238, 239, 240, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 264, 272, 282, 293, 294, 297, 300, 303, 304, 308, 309], "info": [3, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 89, 90, 131, 135, 303, 306], "ground_rew": 3, "pos_rew": [3, 303], "16": [3, 32, 67, 70, 72, 73, 74, 94, 297, 298, 299, 300, 304, 306, 307], "root": [3, 26, 28, 94, 143, 157, 179, 180, 300, 303, 304, 306, 309], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 104, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 298, 304], "vari": [3, 114, 303], "creation": [3, 73, 74, 297, 309], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 67, 70, 72, 73, 74, 113, 117, 120, 129, 133, 167, 173, 191, 195, 197, 198, 199, 237, 238, 239, 240, 264, 276, 297, 298, 299, 300, 303, 304, 306, 308, 309], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 68, 117, 127, 134, 221, 229, 294, 295, 297, 299, 300, 303, 304, 306, 308], "append": [3, 8, 35, 38, 41, 42, 52, 53, 68, 117, 125, 158, 190, 196, 297, 298, 299, 300, 303, 304, 305, 306, 308], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 67, 70, 72, 73, 74, 92, 212, 214, 235, 291, 299, 303, 309], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 67, 70, 72, 73, 74, 84, 134, 292, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "simpl": [3, 9, 32, 33, 67, 70, 72, 73, 74, 147, 199, 212, 222, 226, 237, 293, 294, 297, 298, 299, 303, 309], "composit": [3, 26, 28, 67, 70, 72, 73, 74, 299, 304], "prefix": [3, 23, 32, 45, 67, 70, 72, 73, 74, 129, 222, 255, 300, 309], "exactli": [3, 32, 67, 70, 72, 73, 74, 85, 129, 297, 300, 303], "action_kei": [3, 15, 67, 70, 72, 73, 74, 92, 100, 143, 144, 161, 162, 188, 192, 194, 303], "reward_kei": [3, 67, 70, 72, 73, 74, 143, 144, 162, 267, 271, 303], "done_kei": [3, 67, 70, 72, 73, 74, 143, 303], "automat": [3, 5, 55, 56, 65, 67, 70, 72, 73, 74, 98, 101, 110, 184, 195, 293, 297, 299, 303, 304, 306, 308], "right": [3, 6, 7, 40, 159, 298, 299, 303, 304, 309], "sure": [3, 4, 7, 53, 63, 117, 190, 289, 293, 297, 299, 300, 303, 304, 306, 308, 309], "set_kei": [3, 208, 209, 210, 212, 214, 215, 220, 221, 222, 224, 225, 226, 227, 235, 241, 303], "awai": [3, 299, 303], "eas": [3, 303], "access": [3, 7, 8, 32, 35, 53, 67, 70, 72, 73, 74, 113, 131, 289, 292, 297, 303, 304, 306], "leaf": [3, 26, 28, 67, 70, 72, 73, 74, 199, 303], "abov": [3, 7, 32, 67, 70, 72, 73, 74, 157, 179, 180, 207, 294, 295, 297, 299, 303, 304, 309], "would": [3, 32, 40, 67, 70, 72, 73, 74, 158, 160, 295, 298, 299, 300, 304, 306, 309], "full": [3, 67, 70, 72, 73, 74, 191, 264, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "raw": [3, 4, 40, 157, 179, 180, 298, 304], "logic": 3, "torchvis": [3, 113, 133, 308, 309], "transformedenv": [3, 13, 67, 68, 70, 72, 73, 74, 92, 94, 97, 98, 101, 104, 107, 108, 109, 110, 115, 117, 125, 128, 134, 158, 282, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "primit": [3, 4, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229], "built": [3, 5, 7, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 230, 235, 283, 285, 286, 289, 297, 298, 299, 300, 306, 309], "base_env": [3, 92, 98, 100, 101, 108, 125, 297, 298, 299, 305, 308, 309], "totensorimag": [3, 94, 298, 300, 306, 308, 309], "in_kei": [3, 13, 14, 16, 17, 21, 71, 93, 94, 95, 96, 98, 100, 101, 104, 106, 108, 110, 111, 113, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 129, 131, 133, 134, 144, 153, 158, 162, 172, 181, 182, 184, 185, 186, 187, 189, 190, 195, 196, 198, 199, 201, 202, 203, 208, 209, 210, 211, 212, 214, 220, 221, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 255, 256, 282, 285, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "resiz": [3, 94, 298, 300, 306, 309], "64": [3, 94, 147, 148, 156, 158, 164, 172, 235, 297, 298, 299, 300, 302, 304, 305, 306, 308, 309], "now": [3, 7, 35, 94, 164, 297, 298, 299, 300, 302, 303, 305, 306, 309], "appar": [3, 266], "bring": [3, 299, 309], "signific": [3, 5, 8, 299, 309], "kind": [3, 38, 44, 143, 306], "consult": 3, "interest": [3, 195, 199, 293, 298, 299, 303, 304, 309], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 71, 93, 94, 95, 96, 104, 106, 108, 110, 111, 113, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 131, 133, 144, 153, 154, 158, 162, 172, 173, 181, 182, 184, 185, 186, 187, 189, 191, 195, 196, 197, 198, 199, 201, 202, 203, 208, 209, 210, 214, 220, 221, 224, 225, 226, 227, 235, 237, 238, 239, 240, 269, 285, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "easi": [3, 5, 53, 188, 192, 194, 293, 294, 297, 298, 299, 303, 305, 306, 309], "graph": [3, 4, 8, 233, 234, 297, 304], "inv": [3, 100, 117, 304], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 134, 179, 190, 237, 268, 295, 297, 298, 299, 304, 308, 309], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 129, 184, 190, 198, 200, 201, 203, 208, 209, 211, 214, 220, 224, 225, 226, 227, 229, 298, 303], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 97, 100, 145, 201, 309], "taken": [3, 67, 70, 72, 73, 74, 163, 294, 297, 299, 300, 303, 304], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 94, 98, 101, 110, 117, 206, 220, 304], "in_keys_inv": [3, 98, 101, 110, 111, 115, 117, 128, 297, 302, 304, 309], "append_transform": [3, 35, 38, 41, 42, 52, 53, 113, 125, 131, 297, 300, 304, 308, 309], "doubletofloat": [3, 282, 297, 299, 302], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 98, 101, 110, 115, 117, 125, 127, 140, 143, 144, 154, 158, 162, 172, 173, 181, 184, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198, 201, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 282, 293, 299, 300, 302, 303, 304, 305, 306, 308, 309], "float64": [3, 32, 67, 70, 72, 73, 74, 89, 97, 98, 101, 113, 125, 128, 129, 131, 133, 198, 302, 309], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 98, 101, 129, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 295, 297, 299, 306], "manipul": [3, 4, 8, 113, 131, 309], "keep": [3, 4, 7, 8, 14, 42, 62, 110, 113, 133, 134, 143, 194, 266, 273, 297, 298, 299, 300, 303, 304, 306, 308, 309], "mind": [3, 303], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 100, 143, 293, 306], "unexpect": [3, 32, 67, 70, 72, 73, 74, 129, 309], "behviour": 3, "fortun": [3, 300], "eras": [3, 67, 70, 72, 73, 74], "ident": [3, 13, 14, 16, 32, 73, 74, 164, 237, 238, 239, 240, 287, 288, 298, 303], "alreadi": [3, 8, 11, 32, 45, 67, 70, 72, 73, 74, 125, 199, 237, 238, 239, 240, 297, 299, 303], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 67, 68, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 134, 189, 198, 270, 275, 276, 298, 299, 303, 304, 306], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 67, 70, 72, 73, 74, 97, 98, 99, 101, 108, 115, 128, 129, 134, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 294, 297, 299, 300, 303, 304, 305, 306, 309], "happen": [3, 67, 70, 72, 73, 74, 188, 298, 305, 309], "catfram": [3, 298], "hold": [3, 233, 234, 304, 306], "notic": [3, 94, 299, 304], "parenthood": 3, "reason": [3, 4, 8, 32, 67, 70, 72, 73, 74, 113, 131, 158, 294, 297, 298, 299, 304, 306], "henc": [3, 35, 114, 293, 297, 299, 303, 304], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 304], "log": [3, 4, 8, 40, 152, 153, 154, 163, 170, 180, 190, 191, 195, 199, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 266, 267, 269, 273, 285, 293, 294, 295, 297, 298, 299, 303, 304, 308], "mission": 3, "irrespect": [3, 198, 199], "dmcontrol": [3, 297], "jumanji": [3, 86, 87], "natur": [3, 297, 300], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 67, 70, 72, 73, 74, 104, 110, 114, 126, 145, 158, 159, 160, 163, 168, 176, 182, 188, 189, 192, 199, 298, 299, 300, 303, 304, 305, 306, 308, 309], "special": [3, 293, 297, 300, 309], "statu": 3, "framework": [3, 4, 9, 22, 71, 308, 309], "Its": [3, 32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 134, 198, 241], "success": [3, 94, 128, 298, 304, 306, 308], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 67, 70, 72, 73, 74, 108, 128, 188, 192, 194, 297, 298, 299, 300, 302, 303, 304, 306, 309], "foundat": [3, 5, 299, 303], "inspir": [3, 304], "howev": [3, 5, 7, 32, 67, 70, 72, 73, 74, 94, 120, 123, 124, 129, 293, 297, 298, 299, 300, 306, 309], "gone": [3, 4, 5], "sometim": [3, 300, 309], "hard": [3, 7, 219, 298, 309], "adopt": [3, 5, 297, 309], "prefer": [3, 17, 20, 35, 38, 41, 42, 114, 121, 224, 270, 293, 299, 303, 306], "moreov": 3, "maintain": [3, 5, 9, 304], "gymnasium": [3, 5, 11, 81, 82, 83, 84, 298, 299, 304, 308], "both": [3, 7, 32, 67, 68, 70, 72, 73, 74, 94, 115, 129, 145, 158, 160, 164, 185, 186, 187, 191, 197, 208, 210, 211, 214, 220, 221, 222, 224, 225, 226, 227, 229, 269, 293, 297, 299, 303, 304, 305, 306, 309], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 298, 299, 300, 303, 304, 306, 309], "decor": [3, 8, 11, 84, 222, 237, 238, 239, 240], "set_gym_backend": [3, 83, 291], "relev": [3, 40, 237, 238, 239, 240, 241, 304], "gym_backend": [3, 84, 291], "env1": [3, 302], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 67, 70, 72, 73, 74, 84, 113, 133, 162, 273, 295, 298], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 84], "__init__": [3, 7, 71, 84, 92, 98, 101, 144, 154, 162, 203, 209, 211, 214, 220, 225, 227, 229, 295, 304, 309], "env2": [3, 302], "_env": [3, 6, 309], "classic_control": 3, "pendulumenv": [3, 304], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 299], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 67, 70, 72, 73, 74, 94, 95, 123, 125, 129, 145, 160, 163, 164, 194, 196, 197, 205, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 277, 289, 292, 295, 299, 300, 304, 306, 309], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 85, 114, 124, 125, 128, 129, 137, 138, 143, 155, 159, 175, 194, 215, 259, 295, 297, 298, 299, 300, 303, 304, 308, 309], "tell": [3, 4, 7, 297, 300, 303], "mo_gymnasium": [3, 82, 83], "handi": 3, "side": [3, 4, 309], "v0": [3, 70, 79, 80, 81, 82, 86, 87, 97, 129, 134, 285], "26": [3, 297, 298, 299, 300, 303, 304, 305, 306, 307], "fun": [3, 11, 84, 299, 303], "reveal": 4, "bug": [4, 308], "curv": 4, "won": [4, 32, 67, 68, 70, 72, 73, 74, 113, 133, 273, 289, 298, 299], "exploit": 4, "video": [4, 9, 256, 269, 289, 303], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 67, 70, 72, 73, 74, 114, 196, 298, 299, 300, 303, 304], "cv": 4, "flip": 4, "imag": [4, 7, 77, 96, 113, 127, 133, 160, 297, 298, 303, 305, 309], "correspondingli": 4, "prescript": 4, "tune": [4, 108, 303, 305], "coeffici": [4, 40, 108, 303], "bonu": [4, 208, 210, 221, 224], "beta": [4, 35, 41, 58, 220, 221, 297, 298, 306, 308], "altern": [4, 27, 72, 151, 163, 207, 222, 297, 299, 303], "reduc": [4, 6, 27, 124, 298, 299], "downstream": [4, 297], "formul": [4, 303], "ob": [4, 8, 26, 28, 92, 98, 99, 101, 110, 127, 140, 143, 164, 196, 203, 209, 211, 214, 220, 225, 227, 229, 237, 238, 239, 240, 298, 302, 304, 308, 309], "rate": [4, 134, 236, 298, 299, 303], "gradient": [4, 32, 67, 70, 72, 73, 74, 129, 157, 166, 179, 180, 208, 210, 211, 214, 220, 221, 222, 224, 225, 226, 227, 229, 236, 237, 238, 239, 240, 273, 297, 299, 303, 304], "norm": [4, 8, 273, 297, 298, 299, 303, 304], "easier": [4, 293, 297], "behavior": [4, 32, 67, 70, 72, 73, 74, 129, 220, 299, 303], "local": [4, 7, 10, 16, 21, 32, 67, 70, 72, 73, 74, 129, 164, 172, 181, 235, 261, 303], "optima": 4, "sens": [4, 304], "product": [4, 9, 287, 288], "sum": [4, 21, 31, 33, 163, 181, 217, 236, 243, 294, 297, 298, 299, 300, 303, 304, 309], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 120, 134, 194, 261, 266, 298, 300, 303, 304, 306], "stat": [4, 110, 277, 289, 298, 299], "w": [4, 94, 96, 116, 127, 194, 256, 298, 300, 306], "r": [4, 32, 92, 110, 199, 207, 236, 293, 298, 304, 309], "yield": [4, 16, 21, 32, 67, 70, 72, 73, 74, 222, 297], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 67, 70, 72, 73, 74, 129, 211, 212, 299, 303, 306], "futur": [4, 32, 67, 70, 72, 73, 74, 113, 129, 133, 160, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 292, 308], "past": [4, 298, 306], "becom": [4, 21, 303, 309], "spars": [4, 300], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 67, 70, 72, 73, 74, 120, 129, 165, 166, 194, 208, 210, 212, 215, 221, 224, 235, 298, 300, 306, 309], "intermedi": [4, 158, 191, 297, 305], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 297], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 67, 70, 72, 73, 74, 160, 299, 303], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 67, 70, 72, 73, 74, 94, 95, 98, 100, 101, 110, 117, 140, 143, 144, 158, 159, 163, 164, 172, 181, 192, 194, 197, 205, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 243, 300, 308], "subtask": 4, "hierarch": [4, 308], "individu": [4, 18, 19, 20, 21, 32, 45, 67, 70, 72, 73, 74, 297, 303], "select": [4, 15, 35, 38, 41, 42, 52, 53, 92, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 131, 132, 134, 144, 158, 190, 196, 272, 297, 306], "fall": 4, "section": [4, 298, 303], "explicit": [4, 11, 45, 159, 306], "mechan": [4, 32, 67, 70, 72, 73, 74, 129, 298, 304], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 67, 70, 72, 73, 74, 220, 299, 303], "addition": 4, "timestep": [4, 40, 117, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 303], "realli": 4, "larg": [4, 27, 98, 101, 131, 298, 299, 303, 306], "target": [4, 8, 21, 32, 67, 68, 70, 72, 73, 74, 124, 128, 198, 199, 208, 209, 210, 211, 212, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 241, 276, 284, 285, 294, 295, 300, 304], "huge": [4, 164, 300], "std": [4, 110, 134, 167, 171, 188, 297, 309], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 300, 301, 302, 305, 306, 307], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 67, 70, 72, 73, 74, 110, 113, 125, 128, 129, 131, 135, 144, 162, 165, 166, 188, 192, 194, 208, 209, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235, 282, 289, 298, 300, 304, 309], "estim": [4, 108, 185, 186, 187, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 294, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "encount": [4, 292, 298, 304], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 297, 299, 303, 309], "bonus": 4, "denser": 4, "prior": [4, 175, 217, 303], "freshli": 4, "proper": [4, 6, 7, 237, 238, 239, 240, 298, 299, 303, 306], "doesn": [4, 11, 72, 98, 101], "drop": [4, 62, 143], "meant": [4, 71], "encourag": [4, 297, 298, 306], "measur": [4, 299], "novelti": 4, "revisit": 4, "previous": [4, 299, 309], "diminish": 4, "decreas": 4, "ideal": [4, 110, 304], "down": [4, 13, 14, 16, 17, 300], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 298, 299, 300, 303, 304, 308, 309], "distil": 4, "add": [4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 67, 70, 72, 73, 74, 94, 108, 158, 165, 193, 208, 268, 299, 300, 303, 304, 306, 308], "nois": [4, 135, 166, 183, 194, 225, 229, 269, 289, 297], "exploratori": [4, 208, 210, 221, 224], "could": [4, 6, 298, 299, 303, 305, 309], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 209, 211, 212, 214, 215, 220, 225, 227, 229, 235, 295, 297, 298, 306], "schedul": [4, 7, 40, 269, 299, 304], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 113, 133, 209, 211, 214, 225, 227, 229, 297, 298, 303, 306, 309], "divers": [4, 73, 74], "bootstrap": [4, 215, 238, 244, 245, 297, 300], "noisi": [4, 165, 166, 183, 293], "unstabl": [4, 157, 179, 180], "inher": 4, "stochast": [4, 108, 155, 166, 168, 175, 209, 213, 214, 220, 223, 225, 227, 293, 299, 303], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 158, 162, 185, 186, 187, 222, 225, 295, 298], "pomdp": [4, 306], "previou": [4, 10, 32, 40, 41, 125, 175, 189, 299, 300, 304, 309], "loos": [4, 293, 298, 299], "nonexist": 4, "architectur": [4, 151, 303], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 93, 94, 95, 96, 98, 100, 101, 104, 106, 110, 111, 114, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 134, 145, 152, 154, 160, 163, 164, 170, 173, 177, 189, 200, 201, 213, 255, 256, 268, 269, 270, 272, 273, 282, 293, 297, 299, 300, 302, 303, 309], "rather": [4, 115, 297, 298, 299, 303], "lstm": [4, 158, 159, 167], "explicitli": [4, 298, 300, 303, 306], "rel": [4, 125, 152, 178, 297, 298, 303, 306], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 94, 298, 299, 306, 308, 309], "compens": 4, "descent": [4, 166], "1000": [4, 38, 67, 70, 72, 73, 74, 94, 134, 194, 195, 199, 219, 297, 298, 299, 300, 305, 306], "know": [4, 9, 35, 38, 41, 42, 188, 192, 225, 269, 297, 298, 299, 300, 303, 306], "minimum": [4, 25, 67, 70, 72, 73, 74, 118, 140, 155, 167, 178, 179, 180, 195, 202, 205, 207, 209, 214, 222, 223, 227, 264, 297, 299, 303, 304, 308, 309], "manual": [4, 18, 20, 21, 297, 300, 306], "deviat": [4, 110, 134, 144, 155, 162, 165, 166, 188, 224, 229, 297, 303], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 67, 70, 71, 72, 73, 74, 92, 98, 100, 101, 124, 129, 132, 134, 144, 158, 162, 188, 192, 194, 195, 196, 197, 198, 199, 208, 209, 211, 212, 214, 215, 216, 219, 220, 222, 224, 225, 226, 227, 228, 229, 235, 237, 238, 239, 240, 241, 269, 273, 275, 278, 279, 284, 285, 295, 298, 299, 300, 303, 304, 306, 308, 309], "stabil": [4, 105], "stage": [4, 297, 304], "never": 4, "prevent": [4, 26, 28, 157, 179, 180, 221, 224, 271, 306], "solv": [4, 9, 10, 292, 297, 298, 299, 303, 304, 306], "entir": [4, 299, 304, 306], "submit": [4, 292, 308], "suffici": [4, 297], "recommend": [4, 7, 303], "system": [4, 5, 299, 303, 304], "adequ": [4, 136, 299, 303], "infeas": 4, "allevi": [4, 293], "prune": 4, "develop": [4, 7, 297, 308], "filter": [4, 45, 208, 209, 211, 214, 220, 224, 225, 227], "fire": [4, 32, 67, 70, 72, 73, 74], "certain": [4, 18, 20, 21, 32, 45, 67, 70, 72, 73, 74, 84, 105, 123, 129, 221, 293, 297, 298, 299, 303, 309], "illeg": 4, "move": [4, 21, 32, 67, 70, 72, 73, 74, 97, 99, 113, 125, 128, 129, 131, 133, 134, 143, 160, 198, 271, 297, 298, 300, 308, 309], "chess": 4, "combin": [4, 128, 298, 306], "grasp": 4, "releas": [4, 7, 10, 32, 67, 70, 72, 73, 74, 129, 308], "top": [4, 144, 162], "p": [4, 68], "wherein": 4, "cumul": [4, 120, 124, 144, 243, 299], "probabl": [4, 8, 40, 152, 154, 158, 160, 163, 170, 180, 195, 199, 293, 298, 308], "q": [4, 9, 147, 148, 149, 150, 153, 154, 156, 172, 173, 181, 187, 191, 196, 197, 209, 211, 212, 214, 215, 219, 220, 225, 227, 229, 235, 282, 291, 297], "flow": [4, 297, 299, 303, 304, 306], "reparameter": [4, 152, 170], "soft": [4, 219, 227, 228], "critic": [4, 8, 185, 193, 208, 210, 211, 214, 220, 221, 224, 225, 226, 227, 229, 297, 299], "clip": [4, 40, 118, 210, 229, 273, 299, 303, 304], "oppos": [4, 45], "incorrect": 4, "thought": [4, 67, 70, 72, 73, 74], "bound": [4, 17, 21, 25, 26, 32, 67, 70, 72, 73, 74, 109, 134, 174, 175, 184, 190, 191, 194, 195, 196, 197, 198, 199, 202, 229, 293, 297, 298, 299, 309], "region": 4, "squash": [4, 300, 308], "tanh": [4, 145, 157, 160, 164, 178, 179, 180, 202, 299, 303, 304, 305, 308], "correct": [4, 108, 124, 276, 299, 300], "prob": [4, 163, 170, 299, 303], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 99, 100, 108, 113, 129, 133, 195, 198, 199, 219, 222, 224, 282, 297, 302, 304, 309], "real": [5, 199, 294, 300, 304], "histor": 5, "wa": [5, 7, 67, 70, 72, 73, 74, 129, 219, 228, 294, 298, 299, 302, 306, 308], "ceas": 5, "fork": 5, "farama": [5, 81, 82, 299, 304], "detail": [5, 6, 7, 32, 67, 70, 72, 73, 74, 127, 129, 154, 191, 208, 215, 224, 292, 298, 302, 306], "usag": [5, 7, 52, 94, 158, 209, 220, 227, 230, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "known": [5, 7, 8, 244, 245, 297, 298], "bc": [5, 308], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 67, 70, 72, 73, 74, 94, 117, 134, 298, 306, 308], "face": [5, 8, 9, 309], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 136, 184, 190, 191, 195, 196, 197, 198, 199, 299, 303], "13": [5, 10, 11, 297, 298, 299, 300, 304, 305, 306, 307], "construct": [5, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 98, 101, 136, 158, 175, 199, 273, 293, 298, 299, 300, 304, 306, 309], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 70, 72, 73, 74, 136, 158, 182, 185, 186, 187, 188, 192, 194, 196, 204, 235, 293, 297, 298, 299, 300, 303, 309], "best": [5, 9, 158, 303, 306, 308], "gymwrapp": [5, 70, 291, 299, 308], "feel": [5, 292, 308], "free": [5, 7, 98, 101, 208, 217, 224, 295, 299, 303, 308], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 100, 297, 298, 299, 300, 303, 306], "prepar": [6, 299], "conda": [6, 7, 292], "assum": [6, 26, 33, 40, 41, 42, 52, 70, 73, 74, 96, 104, 113, 114, 120, 125, 131, 133, 140, 158, 159, 182, 202, 212, 215, 227, 235, 246, 247, 248, 249, 251, 252, 253, 254, 256, 297, 299, 300, 302, 304], "7": [6, 10, 27, 33, 35, 38, 41, 144, 145, 159, 160, 162, 243, 297, 298, 303, 304, 305, 306, 307, 308], "cmake": 6, "14": [6, 11, 110, 297, 298, 300, 303, 304, 305, 306, 307], "activ": [6, 7, 9, 145, 151, 155, 160, 164, 210, 221, 224, 293, 308], "sim": 6, "bullet": 6, "physic": [6, 7, 295, 297, 303, 304], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 292], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 300], "y": [6, 7, 88, 159, 182, 297, 299, 303], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 67, 70, 72, 73, 74, 122, 222, 303, 309], "command": [6, 7, 10, 299, 303, 304, 309], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 291], "_has_habitat": 6, "available_env": [6, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 309], "startswith": [6, 294, 297], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 78, 84, 289, 295, 297, 306], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 68, 222, 297], "env_nam": [6, 72, 75, 77, 79, 81, 86, 297, 299, 309], "llvmlite": 6, "config": [6, 7, 113, 133, 146, 151, 171, 277, 278, 279, 282, 283, 286], "var": [6, 7, 32, 67, 70, 72, 73, 74, 129, 222], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 76, 145, 147, 148, 156, 160, 185, 186, 187, 195, 198, 201, 220, 297, 298, 303, 304, 305, 306, 308], "bind": 6, "deactiv": [6, 7, 190], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 67, 70, 72, 73, 74, 129, 222, 306], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 298], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 302, 304, 309], "joint": [7, 298], "dynam": [7, 220, 299, 304], "contact": [7, 37], "engin": [7, 304], "biomechan": 7, "graphic": 7, "anim": [7, 303], "area": 7, "demand": [7, 309], "fast": [7, 9, 76, 115, 225, 297, 298, 299], "accur": [7, 52, 298, 304, 306], "articul": 7, "acquir": [7, 299], "deepmind": [7, 8, 9, 77, 78, 299], "whomev": 7, "licenc": 7, "incorpor": [7, 188, 192, 194, 300, 304], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 74, 109, 128, 256, 293, 294, 297, 298, 299, 303, 306, 309], "legaci": 7, "pro": [7, 292], "tip": [7, 292], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 309], "sudo": [7, 292], "enabl": [7, 8, 52, 55, 56, 65, 158, 194, 269, 299, 303, 304, 306], "apt": [7, 303], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 298, 300], "fact": [7, 8, 297, 299, 303, 304, 305, 306, 309], "workflow": [7, 185, 186, 187], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 67, 70, 72, 73, 74, 113, 131, 133, 300, 309], "binari": [7, 24, 27, 33, 93, 154, 173, 190, 191, 196, 197, 212, 214, 235], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 256, 261, 289], "earlier": [7, 297, 299, 300, 303, 306], "roboti": 7, "download": [7, 10, 113, 133, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309], "html": [7, 72], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 67, 70, 72, 73, 74, 113, 124, 133, 144, 172, 270, 297, 299, 303], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54, 305], "bin": [7, 154, 191, 293], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 150, 195, 199, 297, 299, 306], "nvidia": 7, "older": [7, 11], "hack": [7, 297], "line": [7, 32, 67, 70, 72, 73, 74, 298, 303], "adatp": 7, "script": [7, 136, 282, 285, 289, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "unnot": [7, 114], "until": [7, 21, 128, 299, 300, 303], "complet": [7, 9, 62, 70, 94, 292, 294, 297, 299, 302], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 298, 306], "troubleshoot": 7, "gl": 7, "h": [7, 94, 96, 116, 127, 158, 162, 256, 298, 300, 306], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 89, 90, 92, 94, 124, 127, 144, 146, 151, 159, 162, 163, 171, 182, 192, 194, 202, 209, 212, 214, 224, 225, 226, 229, 235, 237, 238, 239, 240, 243, 264, 295, 297, 298, 299, 300, 302, 303, 304, 306, 308, 309], "fatal": 7, "No": 7, "directori": [7, 45, 55, 261, 295], "devel": 7, "ubuntu": 7, "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 298, 299, 304, 306, 307], "disappear": [7, 298, 300, 302], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 87, 110, 145, 152, 159, 160, 164, 168, 178, 203, 282, 297, 298, 303, 304, 306, 307, 308, 309], "glibcxx_3": 7, "29": [7, 297, 298, 300, 303, 304], "compil": [7, 32, 67, 70, 72, 73, 74], "libosmesa": 7, "libgcc": 7, "Then": [7, 299, 302], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 67, 70, 72, 73, 74, 109, 129, 309], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 297, 298, 300, 304, 305, 306, 307], "114": [7, 304, 306], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 304], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 92, 136], "opengl": [7, 303], "global": [7, 32, 67, 70, 72, 73, 74, 172, 181, 195, 199, 235, 295, 297, 303], "cuda_visible_devic": 7, "id": [7, 23, 40, 194, 225, 259, 282], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 297, 304, 306], "displai": [7, 273, 295, 297, 298, 303, 304], "correctli": [7, 32, 67, 70, 72, 73, 74], "lgl": 7, "libegl": 7, "x11": [7, 303], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 70, 143, 188, 192, 194, 224, 273, 295, 297, 298, 302, 306], "sketch": [8, 295], "_": [8, 68, 95, 98, 100, 101, 108, 110, 115, 127, 134, 184, 198, 203, 207, 208, 209, 211, 214, 220, 224, 225, 227, 229, 237, 238, 239, 240, 297, 298, 299, 300, 303, 304, 306, 308], "n_training_step": 8, "datapoint": [8, 45, 306], "onlin": [8, 13, 17, 94, 151, 171, 208, 213, 223, 224, 264, 289, 299, 300, 303, 306], "n_data_per_train": 8, "no_grad": [8, 32, 67, 70, 72, 73, 74, 108, 237, 238, 239, 240, 299, 300, 303], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 270, 285, 297, 298, 299, 303, 306], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 117, 270, 295, 297, 298, 299, 300, 303, 305, 306, 308], "loss_fn": [8, 300, 308], "backward": [8, 32, 67, 70, 72, 73, 74, 134, 208, 209, 211, 214, 220, 224, 225, 226, 227, 229, 297, 299, 300, 303, 304], "zero_grad": [8, 32, 67, 70, 72, 73, 74, 295, 297, 299, 300, 303, 304], "backpropag": [8, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 303, 304], "differenti": [8, 45, 108, 237, 238, 239, 240, 300, 303, 304], "denomin": 8, "artifact": 8, "numer": [8, 38, 134, 157, 179, 180, 184, 190, 191, 195, 196, 197, 198, 199, 271, 299, 306, 309], "misconcept": 8, "save": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 255, 273, 295, 303], "freed": 8, "appear": [8, 33, 304, 306], "compuat": 8, "twice": 8, "fix": [8, 125, 209, 223, 227, 298, 304, 309], "retain_graph": 8, "discuss": [8, 9, 303], "inplac": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 129, 297], "accumul": 8, "onto": [8, 33, 140, 184, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 300, 304], "exclud": [8, 52, 94, 102, 143, 172, 303, 306], "forward": [8, 32, 67, 70, 72, 73, 74, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 131, 132, 134, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 167, 168, 169, 171, 172, 174, 175, 177, 181, 182, 188, 189, 191, 192, 194, 197, 198, 199, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 294, 304, 308], "submodul": [8, 32, 67, 70, 72, 73, 74, 83, 222], "param": [8, 32, 40, 67, 70, 71, 72, 73, 74, 97, 99, 108, 115, 128, 152, 154, 163, 178, 189, 195, 198, 201, 203, 222, 231, 234, 237, 238, 239, 240, 241, 297, 303, 304, 305, 308], "grad": [8, 32, 67, 70, 72, 73, 74, 297, 299], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 167, 172, 198], "strictli": [8, 32, 67, 70, 72, 73, 74, 129, 297, 299], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 94, 104, 114, 130, 216, 294, 299, 303, 304], "ask": [8, 297, 299, 300, 303, 305, 309], "much": [8, 35, 41, 58, 221, 224, 299, 303, 304, 306, 309], "render": [8, 269, 297, 298, 299], "upon": [8, 304], "factor": [8, 32, 117, 157, 166, 179, 180, 188, 192, 194, 209, 215, 216, 218, 228, 243, 297, 298, 303, 306, 309], "fit": [8, 11, 110, 294, 295, 297], "everi": [8, 17, 26, 28, 32, 33, 63, 67, 70, 72, 73, 74, 124, 134, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 273, 295, 297, 298, 299, 300, 303, 304], "bottlneck": 8, "affect": [8, 32, 67, 70, 72, 73, 74, 128, 129, 136, 237, 238, 239, 240], "brax": [8, 75, 76, 115, 309], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 67, 70, 72, 73, 74, 103, 129, 163, 211, 212, 264, 294, 295, 297, 299, 300, 303, 304, 306], "underli": [8, 67, 70, 72, 73, 74, 222, 304], "tedeiou": 8, "priorit": [8, 35, 41, 58, 209, 211, 212, 214, 220, 225, 227, 229, 297, 298], "amount": [8, 194, 298, 306], "isn": [8, 34, 36, 39, 190, 198, 303], "contigu": [8, 67, 70, 72, 73, 74, 140, 299, 303, 304, 306, 308, 309], "costli": [8, 304], "concaten": [8, 21, 30, 31, 94, 95, 110, 128, 160, 201, 297, 298, 303, 304, 306, 309], "constitut": [8, 298, 303, 304], "plain": 8, "profil": 8, "fulli": [8, 32, 67, 70, 72, 73, 74, 298, 304, 306], "frequent": [8, 306], "program": [8, 220, 309], "functorch": [8, 10], "incl": 8, "suit": [8, 78, 299, 309], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 198, 201, 222, 303, 304, 308], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 72, 145, 160, 164, 222, 299, 304, 308], "lost": 8, "permut": [8, 62, 308, 309], "idea": [9, 225, 295, 300, 303], "introductori": 9, "intro": [9, 299, 300], "dai": [9, 308], "2022": [9, 10, 304, 308], "spin": [9, 309], "deep": [9, 94, 147, 148, 149, 150, 153, 194, 208, 219, 227, 228, 297], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 110, 134, 297, 298, 299, 300], "reddit": 9, "reagent": 9, "orient": [9, 309], "baselines3": 9, "tf": 9, "bandit": [9, 88], "tensorflow": [9, 163], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 67, 70, 72, 73, 74, 108, 200, 201, 224, 293, 299, 300, 303, 304, 305, 309], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 308], "grade": 9, "factori": [9, 43], "throughput": [9, 297], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 67, 70, 72, 73, 74, 100, 140, 151, 154, 169, 173, 184, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 212, 214, 229, 235, 293, 298, 299, 300, 303, 304, 308, 309], "mbrl": [9, 71, 293], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 304], "dist": [10, 163, 170], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 299, 300, 303], "notebook": [10, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309], "24": [10, 297, 298, 299, 300, 303, 304, 305, 307], "11": [10, 27, 33, 45, 55, 56, 65, 68, 127, 144, 162, 297, 298, 299, 303, 304, 306, 307], "12": [10, 55, 56, 65, 297, 298, 299, 303, 304, 306, 307], "pip": [10, 53, 303, 308, 309], "pip3": [10, 299, 300, 303], "extra": [10, 32, 67, 70, 72, 73, 74, 94, 134, 143, 293, 299, 300, 306], "url": 10, "org": [10, 35, 58, 94, 113, 131, 146, 147, 148, 149, 150, 151, 154, 155, 156, 162, 163, 166, 168, 169, 171, 172, 174, 175, 181, 191, 194, 208, 209, 213, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 237, 242, 250, 305], "whl": 10, "u": [10, 53, 304], "There": [10, 158, 293, 295, 299, 300, 303, 304, 306, 309], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 222], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 98, 100, 101, 104, 106, 107, 110, 111, 113, 114, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 133, 134, 143, 145, 147, 148, 149, 150, 152, 154, 156, 159, 160, 163, 164, 165, 166, 170, 172, 173, 178, 179, 180, 181, 198, 214, 219, 225, 228, 250, 267, 269, 270, 278, 279, 282, 283, 285, 286, 287, 288, 289], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 67, 69, 70, 72, 73, 74, 77, 83, 88, 92, 93, 94, 95, 96, 98, 100, 101, 104, 106, 107, 108, 110, 111, 113, 114, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 133, 134, 137, 141, 143, 144, 145, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 172, 173, 181, 184, 190, 191, 195, 196, 197, 198, 199, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 235, 236, 237, 238, 239, 240, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 282, 283, 289, 298, 299], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 67, 68, 70, 71, 72, 73, 74, 84, 207, 222, 278, 279, 287, 288, 289, 298], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 55, 56, 57, 63, 65, 100, 189], "vs": [11, 158, 159, 308], "longer": [11, 298, 303, 306], "self": [11, 26, 28, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 92, 97, 98, 101, 113, 125, 128, 129, 131, 133, 144, 154, 162, 172, 181, 188, 192, 198, 203, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 295, 297, 298, 304, 308], "x": [11, 23, 26, 32, 38, 40, 108, 127, 145, 154, 156, 158, 159, 160, 162, 164, 182, 190, 196, 205, 207, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 273, 297, 299, 304, 306, 308], "23": [11, 297, 298, 299, 304, 306], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 67, 68, 70, 72, 73, 74, 84, 108, 125, 182, 190, 196, 216, 218, 237, 240, 248, 249, 253, 254, 285, 294, 297, 298, 303, 306, 308, 309], "import_modul": 11, "27": [11, 297, 298, 299, 300, 303, 304], "get_class_that_defined_method": 11, "f": [11, 70, 207, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 297, 298, 299, 300, 303, 304, 306, 309], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 100, 110, 125, 129, 134, 157, 164, 179, 180, 196, 202, 209, 217, 222, 223, 227, 269, 270, 295, 297, 298, 299, 300, 304, 309], "module_set": 11, "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 113, 122, 128, 129, 130, 132, 133, 144, 145, 153, 158, 160, 161, 162, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 241, 263, 266, 270, 273, 289, 298], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 67, 69, 70, 72, 73, 74, 92, 94, 95, 97, 98, 99, 102, 103, 104, 107, 108, 109, 112, 114, 115, 117, 120, 121, 123, 124, 125, 126, 128, 132, 134, 143, 144, 158, 161, 162, 188, 189, 191, 192, 194, 197, 198, 199, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 273, 297, 304], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 68, 73, 74, 297, 308], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 77, 94, 95, 96, 100, 104, 105, 109, 110, 113, 114, 116, 122, 123, 126, 129, 130, 131, 133, 136, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 208, 209, 210, 214, 216, 217, 221, 222, 223, 224, 225, 229, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 264, 265, 266, 269, 270, 273, 275, 282, 283, 287, 288, 289, 304], "200": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 89, 90, 117, 147, 148, 155, 174, 175, 297, 300, 304], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 94, 117, 273, 276, 285, 295, 297, 298, 299, 300, 303, 306, 308], "create_env_kwarg": [13, 14, 16, 17, 68, 72, 73, 74, 297], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 67, 68, 70, 72, 73, 74, 108, 125, 129, 134, 145, 146, 147, 148, 149, 150, 151, 156, 159, 160, 171, 195, 199, 260, 261, 269, 278, 279, 282, 287, 288, 289, 297, 298, 299, 309], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 117, 298, 306], "interactiontyp": [13, 16, 18, 19, 20, 21, 138, 142, 195, 199, 269], "exploration_mod": [13, 16, 18, 19, 20, 291, 293], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 67, 70, 72, 73, 74, 97, 98, 101, 108, 110, 113, 117, 118, 119, 124, 125, 127, 128, 129, 131, 133, 134, 152, 155, 157, 160, 163, 165, 166, 174, 175, 178, 180, 188, 198, 202, 205, 206, 207, 208, 209, 214, 217, 218, 219, 220, 223, 225, 227, 228, 229, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 271, 297, 298, 306, 309], "datacollector": [13, 14, 16, 17, 195, 199, 224, 299], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 184, 188, 190, 191, 194, 195, 196, 197, 198, 199, 201, 293, 308], "env_mak": [13, 14, 16, 21, 285, 309], "50": [13, 14, 16, 21, 37, 40, 298, 299, 300, 303, 304, 307], "linear": [13, 14, 16, 17, 21, 32, 67, 70, 71, 72, 73, 74, 97, 108, 113, 125, 128, 129, 131, 133, 144, 145, 154, 160, 162, 164, 165, 166, 167, 173, 174, 175, 184, 185, 186, 187, 192, 193, 194, 195, 196, 198, 201, 203, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 237, 238, 239, 240, 285, 293, 298, 302, 305, 308], "2000": [13, 14, 16, 45, 299, 306], "enumer": [13, 14, 16, 21, 32, 38, 42, 67, 70, 72, 73, 74, 230, 294, 297, 298, 299, 300, 306, 308], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 67, 70, 72, 73, 74, 88, 117, 154, 173, 190, 191, 194, 196, 197, 293, 299, 300, 304, 306, 308, 309], "step_count": [13, 14, 16, 67, 70, 72, 73, 74, 123, 299, 300, 308], "shutdown": [13, 14, 16, 17, 21, 297, 308], "del": [13, 14, 16, 297, 299, 302, 308, 309], "randompolici": [13, 14, 16, 18, 19, 20, 22, 94, 117, 291, 306], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 210, 221, 224, 264, 266, 269, 273, 276, 277, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309], "lifespan": [13, 14, 16, 18, 19, 20, 298], "divis": [13, 14, 16, 18, 19, 20, 303], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 100, 300, 306], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 125, 129, 195, 199, 269, 287, 288, 289, 295, 298, 299, 304, 309], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 67, 70, 72, 73, 74, 299], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 298, 299, 303], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 128, 130, 164, 294, 295, 297, 298, 303, 306, 308], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 67, 70, 72, 73, 74, 100, 102, 121, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 163, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 237, 306, 309], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 293, 303, 304], "post": [13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74], "multistep": [13, 14, 16, 18, 19, 20, 21, 291, 298], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 110, 119, 157, 165, 174, 179, 180, 235, 293, 304, 306], "explorationtyp": [13, 14, 16, 20, 21, 222, 269, 297, 298, 299, 300, 308], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 224], "whole": [13, 14, 16, 26, 28, 32, 45, 67, 70, 72, 73, 74, 129, 264, 297, 299], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 275, 285, 295, 297, 308], "async": [13, 14, 18, 19, 20, 21, 297, 308], "ratio": [13, 14, 40, 297, 299], "finish": [13, 14, 21, 117], "rest": [13, 14, 293, 299, 300, 304, 308], "earli": [13, 14, 308], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 129, 134, 295, 297], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 129, 134, 289, 295, 297, 298, 309], "ordereddict": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 129, 134, 298], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 134, 158, 207, 208, 210, 221, 224, 273, 293, 303], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 67, 70, 72, 73, 74, 129], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 67, 70, 72, 73, 74, 105, 110, 123, 145, 160, 164, 220, 227, 306], "increment": [13, 14, 16, 17, 67, 70, 72, 73, 74, 123, 221], "env_fn": [13, 14, 16, 17, 68, 287, 288], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 149, 150, 304], "out_se": [13, 14, 16, 17, 309], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 26, 32, 52, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 113, 122, 125, 128, 129, 130, 132, 133, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 160, 161, 162, 164, 170, 178, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 235, 236, 237, 238, 239, 240, 241, 256, 260, 261, 263, 266, 273, 278, 279, 282, 286, 287, 288, 294, 299, 303], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 98, 100, 101, 104, 106, 107, 108, 110, 111, 114, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 134, 143, 147, 153, 154, 158, 159, 160, 164, 167, 171, 172, 173, 191, 196, 197, 202, 208, 209, 211, 214, 216, 220, 222, 224, 225, 226, 227, 229, 237, 238, 239, 240, 267, 269, 271, 280, 281, 297], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 76, 87, 92, 98, 101, 144, 162, 208, 209, 211, 212, 214, 220, 224, 225, 227, 229, 304, 308, 309], "describ": [15, 44, 95, 128, 178, 179, 259, 294, 297, 299, 303, 304, 309], "tensor_spec": [15, 92, 214, 224, 226], "boundedtensorspec": [15, 22, 26, 67, 70, 72, 73, 74, 192, 194, 195, 202, 208, 209, 211, 220, 224, 225, 227, 229, 291, 299, 303, 304, 308, 309], "cube": 15, "envcreat": [16, 22, 285, 286, 289, 291, 297, 298, 308, 309], "interruptor": 16, "_interruptor": 16, "outsid": [16, 303], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 67, 70, 72, 73, 74, 299, 303, 308, 309], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 70, 72, 108, 208, 210, 221, 224, 297, 302, 304, 308], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 112, 297, 308], "regular": [17, 34, 36, 39, 173, 191, 196, 197, 198, 199, 215, 275, 291, 295, 297, 298, 306, 309], "mere": 17, "greater": [17, 158, 297, 298, 308], "signal": [17, 52, 123, 294, 297, 299, 303, 306], "sent": [17, 55, 56, 65, 134], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 73, 74, 114, 134, 144, 145, 147, 149, 151, 153, 160, 162, 164, 184, 198, 203, 264, 270, 297, 299, 300, 304, 306, 309], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 273], "string": [18, 19, 20, 32, 37, 45, 54, 67, 70, 72, 73, 74, 84, 113, 133, 158, 195, 196, 207, 255, 272, 282, 294, 297, 299, 300], "respect": [18, 19, 20, 32, 67, 70, 72, 73, 74, 93, 97, 98, 101, 113, 114, 125, 128, 129, 131, 133, 175, 198, 203, 268, 299, 300, 303], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 115, 129, 143, 158, 189, 222, 294, 297, 298, 300, 306], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 292, 298, 299, 302, 306], "serv": [18, 20, 21, 85, 306, 309], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 67, 70, 72, 73, 74, 104], "seen": [18, 20, 21, 294, 297, 298, 300, 303, 306], "turn": [18, 20, 21, 106, 130, 190, 269, 294, 297, 298, 300, 304, 305], "mp": [18, 19, 20, 68, 134], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 297], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 224, 287, 288], "homonym": [18, 19, 20, 304], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 297], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 195, 199], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 287, 288, 297, 298], "coordin": 21, "hood": [21, 304], "init": [21, 32, 67, 70, 72, 73, 74, 297, 298, 299], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 306], "similarli": [21, 32, 62, 67, 70, 72, 73, 74, 200, 201, 220, 309], "num_cpu": 21, "num_gpu": 21, "1024": [21, 151, 298, 306], "equat": [21, 194, 207, 210, 228, 299, 304], "exce": [21, 299, 306], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 273, 297, 299, 300], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 89, 90, 145, 146, 147, 148, 151, 156, 160, 164, 168, 169, 171, 172, 181, 235, 298, 300, 304, 305, 306, 308, 309], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "wherea": [22, 100, 222, 295], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 146, 151, 171, 189], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 68, 298], "__main__": [22, 68], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 100, 126, 178, 179, 180, 189, 194, 209, 210, 214, 223, 225, 227, 297, 299, 300, 303], "durat": [23, 303], "meta": [23, 44, 52, 69, 295, 299, 303, 306], "aren": [23, 300], "discret": [24, 27, 30, 31, 33, 47, 67, 70, 72, 73, 74, 100, 170, 173, 214, 215, 293, 298, 299, 303, 309], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 134, 293, 297, 303], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 100, 169, 170, 174, 207, 293, 298, 299, 300, 304, 306], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 308], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 194, 202], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 202, 304], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 67, 70, 72, 73, 74, 97, 98, 101, 108, 113, 125, 128, 129, 131, 133, 134, 198, 282, 309], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 145, 160, 176, 177], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 131, 146, 171], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 67, 70, 72, 73, 74, 289, 293], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 309], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 100, 158, 184, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 293, 308, 309], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 184, 190, 191, 195, 196, 197, 198, 199, 299, 303, 304, 306], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 125, 140, 304, 306], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 94, 122, 145, 176, 177, 297, 304, 306], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 94, 95, 125, 130, 134, 159, 177, 182, 289, 298, 299, 304, 306], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 128, 129, 167, 178, 289], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 92, 100, 154, 170, 173, 190, 191, 196, 197, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 300], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 154, 173, 190, 196, 212, 214, 235, 291, 293], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 67, 70, 72, 73, 74, 97, 98, 101, 113, 125, 128, 129, 131, 133, 134, 198, 207, 222, 297, 298, 299, 304, 306], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 125, 158, 300, 304, 305], "upper": [25, 109], "unnam": 26, "effect": [26, 32, 67, 70, 72, 73, 74, 94, 120, 129, 273, 297, 306, 309], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 67, 70, 72, 73, 74, 145, 160, 298, 304, 305], "composite_spec": 26, "observation_vector": [26, 95, 282, 297], "randn": [26, 34, 36, 39, 55, 56, 65, 110, 140, 146, 151, 154, 159, 163, 167, 170, 171, 173, 184, 185, 186, 187, 189, 190, 195, 196, 198, 201, 202, 203, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 237, 238, 239, 240, 272, 293, 308, 309], "td_project": 26, "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 67, 70, 72, 73, 74, 236, 303], "children": [26, 28, 32, 67, 70, 72, 73, 74], "keysview": [26, 28], "reflect": [26, 28, 143, 222, 276, 298, 299, 300, 303], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 67, 70, 72, 73, 74, 222], "succeed": [26, 28, 299, 303, 304], "selected_kei": [26, 28, 121, 297], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "device_typ": [27, 30, 33, 145, 146, 147, 148, 149, 150, 156, 160, 165, 166, 171], "onehottensorspec": 27, "categor": [27, 31, 33, 92, 154, 170, 173, 190, 191, 196, 197, 212, 214, 235, 300], "action_valu": [27, 33, 153, 154, 173, 190, 191, 196, 197, 214, 222, 235, 293, 300], "arang": [27, 33, 154, 163, 190, 264, 293, 306], "argmax": [27, 154, 173, 191, 197], "chosen_action_valu": [27, 33, 172, 173, 181, 196, 197, 235, 293, 300], "outcom": [27, 33, 152, 178], "lazi": [28, 29, 49, 50, 67, 70, 72, 73, 74, 113, 131, 165, 200, 201, 297, 298, 302, 306, 309], "represent": [28, 29, 32, 67, 70, 72, 73, 74, 113, 131, 133, 297, 304, 305, 309], "drawn": [28, 29, 125, 195, 199, 299, 303], "lazystackedtensordict": [28, 67, 70, 71, 72, 73, 74, 302, 308], "heterogen": [28, 29, 136, 164, 297, 298], "semant": [28, 29, 293], "thrown": [29, 32, 67, 70, 72, 73, 74, 306], "nvec": [30, 31], "cardin": [30, 31, 154, 173, 190, 191, 197, 299], "ax": [30, 165, 166], "m": [30, 32, 67, 70, 72, 73, 74, 100, 199, 293, 298, 304], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 212, 214, 235, 291], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 291], "gamma": [32, 117, 162, 208, 209, 211, 212, 214, 215, 216, 218, 220, 222, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 285, 294, 297, 298, 299, 303, 308], "sutton": [32, 294, 303], "1988": 32, "predict": [32, 40, 155, 161, 162, 189, 204, 215, 217, 218, 236, 293, 297, 298], "tempor": [32, 158, 162, 238, 239, 244, 245], "44": [32, 298, 304, 306], "discount": [32, 68, 117, 209, 215, 216, 218, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 294, 298, 299, 303], "ahead": [32, 309], "add_modul": [32, 67, 70, 72, 73, 74], "child": [32, 67, 70, 72, 73, 74], "fn": [32, 37, 67, 70, 72, 73, 74, 167, 287, 288], "init_weight": [32, 67, 70, 72, 73, 74], "fill_": [32, 67, 70, 72, 73, 74, 298, 300, 309], "net": [32, 67, 70, 72, 73, 74, 159, 164, 208, 209, 214, 220, 224, 225, 226, 227, 282, 285, 298, 304, 305, 308], "in_featur": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 145, 147, 148, 149, 150, 159, 160, 164, 165, 166, 185, 198, 212, 308], "out_featur": [32, 67, 70, 71, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 144, 145, 147, 148, 149, 150, 155, 156, 158, 159, 160, 162, 164, 165, 166, 185, 190, 198, 212, 293, 297, 300, 308], "bia": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 145, 155, 158, 160, 164, 165, 166, 167, 192, 194, 198, 205, 206, 207, 222, 294, 297, 298, 299, 300, 303, 308], "requires_grad": [32, 67, 70, 72, 73, 74, 108], "bfloat16": [32, 67, 70, 72, 73, 74], "datatyp": [32, 67, 70, 72, 73, 74, 306], "member": [32, 67, 70, 72, 73, 74, 222], "xdoctest": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198, 222], "skip": [32, 67, 70, 72, 73, 74, 105, 129, 136, 195, 199, 222, 237, 238, 239, 240, 255, 256, 266, 269, 297, 298, 299, 304], "buf": [32, 67, 70, 72, 73, 74], "20l": [32, 67, 70, 72, 73, 74, 222], "1l": [32, 67, 70, 72, 73, 74, 222], "5l": [32, 67, 70, 72, 73, 74, 222], "__call__": [32, 37, 67, 70, 72, 73, 74, 199, 295], "associ": [32, 67, 70, 72, 73, 74, 174, 289, 297, 306], "doubl": [32, 46, 67, 70, 72, 73, 74, 97, 98, 99, 101, 113, 125, 128, 129, 131, 133, 198, 212, 215, 219, 225, 228, 235, 297, 298, 299, 300, 309], "eval": [32, 67, 70, 72, 73, 74, 129, 134, 297, 298, 299], "evalu": [32, 67, 70, 72, 73, 74, 129, 152, 163, 170, 180, 225, 278, 279, 298, 299], "dropout": [32, 67, 70, 72, 73, 74, 129, 158, 160, 300], "batchnorm": [32, 67, 70, 72, 73, 74, 129], "disabl": [32, 67, 70, 72, 73, 74, 129, 157, 180, 297], "comparison": [32, 54, 67, 70, 72, 73, 74, 129, 222, 297, 298], "similar": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 132, 133, 134, 185, 187, 195, 198, 199, 294, 297, 298, 299, 300, 304, 309], "confus": [32, 67, 70, 72, 73, 74, 129], "extra_repr": [32, 67, 70, 72, 73, 74], "nontermin": 32, "original_reward": 32, "newli": [32, 67, 70, 72, 73, 74], "OR": 32, "reshap": [32, 158, 160, 299, 303], "get_buff": [32, 67, 70, 72, 73, 74], "throw": [32, 67, 70, 72, 73, 74, 309], "docstr": [32, 67, 70, 72, 73, 74], "get_submodul": [32, 67, 70, 72, 73, 74], "explan": [32, 67, 70, 72, 73, 74], "qualifi": [32, 67, 70, 72, 73, 74], "referenc": [32, 67, 70, 72, 73, 74], "attributeerror": [32, 67, 70, 72, 73, 74], "invalid": [32, 67, 70, 72, 73, 74, 163], "resolv": [32, 67, 70, 72, 73, 74], "get_extra_st": [32, 67, 70, 72, 73, 74, 134], "set_extra_st": [32, 67, 70, 72, 73, 74, 134], "picklabl": [32, 67, 70, 72, 73, 74, 134], "ensur": [32, 35, 41, 58, 62, 67, 70, 72, 73, 74, 94, 113, 131, 134, 190, 293, 298, 299, 304, 306], "guarante": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 134, 308], "pickl": [32, 67, 70, 72, 73, 74, 134], "get_paramet": [32, 67, 70, 72, 73, 74], "sai": [32, 67, 70, 72, 73, 74, 305, 309], "net_b": [32, 67, 70, 72, 73, 74], "net_c": [32, 67, 70, 72, 73, 74], "conv": [32, 67, 70, 72, 73, 74, 145, 298], "conv2d": [32, 67, 70, 72, 73, 74, 145, 308], "kernel_s": [32, 67, 70, 72, 73, 74, 145, 147, 148, 168, 298, 308], "stride": [32, 67, 70, 72, 73, 74, 145, 147, 148, 156, 298, 308], "diagram": [32, 67, 70, 72, 73, 74], "show": [32, 67, 70, 72, 73, 74, 164, 293, 297, 299, 300, 303, 304, 306, 308], "itself": [32, 67, 70, 72, 73, 74, 83, 222, 299], "degre": [32, 67, 70, 72, 73, 74], "named_modul": [32, 67, 70, 72, 73, 74], "o": [32, 67, 70, 72, 73, 74], "transit": [32, 52, 67, 70, 72, 73, 74, 204, 297, 300, 304, 306], "half": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198, 297], "ipu": [32, 67, 70, 72, 73, 74], "strict": [32, 67, 70, 72, 73, 74, 129], "descend": [32, 67, 70, 72, 73, 74, 129], "persist": [32, 67, 70, 72, 73, 74, 129, 143], "enforc": [32, 62, 67, 70, 72, 73, 74, 129, 200, 304], "preserv": [32, 67, 70, 72, 73, 74, 129], "missing_kei": [32, 67, 70, 72, 73, 74, 129], "unexpected_kei": [32, 67, 70, 72, 73, 74, 129], "namedtupl": [32, 67, 70, 72, 73, 74, 129], "duplic": [32, 62, 67, 70, 72, 73, 74, 212, 215, 222, 235], "l": [32, 67, 70, 72, 73, 74, 236, 299, 304], "idx": [32, 67, 70, 72, 73, 74], "named_buff": [32, 67, 70, 72, 73, 74], "remove_dupl": [32, 67, 70, 72, 73, 74, 222], "prepend": [32, 67, 70, 72, 73, 74, 222], "running_var": [32, 67, 70, 72, 73, 74], "named_children": [32, 67, 70, 72, 73, 74], "conv4": [32, 67, 70, 72, 73, 74], "conv5": [32, 67, 70, 72, 73, 74], "memo": [32, 67, 70, 72, 73, 74], "named_paramet": [32, 67, 70, 72, 73, 74, 108, 222], "register_backward_hook": [32, 67, 70, 72, 73, 74], "removablehandl": [32, 67, 70, 72, 73, 74], "deprec": [32, 67, 70, 72, 73, 74, 129, 137, 141, 153, 208, 209, 210, 212, 214, 215, 220, 221, 224, 225, 226, 227, 235, 237, 238, 239, 240, 309], "favor": [32, 67, 70, 72, 73, 74, 299], "register_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_buff": [32, 67, 70, 72, 73, 74], "running_mean": [32, 67, 70, 72, 73, 74], "alongsid": [32, 67, 70, 72, 73, 74, 303], "num_featur": [32, 67, 70, 72, 73, 74], "register_forward_hook": [32, 67, 70, 72, 73, 74, 154, 173], "with_kwarg": [32, 67, 70, 72, 73, 74], "always_cal": [32, 67, 70, 72, 73, 74], "posit": [32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 104, 105, 122, 123, 126, 129, 130, 167, 294, 299, 303, 304, 306], "signatur": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198, 222, 294, 297, 304], "register_module_forward_hook": [32, 67, 70, 72, 73, 74], "regardless": [32, 67, 70, 72, 73, 74, 210, 221, 224], "register_forward_pre_hook": [32, 67, 70, 72, 73, 74], "invok": [32, 67, 70, 72, 73, 74], "And": [32, 67, 70, 72, 73, 74], "forward_pr": [32, 67, 70, 72, 73, 74], "register_module_forward_pre_hook": [32, 67, 70, 72, 73, 74], "grad_input": [32, 67, 70, 72, 73, 74], "grad_output": [32, 67, 70, 72, 73, 74], "subsequ": [32, 67, 70, 72, 73, 74, 300], "technic": [32, 67, 70, 72, 73, 74, 298, 300], "caller": [32, 67, 70, 72, 73, 74], "register_module_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "backward_pr": [32, 67, 70, 72, 73, 74], "register_module_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "register_load_state_dict_post_hook": [32, 67, 70, 72, 73, 74], "incompatible_kei": [32, 67, 70, 72, 73, 74], "clear": [32, 67, 70, 72, 73, 74, 265], "register_modul": [32, 67, 70, 72, 73, 74, 295], "alia": [32, 67, 70, 72, 73, 74], "register_paramet": [32, 67, 70, 72, 73, 74], "register_state_dict_pre_hook": [32, 67, 70, 72, 73, 74], "keep_var": [32, 67, 70, 72, 73, 74, 129], "made": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 194, 212, 222, 235, 297, 298, 300, 303, 305], "requires_grad_": [32, 67, 70, 72, 73, 74], "autograd": [32, 67, 70, 72, 73, 74, 129], "freez": [32, 67, 70, 72, 73, 74], "finetun": [32, 67, 70, 72, 73, 74], "gan": [32, 67, 70, 72, 73, 74], "share_memori": [32, 67, 68, 70, 72, 73, 74, 297], "share_memory_": [32, 67, 70, 72, 73, 74, 308], "destin": [32, 34, 36, 39, 67, 70, 72, 73, 74, 99, 129, 131, 143], "averag": [32, 67, 70, 72, 73, 74, 129, 134, 194, 216, 217, 271, 297, 299], "shallow": [32, 67, 70, 72, 73, 74, 129, 300], "pleas": [32, 67, 70, 72, 73, 74, 129, 292], "detach": [32, 67, 70, 72, 73, 74, 129, 222, 237, 238, 239, 240, 297], "non_block": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "memory_format": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "channels_last": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "complex": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198, 297, 298], "integr": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 150, 158, 162, 198, 293, 303, 304, 305], "unchang": [32, 67, 70, 72, 73, 74, 97, 100, 113, 125, 128, 129, 131, 133, 198, 270, 297, 306], "tri": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "pin": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "4d": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "ignore_w": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "1913": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "3420": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "5113": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "2325": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "torch_doctest_cuda1": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "gpu1": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "1914": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "5112": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198, 304], "2324": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "float16": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "cdoubl": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "3741": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "j": [32, 35, 58, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198, 295], "2382": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "5593": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198, 304], "4443": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "complex128": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "6122": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "1150": [32, 67, 70, 72, 73, 74, 97, 113, 125, 128, 129, 131, 133, 198], "to_empti": [32, 67, 70, 72, 73, 74], "dst_type": [32, 67, 70, 72, 73, 74], "xpu": [32, 67, 70, 72, 73, 74], "set_to_non": [32, 67, 70, 72, 73, 74], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 306], "discretebox": [33, 67, 70, 72, 73, 74, 299, 303, 309], "chosen_data": [34, 54], "rewarddata": [34, 54, 291], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 88], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 304], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 98, 101, 113, 129, 133, 265, 305], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 289], "determin": [34, 35, 36, 39, 41, 52, 58, 113, 133, 194, 298, 303], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 152, 178], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 300], "memmap": [34, 36, 39, 55, 73, 74, 134, 270, 306], "unbind": [34, 36, 39, 158], "alpha": [35, 41, 58, 145, 209, 214, 223, 225, 227, 297, 306, 308], "ep": [35, 41, 58, 134, 194, 210, 228, 271, 297, 298, 300], "1e": [35, 41, 58, 134, 152, 155, 167, 178, 297, 298, 299, 303], "08": [35, 41, 58, 298, 299, 304], "collate_fn": [35, 38, 41, 42, 52, 53, 306, 308], "prefetch": [35, 38, 41, 42, 52, 53, 54, 297, 298, 300, 306], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 94, 113, 131, 146, 147, 148, 149, 150, 151, 154, 155, 156, 162, 166, 168, 169, 171, 172, 174, 175, 181, 191, 194, 208, 209, 213, 215, 216, 217, 218, 219, 220, 223, 224, 227, 228, 237, 242, 250, 305], "ab": [35, 58, 113, 131, 134, 146, 151, 155, 156, 162, 166, 168, 169, 171, 172, 174, 175, 181, 208, 209, 213, 216, 217, 218, 219, 220, 223, 224, 227, 305], "1511": [35, 58, 156], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 178, 195, 199, 291, 294], "null": [35, 41, 58, 93], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 306], "merg": [35, 38, 41, 42, 52, 53, 304], "mini": [35, 38, 41, 42, 52, 53, 303], "decid": [35, 38, 41, 42, 308], "rb": [35, 38, 41, 42, 52, 53, 94, 117, 298, 300, 303, 305, 306, 308], "meth": [35, 38, 41, 42, 222], "incompat": [35, 38, 41, 42, 306], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 306], "tensordictprioritizedreplaybuff": [35, 291, 308], "simplifi": [35, 304, 306], "manual_se": [35, 38, 41, 42, 92, 100, 110, 117, 163, 170, 184, 191, 192, 194, 202, 208, 209, 211, 220, 227, 303, 304, 308, 309], "_weight": [35, 41, 306, 308], "arrai": [35, 40, 297, 306], "update_prior": [35, 58, 270, 295, 298, 306, 308], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 130], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 124, 297, 306], "nonetyp": [36, 39], "logit": [36, 40, 163, 170, 191, 214, 293], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205], "text": [37, 40, 43, 194, 299], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 146, 151, 171], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 306], "inde": [37, 100, 299, 304], "might": [37, 124, 260, 292, 297, 309], "writer": [38, 42, 52, 53, 60, 64, 291, 299], "randomsampl": [38, 42, 52, 53, 291, 297], "roundrobinwrit": [38, 42, 52, 53, 291], "Not": 38, "ref_model": 40, "reward_model": [40, 204], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 108], "kl": [40, 108, 217, 221], "penalti": [40, 221], "strai": 40, "far": [40, 157, 179, 180, 304, 309], "calcul": [40, 117], "gpt2rewardmodel": 40, "get_dataload": [40, 291], "promptdata": [40, 291], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 304, 306], "reward_kl": [40, 108], "reward_raw": 40, "sample_log_prob": [40, 185, 186, 187, 195, 199, 201, 224, 282, 299, 303, 308], "create_rollout_td": 40, "log_prob": [40, 152, 163, 170, 180, 199], "log_ratio": 40, "kl_coef": 40, "plu": [40, 304], "replic": 40, "rindex": 40, "multipli": [40, 209, 210, 214, 221, 223, 224, 225, 227, 271, 297], "term": [40, 108, 165, 166, 207, 208, 214, 275, 298, 299, 303], "subtract": [40, 124], "ve": [40, 297, 300], "eo": 40, "limit": [40, 71, 94, 108, 297, 298, 300, 303, 304], "generation_config": 40, "generationconfig": 40, "ti": [40, 246, 247, 248, 249, 251, 252, 253, 254, 298], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 209, 212, 214, 215, 220, 222, 225, 227, 229, 235, 306, 308], "td_error": [41, 42, 209, 211, 212, 214, 215, 220, 222, 225, 227, 229, 235, 297, 306, 308], "reduct": [41, 58], "prioritizedreplaybuff": [41, 291, 308], "update_tensordict_prior": [41, 297, 306, 308], "prioritizedsampl": [41, 42, 212, 215, 235, 291, 297, 306], "min": [41, 58, 178, 179, 180, 189, 194, 209, 210, 214, 223, 225, 227, 298, 299, 303], "median": [41, 58, 195, 199], "len": [41, 55, 56, 65, 145, 160, 164, 297, 304, 305, 306, 308], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 87, 140], "huggingfac": [43, 193], "co": [43, 304], "doc": [43, 298, 303], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 291], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 72, 73, 74, 297, 298], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 70, 131, 143, 255, 306, 309], "condit": [45, 124, 190, 191, 196, 197, 207, 297, 304, 306], "elementwis": 45, "os": [45, 298], "cpu_count": 45, "vocabulari": 45, "loader": [45, 299], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 94, 95, 96, 98, 100, 101, 102, 104, 107, 110, 114, 115, 117, 121, 123, 126, 131, 134, 143, 188, 189, 192, 194, 199, 212, 235], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 298], "batch_dimens": 45, "filder": 45, "tempfil": [45, 285, 297, 298], "randint": [45, 127, 306], "20": [45, 67, 70, 72, 73, 74, 189, 264, 298, 299, 300, 303, 304, 307, 308, 309], "temporarydirectori": [45, 297, 298], "tmpdir": [45, 297, 298], "data_memmap": 45, "exclus": [48, 49, 104, 158, 163, 190, 191, 196, 197, 228, 229, 237, 238, 239, 240, 241, 289, 293], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_timeout_as_don": 52, "env_kwarg": [52, 287, 288, 297], "metadata": [52, 299, 303, 309], "reconstruct": [52, 217, 297, 309], "timeout": 52, "recov": [52, 188, 192, 194, 200, 220, 302], "regard": [52, 154, 191, 208, 215, 224, 297, 299, 304], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 72, 182, 287, 288, 294, 299, 300, 306, 308], "left": [52, 97, 99, 108, 113, 115, 126, 128, 131, 133, 298, 299], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 117, 120, 124, 144, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 298, 303], "absent": 52, "traj_split": 52, "observationnorm": [52, 134, 289, 297, 298, 299, 300, 308], "maze2d": 52, "umaz": 52, "loc": [52, 108, 110, 119, 157, 167, 179, 180, 185, 186, 187, 195, 199, 201, 208, 209, 220, 224, 225, 226, 227, 277, 282, 289, 293, 297, 298, 299, 300, 303, 308], "128": [52, 148, 151, 298, 300, 304, 305, 306], "public": [53, 113, 133], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 88], "adult_onehot": [53, 88], "mushroom_num": [53, 88], "mushroom_onehot": [53, 88], "covertyp": [53, 88], "shuttl": [53, 88], "magic": [53, 88], "infinit": [54, 306], "three": [54, 293, 295, 299, 303, 304, 306], "block": [54, 293, 300], "pairwisedataset": [54, 291], "256": [54, 151, 298, 299, 303, 304], "scratch_dir": [55, 297, 306], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 189, 306, 309], "bar": [55, 56, 65, 189, 266, 267, 269, 273, 295, 298], "attach": [55, 56, 57, 63, 65, 298], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 163, 297], "auto": [56, 65, 194, 209, 214, 223, 225, 227, 229, 294, 303], "zero_": [56, 65, 140], "max_capac": [58, 297, 306], "uniformli": [59, 222, 309], "roundrobin": [60, 64], "piec": [60, 64, 66, 297, 298, 299, 303, 304, 306], "consum": [62, 298, 299, 303, 306], "incomplet": 62, "unlik": [62, 215, 224, 298, 308], "fresh": 62, "caution": [62, 136, 309], "shuffl": [62, 303], "haven": [62, 305], "remain": [62, 99, 100, 108, 124, 166], "draw": 62, "__len__": 63, "_inplace_upd": [67, 72, 73, 74, 75, 76, 88, 89, 90, 129], "_batch_lock": [67, 72, 73, 74, 75, 76, 88, 89, 90, 129], "continuousbox": [67, 70, 72, 73, 74, 140, 299, 303, 304, 308, 309], "unboundedcontinuoustensorspec": [67, 70, 71, 72, 73, 74, 92, 98, 101, 125, 140, 144, 162, 184, 198, 201, 203, 226, 291, 299, 300, 303, 304, 309], "another_act": [67, 70, 72, 73, 74], "mutabl": [67, 70, 72, 73, 74], "batch_lock": [67, 69, 70, 72, 73, 74, 125, 129, 304], "immut": [67, 70, 72, 73, 74, 115, 129], "another_don": [67, 70, 72, 73, 74], "fake_tensordict": [67, 70, 72, 73, 74, 298], "fake": [67, 70, 72, 73, 74, 297, 298], "overridden": [67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 300], "afterward": [67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205, 309], "silent": [67, 70, 72, 73, 74, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 167, 168, 169, 171, 174, 175, 177, 182, 188, 189, 191, 192, 194, 197, 202, 205], "attibut": [67, 70, 72, 73, 74], "speak": [67, 70, 72, 73, 74, 297], "rand_act": [67, 70, 72, 73, 74], "_step": [67, 70, 72, 73, 74, 92, 98, 101, 104, 115, 124], "privat": [67, 70, 72, 73, 74, 304, 309], "another_reward": [67, 70, 72, 73, 74], "callback": [67, 70, 72, 73, 74, 303], "auto_reset": [67, 70, 72, 73, 74, 304], "auto_cast_to_devic": [67, 70, 72, 73, 74, 303], "break_when_any_don": [67, 70, 72, 73, 74, 303], "return_contigu": [67, 70, 72, 73, 74, 136, 302], "soon": [67, 70, 72, 73, 74], "ndim": [67, 70, 72, 73, 74], "concomitt": [67, 70, 72, 73, 74], "workspac": [67, 70, 72, 73, 74], "prevail": [67, 70, 72, 73, 74], "creator": [68, 278, 279, 287, 288, 289], "substitut": [68, 134], "vecnorm": [68, 289], "env_creat": [68, 297], "test_env1": 68, "_td": 68, "observation_count": [68, 309], "test_env2": 68, "sleep": [68, 309], "ps": 68, "p1": 68, "p2": 68, "join": [68, 291, 298, 299], "9934": 68, "env_str": 69, "info_dict_read": 70, "set_info_dict_read": 70, "put": [70, 134, 289, 293, 298, 299, 300, 304], "read_act": 70, "read_don": 70, "reader": [70, 298], "frame_skip": [70, 77, 78, 79, 81, 82, 86, 105, 266, 269, 276, 295, 297, 298, 299, 308], "broken": [70, 136], "read_ob": 70, "dictat": [70, 195, 199, 224, 297, 304], "inner": [70, 100, 295, 298, 299, 303, 309], "read_reward": 70, "baseinfodictread": 70, "info_dict": 70, "hoc": 70, "dict_read": 70, "default_info_dict_read": 70, "my_info_kei": 70, "some_env": 70, "environn": 71, "safeti": 71, "constraint": [71, 299, 303], "behav": [71, 85, 170, 220, 305], "mymbenv": [71, 144, 162], "world_model": [71, 144, 162, 217], "super": [71, 92, 98, 101, 144, 154, 162, 203, 209, 211, 214, 220, 225, 227, 229, 297, 304, 308], "hidden_observ": [71, 144, 162], "mlp": [71, 144, 145, 147, 148, 149, 150, 158, 159, 162, 164, 185, 190, 212, 282, 293, 298, 302, 305, 308], "worldmodelwrapp": [71, 144, 162], "activation_class": [71, 144, 145, 147, 148, 149, 150, 155, 156, 160, 162, 164, 298, 303, 308], "relu": [71, 144, 151, 162, 167, 207], "activate_last_lay": [71, 144, 150, 160, 162], "depth": [71, 144, 145, 147, 148, 149, 150, 155, 156, 160, 162, 164, 168, 169, 190, 293, 298, 302, 303], "run_type_check": 71, "equal": [72, 73, 74, 109, 110, 145, 153, 158, 160, 164, 228, 232, 264, 287, 288, 297, 299, 305], "readthedoc": 72, "en": 72, "python_interfac": 72, "thread": 72, "task_id": 72, "my_env_fun": [73, 74], "custom_attribute_list": [73, 74], "custom_attribut": [73, 74], "custom_method_list": [73, 74], "custom_method": [73, 74], "deploi": [73, 74], "slight": [73, 74, 298], "overhead": [73, 74], "share_individual_td": [73, 74], "shared_memori": [73, 74], "policy_proof": [73, 74], "ll": [73, 74, 297, 298, 299, 300, 303, 309], "hidden": [73, 74, 155, 158, 159, 168, 169, 174, 175, 185, 186, 187, 189, 198, 201, 210, 221, 224, 293, 300, 302, 308], "update_kwarg": [73, 74], "googl": [75, 76, 299, 300, 303], "ant": [75, 76, 305], "get_environ": 76, "87": [76, 297, 298, 304, 305], "acrobot": [76, 309], "fetch": [76, 108, 305, 306, 309], "dm_control": [77, 78, 297, 302, 309], "task_nam": 77, "cheetah": [77, 78, 297, 309], "mo": [81, 82], "minecart": [81, 82], "mo_gym": 82, "sumbodul": 83, "wish": [84, 306], "placehold": [85, 129], "secur": 85, "snake": [86, 87], "6x6": [86, 87], "td1": [87, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 297], "12x12": 87, "tsp50": 87, "tsp100": 87, "106": [88, 304, 306], "scenario": [89, 90, 297, 303, 304], "flock": [89, 90], "continuous_act": [89, 90, 303], "cohesion_rew": 89, "collision_rew": 89, "separation_rew": 89, "velocity_rew": 89, "18": [89, 90, 164, 297, 298, 299, 300, 303, 304, 309], "agent_collision_rew": 90, "agent_distance_rew": 90, "model_bas": [91, 144, 162], "mask_kei": [92, 114], "adapt": [92, 221, 297, 304], "masker": 92, "binarydiscretetensorspec": [92, 212, 214, 235, 291], "maskedenv": 92, "ones_lik": [92, 163], "scatter": 92, "unsqueez": [92, 94, 95, 127, 130, 159, 297, 300, 303, 304], "_set_se": [92, 98, 101, 304], "tranform": [92, 97, 102, 107, 121, 123, 124, 128, 132], "transform_reward_spec": [93, 97, 98, 99, 108, 115, 118, 119, 128, 130], "as_invers": 94, "account": [94, 163, 293, 298, 300, 306], "movement": 94, "veloc": [94, 303, 304, 309], "propos": [94, 161, 219, 228, 282, 293, 300, 306], "pdf": [94, 146, 147, 148, 149, 150, 154, 171, 191, 194, 215, 225, 228, 237, 242, 250, 282], "1312": [94, 298], "5602": 94, "uesd": 94, "unsqueezetransform": [94, 304, 306], "consumpt": 94, "followin": 94, "pictur": 94, "cartpol": [94, 298, 300, 306, 309], "pixels_trsf": [94, 306], "grayscal": [94, 298, 300, 306, 309], "tensordictreplaybuff": [94, 270, 285, 291, 297, 298, 300, 306], "data_exclud": [94, 306], "_buffer": [94, 126], "transform_observation_spec": [94, 95, 96, 97, 98, 99, 102, 104, 106, 107, 108, 110, 115, 116, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 304], "del_kei": [95, 131, 302, 304], "unsqueeze_if_oor": 95, "observation_posit": 95, "observation_veloc": 95, "delet": 95, "key1": [95, 264, 272], "key2": [95, 264, 272], "crop": [96, 114, 256], "center": [96, 256], "width": [96, 116], "height": [96, 116], "squar": [96, 157, 179, 180, 256], "rewardsc": [97, 129, 297, 298, 300], "rewardclip": 97, "transformed_env": [97, 128, 129], "transform_env_devic": [97, 99, 128], "transform_input_spec": [97, 98, 99, 100, 110, 115, 120, 123, 128, 130], "transform_output_spec": [97, 99, 108, 115, 128], "untouch": [97, 99, 108, 115, 128], "transformfull_done_spec": [97, 99, 108, 115, 128], "dtype_in": 98, "dtype_out": 98, "scan": [98, 101, 200, 201], "expos": [98, 101, 200, 298], "not_transform": [98, 101], "rule": [98, 101, 199, 293, 299], "constructedw": [98, 101], "myenv": [98, 101], "orig_devic": 99, "unspecifi": 99, "transform_done_spec": [99, 128], "num_actions_effect": 100, "max_act": 100, "include_forward": 100, "dimension": [100, 158, 237, 242, 250, 303], "num_act": [100, 214], "action_out": 100, "_call": [100, 104, 304], "excluded_kei": 102, "finit": [103, 306], "first_dim": 104, "last_dim": 104, "allow_positive_dim": [104, 130], "flatten": [104, 270, 300, 303], "th": [104, 130, 304], "permit": [104, 130], "frameskip": 104, "repeatedli": [105, 299, 303], "init_kei": 107, "is_init": [107, 158, 194, 300], "tracker": 107, "probabilistictensordictmodul": [108, 199, 200, 308], "coef": 108, "pi_curr": 108, "pi_0": 108, "constrain": [108, 158, 224], "overfit": 108, "fine": [108, 305], "probabilist": [108, 195, 291, 299, 308], "get_dist": [108, 199, 200], "mod": [108, 158, 202, 300], "normalparamextractor": [108, 293, 299, 303], "probabilisticactor": [108, 185, 186, 187, 189, 208, 209, 213, 214, 220, 223, 224, 225, 226, 227, 229, 293, 297, 299, 303], "tanhnorm": [108, 185, 186, 187, 195, 201, 208, 209, 220, 224, 225, 226, 227, 229, 291, 299, 303, 308], "n_ob": [108, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229], "n_act": [108, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229], "distribution_class": [108, 185, 186, 187, 189, 195, 199, 201, 208, 209, 214, 220, 224, 225, 226, 227, 293, 297, 299, 303, 308], "return_log_prob": [108, 185, 186, 187, 195, 199, 201, 226, 293, 299, 303, 308], "apply_": 108, "copy_": [108, 297], "formulat": 108, "diverg": [108, 158, 195, 199, 217, 221], "noop": [109, 308], "30": [109, 174, 175, 297, 298, 299, 303, 304], "trial": 109, "op": [109, 188, 192, 275], "randomli": [109, 110, 125, 195, 199, 303, 304, 306], "noop_max": 109, "out_keys_inv": [110, 111, 115, 128, 304], "standard_norm": [110, 119, 297, 298, 300], "affin": [110, 119], "layer": [110, 134, 145, 147, 148, 155, 158, 160, 164, 165, 166, 168, 169, 176, 177, 183, 193, 202, 293, 298, 299, 300, 305], "normal": [110, 134, 145, 157, 160, 163, 167, 179, 180, 188, 195, 199, 210, 221, 224, 269, 271, 289, 293, 295, 300, 303, 309], "set_default_tensor_typ": 110, "doubletensor": 110, "isclos": 110, "next_ob": [110, 237, 238, 239, 240, 308], "rubric": [110, 201], "init_stat": [110, 297, 298, 299, 300], "3752e": 110, "01": [110, 194, 205, 210, 221, 224, 297, 298, 300, 303, 304, 305, 307], "5087e": 110, "03": [110, 297, 298, 304, 305, 307], "9294e": 110, "9636": 110, "5608": 110, "6408": 110, "num_it": [110, 298, 299], "reduce_dim": [110, 297, 298, 299, 300], "cat_dim": [110, 297, 298, 299, 300], "keep_dim": [110, 298, 300], "constant": [110, 124, 295, 297, 299, 300, 309], "statist": [110, 134, 226, 289, 297, 298, 299, 309], "approach": [110, 297, 299, 309], "gaussian": [110, 125, 144, 162, 165, 166, 171, 188, 299], "empir": [110, 144, 162, 195, 199, 297, 299, 303], "3d": 110, "third": [110, 191, 303], "r3m": [113, 305], "resnet": [113, 131, 133], "visual": [113, 131, 133, 299, 304], "embed": [113, 131, 132, 133, 172, 184, 185, 186, 187, 198, 203, 305], "ego4d": [113, 131, 133], "univers": [113, 131, 133], "suraj": [113, 131], "nair": [113, 131], "aravind": [113, 131], "rajeswaran": [113, 131], "vikash": [113, 131, 133], "kumar": [113, 131, 133], "chelsea": [113, 131], "finn": [113, 131], "abhinav": [113, 131], "gupta": [113, 131], "2203": [113, 131, 162, 305], "12601": [113, 131, 305], "_init": [113, 131, 297], "snippet": [113, 131, 297], "resnet50": [113, 133, 305], "model_nam": [113, 131, 133, 259], "resnet34": 113, "resnet18": 113, "r3m_vec": [113, 305], "feed": [113, 133, 222, 293, 297, 303, 306], "244": [113, 133, 304], "stack_imag": [113, 133], "tread": [113, 133], "separet": [113, 133], "hub": [113, 133, 305], "resnet50_weight": [113, 133], "imagenet1k_v1": [113, 133], "download_path": [113, 133], "tensor_pixels_kei": [113, 133], "dest": [113, 131, 133, 198], "sub_seq_len": 114, "sample_dim": [114, 297], "primarili": 114, "hesit": 114, "request": 114, "robust": 114, "mix": [114, 172, 181, 235, 297, 303], "NOT": 114, "improp": 114, "create_copi": 115, "renam": [115, 117, 143, 297], "stuff": 115, "braxenv": [115, 291], "newnam": 115, "interpol": [116, 298, 300], "bilinear": [116, 300], "r2g": 117, "99": [117, 134, 162, 218, 231, 236, 243, 285, 297, 298, 299, 304, 308], "reward_to_go": 117, "bernoulli_": 117, "9010": 117, "9404": [117, 243], "9701": [117, 243], "9900": [117, 243], "0000": [117, 192, 202, 243, 299, 300, 304, 308], "crash": 117, "clamp_min": 118, "clamp_max": 118, "clip_min": 118, "scalar": [118, 148, 150, 165, 166, 188, 192, 194, 205, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 293, 298, 304], "clip_max": 118, "episode_": 120, "reward1": 120, "reward2": 120, "ho": 120, "excludetransform": [121, 306], "squeeze_dim": 122, "step_count_kei": 123, "recognis": 123, "target_return": 124, "guid": [124, 292, 297, 303], "accordingli": [124, 196, 300], "conjunct": [124, 298], "hindsight": 124, "relabel": 124, "reward2gotransform": 124, "primer": [125, 300], "default_valu": [125, 300], "unit": [125, 144, 155, 168, 169, 174, 175, 299], "transfomedenv": 125, "mykei": 125, "__unless": 125, "exists__": 125, "dtype_or_devic": 125, "pool": 126, "from_int": 127, "255": [127, 304, 306], "ri": 127, "principl": 128, "cattransform": 128, "notabl": 128, "rewardsum": [128, 303], "cache_spec": 129, "anymor": [129, 198], "set_missing_toler": 129, "keyerror": 129, "unsqueeze_dim": [130, 304], "danger": 130, "vc1": 131, "vc1_vec": 131, "small": [131, 297, 299, 303, 309], "untrain": 131, "make_noload_model": 131, "naiv": 131, "vip": [132, 133, 305], "toward": 133, "implicit": [133, 220, 306], "jason": 133, "ma": 133, "shagun": 133, "sodhani": 133, "dinesh": 133, "jayaraman": 133, "osbert": 133, "bastani": 133, "ami": 133, "zhang": 133, "vip_vec": 133, "shared_td": 134, "decai": [134, 188, 192, 228, 271, 297, 298, 300, 309], "9999": [134, 304], "0001": [134, 155, 167, 299, 300, 304], "fly": [134, 221, 294, 299, 304, 306, 309], "to_observation_norm": 134, "underflow": [134, 271], "build_td_for_shared_vecnorm": 134, "memmori": 134, "memmap_": 134, "queue": [134, 306], "td_share": 134, "v": [134, 185, 220, 227, 293, 297, 298], "state_dim": [135, 146, 151, 171, 174, 175, 189], "action_dim": [135, 146, 147, 149, 151, 171, 189, 297, 302], "gsde": [135, 225, 289], "func": 135, "gsdemodul": 135, "check_dtyp": 136, "short": [136, 298, 299, 303], "discrep": [136, 208, 210, 211, 212, 221, 224, 226, 235], "imposs": 136, "probabilistictdmodul": [141, 142, 160, 195, 199, 236, 269], "next_tensordict": 143, "keep_oth": [143, 304], "exclude_reward": 143, "exclude_don": 143, "exclude_act": 143, "next_": 143, "funtion": [143, 304], "cross": 144, "entropi": [144, 208, 209, 210, 214, 220, 221, 223, 224, 225, 227, 229, 303], "botev": 144, "et": 144, "al": [144, 309], "2013": 144, "cem": 144, "plan": [144, 161, 162], "varianc": [144, 157, 167, 179, 180, 294, 297, 299, 303], "rank": 144, "k": 144, "repeat": [144, 299, 303, 304], "maximis": [144, 147, 149, 162, 293, 297, 298, 299, 303, 304], "horizon": [144, 162, 299], "modelbasedenv": [144, 162], "planning_horizon": [144, 162], "optim_step": [144, 162, 298], "mpc": [144, 161, 162], "num_candid": [144, 162], "candid": [144, 162], "top_k": [144, 162], "modelbasedenvbas": [144, 161, 162, 291], "safemodul": [144, 161, 185, 187, 199, 208, 209, 214, 220, 224, 225, 226, 227, 229, 278, 279, 285, 291, 308], "next_hidden_observ": 144, "num_cel": [145, 147, 148, 149, 150, 155, 156, 158, 160, 164, 185, 298, 299, 300, 303, 308], "elu": [145, 147, 148, 149, 150, 155, 156, 298, 308], "activation_kwarg": [145, 160], "norm_class": [145, 147, 148, 160], "norm_kwarg": [145, 160], "bias_last_lay": [145, 147, 148, 149, 150, 156, 160], "aggregator_class": [145, 147, 148, 298, 300, 308], "squashdim": [145, 147, 308], "aggregator_kwarg": [145, 147, 148, 298, 300], "squeeze_output": [145, 147, 148, 298, 300], "convolut": [145, 147, 148, 176], "neural": [145, 176, 198, 293, 298, 299, 300, 303, 304, 309], "produc": [145, 160, 164, 170, 185, 187, 189, 256, 299, 300, 306, 309], "cell": [145, 160, 164, 299], "kernel": [145, 156, 159], "cnet": 145, "34": [145, 160, 297, 298, 304, 305, 307], "35": [145, 160, 297, 298, 300, 303, 304, 305], "rectangular": 145, "transformer_config": [146, 171, 189], "decisiontransform": [146, 171], "dtconfig": [146, 151, 171], "2202": [146, 151, 171, 223], "05607": [146, 151, 171, 223], "return_to_go": [146, 151, 171, 189], "conv_net_kwarg": [147, 148], "mlp_net_kwarg": [147, 148, 149], "use_avg_pool": [147, 148], "WITH": [147, 148, 149, 150, 194, 228], "1509": [147, 148, 149, 150, 162, 194, 219, 228, 304], "02971": [147, 148, 149, 150, 194, 228], "convnet": [147, 300, 308], "ndims_in": 147, "avgpool": [147, 148], "adaptiveavgpool2d": [148, 298, 300], "400": [149, 150, 303, 304, 306], "mlp_net_kwargs_net1": 150, "mlp_net_kwargs_net2": 150, "decion": 151, "desdescrib": 151, "n_embd": 151, "n_layer": 151, "n_head": 151, "n_inner": 151, "n_posit": 151, "resid_pdrop": 151, "attn_pdrop": 151, "gpt2config": 151, "atol": [152, 178], "06": [152, 178, 297, 298, 303, 304], "rtol": [152, 178], "batch_shap": [152, 178], "event_shap": [152, 178], "absolut": [152, 178, 297], "densiti": [152, 163, 170, 180], "mass": [152, 163, 170, 180, 304], "rsampl": [152, 170, 199], "sample_shap": [152, 163, 170], "dqnet": 153, "atom": 153, "softmax": [153, 190, 191], "action_spac": [154, 173, 190, 191, 196, 197, 208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 300], "var_num": [154, 173, 190, 191, 197], "action_value_kei": [154, 173, 191, 196, 197, 222, 235], "perspect": [154, 191, 215, 299], "1707": [154, 191, 215, 224], "06887": [154, 191, 215], "mult": [154, 164, 173, 190, 191, 196, 197], "functional_modul": [154, 173, 196, 198, 201, 293], "make_funct": [154, 173, 195, 196, 198, 201, 203, 222, 293, 308], "tensordict_modul": [154, 173, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 211, 214, 220, 224, 225, 226, 227, 229, 293], "nbin": [154, 190, 293], "customdistributionalqv": 154, "log_softmax": [154, 190], "one_hot": [154, 173], "qvalue_actor": [154, 173, 190, 196, 293], "std_bia": 155, "std_min_val": 155, "belief": [155, 168, 174, 175], "1912": [155, 216, 217, 218], "01603": [155, 216, 217, 218], "softplu": [155, 167, 205, 206, 207], "out_features_valu": 156, "cnn_kwarg": [156, 298], "mlp_kwarg": [156, 159, 298], "duel": 156, "cnn": [156, 298, 308], "06581": 156, "512": [156, 298, 304, 306], "upscal": [157, 179, 180], "tanh_loc": [157, 179, 180], "event_dim": [157, 178, 179], "ultim": [157, 179, 180], "poor": [157, 179, 180], "explos": [157, 179, 180], "switch": [157, 180], "sigma": [157, 171, 179, 180, 188, 194, 299], "formula": [157, 179, 180, 208, 210, 221, 224, 294, 299], "embedd": [158, 159], "lstmcell": 158, "correspont": 158, "input_s": [158, 159, 300], "hidden_s": [158, 159, 300], "num_lay": [158, 168, 169], "b_ih": 158, "b_hh": 158, "introduc": [158, 194, 297], "proj_siz": 158, "recurrent_state_h": [158, 300], "recurrent_state_c": [158, 300], "triplet": [158, 196, 197], "custom_kei": 158, "temporal_mod": 158, "set_temporal_mod": 158, "tensordictsequenti": [158, 190, 200, 293, 297, 300, 302, 305, 308], "seq": [158, 300, 302], "lstm_modul": 158, "rs_h": 158, "rs_c": 158, "set_recurrent_mod": [158, 300], "batch_first": [158, 300], "hidden0": 158, "hidden1": 158, "policy_infer": 158, "policy_train": 158, "traj_td": 158, "td_inf": 158, "assert_clos": 158, "lstm_kwarg": 159, "next_observ": [159, 208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 302], "time_step": 159, "2d": [159, 303], "hidden0_in": 159, "hidden1_in": 159, "hidden0_out": 159, "hidden1_out": 159, "single_bias_last_lay": 160, "layer_class": 160, "layer_kwarg": 160, "perceptron": 160, "seamless": 160, "lazylinear": [160, 293, 299, 304, 305, 308], "42": [160, 208, 209, 211, 220, 227, 297, 298, 304], "noisylinear": [160, 165, 291, 298], "noisylazylinear": [160, 291], "At": [161, 298, 299, 300, 302, 304, 305], "mpcplanner": 161, "tensordict_out": [161, 309], "mppi": 162, "covari": 162, "william": [162, 226], "aldrich": 162, "theodor": 162, "01149": 162, "hansen": 162, "wang": 162, "su": 162, "04955": 162, "valueoper": [162, 185, 186, 187, 208, 209, 210, 211, 214, 220, 221, 224, 225, 226, 227, 229, 285, 293, 297, 299], "tdlambdaestim": [162, 291, 297], "value_net": [162, 212, 226, 237, 238, 239, 240, 299], "adv": 162, "lmbda": [162, 231, 237, 240, 242, 248, 249, 250, 253, 254, 294, 297, 299, 303], "95": [162, 231, 298, 299, 300, 304], "value_network": [162, 211, 212, 215, 220, 227, 237, 238, 239, 240, 294, 297, 299], "temperatur": [162, 209, 220], "neg_inf": 163, "inf": 163, "padding_valu": 163, "www": 163, "api_doc": 163, "tf_agent": 163, "event": [163, 170, 246, 247, 248, 249, 251, 252, 253, 254, 306], "unnorm": [163, 170], "sparse_mask": 163, "dens": 163, "1203": 163, "0928": 163, "0831": 163, "1972": 163, "n_agent_input": [164, 303], "n_agent_output": [164, 303], "centralis": [164, 303], "share_param": [164, 303], "multiag": [164, 172, 181, 235], "homogen": [164, 303], "toech": 164, "agent_network": 164, "modulelist": [164, 282, 308], "centalis": 164, "shown": [164, 293, 302, 303, 306], "std_init": [165, 166], "matrix": [165, 166], "initialize_paramet": 165, "isol": 165, "1706": [166, 181], "10295v3": 166, "induc": 166, "aid": 166, "scale_map": 167, "biased_softplus_1": 167, "scale_lb": [167, 174, 175], "exp": [167, 207], "module_norm": 167, "channel": [168, 169, 298], "decod": 168, "1803": [168, 169, 172], "10122": [168, 169], "rnn_hidden": 168, "latent": 169, "excacli": 170, "inres": 171, "mu": [171, 194, 299], "state_shap": [172, 235], "mixing_embed_dim": [172, 235], "qmix": [172, 303], "mixer": [172, 181, 235], "monoton": 172, "hyper": 172, "11485": 172, "qmixerloss": [172, 181], "qmix_vdn": [172, 181], "eventu": [172, 300, 304], "vdn": [172, 181], "greedi": [173, 191, 192, 197, 298, 300], "hidden_dim": [174, 175], "posterior": [174, 217], "rssm": [174, 175, 217], "1811": [174, 175], "04551": [174, 175], "obs_embed": 174, "rnn_hidden_dim": 175, "dream": 175, "tanhtransform": 179, "decomposit": 181, "05296": 181, "vmap": [182, 198, 201, 308], "hide": [182, 299, 303], "satisfi": [182, 293], "tensordictmodulebas": [182, 196, 300], "vmap_dim": 182, "lam": 182, "sample_in": 182, "sample_in_td": 182, "vm": 182, "translat": [184, 195], "character": [184, 190, 195, 196, 198, 306], "overflow": [184, 190, 191, 195, 196, 197, 198, 199], "td_modul": [184, 185, 186, 187, 195, 198, 199, 201, 203, 308], "3635": 184, "0340": 184, "1476": 184, "3911": [184, 304], "1664": [184, 298, 304], "5455": 184, "2247": 184, "4583": 184, "2916": 184, "2160": 184, "5337": 184, "5193": 184, "grad_fn": [184, 192, 308], "addmmbackward0": 184, "actorvalueoper": [185, 293], "get_policy_oper": [185, 186, 187, 210, 221, 224, 293], "standalon": [185, 186, 187], "tdmodul": [185, 186, 187, 285], "get_critic_oper": 185, "common_oper": [185, 187], "policy_oper": [185, 186, 187], "value_oper": [185, 186, 187], "normalparamwrapp": [185, 186, 187, 195, 201, 208, 209, 214, 220, 224, 225, 226, 227, 229, 291, 308], "module_hidden": [185, 187], "td_module_hidden": [185, 187], "module_act": [185, 187], "td_module_act": [185, 186, 187], "module_valu": [185, 186, 187], "td_module_valu": [185, 186, 187], "state_action_valu": [185, 203, 209, 227, 236, 282, 285, 293, 297, 308], "td_clone": [185, 186, 187], "tensordictmodulewrapp": [185, 278, 279, 285], "get_policy_head": [185, 186, 187], "safesequenti": [185, 186, 187, 235], "head": [185, 187, 210, 221, 224], "get_value_head": [185, 186, 187], "get_value_oper": [185, 186, 187, 210, 221, 224], "action_modul": 186, "state_valu": [186, 187, 203, 210, 221, 224, 225, 227, 237, 238, 239, 240, 242, 244, 246, 248, 250, 251, 253, 293, 297, 299, 303], "qualiti": [187, 293], "actorcriticoper": [187, 210, 221, 224, 293], "embeddig": 187, "refet": 187, "actorcriticwrapp": [187, 293, 297], "po": [188, 192], "sigma_init": 188, "epsilon": [188, 192, 194, 228, 271, 298, 299, 300], "sigma_end": 188, "annealing_num_step": [188, 192, 194, 297, 298, 300], "captur": [188, 192, 194], "omiss": [188, 192, 194], "warn": [188, 192, 194, 298, 309], "ommit": [188, 192, 194, 306], "inferec": 189, "set_tensor_kei": 189, "dt_inference_wrapp": 189, "baz": 189, "inference_context": 189, "obs_dim": 189, "15": [189, 194, 216, 297, 298, 304, 306, 308], "tanhdelta": [189, 291, 297], "dtactor": 189, "actor_modul": [189, 308], "dist_class": 189, "dist_kwarg": 189, "distribution_kwarg": [189, 195, 199, 299, 303], "inference_actor": 189, "sequence_length": 189, "mask_context": 189, "qvaluemodul": [190, 196, 235, 300], "distributionaldqnnet": 190, "make_log_softmax": 190, "my_action_valu": [191, 197], "chanc": 191, "thid": 191, "eps_init": [192, 194, 298, 300], "eps_end": [192, 194, 298], "explorative_polici": [192, 194], "9055": [192, 304], "9277": 192, "6295": 192, "2532": 192, "addbackward0": 192, "lmheadmodel": 193, "extract": [193, 297, 299], "actor_head": [193, 210, 221, 224], "base_model": 193, "lm_head": 193, "ornstein": 194, "uhlenbeck": 194, "ou": [194, 297], "correl": 194, "sort": 194, "noise_t": 194, "noise_": 194, "theta": [194, 299, 304], "sigma_t": 194, "sqrt": 194, "sigma_": 194, "anneal": 194, "ou_prev_nois": 194, "ou_step": 194, "increas": [194, 303], "x0": 194, "sigma_min": 194, "n_steps_ann": 194, "is_init_kei": 194, "_ou_prev_nois": 194, "_ou_step": 194, "default_interaction_typ": [195, 199], "interaction_typ": [195, 199], "set_interaction_typ": [195, 199], "cache_dist": [195, 199], "n_empirical_estim": [195, 199], "chose": 197, "functionalmodul": 198, "functionalmodulewithbuff": 198, "grucel": 198, "td_fmodul": 198, "td_function": 198, "td_state": 198, "ensembl": [198, 225], "params_repeat": 198, "td_vmap": [198, 201], "random_sampl": [198, 199], "suppli": 199, "fist": 199, "log_prob_kei": [199, 303], "probabilistictensordictsequenti": [200, 208, 210, 221, 224, 226, 278, 279, 308], "partial_toler": [200, 201, 302], "who": [200, 201], "AND": [200, 201], "tensordictsequenci": 201, "tensordictsequ": 201, "safeprobabilisticmodul": [201, 293], "spec1": 201, "net1": 201, "module1": 201, "td_module1": 201, "spec2": 201, "module2": 201, "td_module2": 201, "clamp": [202, 217, 273, 304], "boundari": [202, 299, 303], "resolut": 202, "simplest": [202, 297, 299, 300, 303, 306, 309], "9944": 202, "9991": 202, "3020": 202, "2299": [202, 304], "5418": 202, "2989": 202, "6849": 202, "3169": 202, "2690": 202, "9649": [202, 304], "5686": 202, "8602": 202, "0315": 202, "8455": [202, 304], "6027": 202, "4746": 202, "7843": 202, "7782": 202, "2111": 202, "5115": 202, "4687": 202, "5760": 202, "custommodul": 203, "cat": [203, 209, 211, 220, 225, 227, 229, 308], "imaginari": 204, "imagin": 204, "transition_model": 204, "get_reward_oper": 204, "get_transition_model_oper": 204, "min_val": [205, 207], "bias": [205, 294, 297], "_bia": 205, "invert": [206, 299], "surject": 207, "expln": 207, "biased_softplu": [207, 291], "beggin": 207, "biased_softplus_": 207, "syntax": [207, 297], "met": [207, 304], "1602": 208, "01783v2": 208, "entropy_bonu": [208, 210, 221, 224, 299], "favour": [208, 210, 221, 224], "samples_mc_entropi": [208, 210, 221, 223, 224], "mont": [208, 210, 221, 224, 297], "carlo": [208, 210, 221, 224, 297], "entropy_coef": [208, 210, 221, 224, 299, 303], "critic_coef": [208, 210, 221, 224, 299], "loss_critic_typ": [208, 210, 221, 224, 226, 299], "l1": [208, 210, 211, 212, 214, 221, 224, 225, 226, 229, 232, 235, 293, 297], "l2": [208, 210, 211, 212, 213, 214, 217, 218, 221, 224, 225, 226, 229, 232, 235, 297], "smooth_l1": [208, 209, 210, 211, 212, 214, 220, 221, 224, 225, 226, 227, 229, 232, 235, 299], "separate_loss": [208, 210, 211, 214, 220, 221, 224, 225, 226, 227, 229], "propag": [208, 210, 211, 214, 220, 221, 224, 225, 226, 227, 229, 237, 238, 239, 240, 299, 303], "advantage_kei": [208, 210, 221, 224, 226, 237, 238, 239, 240], "value_target_kei": [208, 210, 221, 224, 226, 237, 238, 239, 240, 299], "value_target": [208, 210, 221, 224, 226, 237, 238, 239, 240, 299, 303], "loss_crit": [208, 224, 299, 303], "loss_entropi": [208, 224, 299, 303], "loss_object": [208, 224, 299, 303], "recur": [208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229, 237, 238, 239, 240, 241], "next_reward": [208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229], "next_don": [208, 209, 211, 212, 214, 220, 224, 225, 226, 227, 229], "loss_obj": 208, "sacloss": [208, 219, 228, 291], "select_out_kei": [208, 209, 211, 214, 220, 224, 225, 227, 229], "throughout": [208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 299, 309], "essenti": [208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 235, 298, 304, 306], "make_value_estim": [208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 230, 235, 294, 297, 298, 303], "value_typ": [208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 231, 235, 297], "valueestim": [208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 231, 235, 291, 294, 297, 303], "hyperparam": [208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 297, 304], "enum": [208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 231, 235, 297], "default_value_estim": [208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 297], "refin": [208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235], "default_value_kwarg": [208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 235, 291, 297], "dqnloss": [208, 209, 211, 214, 215, 216, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 235, 280, 291, 294, 298, 300], "dqn_loss": [208, 209, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 230, 235], "conserv": 209, "2006": [209, 304], "04779": 209, "actor_network": [209, 211, 213, 214, 220, 223, 225, 227, 229, 297], "qvalue_network": [209, 214, 220, 225, 227, 229], "loss_funct": [209, 211, 212, 213, 214, 220, 225, 227, 229, 232, 235, 297], "alpha_init": [209, 214, 223, 225, 227], "min_alpha": [209, 214, 223, 225, 227], "max_alpha": [209, 214, 223, 225, 227], "fixed_alpha": [209, 214, 223, 225, 227], "target_entropi": [209, 214, 223, 225, 227], "prod": [209, 223, 227], "n_action": [209, 212, 223, 227], "delay_actor": [209, 211, 227, 229], "delay_qvalu": [209, 214, 225, 227, 229], "min_q_weight": 209, "max_q_backup": 209, "backup": 209, "deterministic_backup": 209, "num_random": 209, "with_lagrang": 209, "lagrang": 209, "lagrange_thresh": 209, "threshold": [209, 210, 299], "valueclass": [209, 211, 214, 220, 225, 227, 229], "qvalu": [209, 214, 220, 225, 227, 229, 282], "loss_actor": [209, 211, 214, 220, 225, 226, 227, 229, 268, 297, 308], "loss_alpha": [209, 214, 225, 227], "loss_alpha_prim": 209, "loss_qvalu": [209, 214, 220, 225, 227, 229], "clip_epsilon": [210, 299, 303], "normalize_advantag": [210, 221, 224, 303], "value_kei": [210, 221, 224, 237, 238, 239, 240, 297], "somemodul": [210, 221, 224], "someactor": [210, 221, 224], "value_head": [210, 221, 224], "somevalu": [210, 221, 224], "loss_modul": [210, 219, 221, 222, 224, 228, 273, 284, 285, 294, 295, 297, 298, 299, 303, 306], "ppoloss": [210, 221, 291], "delay_valu": [211, 212, 215, 226, 227, 235, 298, 300], "loss_valu": [211, 220, 226, 227, 297, 299, 303, 308], "pred_valu": [211, 229, 297, 308], "pred_value_max": [211, 297, 308], "target_valu": [211, 225, 229, 236, 294, 297, 308], "target_value_max": [211, 297, 308], "qvalueactor": [212, 235, 293, 298, 300], "mult_one_hot": [212, 214, 235], "loss_val": [212, 294, 297, 299, 300, 303, 306], "2106": 213, "01345": 213, "ste": 214, "num_qvalue_net": [214, 220, 225, 227, 229], "target_entropy_weight": 214, "onehotcategor": [214, 291], "disctount": 215, "distributionalqvalueactor": [215, 293], "input_tensordict": [215, 297], "actor_model": 216, "value_model": [216, 218], "model_based_env": 216, "dreamerenv": [216, 291], "imagination_horizon": 216, "unrol": [216, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254], "discount_loss": [216, 218], "lambda_kl": 217, "lambda_reco": 217, "lambda_reward": 217, "reco_loss": 217, "reward_loss": 217, "free_nat": 217, "nat": 217, "delayed_clamp": 217, "global_averag": 217, "value_loss": 218, "fake_data": 218, "ddpgloss": [219, 228, 285, 291, 297, 308], "td3loss": [219, 228, 291], "value_network_update_interv": 219, "contrast": [219, 306], "06461": 219, "2110": 220, "06169": 220, "expectil": 220, "tau": [220, 228, 297, 298], "antmaz": 220, "sticht": 220, "loss_value_diff": 220, "diff": 220, "old_polici": 221, "new_polici": 221, "old": [221, 309], "distanc": [221, 232, 236, 237, 303], "apart": [221, 303], "dtarg": 221, "samples_mc_kl": 221, "analyt": 221, "decrement": 221, "loss_": [222, 268, 294, 297], "equip": [222, 300], "gh": 222, "_acceptedkei": 222, "dataclass": [222, 282], "_forward_value_estimator_kei": 222, "alter": [222, 293], "value_estim": [222, 237, 238, 239, 240, 241, 294, 297, 303], "myloss": 222, "action2": 222, "convert_to_funct": [222, 297], "expand_dim": 222, "create_target_param": [222, 297], "compare_against": [222, 297], "funs_to_decor": 222, "stuctur": 222, "_param": 222, "expans": 222, "resampl": 222, "_target_param": 222, "valueestimatorbas": [222, 291], "blend": 222, "upcom": [222, 246, 247, 248, 249, 251, 252, 253, 254, 297], "proxim": [224, 299, 303], "optimis": [224, 269, 299, 303], "flavour": [224, 303, 308], "clipppoloss": [224, 291, 299, 303], "klpenppoloss": [224, 291], "regularis": 224, "06347": 224, "gae": [224, 291, 294, 297, 299, 303], "ppo_loss": 224, "tdlambda": [224, 231, 294, 297], "base_lay": 224, "randn_lik": 224, "samplelogprob": 224, "openreview": [225, 282], "ay8zfzm0tdd": [225, 282], "sub_sample_len": 225, "subsampl": [225, 264, 295], "action_log_prob_actor": 225, "state_action_value_actor": [225, 229], "connectionist": 226, "1992": 226, "doi": 226, "1007": 226, "bf00992696": 226, "actor_net": [226, 297, 299], "1801": 227, "01290": 227, "applic": [227, 235, 304], "1812": 227, "05905": 227, "redqloss": [228, 291], "math": 228, "theta_t": [228, 304], "theta_": [228, 304], "polyak": 228, "policy_nois": 229, "noise_clip": 229, "next_state_valu": [229, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 291], "td0": [230, 297], "v2": [232, 246, 247, 248, 249, 251, 252, 253, 254, 282], "strict_shap": 232, "view_a": 232, "qmixer": [235, 291], "local_valu": 235, "visibl": [235, 303], "dafault": 235, "acceptedkei": 235, "global_valu": 235, "premad": 235, "penultim": 235, "local_value_network": 235, "mixer_network": 235, "suggest": [235, 303], "value_modul": [235, 299, 308], "qnet": [235, 297], "next_val_kei": 236, "pred_next_v": 236, "usus": 236, "mse": 236, "q_valu": 236, "n_steps_to_next": 236, "value_next_st": 236, "1506": [237, 242, 250], "02438": [237, 242, 250], "exponenti": [237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 271], "average_ga": [237, 299], "skip_exist": [237, 238, 239, 240], "advang": 237, "gradient_mod": 237, "value_error": [237, 238, 239, 240, 241], "sign": 237, "unused_arg": 237, "target_param": [237, 238, 239, 240, 241, 297, 303], "98": [237, 238, 239, 240, 297, 298, 304, 305], "94": [237, 240, 298, 300, 304], "unpack": [237, 238, 239, 240], "tensor_kei": [237, 238, 239, 240, 241], "next_valu": [237, 238, 239, 240, 241], "aka": [238, 298], "average_reward": [238, 239, 240], "tdestim": [238, 239, 241], "infti": 239, "valuefunctionbas": 241, "time_dim": [242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254], "old_stat": [242, 244, 246, 248, 250, 251, 253], "new_stat": [242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "rolling_gamma": [246, 247, 248, 249, 251, 252, 253, 254], "g1": [246, 247, 248, 249, 251, 252, 253, 254], "g2": [246, 247, 248, 249, 251, 252, 253, 254], "g3": [246, 247, 248, 249, 251, 252, 253, 254], "g4": [246, 247, 248, 249, 251, 252, 253, 254], "v3": [246, 247, 248, 249, 251, 252, 253, 254], "v4": [246, 247, 248, 249, 251, 252, 253, 254, 297, 299, 305], "out_file_bas": 255, "skip_reset": 255, "dump": 255, "interv": [255, 256, 265, 275, 298, 304], "center_crop": 256, "make_grid": 256, "Will": 256, "grid": 256, "exp_nam": [257, 258, 261, 262, 263, 285, 298], "log_dir": [257, 258, 260, 262, 298], "templat": 257, "csv": [258, 260, 298], "minim": [258, 306], "dependeci": 258, "experiment_nam": [259, 260], "uuid": [259, 298, 309], "date": 259, "logger_typ": 260, "logger_nam": 260, "tensorboard": [260, 262, 308], "wandb": [260, 263, 308], "mlflow": [260, 261], "wandb_kwarg": 260, "mlflow_kwarg": 260, "tracking_uri": 261, "uri": 261, "datastor": 261, "tb_log": 262, "tensoarboard": 262, "sub_traj_len": 264, "min_sub_traj_len": 264, "register_op": [264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 295, 298], "process_optim_batch": [264, 270, 271, 295], "td_out": [264, 272], "_process_optim_batch_hook": [264, 295], "batch_subsampl": 264, "clear_cuda": 265, "pre_optim_step": [265, 295], "counter": [266, 295], "log_pbar": [266, 267, 269, 271, 295, 298], "progress": [266, 267, 269, 273, 295, 298, 300, 309], "count_fram": 266, "pre_steps_log": [266, 267, 295], "count_frames_log": 266, "lognam": 267, "r_train": [267, 298], "log_reward": [267, 298], "loss_compon": 268, "appl": 268, "omit": [268, 299, 304, 306], "optimizer_hook": 268, "record_interv": [269, 297, 298], "record_fram": [269, 276, 297, 298], "policy_explor": [269, 285, 297, 298], "log_kei": [269, 298], "suffix": 269, "underestim": 269, "suppos": [269, 295, 309], "set_exploration_typ": [269, 291, 299, 300, 308], "r_evalu": [269, 297], "flatten_tensordict": [270, 298], "max_dim": 270, "rb_trainer": 270, "batch_process": [270, 271, 272, 295], "post_loss": [270, 295], "999": [271, 298], "jitter": 271, "finfo": 271, "default_dtyp": 271, "get_default_dtyp": 271, "reward_norm": 271, "update_reward_stat": 271, "normalize_reward": 271, "make_train": [272, 291], "_process_batch_hook": [272, 295], "select_kei": [272, 295], "versatil": 273, "lossmodul": [273, 284, 285, 291], "optim_steps_per_batch": [273, 295, 298], "epoch": [273, 299, 303], "clip_grad_norm": 273, "partial": [273, 300], "clip_norm": 273, "progress_bar": 273, "tqdm": [273, 297, 299, 300, 303, 304], "save_trainer_interv": 273, "disk": [273, 295, 297, 298, 300, 306], "log_interv": [273, 298], "save_trainer_fil": [273, 295], "datacollectorbas": [275, 278, 279, 285, 291], "update_weights_interv": [275, 298], "sit": [275, 298], "update_weight": 275, "post_step": [275, 295], "cfg": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289], "dictconfig": [276, 277, 278, 279, 282, 283, 284, 285, 286, 289], "divid": [276, 293, 297, 303, 304], "unknowingli": 276, "annealing_fram": [276, 297], "init_env_step": [276, 277, 297], "proof_environ": [277, 282, 297], "sta": 277, "ot": 277, "actor_model_explor": [278, 279, 297], "make_env_kwarg": [278, 279], "targetnetupdat": [280, 281, 284, 285], "redqloss_deprec": 281, "actor_net_kwarg": 282, "qvalue_net_kwarg": 282, "observation_kei": 282, "dummi": [282, 297, 309], "parser_env_arg": 282, "parser_model_args_continu": 282, "cattensor": [282, 297, 302, 304, 309], "hydra": 282, "config_stor": 282, "configstor": 282, "halfcheetah": [282, 297], "config_field": 282, "config_cl": 282, "redqmodelconfig": 282, "envconfig": 282, "make_dataclass": 282, "cls_name": 282, "cs": 282, "config_path": 282, "config_nam": 282, "17": [282, 297, 298, 304, 305], "replayargsconfig": 283, "target_net_updat": [285, 297, 298], "constitu": 285, "learnt": [285, 297, 299], "tensorboardlogg": [285, 291], "egreedywrapp": [285, 298, 300], "env_proof": 285, "obs_spec": 285, "net_valu": 285, "dir": [285, 295, 298], "gettempdir": 285, "argpars": [286, 289], "namespac": [286, 289], "parser": [286, 289], "transformed_env_constructor": [286, 291], "num_env_per_collector": [287, 288], "video_tag": 289, "norm_obs_onli": 289, "use_env_cr": 289, "custom_env_mak": 289, "custom_env": 289, "return_transformed_env": 289, "action_dim_gsd": 289, "state_dim_gsd": 289, "obs_norm_state_dict": 289, "wheter": 289, "maker": 289, "asyncdatacollector": 291, "distributedsyncdatacollector": 291, "submitit_delayed_launch": 291, "raycollector": 291, "samplerwithoutreplac": [291, 299, 303, 306], "tensorstorag": 291, "tensordictroundrobinwrit": 291, "d4rlexperiencereplai": 291, "openmlexperiencereplai": 291, "unboundeddiscretetensorspec": [291, 299, 309], "lazystackedtensorspec": 291, "lazystackedcompositespec": 291, "prompttensordicttoken": 291, "rolloutfrommodel": 291, "tokenizeddatasetload": 291, "create_infinite_iter": 291, "consolidate_spec": 291, "check_no_exclusive_kei": 291, "contains_lazy_spec": 291, "tensordictrecord": 291, "videorecord": [291, 299], "get_available_librari": 291, "set_exploration_mod": 291, "make_composite_from_td": [291, 304], "braxwrapp": 291, "dmcontrolenv": [291, 297, 302, 309], "dmcontrolwrapp": 291, "mogymenv": 291, "mogymwrapp": 291, "jumanjienv": 291, "jumanjiwrapp": 291, "openmlenv": 291, "vmaswrapp": 291, "qvaluehook": 291, "distributionalqvaluehook": 291, "reset_nois": 291, "cemplann": 291, "mpcplannerbas": 291, "mppiplann": 291, "independentnorm": 291, "truncatednorm": 291, "maskedcategor": 291, "inv_softplu": 291, "vmapmodul": 291, "distributionaldqnloss": [291, 298], "discretesacloss": 291, "iqlloss": 291, "cqlloss": 291, "dtloss": 291, "onlinedtloss": 291, "a2closs": 291, "reinforceloss": 291, "dreameractorloss": 291, "dreamermodelloss": 291, "dreamervalueloss": 291, "td0estim": [291, 297], "td1estim": [291, 297], "td0_return_estim": 291, "td0_advantage_estim": 291, "td1_return_estim": 291, "vec_td1_return_estim": 291, "td1_advantage_estim": 291, "vec_td1_advantage_estim": 291, "td_lambda_return_estim": 291, "vec_td_lambda_return_estim": 291, "td_lambda_advantage_estim": 291, "vec_td_lambda_advantage_estim": 291, "generalized_advantage_estim": 291, "vec_generalized_advantage_estim": 291, "reward2go": 291, "distance_loss": [291, 297], "hold_out_net": 291, "hold_out_param": [291, 297], "softupd": [291, 297, 298, 300], "hardupd": [291, 297], "batchsubsampl": [291, 295], "clearcudacach": 291, "countframeslog": 291, "logreward": [291, 295, 298], "optimizerhook": [291, 298], "replaybuffertrain": [291, 295, 298], "rewardnorm": 291, "selectkei": [291, 295], "trainerhookbas": [291, 295, 298], "updateweight": [291, 295, 298], "make_collector_offpolici": 291, "make_collector_onpolici": 291, "make_dqn_loss": 291, "make_redq_loss": 291, "make_redq_model": 291, "make_replay_buff": [291, 297], "make_target_updat": 291, "parallel_env_constructor": [291, 297], "sync_async_collector": 291, "sync_sync_collector": 291, "correct_for_frame_skip": 291, "get_stats_random_rollout": 291, "csvlogger": [291, 298], "mlflowlogg": 291, "wandblogg": 291, "get_logg": 291, "generate_exp_nam": 291, "journei": 292, "textbook": 292, "highlight": 292, "ever": [292, 303], "bump": 292, "think": [292, 299, 303, 309], "benefit": [292, 303, 306], "pr": 292, "ground": [293, 297, 304], "categori": [293, 295], "recycl": [293, 306], "impos": 293, "violat": 293, "noisier": 293, "Their": [293, 303], "sd": 293, "prob_modul": 293, "pick": [293, 297, 298], "tabl": [293, 298], "customari": 293, "hopefulli": [293, 298], "mathbb": [293, 298], "rightarrow": [293, 298], "soften": 293, "backbon": [293, 300, 302, 308], "make_actor": 293, "make_valu": 293, "shared_param": 293, "make_common": 293, "reusabl": [294, 297, 306], "swappabl": [294, 297], "characterist": [294, 297, 304], "trainabl": [294, 297, 305], "whatev": [294, 297], "convent": [294, 297, 300, 303, 304], "smth": [294, 297], "metric": [294, 297], "nutshel": [294, 297], "barto": [294, 303], "chapter": 294, "proxi": 294, "significantli": [294, 297, 298, 303], "next_stat": 294, "value_net_loss": 294, "pow": [294, 297], "therebi": 294, "room": 294, "convers": 294, "signifi": [294, 303], "underperform": 294, "thin": 294, "intric": 294, "outer": [295, 297, 298, 309], "believ": 295, "scheme": [295, 309], "substenti": 295, "_pre_steps_log_hook": 295, "_pre_optim_hook": 295, "sub_batch": 295, "_post_loss_hook": 295, "_post_optim_hook": 295, "post_optim": [295, 298], "_post_optim_log": 295, "post_optim_log": 295, "_post_steps_hook": 295, "_post_steps_log_hook": 295, "post_steps_log": 295, "comment": [295, 298, 308], "extens": [295, 306], "reserv": 295, "logginghook": 295, "logging_hook": 295, "save_dict": 295, "some_valu": 295, "torchsnapshot": 295, "ckpt_backend": 295, "pt": [295, 305], "filepath": 295, "save_train": 295, "load_from_fil": 295, "perfectli": [295, 297, 304], "intern": 296, "author": [297, 298, 299, 300, 303, 304, 306], "vincent": [297, 298, 299, 300, 304, 306], "moen": [297, 298, 299, 300, 304, 306], "assembl": 297, "focus": 297, "straightforward": [297, 298, 306], "overview": [297, 299, 303, 308], "transpar": [297, 300], "understood": 297, "sota": [297, 298, 308], "illustr": [297, 298, 306], "device_count": [297, 298, 300, 305, 309], "loss_dict": 297, "modal": 297, "oblivi": [297, 299, 306], "elementari": 297, "didact": 297, "dilut": 297, "pessimist": [297, 298, 299], "target_actor_network_param": 297, "actor_in_kei": 297, "actor_crit": 297, "noth": [297, 299], "compromis": 297, "hp": 297, "hasattr": 297, "_value_estim": 297, "elif": [297, 298], "notimplementederror": 297, "unknown": 297, "_loss_actor": 297, "td_copi": 297, "actor_network_param": 297, "value_network_param": 297, "_loss_valu": 297, "pred_val": 297, "target_value_network_param": 297, "smooth": [297, 298], "loss_funt": 297, "glue": 297, "_forward": 297, "ndimens": 297, "remaind": 297, "focu": [297, 298, 299], "pixels_onli": [297, 298, 308, 309], "env_librari": 297, "env_task": 297, "env_arg": 297, "friendli": 297, "torchr": 297, "rescal": 297, "presum": 297, "leav": 297, "make_transformed_env": 297, "reward_sc": 297, "double_to_float_list": 297, "double_to_float_inv_list": 297, "marker": 297, "leverag": [297, 303, 309], "env_per_collector": 297, "transform_state_dict": 297, "make_t_env": 297, "parallel_env": [297, 308, 309], "adjust": [297, 303, 304], "seem": [297, 300], "cheat": 297, "10m": 297, "cautiou": 297, "deal": [297, 299, 303, 306], "magnitud": 297, "thousand": [297, 300], "get_env_stat": 297, "proof_env": 297, "5000": [297, 298, 299], "maxim": [297, 304], "recal": [297, 299], "ddpgmlpactor": 297, "ddpgmlpqnet": 297, "materi": 297, "ornsteinuhlenbeckprocesswrapp": 297, "make_ddpg_actor": 297, "q_net": 297, "moduless": 297, "sugges": 297, "1_000_000": [297, 300], "tight": 297, "10_000": [297, 299, 306], "traj_len": [297, 300], "make_record": 297, "recorder_obj": 297, "flavor": 297, "circular": 297, "buffer_s": [297, 298], "random_crop_len": 297, "prb": 297, "buffer_scratch_dir": 297, "temporari": 297, "dirrectori": 297, "trajecotri": 297, "25": [297, 298, 303, 304], "sampel": 297, "dataflow": 297, "ceil_div": 297, "utd": [297, 300], "update_to_data": 297, "realiz": 297, "_must_": 297, "001": [297, 304], "outdat": 297, "trick": [297, 298], "despit": 297, "adam": [297, 298, 299, 300, 303, 304], "optimizer_actor": 297, "lr": [297, 298, 299, 300, 303, 304], "weight_decai": [297, 298], "optimizer_valu": 297, "total_collection_step": 297, "pretti": [297, 306], "rewards_ev": 297, "collected_fram": 297, "pbar": [297, 299, 300, 303, 304], "r0": 297, "numel": [297, 299, 300, 305, 306], "current_fram": 297, "sampled_tensordict": 297, "gn1": 297, "clip_grad_norm_": [297, 299, 303, 304], "gn2": 297, "gn": [297, 304], "td_record": 297, "rn": 297, "rs": 297, "set_descript": [297, 299, 300, 303, 304], "2f": 297, "00": [297, 298, 299, 300, 303, 304, 305, 307], "800": [297, 298], "05": [297, 298, 299, 303, 304, 305], "1757": 297, "24it": [297, 298, 300, 304], "1600": [297, 298], "02": [297, 298, 299, 304, 305, 307], "690": 297, "81it": [297, 298, 304], "2400": [297, 298], "07": [297, 298, 300, 303, 304], "993": 297, "03it": [297, 298, 304], "40": [297, 298, 299, 303, 304], "4000": [297, 298, 299], "1781": 297, "60it": [297, 298], "48": [297, 298, 304, 305], "4800": [297, 298, 304], "2038": 297, "70it": 297, "56": [297, 298, 304], "5600": 297, "2130": 297, "62it": [297, 298], "49": [297, 298, 304, 305], "53": [297, 298, 304, 305], "108": [297, 304], "04": [297, 298, 304, 305, 307], "299": [297, 304], "91": [297, 298, 304], "6400": [297, 308], "954": 297, "35it": [297, 298, 304], "09": [297, 298, 304], "63": [297, 298, 304, 305, 306], "177": [297, 304], "70": [297, 298, 299, 303, 304, 305], "236": [297, 304], "62": [297, 298, 304, 305], "72": [297, 298, 304, 305], "7200": 297, "465": [297, 304], "01it": [297, 298], "67": [297, 298, 302, 304, 305], "80": [297, 298, 299, 303, 304, 305], "192": [297, 298, 304], "8000": [297, 299], "445": [297, 304], "02it": [297, 298, 304], "58": [297, 298, 300, 303, 304], "83": [297, 298, 304, 305], "45": [297, 298, 304], "79": [297, 298, 304, 305, 306], "224": [297, 298, 304], "90": [297, 298, 299, 303, 304], "47": [297, 298, 304], "88": [297, 298, 304, 305, 306], "8800": 297, "423": [297, 304], "43it": [297, 298], "96": [297, 298, 304, 305], "140": [297, 304], "238": [297, 304], "92": [297, 298, 304, 305], "19": [297, 298, 300, 304, 305, 306], "77": [297, 298, 304], "9600": 297, "301": [297, 304], "68it": [297, 298], "55": [297, 298, 304], "287": [297, 304], "89": [297, 298, 304, 305, 306], "21": [297, 298, 299, 300, 302, 303, 304], "10400it": 297, "267": [297, 304], "45it": [297, 298], "84": [297, 298, 300, 304], "93": [297, 298, 304, 305, 306], "180": [297, 304], "plot": [297, 299, 300, 303, 304], "mention": [297, 300, 306, 309], "matplotlib": [297, 299, 300, 303, 304, 306, 309], "pyplot": [297, 299, 300, 303, 304, 306, 309], "plt": [297, 299, 300, 303, 304, 306, 309], "zip": [297, 301], "legend": 297, "xlabel": [297, 300, 303, 304], "ylabel": [297, 303], "tight_layout": 297, "concret": [297, 299], "takeawai": [297, 298], "minut": [297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "047": [297, 307], "mb": [297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309], "coding_ddpg": [297, 307], "jupyt": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309], "ipynb": [297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309], "galleri": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309], "sphinx": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309], "customis": [298, 303], "road": 298, "aspect": 298, "did": [298, 299, 306, 309], "highest": 298, "prerequisit": 298, "familiar": [298, 303, 309], "lookup": 298, "amort": [298, 299], "cart": 298, "pole": 298, "un": 298, "actuat": 298, "frictionless": 298, "upright": [298, 309], "duelingcnndqnet": 298, "is_notebook": 298, "shell": 298, "get_ipython": 298, "__class__": 298, "zmqinteractiveshel": 298, "qtconsol": 298, "terminalinteractiveshel": 298, "ipython": [298, 303, 304], "nameerror": 298, "interpret": 298, "umbrella": 298, "misplac": 298, "misus": 298, "orchestr": 298, "everyth": [298, 300], "five": [298, 299], "64x64": 298, "motion": [298, 304], "obs_norm_sd": 298, "simpler": 298, "get_norm_stat": 298, "test_env": 298, "make_model": 298, "dummy_env": 298, "output_s": [298, 300], "init_bia": 298, "actor_explor": 298, "eps_greedy_v": 298, "eps_greedy_val_env": 298, "get_replay_buff": 298, "n_optim": 298, "themselv": 298, "simplic": [298, 299, 305, 306], "get_collector": 298, "data_collector": 298, "bunch": 298, "concept": [298, 306], "power": 298, "ubiquit": 298, "get_loss_modul": 298, "target_updat": 298, "995": [298, 304], "sensit": 298, "variat": 298, "2e": [298, 304], "wd": 298, "upd": 298, "harder": [298, 308], "5_000": 298, "500000": 298, "100000": 298, "005": 298, "mandatori": [298, 299, 303, 304], "fairer": 298, "budget": [298, 299], "dqn_exp_": 298, "uuid1": [298, 309], "9895": 298, "0737": 298, "tmp": [298, 306], "tmp9cgxa_rc": 298, "dqn_exp_39536fc4": 298, "4b54": 298, "11ee": [298, 309], "8c1d": [298, 309], "0242ac120002": [298, 309], "registr": 298, "cumbersom": 298, "buffer_hook": 298, "weight_updat": 298, "descript": [298, 299], "aliv": 298, "total_reward": 298, "19it": [298, 304], "4045": 298, "9259": 298, "36": [298, 300, 303, 304], "09it": 298, "73it": [298, 304], "3439": 298, "160": [298, 304, 309], "37": [298, 300, 304], "22": [298, 304, 305], "4345": 298, "52": [298, 302, 304, 307], "83it": 298, "65it": 298, "4134": 298, "49it": 298, "4497": 298, "288": [298, 304], "54": [298, 304], "41": [298, 304, 307, 309], "31it": [298, 304], "4948": 298, "320": [298, 304, 309], "27it": [298, 304], "3619": 298, "352": [298, 304], "10it": 298, "384": [298, 304, 306, 307], "4526": 298, "416": [298, 304], "39it": 298, "448": [298, 304], "51": [298, 303, 304, 306], "05it": [298, 304], "4074": [298, 304], "480": [298, 304, 305], "41it": 298, "84it": 298, "3862": 298, "544": [298, 304], "77it": 298, "576": [298, 304], "608": [298, 304], "54it": [298, 304], "3772": 298, "640": 298, "60": [298, 299, 303, 304, 305, 308], "22it": [298, 304], "4586": 298, "672": 298, "704": 298, "63it": 298, "736": 298, "768": 298, "40it": [298, 300], "4434": 298, "14it": [298, 304], "832": 298, "52it": 298, "864": 298, "896": 298, "3652": 298, "928": 298, "4224": 298, "960": 298, "21it": 298, "3893": 298, "992": [298, 304], "28": [298, 299, 300, 303, 304, 307], "13it": 298, "72it": [298, 299], "3712": 298, "1056": 298, "15it": 298, "1088": 298, "1120": 298, "97it": 298, "1152": 298, "31": [298, 304, 305], "99it": 298, "1184": 298, "1216": 298, "78it": [298, 299], "1248": 298, "1280": 298, "04it": 298, "1344": 298, "53it": 298, "1376": 298, "56it": 298, "1408": 298, "69it": 298, "1440": 298, "93it": [298, 304], "1472": 298, "1504": 298, "1536": 298, "07it": 298, "4164": [298, 304], "1568": [298, 299], "39": [298, 299, 300, 304, 305], "28it": [298, 304], "1632": 298, "51it": 298, "1696": 298, "59": [298, 300, 304], "1728": 298, "1760": 298, "94it": [298, 300, 304], "1792": 298, "43": [298, 303, 304, 305], "46it": 298, "1824": 298, "57": [298, 303, 304, 305], "1856": 298, "1888": 298, "30it": [298, 304], "4676": 298, "1920": 298, "1952": 298, "1984": 298, "2016": 298, "2048": [298, 305], "2080": [298, 299], "06it": [298, 304], "2112": [298, 304], "2144": 298, "2176": 298, "95it": 298, "2208": 298, "33it": [298, 304], "2240": 298, "17it": [298, 304], "2272": 298, "2304": 298, "2336": 298, "00it": 298, "4797": 298, "2368": 298, "34it": [298, 304], "82it": 298, "2432": 298, "20it": [298, 304], "2464": 298, "74it": [298, 299], "2496": 298, "2528": [298, 304], "85it": [298, 299], "2560": 298, "2592": 298, "59it": [298, 299, 304], "2624": 298, "2656": [298, 304], "2688": 298, "2720": [298, 304], "2752": 298, "32it": [298, 304], "2784": 298, "2816": 298, "91it": 298, "2848": 298, "2880": 298, "2912": 298, "2944": [298, 304], "2976": [298, 304], "3008": 298, "36it": [298, 304], "61": [298, 304, 305], "3040": 298, "3072": 298, "3104": 298, "3136": 298, "3168": 298, "3200": 298, "65": [298, 300, 304], "3232": [298, 304], "57it": 298, "2500": 298, "3264": 298, "92it": 298, "66": [298, 304, 305, 307, 309], "3296": 298, "3328": 298, "4375": [298, 304], "3360": 298, "68": [298, 304], "3392": 298, "3424": 298, "69": [298, 304, 305], "3456": [298, 304], "3488": 298, "79it": [298, 304], "3520": 298, "08it": 298, "71": [298, 304, 305], "3552": 298, "3584": 298, "55it": 298, "3616": 298, "73": [298, 304, 305], "3648": 298, "58it": 298, "74": [298, 304, 305], "3680": 298, "98it": [298, 299], "75": [298, 304, 305], "3744": 298, "76": [298, 304, 305, 306], "3776": 298, "90it": [298, 304], "3808": 298, "3840": 298, "3872": 298, "25it": [298, 304], "78": [298, 304, 305], "3904": 298, "3936": 298, "3968": 298, "4032": 298, "4064": 298, "71it": 298, "82": [298, 304], "4096": 298, "4128": [298, 304], "4160": 298, "87it": 298, "4192": 298, "85": [298, 300, 304], "4256": [298, 304], "86": [298, 304, 305], "4288": [298, 304], "4320": 298, "4352": 298, "4384": 298, "4416": 298, "4448": 298, "4480": 298, "4512": 298, "4544": 298, "89it": 298, "4576": 298, "4608": 298, "4640": 298, "42it": 298, "4672": [298, 304], "4704": 298, "4736": 298, "80it": [298, 304], "4768": 298, "44it": 298, "97": [298, 304], "4832": 298, "4864": 298, "4896": 298, "4928": 298, "4960": 298, "4992": 298, "5024it": 298, "quickli": [298, 303, 309], "print_csv_files_in_fold": 298, "folder_path": 298, "csv_file": 298, "output_str": 298, "dirpath": 298, "walk": [298, 302, 309], "endswith": 298, "strip": 298, "3861825168132782": 298, "37120288610458374": 298, "4163855314254761": 298, "45859628915786743": 298, "4948333501815796": 298, "45262259244918823": 298, "40147024393081665": 298, "2016540765762329": 298, "1485215723514557": 298, "1839570701122284": 298, "2745172381401062": 298, "2982722520828247": 298, "3549629747867584": 298, "4325798749923706": 298, "4119890630245209": 298, "grad_norm_0": 298, "956540107727051": 298, "4570624828338623": 298, "7414623498916626": 298, "9169484376907349": 298, "9239931106567383": 298, "562732219696045": 298, "973419427871704": 298, "889913082122803": 298, "9471487998962402": 298, "10000000894069672": 298, "qvaluenetwork": 298, "worst": 298, "accuraci": 298, "fanci": 298, "531": [298, 304, 307], "1698": [298, 307], "coding_dqn": [298, 307], "demonstr": [299, 303, 304, 309], "talk": 299, "repetit": 299, "six": 299, "sophist": [299, 303], "invent": 299, "theta_k": 299, "frac": 299, "pi_": 299, "exceed": 299, "discourag": [299, 304], "indispens": 299, "analyz": 299, "lingua": 299, "franca": 299, "defaultdict": [299, 304], "has_cuda": [299, 303, 309], "3e": [299, 300, 303], "max_grad_norm": [299, 303], "big": [299, 306, 309], "ourselv": [299, 309], "benefici": 299, "errat": 299, "hamper": [299, 306], "reactiv": 299, "xy": 299, "sub_batch_s": 299, "num_epoch": [299, 303], "entropy_ep": [299, 303], "generalist": 299, "interchang": [299, 305, 306], "panel": 299, "charact": 299, "inverteddoublependulum": 299, "transmit": 299, "stai": 299, "thumb": 299, "supplementari": [299, 309], "told": 299, "stringent": [299, 303], "nevertheless": [299, 306], "confid": [299, 303], "pack": [299, 309], "ran": 299, "f_": 299, "mu_": 299, "difficulti": [299, 309], "brought": [299, 300], "d_ob": 299, "d_action": 299, "policy_modul": [299, 303], "That": 299, "said": 299, "briefli": [299, 303], "refil": [299, 303], "capac": 299, "conveni": [299, 303, 304], "easiest": [299, 303], "mathemat": [299, 303], "tradeoff": [299, 303], "advantage_modul": 299, "lr_schedul": [299, 304], "cosineannealinglr": [299, 304], "eval_str": 299, "tensordict_data": [299, 303], "data_view": [299, 303], "subdata": [299, 303], "cum_reward_str": 299, "4f": [299, 300, 304], "stepcount_str": 299, "param_group": 299, "lr_str": 299, "eval_rollout": 299, "nice": 299, "364": [299, 304], "50it": 299, "119": [299, 304, 306], "9657": 299, "0853": 299, "0003": [299, 300, 304], "366": [299, 304], "1168": 299, "3000": 299, "370": [299, 304], "372": [299, 304], "1756": 299, "0002": [299, 300, 304], "374": [299, 304], "1989": 299, "6000": 299, "369": [299, 304], "7000": 299, "373": [299, 304], "86it": 299, "2023": 299, "376": [299, 304], "2172": 299, "9000": 299, "378": [299, 304], "2244": [299, 304], "380": [299, 304], "2413": 299, "cap": [299, 306], "figsiz": [299, 304], "subplot": [299, 304, 309], "titl": [299, 300, 303, 304], "bit": [299, 300, 303, 306], "797": [299, 304, 307], "coding_ppo": [299, 307], "rnn": 300, "lstmmodul": 300, "84x84": 300, "accessori": 300, "stamp": 300, "tensordictprim": 300, "se": 300, "flank": 300, "assist": 300, "emb": 300, "n_cell": 300, "customiz": 300, "almost": 300, "bidirect": 300, "wouldn": 300, "make_tensordict_prim": 300, "interpolationmod": 300, "qval": 300, "stoch_polici": 300, "cudnn": 300, "opportun": 300, "coupl": [300, 304, 306], "uniniti": 300, "again": [300, 303, 305, 306, 309], "redund": 300, "strongli": 300, "million": 300, "sake": [300, 305, 306], "20_000": [300, 304], "longest": 300, "npai": 300, "recurrent_st": 300, "action_spread": 300, "1000000": 300, "111": [300, 304], "150": [300, 304], "26it": [300, 304], "284": [300, 304, 307], "2074": [300, 307], "dqn_with_rnn": [300, 307], "tutorials_python": 301, "tutorials_jupyt": 301, "distinct": 302, "humanoid": [302, 309], "env1_obs_kei": 302, "observation_stand": 302, "env2_obs_kei": 302, "observation_walk": 302, "tdreset1": 302, "tdreset2": 302, "tdreset": 302, "policy_common": 302, "policy_stand": 302, "policy_walk": 302, "But": 302, "exclusive_field": [302, 308], "stack_dim": [302, 308], "env1_mak": 302, "env2_mak": 302, "_single_task": 302, "td_rollout": 302, "949": [302, 307], "multi_task": [302, 307], "matteo": 303, "bettini": 303, "marl": 303, "maddpg": 303, "navig": 303, "lidar": 303, "sensor": 303, "collis": 303, "tie": 303, "mappo": 303, "ippo": 303, "phase": [303, 306], "mathbf": 303, "pi": [303, 304], "_t": [303, 304], "fed": [303, 306], "approxim": [303, 309], "decentralis": 303, "literatur": 303, "overcom": 303, "stationari": 303, "concurr": 303, "analys": 303, "gui": 303, "visualis": 303, "multiagentmlp": 303, "divic": 303, "vmas_devic": 303, "6_000": 303, "team": [303, 308], "n_iter": 303, "minibatch_s": 303, "generalis": 303, "furthermor": 303, "simd": 303, "parallelis": 303, "warp": 303, "todai": 303, "circl": 303, "surround": 303, "dot": [303, 304], "collid": 303, "drag": 303, "elast": 303, "acceler": 303, "penalis": 303, "num_vmas_env": 303, "scenario_nam": 303, "four": [303, 304], "environmnet": 303, "final_rew": 303, "agent_collis": 303, "enviorn": 303, "stress": 303, "paramount": 303, "episode_reward": 303, "n_rollout_step": 303, "evolut": 303, "yourself": 303, "utilis": 303, "n_actions_per_ag": 303, "n_obs_per_ag": 303, "share_parameters_polici": 303, "policy_net": 303, "denot": 303, "unbatched_action_spec": 303, "carefulli": [303, 309], "grant": 303, "converg": 303, "cooper": 303, "share_parameters_crit": 303, "critic_net": 303, "fantast": 303, "minibatch": 303, "desc": 303, "episode_reward_mean": 303, "episode_reward_mean_list": 303, "critic_param": 303, "target_critic_param": 303, "refresh": 303, "3641679584980011": 303, "5052392482757568": 303, "0283849239349365": 303, "331086277961731": 303, "0674946308135986": 303, "245943784713745": 303, "611856698989868": 303, "8442416191101074": 303, "856468677520752": 303, "9219210147857666": 303, "xvfb": 303, "pyvirtualdisplai": 303, "1400": [303, 304], "900": 303, "pil": 303, "rendering_callback": 303, "fromarrai": 303, "rgb_arrai": [303, 304], "gif": 303, "save_al": 303, "append_imag": 303, "profici": 303, "master": 303, "932": [303, 307], "multiagent_ppo": [303, 307], "freeli": 304, "sep": 304, "touch": 304, "undertaken": 304, "broader": 304, "challeng": [304, 305], "wider": 304, "algebra": 304, "acquaint": 304, "avenu": 304, "_apply_to_composit": 304, "default_x": 304, "default_i": 304, "torqu": 304, "upward": 304, "angular": 304, "sin": 304, "rad": 304, "sec": 304, "gravit": 304, "angl": 304, "deleg": 304, "new_th": 304, "new_thdot": 304, "thdot": 304, "g_forc": 304, "max_torqu": 304, "angle_norm": 304, "max_spe": 304, "zeros_lik": 304, "albeit": 304, "is_empti": 304, "gen_param": 304, "high_th": 304, "high_thdot": 304, "low_th": 304, "low_thdot": 304, "rng": 304, "lazili": 304, "trivial": 304, "neither": 304, "shortcut": [304, 309], "irrelev": 304, "_make_spec": 304, "td_param": 304, "commong": 304, "pseudo": 304, "render_mod": 304, "render_fp": 304, "random_": 304, "_make_step": 304, "staticmethod": 304, "complic": [304, 306, 309], "showcas": 304, "skeleton": 304, "_apply_transform": [304, 309], "_inv_apply_transform": [304, 309], "subset": [304, 305], "unitari": 304, "sine": 304, "cosin": 304, "sintransform": 304, "costransform": 304, "t_sin": 304, "t_co": 304, "cat_transform": 304, "mdp": 304, "convin": 304, "simple_rollout": 304, "_data": 304, "unexplor": 304, "assumpt": [304, 306], "recreat": 304, "init_td": 304, "traj_return": 304, "last_reward": 304, "is_ipython": 304, "inlin": 304, "get_backend": 304, "ion": 304, "gcf": 304, "clear_output": 304, "625": 304, "0488": 304, "0748": 304, "519": 304, "0499": 304, "4472": 304, "073": 304, "0685": 304, "0408": 304, "552": 304, "23it": 304, "5154": 304, "9086": 304, "527": 304, "9385": 304, "155": 304, "2568": 304, "4981": 304, "223": 304, "8929": 304, "4491": 304, "581": 304, "3233": 304, "0664": 304, "596": 304, "1021": 304, "5263": 304, "9579": 304, "5807": 304, "8075": 304, "212": 304, "2009": 304, "5525": 304, "914": 304, "2894": 304, "0115": 304, "29it": 304, "0977": 304, "1845": 304, "1830": 304, "4858": 304, "233": 304, "2863": 304, "0297": 304, "464": 304, "4617": 304, "5997": 304, "904": 304, "1647": 304, "0777": 304, "901": 304, "4709": 304, "6813": 304, "8317": 304, "3221": 304, "5554": 304, "276": 304, "3353": 304, "701": 304, "8570": 304, "6656": 304, "463": 304, "7779": 304, "6911": 304, "875": 304, "0796": 304, "7082": 304, "308": 304, "0421": 304, "1496": 304, "5037": 304, "1755": 304, "5029": 304, "9454": 304, "665": 304, "9330": 304, "2118": 304, "444": 304, "0995": 304, "6294": 304, "3146": 304, "2909": 304, "461": 304, "9720": 304, "1298": 304, "9923": 304, "0345": 304, "3438": 304, "3688": 304, "424": 304, "6953": 304, "5233": 304, "411": 304, "8011": 304, "5329": 304, "2677": 304, "6969": 304, "7010": 304, "9352": 304, "7707": 304, "6178": 304, "5646": 304, "348": 304, "7304": 304, "9407": 304, "942": 304, "3882": 304, "7604": 304, "3507": 304, "8928": 304, "258": 304, "6978": 304, "4641": 304, "549": 304, "6047": 304, "5005": 304, "4136": 304, "2993": 304, "3222": 304, "4046": 304, "7314": 304, "275": 304, "6331": 304, "9318": 304, "961": 304, "8331": 304, "1604": 304, "4099": 304, "4761": 304, "125": 304, "4262": 304, "6363": 304, "382": 304, "3593": 304, "7377": 304, "2847": 304, "3443": 304, "867": 304, "3592": 304, "4760": 304, "441": 304, "9950": 304, "8021": 304, "3528": 304, "1214": 304, "708": 304, "4023": 304, "3583": 304, "041": 304, "3801": 304, "0310": 304, "120": 304, "4244": 304, "2039": 304, "4850": 304, "8748": 304, "706": 304, "4897": 304, "9210": 304, "8964": 304, "0832": 304, "3934": 304, "456": 304, "8971": 304, "2933": 304, "3377": 304, "6996": 304, "2274": 304, "8916": 304, "098": 304, "2660": 304, "9110": 304, "4503": 304, "6956": 304, "9172": 304, "4026": 304, "946": 304, "9229": 304, "5205": 304, "294": 304, "8872": 304, "6637": 304, "019": 304, "9281": 304, "2082": 304, "724": 304, "8561": 304, "6574": 304, "357": 304, "4138": 304, "5230": 304, "385": 304, "4065": 304, "5642": 304, "921": 304, "9786": 304, "4129": 304, "5831": 304, "266": 304, "7723": 304, "4152": 304, "0898": 304, "389": 304, "5155": 304, "5376": 304, "5616": 304, "4094": 304, "283": 304, "5333": 304, "4803": 304, "895": 304, "6566": 304, "2588": 304, "662": 304, "4732": 304, "7503": 304, "068": 304, "0714": 304, "3370": 304, "059": 304, "8612": 304, "1915": 304, "3855": 304, "0349": 304, "9644": 304, "4538": 304, "0392": 304, "4080": 304, "1648": 304, "9599": 304, "143": 304, "4284": 304, "5946": 304, "2590": 304, "9181": 304, "4621": 304, "9075": 304, "674": 304, "1772": 304, "9444": 304, "351": 304, "9391": 304, "5595": 304, "8673": 304, "6240": 304, "5919": 304, "0018": 304, "1071": 304, "9127": 304, "251": 304, "9799": 304, "3131": 304, "9612": 304, "9705": 304, "8741": 304, "2230": 304, "0972": 304, "0337": 304, "0350": 304, "0654": 304, "102": 304, "2441": 304, "4596": 304, "362": 304, "103": [304, 306], "4362": 304, "171": [304, 306], "104": 304, "4041": 304, "6907": 304, "105": 304, "4664": 304, "2760": 304, "0299": 304, "9712": 304, "349": 304, "107": 304, "3332": 304, "4479": 304, "772": 304, "4357": 304, "9591": 304, "543": 304, "109": 304, "6216": 304, "1353": 304, "692": 304, "110": 304, "6261": 304, "7086": 304, "496": 304, "7758": 304, "9818": 304, "112": 304, "7772": 304, "5055": 304, "113": [304, 306], "5840": 304, "3180": 304, "2083": 304, "115": 304, "5275": 304, "6873": 304, "116": 304, "4107": 304, "1624": 304, "117": 304, "6372": 304, "2571": 304, "118": 304, "4039": 304, "4428": 304, "11it": 304, "4728": 304, "5628": 304, "6767": 304, "2466": 304, "522": 304, "121": [304, 309], "5873": 304, "5072": 304, "122": [304, 309], "6548": 304, "3766": 304, "123": 304, "5134": 304, "1955": 304, "124": 304, "2481": 304, "0591": 304, "4500": 304, "3368": 304, "126": [304, 306], "9708": 304, "7059": 304, "127": [304, 306], "3031": 304, "2534": 304, "843": 304, "3327": 304, "6193": 304, "129": 304, "4831": 304, "1172": 304, "2593": 304, "4219": 304, "962": 304, "131": 304, "8380": 304, "899": 304, "132": 304, "2721": 304, "9048": 304, "166": [304, 306], "133": 304, "2419": 304, "5248": 304, "134": 304, "2139": 304, "4278": 304, "135": 304, "0690": 304, "5140": 304, "136": 304, "1140": 304, "7402": 304, "137": 304, "5356": 304, "1636": 304, "138": 304, "0671": 304, "8798": 304, "139": 304, "8918": 304, "3298": 304, "307": 304, "1779": 304, "141": 304, "1771": 304, "3624": 304, "936": 304, "142": [304, 306], "1683": 304, "4810": 304, "9373": 304, "4435": 304, "144": 304, "4396": 304, "8092": 304, "145": 304, "2572": 304, "146": 304, "4212": 304, "0260": 304, "147": 304, "0939": 304, "6478": 304, "605": 304, "148": 304, "6606": 304, "7289": 304, "149": 304, "9300": 304, "7193": 304, "563": 304, "1166": 304, "8514": 304, "151": 304, "9108": 304, "0672": 304, "292": 304, "152": [304, 306], "8591": 304, "3768": 304, "153": 304, "9976": 304, "154": 304, "0576": 304, "0067": 304, "935": 304, "4199": 304, "1722": 304, "156": 304, "8310": 304, "3466": 304, "157": 304, "8631": 304, "2492": 304, "158": 304, "8763": 304, "1277": 304, "159": 304, "5562": 304, "7446": 304, "1082": 304, "9830": 304, "161": 304, "0946": 304, "5229": 304, "162": 304, "4574": 304, "6900": 304, "163": [304, 305], "2229": 304, "0318": 304, "482": 304, "164": 304, "0543": 304, "0817": 304, "761": 304, "165": [304, 306], "2809": 304, "5118": 304, "1142": 304, "5635": 304, "167": 304, "1949": 304, "2327": 304, "982": 304, "168": 304, "0967": 304, "0387": 304, "457": 304, "169": 304, "0782": 304, "2150": 304, "170": 304, "5222": 304, "3725": 304, "9288": 304, "9837": 304, "172": 304, "1416": 304, "1099": 304, "173": 304, "8620": 304, "8475": 304, "174": 304, "1807": 304, "175": 304, "1148": 304, "0645": 304, "176": 304, "2751": 304, "8313": 304, "9286": 304, "9770": 304, "178": 304, "5735": 304, "2837": 304, "179": 304, "2926": 304, "9489": 304, "1507": 304, "181": 304, "8724": 304, "3567": 304, "182": 304, "3574": 304, "6140": 304, "183": [304, 306], "7895": 304, "2518": 304, "184": 304, "6146": 304, "185": 304, "8776": 304, "7358": 304, "186": 304, "3722": 304, "8428": 304, "187": 304, "7955": 304, "188": 304, "0092": 304, "7106": 304, "829": 304, "189": 304, "2264": 304, "6919": 304, "190": 304, "1438": 304, "1362": 304, "191": 304, "0618": 304, "8217": 304, "9420": 304, "6765": 304, "193": 304, "7745": 304, "0709": 304, "194": 304, "9478": 304, "6867": 304, "195": 304, "6507": 304, "6225": 304, "196": 304, "2195": 304, "197": 304, "5385": 304, "9263": 304, "198": 304, "1878": 304, "2374": 304, "199": 304, "8054": 304, "3504": 304, "557": 304, "0766": 304, "6825": 304, "201": 304, "2011": 304, "8393": 304, "202": 304, "0803": 304, "7815": 304, "203": 304, "8363": 304, "2460": 304, "204": 304, "8643": 304, "2191": 304, "593": 304, "205": 304, "61it": 304, "0773": 304, "1343": 304, "206": [304, 306, 307], "8657": 304, "207": 304, "96it": 304, "9304": 304, "7584": 304, "208": 304, "8752": 304, "2307": 304, "209": 304, "5250": 304, "4869": 304, "210": [304, 309], "7837": 304, "5762": 304, "211": 304, "6661": 304, "8600": 304, "2502": 304, "1752": 304, "213": 304, "3075": 304, "8871": 304, "214": 304, "9406": [304, 309], "8090": 304, "215": 304, "6291": 304, "8923": 304, "876": 304, "216": 304, "9504": 304, "21e": 304, "217": 304, "7431": 304, "7880": 304, "218": 304, "4463": 304, "5432": 304, "219": 304, "3793": 304, "3313": 304, "220": 304, "8843": 304, "0369": 304, "065": 304, "221": 304, "4828": 304, "8391": 304, "222": 304, "6265": 304, "2913": 304, "947": 304, "5541": 304, "1252": 304, "7342": 304, "2396": 304, "225": 304, "5936": 304, "1924": 304, "226": 304, "9975": 304, "2045": 304, "227": 304, "8367": 304, "9540": 304, "228": 304, "7259": 304, "6743": 304, "229": 304, "4827": 304, "7528": 304, "230": 304, "7361": 304, "8756": 304, "231": 304, "7646": 304, "1116": 304, "232": 304, "5426": 304, "8385": 304, "5662": 304, "8585": 304, "234": 304, "8234": 304, "7930": 304, "235": 304, "2648": 304, "9309": 304, "6817": 304, "237": 304, "0943": 304, "1533": 304, "3045": 304, "0483": 304, "239": 304, "240": [304, 308, 309], "6415": 304, "0201": 304, "241": 304, "4437": 304, "4365": 304, "242": 304, "0358": 304, "4943": 304, "243": 304, "1272": 304, "5003": 304, "1180": 304, "2637": 304, "245": 304, "7197": 304, "0873": 304, "246": 304, "2917": 304, "247": 304, "0160": 304, "0738": 304, "248": 304, "3689": 304, "0120": 304, "249": 304, "5570": 304, "0475": 304, "250": 304, "4423": 304, "2220": 304, "6803": 304, "252": 304, "1465": 304, "7214": 304, "253": 304, "8801": 304, "7034": 304, "254": 304, "9136": 304, "4076": 304, "7589": 304, "5013": 304, "8150": 304, "2241": 304, "257": 304, "0753": 304, "8081": 304, "1951": 304, "8314": 304, "259": 304, "0038": 304, "260": 304, "0889": 304, "4616": 304, "261": 304, "0655": 304, "262": 304, "8333": 304, "9476": 304, "263": 304, "7554": 304, "3798": 304, "264": 304, "3717": 304, "3947": 304, "529": 304, "265": 304, "3060": 304, "6495": 304, "7467": 304, "8889": 304, "8457": 304, "591": 304, "268": 304, "7137": 304, "0536": 304, "771": 304, "269": 304, "1651": 304, "388": 304, "270": 304, "8246": 304, "5709": 304, "281": 304, "271": 304, "7502": 304, "0521": 304, "032": 304, "272": 304, "5475": 304, "7253": 304, "273": 304, "2856": 304, "7130": 304, "274": 304, "2778": 304, "4122": 304, "8368": 304, "1841": 304, "9622": 304, "1603": 304, "003e": 304, "277": 304, "0247": 304, "346": 304, "278": 304, "2238": 304, "6418": 304, "279": 304, "0626": 304, "2538": 304, "280": 304, "0149": 304, "7380": 304, "2167": 304, "8911": 304, "282": 304, "8725": 304, "1983": 304, "8142": 304, "3709": 304, "4989": 304, "285": 304, "6464": 304, "6210": 304, "286": 304, "9726": 304, "0820": 304, "6975": 304, "9091": 304, "4926": 304, "4791": 304, "289": 304, "0905": 304, "3500": 304, "290": 304, "2287": 304, "291": 304, "9918": 304, "5543": 304, "9245": 304, "6444": 304, "631": 304, "293": 304, "0448": 304, "4769": 304, "8566": 304, "7208": 304, "295": 304, "0966": 304, "296": 304, "5303": 304, "1537": 304, "023": 304, "297": 304, "2682": 304, "564": 304, "298": 304, "4318": 304, "5063": 304, "7475": 304, "4190": 304, "8186": 304, "5077": 304, "1883": 304, "5291": 304, "472": 304, "302": 304, "1256": 304, "3998": 304, "303": 304, "3622": 304, "0930": 304, "626": 304, "304": 304, "9500": 304, "0075": 304, "5664": 304, "305": 304, "5697": 304, "3024": 304, "306": 304, "3117": 304, "0052": 304, "006": 304, "0981": 304, "9312": 304, "3873": 304, "309": 304, "0411": 304, "2650": 304, "310": 304, "1656": 304, "0228": 304, "004": 304, "311": 304, "1196": 304, "2478": 304, "312": 304, "7353": 304, "0812": 304, "313": 304, "3022": 304, "758": 304, "314": 304, "1406": 304, "4626": 304, "315": 304, "2156": 304, "851": 304, "316": 304, "1953": 304, "3774": 304, "317": 304, "6385": 304, "9917": 304, "318": 304, "2764": 304, "905": 304, "319": 304, "6391": 304, "9317": 304, "9748": 304, "2679": 304, "321": 304, "8495": 304, "5125": 304, "322": 304, "8177": 304, "6602": 304, "323": 304, "0704": 304, "5776": 304, "324": 304, "9833": [304, 308], "1339": 304, "402": 304, "325": 304, "1238": 304, "326": 304, "9299": 304, "0227": 304, "327": 304, "7727": 304, "1607": 304, "336": 304, "328": 304, "3958": 304, "3223": 304, "763": 304, "329": 304, "4742": 304, "1797": 304, "330": 304, "0144": 304, "0085": 304, "791": 304, "331": 304, "8284": 304, "0428": 304, "332": 304, "0098": 304, "7365": 304, "333": 304, "4566": 304, "0781": 304, "086": 304, "334": 304, "3355": 304, "0230": 304, "335": 304, "9346": 304, "0423": 304, "076": 304, "3711": 304, "1335": 304, "6855": 304, "337": 304, "0304": 304, "0023": 304, "8459": 304, "338": 304, "9998": 304, "4399": 304, "339": 304, "2303": 304, "1346": 304, "340": 304, "2915": 304, "7116": 304, "341": 304, "5560": 304, "0487": 304, "342": 304, "5119": 304, "061": 304, "343": 304, "3305": 304, "3705": 304, "957": 304, "344": 304, "6068": 304, "345": 304, "5731": 304, "12it": 304, "3897": 304, "0376": 304, "347": 304, "0434": 304, "012": 304, "1300": 304, "1215": 304, "0968": 304, "0885": 304, "350": 304, "1348": 304, "0073": 304, "5052": 304, "4184": 304, "2817": 304, "8887": 304, "353": 304, "4779": 304, "1009": 304, "354": 304, "0604": 304, "599": 304, "355": 304, "4486": 304, "1176": 304, "656": 304, "356": 304, "2436": 304, "0668": 304, "8849": 304, "0012": 304, "358": 304, "7511": 304, "8804": 304, "359": 304, "8870": 304, "6728": 304, "360": 304, "8841": 304, "5508": 304, "361": 304, "5242": 304, "0268": 304, "0013": 304, "6185": 304, "363": 304, "1378": 304, "0204": 304, "0355": 304, "685": 304, "365": 304, "4884": 304, "0231": 304, "0770": 304, "0014": 304, "6793": 304, "367": 304, "9834": 304, "863": 304, "368": 304, "6709": 304, "462": 304, "5199": 304, "9790": 304, "9401": 304, "7802": 304, "371": 304, "6723": 304, "2678": 304, "6201": 304, "2184": 304, "7385": 304, "6344": 304, "617": 304, "375": 304, "9945": 304, "0772": 304, "567": 304, "7576": 304, "0398": 304, "377": 304, "3396": 304, "0022": 304, "094": 304, "3073": 304, "4018": 304, "379": 304, "1869": 304, "0481": 304, "1117": 304, "381": 304, "6823": 304, "981": 304, "8305": 304, "0210": 304, "383": 304, "4908": 304, "0272": 304, "538": 304, "3267": 304, "0111": 304, "7965": 304, "1796": 304, "0039": 304, "5396": 304, "386": 304, "3757": 304, "0490": 304, "387": 304, "1394": 304, "4187": 304, "2986": 304, "7954": 304, "1274": 304, "0063": 304, "813": 304, "390": 304, "8706": 304, "0114": 304, "391": 304, "6922": 304, "0004": 304, "2423": 304, "392": 304, "9115": 304, "2602": 304, "393": 304, "2449": 304, "0783": 304, "394": 304, "0631": 304, "0057": 304, "7444": 304, "395": 304, "3339": 304, "0167": 304, "396": 304, "4806": 304, "397": 304, "4171": 304, "067": 304, "398": 304, "2618": 304, "5809": 304, "399": 304, "0054": 304, "3364": 304, "8733": 304, "0184": 304, "401": 304, "9137": 304, "0113": 304, "025": 304, "0386": 304, "0625": 304, "403": 304, "1332": 304, "0582": 304, "7816": 304, "404": 304, "8341": 304, "0941": 304, "854": 304, "405": 304, "8615": 304, "588": 304, "406": 304, "3849": 304, "008": 304, "407": 304, "9395": 304, "0765": 304, "055": 304, "408": 304, "2685": 304, "2235": 304, "688": 304, "409": 304, "3052": 304, "4249": 304, "410": 304, "6806": 304, "6383": 304, "3721": 304, "9981": 304, "412": 304, "1862": 304, "822": 304, "413": 304, "9811": 304, "0171": 304, "013": 304, "414": 304, "0252": 304, "0049": 304, "6205": 304, "415": 304, "1108": 304, "4921": 304, "9142": 304, "8130": 304, "417": 304, "1725": 304, "0036": 304, "3196": 304, "418": 304, "7795": 304, "0242": 304, "799": 304, "419": 304, "7737": 304, "0138": 304, "420": [304, 307, 309], "1462": 304, "0053": 304, "421": 304, "9226": 304, "6139": 304, "422": 304, "9889": 304, "0403": 304, "6194": 304, "0032": 304, "3989": 304, "0104": 304, "425": 304, "9960": 304, "0009": 304, "6009": 304, "426": 304, "2697": 304, "0914": 304, "427": 304, "1114": 304, "428": 304, "9862": 304, "1932": 304, "429": 304, "0637": 304, "0623": 304, "082": 304, "430": 304, "9906": 304, "2031": 304, "431": 304, "9948": 304, "0895": 304, "432": 304, "1970": 304, "0256": 304, "433": 304, "4231": 304, "0449": 304, "644": 304, "434": 304, "1039": 304, "1973": 304, "435": 304, "4561": 304, "1225": 304, "436": 304, "0211": 304, "2125": 304, "437": 304, "3866": 304, "0050": 304, "7202": 304, "438": 304, "6388": 304, "0072": 304, "439": 304, "1187": 304, "0015": 304, "5116": 304, "440": 304, "0432": 304, "0025": 304, "7809": 304, "1925": 304, "0103": 304, "442": 304, "9570": 304, "443": 304, "0871": 304, "5601": 304, "0165": 304, "0047": 304, "6061": 304, "2746": 304, "0027": 304, "7887": 304, "446": 304, "1835": 304, "0035": 304, "855": 304, "447": 304, "8420": 304, "548": 304, "2653": 304, "0126": 304, "9736": 304, "449": 304, "0594": [304, 309], "0119": 304, "6196": 304, "450": 304, "4509": 304, "0373": 304, "451": 304, "0620": 304, "452": 304, "6898": 304, "3235": 304, "687": 304, "453": 304, "5879": 304, "454": 304, "8406": 304, "0694": 304, "455": 304, "8259": 304, "0235": 304, "8500": 304, "0024": 304, "4054": 304, "458": 304, "2027": 304, "0894": 304, "459": 304, "5966": 304, "460": 304, "6942": 304, "0016": 304, "4254": 304, "6703": 304, "0145": 304, "8124": 304, "0218": 304, "9196": 304, "0188": 304, "8986": 304, "0884": 304, "0084": 304, "5624": 304, "8862": 304, "0006": 304, "5384": 304, "466": 304, "5837": 304, "467": 304, "8954": 304, "0101": 304, "6751": 304, "468": 304, "8063": 304, "0122": 304, "9635": 304, "469": 304, "0692": 304, "4216": 304, "470": 304, "1227": 304, "0586": 304, "162e": 304, "471": 304, "9690": 304, "0074": 304, "4166": 304, "6324": 304, "473": 304, "0778": 304, "474": 304, "8548": 304, "0017": 304, "4408": 304, "475": 304, "8125": 304, "1515": 304, "476": 304, "2733": 304, "0044": 304, "2836": 304, "477": 304, "7497": 304, "7681": 304, "478": 304, "8547": 304, "0105": 304, "7212": 304, "479": 304, "9848": 304, "0019": 304, "6498": 304, "1987": 304, "0011": 304, "5473": 304, "481": 304, "8991": 304, "0033": 304, "6091": 304, "9189": 304, "5771": 304, "483": 304, "6781": 304, "7542": 304, "484": 304, "5959": 304, "0064": 304, "4295": 304, "485": 304, "2547": 304, "486": 304, "0636": 304, "547": 304, "487": 304, "0065": 304, "488": 304, "1694": 304, "0083": 304, "5759": 304, "489": 304, "0493": 304, "0021": 304, "7805": 304, "490": 304, "0950": 304, "497": 304, "491": 304, "9717": 304, "3672": 304, "492": 304, "0207": 304, "493": 304, "8266": 304, "0069": 304, "5365": 304, "494": 304, "2623": 304, "5078": 304, "495": 304, "4545": 304, "09636": 304, "8754": 304, "0010": 304, "498": 304, "0031": 304, "8269": 304, "499": 304, "4082": 304, "6642": 304, "2284": 304, "501": 304, "9130": 304, "0008": 304, "502": 304, "503": 304, "7624": 304, "0056": 304, "3858": 304, "504": 304, "0890": 304, "0042": 304, "505": 304, "7505": 304, "2157": 304, "506": 304, "8394": 304, "3413": 304, "507": 304, "9609": 304, "0041": 304, "6905": 304, "508": 304, "8467": 304, "4409": 304, "509": 304, "510": 304, "8128": 304, "3559": 304, "511": 304, "1479": 304, "0264": 304, "1589": 304, "566": 304, "513": 304, "2756": 304, "0046": 304, "5266": 304, "514": 304, "9873": 304, "0112": 304, "9314": 304, "515": 304, "3791": 304, "0721": 304, "516": 304, "4580": 304, "0758": 304, "6114": 304, "517": 304, "2431": 304, "518": 304, "1958": 304, "5553": 304, "8924": 304, "0097": 304, "520": 304, "3737": 304, "0234": 304, "521": 304, "9125": 304, "4623": 304, "3230": 304, "0589": 304, "3784": 304, "523": 304, "9482": 304, "0051": 304, "524": 304, "1979": 304, "0045": 304, "6401": 304, "525": 304, "1588": 304, "0048": 304, "6255": 304, "526": 304, "6084": 304, "3477": 304, "1475": 304, "0209": 304, "528": 304, "7611": 304, "1040": 304, "0099": 304, "0173": 304, "643": 304, "530": 304, "8189": 304, "4358": 304, "9897": 304, "532": 304, "1548": 304, "9751": 304, "533": 304, "6362": 304, "7495": 304, "534": 304, "1749": 304, "9513": 304, "535": 304, "7708": 304, "0371": 304, "536": 304, "2649": 304, "0437": 304, "537": 304, "5491": 304, "0276": 304, "6426": 304, "7294": 304, "078e": 304, "539": 304, "9928": 304, "540": 304, "7937": 304, "0124": 304, "9664": 304, "541": 304, "3342": 304, "542": 304, "2046": 304, "5496": 304, "0956": 304, "0059": 304, "545": 304, "9028": 304, "5843": 304, "546": 304, "0674": 304, "0178": 304, "2815": 304, "0599": 304, "1587": 304, "9276": 304, "8228": 304, "6164": 304, "551": 304, "6850": 304, "9167": 304, "3092": 304, "0670": 304, "9177": 304, "553": 304, "1599": 304, "0043": 304, "554": 304, "37it": 304, "6367": 304, "555": 304, "3657": 304, "556": 304, "6694": 304, "2622": 304, "0372": 304, "4841": 304, "558": 304, "2707": 304, "0058": 304, "757": 304, "559": 304, "2267": 304, "5415": 304, "560": 304, "4556": 304, "0163": 304, "561": 304, "1839": 304, "0809": 304, "6262": 304, "562": 304, "0278": 304, "1112": 304, "6155": 304, "565": 304, "1427": 304, "3582": 304, "624": 304, "7870": 304, "9490": 304, "0439": 304, "8796": 304, "568": 304, "8026": 304, "612": 304, "569": 304, "3147": 304, "8486": 304, "570": 304, "7917": 304, "0129": 304, "571": 304, "9553": 304, "0020": 304, "6871": 304, "572": 304, "3132": 304, "0159": 304, "8646": 304, "573": 304, "5320": 304, "0269": 304, "574": 304, "2955": 304, "0245": 304, "575": 304, "3347": 304, "0179": 304, "9718": 304, "1629": 304, "804": 304, "577": 304, "0070": 304, "4335": 304, "578": 304, "579": 304, "3049": 304, "9063": 304, "580": 304, "8785": 304, "3295": 304, "5184": 304, "0546": 304, "582": 304, "4589": 304, "583": 304, "4697": 304, "2476": 304, "584": 304, "2397": 304, "585": 304, "4953": 304, "1775": 304, "586": 304, "2258": 304, "0110": 304, "7671": 304, "587": 304, "3981": 304, "8590": 304, "0007": 304, "589": 304, "9820": 304, "4221": 304, "590": 304, "1293": 304, "0116": 304, "868": 304, "1675": 304, "5931": 304, "592": 304, "2910": 304, "5219": 304, "2124": 304, "1730": 304, "737": 304, "594": 304, "2914": [304, 309], "0206": 304, "595": 304, "0172": 304, "3982": 304, "0945": 304, "0121": 304, "4789": 304, "597": 304, "3805": 304, "598": 304, "3310": 304, "5065": 304, "6028": 304, "6316": 304, "6724": 304, "6523": 304, "601": 304, "0136": 304, "4298": 304, "602": 304, "3524": 304, "2629": 304, "603": 304, "2635": 304, "7839": 304, "604": 304, "6041": 304, "8027": 304, "4170": 304, "4675": 304, "606": 304, "3153": 304, "9316": 304, "607": 304, "0649": 304, "9722": 304, "7989": 304, "0329": 304, "609": 304, "1976": 304, "6852": 304, "610": 304, "4793": 304, "1255": 304, "611": 304, "4581": 304, "0394": 304, "2047": 304, "0326": 304, "613": 304, "8967": 304, "8619": 304, "614": 304, "5906": 304, "6491": 304, "615": 304, "6634": 304, "4394": 304, "616": 304, "0624": 304, "0061": 304, "5676": 304, "3259": 304, "0131": 304, "7733": 304, "618": 304, "7515": 304, "0189": 304, "5575": 304, "619": 304, "9313": 304, "6286": 304, "620": 304, "4325": 304, "7832": 304, "621": 304, "1134": 304, "622": 304, "4572": 304, "0500": 304, "5838": 304, "623": 304, "3818": 304, "8623": 304, "1253": 304, "6622": 304, "subject": 304, "saw": [304, 306], "816": [304, 307], "explain": 305, "semat": 305, "r3mtransform": 305, "embodi": 305, "ai": 305, "env_transform": [305, 309], "s3": 305, "amazonaw": 305, "r3m_50": 305, "374m": 305, "8m": 305, "106mb": 305, "9m": 305, "9mb": 305, "3m": 305, "3mb": 305, "8mb": 305, "0m": 305, "7mb": 305, "2m": 305, "5mb": 305, "4mb": 305, "115m": 305, "131m": 305, "147m": 305, "162m": 305, "1mb": 305, "171m": 305, "180m": 305, "197m": 305, "213m": 305, "6mb": 305, "228m": 305, "235m": 305, "246m": 305, "261m": 305, "269m": 305, "277m": 305, "284m": 305, "293m": 305, "300m": 305, "311m": 305, "326m": 305, "334m": 305, "344m": 305, "360m": 305, "wiser": 305, "conclud": 305, "_storag": [305, 306], "096": [305, 307], "3433": [305, 307], "pretrained_model": [305, 307], "supervis": [306, 309], "pull": 306, "temporarili": 306, "drastic": 306, "ram": [306, 309], "batteri": 306, "dataliststorag": 306, "datalazytensorstorag": 306, "tensordidct": 306, "basi": 306, "datalazymemmapstorag": 306, "buffer_list": 306, "lowest": 306, "medium": 306, "buffer_lazytensor": 306, "buffer_lazymemmap": 306, "fullest": 306, "organ": 306, "convini": 306, "mydata": 306, "background": 306, "question": [306, 308], "_i": 306, "artifici": 306, "0892946e": 306, "she": 306, "augment": 306, "pars": 306, "proport": 306, "hist": 306, "barcontain": 306, "artist": 306, "revert": 306, "expens": 306, "reappear": 306, "unfold": 306, "problemat": 306, "window": 306, "4th": 306, "rb_tutori": [306, 307], "830": 307, "torchrl_demo": [307, 308], "752": [307, 308], "torchrl_env": [307, 309], "demo": 308, "icml": 308, "vmoen": 308, "fb": 308, "invest": 308, "platform": 308, "media": 308, "truli": 308, "predominantli": 308, "tensordict1": 308, "tensordict2": 308, "tensordict_sampl": 308, "_sampler": 308, "_sum_tre": 308, "modulenotfounderror": 308, "28791671991348267": 308, "gym_env": 308, "noopresetenv": [308, 309], "lazyconv2d": 308, "backbone_modul": 308, "params_expand": 308, "tensordict_exp": 308, "base_modul": 308, "0137": 308, "1524": 308, "0641": 308, "viewbackward0": 308, "asstridedbackward0": 308, "8728": 308, "1334": 308, "3494": 308, "6887": 308, "6402": 308, "_safetanhbackward": 308, "1132": 308, "1762": 308, "3430": 308, "2668": 308, "2918": 308, "6239": 308, "roughli": 308, "tensordicts_prealloc": 308, "tensordicts_stack": 308, "tensordict_rollout": [308, 309], "disclaim": 308, "concatmodul": 308, "loss_td": 308, "year": 308, "roadmap": 308, "compris": 308, "contributor": 308, "curiou": 308, "nascent": 308, "unsupervis": 309, "rom": 309, "licens": 309, "pygam": 309, "unifi": 309, "insid": 309, "_build_env": 309, "sphinx_gallery_start_ignor": 309, "filterwarn": 309, "sphinx_gallery_end_ignor": 309, "adventur": 309, "v5": 309, "airraid": 309, "alien": 309, "amidar": 309, "assault": 309, "4952": 309, "void": 309, "reproduct": 309, "tensordict_tprim": 309, "imshow": 309, "axesimag": 309, "0x7ff824758160": 309, "inconsist": 309, "pong": 309, "swingup": 309, "swingup_spars": 309, "ball_in_cup": 309, "catch": 309, "balance_spars": 309, "three_pol": 309, "two_pol": 309, "finger": 309, "turn_easi": 309, "turn_hard": 309, "fish": 309, "swim": 309, "hopper": 309, "hop": 309, "run_pure_st": 309, "bring_bal": 309, "bring_peg": 309, "insert_bal": 309, "insert_peg": 309, "point_mass": 309, "reacher": 309, "swimmer": 309, "swimmer6": 309, "swimmer15": 309, "walker": 309, "dog": 309, "trot": 309, "humanoid_cmu": 309, "lqr": 309, "lqr_2_1": 309, "lqr_6_2": 309, "quadrup": 309, "escap": 309, "stacker": 309, "stack_2": 309, "stack_4": 309, "wrapper1": 309, "wrapper2": 309, "obviou": 309, "truth": 309, "env0": 309, "env_transformed_bi": 309, "stanc": 309, "transformeddistribut": 309, "base_dist": 309, "concat": 309, "mofidi": 309, "transformedenviron": 309, "moderet": 309, "computation": 309, "legitim": 309, "incom": 309, "amongst": 309, "wor": 309, "convention": 309, "scope": 309, "markovian": 309, "3288080526": 309, "constain": 309, "bar_": 309, "get_someth": 309, "bar_62f4bf50": 309, "4b53": 309, "aargh": 309, "foo_list": 309, "vec_env": 309, "_dispatch_caller_parallel": 309, "0x7ff798f40df0": 309, "bar_6a7f8e62": 309, "9ebd": 309, "bar_6a85dcf4": 309, "a116": 309, "bar_6a85857": 309, "bdab": 309, "parallen": 309, "particularili": 309, "evolv": 309, "steadi": 309, "approx": 309, "3225": 309, "3498": 309, "1046": 309, "0573": 309, "_extra_st": 309, "observation_ssq": 309, "observation_sum": 309, "2456": 309, "0143": 309, "2539": 309, "1463": 309, "2440": 309, "dispach": 309, "absor": 309}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 0, 1, "", "EnvBase"], [68, 0, 1, "", "EnvCreator"], [69, 0, 1, "", "EnvMetaData"], [70, 0, 1, "", "GymLikeEnv"], [71, 2, 1, "", "ModelBasedEnvBase"], [72, 0, 1, "", "MultiThreadedEnv"], [73, 0, 1, "", "ParallelEnv"], [74, 0, 1, "", "SerialEnv"], [71, 1, 1, "", "rand_step"], [71, 1, 1, "", "reset"], [71, 1, 1, "", "rollout"], [71, 1, 1, "", "set_seed"], [71, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[67, 3, 1, "", "action_key"], [67, 3, 1, "", "action_keys"], [67, 3, 1, "", "action_spec"], [67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 3, 1, "", "batch_locked"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 3, 1, "", "done_key"], [67, 3, 1, "", "done_keys"], [67, 3, 1, "", "done_spec"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fake_tensordict"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 3, 1, "", "input_spec"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 3, 1, "", "observation_spec"], [67, 3, 1, "", "output_spec"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "rand_action"], [67, 1, 1, "id0", "rand_step"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "id1", "reset"], [67, 3, 1, "", "reward_key"], [67, 3, 1, "", "reward_keys"], [67, 3, 1, "", "reward_spec"], [67, 1, 1, "id2", "rollout"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "id3", "set_seed"], [67, 1, 1, "", "share_memory"], [67, 3, 1, "", "specs"], [67, 1, 1, "", "state_dict"], [67, 3, 1, "", "state_spec"], [67, 1, 1, "id4", "step"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[70, 3, 1, "", "action_key"], [70, 3, 1, "", "action_keys"], [70, 3, 1, "", "action_spec"], [70, 1, 1, "", "add_module"], [70, 1, 1, "", "apply"], [70, 3, 1, "", "batch_locked"], [70, 1, 1, "", "bfloat16"], [70, 1, 1, "", "buffers"], [70, 1, 1, "", "children"], [70, 1, 1, "", "close"], [70, 1, 1, "", "compile"], [70, 1, 1, "", "cpu"], [70, 1, 1, "", "cuda"], [70, 3, 1, "", "done_key"], [70, 3, 1, "", "done_keys"], [70, 3, 1, "", "done_spec"], [70, 1, 1, "", "double"], [70, 1, 1, "", "eval"], [70, 1, 1, "", "extra_repr"], [70, 1, 1, "", "fake_tensordict"], [70, 1, 1, "", "float"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "get_buffer"], [70, 1, 1, "", "get_extra_state"], [70, 1, 1, "", "get_parameter"], [70, 1, 1, "", "get_submodule"], [70, 1, 1, "", "half"], [70, 3, 1, "", "input_spec"], [70, 1, 1, "", "ipu"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "modules"], [70, 1, 1, "", "named_buffers"], [70, 1, 1, "", "named_children"], [70, 1, 1, "", "named_modules"], [70, 1, 1, "", "named_parameters"], [70, 3, 1, "", "observation_spec"], [70, 3, 1, "", "output_spec"], [70, 1, 1, "", "parameters"], [70, 1, 1, "", "rand_action"], [70, 1, 1, "", "rand_step"], [70, 1, 1, "", "read_action"], [70, 1, 1, "", "read_done"], [70, 1, 1, "", "read_obs"], [70, 1, 1, "", "read_reward"], [70, 1, 1, "", "register_backward_hook"], [70, 1, 1, "", "register_buffer"], [70, 1, 1, "", "register_forward_hook"], [70, 1, 1, "", "register_forward_pre_hook"], [70, 1, 1, "", "register_full_backward_hook"], [70, 1, 1, "", "register_full_backward_pre_hook"], [70, 1, 1, "", "register_load_state_dict_post_hook"], [70, 1, 1, "", "register_module"], [70, 1, 1, "", "register_parameter"], [70, 1, 1, "", "register_state_dict_pre_hook"], [70, 1, 1, "", "requires_grad_"], [70, 1, 1, "", "reset"], [70, 3, 1, "", "reward_key"], [70, 3, 1, "", "reward_keys"], [70, 3, 1, "", "reward_spec"], [70, 1, 1, "", "rollout"], [70, 1, 1, "", "set_extra_state"], [70, 1, 1, "", "set_info_dict_reader"], [70, 1, 1, "", "set_seed"], [70, 1, 1, "", "share_memory"], [70, 3, 1, "", "specs"], [70, 1, 1, "", "state_dict"], [70, 3, 1, "", "state_spec"], [70, 1, 1, "", "step"], [70, 1, 1, "", "to"], [70, 1, 1, "", "to_empty"], [70, 1, 1, "", "train"], [70, 1, 1, "", "type"], [70, 1, 1, "", "xpu"], [70, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[72, 3, 1, "", "action_key"], [72, 3, 1, "", "action_keys"], [72, 3, 1, "", "action_spec"], [72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "close"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 3, 1, "", "done_key"], [72, 3, 1, "", "done_keys"], [72, 3, 1, "", "done_spec"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "fake_tensordict"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 3, 1, "", "input_spec"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 3, 1, "", "observation_spec"], [72, 3, 1, "", "output_spec"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "rand_action"], [72, 1, 1, "", "rand_step"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset"], [72, 3, 1, "", "reward_key"], [72, 3, 1, "", "reward_keys"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "", "rollout"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "share_memory"], [72, 3, 1, "", "specs"], [72, 1, 1, "", "state_dict"], [72, 3, 1, "", "state_spec"], [72, 1, 1, "", "step"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_keys"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_keys"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 3, 1, "", "input_spec"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 3, 1, "", "observation_spec"], [73, 3, 1, "", "output_spec"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "reset"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_keys"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 3, 1, "", "state_spec"], [73, 1, 1, "", "step"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "update_kwargs"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[74, 3, 1, "", "action_key"], [74, 3, 1, "", "action_keys"], [74, 3, 1, "", "action_spec"], [74, 1, 1, "", "add_module"], [74, 1, 1, "", "apply"], [74, 3, 1, "", "batch_locked"], [74, 1, 1, "", "bfloat16"], [74, 1, 1, "", "buffers"], [74, 1, 1, "", "children"], [74, 1, 1, "", "compile"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 3, 1, "", "done_key"], [74, 3, 1, "", "done_keys"], [74, 3, 1, "", "done_spec"], [74, 1, 1, "", "double"], [74, 1, 1, "", "eval"], [74, 1, 1, "", "extra_repr"], [74, 1, 1, "", "fake_tensordict"], [74, 1, 1, "", "float"], [74, 1, 1, "", "forward"], [74, 1, 1, "", "get_buffer"], [74, 1, 1, "", "get_extra_state"], [74, 1, 1, "", "get_parameter"], [74, 1, 1, "", "get_submodule"], [74, 1, 1, "", "half"], [74, 3, 1, "", "input_spec"], [74, 1, 1, "", "ipu"], [74, 1, 1, "", "load_state_dict"], [74, 1, 1, "", "modules"], [74, 1, 1, "", "named_buffers"], [74, 1, 1, "", "named_children"], [74, 1, 1, "", "named_modules"], [74, 1, 1, "", "named_parameters"], [74, 3, 1, "", "observation_spec"], [74, 3, 1, "", "output_spec"], [74, 1, 1, "", "parameters"], [74, 1, 1, "", "rand_action"], [74, 1, 1, "", "rand_step"], [74, 1, 1, "", "register_backward_hook"], [74, 1, 1, "", "register_buffer"], [74, 1, 1, "", "register_forward_hook"], [74, 1, 1, "", "register_forward_pre_hook"], [74, 1, 1, "", "register_full_backward_hook"], [74, 1, 1, "", "register_full_backward_pre_hook"], [74, 1, 1, "", "register_load_state_dict_post_hook"], [74, 1, 1, "", "register_module"], [74, 1, 1, "", "register_parameter"], [74, 1, 1, "", "register_state_dict_pre_hook"], [74, 1, 1, "", "requires_grad_"], [74, 1, 1, "", "reset"], [74, 3, 1, "", "reward_key"], [74, 3, 1, "", "reward_keys"], [74, 3, 1, "", "reward_spec"], [74, 1, 1, "", "rollout"], [74, 1, 1, "", "set_extra_state"], [74, 1, 1, "", "set_seed"], [74, 1, 1, "", "share_memory"], [74, 3, 1, "", "specs"], [74, 1, 1, "", "state_dict"], [74, 3, 1, "", "state_spec"], [74, 1, 1, "", "step"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_empty"], [74, 1, 1, "", "train"], [74, 1, 1, "", "type"], [74, 1, 1, "", "update_kwargs"], [74, 1, 1, "", "xpu"], [74, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[75, 2, 1, "", "BraxEnv"], [76, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[77, 2, 1, "", "DMControlEnv"], [78, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[79, 2, 1, "", "GymEnv"], [80, 2, 1, "", "GymWrapper"], [81, 2, 1, "", "MOGymEnv"], [82, 2, 1, "", "MOGymWrapper"], [83, 2, 1, "", "gym_backend"], [84, 2, 1, "", "set_gym_backend"]], "torchrl.envs.libs.habitat": [[85, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[86, 2, 1, "", "JumanjiEnv"], [87, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[88, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[89, 2, 1, "", "VmasEnv"], [90, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[91, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[92, 0, 1, "", "ActionMask"], [93, 0, 1, "", "BinarizeReward"], [94, 0, 1, "", "CatFrames"], [95, 0, 1, "", "CatTensors"], [96, 0, 1, "", "CenterCrop"], [97, 0, 1, "", "Compose"], [98, 0, 1, "", "DTypeCastTransform"], [99, 0, 1, "", "DeviceCastTransform"], [100, 0, 1, "", "DiscreteActionProjection"], [101, 0, 1, "", "DoubleToFloat"], [102, 0, 1, "", "ExcludeTransform"], [103, 0, 1, "", "FiniteTensorDictCheck"], [104, 0, 1, "", "FlattenObservation"], [105, 0, 1, "", "FrameSkipTransform"], [106, 0, 1, "", "GrayScale"], [107, 0, 1, "", "InitTracker"], [108, 0, 1, "", "KLRewardTransform"], [109, 0, 1, "", "NoopResetEnv"], [110, 0, 1, "", "ObservationNorm"], [111, 0, 1, "", "ObservationTransform"], [112, 0, 1, "", "PinMemoryTransform"], [113, 0, 1, "", "R3MTransform"], [114, 0, 1, "", "RandomCropTensorDict"], [115, 0, 1, "", "RenameTransform"], [116, 0, 1, "", "Resize"], [117, 0, 1, "", "Reward2GoTransform"], [118, 0, 1, "", "RewardClipping"], [119, 0, 1, "", "RewardScaling"], [120, 0, 1, "", "RewardSum"], [121, 0, 1, "", "SelectTransform"], [122, 0, 1, "", "SqueezeTransform"], [123, 0, 1, "", "StepCounter"], [124, 0, 1, "", "TargetReturn"], [125, 0, 1, "", "TensorDictPrimer"], [126, 0, 1, "", "TimeMaxPool"], [127, 0, 1, "", "ToTensorImage"], [128, 0, 1, "", "Transform"], [129, 0, 1, "", "TransformedEnv"], [130, 0, 1, "", "UnsqueezeTransform"], [131, 0, 1, "", "VC1Transform"], [132, 0, 1, "", "VIPRewardTransform"], [133, 0, 1, "", "VIPTransform"], [134, 0, 1, "", "VecNorm"], [135, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[93, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[94, 1, 1, "", "forward"], [94, 1, 1, "", "reset"], [94, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[95, 1, 1, "", "forward"], [95, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[96, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[97, 1, 1, "", "forward"], [97, 1, 1, "", "reset"], [97, 1, 1, "", "to"], [97, 1, 1, "", "transform_env_device"], [97, 1, 1, "", "transform_input_spec"], [97, 1, 1, "", "transform_observation_spec"], [97, 1, 1, "", "transform_output_spec"], [97, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "transform_input_spec"], [98, 1, 1, "", "transform_observation_spec"], [98, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "transform_done_spec"], [99, 1, 1, "", "transform_env_device"], [99, 1, 1, "", "transform_input_spec"], [99, 1, 1, "", "transform_observation_spec"], [99, 1, 1, "", "transform_output_spec"], [99, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[100, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "reset"], [102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[103, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[105, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[106, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "reset"], [107, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[109, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[110, 1, 1, "", "init_stats"], [110, 1, 1, "", "transform_input_spec"], [110, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[113, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[114, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[115, 1, 1, "", "forward"], [115, 1, 1, "", "transform_input_spec"], [115, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[116, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[117, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[118, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[119, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "reset"], [120, 1, 1, "", "transform_input_spec"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "reset"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "reset"], [123, 1, 1, "", "transform_input_spec"], [123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "reset"], [124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "reset"], [125, 1, 1, "", "to"], [125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "reset"], [126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[128, 3, 1, "", "container"], [128, 1, 1, "", "forward"], [128, 3, 1, "", "parent"], [128, 1, 1, "", "reset"], [128, 1, 1, "", "to"], [128, 1, 1, "", "transform_done_spec"], [128, 1, 1, "", "transform_env_device"], [128, 1, 1, "", "transform_input_spec"], [128, 1, 1, "", "transform_observation_spec"], [128, 1, 1, "", "transform_output_spec"], [128, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[129, 3, 1, "", "batch_locked"], [129, 1, 1, "", "eval"], [129, 3, 1, "", "input_spec"], [129, 1, 1, "", "load_state_dict"], [129, 3, 1, "", "output_spec"], [129, 1, 1, "", "set_missing_tolerance"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "state_dict"], [129, 1, 1, "", "to"], [129, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[130, 1, 1, "", "transform_input_spec"], [130, 1, 1, "", "transform_observation_spec"], [130, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "make_noload_model"], [131, 1, 1, "", "to"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[133, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[134, 1, 1, "", "build_td_for_shared_vecnorm"], [134, 1, 1, "", "forward"], [134, 1, 1, "", "get_extra_state"], [134, 1, 1, "", "set_extra_state"], [134, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[136, 2, 1, "", "check_env_specs"], [137, 2, 1, "", "exploration_mode"], [138, 2, 1, "", "exploration_type"], [139, 2, 1, "", "get_available_libraries"], [140, 2, 1, "", "make_composite_from_td"], [141, 2, 1, "", "set_exploration_mode"], [142, 2, 1, "", "set_exploration_type"], [143, 2, 1, "", "step_mdp"]], "torchrl.modules": [[144, 0, 1, "", "CEMPlanner"], [145, 0, 1, "", "ConvNet"], [146, 0, 1, "", "DTActor"], [147, 0, 1, "", "DdpgCnnActor"], [148, 0, 1, "", "DdpgCnnQNet"], [149, 0, 1, "", "DdpgMlpActor"], [150, 0, 1, "", "DdpgMlpQNet"], [151, 0, 1, "", "DecisionTransformer"], [152, 0, 1, "", "Delta"], [153, 0, 1, "", "DistributionalDQNnet"], [154, 0, 1, "", "DistributionalQValueHook"], [155, 0, 1, "", "DreamerActor"], [156, 0, 1, "", "DuelingCnnDQNet"], [157, 0, 1, "", "IndependentNormal"], [158, 0, 1, "", "LSTMModule"], [159, 0, 1, "", "LSTMNet"], [160, 0, 1, "", "MLP"], [161, 0, 1, "", "MPCPlannerBase"], [162, 0, 1, "", "MPPIPlanner"], [163, 0, 1, "", "MaskedCategorical"], [164, 0, 1, "", "MultiAgentMLP"], [165, 0, 1, "", "NoisyLazyLinear"], [166, 0, 1, "", "NoisyLinear"], [167, 0, 1, "", "NormalParamWrapper"], [168, 0, 1, "", "ObsDecoder"], [169, 0, 1, "", "ObsEncoder"], [170, 0, 1, "", "OneHotCategorical"], [171, 0, 1, "", "OnlineDTActor"], [172, 0, 1, "", "QMixer"], [173, 0, 1, "", "QValueHook"], [174, 0, 1, "", "RSSMPosterior"], [175, 0, 1, "", "RSSMPrior"], [176, 0, 1, "", "Squeeze2dLayer"], [177, 0, 1, "", "SqueezeLayer"], [178, 0, 1, "", "TanhDelta"], [179, 0, 1, "", "TanhNormal"], [180, 0, 1, "", "TruncatedNormal"], [181, 0, 1, "", "VDNMixer"], [182, 0, 1, "", "VmapModule"], [183, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[144, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[145, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[146, 1, 1, "", "default_config"], [146, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[147, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[148, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[149, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[150, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[151, 0, 1, "", "DTConfig"], [151, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[152, 1, 1, "", "log_prob"], [152, 3, 1, "", "mean"], [152, 3, 1, "", "mode"], [152, 1, 1, "", "rsample"], [152, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[153, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[155, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[156, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[157, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "set_recurrent_mode"], [158, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[159, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[160, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[162, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[163, 1, 1, "", "log_prob"], [163, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[164, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[165, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[167, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[168, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[169, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[170, 1, 1, "", "log_prob"], [170, 3, 1, "", "mode"], [170, 1, 1, "", "rsample"], [170, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[171, 1, 1, "", "default_config"], [171, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[172, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[174, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[175, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[177, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[178, 3, 1, "", "mean"], [178, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[179, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[180, 1, 1, "", "log_prob"], [180, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[181, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[182, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[184, 0, 1, "", "Actor"], [185, 0, 1, "", "ActorCriticOperator"], [186, 0, 1, "", "ActorCriticWrapper"], [187, 0, 1, "", "ActorValueOperator"], [188, 0, 1, "", "AdditiveGaussianWrapper"], [189, 0, 1, "", "DecisionTransformerInferenceWrapper"], [190, 0, 1, "", "DistributionalQValueActor"], [191, 0, 1, "", "DistributionalQValueModule"], [192, 0, 1, "", "EGreedyWrapper"], [193, 0, 1, "", "LMHeadActorValueOperator"], [194, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [195, 0, 1, "", "ProbabilisticActor"], [196, 0, 1, "", "QValueActor"], [197, 0, 1, "", "QValueModule"], [198, 0, 1, "", "SafeModule"], [199, 0, 1, "", "SafeProbabilisticModule"], [200, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [201, 0, 1, "", "SafeSequential"], [202, 0, 1, "", "TanhModule"], [203, 0, 1, "", "ValueOperator"], [204, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[185, 1, 1, "", "get_critic_operator"], [185, 1, 1, "", "get_policy_head"], [185, 1, 1, "", "get_value_head"], [185, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[186, 1, 1, "", "get_policy_head"], [186, 1, 1, "", "get_policy_operator"], [186, 1, 1, "", "get_value_head"], [186, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[187, 1, 1, "", "get_policy_head"], [187, 1, 1, "", "get_policy_operator"], [187, 1, 1, "", "get_value_head"], [187, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "mask_context"], [189, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[191, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[197, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[198, 1, 1, "", "random"], [198, 1, 1, "", "random_sample"], [198, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[199, 1, 1, "", "random"], [199, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[202, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[204, 1, 1, "", "get_reward_operator"], [204, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[205, 0, 1, "", "biased_softplus"], [206, 0, 1, "", "inv_softplus"], [207, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[205, 1, 1, "", "forward"]], "torchrl.objectives": [[208, 0, 1, "", "A2CLoss"], [209, 0, 1, "", "CQLLoss"], [210, 0, 1, "", "ClipPPOLoss"], [211, 0, 1, "", "DDPGLoss"], [212, 0, 1, "", "DQNLoss"], [213, 0, 1, "", "DTLoss"], [214, 0, 1, "", "DiscreteSACLoss"], [215, 0, 1, "", "DistributionalDQNLoss"], [216, 0, 1, "", "DreamerActorLoss"], [217, 0, 1, "", "DreamerModelLoss"], [218, 0, 1, "", "DreamerValueLoss"], [219, 0, 1, "", "HardUpdate"], [220, 0, 1, "", "IQLLoss"], [221, 0, 1, "", "KLPENPPOLoss"], [222, 0, 1, "", "LossModule"], [223, 0, 1, "", "OnlineDTLoss"], [224, 0, 1, "", "PPOLoss"], [225, 0, 1, "", "REDQLoss"], [226, 0, 1, "", "ReinforceLoss"], [227, 0, 1, "", "SACLoss"], [228, 0, 1, "", "SoftUpdate"], [229, 0, 1, "", "TD3Loss"], [230, 0, 1, "", "ValueEstimators"], [231, 0, 1, "", "default_value_kwargs"], [232, 0, 1, "", "distance_loss"], [233, 0, 1, "", "hold_out_net"], [234, 0, 1, "", "hold_out_params"], [236, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[210, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[211, 1, 1, "", "forward"], [211, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[213, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[217, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[218, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "loss_value_diff"], [220, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[221, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[222, 1, 1, "", "convert_to_functional"], [222, 1, 1, "", "forward"], [222, 1, 1, "", "make_value_estimator"], [222, 1, 1, "", "named_parameters"], [222, 1, 1, "", "parameters"], [222, 1, 1, "", "set_keys"], [222, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[223, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[235, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[237, 0, 1, "", "GAE"], [238, 0, 1, "", "TD0Estimator"], [239, 0, 1, "", "TD1Estimator"], [240, 0, 1, "", "TDLambdaEstimator"], [241, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "set_keys"], [241, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[242, 0, 1, "", "generalized_advantage_estimate"], [243, 0, 1, "", "reward2go"], [244, 0, 1, "", "td0_advantage_estimate"], [245, 0, 1, "", "td0_return_estimate"], [246, 0, 1, "", "td1_advantage_estimate"], [247, 0, 1, "", "td1_return_estimate"], [248, 0, 1, "", "td_lambda_advantage_estimate"], [249, 0, 1, "", "td_lambda_return_estimate"], [250, 0, 1, "", "vec_generalized_advantage_estimate"], [251, 0, 1, "", "vec_td1_advantage_estimate"], [252, 0, 1, "", "vec_td1_return_estimate"], [253, 0, 1, "", "vec_td_lambda_advantage_estimate"], [254, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[255, 2, 1, "", "TensorDictRecorder"], [256, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[257, 2, 1, "", "Logger"], [259, 2, 1, "", "generate_exp_name"], [260, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[258, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[261, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[262, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[263, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[264, 0, 1, "", "BatchSubSampler"], [265, 0, 1, "", "ClearCudaCache"], [266, 0, 1, "", "CountFramesLog"], [267, 0, 1, "", "LogReward"], [268, 0, 1, "", "OptimizerHook"], [269, 0, 1, "", "Recorder"], [270, 0, 1, "", "ReplayBufferTrainer"], [271, 0, 1, "", "RewardNormalizer"], [272, 0, 1, "", "SelectKeys"], [273, 0, 1, "", "Trainer"], [274, 0, 1, "", "TrainerHookBase"], [275, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[264, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[265, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[266, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[267, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[268, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[269, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[270, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[271, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[272, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[274, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[275, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[276, 2, 1, "", "correct_for_frame_skip"], [277, 2, 1, "", "get_stats_random_rollout"], [278, 2, 1, "", "make_collector_offpolicy"], [279, 2, 1, "", "make_collector_onpolicy"], [280, 2, 1, "", "make_dqn_loss"], [281, 2, 1, "", "make_redq_loss"], [282, 2, 1, "", "make_redq_model"], [283, 2, 1, "", "make_replay_buffer"], [284, 2, 1, "", "make_target_updater"], [285, 2, 1, "", "make_trainer"], [286, 2, 1, "", "parallel_env_constructor"], [287, 2, 1, "", "sync_async_collector"], [288, 2, 1, "", "sync_sync_collector"], [289, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 293, 294, 295, 296, 297, 298, 299, 303, 304, 308, 309], "tutori": [0, 299, 303], "basic": [0, 306], "intermedi": [0, 8], "advanc": 0, "refer": [0, 291], "knowledg": [0, 292], "base": [0, 7, 292], "indic": 0, "tabl": 0, "collector": [1, 297, 298, 299, 300, 303, 308], "packag": [1, 2, 3, 293, 294, 295, 296], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 297, 298, 299, 303, 308], "distribut": [1, 293], "helper": [1, 3], "function": [1, 4, 294, 298, 299, 303, 308], "replai": [2, 297, 298, 299, 300, 303, 306, 308], "buffer": [2, 297, 298, 299, 300, 303, 306, 308], "compos": [2, 97], "store": [2, 298], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 294, 299, 303], "learn": [2, 4, 299, 303], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 293, 294, 295], "env": [3, 304, 308, 309], "vector": [3, 308], "multi": [3, 293, 294, 302, 303], "agent": [3, 4, 293, 294, 303], "environ": [3, 4, 6, 7, 297, 298, 299, 300, 302, 303, 304, 308, 309], "transform": [3, 128, 297, 299, 303, 304, 306, 308, 309], "clone": [3, 7], "record": [3, 269, 295, 297], "domain": [3, 293], "specif": [3, 293, 302], "librari": [3, 308], "thing": [4, 297, 304], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 308], "gener": [4, 293], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 297, 304], "algorithm": [4, 293], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 297, 298], "return": [4, 294], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 297, 299, 300, 302, 303, 304], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 308], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "action": [4, 300, 304], "magnitud": 4, "task": [4, 302], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 297, 298, 299], "standard": 4, "explor": [4, 293, 297, 298], "valu": [4, 293, 294, 297, 299, 300], "loss": [4, 297, 298, 299, 300, 303], "earli": 4, "train": [4, 8, 294, 297, 299, 300, 303, 304], "roughli": 4, "uniformli": 4, "random": [4, 303], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 298], "increas": 4, "an": [4, 299, 300, 304], "dynam": [4, 306], "can": 4, "low": 4, "forward": [4, 297], "model": [4, 293, 297, 298, 300, 305, 308], "also": 4, "us": [4, 6, 9, 300, 305, 306, 308], "offlin": 4, "observ": [4, 297], "space": 4, "effect": [4, 304], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 309], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 308], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 303, 309], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 297], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 304], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 297, 306], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "envbas": [67, 304], "envcreat": 68, "envmetadata": 69, "gymlikeenv": 70, "modelbasedenvbas": 71, "multithreadedenv": 72, "parallelenv": 73, "serialenv": 74, "braxenv": 75, "braxwrapp": 76, "dmcontrolenv": 77, "dmcontrolwrapp": 78, "gymenv": 79, "gymwrapp": 80, "mogymenv": 81, "mogymwrapp": 82, "gym_backend": 83, "set_gym_backend": 84, "habitatenv": 85, "jumanjienv": 86, "jumanjiwrapp": 87, "openmlenv": 88, "vmasenv": 89, "vmaswrapp": 90, "dreamerenv": 91, "actionmask": 92, "binarizereward": 93, "catfram": [94, 306], "cattensor": 95, "centercrop": 96, "dtypecasttransform": 98, "devicecasttransform": 99, "discreteactionproject": 100, "doubletofloat": 101, "excludetransform": 102, "finitetensordictcheck": 103, "flattenobserv": 104, "frameskiptransform": 105, "grayscal": 106, "inittrack": 107, "klrewardtransform": 108, "noopresetenv": 109, "observationnorm": 110, "observationtransform": 111, "pinmemorytransform": 112, "r3mtransform": 113, "randomcroptensordict": 114, "renametransform": 115, "resiz": 116, "reward2gotransform": 117, "rewardclip": 118, "rewardsc": 119, "rewardsum": 120, "selecttransform": 121, "squeezetransform": 122, "stepcount": 123, "targetreturn": 124, "tensordictprim": 125, "timemaxpool": 126, "totensorimag": 127, "transformedenv": 129, "unsqueezetransform": 130, "vc1transform": 131, "viprewardtransform": 132, "viptransform": 133, "vecnorm": [134, 309], "gsdenois": 135, "check_env_spec": 136, "exploration_mod": 137, "exploration_typ": 138, "get_available_librari": 139, "make_composite_from_td": 140, "set_exploration_mod": 141, "set_exploration_typ": 142, "step_mdp": 143, "cemplann": 144, "convnet": 145, "dtactor": 146, "ddpgcnnactor": 147, "ddpgcnnqnet": 148, "ddpgmlpactor": 149, "ddpgmlpqnet": 150, "decisiontransform": 151, "delta": 152, "distributionaldqnnet": 153, "distributionalqvaluehook": 154, "dreameractor": 155, "duelingcnndqnet": 156, "independentnorm": 157, "lstmmodul": 158, "lstmnet": 159, "mlp": [160, 300], "mpcplannerbas": 161, "mppiplann": 162, "maskedcategor": 163, "multiagentmlp": 164, "noisylazylinear": 165, "noisylinear": 166, "normalparamwrapp": 167, "obsdecod": 168, "obsencod": 169, "onehotcategor": 170, "onlinedtactor": 171, "qmixer": [172, 294], "qvaluehook": 173, "rssmposterior": 174, "rssmprior": 175, "squeeze2dlay": 176, "squeezelay": 177, "tanhdelta": 178, "tanhnorm": 179, "truncatednorm": 180, "vdnmixer": 181, "vmapmodul": 182, "reset_nois": 183, "actor": [184, 293, 297], "actorcriticoper": 185, "actorcriticwrapp": 186, "actorvalueoper": 187, "additivegaussianwrapp": 188, "decisiontransformerinferencewrapp": 189, "distributionalqvalueactor": 190, "distributionalqvaluemodul": 191, "egreedywrapp": 192, "lmheadactorvalueoper": 193, "ornsteinuhlenbeckprocesswrapp": 194, "probabilisticactor": 195, "qvalueactor": 196, "qvaluemodul": 197, "safemodul": [198, 293], "safeprobabilisticmodul": 199, "safeprobabilistictensordictsequenti": 200, "safesequenti": 201, "tanhmodul": 202, "valueoper": 203, "worldmodelwrapp": 204, "biased_softplu": 205, "inv_softplu": 206, "map": 207, "a2closs": 208, "cqlloss": 209, "clipppoloss": 210, "ddpgloss": 211, "dqnloss": 212, "dtloss": 213, "discretesacloss": 214, "distributionaldqnloss": 215, "dreameractorloss": 216, "dreamermodelloss": 217, "dreamervalueloss": 218, "hardupd": 219, "iqlloss": 220, "klpenppoloss": 221, "lossmodul": [222, 297], "onlinedtloss": 223, "ppoloss": 224, "redqloss": 225, "reinforceloss": 226, "sacloss": 227, "softupd": 228, "td3loss": 229, "valueestim": 230, "default_value_kwarg": 231, "distance_loss": 232, "hold_out_net": 233, "hold_out_param": 234, "qmixerloss": 235, "next_state_valu": 236, "gae": 237, "td0estim": 238, "td1estim": 239, "tdlambdaestim": 240, "valueestimatorbas": 241, "generalized_advantage_estim": 242, "reward2go": 243, "td0_advantage_estim": 244, "td0_return_estim": 245, "td1_advantage_estim": 246, "td1_return_estim": 247, "td_lambda_advantage_estim": 248, "td_lambda_return_estim": 249, "vec_generalized_advantage_estim": 250, "vec_td1_advantage_estim": 251, "vec_td1_return_estim": 252, "vec_td_lambda_advantage_estim": 253, "vec_td_lambda_return_estim": 254, "tensordictrecord": 255, "videorecord": 256, "logger": [257, 295], "csvlogger": 258, "generate_exp_nam": 259, "get_logg": 260, "mlflowlogg": 261, "tensorboardlogg": 262, "wandblogg": 263, "batchsubsampl": 264, "clearcudacach": 265, "countframeslog": 266, "logreward": 267, "optimizerhook": 268, "replaybuffertrain": 270, "rewardnorm": 271, "selectkei": 272, "trainer": [273, 295, 298], "trainerhookbas": 274, "updateweight": 275, "correct_for_frame_skip": 276, "get_stats_random_rollout": 277, "make_collector_offpolici": 278, "make_collector_onpolici": 279, "make_dqn_loss": 280, "make_redq_loss": 281, "make_redq_model": 282, "make_replay_buff": 283, "make_target_updat": 284, "make_train": 285, "parallel_env_constructor": 286, "sync_async_collector": 287, "sync_sync_collector": 288, "transformed_env_constructor": 289, "readm": [290, 301], "tuto": [290, 301], "api": 291, "contribut": [292, 308], "content": 292, "modul": [293, 297, 300, 308], "tensordict": [293, 306, 308], "wrapper": 293, "probabilist": 293, "q": [293, 298, 300], "oper": 293, "join": 293, "hook": [293, 295, 298], "regular": 293, "planner": 293, "object": [294, 297, 308], "dqn": [294, 298, 300], "ddpg": [294, 297], "sac": 294, "redq": 294, "iql": 294, "cql": 294, "dt": 294, "td3": 294, "ppo": [294, 299, 303], "a2c": 294, "dreamer": 294, "checkpoint": 295, "builder": 295, "_util": 296, "code": [297, 304], "setup": [297, 300], "The": 297, "__init__": 297, "method": 297, "estim": 297, "put": 297, "togeth": [297, 304], "call": 297, "parallel": [297, 302, 309], "execut": [297, 302, 304], "stat": 297, "build": [297, 298, 306], "evalu": 297, "batch": [297, 304, 306], "size": [297, 306], "construct": 297, "target": [297, 298], "network": [297, 298, 299, 300, 303], "updat": 297, "time": [297, 307], "experi": [297, 304], "result": [297, 299, 303], "conclus": [297, 298, 299, 300, 303, 304, 306], "A": [298, 306], "exampl": [298, 306], "comput": [298, 304, 307], "deep": 298, "collect": [298, 299], "paramet": [298, 299], "hyperparamet": [298, 299, 303], "regist": 298, "possibl": 298, "improv": 298, "defin": [299, 303], "loop": [299, 300, 303, 304], "next": [299, 303], "step": [299, 303, 309], "recurr": 300, "convolut": 300, "lstm": 300, "select": 300, "divers": 302, "rollout": [302, 303, 304, 309], "critic": 303, "pendulum": 304, "write": 304, "_step": 304, "reset": [304, 309], "simul": 304, "_reset": 304, "metadata": 304, "_spec": 304, "spec": [304, 309], "shape": 304, "seed": [304, 309], "wrap": 304, "class": [304, 308], "test": 304, "our": 304, "custom": [304, 306], "simpl": 304, "pretrain": 305, "vanilla": 306, "integr": 306, "tensorclass": 306, "sampl": 306, "iter": 306, "over": 306, "fix": 306, "priorit": 306, "save": 306, "raw": 306, "imag": 306, "more": 306, "complex": 306, "introduct": 308, "config": 308, "tensordictmodul": 308, "sequenc": 308, "program": 308, "ensembl": 308, "meta": 308, "special": 308, "state": 308, "frame_skip": 309, "deepmind": 309, "control": 309, "devic": 309, "run": 309, "close": 309, "access": 309, "attribut": 309, "kwarg": 309}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})