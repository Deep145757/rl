Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.gym.MOGymEnv", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper", "reference/generated/torchrl.envs.libs.gym.gym_backend", "reference/generated/torchrl.envs.libs.gym.set_gym_backend", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.MOGymEnv.rst", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.gym_backend.rst", "reference/generated/torchrl.envs.libs.gym.set_gym_backend.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "MOGymEnv", "MOGymWrapper", "gym_backend", "set_gym_backend", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 88, 92, 94, 96, 99, 101, 102, 104, 110, 111, 114, 115, 116, 118, 126, 128, 129, 130, 132, 135, 137, 146, 148, 149, 150, 151, 159, 160, 161, 162, 166, 167, 171, 178, 179, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 206, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 258, 261, 270, 271, 275, 276, 279, 288, 289, 290, 291, 294, 295, 296, 299, 300, 304, 305, 307, 308, 310, 311], "open": [0, 5, 7, 11, 300, 305, 310], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311], "reinforc": [0, 3, 9, 94, 148, 149, 150, 151, 155, 193, 196, 210, 211, 215, 217, 221, 222, 228, 229, 230, 293, 300, 303, 306, 309, 310], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 94, 148, 149, 150, 151, 155, 163, 168, 193, 196, 210, 211, 215, 217, 221, 222, 227, 228, 229, 230, 293, 295, 296, 299, 300, 302, 303, 304, 306, 308, 309, 310, 311], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 71, 125, 168, 186, 197, 205, 210, 224, 226, 266, 294, 295, 296, 297, 299, 300, 301, 305, 307, 308, 311], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 72, 140, 293, 294, 295, 298, 299, 300, 301, 305, 306, 311], "pytorch": [0, 1, 2, 3, 128, 167, 168, 275, 294, 297, 299, 301, 302, 305, 306, 307, 310, 311], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 67, 70, 71, 72, 73, 74, 85, 109, 111, 115, 125, 130, 137, 148, 150, 156, 166, 174, 176, 177, 183, 184, 193, 194, 196, 199, 201, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 239, 271, 284, 294, 295, 296, 299, 300, 302, 305, 306, 307, 308, 310, 311], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 67, 70, 71, 72, 73, 74, 95, 96, 97, 99, 102, 105, 110, 111, 114, 115, 118, 121, 126, 130, 132, 134, 135, 146, 152, 155, 159, 160, 161, 162, 164, 165, 166, 184, 186, 190, 193, 194, 196, 197, 198, 199, 204, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 258, 262, 266, 272, 279, 284, 287, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "python": [0, 3, 5, 6, 7, 10, 21, 84, 164, 165, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 70, 94, 95, 105, 111, 114, 115, 128, 130, 132, 159, 161, 166, 167, 171, 186, 191, 192, 193, 197, 198, 200, 201, 212, 219, 223, 224, 226, 257, 274, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "low": [0, 25, 67, 70, 72, 73, 74, 97, 101, 141, 193, 197, 204, 299, 300, 301, 305, 306, 310, 311], "high": [0, 9, 25, 41, 67, 70, 72, 73, 74, 97, 101, 110, 141, 193, 197, 204, 239, 244, 252, 299, 300, 301, 305, 306, 308, 310, 311], "level": [0, 3, 4, 22, 26, 28, 94, 223, 299, 300, 310], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 67, 112, 162, 243, 267, 276, 297, 301, 306, 310], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 67, 68, 70, 71, 72, 73, 74, 88, 97, 98, 99, 101, 102, 104, 105, 109, 110, 114, 121, 126, 128, 129, 130, 131, 132, 134, 135, 141, 145, 151, 153, 159, 160, 162, 164, 165, 168, 172, 174, 177, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 234, 237, 238, 239, 240, 241, 242, 243, 272, 287, 291, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 101, 184, 224, 295, 310], "effici": [0, 1, 2, 4, 8, 168, 295, 299, 300, 301, 302, 304, 305, 307, 308, 310], "modular": [0, 203, 308, 310], "document": [0, 5, 7, 18, 19, 21, 32, 67, 70, 72, 73, 74, 130, 300, 310], "properli": [0, 67, 70, 72, 73, 74, 301, 305, 306, 310], "test": [0, 3, 5, 132, 137, 159, 160, 271, 287, 301, 302, 310], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 72, 73, 74, 94, 98, 99, 102, 103, 111, 114, 118, 120, 122, 125, 126, 129, 130, 132, 134, 144, 145, 148, 149, 150, 151, 152, 155, 159, 160, 162, 163, 164, 165, 168, 169, 175, 176, 177, 186, 187, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 245, 260, 263, 264, 265, 266, 270, 287, 289, 290, 295, 296, 297, 300, 301, 302, 305, 306, 307, 308, 310, 311], "code": [0, 3, 5, 7, 8, 114, 132, 159, 203, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311], "aim": [0, 3, 7, 28, 29, 114, 132, 134, 161, 278, 294, 295, 296, 299, 300, 310], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 72, 88, 111, 129, 140, 155, 184, 192, 193, 200, 203, 217, 239, 240, 241, 242, 263, 295, 297, 301, 302, 305, 306, 308, 310], "research": [0, 7, 9, 310], "most": [0, 3, 7, 8, 32, 101, 299, 301, 306, 310, 311], "written": [0, 3, 34, 36, 39, 45, 52, 55, 67, 70, 72, 73, 74, 94, 109, 121, 124, 127, 144, 186, 196, 197, 200, 201, 205, 210, 212, 223, 226, 228, 238, 257, 258, 295, 296, 297, 299, 302, 304, 306, 310], "highli": [0, 2, 310, 311], "wai": [0, 3, 4, 114, 116, 134, 226, 239, 240, 241, 242, 295, 299, 300, 301, 304, 305, 306, 307, 308, 310, 311], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 67, 68, 70, 72, 73, 74, 84, 92, 94, 97, 98, 99, 101, 102, 110, 111, 114, 115, 118, 121, 125, 126, 129, 130, 132, 134, 135, 145, 158, 159, 162, 163, 166, 168, 169, 182, 184, 186, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 271, 284, 289, 290, 291, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "easili": [0, 3, 7, 284, 296, 299, 300, 301, 305, 310, 311], "swap": [0, 3, 301, 307, 310], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 155, 175, 192, 193, 199, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 270, 275, 299, 300, 301, 302, 304, 305, 306, 307, 310], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 147, 148, 152, 155, 156, 173, 174, 175, 183, 191, 195, 204, 207, 209, 215, 225, 258, 272, 284, 291, 293, 300, 302, 303, 307, 309], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 72, 73, 74, 99, 102, 130, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 183, 184, 190, 191, 193, 194, 196, 199, 204, 207, 223, 258, 299, 300, 302, 304, 305, 306, 307, 308, 310, 311], "write": [0, 3, 8, 23, 32, 37, 45, 70, 97, 113, 186, 200, 201, 203, 205, 211, 213, 214, 216, 222, 227, 229, 231, 238, 243, 258, 295, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 67, 70, 72, 73, 74, 121, 129, 135, 144, 159, 196, 200, 201, 206, 210, 211, 212, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 299, 301, 302, 305, 306, 310, 311], "ones": [0, 15, 26, 32, 35, 41, 42, 67, 70, 72, 73, 74, 95, 98, 99, 100, 102, 111, 114, 118, 125, 126, 129, 130, 132, 134, 164, 165, 184, 200, 210, 211, 213, 222, 226, 227, 229, 231, 245, 299, 301, 305, 306, 308, 310, 311], "littl": [0, 3, 43, 301, 302, 308, 310, 311], "effort": [0, 3, 306, 308, 310], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 84, 85, 92, 94, 95, 97, 98, 99, 100, 101, 102, 104, 106, 108, 109, 111, 114, 115, 116, 118, 121, 122, 126, 127, 129, 130, 132, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 239, 240, 241, 242, 243, 257, 266, 268, 271, 272, 275, 277, 278, 279, 284, 287, 291, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "repo": [0, 6, 52, 132, 294, 305, 310], "attempt": [0, 190, 196, 214, 222, 237, 310], "align": [0, 310], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 67, 70, 72, 73, 74, 95, 100, 130, 279, 291, 305, 310, 311], "ecosystem": [0, 310], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 67, 68, 70, 72, 73, 74, 94, 126, 130, 159, 190, 193, 196, 201, 223, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 88, 135, 293, 299, 300, 307, 308, 310, 311], "pillar": [0, 310], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 94, 95, 99, 100, 101, 102, 106, 110, 111, 114, 115, 125, 129, 130, 132, 135, 137, 145, 159, 160, 162, 163, 190, 196, 218, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 266, 268, 271, 278, 279, 280, 281, 284, 287, 288, 289, 290, 291, 293, 294, 295, 303, 307, 308, 309], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 67, 70, 71, 72, 73, 74, 99, 114, 126, 132, 134, 136, 146, 147, 152, 159, 161, 162, 163, 166, 173, 174, 183, 187, 188, 189, 195, 200, 206, 210, 211, 212, 214, 215, 218, 219, 220, 222, 223, 224, 226, 227, 229, 237, 275, 280, 281, 282, 283, 284, 293, 294, 297, 301, 303, 305, 306, 308, 309, 311], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 88, 92, 94, 99, 100, 102, 109, 111, 118, 124, 137, 141, 145, 155, 159, 160, 163, 166, 175, 184, 186, 192, 194, 196, 197, 198, 200, 203, 204, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 266, 272, 275, 277, 280, 287, 289, 290, 291, 293, 295, 296, 297, 302, 306, 307, 308, 311], "util": [0, 3, 17, 23, 32, 40, 67, 70, 72, 73, 74, 114, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 152, 207, 208, 209, 224, 287, 293, 298, 299, 301, 305, 306, 310, 311], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 67, 68, 70, 72, 73, 74, 95, 98, 105, 111, 114, 121, 126, 129, 130, 132, 134, 137, 158, 159, 163, 166, 169, 175, 181, 182, 191, 193, 197, 199, 200, 201, 238, 239, 240, 241, 242, 266, 278, 290, 295, 299, 300, 301, 305, 306, 307, 310, 311], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 67, 68, 70, 72, 73, 74, 95, 98, 105, 111, 114, 121, 126, 129, 130, 132, 134, 137, 158, 159, 163, 166, 181, 182, 191, 197, 200, 201, 238, 248, 249, 250, 251, 253, 254, 255, 256, 290, 295, 299, 300, 301, 305, 306, 307, 310, 311], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 94, 118, 124, 196, 272, 275, 277, 280, 281, 287, 289, 290, 293, 297, 308, 311], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 67, 70, 71, 72, 73, 74, 98, 99, 102, 114, 126, 129, 130, 132, 134, 135, 144, 145, 146, 161, 163, 166, 186, 192, 193, 197, 199, 200, 205, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 245, 262, 266, 278, 284, 287, 288, 289, 290, 291, 295, 296, 297, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 67, 70, 72, 73, 74, 109, 130, 161, 166, 299, 300, 301, 308, 310, 311], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 67, 70, 72, 73, 74, 94, 99, 102, 109, 110, 111, 125, 126, 129, 130, 135, 137, 146, 160, 161, 166, 184, 202, 203, 210, 212, 223, 226, 234, 237, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 275, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "few": [0, 2, 8, 266, 301, 302, 305, 308, 310, 311], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 99, 102, 205, 226, 295, 299, 301, 302, 305, 306, 310, 311], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 146, 200, 271, 275, 295, 299, 301, 302, 305, 306, 308, 310, 311], "standard": [0, 3, 111, 120, 135, 145, 156, 163, 167, 168, 190, 191, 231, 239, 240, 241, 242, 299, 300, 305, 308, 310], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 128, 275, 306, 308, 310, 311], "common": [0, 3, 4, 21, 70, 73, 74, 92, 187, 188, 189, 195, 210, 211, 212, 216, 222, 223, 226, 227, 228, 229, 231, 287, 294, 295, 297, 299, 301, 304, 305, 306, 307, 310, 311], "openai": [0, 7, 79, 80, 301, 306, 310, 311], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 94, 97, 108, 109, 111, 116, 118, 126, 129, 135, 159, 284, 287, 294, 299, 300, 301, 302, 306, 307, 308, 310], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 94, 95, 97, 98, 99, 101, 102, 105, 111, 114, 115, 118, 125, 126, 129, 130, 132, 134, 135, 159, 160, 166, 186, 191, 192, 197, 198, 200, 201, 202, 203, 210, 212, 213, 216, 222, 223, 224, 226, 227, 228, 229, 230, 231, 239, 240, 241, 242, 243, 279, 297, 299, 300, 301, 302, 304, 305, 306, 308, 310, 311], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 68, 70, 71, 72, 73, 74, 77, 88, 92, 93, 94, 95, 96, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 184, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 263, 266, 268, 269, 270, 271, 272, 273, 275, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 295, 302, 305, 306, 308, 310], "On": [0, 3, 7, 18, 19, 20, 21, 295, 300, 305], "end": [0, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 125, 130, 146, 162, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "come": [0, 1, 3, 8, 73, 74, 99, 102, 186, 187, 188, 189, 197, 205, 299, 300, 301, 302, 305, 308, 310, 311], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 84, 92, 95, 98, 99, 102, 108, 109, 114, 124, 125, 126, 129, 130, 132, 134, 137, 142, 143, 159, 162, 166, 190, 191, 200, 224, 226, 243, 266, 271, 272, 281, 291, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "re": [0, 3, 8, 32, 62, 67, 70, 72, 73, 74, 159, 164, 165, 197, 201, 297, 299, 301, 302, 304, 306, 310, 311], "usabl": [0, 297, 302, 310], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 84, 99, 102, 130, 135, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 164, 165, 166, 169, 170, 171, 172, 173, 176, 177, 179, 182, 184, 187, 188, 189, 190, 191, 193, 194, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 284, 287, 293, 295, 299, 302, 304, 306, 308, 311], "cost": [0, 2, 27, 299, 300, 305, 306, 308], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 144, 145, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 172, 173, 174, 176, 177, 180, 181, 182, 183, 186, 187, 188, 189, 191, 197, 199, 200, 201, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 234, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 275, 278, 280, 284, 287, 288, 289, 290, 291, 293, 295, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 67, 68, 70, 72, 73, 74, 135, 166, 193, 196, 199, 297, 299, 300, 302, 305, 306, 307, 308, 310, 311], "good": [0, 1, 4, 9, 299, 301, 302, 305, 310, 311], "runtim": [0, 3, 32, 67, 70, 72, 73, 74, 306], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 67, 70, 72, 73, 74, 99, 102, 110, 130, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 219, 226, 271, 275, 296, 299, 300, 301, 302, 304, 305, 306, 311], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 67, 70, 72, 73, 74, 135, 187, 188, 189, 196, 216, 224, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 295, 296, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 113, 115, 116, 118, 121, 122, 124, 125, 126, 127, 129, 132, 133, 135, 172, 186, 187, 188, 189, 192, 197, 200, 201, 203, 205, 206, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 258, 271, 275, 284, 295, 299, 300, 301, 302, 304, 305, 306, 307, 311], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 128, 132, 136, 155, 161, 167, 169, 186, 190, 192, 193, 200, 205, 210, 217, 224, 226, 239, 244, 252, 270, 294, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 311], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 296, 299, 300, 301, 305, 306, 310, 311], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 297, 299, 304, 307, 311], "beyond": 0, "api": [0, 3, 5, 114, 134, 296, 297, 305, 306, 310, 311], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 67, 68, 70, 71, 72, 73, 74, 94, 95, 104, 109, 115, 137, 159, 186, 192, 193, 197, 198, 199, 200, 201, 295, 296, 300, 301, 302, 304, 305, 306, 307, 308, 311], "paper": [0, 114, 132, 134, 174, 183, 221, 284, 299, 301, 305], "ppo": [0, 4, 8, 197, 201, 212, 223, 226, 293, 295, 299, 300, 303, 309], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 94, 97, 98, 108, 109, 111, 116, 118, 126, 129, 130, 135, 159, 287, 295, 300, 301, 303, 309, 310, 311], "your": [0, 2, 3, 7, 8, 10, 18, 32, 67, 70, 72, 73, 74, 135, 291, 294, 295, 296, 300, 301, 302, 303, 305, 308, 309, 310], "introduct": [0, 296, 303, 305, 309, 311], "multi": [0, 7, 9, 28, 29, 32, 67, 70, 72, 73, 74, 159, 160, 161, 166, 237, 239, 240, 241, 242, 293, 299, 300, 301, 302, 303, 306, 309, 310], "agent": [0, 9, 28, 29, 125, 164, 165, 166, 168, 174, 183, 237, 293, 303, 306, 309], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 159, 162, 163, 200, 224, 257, 279, 280, 281, 284, 287, 289, 290, 291, 293, 295, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 67, 68, 70, 71, 72, 73, 74, 77, 84, 88, 92, 94, 95, 96, 98, 99, 100, 101, 102, 108, 109, 111, 114, 115, 116, 118, 125, 126, 128, 129, 130, 132, 134, 135, 137, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 156, 158, 159, 161, 162, 163, 165, 166, 168, 169, 172, 173, 174, 175, 181, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 252, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 285, 287, 291, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 309, 311], "pretrain": [0, 303, 309], "recurr": [0, 159, 177, 300, 303, 308, 309], "dqn": [0, 155, 192, 193, 210, 211, 213, 214, 216, 217, 218, 221, 222, 224, 226, 227, 228, 229, 230, 231, 237, 282, 293, 295, 303, 309], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 67, 70, 72, 73, 74, 99, 106, 114, 125, 130, 132, 134, 137, 148, 150, 159, 190, 194, 196, 210, 211, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 239, 275, 277, 287, 293, 297, 300, 303, 307, 308, 309, 311], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 67, 70, 71, 72, 73, 74, 101, 109, 125, 142, 143, 155, 159, 166, 168, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 210, 211, 212, 213, 216, 222, 223, 225, 226, 227, 228, 229, 231, 271, 277, 280, 281, 287, 289, 290, 295, 296, 297, 300, 303, 307, 308, 309, 310, 311], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 94, 101, 115, 118, 126, 211, 213, 214, 216, 222, 227, 229, 231, 272, 275, 285, 287, 293, 297, 303, 306, 307, 309], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 94, 98, 101, 114, 115, 118, 126, 129, 130, 132, 134, 200, 203, 211, 213, 214, 216, 222, 227, 229, 231, 272, 275, 285, 287, 293, 297, 303, 306, 307, 309, 311], "task": [0, 3, 9, 28, 29, 40, 45, 73, 74, 77, 114, 132, 134, 222, 299, 300, 301, 302, 303, 305, 306, 309, 310, 311], "specif": [0, 2, 5, 8, 41, 42, 70, 152, 191, 275, 293, 296, 297, 301, 302, 303, 305, 308, 309], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 99, 102, 111, 114, 129, 130, 132, 135, 163, 174, 183, 186, 187, 197, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 279, 280, 281, 286, 287, 291, 293, 295, 297, 300, 301, 302, 303, 305, 306, 308, 309, 311], "ddpg": [0, 148, 149, 150, 151, 213, 221, 230, 293, 295, 300, 303, 309], "loss": [0, 3, 8, 36, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 270, 275, 282, 283, 284, 287, 296, 297, 303, 306, 308, 309, 310], "trainer": [0, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 299, 303, 309], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 85, 97, 101, 106, 109, 114, 115, 116, 126, 129, 130, 132, 133, 135, 136, 137, 144, 145, 146, 155, 159, 161, 163, 164, 165, 166, 168, 169, 184, 190, 191, 192, 193, 194, 197, 198, 201, 203, 204, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 234, 237, 239, 240, 241, 242, 243, 245, 259, 260, 263, 268, 275, 277, 284, 287, 296, 299, 301, 303, 305, 306, 309, 311], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 101, 102, 108, 109, 111, 114, 116, 118, 125, 126, 128, 129, 130, 132, 134, 135, 141, 144, 145, 146, 147, 152, 155, 159, 160, 161, 163, 166, 169, 172, 173, 174, 175, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 241, 242, 245, 266, 267, 268, 269, 270, 272, 273, 274, 277, 284, 287, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311], "packag": [0, 6, 7, 10, 84, 293, 294, 311], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 94, 95, 114, 134, 146, 159, 160, 161, 166, 199, 203, 212, 214, 216, 217, 223, 226, 227, 231, 239, 240, 241, 242, 248, 249, 250, 251, 253, 254, 255, 256, 284, 291, 293, 299, 300, 301, 302, 304, 305, 306, 307, 308], "node": [0, 2, 18, 19, 20, 21, 22, 284, 293], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 109, 111, 145, 153, 154, 155, 156, 158, 163, 164, 165, 169, 172, 173, 176, 177, 180, 181, 182, 190, 191, 192, 193, 197, 201, 202, 210, 211, 212, 216, 217, 222, 223, 226, 227, 228, 229, 231, 293, 297, 300, 301, 305, 306, 310, 311], "helper": [0, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 299, 300, 302, 306], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 67, 70, 72, 73, 74, 94, 129, 130, 135, 195, 219, 284, 293, 299, 300, 301, 302, 304, 305, 308, 310, 311], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 67, 70, 71, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 177, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 211, 214, 216, 227, 229, 231, 237, 293, 306], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 84, 92, 94, 95, 97, 99, 100, 101, 102, 103, 108, 109, 111, 114, 115, 116, 118, 122, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 141, 144, 145, 148, 149, 150, 151, 152, 155, 158, 159, 161, 162, 163, 165, 166, 167, 169, 172, 173, 174, 175, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 226, 227, 228, 229, 231, 233, 237, 238, 239, 240, 241, 242, 257, 258, 266, 272, 275, 278, 279, 284, 285, 287, 288, 291, 293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "human": [0, 293, 306], "feedback": [0, 293, 310], "rlhf": [0, 34, 40, 45, 54, 109, 293, 295], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 68, 70, 72, 73, 74, 92, 99, 102, 110, 116, 129, 130, 135, 137, 145, 162, 163, 271, 279, 280, 281, 284, 287, 289, 290, 291, 293, 302], "gymlikeenv": [0, 293], "envmetadata": [0, 293], "vector": [0, 1, 8, 24, 27, 33, 101, 148, 150, 161, 239, 242, 252, 253, 254, 255, 256, 293, 299, 300, 302, 304, 305, 306, 307, 311], "record": [0, 32, 67, 70, 72, 73, 74, 109, 226, 257, 258, 259, 260, 261, 262, 263, 264, 265, 287, 293, 300, 301], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 67, 70, 72, 73, 74, 101, 126, 141, 186, 192, 193, 197, 198, 199, 200, 201, 202, 203, 293, 301, 302, 305, 306, 310, 311], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 67, 70, 71, 72, 73, 74, 84, 98, 101, 109, 114, 115, 125, 126, 129, 130, 132, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 237, 239, 240, 241, 242, 243, 275, 282, 283, 287, 293, 296, 297, 300, 301, 304, 305, 306, 307, 308], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 144, 145, 154, 155, 159, 160, 162, 163, 174, 175, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 257, 266, 270, 271, 272, 274, 275, 284, 293, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 311], "actor": [0, 4, 15, 21, 109, 145, 147, 148, 150, 155, 156, 163, 173, 175, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 237, 284, 293, 296, 300, 301, 302, 305, 307, 310], "explor": [0, 1, 136, 168, 186, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 210, 271, 280, 281, 287, 293, 301, 302, 305, 306], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 84, 93, 94, 95, 97, 99, 101, 102, 110, 111, 114, 115, 118, 119, 121, 126, 127, 129, 130, 134, 135, 141, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 266, 268, 269, 270, 271, 272, 275, 284, 287, 293, 297, 300, 304, 305, 306, 308, 310, 311], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 67, 68, 70, 71, 72, 73, 74, 98, 100, 109, 111, 116, 121, 122, 129, 153, 164, 165, 172, 186, 197, 201, 205, 206, 227, 233, 239, 244, 252, 261, 275, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311], "hook": [0, 32, 67, 70, 72, 73, 74, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 175, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 293], "planner": [0, 145, 163, 293], "sac": [0, 216, 227, 229, 293], "redq": [0, 227, 283, 284, 293], "iql": [0, 222, 293, 305], "cql": [0, 211, 293], "dt": [0, 196, 293, 306], "td3": [0, 231, 293], "a2c": [0, 210, 293], "dreamer": [0, 91, 156, 218, 219, 220, 293, 295], "checkpoint": [0, 293, 307], "builder": [0, 293, 300, 311], "logger": [0, 258, 260, 261, 262, 263, 264, 265, 269, 275, 287, 291, 293, 300], "_util": [0, 3, 11, 293], "implement_for": [0, 3, 293], "contribut": 0, "thing": [0, 3, 7, 8, 294, 301, 302, 305, 308, 311], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 67, 70, 72, 73, 74, 101, 135, 153, 180, 294, 299, 306, 308], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 68, 70, 72, 73, 74, 88, 92, 94, 98, 99, 101, 102, 109, 110, 111, 114, 115, 121, 125, 126, 129, 130, 132, 134, 135, 142, 143, 145, 155, 161, 162, 163, 164, 165, 167, 175, 181, 197, 200, 201, 203, 207, 212, 214, 217, 223, 226, 232, 237, 238, 239, 240, 241, 242, 257, 258, 272, 291, 294, 295, 297, 299, 300, 301, 302, 305, 306, 307, 308, 311], "debug": [0, 6, 8, 40, 294, 311], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 67, 70, 72, 73, 74, 95, 109, 114, 132, 135, 146, 161, 193, 199, 204, 212, 223, 226, 275, 294, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "habitat": [0, 3, 85, 294, 307], "lab": [0, 3, 77, 78, 294], "mujoco": [0, 6, 8, 294, 301, 302], "error": [0, 1, 3, 7, 10, 11, 29, 32, 67, 70, 72, 73, 74, 115, 137, 294, 299, 301, 305, 311], "solut": [0, 3, 6, 7, 9, 21, 294, 295, 297, 310], "resourc": [0, 1, 21, 294, 299, 301, 305], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 67, 70, 72, 73, 74, 189, 224, 229, 239, 242, 294, 295, 299, 301, 302, 305, 306, 307, 311], "issu": [0, 4, 5, 8, 55, 56, 65, 115, 186, 192, 193, 197, 198, 199, 200, 201, 294, 310], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 67, 70, 72, 73, 74, 94, 101, 144, 164, 165, 304, 305, 308, 310], "search": [0, 300], "page": [0, 7], "somewhat": [1, 296, 311], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 67, 70, 72, 73, 74, 100, 130, 155, 175, 192, 193, 198, 199, 226, 272, 310, 311], "dataload": [1, 54, 62, 300, 301, 308], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 104, 118, 159, 172, 190, 194, 196, 295, 300, 308, 310, 311], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 109, 110, 111, 114, 115, 116, 118, 125, 126, 127, 128, 129, 130, 132, 134, 135, 141, 144, 145, 146, 147, 148, 149, 151, 152, 155, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 207, 210, 211, 212, 213, 214, 216, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 245, 247, 248, 249, 253, 254, 256, 266, 271, 272, 273, 284, 287, 291, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 104, 109, 114, 129, 130, 134, 159, 160, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 272, 275, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 94, 111, 114, 134, 137, 196, 211, 213, 216, 227, 229, 231, 266, 272, 275, 277, 278, 279, 287, 297, 299, 302, 305, 306, 307, 308, 310, 311], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 67, 70, 72, 73, 74, 101, 111, 127, 144, 184, 203, 217, 219, 224, 245, 278, 297, 299, 300, 301, 305, 306, 311], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 93, 98, 105, 114, 126, 129, 130, 131, 132, 134, 144, 159, 200, 201, 210, 211, 213, 214, 216, 217, 218, 219, 222, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 295, 299, 302, 305, 306, 308, 311], "static": [1, 11, 40, 45, 135, 222, 306, 308], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 67, 68, 70, 72, 73, 74, 88, 89, 90, 95, 98, 99, 100, 101, 102, 109, 111, 114, 118, 126, 129, 130, 132, 134, 135, 141, 146, 147, 148, 149, 150, 152, 155, 157, 159, 160, 161, 164, 165, 166, 169, 173, 184, 191, 192, 193, 194, 196, 200, 204, 205, 210, 211, 212, 213, 216, 222, 223, 226, 227, 228, 229, 231, 238, 239, 240, 241, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 266, 295, 296, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 67, 70, 72, 73, 74, 85, 125, 128, 137, 166, 195, 227, 296, 299, 301, 302, 305, 306, 307, 308, 311], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 67, 70, 72, 73, 74, 99, 101, 102, 110, 116, 130, 142, 143, 159, 194, 196, 212, 223, 226, 258, 272, 277, 289, 290, 291, 295, 299, 300, 301, 302, 305, 306, 308], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 94, 98, 114, 126, 128, 129, 130, 132, 134, 135, 137, 146, 159, 165, 166, 168, 174, 183, 187, 189, 190, 193, 194, 197, 200, 201, 204, 211, 222, 224, 229, 239, 240, 241, 242, 243, 284, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 67, 70, 71, 72, 73, 74, 94, 98, 105, 114, 121, 126, 129, 130, 131, 132, 134, 184, 200, 201, 202, 224, 297, 301, 311], "two": [1, 3, 4, 8, 10, 32, 62, 67, 70, 72, 73, 74, 111, 114, 134, 151, 159, 178, 201, 223, 234, 271, 275, 284, 296, 299, 300, 301, 302, 304, 305, 306, 308, 310, 311], "main": [1, 2, 3, 5, 20, 22, 68, 201, 275, 295, 296, 299, 300, 304, 311], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 67, 70, 72, 73, 74, 97, 98, 114, 126, 129, 130, 132, 134, 144, 146, 159, 161, 164, 165, 166, 167, 184, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 237, 239, 240, 241, 242, 243, 257, 268, 278, 284, 287, 288, 291, 299, 300, 301, 302, 305, 306, 308, 311], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 67, 70, 71, 72, 73, 74, 97, 99, 102, 109, 111, 114, 121, 130, 132, 134, 135, 144, 154, 159, 161, 164, 165, 170, 175, 193, 198, 199, 201, 203, 204, 205, 224, 236, 239, 242, 257, 271, 272, 289, 290, 295, 299, 301, 304, 306, 307, 308, 310, 311], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 129, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 284, 288, 291, 295, 299, 300, 301, 305, 308], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 67, 70, 72, 73, 74, 103, 111, 122, 146, 161, 166, 179, 186, 192, 197, 198, 200, 202, 203, 205, 224, 236, 271, 274, 275, 284, 296, 297, 299, 301, 302, 305, 306], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 92, 126, 159, 194, 202, 203, 279, 291, 295, 297, 300, 301, 302, 305, 308, 309, 311], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 68, 70, 71, 72, 73, 74, 76, 87, 92, 105, 108, 110, 111, 124, 125, 126, 127, 130, 144, 145, 156, 159, 160, 162, 163, 190, 194, 196, 197, 201, 210, 218, 226, 238, 239, 240, 241, 242, 245, 246, 247, 257, 266, 271, 275, 297, 299, 300, 302, 304, 306, 307, 308, 310], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 67, 70, 72, 73, 74, 114, 129, 132, 135, 203, 299, 306, 310], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 67, 70, 72, 73, 74, 115, 125, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 214, 224, 239, 240, 241, 242, 243, 257, 288, 299, 300, 302, 306, 308, 311], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 67, 70, 71, 72, 73, 74, 88, 94, 101, 106, 110, 111, 120, 124, 127, 135, 145, 146, 153, 154, 156, 157, 158, 159, 161, 163, 166, 169, 170, 171, 174, 176, 177, 180, 181, 182, 183, 186, 190, 191, 194, 196, 197, 200, 201, 205, 209, 211, 216, 218, 222, 223, 225, 227, 229, 231, 266, 268, 271, 275, 277, 278, 279, 289, 290, 291, 295, 299, 300, 301, 302, 305, 306, 307, 311], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 67, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 159, 161, 167, 168, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 240, 241, 242, 272, 299, 301, 302, 305, 306, 308, 311], "deliv": [1, 16, 18, 19, 20, 299, 300, 310], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 67, 70, 72, 73, 74, 135, 159, 202, 203, 257, 266, 295, 300, 304, 306, 310], "user": [1, 2, 3, 5, 8, 21, 32, 52, 67, 70, 72, 73, 74, 125, 130, 152, 160, 226, 288, 296, 297, 299, 300, 306, 310, 311], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 92, 94, 98, 103, 105, 108, 110, 114, 121, 122, 124, 125, 126, 127, 129, 132, 133, 135, 137, 159, 185, 196, 257, 284, 299, 300, 301, 302, 304, 305, 310], "whenev": [1, 3, 32, 35, 38, 41, 42, 84, 108, 130, 224, 239, 240, 241, 242, 277, 295], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 67, 70, 72, 73, 74, 190, 194, 196, 299, 301, 305, 310, 311], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 99, 100, 102, 110, 111, 116, 118, 120, 122, 124, 126, 129, 135, 144, 145, 159, 163, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 284, 296, 299, 301, 302, 304, 305, 306, 307, 308, 310, 311], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 67, 70, 71, 72, 73, 74, 76, 87, 92, 94, 95, 97, 98, 103, 108, 111, 116, 122, 124, 125, 129, 130, 133, 135, 144, 145, 147, 152, 156, 159, 160, 161, 163, 170, 173, 174, 176, 177, 183, 187, 200, 206, 210, 212, 223, 224, 226, 227, 228, 237, 238, 239, 240, 241, 242, 243, 245, 291, 295, 296, 299, 300, 301, 302, 305, 306, 311], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 159, 167, 190, 192, 194, 198, 219, 300, 301, 302, 305, 306, 307, 308, 311], "predefin": [1, 300, 301, 308], "becaus": [1, 3, 4, 7, 40, 67, 70, 72, 73, 74, 109, 129, 151, 160, 166, 186, 192, 193, 197, 198, 199, 200, 201, 299, 300, 302, 304, 305, 306, 308, 311], "potenti": [1, 306, 308], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 67, 70, 72, 73, 74, 111, 130, 133, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 170, 171, 172, 173, 176, 177, 179, 181, 182, 184, 187, 190, 191, 193, 194, 196, 197, 199, 201, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 279, 296, 299, 301, 302, 304, 305, 307, 308], "heavi": [1, 8, 308], "crucial": [1, 190, 194, 196, 222, 224, 299, 300, 301, 302, 305, 306, 311], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 109, 147, 152, 173, 224, 226, 284, 295, 299, 300, 301, 305, 306], "hyperparamet": [1, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 299, 306, 308], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 126, 288, 291, 299, 308], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 77, 78, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 287, 288, 289, 290, 291, 295, 296, 299, 302, 305, 306, 307, 310], "take": [1, 3, 8, 23, 40, 67, 70, 72, 73, 74, 97, 124, 125, 127, 129, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 195, 196, 199, 204, 207, 209, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 277, 295, 297, 299, 300, 301, 305, 306, 308, 311], "consider": [1, 3, 8, 300, 305, 308], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 71, 72, 73, 74, 99, 102, 125, 130, 146, 159, 161, 205, 211, 212, 213, 214, 216, 217, 223, 224, 226, 227, 229, 231, 237, 239, 242, 299, 300, 301, 305, 306, 311], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 71, 72, 73, 74, 94, 97, 98, 100, 105, 109, 111, 115, 116, 118, 121, 122, 124, 125, 129, 130, 135, 137, 144, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 197, 199, 200, 201, 204, 207, 216, 221, 223, 224, 226, 227, 230, 238, 239, 240, 241, 242, 243, 258, 270, 271, 272, 275, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "occur": [1, 8, 14, 28, 29, 95, 111, 115, 186, 192, 193, 197, 198, 199, 200, 201, 219, 308, 311], "serial": [1, 3, 32, 67, 70, 72, 73, 74, 135], "optim": [1, 2, 8, 32, 67, 70, 72, 73, 74, 130, 145, 163, 167, 168, 211, 224, 225, 226, 229, 270, 275, 287, 296, 297, 301, 302, 305, 306], "parallel": [1, 3, 8, 17, 137, 210, 288, 289, 290, 291, 300, 301, 305], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 94, 118, 287, 290, 293, 301, 302, 305, 308], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 289, 290, 291, 295, 296, 297, 299, 300, 301, 302, 305, 308, 311], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 68, 72, 73, 74, 135, 289, 290, 291, 299, 301, 310, 311], "multisyncdatacollector": [1, 18, 19, 20, 21, 290, 293, 301, 310], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 295, 297, 301, 308, 310], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 135, 196, 277, 295, 299, 305, 306], "aggreg": [1, 146, 148, 149, 203], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 67, 68, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 144, 159, 161, 175, 191, 193, 194, 199, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 239, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 277, 295, 300, 302, 306, 307, 310, 311], "final": [1, 3, 4, 21, 34, 36, 39, 40, 159, 190, 194, 195, 196, 202, 239, 271, 295, 299, 300, 301, 305, 306, 311], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 289, 293, 299, 300, 301, 310], "sever": [1, 8, 30, 32, 45, 67, 70, 72, 73, 74, 95, 97, 130, 226, 299, 301, 308, 311], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 94, 105, 111, 115, 118, 126, 130, 131, 135, 153, 154, 159, 160, 164, 165, 166, 167, 172, 174, 180, 184, 196, 200, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 266, 269, 272, 273, 274, 275, 277, 289, 290, 291, 297, 300, 301, 302, 304, 305, 307, 310, 311], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 115, 165, 172, 238, 279, 294, 299, 300, 301, 302, 305, 306, 308, 311], "continu": [1, 9, 25, 46, 67, 70, 72, 73, 74, 141, 148, 149, 150, 151, 196, 203, 210, 211, 216, 222, 226, 227, 228, 229, 230, 231, 239, 244, 252, 295, 299, 301, 302, 305, 306, 308, 310, 311], "concomitantli": 1, "network": [1, 4, 8, 32, 67, 70, 72, 73, 74, 146, 148, 149, 150, 151, 154, 156, 157, 161, 166, 168, 170, 171, 174, 176, 177, 178, 183, 187, 188, 189, 200, 204, 211, 212, 213, 214, 216, 217, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 235, 237, 239, 240, 241, 242, 243, 286, 287, 295, 296, 297, 304, 306, 311], "impli": [1, 311], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 159, 168, 200, 210, 211, 212, 216, 219, 277, 286, 295, 297, 299, 300, 301, 302, 304, 306, 308, 310], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 67, 70, 72, 73, 74, 109, 111, 122, 130, 131, 135, 137, 161, 296, 297, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311], "slightli": [1, 295, 296, 302, 306, 307, 308, 311], "lag": [1, 13, 14, 16, 17, 299, 300, 301], "therefor": [1, 3, 7, 67, 70, 72, 73, 74, 118, 125, 226, 237, 311], "although": [1, 8, 67, 70, 72, 73, 74, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 297, 299, 300, 308], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 88, 92, 94, 109, 114, 121, 124, 127, 129, 131, 134, 144, 164, 165, 190, 194, 196, 197, 200, 201, 209, 210, 211, 212, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 296, 297, 299, 300, 301, 304, 305, 306, 308, 311], "asynchron": [1, 9, 14, 21, 32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200, 210, 289, 300, 301], "off": [1, 2, 4, 158, 182, 192, 229, 271, 280, 295, 297, 299, 300, 301, 305, 307, 311], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 67, 70, 72, 73, 74, 99, 102, 105, 111, 125, 155, 159, 166, 167, 187, 189, 191, 193, 198, 210, 217, 222, 226, 271, 295, 297, 299, 300, 301, 302, 305, 306, 307, 308, 311], "remot": [1, 18, 19, 20, 21, 73, 74, 311], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 67, 70, 71, 72, 73, 74, 89, 90, 92, 94, 97, 99, 102, 109, 116, 137, 145, 159, 163, 196, 210, 279, 295, 299, 301, 302, 307, 308, 310], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 122, 227, 239, 240, 241, 242, 243, 296, 299, 301], "synchronis": [1, 68, 305], "either": [1, 5, 22, 32, 40, 54, 67, 70, 72, 73, 74, 125, 206, 231, 262, 297, 299, 300, 302, 307, 308, 310, 311], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 299, 305, 310], "update_at_each_batch": [1, 13, 14, 17, 299], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 89, 90, 92, 94, 95, 98, 101, 105, 108, 109, 110, 111, 114, 115, 116, 120, 124, 126, 128, 129, 130, 131, 132, 134, 135, 137, 141, 144, 145, 146, 148, 149, 150, 151, 157, 159, 161, 163, 164, 165, 166, 167, 168, 181, 182, 186, 187, 188, 189, 190, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 239, 240, 241, 242, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 268, 269, 271, 272, 275, 291, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "second": [1, 8, 159, 193, 212, 223, 226, 229, 274, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 98, 99, 100, 102, 109, 113, 114, 116, 118, 126, 128, 129, 130, 132, 134, 141, 144, 145, 146, 147, 148, 149, 150, 151, 155, 157, 159, 160, 161, 163, 166, 167, 168, 173, 174, 175, 183, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 203, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 272, 277, 284, 285, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 67, 70, 72, 73, 74, 105, 109, 129, 154, 155, 169, 187, 188, 189, 192, 193, 195, 200, 206, 210, 212, 213, 214, 217, 223, 226, 228, 237, 238, 239, 240, 241, 242, 275, 284, 293, 297, 299, 300, 301, 302, 304, 305, 306, 311], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 67, 68, 70, 71, 72, 73, 74, 78, 94, 111, 126, 129, 135, 141, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 207, 214, 216, 224, 237, 239, 240, 241, 242, 258, 262, 271, 279, 280, 281, 284, 287, 289, 290, 295, 296, 297, 299, 301, 302, 306, 308, 311], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 98, 99, 100, 102, 114, 116, 118, 126, 129, 130, 132, 134, 141, 144, 145, 159, 163, 167, 168, 174, 175, 183, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 203, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 272, 284, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 67, 70, 72, 73, 74, 116, 151, 159, 161, 169, 184, 186, 190, 192, 200, 205, 224, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 294, 296, 299, 300, 301, 305, 306, 308, 310, 311], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 67, 68, 70, 72, 73, 74, 88, 92, 94, 97, 99, 100, 101, 102, 110, 111, 114, 123, 129, 130, 131, 134, 135, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 166, 169, 170, 171, 172, 173, 175, 176, 177, 179, 184, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 239, 240, 241, 242, 246, 247, 268, 270, 271, 275, 279, 284, 291, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 98, 109, 113, 114, 126, 129, 130, 132, 134, 200, 267, 299, 300, 301, 302, 305, 307, 311], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 73, 74, 95, 97, 101, 110, 121, 129, 135, 159, 160, 167, 168, 186, 192, 197, 198, 200, 201, 204, 212, 216, 223, 226, 227, 231, 245, 284, 291, 295, 297, 299, 300, 301, 305, 306, 308, 310], "infer": [1, 73, 74, 94, 125, 135, 159, 167, 191, 299, 301, 308], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 67, 70, 71, 72, 73, 74, 77, 78, 110, 111, 130, 135, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 202, 203, 204, 207, 271, 289, 290, 291, 294, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310], "dispatch": [1, 18, 19, 20, 21, 184], "avail": [1, 3, 4, 6, 21, 62, 109, 155, 175, 197, 201, 224, 289, 290, 295, 299, 300, 301, 302, 305, 306, 308, 311], "speed": [1, 2, 4, 8, 27, 296, 299, 300, 301, 302, 305, 306, 308], "up": [1, 2, 3, 8, 9, 27, 40, 52, 129, 226, 294, 295, 296, 299, 300, 301, 302, 305, 306, 308, 311], "avoid": [1, 32, 55, 56, 65, 67, 70, 72, 73, 74, 84, 130, 135, 186, 200, 205, 212, 223, 226, 278, 301, 305], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 169, 295, 296, 299, 300, 305], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 95, 99, 102, 105, 114, 116, 118, 123, 126, 128, 129, 130, 131, 134, 135, 141, 144, 145, 146, 147, 152, 153, 155, 159, 160, 161, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 177, 180, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 205, 210, 211, 213, 214, 216, 222, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 258, 266, 272, 284, 295, 300, 301, 302, 304, 305, 306, 307, 310, 311], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 67, 68, 69, 70, 72, 73, 74, 99, 102, 116, 129, 131, 135, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 167, 169, 170, 171, 173, 174, 176, 177, 179, 183, 184, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 212, 223, 224, 226, 239, 240, 241, 242, 243, 272, 289, 290, 291, 295, 299, 300, 301, 302, 304, 305, 306, 308, 311], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 88, 94, 105, 131, 135, 159, 191, 210, 212, 213, 216, 222, 223, 224, 226, 227, 228, 229, 231, 239, 240, 241, 242, 295, 296, 300, 301, 305, 308], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 67, 70, 72, 73, 74, 135, 145, 160, 163, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 284, 293, 297, 299, 301, 302, 305, 307, 308, 311], "while": [1, 3, 7, 8, 32, 67, 70, 72, 73, 74, 118, 130, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 222, 223, 226, 295, 299, 301, 302, 305, 306, 307, 308, 310], "wait": [1, 20, 21, 22, 302, 306], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 67, 70, 72, 73, 74, 84, 94, 101, 111, 116, 118, 121, 122, 126, 130, 177, 202, 203, 204, 210, 211, 213, 214, 216, 222, 226, 229, 239, 246, 247, 295, 297, 299, 300, 301, 302, 304, 305, 306, 308, 311], "impact": [1, 99, 102, 300, 302, 305], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 67, 68, 70, 72, 73, 74, 94, 98, 114, 126, 129, 130, 132, 134, 135, 200, 291, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "manag": [1, 8, 235, 236, 239, 240, 241, 242, 271], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 67, 70, 72, 73, 74, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 121, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 144, 145, 154, 155, 159, 162, 163, 175, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 258, 269, 270, 271, 273, 274, 275, 279, 284, 296, 297, 299, 301, 302, 304, 305, 306, 308, 310, 311], "control": [1, 3, 5, 8, 16, 77, 78, 101, 144, 148, 149, 150, 151, 159, 162, 163, 177, 184, 196, 200, 201, 202, 210, 212, 223, 226, 230, 239, 244, 252, 295, 297, 299, 300, 301, 305, 306, 308], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 67, 70, 72, 73, 74, 94, 95, 106, 109, 110, 111, 114, 115, 124, 126, 127, 129, 130, 132, 137, 158, 159, 164, 165, 182, 187, 188, 189, 191, 197, 200, 201, 203, 210, 211, 212, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 234, 237, 239, 240, 241, 242, 266, 270, 284, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 299, 300, 305, 310], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 67, 70, 72, 73, 74, 94, 97, 99, 102, 106, 125, 130, 159, 271, 275, 296, 299, 300, 301, 302, 305, 306, 308, 311], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 196, 299, 311], "usual": [1, 3, 4, 6, 7, 8, 52, 67, 70, 72, 73, 74, 168, 226, 239, 240, 241, 242, 243, 257, 284, 294, 295, 297, 299, 300, 301, 302, 305, 308, 311], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 67, 68, 70, 72, 73, 74, 94, 99, 101, 102, 106, 110, 111, 129, 130, 135, 146, 159, 161, 164, 165, 166, 191, 196, 204, 299, 300, 301, 304, 305, 307, 308, 311], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 67, 69, 70, 72, 73, 74, 94, 99, 102, 118, 293, 297, 300, 301, 302, 305, 307], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 72, 73, 74, 77, 88, 92, 94, 95, 101, 105, 109, 110, 111, 114, 115, 118, 120, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 180, 181, 182, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 287, 291, 297, 299, 300, 301, 302, 307, 308, 310, 311], "behaviour": [1, 3, 21, 70, 95, 99, 102, 111, 115, 125, 144, 158, 159, 182, 271, 295, 300, 302, 306, 308], "besid": 1, "those": [1, 5, 7, 26, 28, 73, 74, 99, 102, 111, 126, 159, 197, 201, 202, 203, 277, 289, 290, 295, 299, 300, 305, 306, 311], "choos": [1, 159, 226, 295, 296, 299, 300, 301, 305, 308], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 67, 70, 71, 72, 73, 74, 88, 109, 114, 132, 146, 159, 161, 193, 198, 199, 209, 210, 211, 212, 213, 216, 222, 223, 224, 226, 227, 228, 229, 231, 275, 284, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 308, 310, 311], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 278, 299, 301, 310], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 94, 106, 190, 194, 196, 257, 258, 268, 271, 275, 278, 279, 299, 300, 301, 302, 305, 308, 310, 311], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 70, 72, 73, 74, 88, 94, 97, 98, 101, 105, 108, 109, 111, 113, 114, 121, 124, 126, 129, 130, 132, 134, 135, 137, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 163, 166, 167, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 200, 201, 203, 204, 207, 212, 223, 226, 238, 239, 240, 241, 242, 257, 271, 297, 300, 301, 302, 305, 306, 308, 311], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 94, 118, 278, 299, 300, 301, 302, 305, 308, 310], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 67, 68, 70, 72, 73, 74, 114, 121, 124, 125, 126, 127, 134, 135, 155, 159, 166, 170, 174, 175, 183, 190, 192, 193, 194, 199, 203, 245, 248, 249, 250, 251, 253, 254, 255, 256, 271, 272, 289, 290, 295, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 278, 299, 300], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 67, 70, 71, 72, 73, 74, 101, 110, 111, 126, 137, 159, 194, 197, 200, 201, 211, 227, 271, 279, 295, 299, 300, 301, 302, 306, 307, 308, 310, 311], "rand_step": [1, 3, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 108, 126, 135, 306, 310, 311], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 299], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 299, 300, 301], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 67, 70, 72, 73, 74, 115, 129, 145, 159, 163, 196, 226, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 293, 296, 299, 300, 301, 302, 306, 308, 310, 311], "pad": [1, 23, 37, 43, 52, 94, 146, 148, 149, 159, 160, 164, 165, 272], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 94, 95, 111, 115, 121, 128, 159, 161, 164, 165, 168, 192, 197, 200, 201, 224, 295, 299, 300, 302, 305, 306, 308], "mask": [1, 4, 23, 27, 30, 31, 33, 92, 115, 155, 164, 165, 175, 191, 192, 193, 194, 198, 199, 272, 300, 302, 311], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 67, 70, 72, 73, 74, 94, 98, 114, 126, 128, 129, 130, 132, 134, 162, 200, 209, 217, 275, 294, 300, 301, 304, 305, 306, 308, 311], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 70, 115, 164, 165, 190, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 297, 302], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 67, 70, 72, 73, 74, 106, 115, 135, 155, 164, 165, 175, 192, 193, 198, 199, 201, 234, 239, 272, 299, 301, 302, 305], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 115, 130, 146, 161, 164, 165, 190, 196, 223, 239, 240, 241, 242, 272, 297, 311], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 271, 293, 299, 300], "strategi": [1, 16, 165, 172, 194, 295, 297, 299, 300, 305, 308], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 67, 70, 72, 73, 74, 114, 134, 295, 296, 299, 301, 305, 306, 308, 311], "tool": [1, 2, 3, 5, 302, 306, 308, 311], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 83, 84, 297, 299, 301, 302, 306], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 293], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 293], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 95, 98, 99, 100, 101, 102, 109, 111, 114, 116, 118, 120, 125, 126, 128, 129, 130, 132, 134, 135, 141, 144, 145, 146, 147, 152, 153, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 208, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 245, 266, 273, 274, 284, 287, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "multiprocess": [1, 18, 19, 20, 68, 69, 135, 300, 301, 306, 311], "synchron": [1, 13, 19, 21, 72, 289, 290, 300, 301], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 99, 102, 125, 130, 135, 138, 142, 143, 153, 158, 159, 172, 180, 181, 182, 197, 201, 224, 271, 299, 300, 302, 305, 310, 311], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 190, 196, 269, 273, 299, 300, 305], "dedic": [1, 3, 18, 19, 20, 21, 187, 188, 189, 295, 299, 304, 305], "folder": [1, 300], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 67, 70, 72, 73, 74, 115, 202, 203, 266, 275, 295, 299, 300, 301, 304, 310, 311], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 67, 68, 70, 71, 72, 73, 74, 94, 97, 98, 99, 100, 102, 104, 109, 110, 111, 114, 121, 126, 127, 129, 130, 132, 134, 135, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 200, 201, 203, 204, 207, 219, 224, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 270, 275, 278, 289, 290, 291, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311], "variou": [1, 3, 13, 14, 16, 17, 159, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 237, 289, 290, 299, 300, 301, 305, 311], "machin": [1, 7, 18, 19, 20, 32, 53, 305], "One": [1, 2, 4, 8, 31, 33, 45, 94, 118, 132, 172, 190, 200, 204, 230, 234, 262, 299, 300, 308, 311], "wonder": 1, "why": [1, 3, 306, 311], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 72, 74, 288, 293, 299, 300, 301, 304, 310, 311], "instead": [1, 4, 7, 8, 11, 27, 32, 67, 70, 72, 73, 74, 105, 126, 130, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 210, 211, 212, 214, 216, 217, 222, 223, 226, 227, 228, 229, 237, 239, 243, 291, 295, 306, 308, 311], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 67, 70, 72, 73, 74, 98, 99, 100, 102, 114, 122, 125, 126, 128, 129, 130, 132, 134, 158, 161, 177, 181, 182, 200, 203, 209, 210, 211, 213, 214, 216, 222, 224, 226, 227, 228, 229, 231, 277, 289, 290, 291, 295, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311], "lower": [1, 2, 17, 21, 25, 97, 135, 176, 177, 204, 301, 306], "io": [1, 72], "footprint": [1, 2, 308], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 63, 67, 70, 72, 73, 74, 94, 97, 105, 114, 116, 130, 134, 135, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 167, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 198, 199, 200, 204, 207, 209, 216, 227, 228, 229, 231, 238, 243, 258, 275, 291, 295, 296, 299, 300, 301, 302, 305, 306, 308, 310, 311], "commun": [1, 2, 3, 294, 301, 311], "yet": [1, 224, 307], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 67, 69, 70, 71, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 111, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 141, 155, 175, 177, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 284, 295, 299, 300, 301, 302, 304, 305, 310], "plai": [1, 3, 94, 300, 301, 308, 311], "role": [1, 3, 300, 311], "opposit": 1, "direct": [1, 32, 67, 70, 72, 73, 74, 224, 300], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 144, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 192, 193, 194, 196, 198, 199, 204, 207, 299, 300, 301, 302, 306, 307, 308, 310, 311], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 72, 239, 240, 241, 242, 302, 305], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 68, 73, 74, 135, 159, 166, 187, 188, 189, 210, 212, 213, 216, 222, 223, 226, 227, 228, 229, 231, 291, 295, 301, 302, 304, 305, 310, 311], "among": [1, 3, 305], "achiev": [1, 3, 4, 32, 67, 70, 72, 73, 74, 125, 272, 297, 299, 300, 301, 302, 305, 306, 311], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 52, 53, 73, 114, 129, 134, 215, 224, 296, 297, 299, 300, 301, 302, 308, 311], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 271, 296, 299, 301, 305, 308, 311], "gpu": [1, 7, 8, 32, 55, 56, 65, 67, 70, 72, 73, 74, 299, 301, 302, 305, 311], "nativ": [1, 7, 9, 67, 70, 72, 73, 74, 94, 302, 308], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 158, 181, 182, 209, 294, 299, 300, 301, 302, 305, 307, 311], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 111, 135, 145, 153, 156, 159, 160, 163, 180, 190, 197, 201, 224, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 295, 296, 299, 300, 301, 305, 306, 308, 310, 311], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 67, 70, 72, 73, 74, 97, 98, 114, 126, 129, 130, 132, 134, 159, 164, 165, 186, 190, 191, 192, 194, 196, 197, 198, 200, 201, 204, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 237, 239, 240, 241, 242, 243, 288, 299, 300, 301, 305, 308, 311], "build": [1, 3, 7, 23, 26, 32, 67, 70, 72, 73, 74, 135, 145, 159, 163, 195, 197, 201, 275, 282, 283, 285, 286, 295, 297, 301, 302, 305, 306, 307, 310, 311], "central": [2, 299, 300, 305, 308], "part": [2, 4, 8, 32, 40, 67, 70, 72, 73, 74, 111, 118, 121, 159, 205, 266, 291, 299, 301, 302, 306, 311], "algorithm": [2, 3, 8, 9, 13, 14, 71, 106, 210, 226, 227, 228, 229, 266, 280, 293, 296, 297, 299, 300, 301, 302, 305, 307, 308, 310], "implement": [2, 3, 9, 11, 16, 32, 63, 67, 70, 72, 73, 74, 98, 100, 109, 116, 129, 135, 158, 180, 181, 182, 210, 211, 215, 222, 224, 225, 226, 229, 284, 295, 297, 299, 300, 301, 302, 306, 310], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 52, 62, 67, 68, 70, 72, 73, 74, 94, 109, 114, 116, 126, 132, 135, 145, 159, 160, 166, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "give": [2, 7, 41, 67, 70, 71, 72, 73, 74, 94, 294, 296, 299, 300, 305, 306, 307, 310], "abil": [2, 224, 306, 308], "veri": [2, 3, 300, 306, 308, 310, 311], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 94, 115, 118, 138, 139, 142, 143, 145, 153, 158, 163, 164, 165, 172, 173, 176, 181, 182, 186, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 212, 213, 214, 223, 225, 226, 231, 266, 272, 275, 278, 295, 299, 300, 301, 302, 305, 307, 310, 311], "latenc": 2, "especi": [2, 3, 7, 8, 95], "larger": [2, 4, 222], "volum": 2, "lazymemmapstorag": [2, 94, 293, 299, 300, 302, 307, 308], "advis": [2, 311], "due": [2, 3, 5, 307, 308, 311], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 307, 308], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 67, 70, 72, 73, 74, 176, 177, 224, 243, 299, 300, 302, 307, 308, 310, 311], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 99, 100, 102, 121, 123, 125, 131, 145, 200, 201, 224, 230, 295, 299, 301, 302], "file": [2, 6, 7, 8, 257, 297, 300, 308, 309], "locat": [2, 7, 45, 70, 111, 120, 158, 169, 181, 182, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 299, 300, 301, 305, 308], "improv": [2, 4, 106, 210, 296, 305, 308], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 293, 308], "were": [2, 7, 73, 74, 301, 308], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 92, 135, 194, 197, 201, 223, 224, 226, 299, 300, 302], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 72, 94, 114, 132, 147, 148, 149, 150, 151, 152, 155, 156, 157, 163, 164, 165, 168, 170, 171, 173, 174, 176, 177, 183, 193, 196, 210, 211, 215, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 239, 244, 252, 284, 307, 310], "github": [2, 5, 6, 7, 10, 18, 19, 20, 132, 307, 310], "com": [2, 5, 6, 7, 10, 18, 19, 20, 307, 310], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 67, 70, 71, 72, 73, 74, 98, 100, 109, 114, 116, 126, 129, 130, 132, 134, 135, 139, 143, 146, 161, 166, 168, 174, 183, 190, 192, 197, 200, 201, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 233, 237, 245, 284, 289, 295, 299, 300, 301, 305, 306, 308, 311], "1x": 2, "lazytensorstorag": [2, 41, 42, 118, 293, 301, 305, 308], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 88, 92, 94, 98, 101, 109, 111, 114, 116, 118, 126, 128, 129, 130, 132, 134, 141, 145, 146, 148, 149, 152, 155, 157, 159, 160, 161, 163, 166, 169, 172, 174, 184, 186, 187, 188, 189, 192, 193, 197, 199, 200, 203, 204, 205, 210, 211, 213, 214, 216, 217, 218, 219, 222, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 245, 248, 249, 250, 251, 253, 254, 255, 256, 258, 274, 295, 297, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 110, 158, 181, 182, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 300, 301, 306, 308, 311], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 88, 94, 115, 146, 186, 190, 192, 200, 201, 205, 266, 299, 301, 308, 311], "pai": [2, 8, 299, 302], "attent": [2, 8, 299, 302], "alwai": [2, 3, 20, 26, 28, 32, 54, 67, 70, 72, 73, 74, 109, 110, 217, 224, 295, 296, 300, 301, 302, 305, 306, 308], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 126, 158, 174, 181, 182, 299, 302, 305, 306, 308, 310], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 94, 95, 105, 111, 115, 123, 128, 131, 135, 146, 147, 152, 159, 161, 164, 165, 167, 168, 173, 174, 178, 179, 180, 181, 184, 192, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 291, 295, 299, 300, 301, 302, 305, 306, 308], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 97, 100, 101, 122, 128, 132, 135, 159, 168, 169, 191, 193, 194, 199, 201, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 239, 272, 284, 289, 290, 295, 297, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311], "word": [2, 40, 52, 224, 299, 306, 311], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 67, 68, 70, 72, 73, 74, 94, 114, 121, 129, 130, 132, 135, 141, 144, 146, 148, 149, 150, 151, 152, 157, 159, 161, 162, 166, 191, 201, 214, 217, 227, 237, 258, 272, 279, 280, 281, 287, 289, 290, 295, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311], "1m": [2, 278, 299, 301, 302], "multidimension": [2, 41, 58, 308], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 152, 159, 167, 184, 191, 202, 203, 210, 212, 217, 223, 226, 238, 275, 295, 297, 299, 300, 301, 302, 306, 308, 311], "desir": [2, 3, 32, 67, 70, 72, 73, 74, 98, 111, 114, 115, 126, 129, 130, 132, 134, 142, 143, 146, 161, 166, 186, 192, 193, 197, 198, 199, 200, 201, 295, 299, 305, 306], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 67, 70, 72, 73, 74, 80, 82, 87, 111, 114, 115, 118, 132, 137, 166, 167, 192, 201, 224, 226, 239, 240, 241, 242, 272, 281, 291, 295, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "do": [2, 3, 4, 7, 70, 110, 115, 135, 144, 166, 167, 188, 239, 297, 299, 300, 301, 302, 304, 305, 306, 308, 310, 311], "custom": [2, 3, 5, 32, 67, 70, 72, 73, 74, 132, 166, 204, 217, 226, 232, 291, 295, 299, 300, 301, 302, 305], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 67, 70, 72, 73, 74, 77, 101, 103, 116, 121, 122, 130, 132, 159, 192, 198, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 243, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 284, 297, 299, 300, 301, 302, 305, 306, 311], "randomcroptensordict": [2, 299], "here": [2, 3, 4, 7, 8, 9, 10, 67, 70, 72, 73, 74, 94, 295, 296, 299, 300, 301, 302, 305, 306, 308, 310, 311], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 67, 70, 72, 73, 74, 210, 212, 221, 223, 226, 275, 294, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 169, 184, 190, 191, 196, 201, 206, 239, 263, 264, 265, 291, 293, 301, 302, 305, 307, 311], "around": [2, 5, 7, 15, 17, 41, 42, 71, 201, 239, 299, 300, 305, 311], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 94, 137, 211, 222, 297, 307, 308, 310], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 67, 70, 72, 73, 74, 103, 121, 122, 144, 147, 148, 149, 150, 151, 157, 168, 173, 196, 200, 201, 202, 203, 210, 211, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 291, 297, 299, 304, 305, 308, 310], "replaybuff": [2, 41, 42, 66, 94, 115, 118, 214, 217, 237, 285, 287, 293, 301, 305, 307, 308, 310], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 115, 214, 217, 237, 293, 299, 301, 305, 308], "By": [2, 3, 33, 67, 70, 72, 73, 74, 184, 201, 224, 271, 291, 299, 307, 308, 311], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 67, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 111, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 135, 141, 155, 169, 186, 187, 188, 189, 192, 197, 198, 200, 201, 203, 204, 205, 206, 237, 271, 293, 295, 296, 299, 300, 301, 302, 307], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 94, 95, 98, 99, 101, 102, 105, 108, 111, 114, 115, 116, 118, 120, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 213, 214, 216, 219, 220, 222, 224, 226, 227, 228, 229, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 284, 295, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 67, 70, 72, 73, 74, 116, 126, 144, 161, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 232, 234, 237, 295, 297, 299, 301, 302, 305, 306, 308, 311], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 275, 294, 301, 302, 305, 311], "respons": [2, 3, 8, 275, 311], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 109, 187, 188, 189, 200, 222, 284, 293, 299, 306, 310], "repositori": [2, 7, 53], "latest": [2, 10, 72, 272, 301, 305, 306, 310], "wheel": [2, 301], "publish": 2, "pypi": [2, 310], "openml": [2, 53, 88], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 161, 184, 200, 202, 203, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 295, 297, 299, 300, 301, 302, 305, 306, 308, 311], "parent": [2, 3, 21, 26, 28, 44, 67, 95, 98, 100, 105, 106, 111, 114, 126, 129, 131, 132, 187, 224, 226, 243, 299, 306, 310, 311], "subclass": [2, 3, 67, 70, 72, 73, 74, 129, 137, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 200, 201, 202, 204, 207, 224, 226, 300, 302, 306, 308], "basic": [2, 71, 295, 301, 311], "properti": [2, 3, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 129, 130, 153, 158, 167, 172, 180, 181, 182, 224, 306, 308], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 103, 105, 107, 108, 109, 111, 112, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 144, 147, 148, 149, 150, 151, 152, 155, 159, 160, 170, 171, 173, 175, 176, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 205, 206, 210, 211, 212, 213, 214, 216, 219, 222, 223, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 258, 284, 287, 295, 297, 300, 301, 302, 304, 305, 306, 308, 310, 311], "action": [2, 3, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 67, 70, 71, 72, 73, 74, 76, 87, 89, 90, 92, 97, 99, 101, 102, 106, 109, 110, 116, 118, 122, 130, 141, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 159, 161, 162, 163, 164, 165, 173, 174, 175, 177, 180, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 204, 205, 210, 211, 213, 214, 216, 222, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 284, 287, 291, 295, 296, 297, 299, 300, 301, 304, 305, 307, 308, 310, 311], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 67, 70, 72, 73, 74, 88, 90, 95, 99, 102, 109, 111, 116, 118, 126, 128, 135, 136, 137, 141, 144, 145, 147, 152, 153, 154, 159, 161, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 180, 183, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 203, 204, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 234, 237, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 266, 272, 275, 287, 295, 299, 300, 301, 302, 304, 305, 307, 308, 310, 311], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 98, 99, 100, 101, 102, 109, 111, 114, 116, 118, 126, 128, 129, 130, 132, 134, 137, 141, 144, 145, 155, 159, 163, 167, 168, 174, 175, 183, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 203, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 245, 284, 295, 301, 302, 304, 305, 306, 307, 308, 310, 311], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 67, 68, 70, 71, 72, 73, 74, 82, 83, 84, 92, 94, 97, 108, 109, 111, 114, 116, 118, 126, 129, 134, 135, 141, 144, 145, 155, 159, 161, 163, 166, 169, 174, 175, 183, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 210, 211, 212, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 268, 271, 284, 287, 295, 296, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 67, 68, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 146, 153, 159, 161, 166, 180, 186, 191, 192, 197, 198, 200, 201, 204, 205, 211, 216, 223, 225, 227, 229, 272, 277, 295, 299, 301, 304, 305, 306, 308, 310, 311], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 67, 70, 71, 72, 73, 74, 88, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 144, 146, 148, 149, 150, 151, 154, 155, 159, 160, 161, 166, 167, 168, 175, 176, 177, 178, 179, 184, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 269, 273, 278, 287, 295, 296, 297, 299, 300, 301, 302, 305, 306, 310, 311], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74, 88, 94, 97, 98, 99, 100, 102, 109, 111, 114, 116, 127, 129, 132, 134, 137, 146, 147, 148, 149, 152, 154, 155, 156, 159, 160, 161, 166, 169, 175, 184, 186, 187, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 258, 266, 295, 296, 299, 300, 301, 302, 304, 305, 306, 307, 310, 311], "send": [2, 3, 8, 310], "receiv": [2, 3, 32, 40, 67, 70, 72, 73, 74, 125, 129, 161, 245, 296, 299, 301, 304, 306], "spawn": [2, 3, 4, 18, 22, 72, 305], "check_env_spec": [2, 3, 293, 301, 305, 306], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 70, 72, 73, 74, 94, 98, 100, 105, 109, 111, 114, 116, 117, 118, 126, 129, 130, 132, 134, 145, 160, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 243, 257, 288, 296, 297, 298, 300, 301, 302, 306, 308, 311], "saniti": [2, 3, 7, 137, 301], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 67, 70, 71, 72, 73, 74, 98, 101, 111, 114, 126, 129, 130, 132, 134, 144, 145, 155, 156, 163, 175, 179, 186, 192, 193, 194, 196, 199, 200, 201, 202, 203, 205, 209, 213, 214, 238, 239, 240, 241, 242, 243, 245, 267, 271, 287, 295, 297, 299, 300, 301, 305, 306, 311], "techniqu": [2, 8, 300, 308], "commonli": [2, 311], "emploi": [2, 168], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 308], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 94, 99, 102, 135, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 214, 217, 237, 295, 306, 310], "offer": [2, 3, 7, 295, 300, 306, 311], "facilit": [2, 3, 7, 113, 114, 132, 134, 187, 188, 189, 295, 299, 302, 306], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 125, 197, 201, 299, 301, 305, 306, 311], "extern": [2, 3, 99, 102, 311], "consist": [2, 3, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 109, 146, 161, 299, 300, 301, 306, 307, 311], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200, 299, 300, 311], "manner": [2, 70, 114, 132, 295, 299, 300, 301, 304, 306, 308], "handl": [3, 21, 32, 67, 70, 72, 73, 74, 135, 159, 161, 275, 289, 290, 299, 300, 301, 305, 308], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 67, 70, 72, 73, 74, 94, 101, 111, 116, 125, 130, 131, 155, 159, 161, 163, 166, 175, 222, 226, 234, 239, 240, 241, 246, 247, 271, 275, 277, 289, 290, 295, 296, 297, 299, 300, 301, 304, 305, 306, 307, 308, 311], "dm": [3, 299, 311], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 71, 72, 118, 126, 132, 133, 187, 195, 210, 211, 213, 214, 216, 218, 222, 226, 227, 228, 229, 231, 275, 284, 295, 296, 297, 299, 300, 302, 305, 306, 308, 311], "goal": [3, 4, 125, 299, 300, 301, 302, 305, 306], "abl": [3, 299, 301, 302, 304, 305, 306, 308, 310], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 137, 260, 261, 262, 263, 264, 265, 294, 300, 301, 305, 308], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 299, 301, 305, 306, 311], "simul": [3, 5, 7, 8, 91, 145, 163, 295, 299, 301, 305], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 114, 132, 137, 148, 159, 179, 201, 202, 203, 266, 278, 295, 297, 299, 300, 301, 302, 305, 306, 308, 310, 311], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 67, 70, 72, 73, 74, 126, 137, 164, 165, 167, 168, 186, 191, 192, 193, 196, 197, 198, 199, 200, 201, 235, 236, 297, 299, 300, 301, 302, 305, 306, 308, 310, 311], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 67, 70, 72, 73, 74, 186, 192, 193, 197, 198, 199, 200, 201, 224, 239, 240, 241, 242, 243, 296, 299, 300, 306, 311], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 97, 108, 109, 111, 116, 118, 126, 129, 135, 159, 284, 287, 299, 300, 301, 302, 304, 305, 307, 308, 310, 311], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 67, 70, 71, 72, 73, 74, 98, 101, 109, 114, 126, 129, 130, 132, 134, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 159, 161, 163, 165, 166, 169, 174, 175, 183, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 205, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 284, 287, 295, 296, 299, 300, 301, 302, 304, 305, 306, 307, 310], "typic": [3, 4, 8, 32, 67, 70, 72, 73, 74, 125, 211, 224, 226, 229, 295, 296, 297, 301, 305, 306], "organis": [3, 300, 306], "arbitrari": [3, 33, 73, 74, 295, 299, 300, 306], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 67, 70, 72, 73, 74, 239, 240, 241, 242, 243, 297, 300, 301, 305, 306, 308, 310], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 99, 102, 196, 239, 240, 241, 242, 243, 296, 299, 301, 302, 305, 306, 307, 308], "attribut": [3, 4, 32, 45, 67, 70, 72, 73, 74, 114, 124, 132, 159, 201, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 299, 302, 306], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 94, 99, 102, 116, 118, 126, 129, 144, 145, 152, 155, 159, 163, 174, 175, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 266, 272, 284, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 67, 70, 72, 73, 74, 94, 115, 159, 183, 187, 188, 189, 206, 295, 300, 301, 302, 305], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 67, 70, 71, 72, 73, 74, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 137, 159, 166, 193, 196, 200, 203, 210, 211, 212, 213, 214, 216, 222, 223, 224, 226, 227, 228, 229, 231, 237, 279, 294, 295, 296, 297, 299, 301, 302, 305, 306, 308, 311], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74], "actual": [3, 4, 7, 17, 67, 70, 72, 73, 74, 125, 278, 296, 299, 301, 305, 306], "just": [3, 4, 67, 70, 72, 73, 74, 97, 166, 266, 295, 297, 299, 300, 301, 302, 305, 306, 308, 310, 311], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 67, 70, 72, 73, 74, 95, 100, 111, 144, 145, 163, 197, 201, 204, 210, 211, 212, 214, 223, 226, 227, 229, 231, 237, 239, 240, 241, 242, 284, 291, 297, 300, 301, 306, 311], "care": [3, 8, 67, 70, 72, 73, 74, 129, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 299, 301, 305, 306, 308], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 67, 70, 72, 73, 74, 98, 114, 126, 128, 129, 130, 132, 134, 136, 146, 158, 161, 166, 167, 174, 182, 183, 187, 189, 200, 201, 272, 299, 300, 301, 302, 305, 306, 308, 311], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 146, 158, 161, 166, 182, 200, 272, 299, 300, 301, 302, 306], "parametr": [3, 168, 201, 211, 222, 229, 299, 301], "hardwar": 3, "observation_spec": [3, 67, 70, 71, 72, 73, 74, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 111, 114, 117, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 145, 159, 163, 279, 287, 299, 301, 304, 305, 306, 311], "compositespec": [3, 28, 49, 67, 69, 70, 71, 72, 73, 74, 92, 99, 100, 101, 102, 109, 116, 124, 125, 126, 129, 141, 145, 163, 186, 190, 197, 203, 204, 293, 299, 301, 305, 306, 311], "pair": [3, 32, 34, 36, 39, 52, 67, 70, 72, 73, 74, 126, 187, 197, 201, 224, 239, 240, 241, 242, 243, 295, 296, 299, 300, 301, 304, 306, 311], "state_spec": [3, 67, 70, 71, 72, 73, 74, 92, 301, 306, 311], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 88, 114, 127, 130, 132, 134, 299, 306], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 67, 70, 71, 72, 73, 74, 76, 87, 92, 94, 99, 102, 109, 118, 155, 175, 177, 186, 192, 197, 198, 211, 214, 227, 229, 231, 287, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "reward_spec": [3, 67, 70, 71, 72, 73, 74, 92, 93, 97, 98, 99, 100, 102, 119, 120, 121, 129, 131, 145, 163, 301, 305, 306, 311], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 93, 97, 98, 99, 100, 102, 109, 116, 118, 119, 120, 121, 122, 125, 129, 131, 133, 134, 135, 141, 144, 145, 163, 191, 206, 210, 211, 213, 214, 216, 219, 222, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 268, 269, 271, 273, 291, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "done_spec": [3, 67, 70, 72, 73, 74, 99, 100, 102, 129, 301, 305, 306, 311], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 196, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 295, 305, 306, 307], "input_spec": [3, 67, 70, 71, 72, 73, 74, 98, 99, 100, 101, 111, 116, 121, 122, 124, 129, 130, 131, 145, 163, 305, 306], "full_action_spec": [3, 67, 70, 72, 73, 74, 305], "full_state_spec": [3, 67, 70, 72, 73, 74], "lock": [3, 26, 28, 67, 70, 72, 73, 74, 126, 135, 306], "modifi": [3, 7, 8, 26, 28, 32, 45, 67, 70, 72, 73, 74, 98, 105, 109, 114, 126, 129, 130, 132, 134, 191, 196, 200, 278, 284, 299, 300, 301, 305, 306], "directli": [3, 4, 8, 67, 70, 71, 72, 73, 74, 118, 224, 291, 295, 301, 305, 306, 308], "output_spec": [3, 67, 70, 72, 73, 74, 98, 100, 109, 116, 129, 130, 305, 306], "full_observation_spec": [3, 67, 70, 72, 73, 74], "full_reward_spec": [3, 67, 70, 72, 73, 74, 305], "full_done_spec": [3, 67, 70, 72, 73, 74, 305], "importantli": [3, 197, 201], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 67, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 86, 92, 94, 118, 135, 145, 146, 147, 148, 149, 152, 155, 156, 157, 160, 161, 163, 166, 169, 170, 171, 172, 173, 174, 175, 183, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 205, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 257, 295, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311], "action_s": 3, "help": [3, 4, 32, 67, 70, 72, 73, 74, 294, 296, 299, 300, 301, 302, 305], "prealloc": [3, 306], "With": [3, 125, 297, 299, 300, 305, 308, 311], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 83, 95, 96, 97, 99, 100, 101, 102, 103, 105, 109, 110, 111, 114, 115, 121, 122, 126, 129, 130, 132, 134, 135, 144, 146, 159, 160, 161, 164, 165, 166, 184, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 253, 254, 255, 256, 270, 272, 275, 277, 279, 284, 287, 291, 294, 299, 300, 301, 302, 304, 305, 306, 308, 310, 311], "instanti": [3, 21, 34, 36, 39, 73, 74, 129, 166, 299, 300, 305, 306, 308, 311], "0s": [3, 126, 302], "stateless": [3, 129, 299, 306, 311], "set_se": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 76, 87, 111, 116, 130, 306, 310, 311], "seed": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 77, 89, 90, 92, 99, 102, 130, 137, 275], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 67, 68, 70, 71, 72, 73, 74, 76, 87, 89, 90, 94, 99, 102, 108, 109, 116, 118, 125, 126, 135, 141, 144, 145, 159, 163, 177, 206, 210, 211, 213, 214, 216, 217, 222, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 269, 271, 273, 299, 300, 302, 304, 306, 307, 308, 310, 311], "determinist": [3, 32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 147, 156, 170, 177, 186, 200, 201, 204, 211, 295, 299, 300, 302, 306, 311], "preced": [3, 160, 302], "without": [3, 7, 9, 32, 40, 67, 70, 72, 73, 74, 92, 99, 102, 128, 188, 189, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 238, 239, 240, 241, 242, 243, 287, 294, 295, 299, 300, 301, 305, 306, 308, 311], "risk": [3, 115], "overlap": [3, 41], "consecut": [3, 62, 159, 196, 302, 305, 311], "still": [3, 9, 124, 190, 223, 224, 299, 300, 302, 304, 306, 308, 311], "reproduc": [3, 94, 137, 299, 301, 305], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 67, 70, 72, 73, 74, 101, 119, 124, 125, 127, 180, 181, 182, 204, 211, 216, 222, 224, 225, 229, 272, 299, 300, 301, 302, 305, 308], "max_step": [3, 13, 67, 70, 71, 72, 73, 74, 89, 90, 124, 305, 310, 311], "n": [3, 6, 7, 24, 27, 32, 33, 40, 67, 70, 72, 73, 74, 94, 101, 105, 131, 163, 196, 201, 210, 216, 224, 238, 272, 295, 297, 300, 301, 302, 305, 308, 311], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 71, 109, 155, 159, 163, 174, 175, 183, 184, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 206, 211, 213, 216, 218, 219, 220, 222, 224, 227, 229, 231, 237, 238, 239, 240, 241, 242, 271, 287, 295, 299, 301, 302, 304, 305, 306, 307], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 92, 105, 114, 115, 118, 130, 132, 135, 137, 146, 152, 161, 168, 191, 200, 201, 202, 203, 210, 211, 213, 214, 216, 222, 224, 226, 227, 228, 229, 231, 239, 263, 275, 294, 299, 300, 301, 305, 306, 308, 310, 311], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 67, 70, 72, 73, 74, 85, 88, 94, 132, 135, 159, 198, 210, 211, 213, 214, 216, 222, 224, 226, 227, 228, 229, 231, 234, 299, 302, 308, 310], "mark": [3, 16, 67, 70, 72, 73, 74, 159], "trail": [3, 135], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 67, 68, 70, 72, 73, 74, 84, 88, 95, 115, 126, 127, 135, 144, 156, 159, 160, 196, 212, 216, 219, 223, 224, 226, 227, 231, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 275, 295, 296, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "treat": 3, "figur": [3, 299, 301, 302, 305, 306, 311], "summar": [3, 306], "brief": [3, 301], "popul": [3, 38, 108, 126, 299, 301, 302, 306, 308], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 67, 70, 72, 73, 74, 94, 96, 97, 99, 102, 105, 108, 111, 114, 116, 118, 124, 126, 134, 135, 144, 164, 165, 191, 192, 198, 199, 211, 229, 239, 240, 241, 242, 295, 299, 301, 302, 305, 306, 307, 308], "deliveri": 3, "step_mdp": [3, 159, 293, 302, 306, 310, 311], "nasium": 3, "recent": [3, 7, 11, 311], "shift": [3, 32, 207, 239, 240, 241, 242, 301], "termin": [3, 7, 32, 40, 52, 202, 299, 300, 301, 306, 310], "trust": [3, 159], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 67, 70, 72, 73, 74, 110, 124, 182, 245, 299, 301, 311], "refer": [3, 7, 8, 9, 21, 32, 40, 67, 70, 72, 73, 74, 130, 135, 145, 155, 156, 163, 164, 165, 170, 171, 176, 177, 193, 210, 217, 218, 219, 220, 226, 239, 244, 252, 299, 301, 305], "stepcount": [3, 13, 67, 70, 72, 73, 74, 129, 299, 300, 301, 302, 305, 310], "chosen": [3, 125, 126, 174, 175, 183, 199, 284, 295], "someth": [3, 32, 67, 70, 72, 73, 74, 294, 300, 301, 306, 311], "els": [3, 170, 295, 297, 299, 300, 301, 302, 305, 306, 307], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 67, 70, 72, 73, 74, 97, 111, 118, 193, 267, 287, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "truncated_kei": [3, 124], "look": [3, 5, 7, 8, 32, 67, 70, 72, 73, 74, 114, 115, 132, 197, 201, 202, 203, 296, 301, 302, 305, 306, 307, 308, 310, 311], "assess": [3, 299], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 293], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 105], "reli": [3, 210, 296, 299, 301, 306, 311], "traj_id": [3, 13, 14, 16, 23, 118, 302, 308, 310], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 67, 70, 72, 73, 74, 126, 130, 144, 202, 203, 294, 299, 302], "context": [3, 5, 8, 32, 67, 68, 70, 72, 73, 74, 88, 126, 131, 166, 167, 191, 235, 236, 239, 240, 241, 242, 244, 252, 271, 295, 296, 299, 300, 301, 305, 306, 307, 308], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 73, 74, 99, 102, 115, 161, 174, 201, 202, 203, 207, 239, 240, 241, 242, 295, 299, 300, 301, 304, 305, 306, 307, 308, 311], "inittrack": [3, 159, 299, 302], "our": [3, 7, 8, 18, 94, 295, 299, 300, 301, 302, 304, 305, 307, 308, 310], "tutori": [3, 299, 300, 302, 303, 304, 306, 307, 308, 309, 311], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 67, 68, 70, 72, 73, 74, 146, 161, 166, 296, 297, 299, 300, 301, 302, 305, 306, 308], "design": [3, 13, 14, 32, 33, 67, 70, 72, 73, 74, 94, 115, 130, 191, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 299, 300, 301, 302, 304, 305, 306, 308, 311], "scratch": [3, 8, 300, 306], "better": [3, 8, 9, 159, 296, 301, 306], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 67, 70, 72, 73, 74, 94, 105, 109, 126, 131, 135, 146, 156, 157, 159, 161, 167, 168, 201, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 291, 295, 299, 300, 301, 302, 306, 308, 311], "intens": [3, 8], "gym3": 3, "envpool": [3, 72], "interfac": [3, 88, 161, 167, 295, 299, 301, 306, 308], "simultan": [3, 20, 73, 74, 306], "often": [3, 8, 221, 275, 299, 300, 306, 308, 311], "competit": [3, 305], "advantag": [3, 8, 157, 210, 212, 223, 226, 228, 239, 240, 241, 242, 243, 244, 246, 248, 250, 252, 253, 255, 296, 297, 299, 300, 301, 302, 305, 306, 311], "scale": [3, 4, 52, 94, 109, 111, 120, 125, 128, 156, 158, 169, 176, 177, 181, 182, 187, 188, 189, 197, 201, 203, 210, 211, 222, 226, 227, 228, 229, 273, 279, 284, 291, 295, 299, 300, 301, 302, 305, 310], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 67, 70, 71, 72, 73, 74, 94, 109, 125, 129, 130, 135, 146, 164, 165, 166, 190, 192, 197, 198, 201, 204, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237, 275, 287, 297, 299, 300, 301, 302, 305, 306, 307, 308, 311], "own": [3, 13, 14, 17, 22, 32, 67, 70, 72, 73, 74, 300, 301, 305, 306], "As": [3, 4, 67, 70, 72, 73, 74, 118, 201, 239, 295, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311], "inherit": [3, 162, 224, 297, 301, 305], "serialenv": [3, 67, 70, 72, 73, 126, 293, 311], "enjoi": 3, "exact": 3, "Of": [3, 7, 294, 306, 311], "cours": [3, 4, 294, 301, 306, 311], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 67, 70, 71, 72, 73, 74, 114, 126, 130, 134, 135, 159, 164, 165, 194, 196, 197, 201, 214, 216, 237, 239, 240, 241, 242, 243, 299, 300, 301, 305, 306, 307], "count": [3, 68, 124, 196, 271, 275, 278, 299, 300, 301, 302, 308, 311], "def": [3, 11, 22, 32, 67, 68, 70, 71, 72, 73, 74, 84, 92, 99, 102, 145, 155, 163, 205, 211, 213, 216, 222, 224, 227, 229, 231, 297, 299, 300, 304, 305, 306, 310, 311], "make_env": [3, 90, 135, 280, 281, 299, 300, 311], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 85, 94, 97, 98, 108, 109, 111, 116, 118, 126, 129, 130, 135, 159, 284, 287, 293, 295, 299, 300, 301, 302, 307, 308, 310, 311], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 67, 68, 70, 72, 73, 74, 94, 97, 108, 109, 111, 116, 118, 126, 129, 159, 234, 248, 249, 250, 251, 253, 254, 255, 256, 295, 300, 302, 306, 308, 310, 311], "from_pixel": [3, 77, 78, 94, 284, 299, 300, 302, 307, 308, 310, 311], "9": [3, 7, 32, 35, 38, 41, 125, 135, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 232, 237, 296, 299, 300, 301, 305, 306, 308, 309], "81": [3, 299, 300, 306], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 92, 93, 94, 95, 97, 98, 100, 101, 109, 110, 111, 114, 118, 125, 126, 128, 129, 130, 132, 134, 135, 137, 145, 146, 148, 149, 151, 152, 156, 158, 159, 161, 163, 165, 166, 167, 168, 169, 172, 176, 177, 180, 181, 182, 184, 186, 190, 191, 193, 194, 196, 199, 200, 203, 204, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 239, 240, 241, 242, 245, 246, 247, 266, 273, 287, 291, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 97, 106, 109, 111, 126, 130, 131, 135, 146, 155, 159, 161, 164, 165, 166, 175, 186, 192, 193, 197, 198, 199, 200, 201, 204, 205, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 230, 231, 237, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 299, 300, 301, 302, 304, 306, 308, 310], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 94, 95, 99, 100, 101, 102, 108, 111, 116, 118, 126, 128, 135, 141, 144, 146, 152, 155, 161, 164, 165, 166, 169, 172, 175, 186, 187, 188, 189, 191, 192, 194, 196, 198, 200, 203, 205, 224, 284, 287, 295, 297, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "simpli": [3, 6, 34, 36, 39, 45, 103, 122, 224, 295, 296, 299, 301, 305, 311], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 166, 167, 168, 174, 183, 204, 239, 240, 241, 242, 243, 245, 258, 295, 300, 307, 308], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 111, 128, 300, 308], "d": [3, 35, 53, 54, 58, 201, 310], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 68, 73, 74, 92, 95, 99, 101, 102, 109, 111, 115, 125, 126, 128, 135, 186, 194, 197, 198, 201, 239, 240, 241, 242, 243, 262, 295, 299, 300, 301, 302, 305, 306, 308, 310, 311], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 300, 305, 306], "_reset": [3, 67, 70, 71, 72, 73, 74, 92, 94, 99, 102, 145, 163, 304], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 92, 94, 95, 98, 99, 102, 105, 108, 109, 110, 111, 114, 115, 116, 118, 120, 126, 128, 129, 130, 131, 132, 134, 135, 137, 144, 145, 146, 148, 155, 158, 159, 161, 163, 164, 165, 166, 174, 175, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 210, 211, 212, 213, 214, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 237, 239, 240, 241, 242, 248, 249, 250, 251, 253, 254, 255, 256, 268, 269, 271, 272, 273, 275, 284, 291, 295, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 99, 102, 116, 118, 126, 130, 144, 145, 155, 159, 163, 174, 175, 183, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 203, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 279, 284, 294, 295, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 92, 94, 95, 99, 101, 102, 105, 109, 110, 111, 114, 116, 118, 120, 126, 128, 130, 131, 132, 134, 135, 137, 144, 145, 146, 148, 149, 158, 159, 161, 163, 166, 167, 168, 181, 182, 186, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 237, 239, 240, 241, 242, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 268, 269, 271, 272, 273, 275, 284, 291, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "pixel": [3, 7, 26, 94, 96, 105, 107, 111, 114, 117, 128, 132, 134, 148, 170, 171, 258, 284, 295, 299, 300, 302, 307, 308, 310, 311], "500": [3, 299, 300, 306, 310, 311], "uint8": [3, 47, 128, 300, 307, 308, 310, 311], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 68, 70, 71, 72, 73, 74, 83, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 107, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 210, 211, 213, 214, 216, 217, 218, 222, 224, 225, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 284, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 305, 306, 308, 310, 311], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 99, 102, 116, 118, 126, 135, 144, 145, 155, 159, 163, 174, 175, 183, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 203, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 284, 295, 301, 302, 304, 305, 306, 307, 308, 310, 311], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 135, 159, 196, 197, 201, 299, 300, 304, 305, 311], "launch": [3, 18, 19, 20, 22], "quit": [3, 295, 299, 300, 301, 305, 311], "mani": [3, 4, 38, 67, 210, 212, 216, 223, 226, 227, 231, 295, 299, 300, 301, 305, 306, 308, 311], "start": [3, 4, 5, 13, 21, 45, 68, 144, 270, 299, 300, 305, 306, 308, 311], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 67, 70, 72, 73, 74, 126, 135, 202, 203, 301, 302, 305, 306, 311], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 118, 130, 190, 196, 273, 297, 300, 301, 302, 306, 308, 311], "great": [3, 7, 8, 310], "speedup": [3, 8, 311], "precis": [3, 144, 299, 301], "anoth": [3, 8, 34, 36, 39, 67, 70, 72, 73, 74, 99, 100, 102, 126, 129, 161, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 295, 296, 299, 301, 302, 304, 305, 306, 311], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 67, 70, 72, 73, 74, 115], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 67, 68, 70, 72, 73, 74, 94, 99, 102, 114, 118, 127, 134, 135, 144, 192, 196, 200, 230, 239, 240, 241, 242, 243, 245, 275, 277, 291, 294, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 104, 110, 118, 130, 137, 190, 194, 196, 299, 301, 305, 308], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 84, 94, 97, 99, 102, 109, 116, 135, 137, 141, 166, 169, 184, 239, 240, 241, 242, 266, 274, 304, 305, 308, 311], "mismatch": [3, 300], "mostli": [3, 17, 296, 308, 311], "purpos": [3, 7, 94, 287, 299, 301, 302, 305, 307, 311], "want": [3, 6, 7, 8, 111, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 295, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311], "subprocess": [3, 68], "addit": [3, 4, 32, 52, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 190, 191, 200, 209, 224, 239, 296, 299, 300, 305, 308], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 72, 308], "multithreadedenv": [3, 293], "underneath": 3, "higher": [3, 4, 97, 204, 299, 300, 301, 308, 311], "restrict": [3, 300, 307, 308, 311], "flexibl": [3, 9, 72, 232, 296, 297, 308, 311], "cover": [3, 294, 301, 306, 310], "popular": [3, 295, 302, 305], "atari": [3, 4, 94, 311], "classic": [3, 71, 300], "benchmark_batched_env": 3, "py": [3, 84, 174, 183, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311], "pipelin": [3, 7, 295, 301], "seamlessli": [3, 306], "modif": [3, 5, 26, 28, 32, 67, 70, 72, 73, 74, 105, 224, 301, 306], "infrastructur": [3, 305], "view": [3, 8, 27, 32, 33, 67, 70, 72, 73, 74, 92, 155, 161, 306, 308, 310, 311], "core": [3, 8, 284, 297, 302, 310], "decis": [3, 147, 173, 191, 215, 225, 302, 305, 308], "act": [3, 4, 166, 211, 213, 222, 227, 229, 231, 302, 305], "world": [3, 5, 71, 206, 219, 305, 306, 311], "paradigm": [3, 17, 305], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 67, 70, 72, 73, 74, 101, 110, 119, 130, 137, 146, 159, 161, 166, 193, 197, 201, 210, 212, 213, 216, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 234, 239, 271, 275, 296, 299, 300, 302, 305, 306, 311], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 67, 70, 71, 72, 73, 74, 125, 130, 135, 224, 278, 295, 297, 299, 300, 301, 302, 305, 306, 308, 311], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 73, 97, 156, 166, 194, 275, 289, 290, 299, 300, 301, 302, 305, 308, 310], "accommod": [3, 13, 14, 16, 17], "thank": [3, 299], "carrier": [3, 301, 302, 308], "particular": [3, 32, 45, 52, 67, 70, 72, 73, 74, 130, 296, 297, 300, 302, 304, 305, 308], "carri": [3, 21, 45, 67, 70, 72, 73, 74, 126, 224, 300, 302, 305, 306, 308], "thu": [3, 223, 305], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 295, 300, 301, 305], "hand": [3, 7, 21, 305, 306], "kept": [3, 13, 14, 16, 17, 62, 73, 74, 101, 129, 137, 144, 158, 181, 182], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 67, 70, 72, 73, 74, 100, 126, 128, 130, 137, 159, 161, 166, 197, 200, 201, 203, 204, 209, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 239, 240, 241, 242, 266, 277, 289, 290, 291, 295, 297, 299, 300, 301, 302, 305, 306, 308, 311], "let": [3, 6, 7, 32, 43, 67, 70, 72, 73, 74, 94, 159, 166, 192, 271, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "understand": [3, 8, 299, 300, 305], "go": [3, 7, 115, 118, 191, 245, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "vma": [3, 89, 90, 305], "robot": [3, 5, 7, 114, 132, 134, 305], "what": [3, 8, 35, 44, 67, 70, 72, 73, 74, 126, 144, 198, 294, 295, 296, 300, 301, 302, 305, 306, 307, 308, 310, 311], "vmasenv": [3, 293, 305], "balanc": [3, 299, 300, 311], "num_env": [3, 21, 89, 90, 305], "n_agent": [3, 89, 90, 166, 174, 183, 237, 305], "5": [3, 24, 26, 28, 35, 38, 41, 42, 68, 72, 87, 89, 90, 118, 145, 146, 155, 156, 158, 160, 161, 163, 166, 170, 175, 181, 182, 191, 192, 198, 204, 223, 226, 228, 231, 295, 299, 300, 302, 305, 306, 308, 309, 310, 311], "td": [3, 15, 26, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 92, 95, 99, 100, 101, 102, 108, 109, 111, 118, 125, 126, 128, 130, 135, 144, 145, 155, 159, 162, 163, 174, 175, 183, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 200, 203, 205, 237, 240, 241, 242, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 266, 274, 284, 295, 296, 299, 302, 305, 306, 310, 311], "info": [3, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 89, 90, 132, 136, 305, 308], "ground_rew": 3, "pos_rew": [3, 305], "16": [3, 32, 67, 70, 72, 73, 74, 94, 299, 300, 301, 302, 306, 308], "root": [3, 26, 28, 94, 144, 158, 181, 182, 302, 305, 306, 308, 311], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 105, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 300, 306], "vari": [3, 115, 305], "creation": [3, 73, 74, 299, 311], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 67, 70, 72, 73, 74, 114, 118, 121, 130, 134, 169, 175, 193, 197, 199, 200, 201, 239, 240, 241, 242, 266, 278, 299, 300, 301, 302, 305, 306, 308, 310, 311], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 68, 118, 128, 135, 223, 231, 296, 297, 299, 301, 302, 305, 306, 308, 310], "append": [3, 8, 35, 38, 41, 42, 52, 53, 68, 97, 118, 126, 159, 192, 198, 299, 300, 301, 302, 305, 306, 307, 308, 310], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 67, 70, 72, 73, 74, 92, 214, 216, 237, 293, 301, 305, 311], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 67, 70, 72, 73, 74, 84, 135, 294, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "simpl": [3, 9, 32, 33, 67, 70, 72, 73, 74, 148, 201, 214, 224, 228, 239, 295, 296, 299, 300, 301, 305, 311], "composit": [3, 26, 28, 67, 70, 72, 73, 74, 301, 306], "prefix": [3, 23, 32, 45, 67, 70, 72, 73, 74, 130, 224, 257, 302, 311], "exactli": [3, 32, 67, 70, 72, 73, 74, 85, 130, 299, 302, 305], "action_kei": [3, 15, 67, 70, 72, 73, 74, 92, 101, 144, 145, 162, 163, 190, 194, 196, 305], "reward_kei": [3, 67, 70, 72, 73, 74, 144, 145, 163, 269, 273, 305], "done_kei": [3, 67, 70, 72, 73, 74, 144, 305], "automat": [3, 5, 55, 56, 65, 67, 70, 72, 73, 74, 99, 102, 111, 186, 197, 295, 299, 301, 305, 306, 308, 310], "right": [3, 6, 7, 40, 160, 300, 301, 305, 306, 311], "sure": [3, 4, 7, 53, 63, 118, 192, 291, 295, 299, 301, 302, 305, 306, 308, 310, 311], "set_kei": [3, 210, 211, 212, 214, 216, 217, 222, 223, 224, 226, 227, 228, 229, 237, 243, 305], "awai": [3, 301, 305], "eas": [3, 305], "access": [3, 7, 8, 32, 35, 53, 67, 70, 72, 73, 74, 114, 132, 291, 294, 299, 305, 306, 308], "leaf": [3, 26, 28, 67, 70, 72, 73, 74, 201, 305], "abov": [3, 7, 32, 67, 70, 72, 73, 74, 158, 181, 182, 209, 296, 297, 299, 301, 305, 306, 311], "would": [3, 32, 40, 67, 70, 72, 73, 74, 159, 161, 297, 300, 301, 302, 306, 308, 311], "full": [3, 67, 70, 72, 73, 74, 193, 266, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "raw": [3, 4, 40, 158, 181, 182, 300, 306], "logic": 3, "torchvis": [3, 114, 134, 310, 311], "transformedenv": [3, 13, 67, 68, 70, 72, 73, 74, 92, 94, 97, 98, 99, 102, 105, 108, 109, 110, 111, 116, 118, 126, 129, 135, 159, 284, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "primit": [3, 4, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231], "built": [3, 5, 7, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 232, 237, 285, 287, 288, 291, 299, 300, 301, 302, 308, 311], "base_env": [3, 92, 97, 99, 101, 102, 109, 126, 299, 300, 301, 307, 310, 311], "totensorimag": [3, 94, 300, 302, 308, 310, 311], "in_kei": [3, 13, 14, 16, 17, 21, 71, 93, 94, 95, 96, 97, 99, 101, 102, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 125, 127, 128, 129, 130, 132, 134, 135, 145, 154, 159, 163, 174, 183, 184, 186, 187, 188, 189, 191, 192, 197, 198, 200, 201, 203, 204, 205, 210, 211, 212, 213, 214, 216, 222, 223, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 257, 258, 284, 287, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "resiz": [3, 94, 300, 302, 308, 311], "64": [3, 94, 148, 149, 157, 159, 166, 174, 237, 299, 300, 301, 302, 304, 306, 308, 310, 311], "now": [3, 7, 35, 94, 166, 299, 300, 301, 302, 304, 305, 307, 308, 311], "appar": [3, 268], "bring": [3, 301, 311], "signific": [3, 5, 8, 301, 311], "kind": [3, 38, 44, 144, 308], "consult": 3, "interest": [3, 197, 201, 295, 300, 301, 305, 306, 311], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 71, 93, 94, 95, 96, 97, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 125, 127, 128, 129, 132, 134, 145, 154, 155, 159, 163, 174, 175, 183, 184, 186, 187, 188, 189, 191, 193, 197, 198, 199, 200, 201, 203, 204, 205, 210, 211, 212, 216, 222, 223, 226, 227, 228, 229, 237, 239, 240, 241, 242, 271, 287, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "easi": [3, 5, 53, 190, 194, 196, 295, 296, 299, 300, 301, 305, 307, 308, 311], "graph": [3, 4, 8, 235, 236, 299, 306], "inv": [3, 97, 101, 118, 306], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 92, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 113, 115, 116, 118, 121, 122, 124, 125, 126, 127, 129, 130, 132, 133, 135, 181, 192, 239, 270, 297, 299, 300, 301, 306, 310, 311], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 130, 186, 192, 200, 202, 203, 205, 210, 211, 213, 216, 222, 226, 227, 228, 229, 231, 300, 305], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 98, 101, 146, 203, 311], "taken": [3, 67, 70, 72, 73, 74, 164, 165, 296, 299, 301, 302, 305, 306], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 94, 99, 102, 111, 118, 208, 222, 306], "in_keys_inv": [3, 97, 99, 102, 111, 112, 116, 118, 129, 299, 304, 306, 311], "append_transform": [3, 35, 38, 41, 42, 52, 53, 114, 126, 132, 299, 302, 306, 310, 311], "doubletofloat": [3, 284, 299, 301, 304], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 99, 102, 111, 116, 118, 126, 128, 141, 144, 145, 155, 159, 163, 174, 175, 183, 186, 187, 188, 189, 191, 192, 196, 197, 198, 199, 200, 203, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 284, 295, 301, 302, 304, 305, 306, 307, 308, 310, 311], "float64": [3, 32, 67, 70, 72, 73, 74, 89, 98, 99, 102, 114, 126, 129, 130, 132, 134, 200, 304, 311], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 99, 102, 130, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 297, 299, 301, 308], "manipul": [3, 4, 8, 114, 132, 311], "keep": [3, 4, 7, 8, 14, 42, 62, 111, 114, 134, 135, 144, 196, 268, 275, 299, 300, 301, 302, 305, 306, 308, 310, 311], "mind": [3, 305], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 101, 144, 194, 295, 308], "unexpect": [3, 32, 67, 70, 72, 73, 74, 130, 311], "behviour": 3, "fortun": [3, 302], "eras": [3, 67, 70, 72, 73, 74], "ident": [3, 13, 14, 16, 32, 73, 74, 166, 239, 240, 241, 242, 289, 290, 300, 305], "alreadi": [3, 8, 11, 32, 45, 67, 70, 72, 73, 74, 126, 201, 239, 240, 241, 242, 299, 301, 305], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 67, 68, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 135, 191, 200, 272, 277, 278, 300, 301, 305, 306, 308], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 67, 70, 72, 73, 74, 98, 99, 100, 102, 109, 116, 129, 130, 135, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 296, 299, 301, 302, 305, 306, 307, 308, 311], "happen": [3, 67, 70, 72, 73, 74, 190, 300, 307, 311], "catfram": [3, 300], "hold": [3, 235, 236, 306, 308], "notic": [3, 94, 301, 306], "parenthood": 3, "reason": [3, 4, 8, 32, 67, 70, 72, 73, 74, 114, 132, 159, 296, 299, 300, 301, 306, 308], "henc": [3, 35, 115, 295, 299, 301, 305, 306], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 306], "log": [3, 4, 8, 40, 153, 154, 155, 164, 165, 172, 182, 192, 193, 197, 201, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 268, 269, 271, 275, 287, 295, 296, 297, 299, 300, 301, 305, 306, 310], "mission": 3, "irrespect": [3, 200, 201], "dmcontrol": [3, 299], "jumanji": [3, 86, 87], "natur": [3, 299, 302], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 67, 70, 72, 73, 74, 105, 111, 115, 127, 146, 159, 160, 161, 164, 165, 170, 178, 184, 190, 191, 194, 201, 300, 301, 302, 305, 306, 307, 308, 310, 311], "special": [3, 295, 299, 302, 311], "statu": 3, "framework": [3, 4, 9, 22, 71, 310, 311], "Its": [3, 32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 135, 200, 243], "success": [3, 94, 129, 194, 300, 306, 308, 310], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 67, 70, 72, 73, 74, 109, 129, 190, 196, 299, 300, 301, 302, 304, 305, 306, 308, 311], "foundat": [3, 5, 301, 305], "inspir": [3, 306], "howev": [3, 5, 7, 32, 67, 70, 72, 73, 74, 94, 121, 124, 125, 130, 295, 299, 300, 301, 302, 308, 311], "gone": [3, 4, 5], "sometim": [3, 302, 311], "hard": [3, 7, 221, 300, 311], "adopt": [3, 5, 299, 311], "prefer": [3, 17, 20, 35, 38, 41, 42, 115, 122, 226, 272, 295, 301, 305, 308], "moreov": 3, "maintain": [3, 5, 9, 306], "gymnasium": [3, 5, 11, 81, 82, 83, 84, 300, 301, 306, 310], "both": [3, 7, 32, 67, 68, 70, 72, 73, 74, 94, 116, 130, 146, 159, 161, 166, 187, 188, 189, 193, 199, 210, 212, 213, 216, 222, 223, 224, 226, 227, 228, 229, 231, 271, 295, 299, 301, 305, 306, 307, 308, 311], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 300, 301, 302, 305, 306, 308, 311], "decor": [3, 8, 11, 84, 224, 239, 240, 241, 242], "set_gym_backend": [3, 83, 293], "relev": [3, 40, 239, 240, 241, 242, 243, 306], "gym_backend": [3, 84, 293], "env1": [3, 304], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 67, 70, 72, 73, 74, 84, 114, 134, 163, 275, 297, 300], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 84], "__init__": [3, 7, 71, 84, 92, 99, 102, 145, 155, 163, 205, 211, 213, 216, 222, 227, 229, 231, 297, 306, 311], "env2": [3, 304], "_env": [3, 6, 311], "classic_control": 3, "pendulumenv": [3, 306], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 301], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 67, 70, 72, 73, 74, 94, 95, 124, 126, 130, 146, 161, 164, 165, 166, 196, 198, 199, 207, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 279, 291, 294, 297, 301, 302, 306, 308, 311], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 85, 115, 125, 126, 129, 130, 138, 139, 144, 156, 160, 177, 196, 217, 261, 297, 299, 300, 301, 302, 305, 306, 310, 311], "tell": [3, 4, 7, 299, 302, 305], "mo_gymnasium": [3, 82, 83], "handi": 3, "side": [3, 4, 311], "v0": [3, 70, 79, 80, 81, 82, 86, 87, 98, 130, 135, 287], "26": [3, 299, 300, 306, 308], "fun": [3, 11, 84, 301, 305], "reveal": 4, "bug": [4, 310], "curv": 4, "won": [4, 32, 67, 68, 70, 72, 73, 74, 114, 134, 275, 291, 300, 301], "exploit": 4, "video": [4, 9, 258, 271, 291, 305], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 67, 70, 72, 73, 74, 115, 198, 300, 301, 302, 305, 306], "cv": 4, "flip": 4, "imag": [4, 7, 77, 96, 114, 128, 134, 161, 299, 300, 305, 307, 311], "correspondingli": 4, "prescript": 4, "tune": [4, 109, 305, 307], "coeffici": [4, 40, 109, 305], "bonu": [4, 210, 212, 223, 226], "beta": [4, 35, 41, 58, 222, 223, 299, 300, 308, 310], "altern": [4, 27, 72, 152, 164, 165, 209, 224, 299, 301, 305], "reduc": [4, 6, 27, 125, 300, 301], "downstream": [4, 299], "formul": [4, 305], "ob": [4, 8, 26, 28, 92, 99, 100, 102, 111, 128, 141, 144, 166, 198, 205, 211, 213, 216, 222, 227, 229, 231, 239, 240, 241, 242, 300, 304, 306, 310, 311], "rate": [4, 135, 238, 300, 301, 305], "gradient": [4, 32, 67, 70, 72, 73, 74, 130, 158, 165, 168, 172, 181, 182, 210, 212, 213, 216, 222, 223, 224, 226, 227, 228, 229, 231, 238, 239, 240, 241, 242, 275, 299, 301, 305, 306], "norm": [4, 8, 275, 299, 300, 301, 305, 306], "easier": [4, 295, 299], "behavior": [4, 32, 67, 70, 72, 73, 74, 130, 222, 301, 305], "local": [4, 7, 10, 16, 21, 32, 67, 70, 72, 73, 74, 130, 166, 174, 183, 237, 263, 305], "optima": 4, "sens": [4, 306], "product": [4, 9, 289, 290], "sum": [4, 21, 31, 33, 164, 165, 183, 219, 238, 245, 296, 299, 300, 301, 302, 305, 306, 311], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 121, 135, 196, 263, 268, 300, 302, 305, 306, 308], "stat": [4, 111, 279, 291, 300, 301], "w": [4, 94, 96, 117, 128, 196, 258, 300, 302, 308], "r": [4, 32, 92, 97, 111, 201, 209, 238, 295, 300, 306, 311], "yield": [4, 16, 21, 32, 67, 70, 72, 73, 74, 224, 299], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 67, 70, 72, 73, 74, 130, 213, 214, 301, 305, 308], "futur": [4, 32, 67, 70, 72, 73, 74, 114, 130, 134, 161, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 294, 310], "past": [4, 300, 308], "becom": [4, 21, 305, 311], "spars": [4, 302], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 67, 70, 72, 73, 74, 121, 130, 167, 168, 196, 210, 212, 214, 217, 223, 226, 237, 300, 302, 308, 311], "intermedi": [4, 159, 193, 299, 307], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 299], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 67, 70, 72, 73, 74, 161, 301, 305], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 67, 70, 72, 73, 74, 94, 95, 99, 101, 102, 111, 118, 141, 144, 145, 159, 160, 164, 165, 166, 174, 183, 194, 196, 199, 207, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 245, 302, 310], "subtask": 4, "hierarch": [4, 310], "individu": [4, 18, 19, 20, 21, 32, 45, 67, 70, 72, 73, 74, 299, 305], "select": [4, 15, 35, 38, 41, 42, 52, 53, 92, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 113, 115, 116, 118, 121, 122, 124, 125, 126, 127, 129, 132, 133, 135, 145, 159, 192, 198, 274, 299, 308], "fall": 4, "section": [4, 300, 305], "explicit": [4, 11, 45, 160, 308], "mechan": [4, 32, 67, 70, 72, 73, 74, 130, 300, 306], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 67, 70, 72, 73, 74, 222, 301, 305], "addition": 4, "timestep": [4, 40, 118, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 305], "realli": 4, "larg": [4, 27, 99, 102, 132, 300, 301, 305, 308], "target": [4, 8, 21, 32, 67, 68, 70, 72, 73, 74, 125, 129, 200, 201, 210, 211, 212, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 278, 286, 287, 296, 297, 302, 306], "huge": [4, 166, 302], "std": [4, 111, 135, 169, 173, 190, 299, 311], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 302, 303, 304, 307, 308, 309], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 67, 70, 72, 73, 74, 111, 114, 126, 129, 130, 132, 136, 145, 163, 167, 168, 190, 194, 196, 210, 211, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237, 284, 291, 300, 302, 306, 311], "estim": [4, 109, 187, 188, 189, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 237, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 296, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "encount": [4, 294, 300, 306], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 299, 301, 305, 311], "bonus": 4, "denser": 4, "prior": [4, 177, 219, 305], "freshli": 4, "proper": [4, 6, 7, 239, 240, 241, 242, 300, 301, 305, 308], "doesn": [4, 11, 72, 99, 102], "drop": [4, 62, 144], "meant": [4, 71], "encourag": [4, 299, 300, 308], "measur": [4, 301], "novelti": 4, "revisit": 4, "previous": [4, 301, 311], "diminish": 4, "decreas": 4, "ideal": [4, 111, 306], "down": [4, 13, 14, 16, 17, 302], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 300, 301, 302, 305, 306, 310, 311], "distil": 4, "add": [4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 67, 70, 72, 73, 74, 94, 109, 159, 167, 195, 210, 270, 301, 302, 305, 306, 308, 310], "nois": [4, 136, 168, 185, 196, 227, 231, 271, 291, 299], "exploratori": [4, 210, 212, 223, 226], "could": [4, 6, 300, 301, 305, 307, 311], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 211, 213, 214, 216, 217, 222, 227, 229, 231, 237, 297, 299, 300, 308], "schedul": [4, 7, 40, 271, 301, 306], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 114, 134, 211, 213, 216, 227, 229, 231, 299, 300, 305, 308, 311], "divers": [4, 73, 74], "bootstrap": [4, 217, 240, 246, 247, 299, 302], "noisi": [4, 167, 168, 185, 295], "unstabl": [4, 158, 181, 182], "inher": 4, "stochast": [4, 109, 156, 168, 170, 177, 211, 215, 216, 222, 225, 227, 229, 295, 301, 305], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 159, 163, 187, 188, 189, 224, 227, 297, 300], "pomdp": [4, 308], "previou": [4, 10, 32, 40, 41, 126, 177, 191, 301, 302, 306, 311], "loos": [4, 295, 300, 301], "nonexist": 4, "architectur": [4, 152, 305], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 93, 94, 95, 96, 99, 101, 102, 105, 107, 111, 112, 115, 116, 117, 118, 119, 120, 121, 125, 127, 128, 129, 135, 146, 153, 155, 161, 164, 165, 166, 172, 175, 179, 191, 202, 203, 215, 257, 258, 270, 271, 272, 274, 275, 284, 295, 299, 301, 302, 304, 305, 311], "rather": [4, 116, 299, 300, 301, 305], "lstm": [4, 159, 160, 169], "explicitli": [4, 300, 302, 305, 308], "rel": [4, 126, 153, 180, 299, 300, 305, 308], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 94, 300, 301, 308, 310, 311], "compens": 4, "descent": [4, 168], "1000": [4, 38, 67, 70, 72, 73, 74, 94, 135, 194, 196, 197, 201, 221, 299, 300, 301, 302, 307, 308], "know": [4, 9, 35, 38, 41, 42, 190, 227, 271, 299, 300, 301, 302, 305, 308], "minimum": [4, 119, 156, 169, 180, 181, 182, 204, 207, 209, 211, 216, 224, 225, 229, 266, 299, 301, 305], "manual": [4, 18, 20, 21, 299, 302, 308], "deviat": [4, 111, 135, 145, 156, 163, 167, 168, 190, 226, 231, 299, 305], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 67, 70, 71, 72, 73, 74, 92, 99, 101, 102, 125, 130, 133, 135, 145, 159, 163, 190, 194, 196, 197, 198, 199, 200, 201, 210, 211, 213, 214, 216, 217, 218, 221, 222, 224, 226, 227, 228, 229, 230, 231, 237, 239, 240, 241, 242, 243, 271, 275, 277, 280, 281, 286, 287, 297, 300, 301, 302, 305, 306, 308, 310, 311], "stabil": [4, 106], "stage": [4, 299, 306], "never": 4, "prevent": [4, 26, 28, 158, 181, 182, 223, 226, 273, 308], "solv": [4, 9, 10, 294, 299, 300, 301, 305, 306, 308], "entir": [4, 301, 306, 308], "submit": [4, 294, 310], "suffici": [4, 299], "recommend": [4, 7, 305], "system": [4, 5, 301, 305, 306], "adequ": [4, 137, 301, 305], "infeas": 4, "allevi": [4, 295], "prune": 4, "develop": [4, 7, 299, 310], "filter": [4, 45, 210, 211, 213, 216, 222, 226, 227, 229], "fire": [4, 32, 67, 70, 72, 73, 74], "certain": [4, 18, 20, 21, 32, 45, 67, 70, 72, 73, 74, 84, 106, 124, 130, 194, 223, 295, 299, 300, 301, 305, 311], "illeg": 4, "move": [4, 21, 32, 67, 70, 72, 73, 74, 98, 100, 114, 126, 129, 130, 132, 134, 135, 144, 161, 200, 273, 299, 300, 302, 310, 311], "chess": 4, "combin": [4, 129, 300, 308], "grasp": 4, "releas": [4, 7, 10, 32, 67, 70, 72, 73, 74, 130, 310], "top": [4, 145, 163], "p": [4, 68], "wherein": 4, "cumul": [4, 121, 125, 145, 245, 301], "probabl": [4, 8, 40, 153, 155, 159, 161, 164, 165, 172, 182, 194, 197, 201, 295, 300, 310], "q": [4, 9, 148, 149, 150, 151, 154, 155, 157, 174, 175, 183, 189, 193, 198, 199, 211, 213, 214, 216, 217, 221, 222, 227, 229, 231, 237, 284, 293, 299], "flow": [4, 299, 301, 305, 306, 308], "reparameter": [4, 153, 165, 172], "soft": [4, 221, 229, 230], "critic": [4, 8, 187, 195, 210, 212, 213, 216, 222, 223, 226, 227, 228, 229, 231, 299, 301], "clip": [4, 40, 97, 119, 212, 231, 275, 301, 305, 306], "oppos": [4, 45], "incorrect": 4, "thought": [4, 67, 70, 72, 73, 74], "bound": [4, 17, 21, 25, 26, 32, 67, 70, 72, 73, 74, 97, 110, 135, 176, 177, 186, 192, 193, 196, 197, 198, 199, 200, 201, 204, 231, 295, 299, 300, 301, 311], "region": 4, "squash": [4, 302, 310], "tanh": [4, 146, 158, 161, 166, 180, 181, 182, 204, 301, 305, 306, 307, 310], "correct": [4, 109, 125, 278, 301, 302], "prob": [4, 164, 165, 172, 301, 305], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 100, 101, 109, 114, 130, 134, 197, 200, 201, 221, 224, 226, 284, 299, 304, 306, 311], "real": [5, 201, 296, 302, 306], "histor": 5, "wa": [5, 7, 67, 70, 72, 73, 74, 130, 221, 230, 296, 300, 301, 304, 308, 310], "ceas": 5, "fork": 5, "farama": [5, 81, 82, 301, 306], "detail": [5, 6, 7, 32, 67, 70, 72, 73, 74, 128, 130, 155, 193, 210, 217, 226, 294, 300, 304, 308], "usag": [5, 7, 52, 94, 159, 211, 222, 229, 232, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "known": [5, 7, 8, 246, 247, 299, 300], "bc": [5, 310], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 67, 70, 72, 73, 74, 94, 118, 135, 300, 308, 310], "face": [5, 8, 9, 311], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 137, 186, 192, 193, 197, 198, 199, 200, 201, 301, 305], "13": [5, 10, 11, 299, 300, 301, 305, 306, 308, 309, 310], "construct": [5, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 99, 102, 137, 159, 177, 201, 275, 295, 300, 301, 302, 306, 308, 311], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 70, 72, 73, 74, 137, 159, 184, 187, 188, 189, 190, 196, 198, 206, 237, 295, 299, 300, 301, 302, 305, 311], "best": [5, 9, 159, 305, 308, 310], "gymwrapp": [5, 70, 293, 301, 310], "feel": [5, 294, 310], "free": [5, 7, 99, 102, 210, 219, 226, 297, 301, 305, 310], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 101, 299, 300, 301, 302, 305, 308], "prepar": [6, 301], "conda": [6, 7, 294], "assum": [6, 26, 33, 40, 41, 42, 52, 70, 73, 74, 96, 105, 114, 115, 121, 126, 132, 134, 141, 159, 160, 184, 204, 214, 217, 229, 237, 248, 249, 250, 251, 253, 254, 255, 256, 258, 299, 301, 302, 304, 306], "7": [6, 10, 27, 33, 35, 38, 41, 145, 146, 160, 161, 163, 245, 299, 300, 301, 305, 306, 307, 308, 309, 310], "cmake": 6, "14": [6, 11, 111, 299, 300, 305, 306, 307, 308, 309], "activ": [6, 7, 9, 146, 152, 156, 161, 166, 212, 223, 226, 295, 310], "sim": 6, "bullet": 6, "physic": [6, 7, 297, 299, 305, 306], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 294], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 302], "y": [6, 7, 88, 160, 184, 299, 301, 305], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 67, 70, 72, 73, 74, 123, 224, 305, 311], "command": [6, 7, 10, 301, 305, 306, 311], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 293], "_has_habitat": 6, "available_env": [6, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 311], "startswith": [6, 296, 299], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 78, 84, 291, 297, 299, 308], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 68, 224, 299], "env_nam": [6, 72, 75, 77, 79, 81, 86, 299, 301, 311], "llvmlite": 6, "config": [6, 7, 114, 134, 147, 152, 173, 279, 280, 281, 284, 285, 288], "var": [6, 7, 32, 67, 70, 72, 73, 74, 130, 224], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 76, 146, 148, 149, 157, 161, 187, 188, 189, 197, 200, 203, 222, 299, 300, 305, 306, 307, 308, 309, 310], "bind": 6, "deactiv": [6, 7, 192], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 67, 70, 72, 73, 74, 130, 224, 308], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 300], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 304, 306, 311], "joint": [7, 300], "dynam": [7, 222, 301, 306], "contact": [7, 37], "engin": [7, 306], "biomechan": 7, "graphic": 7, "anim": [7, 305], "area": 7, "demand": [7, 311], "fast": [7, 9, 76, 116, 227, 299, 300, 301], "accur": [7, 52, 300, 306, 308], "articul": 7, "acquir": [7, 301], "deepmind": [7, 8, 9, 77, 78, 301], "whomev": 7, "licenc": 7, "incorpor": [7, 190, 194, 196, 302, 306], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 74, 110, 129, 258, 295, 296, 299, 300, 301, 305, 308, 311], "legaci": 7, "pro": [7, 294], "tip": [7, 294], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 311], "sudo": [7, 294], "enabl": [7, 8, 52, 55, 56, 65, 159, 196, 271, 301, 305, 306, 308], "apt": [7, 305], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 300, 302], "fact": [7, 8, 299, 301, 305, 306, 307, 308, 311], "workflow": [7, 187, 188, 189], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 67, 70, 72, 73, 74, 114, 132, 134, 302, 311], "binari": [7, 24, 27, 33, 93, 155, 175, 192, 193, 198, 199, 214, 216, 237], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 258, 263, 291], "earlier": [7, 299, 301, 302, 305, 308], "roboti": 7, "download": [7, 10, 114, 134, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311], "html": [7, 72], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 67, 70, 72, 73, 74, 114, 125, 134, 145, 174, 272, 299, 301, 305], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54, 307], "bin": [7, 155, 193, 295], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 151, 197, 201, 299, 301, 308], "nvidia": 7, "older": [7, 11], "hack": [7, 299], "line": [7, 32, 67, 70, 72, 73, 74, 300, 305], "adatp": 7, "script": [7, 137, 284, 287, 291, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "unnot": [7, 115], "until": [7, 21, 129, 301, 302, 305], "complet": [7, 9, 62, 70, 94, 294, 296, 299, 301, 304], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 300, 308], "troubleshoot": 7, "gl": 7, "h": [7, 94, 96, 117, 128, 159, 163, 258, 300, 302, 308], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 89, 90, 92, 94, 125, 128, 145, 147, 152, 160, 163, 173, 184, 194, 196, 204, 211, 214, 216, 226, 227, 228, 231, 237, 239, 240, 241, 242, 245, 266, 297, 299, 300, 301, 302, 304, 305, 306, 308, 310, 311], "fatal": 7, "No": 7, "directori": [7, 45, 55, 263, 297], "devel": 7, "ubuntu": 7, "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 300, 306, 308], "disappear": [7, 300, 302, 304], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 87, 111, 146, 153, 160, 161, 166, 170, 180, 205, 284, 299, 300, 305, 306, 308, 309, 310, 311], "glibcxx_3": 7, "29": [7, 300, 306], "compil": [7, 32, 67, 70, 72, 73, 74], "libosmesa": 7, "libgcc": 7, "Then": [7, 301, 304], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 67, 70, 72, 73, 74, 110, 130, 311], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 299, 300, 302, 306, 308, 309], "114": [7, 306, 308], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 306], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 92, 137], "opengl": [7, 305], "global": [7, 32, 67, 70, 72, 73, 74, 174, 183, 197, 201, 237, 297, 299, 305], "cuda_visible_devic": 7, "id": [7, 23, 40, 196, 227, 261, 284], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 306, 308], "displai": [7, 275, 297, 299, 300, 305, 306], "correctli": [7, 32, 67, 70, 72, 73, 74], "lgl": 7, "libegl": 7, "x11": [7, 305], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 70, 144, 190, 194, 196, 226, 275, 297, 299, 300, 304, 308], "sketch": [8, 297], "_": [8, 68, 95, 99, 101, 102, 109, 111, 116, 128, 135, 186, 200, 205, 209, 210, 211, 213, 216, 222, 226, 227, 229, 231, 239, 240, 241, 242, 299, 300, 301, 302, 305, 306, 308, 310], "n_training_step": 8, "datapoint": [8, 45, 308], "onlin": [8, 13, 17, 94, 152, 173, 210, 215, 225, 226, 266, 291, 301, 302, 305, 308], "n_data_per_train": 8, "no_grad": [8, 32, 67, 70, 72, 73, 74, 109, 239, 240, 241, 242, 301, 302, 305], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 272, 287, 299, 300, 301, 305, 308], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 118, 272, 297, 299, 300, 301, 302, 305, 307, 308, 310], "loss_fn": [8, 302, 310], "backward": [8, 32, 67, 70, 72, 73, 74, 135, 210, 211, 213, 216, 222, 226, 227, 228, 229, 231, 299, 301, 302, 305, 306], "zero_grad": [8, 32, 67, 70, 72, 73, 74, 297, 299, 301, 302, 305, 306], "backpropag": [8, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 305, 306], "differenti": [8, 45, 109, 239, 240, 241, 242, 302, 305, 306], "denomin": 8, "artifact": 8, "numer": [8, 38, 135, 158, 181, 182, 186, 192, 193, 197, 198, 199, 200, 201, 273, 301, 308, 311], "misconcept": 8, "save": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 257, 275, 297, 305], "freed": 8, "appear": [8, 33, 306, 308], "compuat": 8, "twice": 8, "fix": [8, 126, 211, 225, 229, 300, 306, 311], "retain_graph": 8, "discuss": [8, 9, 305], "inplac": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 130, 299], "accumul": 8, "onto": [8, 33, 141, 186, 190, 192, 193, 196, 197, 198, 199, 200, 201, 302, 306], "exclud": [8, 52, 94, 103, 144, 174, 305, 308], "forward": [8, 32, 67, 70, 72, 73, 74, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 121, 122, 124, 125, 126, 127, 129, 132, 133, 135, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 166, 167, 169, 170, 171, 173, 174, 176, 177, 179, 183, 184, 190, 191, 193, 194, 196, 199, 200, 201, 204, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 296, 306, 310], "submodul": [8, 32, 67, 70, 72, 73, 74, 83, 224], "param": [8, 32, 40, 67, 70, 71, 72, 73, 74, 98, 100, 109, 116, 129, 153, 155, 180, 191, 197, 200, 203, 205, 224, 233, 236, 239, 240, 241, 242, 243, 299, 305, 306, 307, 310], "grad": [8, 32, 67, 70, 72, 73, 74, 299, 301], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 169, 174, 200], "strictli": [8, 32, 67, 70, 72, 73, 74, 130, 299, 301], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 94, 105, 115, 131, 218, 296, 301, 305, 306], "ask": [8, 299, 301, 302, 305, 307, 311], "much": [8, 35, 41, 58, 223, 226, 301, 305, 306, 308, 311], "render": [8, 271, 299, 300, 301], "upon": [8, 306], "factor": [8, 32, 118, 158, 168, 181, 182, 190, 194, 196, 211, 217, 218, 220, 230, 245, 299, 300, 305, 308, 311], "fit": [8, 11, 111, 296, 297, 299], "everi": [8, 17, 26, 28, 32, 33, 63, 67, 70, 72, 73, 74, 125, 135, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 275, 297, 299, 300, 301, 302, 305, 306], "bottlneck": 8, "affect": [8, 32, 67, 70, 72, 73, 74, 129, 130, 137, 239, 240, 241, 242], "brax": [8, 75, 76, 116, 311], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 67, 70, 72, 73, 74, 104, 130, 164, 165, 213, 214, 266, 296, 297, 299, 301, 302, 305, 306, 308], "underli": [8, 67, 70, 72, 73, 74, 224, 306], "tedeiou": 8, "priorit": [8, 35, 41, 58, 211, 213, 214, 216, 222, 227, 229, 231, 299, 300], "amount": [8, 196, 300, 308], "isn": [8, 34, 36, 39, 192, 200, 305], "contigu": [8, 67, 70, 72, 73, 74, 141, 301, 305, 306, 308, 310, 311], "costli": [8, 306], "concaten": [8, 21, 30, 31, 94, 95, 111, 129, 161, 203, 299, 300, 305, 306, 308, 311], "constitut": [8, 300, 305, 306], "plain": 8, "profil": 8, "fulli": [8, 32, 67, 70, 72, 73, 74, 300, 306, 308], "frequent": [8, 308], "program": [8, 222, 311], "functorch": [8, 10], "incl": 8, "suit": [8, 78, 301, 311], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 200, 203, 224, 305, 306, 310], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 72, 146, 161, 166, 224, 301, 306, 310], "lost": 8, "permut": [8, 62, 310, 311], "idea": [9, 227, 297, 302, 305], "introductori": 9, "intro": [9, 301, 302], "dai": [9, 310], "2022": [9, 10, 306, 310], "spin": [9, 311], "deep": [9, 94, 148, 149, 150, 151, 154, 196, 210, 221, 229, 230, 299], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 111, 135, 299, 300, 301, 302], "reddit": 9, "reagent": 9, "orient": [9, 311], "baselines3": 9, "tf": 9, "bandit": [9, 88], "tensorflow": [9, 164, 165], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 67, 70, 72, 73, 74, 109, 202, 203, 226, 295, 301, 302, 305, 306, 307, 311], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 310], "grade": 9, "factori": [9, 43], "throughput": [9, 299], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 67, 70, 72, 73, 74, 97, 101, 141, 152, 155, 171, 175, 186, 190, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 205, 214, 216, 231, 237, 295, 300, 301, 302, 305, 306, 310, 311], "mbrl": [9, 71, 295], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 306], "dist": [10, 164, 165, 172], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 301, 302, 305], "notebook": [10, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311], "24": [10, 299, 300, 301, 306, 309], "11": [10, 27, 33, 45, 55, 56, 65, 68, 128, 145, 163, 299, 300, 301, 302, 305, 306, 307, 308, 309], "12": [10, 55, 56, 65, 299, 300, 301, 302, 305, 306, 308, 309], "pip": [10, 53, 305, 310, 311], "pip3": [10, 301, 302, 305], "extra": [10, 32, 67, 70, 72, 73, 74, 94, 135, 144, 295, 301, 302, 308], "url": 10, "org": [10, 35, 58, 94, 114, 132, 147, 148, 149, 150, 151, 152, 155, 156, 157, 163, 164, 165, 168, 170, 171, 173, 174, 176, 177, 183, 193, 196, 210, 211, 215, 217, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 239, 244, 252, 307], "whl": 10, "u": [10, 53, 306], "There": [10, 159, 295, 297, 301, 302, 305, 306, 308, 311], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 224], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 99, 101, 102, 105, 107, 108, 111, 112, 114, 115, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 132, 134, 135, 144, 146, 148, 149, 150, 151, 153, 155, 157, 160, 161, 164, 165, 166, 167, 168, 172, 174, 175, 180, 181, 182, 183, 200, 216, 221, 227, 230, 252, 269, 271, 272, 280, 281, 284, 285, 287, 288, 289, 290, 291], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 67, 69, 70, 72, 73, 74, 77, 83, 88, 92, 93, 94, 95, 96, 99, 101, 102, 105, 107, 108, 109, 111, 112, 114, 115, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 132, 134, 135, 138, 142, 144, 145, 146, 148, 149, 150, 151, 154, 155, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 174, 175, 183, 186, 192, 193, 197, 198, 199, 200, 201, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 237, 238, 239, 240, 241, 242, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 284, 285, 291, 300, 301], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 67, 68, 70, 71, 72, 73, 74, 84, 209, 224, 280, 281, 289, 290, 291, 300], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 55, 56, 57, 63, 65, 101, 191], "vs": [11, 159, 160, 310], "longer": [11, 300, 305, 308], "self": [11, 26, 28, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 92, 98, 99, 102, 114, 126, 129, 130, 132, 134, 145, 155, 163, 174, 183, 190, 194, 200, 205, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 297, 299, 300, 306, 310], "x": [11, 23, 26, 32, 38, 40, 109, 128, 146, 155, 157, 159, 160, 161, 163, 166, 184, 192, 198, 207, 209, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 275, 299, 301, 306, 308, 310], "23": [11, 300, 302, 305, 306, 308, 309], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 67, 68, 70, 72, 73, 74, 84, 109, 126, 184, 192, 198, 218, 220, 239, 242, 250, 251, 255, 256, 287, 296, 299, 300, 305, 308, 310, 311], "import_modul": 11, "27": [11, 300, 301, 302, 306, 307, 309], "get_class_that_defined_method": 11, "f": [11, 70, 209, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 299, 300, 301, 302, 305, 306, 308, 311], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 101, 111, 126, 130, 135, 158, 166, 181, 182, 192, 198, 204, 211, 219, 224, 225, 229, 271, 272, 297, 299, 300, 301, 302, 306, 311], "module_set": 11, "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 98, 114, 123, 129, 130, 131, 133, 134, 145, 146, 154, 159, 161, 162, 163, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 243, 265, 268, 272, 275, 291, 300], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 67, 69, 70, 72, 73, 74, 92, 94, 95, 98, 99, 100, 103, 104, 105, 108, 109, 110, 113, 115, 116, 118, 121, 122, 124, 125, 126, 127, 129, 133, 135, 144, 145, 159, 162, 163, 190, 191, 193, 194, 196, 199, 200, 201, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237, 238, 239, 240, 241, 242, 243, 275, 299, 306], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 68, 73, 74, 299, 310], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 77, 94, 95, 96, 101, 105, 106, 110, 111, 114, 115, 117, 123, 124, 127, 130, 131, 132, 134, 137, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 210, 211, 212, 216, 218, 219, 223, 224, 225, 226, 227, 231, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 268, 271, 272, 275, 277, 284, 285, 289, 290, 291, 306], "200": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 89, 90, 118, 148, 149, 156, 176, 177, 299, 302, 306], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 94, 118, 275, 278, 287, 297, 299, 300, 301, 302, 305, 308, 310], "create_env_kwarg": [13, 14, 16, 17, 68, 72, 73, 74, 299], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 67, 68, 70, 72, 73, 74, 109, 126, 130, 135, 146, 147, 148, 149, 150, 151, 152, 157, 160, 161, 173, 197, 201, 262, 263, 271, 280, 281, 284, 289, 290, 291, 299, 300, 301, 311], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 118, 300, 308], "interactiontyp": [13, 16, 18, 19, 20, 21, 139, 143, 197, 201, 271], "exploration_mod": [13, 16, 18, 19, 20, 293, 295], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 67, 70, 72, 73, 74, 98, 99, 102, 109, 111, 114, 118, 119, 120, 125, 126, 128, 129, 130, 132, 134, 135, 153, 156, 158, 161, 164, 165, 167, 168, 176, 177, 180, 182, 190, 200, 204, 207, 208, 209, 210, 211, 216, 219, 220, 221, 222, 225, 227, 229, 230, 231, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 273, 299, 300, 308, 311], "datacollector": [13, 14, 16, 17, 197, 201, 226, 301], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 186, 190, 192, 193, 196, 197, 198, 199, 200, 201, 203, 295, 310], "env_mak": [13, 14, 16, 21, 287, 311], "50": [13, 14, 16, 21, 37, 40, 300, 301, 302, 305, 306, 307], "linear": [13, 14, 16, 17, 21, 32, 67, 70, 71, 72, 73, 74, 98, 109, 114, 126, 129, 130, 132, 134, 145, 146, 155, 161, 163, 166, 167, 168, 169, 175, 176, 177, 186, 187, 188, 189, 194, 195, 196, 197, 198, 200, 203, 205, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 239, 240, 241, 242, 287, 295, 300, 304, 307, 310], "2000": [13, 14, 16, 45, 301, 308, 311], "enumer": [13, 14, 16, 21, 32, 38, 42, 67, 70, 72, 73, 74, 232, 296, 299, 300, 301, 302, 308, 310], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 67, 70, 72, 73, 74, 88, 118, 155, 175, 192, 193, 196, 198, 199, 295, 301, 302, 306, 308, 310, 311], "step_count": [13, 14, 16, 67, 70, 72, 73, 74, 124, 301, 302, 310], "shutdown": [13, 14, 16, 17, 21, 299, 310], "del": [13, 14, 16, 299, 301, 304, 310, 311], "randompolici": [13, 14, 16, 18, 19, 20, 22, 94, 118, 293, 308], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 212, 223, 226, 266, 268, 271, 275, 278, 279, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311], "lifespan": [13, 14, 16, 18, 19, 20, 300], "divis": [13, 14, 16, 18, 19, 20, 305], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 101, 302, 308], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 126, 130, 197, 201, 271, 289, 290, 291, 297, 300, 301, 306, 311], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 67, 70, 72, 73, 74, 301], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 300, 301, 305], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 129, 131, 166, 296, 297, 299, 300, 305, 308, 310], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 67, 70, 72, 73, 74, 101, 103, 122, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 164, 165, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 239, 308, 311], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 295, 305, 306], "post": [13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74], "multistep": [13, 14, 16, 18, 19, 20, 21, 293, 300], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 111, 120, 158, 167, 176, 181, 182, 237, 295, 306, 308], "explorationtyp": [13, 14, 16, 20, 21, 224, 271, 299, 300, 301, 302, 310], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 226], "whole": [13, 14, 16, 26, 28, 32, 45, 67, 70, 72, 73, 74, 130, 266, 299, 301], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 277, 287, 297, 299, 310], "async": [13, 14, 18, 19, 20, 21, 299, 310], "ratio": [13, 14, 40, 299, 301], "finish": [13, 14, 21, 118], "rest": [13, 14, 295, 301, 302, 306, 310], "earli": [13, 14, 310], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 130, 135, 297, 299], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 130, 135, 291, 297, 299, 300, 311], "ordereddict": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 130, 135, 300], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 135, 159, 209, 210, 212, 223, 226, 275, 295, 305], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 67, 70, 72, 73, 74, 130], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 67, 70, 72, 73, 74, 106, 111, 124, 146, 161, 166, 222, 229, 308], "increment": [13, 14, 16, 17, 67, 70, 72, 73, 74, 124, 223], "env_fn": [13, 14, 16, 17, 68, 289, 290], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 150, 151, 306], "out_se": [13, 14, 16, 17, 311], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 98, 114, 123, 126, 129, 130, 131, 133, 134, 145, 146, 148, 149, 150, 151, 154, 157, 158, 159, 161, 162, 163, 166, 172, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 237, 238, 239, 240, 241, 242, 243, 258, 262, 263, 265, 268, 275, 280, 281, 284, 288, 289, 290, 296, 301, 305], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 99, 101, 102, 105, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 135, 144, 148, 154, 155, 159, 160, 161, 166, 169, 173, 174, 175, 192, 193, 198, 199, 204, 210, 211, 213, 216, 218, 222, 224, 226, 227, 228, 229, 231, 239, 240, 241, 242, 269, 271, 273, 282, 283, 299], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 76, 87, 92, 99, 102, 145, 163, 210, 211, 213, 214, 216, 222, 226, 227, 229, 231, 306, 310, 311], "describ": [15, 44, 95, 129, 180, 181, 261, 296, 299, 301, 305, 306, 311], "tensor_spec": [15, 92, 216, 226, 228], "boundedtensorspec": [15, 22, 26, 67, 70, 72, 73, 74, 194, 196, 197, 204, 210, 211, 213, 222, 226, 227, 229, 231, 293, 301, 305, 306, 310, 311], "cube": 15, "envcreat": [16, 22, 287, 288, 291, 293, 299, 300, 310, 311], "interruptor": 16, "_interruptor": 16, "outsid": [16, 305], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 67, 70, 72, 73, 74, 301, 305, 310, 311], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 70, 72, 109, 210, 212, 223, 226, 299, 304, 306, 310], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 113, 299, 310], "regular": [17, 34, 36, 39, 175, 193, 198, 199, 200, 201, 217, 277, 293, 297, 299, 300, 308, 311], "mere": 17, "greater": [17, 159, 299, 300, 310], "signal": [17, 52, 124, 296, 299, 301, 305, 308], "sent": [17, 55, 56, 65, 135], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 73, 74, 115, 135, 145, 146, 148, 150, 152, 154, 161, 163, 166, 186, 200, 205, 266, 272, 299, 301, 302, 306, 308, 311], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 275], "string": [18, 19, 20, 32, 37, 45, 54, 67, 70, 72, 73, 74, 84, 114, 134, 159, 192, 197, 198, 209, 257, 274, 284, 296, 299, 301, 302], "respect": [18, 19, 20, 32, 67, 70, 72, 73, 74, 93, 98, 99, 102, 114, 115, 126, 129, 130, 132, 134, 177, 200, 205, 270, 301, 302, 305], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 116, 130, 144, 159, 191, 224, 296, 299, 300, 302, 308], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 294, 300, 301, 304, 308], "serv": [18, 20, 21, 85, 308, 311], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 67, 70, 72, 73, 74, 105], "seen": [18, 20, 21, 296, 299, 300, 302, 305, 308], "turn": [18, 20, 21, 107, 131, 192, 271, 296, 299, 300, 302, 306, 307], "mp": [18, 19, 20, 68, 135], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 67, 70, 72, 73, 74, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 299], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 67, 70, 72, 73, 74, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 226, 289, 290], "homonym": [18, 19, 20, 306], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 299], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 197, 201], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 289, 290, 299, 300], "coordin": 21, "hood": [21, 306], "init": [21, 32, 67, 70, 72, 73, 74, 299, 300, 301], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 308], "similarli": [21, 32, 62, 67, 70, 72, 73, 74, 202, 203, 222, 311], "num_cpu": 21, "num_gpu": 21, "1024": [21, 152, 300, 308], "equat": [21, 196, 209, 212, 230, 301, 306], "exce": [21, 301, 308], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 275, 299, 301, 302], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 89, 90, 146, 147, 148, 149, 152, 157, 161, 166, 170, 171, 173, 174, 183, 237, 299, 300, 302, 306, 307, 308, 310, 311], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "wherea": [22, 101, 224, 297], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 147, 152, 173, 191], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 68, 300], "__main__": [22, 68], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 101, 127, 180, 181, 182, 191, 196, 211, 212, 216, 225, 227, 229, 299, 301, 302, 305], "durat": [23, 305], "meta": [23, 44, 52, 69, 297, 301, 305, 308], "aren": [23, 302], "discret": [24, 27, 30, 31, 33, 47, 67, 70, 72, 73, 74, 101, 172, 175, 216, 217, 295, 300, 301, 305, 311], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 135, 295, 299, 305], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 101, 171, 172, 176, 209, 295, 300, 301, 302, 306, 308], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 310], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 196, 204], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 204, 306], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 67, 70, 72, 73, 74, 98, 99, 102, 109, 114, 126, 129, 130, 132, 134, 135, 200, 284, 311], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 97], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 146, 161, 178, 179], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 132, 147, 173], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 67, 70, 72, 73, 74, 291, 295], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 311], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 101, 159, 186, 190, 192, 193, 196, 197, 198, 199, 200, 201, 295, 310, 311], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 186, 192, 193, 197, 198, 199, 200, 201, 301, 305, 306, 308], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 126, 141, 306, 308], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 94, 123, 146, 178, 179, 299, 306, 308], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 94, 95, 126, 131, 135, 160, 179, 184, 291, 300, 301, 306, 308], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 129, 130, 169, 180, 291], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 92, 101, 155, 172, 175, 192, 193, 198, 199, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 302], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 155, 175, 192, 198, 214, 216, 237, 293, 295], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 67, 70, 72, 73, 74, 98, 99, 102, 114, 126, 129, 130, 132, 134, 135, 200, 209, 224, 299, 300, 301, 306, 308], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 126, 159, 302, 306, 307], "upper": [25, 110], "unnam": 26, "effect": [26, 32, 67, 70, 72, 73, 74, 94, 121, 130, 275, 299, 308, 311], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 67, 70, 72, 73, 74, 146, 161, 300, 301, 306], "composite_spec": 26, "observation_vector": [26, 95, 284, 299], "randn": [26, 34, 36, 39, 55, 56, 65, 111, 141, 147, 152, 155, 160, 164, 165, 169, 172, 173, 175, 186, 187, 188, 189, 191, 192, 197, 198, 200, 203, 204, 205, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 239, 240, 241, 242, 274, 295, 310, 311], "td_project": 26, "is_empti": [26, 28, 306], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 67, 70, 72, 73, 74, 238, 305], "children": [26, 28, 32, 67, 70, 72, 73, 74], "keysview": [26, 28], "reflect": [26, 28, 144, 224, 278, 300, 301, 302, 305], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 67, 70, 72, 73, 74, 224], "succeed": [26, 28, 301, 305, 306], "selected_kei": [26, 28, 122, 299], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "device_typ": [27, 30, 33, 146, 147, 148, 149, 150, 151, 157, 161, 167, 168, 173], "onehottensorspec": 27, "categor": [27, 31, 33, 92, 155, 172, 175, 192, 193, 198, 199, 214, 216, 237, 302], "action_valu": [27, 33, 154, 155, 175, 192, 193, 198, 199, 216, 224, 237, 295, 302], "arang": [27, 33, 155, 165, 192, 266, 295, 308], "argmax": [27, 155, 175, 193, 199], "chosen_action_valu": [27, 33, 174, 175, 183, 198, 199, 237, 295, 302], "outcom": [27, 33, 153, 180], "lazi": [28, 29, 49, 50, 67, 70, 72, 73, 74, 114, 132, 167, 202, 203, 299, 300, 304, 308, 311], "represent": [28, 29, 32, 67, 70, 72, 73, 74, 114, 132, 134, 299, 306, 307, 311], "drawn": [28, 29, 126, 194, 197, 201, 301, 305], "lazystackedtensordict": [28, 67, 70, 71, 72, 73, 74, 304, 310], "heterogen": [28, 29, 137, 166, 299, 300], "semant": [28, 29, 295], "thrown": [29, 32, 67, 70, 72, 73, 74, 308], "nvec": [30, 31], "cardin": [30, 31, 155, 175, 192, 193, 199, 301], "ax": [30, 167, 168], "m": [30, 32, 67, 70, 72, 73, 74, 101, 201, 295, 300, 306], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 214, 216, 237, 293], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 293], "gamma": [32, 118, 163, 210, 211, 213, 214, 216, 217, 218, 220, 222, 224, 226, 227, 228, 229, 231, 232, 233, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 287, 296, 299, 300, 301, 305, 310], "sutton": [32, 296, 305], "1988": 32, "predict": [32, 40, 156, 162, 163, 191, 206, 217, 219, 220, 238, 295, 299, 300], "tempor": [32, 159, 163, 240, 241, 246, 247], "44": [32, 300, 306, 307, 308], "discount": [32, 68, 118, 211, 217, 218, 220, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 296, 300, 301, 305], "ahead": [32, 311], "add_modul": [32, 67, 70, 72, 73, 74], "child": [32, 67, 70, 72, 73, 74], "fn": [32, 37, 67, 70, 72, 73, 74, 169, 289, 290], "init_weight": [32, 67, 70, 72, 73, 74], "fill_": [32, 67, 70, 72, 73, 74, 300, 302, 311], "net": [32, 67, 70, 72, 73, 74, 160, 166, 210, 211, 216, 222, 226, 227, 228, 229, 284, 287, 300, 306, 307, 310], "in_featur": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 146, 148, 149, 150, 151, 160, 161, 166, 167, 168, 187, 200, 214, 310], "out_featur": [32, 67, 70, 71, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 145, 146, 148, 149, 150, 151, 156, 157, 159, 160, 161, 163, 166, 167, 168, 187, 192, 200, 214, 295, 299, 302, 310], "bia": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 146, 156, 159, 161, 166, 167, 168, 169, 194, 196, 200, 207, 208, 209, 224, 296, 299, 300, 301, 302, 305, 310], "requires_grad": [32, 67, 70, 72, 73, 74, 109], "bfloat16": [32, 67, 70, 72, 73, 74], "datatyp": [32, 67, 70, 72, 73, 74, 308], "member": [32, 67, 70, 72, 73, 74, 224], "xdoctest": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200, 224], "skip": [32, 67, 70, 72, 73, 74, 106, 130, 137, 197, 201, 224, 239, 240, 241, 242, 257, 258, 268, 271, 299, 300, 301, 306], "buf": [32, 67, 70, 72, 73, 74], "20l": [32, 67, 70, 72, 73, 74, 224], "1l": [32, 67, 70, 72, 73, 74, 224], "5l": [32, 67, 70, 72, 73, 74, 224], "__call__": [32, 37, 67, 70, 72, 73, 74, 201, 297], "associ": [32, 67, 70, 72, 73, 74, 176, 291, 299, 308], "doubl": [32, 46, 67, 70, 72, 73, 74, 98, 99, 100, 102, 114, 126, 129, 130, 132, 134, 200, 214, 217, 221, 227, 230, 237, 299, 300, 301, 302, 311], "eval": [32, 67, 70, 72, 73, 74, 130, 135, 299, 300, 301], "evalu": [32, 67, 70, 72, 73, 74, 130, 153, 164, 165, 172, 182, 227, 280, 281, 300, 301], "dropout": [32, 67, 70, 72, 73, 74, 130, 159, 161, 302], "batchnorm": [32, 67, 70, 72, 73, 74, 130], "disabl": [32, 67, 70, 72, 73, 74, 130, 158, 182, 299], "comparison": [32, 54, 67, 70, 72, 73, 74, 130, 224, 299, 300], "similar": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 133, 134, 135, 187, 189, 197, 200, 201, 296, 299, 300, 301, 302, 306, 311], "confus": [32, 67, 70, 72, 73, 74, 130], "extra_repr": [32, 67, 70, 72, 73, 74], "nontermin": 32, "original_reward": 32, "newli": [32, 67, 70, 72, 73, 74], "OR": 32, "reshap": [32, 159, 161, 301, 305], "get_buff": [32, 67, 70, 72, 73, 74], "throw": [32, 67, 70, 72, 73, 74, 311], "docstr": [32, 67, 70, 72, 73, 74], "get_submodul": [32, 67, 70, 72, 73, 74], "explan": [32, 67, 70, 72, 73, 74], "qualifi": [32, 67, 70, 72, 73, 74], "referenc": [32, 67, 70, 72, 73, 74], "attributeerror": [32, 67, 70, 72, 73, 74], "invalid": [32, 67, 70, 72, 73, 74, 164, 165], "resolv": [32, 67, 70, 72, 73, 74], "get_extra_st": [32, 67, 70, 72, 73, 74, 135], "set_extra_st": [32, 67, 70, 72, 73, 74, 135], "picklabl": [32, 67, 70, 72, 73, 74, 135], "ensur": [32, 35, 41, 58, 62, 67, 70, 72, 73, 74, 94, 114, 132, 135, 192, 295, 300, 301, 306, 308], "guarante": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 135, 310], "pickl": [32, 67, 70, 72, 73, 74, 135], "get_paramet": [32, 67, 70, 72, 73, 74], "sai": [32, 67, 70, 72, 73, 74, 307, 311], "net_b": [32, 67, 70, 72, 73, 74], "net_c": [32, 67, 70, 72, 73, 74], "conv": [32, 67, 70, 72, 73, 74, 146, 300], "conv2d": [32, 67, 70, 72, 73, 74, 146, 310], "kernel_s": [32, 67, 70, 72, 73, 74, 146, 148, 149, 170, 300, 310], "stride": [32, 67, 70, 72, 73, 74, 146, 148, 149, 157, 300, 310], "diagram": [32, 67, 70, 72, 73, 74], "show": [32, 67, 70, 72, 73, 74, 166, 295, 299, 301, 302, 305, 306, 308, 310], "itself": [32, 67, 70, 72, 73, 74, 83, 224, 301], "degre": [32, 67, 70, 72, 73, 74], "named_modul": [32, 67, 70, 72, 73, 74], "o": [32, 67, 70, 72, 73, 74], "transit": [32, 52, 67, 70, 72, 73, 74, 206, 299, 302, 306, 308], "half": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200, 299], "ipu": [32, 67, 70, 72, 73, 74], "strict": [32, 67, 70, 72, 73, 74, 130], "descend": [32, 67, 70, 72, 73, 74, 130], "persist": [32, 67, 70, 72, 73, 74, 130, 144], "enforc": [32, 62, 67, 70, 72, 73, 74, 130, 202, 306], "preserv": [32, 67, 70, 72, 73, 74, 130], "missing_kei": [32, 67, 70, 72, 73, 74, 130], "unexpected_kei": [32, 67, 70, 72, 73, 74, 130], "namedtupl": [32, 67, 70, 72, 73, 74, 130], "duplic": [32, 62, 67, 70, 72, 73, 74, 214, 217, 224, 237], "l": [32, 67, 70, 72, 73, 74, 238, 301, 306], "idx": [32, 67, 70, 72, 73, 74], "named_buff": [32, 67, 70, 72, 73, 74], "remove_dupl": [32, 67, 70, 72, 73, 74, 224], "prepend": [32, 67, 70, 72, 73, 74, 224], "running_var": [32, 67, 70, 72, 73, 74], "named_children": [32, 67, 70, 72, 73, 74], "conv4": [32, 67, 70, 72, 73, 74], "conv5": [32, 67, 70, 72, 73, 74], "memo": [32, 67, 70, 72, 73, 74], "named_paramet": [32, 67, 70, 72, 73, 74, 109, 224], "register_backward_hook": [32, 67, 70, 72, 73, 74], "removablehandl": [32, 67, 70, 72, 73, 74], "deprec": [32, 67, 70, 72, 73, 74, 130, 138, 142, 154, 210, 211, 212, 214, 216, 217, 222, 223, 226, 227, 228, 229, 237, 239, 240, 241, 242, 311], "favor": [32, 67, 70, 72, 73, 74, 301], "register_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_buff": [32, 67, 70, 72, 73, 74], "running_mean": [32, 67, 70, 72, 73, 74], "alongsid": [32, 67, 70, 72, 73, 74, 305], "num_featur": [32, 67, 70, 72, 73, 74], "register_forward_hook": [32, 67, 70, 72, 73, 74, 155, 175], "with_kwarg": [32, 67, 70, 72, 73, 74], "always_cal": [32, 67, 70, 72, 73, 74], "posit": [32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 105, 106, 123, 124, 127, 130, 131, 169, 296, 301, 305, 306, 308], "signatur": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200, 224, 296, 299, 306], "register_module_forward_hook": [32, 67, 70, 72, 73, 74], "regardless": [32, 67, 70, 72, 73, 74, 212, 223, 226], "register_forward_pre_hook": [32, 67, 70, 72, 73, 74], "invok": [32, 67, 70, 72, 73, 74], "And": [32, 67, 70, 72, 73, 74], "forward_pr": [32, 67, 70, 72, 73, 74], "register_module_forward_pre_hook": [32, 67, 70, 72, 73, 74], "grad_input": [32, 67, 70, 72, 73, 74], "grad_output": [32, 67, 70, 72, 73, 74], "subsequ": [32, 67, 70, 72, 73, 74, 302], "technic": [32, 67, 70, 72, 73, 74, 300, 302], "caller": [32, 67, 70, 72, 73, 74], "register_module_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "backward_pr": [32, 67, 70, 72, 73, 74], "register_module_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "register_load_state_dict_post_hook": [32, 67, 70, 72, 73, 74], "incompatible_kei": [32, 67, 70, 72, 73, 74], "clear": [32, 67, 70, 72, 73, 74, 267], "register_modul": [32, 67, 70, 72, 73, 74, 297], "alia": [32, 67, 70, 72, 73, 74], "register_paramet": [32, 67, 70, 72, 73, 74], "register_state_dict_pre_hook": [32, 67, 70, 72, 73, 74], "keep_var": [32, 67, 70, 72, 73, 74, 130], "made": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 196, 214, 224, 237, 299, 300, 302, 305, 307], "requires_grad_": [32, 67, 70, 72, 73, 74], "autograd": [32, 67, 70, 72, 73, 74, 130], "freez": [32, 67, 70, 72, 73, 74], "finetun": [32, 67, 70, 72, 73, 74], "gan": [32, 67, 70, 72, 73, 74], "share_memori": [32, 67, 68, 70, 72, 73, 74, 299], "share_memory_": [32, 67, 70, 72, 73, 74, 310], "destin": [32, 34, 36, 39, 67, 70, 72, 73, 74, 100, 130, 132, 144], "averag": [32, 67, 70, 72, 73, 74, 130, 135, 196, 218, 219, 273, 299, 301], "shallow": [32, 67, 70, 72, 73, 74, 130, 302], "pleas": [32, 67, 70, 72, 73, 74, 130, 294], "detach": [32, 67, 70, 72, 73, 74, 130, 224, 239, 240, 241, 242, 299], "non_block": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "memory_format": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "channels_last": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "complex": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200, 299, 300], "integr": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 151, 159, 163, 200, 295, 305, 306, 307], "unchang": [32, 67, 70, 72, 73, 74, 98, 101, 114, 126, 129, 130, 132, 134, 194, 200, 272, 299, 308], "tri": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "pin": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "4d": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "ignore_w": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "1913": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "3420": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "5113": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "2325": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "torch_doctest_cuda1": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "gpu1": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "1914": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "5112": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200, 306], "2324": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "float16": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "cdoubl": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "3741": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "j": [32, 35, 58, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200, 297], "2382": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "5593": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200, 306], "4443": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "complex128": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "6122": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "1150": [32, 67, 70, 72, 73, 74, 98, 114, 126, 129, 130, 132, 134, 200], "to_empti": [32, 67, 70, 72, 73, 74], "dst_type": [32, 67, 70, 72, 73, 74], "xpu": [32, 67, 70, 72, 73, 74], "set_to_non": [32, 67, 70, 72, 73, 74], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 308], "discretebox": [33, 67, 70, 72, 73, 74, 301, 305, 311], "chosen_data": [34, 54], "rewarddata": [34, 54, 293], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 88], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 306], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 99, 102, 114, 130, 134, 267, 307], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 291], "determin": [34, 35, 36, 39, 41, 52, 58, 114, 134, 196, 300, 305], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 153, 180], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 302], "memmap": [34, 36, 39, 55, 73, 74, 135, 272, 308], "unbind": [34, 36, 39, 159], "alpha": [35, 41, 58, 146, 211, 216, 225, 227, 229, 299, 308, 310], "ep": [35, 41, 58, 135, 196, 212, 230, 273, 299, 300, 302], "1e": [35, 41, 58, 135, 153, 156, 169, 180, 299, 300, 301, 305], "08": [35, 41, 58, 300, 301, 302, 306], "collate_fn": [35, 38, 41, 42, 52, 53, 308, 310], "prefetch": [35, 38, 41, 42, 52, 53, 54, 299, 300, 302, 308], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 94, 114, 132, 147, 148, 149, 150, 151, 152, 155, 156, 157, 163, 168, 170, 171, 173, 174, 176, 177, 183, 193, 196, 210, 211, 215, 217, 218, 219, 220, 221, 222, 225, 226, 229, 230, 239, 244, 252, 307], "ab": [35, 58, 114, 132, 135, 147, 152, 156, 157, 163, 168, 170, 171, 173, 174, 176, 177, 183, 210, 211, 215, 218, 219, 220, 221, 222, 225, 226, 229, 307], "1511": [35, 58, 157], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 180, 197, 201, 293, 296], "null": [35, 41, 58, 93], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 308], "merg": [35, 38, 41, 42, 52, 53, 306], "mini": [35, 38, 41, 42, 52, 53, 305], "decid": [35, 38, 41, 42, 310], "rb": [35, 38, 41, 42, 52, 53, 94, 118, 300, 302, 305, 307, 308, 310], "meth": [35, 38, 41, 42, 224], "incompat": [35, 38, 41, 42, 308], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 308], "tensordictprioritizedreplaybuff": [35, 293, 310], "simplifi": [35, 306, 308], "manual_se": [35, 38, 41, 42, 92, 101, 111, 118, 164, 165, 172, 186, 193, 194, 196, 204, 210, 211, 213, 222, 229, 305, 306, 310, 311], "_weight": [35, 41, 308, 310], "arrai": [35, 40, 299, 308], "update_prior": [35, 58, 272, 297, 300, 308, 310], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 131], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 125, 299, 308], "nonetyp": [36, 39], "logit": [36, 40, 164, 165, 172, 193, 216, 295], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 67, 70, 72, 73, 74, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207], "text": [37, 40, 43, 196, 301], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 147, 152, 173], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 308], "inde": [37, 101, 301, 306], "might": [37, 125, 262, 294, 299, 311], "writer": [38, 42, 52, 53, 60, 64, 293, 301], "randomsampl": [38, 42, 52, 53, 293, 299], "roundrobinwrit": [38, 42, 52, 53, 293], "Not": 38, "ref_model": 40, "reward_model": [40, 206], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 109], "kl": [40, 109, 219, 223], "penalti": [40, 223], "strai": 40, "far": [40, 158, 181, 182, 306, 311], "calcul": [40, 118], "gpt2rewardmodel": 40, "get_dataload": [40, 293], "promptdata": [40, 293], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 306, 308], "reward_kl": [40, 109], "reward_raw": 40, "sample_log_prob": [40, 187, 188, 189, 197, 201, 203, 226, 284, 301, 305, 310], "create_rollout_td": 40, "log_prob": [40, 153, 164, 165, 172, 182, 201], "log_ratio": 40, "kl_coef": 40, "plu": [40, 306], "replic": 40, "rindex": 40, "multipli": [40, 211, 212, 216, 223, 225, 226, 227, 229, 273, 299], "term": [40, 109, 167, 168, 209, 210, 216, 277, 300, 301, 305], "subtract": [40, 125], "ve": [40, 299, 302], "eo": 40, "limit": [40, 71, 94, 109, 299, 300, 302, 305, 306], "generation_config": 40, "generationconfig": 40, "ti": [40, 248, 249, 250, 251, 253, 254, 255, 256, 300], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 211, 214, 216, 217, 222, 224, 227, 229, 231, 237, 308, 310], "td_error": [41, 42, 211, 213, 214, 216, 217, 222, 224, 227, 229, 231, 237, 299, 308, 310], "reduct": [41, 58], "prioritizedreplaybuff": [41, 293, 310], "update_tensordict_prior": [41, 299, 308, 310], "prioritizedsampl": [41, 42, 214, 217, 237, 293, 299, 308], "min": [41, 58, 180, 181, 182, 191, 196, 211, 212, 216, 225, 227, 229, 300, 301, 305], "median": [41, 58, 197, 201], "len": [41, 55, 56, 65, 146, 161, 166, 299, 306, 307, 308, 310], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 87, 141], "huggingfac": [43, 195], "co": [43, 306], "doc": [43, 300, 305], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 293], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 72, 73, 74, 299, 300], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 70, 132, 144, 257, 308, 311], "condit": [45, 125, 192, 193, 198, 199, 209, 299, 306, 308], "elementwis": 45, "os": [45, 300], "cpu_count": 45, "vocabulari": 45, "loader": [45, 301], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 92, 94, 95, 96, 97, 99, 101, 102, 103, 105, 108, 111, 115, 116, 118, 122, 124, 127, 132, 135, 144, 190, 191, 194, 196, 201, 214, 237], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 300], "batch_dimens": 45, "filder": 45, "tempfil": [45, 287, 299, 300], "randint": [45, 128, 308], "20": [45, 67, 70, 72, 73, 74, 191, 266, 299, 300, 301, 302, 305, 306, 310, 311], "temporarydirectori": [45, 299, 300], "tmpdir": [45, 299, 300], "data_memmap": 45, "exclus": [48, 49, 105, 159, 164, 165, 192, 193, 198, 199, 230, 231, 239, 240, 241, 242, 243, 291, 295], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_timeout_as_don": 52, "env_kwarg": [52, 289, 290, 299], "metadata": [52, 301, 305, 311], "reconstruct": [52, 219, 299, 311], "timeout": 52, "recov": [52, 190, 196, 202, 222, 304], "regard": [52, 155, 193, 210, 217, 226, 299, 301, 306], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 72, 184, 289, 290, 296, 301, 302, 308, 310], "left": [52, 98, 100, 109, 114, 116, 127, 129, 132, 134, 194, 300, 301], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 118, 121, 125, 145, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 300, 305], "absent": 52, "traj_split": 52, "observationnorm": [52, 135, 291, 299, 300, 301, 302, 310], "maze2d": 52, "umaz": 52, "loc": [52, 109, 111, 120, 158, 169, 181, 182, 187, 188, 189, 197, 201, 203, 210, 211, 222, 226, 227, 228, 229, 279, 284, 291, 295, 299, 300, 301, 302, 305, 310], "128": [52, 149, 152, 300, 302, 306, 307, 308], "public": [53, 114, 134], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 88], "adult_onehot": [53, 88], "mushroom_num": [53, 88], "mushroom_onehot": [53, 88], "covertyp": [53, 88], "shuttl": [53, 88], "magic": [53, 88], "infinit": [54, 308], "three": [54, 295, 297, 301, 305, 306, 308], "block": [54, 295, 302], "pairwisedataset": [54, 293], "256": [54, 152, 299, 300, 301, 305, 306], "scratch_dir": [55, 299, 308], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 191, 308, 311], "bar": [55, 56, 65, 191, 268, 269, 271, 275, 297, 300], "attach": [55, 56, 57, 63, 65, 300], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 164, 165, 299], "auto": [56, 65, 196, 211, 216, 225, 227, 229, 231, 296, 305], "zero_": [56, 65, 141], "max_capac": [58, 299, 308], "uniformli": [59, 224, 311], "roundrobin": [60, 64], "piec": [60, 64, 66, 299, 300, 301, 305, 306, 308], "consum": [62, 300, 301, 305, 308], "incomplet": 62, "unlik": [62, 217, 226, 300, 310], "fresh": 62, "caution": [62, 137, 311], "shuffl": [62, 305], "haven": [62, 307], "remain": [62, 100, 101, 109, 125, 168], "draw": [62, 194], "__len__": 63, "_inplace_upd": [67, 72, 73, 74, 75, 76, 88, 89, 90, 130], "_batch_lock": [67, 72, 73, 74, 75, 76, 88, 89, 90, 130], "continuousbox": [67, 70, 72, 73, 74, 141, 301, 305, 306, 310, 311], "unboundedcontinuoustensorspec": [67, 70, 71, 72, 73, 74, 92, 99, 102, 126, 141, 145, 163, 186, 200, 203, 205, 228, 293, 301, 302, 305, 306, 311], "another_act": [67, 70, 72, 73, 74], "mutabl": [67, 70, 72, 73, 74], "batch_lock": [67, 69, 70, 72, 73, 74, 126, 130, 306], "immut": [67, 70, 72, 73, 74, 116, 130], "another_don": [67, 70, 72, 73, 74], "fake_tensordict": [67, 70, 72, 73, 74, 300], "fake": [67, 70, 72, 73, 74, 299, 300], "overridden": [67, 70, 72, 73, 74, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 302], "afterward": [67, 70, 72, 73, 74, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207, 311], "silent": [67, 70, 72, 73, 74, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 166, 169, 170, 171, 173, 176, 177, 179, 184, 190, 191, 193, 194, 196, 199, 204, 207], "attibut": [67, 70, 72, 73, 74], "speak": [67, 70, 72, 73, 74, 299], "rand_act": [67, 70, 72, 73, 74], "_step": [67, 70, 72, 73, 74, 92, 99, 102, 105, 116, 125], "privat": [67, 70, 72, 73, 74, 306, 311], "another_reward": [67, 70, 72, 73, 74], "callback": [67, 70, 72, 73, 74, 305], "auto_reset": [67, 70, 72, 73, 74, 306], "auto_cast_to_devic": [67, 70, 72, 73, 74, 305], "break_when_any_don": [67, 70, 72, 73, 74, 305], "return_contigu": [67, 70, 72, 73, 74, 137, 304], "soon": [67, 70, 72, 73, 74], "ndim": [67, 70, 72, 73, 74], "concomitt": [67, 70, 72, 73, 74], "workspac": [67, 70, 72, 73, 74], "prevail": [67, 70, 72, 73, 74], "creator": [68, 280, 281, 289, 290, 291], "substitut": [68, 135], "vecnorm": [68, 291], "env_creat": [68, 299], "test_env1": 68, "_td": 68, "observation_count": [68, 311], "test_env2": 68, "sleep": [68, 311], "ps": 68, "p1": 68, "p2": 68, "join": [68, 293, 300, 301], "9934": 68, "env_str": 69, "info_dict_read": 70, "set_info_dict_read": 70, "put": [70, 135, 291, 295, 300, 301, 302, 306], "read_act": 70, "read_don": 70, "reader": [70, 300], "frame_skip": [70, 77, 78, 79, 81, 82, 86, 106, 268, 271, 278, 297, 299, 300, 301, 310], "broken": [70, 137], "read_ob": 70, "dictat": [70, 197, 201, 226, 299, 306], "inner": [70, 101, 297, 300, 301, 305, 311], "read_reward": 70, "baseinfodictread": 70, "info_dict": 70, "hoc": 70, "dict_read": 70, "default_info_dict_read": 70, "my_info_kei": 70, "some_env": 70, "environn": 71, "safeti": 71, "constraint": [71, 301, 305], "behav": [71, 85, 172, 222, 307], "mymbenv": [71, 145, 163], "world_model": [71, 145, 163, 219], "super": [71, 92, 99, 102, 145, 155, 163, 205, 211, 213, 216, 222, 227, 229, 231, 299, 306, 310], "hidden_observ": [71, 145, 163], "mlp": [71, 145, 146, 148, 149, 150, 151, 159, 160, 163, 166, 187, 192, 214, 284, 295, 300, 304, 307, 310], "worldmodelwrapp": [71, 145, 163], "activation_class": [71, 145, 146, 148, 149, 150, 151, 156, 157, 161, 163, 166, 300, 305, 310], "relu": [71, 145, 152, 163, 169, 209], "activate_last_lay": [71, 145, 151, 161, 163], "depth": [71, 145, 146, 148, 149, 150, 151, 156, 157, 161, 163, 166, 170, 171, 192, 295, 300, 304, 305], "run_type_check": 71, "equal": [72, 73, 74, 110, 111, 146, 154, 159, 161, 166, 230, 234, 266, 289, 290, 299, 301, 307], "readthedoc": 72, "en": 72, "python_interfac": 72, "thread": 72, "task_id": 72, "my_env_fun": [73, 74], "custom_attribute_list": [73, 74], "custom_attribut": [73, 74], "custom_method_list": [73, 74], "custom_method": [73, 74], "deploi": [73, 74], "slight": [73, 74, 300], "overhead": [73, 74], "share_individual_td": [73, 74], "shared_memori": [73, 74], "policy_proof": [73, 74], "ll": [73, 74, 299, 300, 301, 302, 305, 311], "hidden": [73, 74, 156, 159, 160, 170, 171, 176, 177, 187, 188, 189, 191, 200, 203, 212, 223, 226, 295, 302, 304, 310], "update_kwarg": [73, 74], "googl": [75, 76, 301, 302, 305], "ant": [75, 76, 307], "get_environ": 76, "87": [76, 299, 300, 306, 307], "acrobot": [76, 311], "fetch": [76, 109, 307, 308, 311], "dm_control": [77, 78, 299, 304, 311], "task_nam": 77, "cheetah": [77, 78, 299, 311], "mo": [81, 82], "minecart": [81, 82], "mo_gym": 82, "sumbodul": 83, "wish": [84, 308], "placehold": [85, 130], "secur": 85, "snake": [86, 87], "6x6": [86, 87], "td1": [87, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 299], "12x12": 87, "tsp50": 87, "tsp100": 87, "106": [88, 306], "scenario": [89, 90, 299, 305, 306], "flock": [89, 90], "continuous_act": [89, 90, 305], "cohesion_rew": 89, "collision_rew": 89, "separation_rew": 89, "velocity_rew": 89, "18": [89, 90, 166, 299, 300, 302, 305, 306, 307, 311], "agent_collision_rew": 90, "agent_distance_rew": 90, "model_bas": [91, 145, 163], "mask_kei": [92, 115], "action_mask": 92, "adapt": [92, 223, 299, 306], "masker": 92, "binarydiscretetensorspec": [92, 214, 216, 237, 293], "maskedenv": 92, "ones_lik": 92, "scatter": 92, "unsqueez": [92, 94, 95, 128, 131, 160, 299, 302, 305, 306], "_set_se": [92, 99, 102, 306], "tranform": [92, 98, 103, 108, 122, 124, 125, 129, 133], "transform_reward_spec": [93, 97, 98, 99, 100, 109, 116, 119, 120, 129, 131], "as_invers": 94, "account": [94, 164, 165, 295, 300, 302, 308], "movement": 94, "veloc": [94, 305, 306, 311], "propos": [94, 162, 221, 230, 284, 295, 302, 308], "pdf": [94, 147, 148, 149, 150, 151, 155, 173, 193, 196, 217, 227, 230, 239, 244, 252, 284], "1312": [94, 300], "5602": 94, "uesd": 94, "unsqueezetransform": [94, 306, 308], "consumpt": 94, "followin": 94, "pictur": 94, "cartpol": [94, 300, 302, 308, 311], "pixels_trsf": [94, 308], "grayscal": [94, 300, 302, 308, 311], "tensordictreplaybuff": [94, 272, 287, 293, 299, 300, 302, 308], "data_exclud": [94, 308], "_buffer": [94, 127], "transform_observation_spec": [94, 95, 96, 97, 98, 99, 100, 103, 105, 107, 108, 109, 111, 116, 117, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 306], "del_kei": [95, 132, 304, 306], "unsqueeze_if_oor": 95, "observation_posit": 95, "observation_veloc": 95, "delet": 95, "key1": [95, 266, 274], "key2": [95, 266, 274], "crop": [96, 115, 258], "center": [96, 258], "width": [96, 117], "height": [96, 117], "squar": [96, 158, 181, 182, 258], "out_keys_inv": [97, 111, 112, 116, 129, 306], "scalar": [97, 119, 149, 151, 167, 168, 190, 194, 196, 207, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 295, 300, 306], "permit": [97, 105, 131], "rewardsc": [98, 130, 299, 300, 302], "rewardclip": 98, "transformed_env": [98, 129, 130], "transform_env_devic": [98, 100, 129], "transform_input_spec": [98, 99, 100, 101, 111, 116, 121, 124, 129, 131], "transform_output_spec": [98, 100, 109, 116, 129], "untouch": [98, 100, 109, 116, 129], "transformfull_done_spec": [98, 100, 109, 116, 129], "dtype_in": 99, "dtype_out": 99, "scan": [99, 102, 202, 203], "expos": [99, 102, 202, 300], "not_transform": [99, 102], "rule": [99, 102, 201, 295, 301], "constructedw": [99, 102], "myenv": [99, 102], "orig_devic": 100, "unspecifi": 100, "transform_done_spec": [100, 129], "num_actions_effect": 101, "max_act": 101, "include_forward": 101, "dimension": [101, 159, 239, 244, 252, 305], "num_act": [101, 216], "action_out": 101, "_call": [101, 105, 306], "excluded_kei": 103, "finit": [104, 308], "first_dim": 105, "last_dim": 105, "allow_positive_dim": [105, 131], "flatten": [105, 272, 302, 305], "th": [105, 131, 306], "frameskip": 105, "repeatedli": [106, 301, 305], "init_kei": 108, "is_init": [108, 159, 196, 302], "tracker": 108, "probabilistictensordictmodul": [109, 201, 202, 310], "coef": 109, "pi_curr": 109, "pi_0": 109, "constrain": [109, 159, 226], "overfit": 109, "fine": [109, 307], "probabilist": [109, 197, 293, 301, 310], "get_dist": [109, 201, 202], "mod": [109, 159, 204, 302], "normalparamextractor": [109, 295, 301, 305], "probabilisticactor": [109, 187, 188, 189, 191, 210, 211, 215, 216, 222, 225, 226, 227, 228, 229, 231, 295, 299, 301, 305], "tanhnorm": [109, 187, 188, 189, 197, 203, 210, 211, 222, 226, 227, 228, 229, 231, 293, 301, 305, 310], "n_ob": [109, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231], "n_act": [109, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231], "distribution_class": [109, 187, 188, 189, 191, 197, 201, 203, 210, 211, 216, 222, 226, 227, 228, 229, 295, 299, 301, 305, 310], "return_log_prob": [109, 187, 188, 189, 197, 201, 203, 228, 295, 301, 305, 310], "apply_": 109, "copy_": [109, 299], "formulat": 109, "diverg": [109, 159, 197, 201, 219, 223], "noop": [110, 310], "30": [110, 176, 177, 300, 301, 305, 306], "trial": 110, "op": [110, 190, 194, 277], "randomli": [110, 111, 126, 194, 197, 201, 305, 306, 308], "noop_max": 110, "standard_norm": [111, 120, 299, 300, 302], "affin": [111, 120], "layer": [111, 135, 146, 148, 149, 156, 159, 161, 166, 167, 168, 170, 171, 178, 179, 185, 195, 204, 295, 300, 301, 302, 307], "normal": [111, 135, 146, 158, 161, 164, 165, 169, 181, 182, 190, 197, 201, 212, 223, 226, 271, 273, 291, 295, 297, 302, 305, 311], "set_default_tensor_typ": 111, "doubletensor": 111, "isclos": 111, "next_ob": [111, 239, 240, 241, 242, 310], "rubric": [111, 203], "init_stat": [111, 299, 300, 301, 302], "3752e": 111, "01": [111, 196, 207, 212, 223, 226, 299, 300, 302, 305, 306, 307, 309], "5087e": 111, "03": [111, 299, 300, 306, 307, 309], "9294e": 111, "9636": 111, "5608": 111, "6408": 111, "num_it": [111, 300, 301], "reduce_dim": [111, 299, 300, 301, 302], "cat_dim": [111, 299, 300, 301, 302], "keep_dim": [111, 300, 302], "constant": [111, 125, 297, 299, 301, 302, 311], "statist": [111, 135, 228, 291, 299, 300, 301, 311], "approach": [111, 299, 301, 311], "gaussian": [111, 126, 145, 163, 167, 168, 173, 190, 301], "empir": [111, 145, 163, 197, 201, 299, 301, 305], "3d": 111, "third": [111, 193, 305], "r3m": [114, 307], "resnet": [114, 132, 134], "visual": [114, 132, 134, 301, 306], "embed": [114, 132, 133, 134, 174, 186, 187, 188, 189, 200, 205, 307], "ego4d": [114, 132, 134], "univers": [114, 132, 134], "suraj": [114, 132], "nair": [114, 132], "aravind": [114, 132], "rajeswaran": [114, 132], "vikash": [114, 132, 134], "kumar": [114, 132, 134], "chelsea": [114, 132], "finn": [114, 132], "abhinav": [114, 132], "gupta": [114, 132], "2203": [114, 132, 163, 307], "12601": [114, 132, 307], "_init": [114, 132, 299], "snippet": [114, 132, 299], "resnet50": [114, 134, 307], "model_nam": [114, 132, 134, 261], "resnet34": 114, "resnet18": 114, "r3m_vec": [114, 307], "feed": [114, 134, 224, 295, 299, 305, 308], "244": [114, 134, 306], "stack_imag": [114, 134], "tread": [114, 134], "separet": [114, 134], "hub": [114, 134, 307], "resnet50_weight": [114, 134], "imagenet1k_v1": [114, 134], "download_path": [114, 134], "tensor_pixels_kei": [114, 134], "dest": [114, 132, 134, 200], "sub_seq_len": 115, "sample_dim": [115, 299], "primarili": 115, "hesit": 115, "request": 115, "robust": 115, "mix": [115, 174, 183, 237, 299, 305], "NOT": 115, "improp": 115, "create_copi": 116, "renam": [116, 118, 144, 299], "stuff": 116, "braxenv": [116, 293], "newnam": 116, "interpol": [117, 300, 302], "bilinear": [117, 302], "r2g": 118, "99": [118, 135, 163, 220, 233, 238, 245, 287, 299, 300, 301, 306, 310], "reward_to_go": 118, "bernoulli_": 118, "9010": 118, "9404": [118, 245], "9701": [118, 245], "9900": [118, 245], "0000": [118, 194, 204, 245, 301, 302, 306, 310], "crash": 118, "clamp_min": 119, "clamp_max": 119, "clip_min": 119, "clip_max": 119, "episode_": 121, "reward1": 121, "reward2": 121, "ho": 121, "excludetransform": [122, 308], "squeeze_dim": 123, "step_count_kei": 124, "recognis": 124, "target_return": 125, "guid": [125, 294, 299, 305], "accordingli": [125, 198, 302], "conjunct": [125, 300], "hindsight": 125, "relabel": 125, "reward2gotransform": 125, "primer": [126, 302], "default_valu": [126, 302], "unit": [126, 145, 156, 170, 171, 176, 177, 301], "transfomedenv": 126, "mykei": 126, "__unless": 126, "exists__": 126, "dtype_or_devic": 126, "pool": 127, "from_int": 128, "255": [128, 306, 308], "ri": 128, "principl": 129, "cattransform": 129, "notabl": 129, "rewardsum": [129, 305], "cache_spec": 130, "anymor": [130, 200], "set_missing_toler": 130, "keyerror": 130, "unsqueeze_dim": [131, 306], "danger": 131, "vc1": 132, "vc1_vec": 132, "small": [132, 299, 301, 305, 311], "untrain": 132, "make_noload_model": 132, "naiv": 132, "vip": [133, 134, 307], "toward": 134, "implicit": [134, 222, 308], "jason": 134, "ma": 134, "shagun": 134, "sodhani": 134, "dinesh": 134, "jayaraman": 134, "osbert": 134, "bastani": 134, "ami": 134, "zhang": 134, "vip_vec": 134, "shared_td": 135, "decai": [135, 190, 194, 230, 273, 299, 300, 302, 311], "9999": [135, 306], "0001": [135, 156, 169, 301, 306], "fly": [135, 223, 296, 301, 306, 308, 311], "to_observation_norm": 135, "underflow": [135, 273], "build_td_for_shared_vecnorm": 135, "memmori": 135, "memmap_": 135, "queue": [135, 308], "td_share": 135, "v": [135, 187, 222, 229, 295, 299, 300], "state_dim": [136, 147, 152, 173, 176, 177, 191], "action_dim": [136, 147, 148, 150, 152, 173, 191, 299, 304], "gsde": [136, 227, 291], "func": 136, "gsdemodul": 136, "check_dtyp": 137, "short": [137, 300, 301, 305], "discrep": [137, 210, 212, 213, 214, 223, 226, 228, 237], "imposs": 137, "probabilistictdmodul": [142, 143, 161, 197, 201, 238, 271], "next_tensordict": 144, "keep_oth": [144, 306], "exclude_reward": 144, "exclude_don": 144, "exclude_act": 144, "next_": 144, "funtion": [144, 306], "cross": 145, "entropi": [145, 210, 211, 212, 216, 222, 223, 225, 226, 227, 229, 231, 305], "botev": 145, "et": 145, "al": [145, 311], "2013": 145, "cem": 145, "plan": [145, 162, 163], "varianc": [145, 158, 169, 181, 182, 296, 299, 301, 305], "rank": 145, "k": 145, "repeat": [145, 301, 305, 306], "maximis": [145, 148, 150, 163, 295, 299, 300, 301, 305, 306], "horizon": [145, 163, 301], "modelbasedenv": [145, 163], "planning_horizon": [145, 163], "optim_step": [145, 163, 300], "mpc": [145, 162, 163], "num_candid": [145, 163], "candid": [145, 163], "top_k": [145, 163], "modelbasedenvbas": [145, 162, 163, 293], "safemodul": [145, 162, 187, 189, 201, 210, 211, 216, 222, 226, 227, 228, 229, 231, 280, 281, 287, 293, 310], "next_hidden_observ": 145, "num_cel": [146, 148, 149, 150, 151, 156, 157, 159, 161, 166, 187, 300, 301, 302, 305, 310], "elu": [146, 148, 149, 150, 151, 156, 157, 300, 310], "activation_kwarg": [146, 161], "norm_class": [146, 148, 149, 161], "norm_kwarg": [146, 161], "bias_last_lay": [146, 148, 149, 150, 151, 157, 161], "aggregator_class": [146, 148, 149, 300, 302, 310], "squashdim": [146, 148, 310], "aggregator_kwarg": [146, 148, 149, 300, 302], "squeeze_output": [146, 148, 149, 300, 302], "convolut": [146, 148, 149, 178], "neural": [146, 178, 200, 295, 300, 301, 302, 305, 306, 311], "produc": [146, 161, 166, 172, 187, 189, 191, 258, 301, 302, 308, 311], "cell": [146, 161, 166, 301], "kernel": [146, 157, 160], "cnet": 146, "34": [146, 161, 299, 300, 306], "35": [146, 161, 300, 305, 306, 307], "rectangular": 146, "transformer_config": [147, 173, 191], "decisiontransform": [147, 173], "dtconfig": [147, 152, 173], "2202": [147, 152, 173, 225], "05607": [147, 152, 173, 225], "return_to_go": [147, 152, 173, 191], "conv_net_kwarg": [148, 149], "mlp_net_kwarg": [148, 149, 150], "use_avg_pool": [148, 149], "WITH": [148, 149, 150, 151, 196, 230], "1509": [148, 149, 150, 151, 163, 196, 221, 230, 306], "02971": [148, 149, 150, 151, 196, 230], "convnet": [148, 302, 310], "ndims_in": 148, "avgpool": [148, 149], "adaptiveavgpool2d": [149, 300, 302], "400": [150, 151, 305, 306, 308], "mlp_net_kwargs_net1": 151, "mlp_net_kwargs_net2": 151, "decion": 152, "desdescrib": 152, "n_embd": 152, "n_layer": 152, "n_head": 152, "n_inner": 152, "n_posit": 152, "resid_pdrop": 152, "attn_pdrop": 152, "gpt2config": 152, "atol": [153, 180], "06": [153, 180, 299, 300, 306], "rtol": [153, 180], "batch_shap": [153, 180], "event_shap": [153, 180], "absolut": [153, 180, 299], "densiti": [153, 164, 165, 172, 182], "mass": [153, 164, 165, 172, 182, 306], "rsampl": [153, 165, 172, 201], "sample_shap": [153, 164, 165, 172], "dqnet": 154, "atom": 154, "softmax": [154, 165, 172, 192, 193], "action_spac": [155, 175, 192, 193, 198, 199, 210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 302], "var_num": [155, 175, 192, 193, 199], "action_value_kei": [155, 175, 192, 193, 198, 199, 224, 237], "action_mask_kei": [155, 175, 192, 193, 194, 198, 199], "perspect": [155, 193, 217, 301], "1707": [155, 193, 217, 226], "06887": [155, 193, 217], "mult": [155, 166, 175, 192, 193, 198, 199], "functional_modul": [155, 175, 198, 200, 203, 295], "make_funct": [155, 175, 197, 198, 200, 203, 205, 224, 295, 310], "tensordict_modul": [155, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 213, 216, 222, 226, 227, 228, 229, 231, 295], "nbin": [155, 192, 295], "customdistributionalqv": 155, "log_softmax": [155, 192], "one_hot": [155, 165, 175], "qvalue_actor": [155, 175, 192, 198, 295], "std_bia": 156, "std_min_val": 156, "belief": [156, 170, 176, 177], "1912": [156, 218, 219, 220], "01603": [156, 218, 219, 220], "softplu": [156, 169, 207, 208, 209], "out_features_valu": 157, "cnn_kwarg": [157, 300], "mlp_kwarg": [157, 160, 300], "duel": 157, "cnn": [157, 300, 310], "06581": 157, "512": [157, 300, 306, 308], "upscal": [158, 181, 182], "tanh_loc": [158, 181, 182], "event_dim": [158, 180, 181], "ultim": [158, 181, 182], "poor": [158, 181, 182], "explos": [158, 181, 182], "switch": [158, 182], "sigma": [158, 173, 181, 182, 190, 196, 301], "formula": [158, 181, 182, 210, 212, 223, 226, 296, 301], "embedd": [159, 160], "lstmcell": 159, "correspont": 159, "input_s": [159, 160, 302], "hidden_s": [159, 160, 302], "num_lay": [159, 170, 171], "b_ih": 159, "b_hh": 159, "introduc": [159, 196, 299], "proj_siz": 159, "recurrent_state_h": [159, 302], "recurrent_state_c": [159, 302], "triplet": [159, 198, 199], "custom_kei": 159, "temporal_mod": 159, "set_temporal_mod": 159, "tensordictsequenti": [159, 192, 194, 202, 295, 299, 302, 304, 307, 310], "seq": [159, 302, 304], "lstm_modul": 159, "rs_h": 159, "rs_c": 159, "set_recurrent_mod": [159, 302], "batch_first": [159, 302], "hidden0": 159, "hidden1": 159, "policy_infer": 159, "policy_train": 159, "traj_td": 159, "td_inf": 159, "assert_clos": 159, "lstm_kwarg": 160, "next_observ": [160, 210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 304], "time_step": 160, "2d": [160, 305], "hidden0_in": 160, "hidden1_in": 160, "hidden0_out": 160, "hidden1_out": 160, "single_bias_last_lay": 161, "layer_class": 161, "layer_kwarg": 161, "perceptron": 161, "seamless": 161, "lazylinear": [161, 295, 301, 306, 307, 310], "42": [161, 210, 211, 213, 222, 229, 300, 301, 305, 306, 307], "noisylinear": [161, 167, 293, 300], "noisylazylinear": [161, 293], "At": [162, 194, 300, 301, 302, 304, 306, 307], "mpcplanner": 162, "tensordict_out": [162, 311], "mppi": 163, "covari": 163, "william": [163, 228], "aldrich": 163, "theodor": 163, "01149": 163, "hansen": 163, "wang": 163, "su": 163, "04955": 163, "valueoper": [163, 187, 188, 189, 210, 211, 212, 213, 216, 222, 223, 226, 227, 228, 229, 231, 287, 295, 299, 301], "tdlambdaestim": [163, 293, 299], "value_net": [163, 214, 228, 239, 240, 241, 242, 301], "adv": 163, "lmbda": [163, 233, 239, 242, 244, 250, 251, 252, 255, 256, 296, 299, 301, 305], "95": [163, 233, 299, 300, 301, 302, 306, 307], "value_network": [163, 213, 214, 217, 222, 229, 239, 240, 241, 242, 296, 299, 301], "temperatur": [163, 211, 222], "neg_inf": [164, 165], "inf": [164, 165], "padding_valu": [164, 165], "www": [164, 165], "api_doc": [164, 165], "tf_agent": [164, 165], "event": [164, 165, 172, 248, 249, 250, 251, 253, 254, 255, 256, 308], "unnorm": [164, 165, 172], "sparse_mask": [164, 165], "dens": [164, 165], "0831": [164, 165], "1203": [164, 165], "0928": [164, 165], "1972": [164, 165], "grad_method": [165, 172], "reparamgradientstrategi": [165, 172], "passthrough": [165, 172], "maskedcategor": [165, 293], "proxi": [165, 172, 296], "relaxedonehot": [165, 172], "zeros_lik": [165, 306], "sample_non_valid": 165, "n_agent_input": [166, 305], "n_agent_output": [166, 305], "centralis": [166, 305], "share_param": [166, 305], "multiag": [166, 174, 183, 237], "homogen": [166, 305], "toech": 166, "agent_network": 166, "modulelist": [166, 284, 310], "centalis": 166, "shown": [166, 295, 304, 305, 308], "std_init": [167, 168], "matrix": [167, 168], "initialize_paramet": 167, "isol": 167, "1706": [168, 183], "10295v3": 168, "induc": 168, "aid": 168, "scale_map": 169, "biased_softplus_1": 169, "scale_lb": [169, 176, 177], "exp": [169, 209], "module_norm": 169, "channel": [170, 171, 300], "decod": 170, "1803": [170, 171, 174], "10122": [170, 171], "rnn_hidden": 170, "latent": 171, "excacli": 172, "inres": 173, "mu": [173, 196, 301], "state_shap": [174, 237], "mixing_embed_dim": [174, 237], "qmix": [174, 305], "mixer": [174, 183, 237], "monoton": 174, "hyper": 174, "11485": 174, "qmixerloss": [174, 183], "qmix_vdn": [174, 183], "eventu": [174, 302, 306], "vdn": [174, 183], "greedi": [175, 193, 194, 199, 300, 302], "hidden_dim": [176, 177], "posterior": [176, 219], "rssm": [176, 177, 219], "1811": [176, 177], "04551": [176, 177], "obs_embed": 176, "rnn_hidden_dim": 177, "dream": 177, "tanhtransform": 181, "decomposit": 183, "05296": 183, "vmap": [184, 200, 203, 310], "hide": [184, 301, 305], "satisfi": [184, 295], "tensordictmodulebas": [184, 192, 198, 302], "vmap_dim": 184, "lam": 184, "sample_in": 184, "sample_in_td": 184, "vm": 184, "translat": [186, 197], "character": [186, 192, 197, 198, 200, 308], "overflow": [186, 192, 193, 197, 198, 199, 200, 201], "td_modul": [186, 187, 188, 189, 197, 200, 201, 203, 205, 310], "3635": 186, "0340": 186, "1476": 186, "3911": [186, 306], "1664": [186, 300, 306], "5455": 186, "2247": 186, "4583": 186, "2916": 186, "2160": 186, "5337": 186, "5193": 186, "grad_fn": [186, 194, 310], "addmmbackward0": 186, "actorvalueoper": [187, 295], "get_policy_oper": [187, 188, 189, 212, 223, 226, 295], "standalon": [187, 188, 189], "tdmodul": [187, 188, 189, 287], "get_critic_oper": 187, "common_oper": [187, 189], "policy_oper": [187, 188, 189], "value_oper": [187, 188, 189], "normalparamwrapp": [187, 188, 189, 197, 203, 210, 211, 216, 222, 226, 227, 228, 229, 231, 293, 310], "module_hidden": [187, 189], "td_module_hidden": [187, 189], "module_act": [187, 189], "td_module_act": [187, 188, 189], "module_valu": [187, 188, 189], "td_module_valu": [187, 188, 189], "state_action_valu": [187, 205, 211, 229, 238, 284, 287, 295, 299, 310], "td_clone": [187, 188, 189], "tensordictmodulewrapp": [187, 280, 281, 287], "get_policy_head": [187, 188, 189], "safesequenti": [187, 188, 189, 237], "head": [187, 189, 212, 223, 226], "get_value_head": [187, 188, 189], "get_value_oper": [187, 188, 189, 212, 223, 226], "action_modul": 188, "state_valu": [188, 189, 205, 212, 223, 226, 227, 229, 239, 240, 241, 242, 244, 246, 248, 250, 252, 253, 255, 295, 299, 301, 305], "qualiti": [189, 295], "actorcriticoper": [189, 212, 223, 226, 295], "embeddig": 189, "refet": 189, "actorcriticwrapp": [189, 295, 299], "po": 190, "sigma_init": 190, "epsilon": [190, 194, 196, 230, 273, 300, 301, 302], "sigma_end": 190, "annealing_num_step": [190, 194, 196, 299, 300, 302], "captur": [190, 194, 196], "omiss": [190, 194, 196], "warn": [190, 194, 196, 300, 311], "ommit": [190, 194, 196, 308], "inferec": 191, "set_tensor_kei": 191, "dt_inference_wrapp": 191, "baz": 191, "inference_context": 191, "obs_dim": 191, "15": [191, 196, 218, 299, 300, 302, 306, 308, 310], "tanhdelta": [191, 293, 299], "dtactor": 191, "actor_modul": [191, 310], "dist_class": 191, "dist_kwarg": 191, "distribution_kwarg": [191, 197, 201, 301, 305], "inference_actor": 191, "sequence_length": 191, "mask_context": 191, "qvaluemodul": [192, 198, 237, 302], "distributionaldqnnet": 192, "make_log_softmax": 192, "my_action_valu": [193, 199], "chanc": 193, "thid": 193, "threshold": [194, 211, 212, 301], "eps_init": [194, 196, 300, 302], "eps_end": [194, 196, 300], "explorative_polici": [194, 196], "9055": [194, 306], "9277": 194, "6295": 194, "2532": 194, "addbackward0": 194, "lmheadmodel": 195, "extract": [195, 299, 301], "actor_head": [195, 212, 223, 226], "base_model": 195, "lm_head": 195, "ornstein": 196, "uhlenbeck": 196, "ou": [196, 299], "correl": 196, "sort": 196, "noise_t": 196, "noise_": 196, "theta": [196, 301, 306], "sigma_t": 196, "sqrt": 196, "sigma_": 196, "anneal": 196, "ou_prev_nois": 196, "ou_step": 196, "increas": [196, 305], "x0": 196, "sigma_min": 196, "n_steps_ann": 196, "is_init_kei": 196, "_ou_prev_nois": 196, "_ou_step": 196, "default_interaction_typ": [197, 201], "interaction_typ": [197, 201], "set_interaction_typ": [197, 201], "cache_dist": [197, 201], "n_empirical_estim": [197, 201], "chose": 199, "functionalmodul": 200, "functionalmodulewithbuff": 200, "grucel": 200, "td_fmodul": 200, "td_function": 200, "td_state": 200, "ensembl": [200, 227], "params_repeat": 200, "td_vmap": [200, 203], "random_sampl": [200, 201], "suppli": 201, "fist": 201, "log_prob_kei": [201, 305], "probabilistictensordictsequenti": [202, 210, 212, 223, 226, 228, 280, 281, 310], "partial_toler": [202, 203, 304], "who": [202, 203], "AND": [202, 203], "tensordictsequenci": 203, "tensordictsequ": 203, "safeprobabilisticmodul": [203, 295], "spec1": 203, "net1": 203, "module1": 203, "td_module1": 203, "spec2": 203, "module2": 203, "td_module2": 203, "clamp": [204, 219, 275, 306], "boundari": [204, 301, 305], "resolut": 204, "simplest": [204, 299, 301, 302, 305, 308, 311], "9944": 204, "9991": 204, "3020": 204, "2299": [204, 306], "5418": 204, "2989": 204, "6849": 204, "3169": 204, "2690": 204, "9649": [204, 306], "5686": 204, "8602": 204, "0315": 204, "8455": [204, 306], "6027": 204, "4746": 204, "7843": 204, "7782": 204, "2111": 204, "5115": 204, "4687": 204, "5760": 204, "custommodul": 205, "cat": [205, 211, 213, 222, 227, 229, 231, 310], "imaginari": 206, "imagin": 206, "transition_model": 206, "get_reward_oper": 206, "get_transition_model_oper": 206, "min_val": [207, 209], "bias": [207, 296, 299], "_bia": 207, "invert": [208, 301], "surject": 209, "expln": 209, "biased_softplu": [209, 293], "beggin": 209, "biased_softplus_": 209, "syntax": [209, 299], "met": [209, 306], "1602": 210, "01783v2": 210, "entropy_bonu": [210, 212, 223, 226, 301], "favour": [210, 212, 223, 226], "samples_mc_entropi": [210, 212, 223, 225, 226], "mont": [210, 212, 223, 226, 299], "carlo": [210, 212, 223, 226, 299], "entropy_coef": [210, 212, 223, 226, 301, 305], "critic_coef": [210, 212, 223, 226, 301], "loss_critic_typ": [210, 212, 223, 226, 228, 301], "l1": [210, 212, 213, 214, 216, 223, 226, 227, 228, 231, 234, 237, 295, 299], "l2": [210, 212, 213, 214, 215, 216, 219, 220, 223, 226, 227, 228, 231, 234, 237, 299], "smooth_l1": [210, 211, 212, 213, 214, 216, 222, 223, 226, 227, 228, 229, 231, 234, 237, 301], "separate_loss": [210, 212, 213, 216, 222, 223, 226, 227, 228, 229, 231], "propag": [210, 212, 213, 216, 222, 223, 226, 227, 228, 229, 231, 239, 240, 241, 242, 301, 305], "advantage_kei": [210, 212, 223, 226, 228, 239, 240, 241, 242], "value_target_kei": [210, 212, 223, 226, 228, 239, 240, 241, 242, 301], "value_target": [210, 212, 223, 226, 228, 239, 240, 241, 242, 301, 305], "loss_crit": [210, 226, 301, 305], "loss_entropi": [210, 226, 301, 305], "loss_object": [210, 226, 301, 305], "recur": [210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231, 239, 240, 241, 242, 243], "next_reward": [210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231], "next_don": [210, 211, 213, 214, 216, 222, 226, 227, 228, 229, 231], "loss_obj": 210, "sacloss": [210, 221, 230, 293], "select_out_kei": [210, 211, 213, 216, 222, 226, 227, 229, 231], "throughout": [210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 301, 311], "essenti": [210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 237, 300, 306, 308], "make_value_estim": [210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 232, 237, 296, 299, 300, 305], "value_typ": [210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 233, 237, 299], "valueestim": [210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 233, 237, 293, 296, 299, 305], "hyperparam": [210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 299, 306], "enum": [210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 233, 237, 299], "default_value_estim": [210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 299], "refin": [210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237], "default_value_kwarg": [210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 237, 293, 299], "dqnloss": [210, 211, 213, 216, 217, 218, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 237, 282, 293, 296, 300, 302], "dqn_loss": [210, 211, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 232, 237], "conserv": 211, "2006": [211, 306], "04779": 211, "actor_network": [211, 213, 215, 216, 222, 225, 227, 229, 231, 299], "qvalue_network": [211, 216, 222, 227, 229, 231], "loss_funct": [211, 213, 214, 215, 216, 222, 227, 229, 231, 234, 237, 299], "alpha_init": [211, 216, 225, 227, 229], "min_alpha": [211, 216, 225, 227, 229], "max_alpha": [211, 216, 225, 227, 229], "fixed_alpha": [211, 216, 225, 227, 229], "target_entropi": [211, 216, 225, 227, 229], "prod": [211, 225, 229], "n_action": [211, 214, 225, 229], "delay_actor": [211, 213, 229, 231], "delay_qvalu": [211, 216, 227, 229, 231], "min_q_weight": 211, "max_q_backup": 211, "backup": 211, "deterministic_backup": 211, "num_random": 211, "with_lagrang": 211, "lagrang": 211, "lagrange_thresh": 211, "valueclass": [211, 213, 216, 222, 227, 229, 231], "qvalu": [211, 216, 222, 227, 229, 231, 284], "loss_actor": [211, 213, 216, 222, 227, 228, 229, 231, 270, 299, 310], "loss_alpha": [211, 216, 227, 229], "loss_alpha_prim": 211, "loss_qvalu": [211, 216, 222, 227, 229, 231], "clip_epsilon": [212, 301, 305], "normalize_advantag": [212, 223, 226, 305], "value_kei": [212, 223, 226, 239, 240, 241, 242, 299], "somemodul": [212, 223, 226], "someactor": [212, 223, 226], "value_head": [212, 223, 226], "somevalu": [212, 223, 226], "loss_modul": [212, 221, 223, 224, 226, 230, 275, 286, 287, 296, 297, 299, 300, 301, 305, 308], "ppoloss": [212, 223, 293], "delay_valu": [213, 214, 217, 228, 229, 237, 300, 302], "loss_valu": [213, 222, 228, 229, 299, 301, 305, 310], "pred_valu": [213, 231, 299, 310], "pred_value_max": [213, 299, 310], "target_valu": [213, 227, 231, 238, 296, 299, 310], "target_value_max": [213, 299, 310], "qvalueactor": [214, 237, 295, 300, 302], "mult_one_hot": [214, 216, 237], "loss_val": [214, 296, 299, 301, 302, 305, 308], "2106": 215, "01345": 215, "ste": 216, "num_qvalue_net": [216, 222, 227, 229, 231], "target_entropy_weight": 216, "onehotcategor": [216, 293], "disctount": 217, "distributionalqvalueactor": [217, 295], "input_tensordict": [217, 299], "actor_model": 218, "value_model": [218, 220], "model_based_env": 218, "dreamerenv": [218, 293], "imagination_horizon": 218, "unrol": [218, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256], "discount_loss": [218, 220], "lambda_kl": 219, "lambda_reco": 219, "lambda_reward": 219, "reco_loss": 219, "reward_loss": 219, "free_nat": 219, "nat": 219, "delayed_clamp": 219, "global_averag": 219, "value_loss": 220, "fake_data": 220, "ddpgloss": [221, 230, 287, 293, 299, 310], "td3loss": [221, 230, 293], "value_network_update_interv": 221, "contrast": [221, 308], "06461": 221, "2110": 222, "06169": 222, "expectil": 222, "tau": [222, 230, 299, 300], "antmaz": 222, "sticht": 222, "loss_value_diff": 222, "diff": 222, "old_polici": 223, "new_polici": 223, "old": [223, 311], "distanc": [223, 234, 238, 239, 305], "apart": [223, 305], "dtarg": 223, "samples_mc_kl": 223, "analyt": 223, "decrement": 223, "loss_": [224, 270, 296, 299], "equip": [224, 302], "gh": 224, "_acceptedkei": 224, "dataclass": [224, 284], "_forward_value_estimator_kei": 224, "alter": [224, 295], "value_estim": [224, 239, 240, 241, 242, 243, 296, 299, 305], "myloss": 224, "action2": 224, "convert_to_funct": [224, 299], "expand_dim": 224, "create_target_param": [224, 299], "compare_against": [224, 299], "funs_to_decor": 224, "stuctur": 224, "_param": 224, "expans": 224, "resampl": 224, "_target_param": 224, "valueestimatorbas": [224, 293], "blend": 224, "upcom": [224, 248, 249, 250, 251, 253, 254, 255, 256, 299], "proxim": [226, 301, 305], "optimis": [226, 271, 301, 305], "flavour": [226, 305, 310], "clipppoloss": [226, 293, 301, 305], "klpenppoloss": [226, 293], "regularis": 226, "06347": 226, "gae": [226, 293, 296, 299, 301, 305], "ppo_loss": 226, "tdlambda": [226, 233, 296, 299], "base_lay": 226, "randn_lik": 226, "samplelogprob": 226, "openreview": [227, 284], "ay8zfzm0tdd": [227, 284], "sub_sample_len": 227, "subsampl": [227, 266, 297], "action_log_prob_actor": 227, "state_action_value_actor": [227, 231], "connectionist": 228, "1992": 228, "doi": 228, "1007": 228, "bf00992696": 228, "actor_net": [228, 299, 301], "1801": 229, "01290": 229, "applic": [229, 237, 306], "1812": 229, "05905": 229, "redqloss": [230, 293], "math": 230, "theta_t": [230, 306], "theta_": [230, 306], "polyak": 230, "policy_nois": 231, "noise_clip": 231, "next_state_valu": [231, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 293], "td0": [232, 299], "v2": [234, 248, 249, 250, 251, 253, 254, 255, 256, 284], "strict_shap": 234, "view_a": 234, "qmixer": [237, 293], "local_valu": 237, "visibl": [237, 305], "dafault": 237, "acceptedkei": 237, "global_valu": 237, "premad": 237, "penultim": 237, "local_value_network": 237, "mixer_network": 237, "suggest": [237, 305], "value_modul": [237, 301, 310], "qnet": [237, 299], "next_val_kei": 238, "pred_next_v": 238, "usus": 238, "mse": 238, "q_valu": 238, "n_steps_to_next": 238, "value_next_st": 238, "1506": [239, 244, 252], "02438": [239, 244, 252], "exponenti": [239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 273], "average_ga": [239, 301], "skip_exist": [239, 240, 241, 242], "advang": 239, "gradient_mod": 239, "value_error": [239, 240, 241, 242, 243], "sign": 239, "unused_arg": 239, "target_param": [239, 240, 241, 242, 243, 299, 305], "98": [239, 240, 241, 242, 300, 306], "94": [239, 242, 300, 306], "unpack": [239, 240, 241, 242], "tensor_kei": [239, 240, 241, 242, 243], "next_valu": [239, 240, 241, 242, 243], "aka": [240, 300], "average_reward": [240, 241, 242], "tdestim": [240, 241, 243], "infti": 241, "valuefunctionbas": 243, "time_dim": [244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256], "old_stat": [244, 246, 248, 250, 252, 253, 255], "new_stat": [244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "rolling_gamma": [248, 249, 250, 251, 253, 254, 255, 256], "g1": [248, 249, 250, 251, 253, 254, 255, 256], "g2": [248, 249, 250, 251, 253, 254, 255, 256], "g3": [248, 249, 250, 251, 253, 254, 255, 256], "g4": [248, 249, 250, 251, 253, 254, 255, 256], "v3": [248, 249, 250, 251, 253, 254, 255, 256], "v4": [248, 249, 250, 251, 253, 254, 255, 256, 299, 301, 307], "out_file_bas": 257, "skip_reset": 257, "dump": 257, "interv": [257, 258, 267, 277, 300, 306], "center_crop": 258, "make_grid": 258, "Will": 258, "grid": 258, "exp_nam": [259, 260, 263, 264, 265, 287, 300], "log_dir": [259, 260, 262, 264, 300], "templat": 259, "csv": [260, 262, 300], "minim": [260, 308], "dependeci": 260, "experiment_nam": [261, 262], "uuid": [261, 300, 311], "date": 261, "logger_typ": 262, "logger_nam": 262, "tensorboard": [262, 264, 310], "wandb": [262, 265, 310], "mlflow": [262, 263], "wandb_kwarg": 262, "mlflow_kwarg": 262, "tracking_uri": 263, "uri": 263, "datastor": 263, "tb_log": 264, "tensoarboard": 264, "sub_traj_len": 266, "min_sub_traj_len": 266, "register_op": [266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 297, 300], "process_optim_batch": [266, 272, 273, 297], "td_out": [266, 274], "_process_optim_batch_hook": [266, 297], "batch_subsampl": 266, "clear_cuda": 267, "pre_optim_step": [267, 297], "counter": [268, 297], "log_pbar": [268, 269, 271, 273, 297, 300], "progress": [268, 269, 271, 275, 297, 300, 302, 311], "count_fram": 268, "pre_steps_log": [268, 269, 297], "count_frames_log": 268, "lognam": 269, "r_train": [269, 300], "log_reward": [269, 300], "loss_compon": 270, "appl": 270, "omit": [270, 301, 306, 308], "optimizer_hook": 270, "record_interv": [271, 299, 300], "record_fram": [271, 278, 299, 300], "policy_explor": [271, 287, 299, 300], "log_kei": [271, 300], "suffix": 271, "underestim": 271, "suppos": [271, 297, 311], "set_exploration_typ": [271, 293, 301, 302, 310], "r_evalu": [271, 299], "flatten_tensordict": [272, 300], "max_dim": 272, "rb_trainer": 272, "batch_process": [272, 273, 274, 297], "post_loss": [272, 297], "999": [273, 300], "jitter": 273, "finfo": 273, "default_dtyp": 273, "get_default_dtyp": 273, "reward_norm": 273, "update_reward_stat": 273, "normalize_reward": 273, "make_train": [274, 293], "_process_batch_hook": [274, 297], "select_kei": [274, 297], "versatil": 275, "lossmodul": [275, 286, 287, 293], "optim_steps_per_batch": [275, 297, 300], "epoch": [275, 301, 305], "clip_grad_norm": 275, "partial": [275, 302], "clip_norm": 275, "progress_bar": 275, "tqdm": [275, 299, 301, 302, 305, 306], "save_trainer_interv": 275, "disk": [275, 297, 299, 300, 302, 308], "log_interv": [275, 300], "save_trainer_fil": [275, 297], "datacollectorbas": [277, 280, 281, 287, 293], "update_weights_interv": [277, 300], "sit": [277, 300], "update_weight": 277, "post_step": [277, 297], "cfg": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291], "dictconfig": [278, 279, 280, 281, 284, 285, 286, 287, 288, 291], "divid": [278, 295, 299, 305, 306], "unknowingli": 278, "annealing_fram": [278, 299], "init_env_step": [278, 279, 299], "proof_environ": [279, 284, 299], "sta": 279, "ot": 279, "actor_model_explor": [280, 281, 299], "make_env_kwarg": [280, 281], "targetnetupdat": [282, 283, 286, 287], "redqloss_deprec": 283, "actor_net_kwarg": 284, "qvalue_net_kwarg": 284, "observation_kei": 284, "dummi": [284, 299, 311], "parser_env_arg": 284, "parser_model_args_continu": 284, "cattensor": [284, 299, 304, 306, 311], "hydra": 284, "config_stor": 284, "configstor": 284, "halfcheetah": [284, 299], "config_field": 284, "config_cl": 284, "redqmodelconfig": 284, "envconfig": 284, "make_dataclass": 284, "cls_name": 284, "cs": 284, "config_path": 284, "config_nam": 284, "17": [284, 299, 300, 306], "replayargsconfig": 285, "target_net_updat": [287, 299, 300], "constitu": 287, "learnt": [287, 299, 301], "tensorboardlogg": [287, 293], "egreedywrapp": [287, 300, 302], "env_proof": 287, "obs_spec": 287, "net_valu": 287, "dir": [287, 297, 300], "gettempdir": 287, "argpars": [288, 291], "namespac": [288, 291], "parser": [288, 291], "transformed_env_constructor": [288, 293], "num_env_per_collector": [289, 290], "video_tag": 291, "norm_obs_onli": 291, "use_env_cr": 291, "custom_env_mak": 291, "custom_env": 291, "return_transformed_env": 291, "action_dim_gsd": 291, "state_dim_gsd": 291, "obs_norm_state_dict": 291, "wheter": 291, "maker": 291, "asyncdatacollector": 293, "distributedsyncdatacollector": 293, "submitit_delayed_launch": 293, "raycollector": 293, "samplerwithoutreplac": [293, 301, 305, 308], "tensorstorag": 293, "tensordictroundrobinwrit": 293, "d4rlexperiencereplai": 293, "openmlexperiencereplai": 293, "unboundeddiscretetensorspec": [293, 301, 311], "lazystackedtensorspec": 293, "lazystackedcompositespec": 293, "prompttensordicttoken": 293, "rolloutfrommodel": 293, "tokenizeddatasetload": 293, "create_infinite_iter": 293, "consolidate_spec": 293, "check_no_exclusive_kei": 293, "contains_lazy_spec": 293, "tensordictrecord": 293, "videorecord": [293, 301], "get_available_librari": 293, "set_exploration_mod": 293, "make_composite_from_td": [293, 306], "braxwrapp": 293, "dmcontrolenv": [293, 299, 304, 311], "dmcontrolwrapp": 293, "mogymenv": 293, "mogymwrapp": 293, "jumanjienv": 293, "jumanjiwrapp": 293, "openmlenv": 293, "vmaswrapp": 293, "qvaluehook": 293, "distributionalqvaluehook": 293, "reset_nois": 293, "cemplann": 293, "mpcplannerbas": 293, "mppiplann": 293, "independentnorm": 293, "truncatednorm": 293, "maskedonehotcategor": 293, "inv_softplu": 293, "vmapmodul": 293, "distributionaldqnloss": [293, 300], "discretesacloss": 293, "iqlloss": 293, "cqlloss": 293, "dtloss": 293, "onlinedtloss": 293, "a2closs": 293, "reinforceloss": 293, "dreameractorloss": 293, "dreamermodelloss": 293, "dreamervalueloss": 293, "td0estim": [293, 299], "td1estim": [293, 299], "td0_return_estim": 293, "td0_advantage_estim": 293, "td1_return_estim": 293, "vec_td1_return_estim": 293, "td1_advantage_estim": 293, "vec_td1_advantage_estim": 293, "td_lambda_return_estim": 293, "vec_td_lambda_return_estim": 293, "td_lambda_advantage_estim": 293, "vec_td_lambda_advantage_estim": 293, "generalized_advantage_estim": 293, "vec_generalized_advantage_estim": 293, "reward2go": 293, "distance_loss": [293, 299], "hold_out_net": 293, "hold_out_param": [293, 299], "softupd": [293, 299, 300, 302], "hardupd": [293, 299], "batchsubsampl": [293, 297], "clearcudacach": 293, "countframeslog": 293, "logreward": [293, 297, 300], "optimizerhook": [293, 300], "replaybuffertrain": [293, 297, 300], "rewardnorm": 293, "selectkei": [293, 297], "trainerhookbas": [293, 297, 300], "updateweight": [293, 297, 300], "make_collector_offpolici": 293, "make_collector_onpolici": 293, "make_dqn_loss": 293, "make_redq_loss": 293, "make_redq_model": 293, "make_replay_buff": [293, 299], "make_target_updat": 293, "parallel_env_constructor": [293, 299], "sync_async_collector": 293, "sync_sync_collector": 293, "correct_for_frame_skip": 293, "get_stats_random_rollout": 293, "csvlogger": [293, 300], "mlflowlogg": 293, "wandblogg": 293, "get_logg": 293, "generate_exp_nam": 293, "journei": 294, "textbook": 294, "highlight": 294, "ever": [294, 305], "bump": 294, "think": [294, 301, 305, 311], "benefit": [294, 305, 308], "pr": 294, "ground": [295, 299, 306], "categori": [295, 297], "recycl": [295, 308], "impos": 295, "violat": 295, "noisier": 295, "Their": [295, 305], "sd": 295, "prob_modul": 295, "pick": [295, 299, 300], "tabl": [295, 300], "customari": 295, "hopefulli": [295, 300], "mathbb": [295, 300], "rightarrow": [295, 300], "soften": 295, "backbon": [295, 302, 304, 310], "make_actor": 295, "make_valu": 295, "shared_param": 295, "make_common": 295, "reusabl": [296, 299, 308], "swappabl": [296, 299], "characterist": [296, 299, 306], "trainabl": [296, 299, 307], "whatev": [296, 299], "convent": [296, 299, 302, 305, 306], "smth": [296, 299], "metric": [296, 299], "nutshel": [296, 299], "barto": [296, 305], "chapter": 296, "significantli": [296, 299, 300, 305], "next_stat": 296, "value_net_loss": 296, "pow": [296, 299], "therebi": 296, "room": 296, "convers": 296, "signifi": [296, 305], "underperform": 296, "thin": 296, "intric": 296, "outer": [297, 299, 300, 311], "believ": 297, "scheme": [297, 311], "substenti": 297, "_pre_steps_log_hook": 297, "_pre_optim_hook": 297, "sub_batch": 297, "_post_loss_hook": 297, "_post_optim_hook": 297, "post_optim": [297, 300], "_post_optim_log": 297, "post_optim_log": 297, "_post_steps_hook": 297, "_post_steps_log_hook": 297, "post_steps_log": 297, "comment": [297, 300, 310], "extens": [297, 308], "reserv": 297, "logginghook": 297, "logging_hook": 297, "save_dict": 297, "some_valu": 297, "torchsnapshot": 297, "ckpt_backend": 297, "pt": [297, 307], "filepath": 297, "save_train": 297, "load_from_fil": 297, "perfectli": [297, 299, 306], "intern": 298, "author": [299, 300, 301, 302, 305, 306, 308], "vincent": [299, 300, 301, 302, 306, 308], "moen": [299, 300, 301, 302, 306, 308], "assembl": 299, "focus": 299, "straightforward": [299, 300, 308], "overview": [299, 301, 305, 310], "transpar": [299, 302], "understood": 299, "sota": [299, 300, 310], "illustr": [299, 300, 308], "device_count": [299, 300, 302, 307, 311], "loss_dict": 299, "modal": 299, "oblivi": [299, 301, 308], "elementari": 299, "didact": 299, "dilut": 299, "pessimist": [299, 300, 301], "target_actor_network_param": 299, "actor_in_kei": 299, "actor_crit": 299, "noth": [299, 301], "compromis": 299, "hp": 299, "hasattr": 299, "_value_estim": 299, "elif": [299, 300], "notimplementederror": 299, "unknown": 299, "_loss_actor": 299, "td_copi": 299, "actor_network_param": 299, "value_network_param": 299, "_loss_valu": 299, "pred_val": 299, "target_value_network_param": 299, "smooth": [299, 300], "loss_funt": 299, "glue": 299, "_forward": 299, "ndimens": 299, "remaind": 299, "focu": [299, 300, 301], "pixels_onli": [299, 300, 310, 311], "env_librari": 299, "env_task": 299, "env_arg": 299, "friendli": 299, "torchr": 299, "rescal": 299, "presum": 299, "leav": 299, "make_transformed_env": 299, "reward_sc": 299, "double_to_float_list": 299, "double_to_float_inv_list": 299, "marker": 299, "leverag": [299, 305, 311], "env_per_collector": 299, "transform_state_dict": 299, "make_t_env": 299, "parallel_env": [299, 310, 311], "adjust": [299, 305, 306], "seem": [299, 302], "cheat": 299, "10m": 299, "cautiou": 299, "deal": [299, 301, 305, 308], "magnitud": 299, "thousand": [299, 302], "get_env_stat": 299, "proof_env": 299, "5000": [299, 300, 301], "maxim": [299, 306], "recal": [299, 301], "ddpgmlpactor": 299, "ddpgmlpqnet": 299, "materi": 299, "ornsteinuhlenbeckprocesswrapp": 299, "make_ddpg_actor": 299, "q_net": 299, "moduless": 299, "sugges": 299, "1_000_000": [299, 302], "tight": 299, "10_000": [299, 301, 308], "traj_len": [299, 302], "make_record": 299, "recorder_obj": 299, "flavor": 299, "circular": 299, "buffer_s": [299, 300], "random_crop_len": 299, "prb": 299, "buffer_scratch_dir": 299, "temporari": 299, "dirrectori": 299, "trajecotri": 299, "25": [299, 300, 301, 305, 306, 307, 309], "sampel": 299, "dataflow": 299, "ceil_div": 299, "utd": [299, 302], "update_to_data": 299, "realiz": 299, "_must_": 299, "001": [299, 306], "outdat": 299, "trick": [299, 300], "despit": 299, "adam": [299, 300, 301, 302, 305, 306], "optimizer_actor": 299, "lr": [299, 300, 301, 302, 305, 306], "weight_decai": [299, 300], "optimizer_valu": 299, "total_collection_step": 299, "pretti": [299, 308], "rewards_ev": 299, "collected_fram": 299, "pbar": [299, 301, 302, 305, 306], "r0": 299, "numel": [299, 301, 302, 307, 308], "current_fram": 299, "sampled_tensordict": 299, "gn1": 299, "clip_grad_norm_": [299, 301, 305, 306], "gn2": 299, "gn": [299, 306], "td_record": 299, "rn": 299, "rs": 299, "set_descript": [299, 301, 302, 305, 306], "2f": 299, "00": [299, 300, 301, 302, 305, 306, 307, 309], "800": [299, 300], "04": [299, 300, 305, 306, 307, 309], "1850": 299, "95it": 299, "1600": [299, 300], "02": [299, 300, 301, 306, 307, 309], "605": [299, 306], "24it": [299, 302, 306], "2400": [299, 300], "07": [299, 300, 305, 306], "1008": 299, "74it": [299, 300], "3200": [299, 300], "1418": 299, "27it": [299, 306], "40": [299, 300, 301, 302, 305, 306, 307, 308], "4000": [299, 300, 301], "1866": 299, "13it": [299, 306], "48": [299, 300, 306, 307], "4800": [299, 300, 306], "1857": 299, "00it": [299, 300], "56": [299, 300, 306], "5600": 299, "2432": [299, 300], "37": [299, 300, 306], "107": [299, 306], "83": [299, 300, 306, 307], "372": [299, 306], "05": [299, 300, 301, 305, 306], "6400": [299, 310], "858": 299, "64it": [299, 300], "93": [299, 300, 306, 307], "155": [299, 306], "251": [299, 306], "76": [299, 300, 306, 307, 308], "09": [299, 300, 306], "72": [299, 300, 306], "7200": 299, "405": [299, 306], "80it": [299, 300, 306], "84": [299, 300, 302, 306], "359": [299, 306], "19": [299, 300, 301, 302, 306], "278": [299, 306], "21": [299, 300, 301, 304, 305, 306], "80": [299, 300, 301, 305, 306, 307], "8000": [299, 301], "57it": [299, 300], "49": [299, 300, 305, 306, 308], "154": [299, 306], "281": [299, 306], "59": [299, 300, 302, 306], "88": [299, 300, 306, 307, 308], "8800": 299, "367": [299, 306], "16it": [299, 300], "89": [299, 300, 306, 307, 308], "204": [299, 306], "304": [299, 306], "62": [299, 300, 306], "71": [299, 300, 306, 307], "96": [299, 300, 306, 307], "9600": 299, "51": [299, 300, 306, 307, 308], "91": [299, 300, 306], "419": [299, 306], "280": [299, 306], "22": [299, 300, 301, 306, 307, 309], "10400it": 299, "84it": [299, 300], "36": [299, 300, 301, 306], "31": [299, 300, 306, 307, 309], "39": [299, 300, 301, 302, 306, 307, 309], "133": [299, 306], "57": [299, 300, 305, 306, 308], "292": [299, 306], "73": [299, 300, 301, 306, 307], "plot": [299, 301, 302, 305, 306], "mention": [299, 302, 308, 311], "matplotlib": [299, 301, 302, 305, 306, 308, 311], "pyplot": [299, 301, 302, 305, 306, 308, 311], "plt": [299, 301, 302, 305, 306, 308, 311], "zip": [299, 303], "legend": 299, "xlabel": [299, 302, 305, 306], "ylabel": [299, 305], "tight_layout": 299, "concret": [299, 301], "takeawai": [299, 300], "minut": [299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "298": [299, 306, 309], "mb": [299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311], "coding_ddpg": [299, 309], "jupyt": [299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311], "ipynb": [299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311], "galleri": [299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311], "sphinx": [299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311], "customis": [300, 305], "road": 300, "aspect": 300, "did": [300, 301, 308, 311], "highest": 300, "prerequisit": 300, "familiar": [300, 305, 311], "lookup": 300, "amort": [300, 301], "cart": 300, "pole": 300, "un": 300, "actuat": 300, "frictionless": 300, "upright": [300, 311], "duelingcnndqnet": 300, "is_notebook": 300, "shell": 300, "get_ipython": 300, "__class__": 300, "zmqinteractiveshel": 300, "qtconsol": 300, "terminalinteractiveshel": 300, "ipython": [300, 305, 306], "nameerror": 300, "interpret": 300, "umbrella": 300, "misplac": 300, "misus": 300, "orchestr": 300, "everyth": [300, 302], "five": [300, 301], "64x64": 300, "motion": [300, 306], "obs_norm_sd": 300, "simpler": 300, "get_norm_stat": 300, "test_env": 300, "make_model": 300, "dummy_env": 300, "output_s": [300, 302], "init_bia": 300, "actor_explor": 300, "eps_greedy_v": 300, "eps_greedy_val_env": 300, "get_replay_buff": 300, "n_optim": 300, "themselv": 300, "simplic": [300, 301, 307, 308], "get_collector": 300, "data_collector": 300, "bunch": 300, "concept": [300, 308], "power": 300, "ubiquit": 300, "get_loss_modul": 300, "target_updat": 300, "995": [300, 306], "sensit": 300, "variat": 300, "2e": [300, 306], "wd": 300, "upd": 300, "harder": [300, 310], "5_000": 300, "500000": 300, "100000": 300, "005": 300, "mandatori": [300, 301, 305, 306], "fairer": 300, "budget": [300, 301], "dqn_exp_": 300, "uuid1": [300, 311], "9895": 300, "0737": 300, "tmp": [300, 308], "tmpr5_7wei1": 300, "dqn_exp_e5979ea4": 300, "4d93": [300, 311], "11ee": [300, 311], "837b": [300, 311], "0242ac120002": [300, 311], "registr": 300, "cumbersom": 300, "buffer_hook": 300, "weight_updat": 300, "descript": [300, 301], "aliv": 300, "total_reward": 300, "17it": [300, 306], "4045": 300, "9346": [300, 306], "3679": 300, "160": [300, 306, 311], "43": [300, 301, 302, 306], "66it": 300, "3621": 300, "192": [300, 306], "08it": 300, "3893": 300, "224": [300, 306], "86it": [300, 301], "59it": [300, 301, 306], "288": [300, 306], "55": [300, 302, 306, 307], "68it": 300, "4345": 300, "320": [300, 306, 311], "02it": 300, "3682": 300, "352": [300, 306], "45": [300, 302, 306, 307], "37it": 300, "384": [300, 306], "47": [300, 302, 306, 307], "50it": 300, "4948": 300, "416": [300, 306], "44it": 300, "4134": 300, "448": [300, 306], "09it": 300, "480": [300, 306, 307], "28": [300, 301, 305, 306, 307, 308, 309], "32it": [300, 306], "3983": 300, "52": [300, 302, 304, 306, 307, 309], "73it": 300, "544": [300, 306], "54": [300, 306, 307, 308], "49it": 300, "4224": 300, "576": [300, 306], "45it": 300, "3772": 300, "608": [300, 306], "640": 300, "4797": 300, "672": 300, "4497": 300, "704": 300, "28it": [300, 306], "736": 300, "04it": [300, 306], "768": 300, "01it": [300, 301], "53": [300, 306, 308], "96it": [300, 306], "832": 300, "69it": 300, "864": 300, "51it": 300, "4586": 300, "896": 300, "79it": [300, 306], "928": 300, "98it": 300, "960": 300, "67it": 300, "992": [300, 305, 306, 309], "14it": [300, 306], "54it": 300, "4526": 300, "1056": 300, "61it": [300, 306], "1088": 300, "99it": 300, "1120": 300, "63it": 300, "1152": 300, "58": [300, 306, 307], "03it": [300, 306], "1184": 300, "81it": [300, 306], "1216": 300, "10it": 300, "1248": 300, "1280": 300, "43it": 300, "4314": 300, "39it": 300, "1344": 300, "1376": 300, "1408": 300, "1440": 300, "30it": [300, 306], "1472": 300, "1504": 300, "1536": 300, "07it": [300, 306], "1568": 300, "05it": [300, 302, 306], "60it": [300, 306], "4074": [300, 306], "1632": 300, "1696": 300, "25it": 300, "1728": 300, "41": [300, 302, 305, 306, 309, 311], "1760": 300, "4524": 300, "1792": 300, "33it": [300, 306], "1824": 300, "1856": 300, "94it": [300, 306], "1888": 300, "71it": 300, "1920": 300, "1952": 300, "1984": 300, "2016": 300, "76it": [300, 306], "2048": [300, 307], "15it": [300, 306], "2080": 300, "2112": [300, 306, 311], "2144": 300, "93it": 300, "2176": 300, "2208": 300, "90it": [300, 301], "2240": 300, "2272": 300, "4676": 300, "2304": 300, "2336": 300, "2368": 300, "89it": 300, "47it": [300, 301], "52it": 300, "2464": 300, "46it": 300, "2496": 300, "26it": [300, 306], "2528": [300, 306], "2560": 300, "2592": 300, "2624": 300, "70it": [300, 301], "2656": [300, 306], "2688": 300, "41it": 300, "2720": [300, 306], "87it": 300, "2752": 300, "2784": 300, "29it": [300, 306], "2816": 300, "58it": 300, "2848": 300, "2880": 300, "2912": 300, "23it": [300, 306], "2944": [300, 306], "38it": 300, "60": [300, 301, 305, 306, 310], "2976": [300, 306], "91it": 300, "3008": 300, "61": [300, 306, 307], "3040": 300, "3072": 300, "3104": 300, "63": [300, 306, 308], "3136": 300, "3168": 300, "65": [300, 302, 306, 307, 308], "3232": [300, 306], "8462": 300, "3264": 300, "66": [300, 306, 307], "3296": 300, "67": [300, 304, 306], "3328": 300, "56it": [300, 306], "3360": 300, "68": [300, 306, 307], "3392": 300, "3424": 300, "69": [300, 306], "3456": [300, 306], "70": [300, 301, 305, 306], "3488": 300, "06it": [300, 301], "3520": 300, "88it": 300, "3552": 300, "31it": [300, 306], "4254": [300, 306], "3584": 300, "3616": 300, "3648": 300, "74": [300, 306, 307], "3680": 300, "3712": 300, "75": [300, 306, 307], "3744": 300, "3776": 300, "3808": 300, "77": [300, 306, 307, 308], "3840": 300, "3872": 300, "78": [300, 306], "3904": 300, "79": [300, 306, 307], "3936": 300, "3968": 300, "19it": [300, 306], "4032": 300, "34it": [300, 306], "4064": 300, "83it": 300, "82": [300, 306], "4096": 300, "4128": [300, 306], "4160": 300, "4192": 300, "85": [300, 302, 306, 307], "4256": [300, 306], "75it": 300, "86": [300, 306, 307], "4288": [300, 306], "4320": 300, "97it": 300, "4352": 300, "4384": 300, "4416": 300, "21it": [300, 302, 306], "4448": 300, "90": [300, 301, 305, 306, 307, 308], "4480": 300, "4512": 300, "4544": 300, "92": [300, 306, 307, 308], "4576": 300, "4608": 300, "4640": 300, "4672": [300, 306], "4704": 300, "4736": 300, "92it": [300, 302, 306], "4768": 300, "97": [300, 306, 307, 308], "4832": 300, "4864": 300, "85it": [300, 301], "4896": 300, "4928": 300, "4960": 300, "77it": 300, "4992": 300, "36it": [300, 306], "5024it": 300, "quickli": [300, 305, 311], "print_csv_files_in_fold": 300, "folder_path": 300, "csv_file": 300, "output_str": 300, "dirpath": 300, "walk": [300, 304, 311], "endswith": 300, "strip": 300, "4044680893421173": 300, "45262256264686584": 300, "4948333501815796": 300, "4676021933555603": 300, "21239003539085388": 300, "1295415461063385": 300, "2529090642929077": 300, "36216166615486145": 300, "4749528765678406": 300, "4077444076538086": 300, "47024261951446533": 300, "32229897379875183": 300, "40723174810409546": 300, "grad_norm_0": 300, "7717539072036743": 300, "5572973489761353": 300, "5076687335968018": 300, "323244571685791": 300, "5887434482574463": 300, "240813732147217": 300, "492283821105957": 300, "6772141456604004": 300, "8378353118896484": 300, "10000000894069672": 300, "84615421295166": 300, "qvaluenetwork": 300, "worst": 300, "accuraci": 300, "fanci": 300, "163": [300, 306, 307, 309], "699": 300, "coding_dqn": [300, 309], "demonstr": [301, 305, 306, 311], "talk": 301, "repetit": 301, "six": 301, "sophist": [301, 305], "invent": 301, "theta_k": 301, "frac": 301, "pi_": 301, "exceed": 301, "discourag": [301, 306], "indispens": 301, "analyz": 301, "lingua": 301, "franca": 301, "defaultdict": [301, 306], "has_cuda": [301, 305, 311], "3e": [301, 302, 305], "max_grad_norm": [301, 305], "big": [301, 308, 311], "ourselv": [301, 311], "benefici": 301, "errat": 301, "hamper": [301, 308], "reactiv": 301, "xy": 301, "sub_batch_s": 301, "num_epoch": [301, 305], "entropy_ep": [301, 305], "generalist": 301, "interchang": [301, 307, 308], "panel": 301, "charact": 301, "inverteddoublependulum": 301, "transmit": 301, "stai": 301, "thumb": 301, "supplementari": [301, 311], "told": 301, "stringent": [301, 305], "nevertheless": [301, 308], "confid": [301, 305], "pack": [301, 311], "ran": 301, "f_": 301, "mu_": 301, "difficulti": [301, 311], "brought": [301, 302], "d_ob": 301, "d_action": 301, "policy_modul": [301, 305], "That": 301, "said": 301, "briefli": [301, 305], "refil": [301, 305], "capac": 301, "conveni": [301, 305, 306], "easiest": [301, 305], "mathemat": [301, 305], "tradeoff": [301, 305], "advantage_modul": 301, "lr_schedul": [301, 306], "cosineannealinglr": [301, 306], "eval_str": 301, "tensordict_data": [301, 305], "data_view": [301, 305], "subdata": [301, 305], "cum_reward_str": 301, "4f": [301, 302, 306], "stepcount_str": 301, "param_group": 301, "lr_str": 301, "eval_rollout": 301, "nice": 301, "353": [301, 306], "55it": 301, "2798": 301, "0891": 301, "0003": [301, 302, 306], "354": [301, 306], "1076": 301, "3000": 301, "358": [301, 306], "1445": 301, "361": [301, 306], "1955": [301, 306], "0002": [301, 302, 306], "363": [301, 306], "2114": 301, "6000": 301, "2233": 301, "7000": 301, "362": [301, 306], "2375": 301, "366": [301, 306], "2519": 301, "9000": 301, "368": [301, 306], "2567": 301, "369": [301, 306], "2543": 301, "cap": [301, 308], "figsiz": [301, 306], "subplot": [301, 306, 311], "titl": [301, 302, 305, 306], "bit": [301, 302, 305, 308], "940": [301, 309], "coding_ppo": [301, 309], "rnn": 302, "lstmmodul": 302, "84x84": 302, "accessori": 302, "stamp": 302, "tensordictprim": 302, "se": 302, "flank": 302, "assist": 302, "emb": 302, "n_cell": 302, "customiz": 302, "almost": 302, "bidirect": 302, "wouldn": 302, "make_tensordict_prim": 302, "interpolationmod": 302, "qval": 302, "stoch_polici": 302, "cudnn": 302, "opportun": 302, "coupl": [302, 306, 308], "uniniti": 302, "again": [302, 305, 307, 308, 311], "redund": 302, "strongli": 302, "million": 302, "sake": [302, 307, 308], "20_000": [302, 306], "longest": 302, "npai": 302, "recurrent_st": 302, "action_spread": 302, "1000000": 302, "102": [302, 306, 308], "0006": [302, 306], "0005": 302, "150": [302, 306], "075": [302, 309], "2071": 302, "dqn_with_rnn": [302, 309], "tutorials_python": 303, "tutorials_jupyt": 303, "distinct": 304, "humanoid": [304, 311], "env1_obs_kei": 304, "observation_stand": 304, "env2_obs_kei": 304, "observation_walk": 304, "tdreset1": 304, "tdreset2": 304, "tdreset": 304, "policy_common": 304, "policy_stand": 304, "policy_walk": 304, "But": 304, "exclusive_field": [304, 310], "stack_dim": [304, 310], "env1_mak": 304, "env2_mak": 304, "_single_task": 304, "td_rollout": 304, "853": [304, 309], "multi_task": [304, 309], "matteo": 305, "bettini": 305, "marl": 305, "maddpg": 305, "navig": 305, "lidar": 305, "sensor": 305, "collis": 305, "tie": 305, "mappo": 305, "ippo": 305, "phase": [305, 308], "mathbf": 305, "pi": [305, 306], "_t": [305, 306], "fed": [305, 308], "approxim": [305, 311], "decentralis": 305, "literatur": 305, "overcom": 305, "stationari": 305, "concurr": 305, "analys": 305, "gui": 305, "visualis": 305, "multiagentmlp": 305, "divic": 305, "vmas_devic": 305, "6_000": 305, "team": [305, 310], "n_iter": 305, "minibatch_s": 305, "generalis": 305, "furthermor": 305, "simd": 305, "parallelis": 305, "warp": 305, "todai": 305, "circl": 305, "surround": 305, "dot": [305, 306], "collid": 305, "drag": 305, "elast": 305, "acceler": 305, "penalis": 305, "num_vmas_env": 305, "scenario_nam": 305, "four": [305, 306], "environmnet": 305, "final_rew": 305, "agent_collis": 305, "enviorn": 305, "stress": 305, "paramount": 305, "episode_reward": 305, "n_rollout_step": 305, "evolut": 305, "yourself": 305, "utilis": 305, "n_actions_per_ag": 305, "n_obs_per_ag": 305, "share_parameters_polici": 305, "policy_net": 305, "denot": 305, "unbatched_action_spec": 305, "carefulli": [305, 311], "grant": 305, "converg": 305, "cooper": 305, "share_parameters_crit": 305, "critic_net": 305, "fantast": 305, "minibatch": 305, "desc": 305, "episode_reward_mean": 305, "episode_reward_mean_list": 305, "critic_param": 305, "target_critic_param": 305, "refresh": 305, "3641679584980011": 305, "5052392482757568": 305, "0283849239349365": 305, "331086277961731": 305, "0674946308135986": 305, "245943784713745": 305, "611856698989868": 305, "8442416191101074": 305, "856468677520752": 305, "9219210147857666": 305, "xvfb": 305, "pyvirtualdisplai": 305, "1400": [305, 306], "900": 305, "pil": 305, "rendering_callback": 305, "fromarrai": 305, "rgb_arrai": [305, 306], "gif": 305, "save_al": 305, "append_imag": 305, "profici": 305, "master": 305, "multiagent_ppo": [305, 309], "freeli": 306, "touch": 306, "undertaken": 306, "broader": 306, "challeng": [306, 307], "wider": 306, "algebra": 306, "acquaint": 306, "avenu": 306, "_apply_to_composit": 306, "default_x": 306, "default_i": 306, "torqu": 306, "upward": 306, "angular": 306, "sin": 306, "rad": 306, "sec": 306, "gravit": 306, "angl": 306, "deleg": 306, "new_th": 306, "new_thdot": 306, "thdot": 306, "g_forc": 306, "max_torqu": 306, "angle_norm": 306, "max_spe": 306, "albeit": 306, "gen_param": 306, "high_th": 306, "high_thdot": 306, "low_th": 306, "low_thdot": 306, "rng": 306, "lazili": 306, "trivial": 306, "neither": 306, "shortcut": [306, 311], "irrelev": 306, "_make_spec": 306, "td_param": 306, "pseudo": 306, "render_mod": 306, "render_fp": 306, "random_": 306, "_make_step": 306, "staticmethod": 306, "complic": [306, 308, 311], "showcas": 306, "skeleton": 306, "_apply_transform": [306, 311], "_inv_apply_transform": [306, 311], "subset": [306, 307], "unitari": 306, "sine": 306, "cosin": 306, "sintransform": 306, "costransform": 306, "t_sin": 306, "t_co": 306, "cat_transform": 306, "mdp": 306, "convin": 306, "simple_rollout": 306, "_data": 306, "unexplor": 306, "assumpt": [306, 308], "recreat": 306, "init_td": 306, "traj_return": 306, "last_reward": 306, "is_ipython": 306, "inlin": 306, "get_backend": 306, "ion": 306, "gcf": 306, "clear_output": 306, "625": 306, "0488": 306, "0748": 306, "519": 306, "0499": 306, "4472": 306, "073": 306, "0685": 306, "0408": 306, "552": 306, "5154": 306, "9086": 306, "527": 306, "9385": 306, "2568": 306, "4981": 306, "223": 306, "8929": 306, "4491": 306, "581": 306, "3233": 306, "0664": 306, "596": 306, "1021": 306, "5263": 306, "9579": 306, "5807": 306, "8075": 306, "212": 306, "2009": 306, "5525": 306, "914": 306, "2894": 306, "0115": 306, "0977": 306, "1845": 306, "1830": 306, "4858": 306, "233": 306, "2863": 306, "0297": 306, "464": 306, "4617": 306, "5997": 306, "904": 306, "1647": 306, "0777": 306, "901": 306, "4709": 306, "6813": 306, "8317": 306, "3221": 306, "5554": 306, "276": 306, "3353": 306, "701": 306, "8570": 306, "6656": 306, "463": 306, "7779": 306, "6911": 306, "875": 306, "0796": 306, "7082": 306, "308": 306, "0421": 306, "1496": 306, "5037": 306, "1755": 306, "5029": 306, "9454": 306, "665": 306, "9330": 306, "2118": 306, "444": 306, "0995": 306, "6294": 306, "3146": 306, "2909": 306, "461": 306, "9720": 306, "1298": 306, "9923": 306, "0345": 306, "3438": 306, "3688": 306, "424": 306, "6953": 306, "5233": 306, "411": 306, "8011": 306, "5329": 306, "2677": 306, "6969": 306, "7010": 306, "376": 306, "9352": 306, "7707": 306, "6178": 306, "5646": 306, "348": 306, "7304": 306, "9407": 306, "942": 306, "3882": 306, "7604": 306, "3507": 306, "8928": 306, "258": 306, "6978": 306, "4641": 306, "549": 306, "6047": 306, "5005": 306, "4136": 306, "2993": 306, "3222": 306, "4046": 306, "7314": 306, "275": 306, "6331": 306, "9318": 306, "961": 306, "8331": 306, "1604": 306, "4099": 306, "4761": 306, "125": 306, "4262": 306, "6363": 306, "382": 306, "3593": 306, "7377": 306, "2847": 306, "3443": 306, "867": 306, "3592": 306, "4760": 306, "441": 306, "9950": 306, "8021": 306, "3528": 306, "1214": 306, "708": 306, "4023": 306, "3583": 306, "041": 306, "3801": 306, "0310": 306, "120": 306, "4244": 306, "2039": 306, "4850": 306, "8748": 306, "706": 306, "4897": 306, "9210": 306, "8964": 306, "0832": 306, "3934": 306, "456": 306, "8971": 306, "2933": 306, "3377": 306, "6996": 306, "2274": 306, "8916": 306, "098": 306, "2660": 306, "9110": 306, "4503": 306, "6956": 306, "9172": 306, "4026": 306, "946": 306, "9229": 306, "5205": 306, "294": 306, "8872": 306, "6637": 306, "019": 306, "9281": 306, "2082": 306, "724": 306, "8561": 306, "6574": 306, "357": 306, "4138": 306, "5230": 306, "385": 306, "4065": 306, "5642": 306, "921": 306, "9786": 306, "4129": 306, "5831": 306, "266": 306, "7723": 306, "4152": 306, "0898": 306, "389": 306, "5155": 306, "5376": 306, "5616": 306, "4094": 306, "283": 306, "5333": 306, "4803": 306, "895": 306, "6566": 306, "2588": 306, "662": 306, "4732": 306, "7503": 306, "068": 306, "0714": 306, "3370": 306, "059": 306, "8612": 306, "1915": 306, "3855": 306, "0349": 306, "9644": 306, "4538": 306, "445": 306, "0392": 306, "4080": 306, "1648": 306, "9599": 306, "143": 306, "4284": 306, "5946": 306, "2590": 306, "9181": 306, "4621": 306, "9075": 306, "674": 306, "1772": 306, "9444": 306, "351": 306, "9391": 306, "5595": 306, "8673": 306, "6240": 306, "5919": 306, "0018": 306, "1071": 306, "9127": 306, "9799": 306, "3131": 306, "9612": 306, "9705": 306, "8741": 306, "2230": 306, "0972": 306, "0337": 306, "0350": 306, "0654": 306, "2441": 306, "4596": 306, "103": 306, "4362": 306, "171": 306, "104": 306, "4041": 306, "6907": 306, "105": 306, "4664": 306, "2760": 306, "0299": 306, "9712": 306, "349": 306, "3332": 306, "4479": 306, "772": 306, "108": 306, "4357": 306, "9591": 306, "543": 306, "109": 306, "6216": 306, "1353": 306, "692": 306, "110": 306, "6261": 306, "7086": 306, "496": 306, "111": 306, "7758": 306, "9818": 306, "112": 306, "7772": 306, "5055": 306, "113": [306, 308], "5840": 306, "3180": 306, "2083": 306, "115": 306, "5275": 306, "6873": 306, "116": [306, 308], "4107": 306, "1624": 306, "117": [306, 308, 309], "6372": 306, "2571": 306, "118": 306, "4039": 306, "4428": 306, "119": 306, "4728": 306, "5628": 306, "6767": 306, "2466": 306, "522": 306, "121": [306, 311], "5873": 306, "5072": 306, "122": [306, 311], "6548": 306, "3766": 306, "123": 306, "5134": 306, "124": 306, "2481": 306, "0591": 306, "4500": 306, "3368": 306, "126": [306, 308], "9708": 306, "7059": 306, "127": [306, 308], "3031": 306, "2534": 306, "843": 306, "3327": 306, "6193": 306, "129": 306, "4831": 306, "1172": 306, "2593": 306, "4219": 306, "962": 306, "131": 306, "8380": 306, "899": 306, "132": 306, "2721": 306, "9048": 306, "166": 306, "2419": 306, "5248": 306, "134": 306, "2139": 306, "4278": 306, "135": 306, "0690": 306, "5140": 306, "136": 306, "1140": 306, "7402": 306, "137": 306, "5356": 306, "1636": 306, "138": 306, "0671": 306, "8798": 306, "139": 306, "8918": 306, "3298": 306, "307": 306, "140": [306, 308], "1779": 306, "141": 306, "1771": 306, "3624": 306, "936": 306, "142": [306, 308], "1683": 306, "4810": 306, "9373": 306, "4435": 306, "144": 306, "4396": 306, "8092": 306, "145": 306, "2572": 306, "146": 306, "4212": 306, "0260": 306, "147": 306, "0939": 306, "6478": 306, "148": 306, "6606": 306, "7289": 306, "149": 306, "9300": 306, "7193": 306, "563": 306, "1166": 306, "8514": 306, "151": 306, "9108": 306, "0672": 306, "152": 306, "8591": 306, "3768": 306, "153": 306, "9976": 306, "0576": 306, "0067": 306, "935": 306, "4199": 306, "1722": 306, "156": [306, 308], "8310": 306, "3466": 306, "157": 306, "8631": 306, "2492": 306, "158": 306, "8763": 306, "1277": 306, "159": 306, "5562": 306, "7446": 306, "1082": 306, "9830": 306, "161": 306, "0946": 306, "5229": 306, "162": 306, "4574": 306, "6900": 306, "2229": 306, "0318": 306, "482": 306, "164": [306, 307, 309], "0543": 306, "0817": 306, "761": 306, "165": [306, 308], "2809": 306, "5118": 306, "1142": 306, "5635": 306, "167": [306, 309], "1949": 306, "2327": 306, "982": 306, "168": 306, "0967": 306, "0387": 306, "457": 306, "169": 306, "11it": 306, "0782": 306, "2150": 306, "170": 306, "5222": 306, "3725": 306, "22it": 306, "9288": 306, "9837": 306, "172": 306, "1416": 306, "1099": 306, "173": 306, "8620": 306, "8475": 306, "174": 306, "1807": 306, "4375": 306, "175": 306, "1148": 306, "0645": 306, "176": 306, "2751": 306, "8313": 306, "177": 306, "9286": 306, "9770": 306, "178": 306, "5735": 306, "2837": 306, "179": 306, "2926": 306, "9489": 306, "180": 306, "1507": 306, "181": [306, 308, 309], "8724": 306, "3567": 306, "182": [306, 311], "3574": 306, "6140": 306, "183": 306, "7895": 306, "2518": 306, "184": 306, "6146": 306, "185": 306, "8776": 306, "7358": 306, "186": 306, "3722": 306, "8428": 306, "187": 306, "7955": 306, "188": 306, "0092": 306, "7106": 306, "829": 306, "189": 306, "2264": 306, "6919": 306, "190": 306, "1438": 306, "1362": 306, "191": 306, "0618": 306, "8217": 306, "9420": 306, "6765": 306, "193": 306, "7745": 306, "0709": 306, "194": 306, "9478": 306, "6867": 306, "195": 306, "6507": 306, "6225": 306, "196": 306, "2244": 306, "2195": 306, "197": [306, 308], "5385": 306, "9263": 306, "198": 306, "1878": 306, "2374": 306, "199": 306, "8054": 306, "3504": 306, "557": 306, "0766": 306, "6825": 306, "201": 306, "2011": 306, "8393": 306, "202": 306, "0803": 306, "7815": 306, "203": 306, "8363": 306, "2460": 306, "8643": 306, "2191": 306, "593": 306, "205": 306, "0773": 306, "1343": 306, "206": 306, "8657": 306, "207": 306, "9304": 306, "7584": 306, "208": 306, "8752": 306, "2307": 306, "209": 306, "5250": 306, "4869": 306, "210": [306, 311], "7837": 306, "5762": 306, "211": 306, "6661": 306, "8600": 306, "2502": 306, "1752": 306, "213": 306, "3075": 306, "8871": 306, "214": 306, "9406": 306, "8090": 306, "215": 306, "6291": 306, "8923": 306, "876": 306, "216": 306, "9504": 306, "21e": 306, "217": 306, "7431": 306, "7880": 306, "218": 306, "4463": 306, "5432": 306, "219": 306, "3793": 306, "3313": 306, "220": 306, "8843": 306, "0369": 306, "065": 306, "221": 306, "4828": 306, "8391": 306, "222": 306, "6265": 306, "2913": 306, "947": 306, "5541": 306, "1252": 306, "7342": 306, "2396": 306, "225": 306, "5936": 306, "1924": 306, "226": 306, "9975": 306, "2045": 306, "227": 306, "8367": 306, "9540": 306, "228": 306, "7259": 306, "6743": 306, "229": 306, "4827": 306, "7528": 306, "230": 306, "7361": 306, "8756": 306, "231": 306, "7646": 306, "1116": 306, "232": 306, "5426": 306, "8385": 306, "5662": 306, "8585": 306, "234": 306, "8234": 306, "7930": 306, "235": 306, "2648": 306, "9309": 306, "236": 306, "6817": 306, "237": 306, "0943": 306, "1533": 306, "238": 306, "3045": 306, "0483": 306, "239": 306, "240": [306, 310, 311], "6415": 306, "0201": 306, "241": 306, "4437": 306, "4365": 306, "242": 306, "0358": 306, "4943": 306, "243": 306, "1272": 306, "5003": 306, "1180": 306, "2637": 306, "245": 306, "7197": 306, "0873": 306, "246": 306, "2917": 306, "247": 306, "0160": 306, "0738": 306, "248": 306, "3689": 306, "0120": 306, "249": 306, "5570": 306, "0475": 306, "250": 306, "4423": 306, "2220": 306, "6803": 306, "252": 306, "1465": 306, "7214": 306, "253": 306, "8801": 306, "7034": 306, "254": 306, "9136": 306, "4076": 306, "7589": 306, "5013": 306, "8150": 306, "2241": 306, "257": 306, "0753": 306, "8081": 306, "1951": 306, "8314": 306, "259": 306, "0038": 306, "260": 306, "0889": 306, "4616": 306, "261": 306, "0655": 306, "262": 306, "8333": 306, "9476": 306, "263": 306, "7554": 306, "3798": 306, "264": 306, "3717": 306, "3947": 306, "529": 306, "265": 306, "3060": 306, "6495": 306, "7467": 306, "8889": 306, "267": 306, "8457": 306, "591": 306, "268": 306, "7137": 306, "0536": 306, "771": 306, "269": 306, "1651": 306, "388": 306, "270": 306, "8246": 306, "5709": 306, "271": 306, "7502": 306, "0521": 306, "032": 306, "272": 306, "5475": 306, "7253": 306, "273": 306, "2856": 306, "7130": 306, "274": 306, "2778": 306, "4122": 306, "8368": 306, "1841": 306, "9622": 306, "1603": 306, "003e": 306, "277": 306, "0247": 306, "346": 306, "2238": 306, "6418": 306, "279": 306, "0626": 306, "2538": 306, "0149": 306, "7380": 306, "2167": 306, "8911": 306, "282": 306, "8725": 306, "1983": 306, "8142": 306, "3709": 306, "284": 306, "4989": 306, "285": 306, "6464": 306, "6210": 306, "286": 306, "9726": 306, "0820": 306, "287": 306, "6975": 306, "9091": 306, "4926": 306, "4791": 306, "289": 306, "0905": 306, "3500": 306, "290": 306, "2287": 306, "291": 306, "9918": 306, "5543": 306, "9245": 306, "6444": 306, "631": 306, "293": 306, "0448": 306, "4769": 306, "8566": 306, "7208": 306, "295": 306, "0966": 306, "296": 306, "5303": 306, "1537": 306, "023": 306, "297": 306, "2682": [306, 311], "564": 306, "4318": 306, "5063": 306, "299": 306, "7475": 306, "4190": 306, "8186": 306, "5077": 306, "301": 306, "1883": 306, "5291": 306, "472": 306, "302": 306, "1256": 306, "3998": 306, "303": 306, "3622": 306, "0930": 306, "626": 306, "9500": 306, "0075": 306, "5664": 306, "305": 306, "5697": 306, "3024": 306, "306": 306, "3117": 306, "0052": 306, "006": 306, "0981": 306, "9312": 306, "3873": 306, "309": 306, "0411": 306, "2650": 306, "310": 306, "1656": 306, "0228": 306, "004": 306, "311": 306, "1196": 306, "2478": 306, "312": 306, "7353": 306, "0812": 306, "313": 306, "3022": 306, "758": 306, "314": 306, "1406": 306, "4626": 306, "315": 306, "2156": 306, "851": 306, "316": 306, "1953": 306, "3774": 306, "317": 306, "6385": 306, "9917": 306, "318": 306, "2764": 306, "905": 306, "319": 306, "6391": 306, "9317": 306, "9748": 306, "2679": 306, "321": 306, "8495": 306, "5125": 306, "322": 306, "8177": 306, "6602": 306, "323": 306, "0704": 306, "5776": 306, "324": 306, "9833": [306, 310], "1339": 306, "402": 306, "325": 306, "1238": 306, "326": 306, "9299": 306, "0227": 306, "327": 306, "7727": 306, "1607": 306, "336": 306, "328": 306, "3958": 306, "3223": 306, "763": 306, "329": 306, "4742": 306, "1797": 306, "330": 306, "0144": 306, "0085": 306, "791": 306, "331": 306, "8284": 306, "0428": 306, "332": 306, "0098": 306, "7365": 306, "333": 306, "4566": 306, "0781": 306, "086": 306, "334": 306, "3355": 306, "0230": 306, "335": 306, "0423": 306, "076": 306, "3711": 306, "1335": 306, "6855": 306, "337": 306, "0304": 306, "0023": 306, "8459": 306, "338": 306, "9998": 306, "4399": 306, "339": 306, "2303": 306, "1346": 306, "340": 306, "2915": 306, "7116": 306, "341": 306, "5560": 306, "0487": 306, "342": 306, "5119": 306, "061": 306, "343": 306, "3305": 306, "3705": 306, "957": 306, "344": 306, "6068": 306, "345": 306, "5731": 306, "3897": 306, "0376": 306, "347": 306, "0434": 306, "012": 306, "1300": 306, "1215": 306, "0968": 306, "0885": 306, "350": 306, "1348": 306, "0073": 306, "5052": 306, "4184": 306, "2817": 306, "8887": 306, "4779": 306, "1009": 306, "0604": 306, "599": 306, "355": 306, "4486": 306, "1176": 306, "656": 306, "356": 306, "2436": 306, "0668": 306, "8849": 306, "0012": 306, "7511": 306, "8804": 306, "8870": 306, "6728": 306, "360": 306, "8841": 306, "5508": 306, "5242": 306, "0268": 306, "0013": 306, "6185": 306, "1378": 306, "0204": 306, "364": 306, "0355": 306, "685": 306, "365": 306, "4884": 306, "0231": 306, "0770": 306, "0014": 306, "6793": 306, "9834": 306, "863": 306, "6709": 306, "462": 306, "5199": 306, "9790": 306, "370": 306, "35it": 306, "9401": 306, "7802": 306, "371": 306, "6723": 306, "2678": 306, "6201": 306, "373": 306, "2184": 306, "7385": 306, "374": 306, "6344": 306, "617": 306, "375": 306, "9945": 306, "0772": 306, "567": 306, "7576": 306, "0398": 306, "377": 306, "3396": 306, "0022": 306, "094": 306, "378": 306, "3073": 306, "4018": 306, "379": 306, "1869": 306, "380": 306, "0481": 306, "1117": 306, "381": 306, "6823": 306, "981": 306, "8305": 306, "0210": 306, "383": [306, 308, 309], "4908": 306, "0272": 306, "538": 306, "3267": 306, "0111": 306, "7965": 306, "1796": 306, "0039": 306, "5396": 306, "386": 306, "3757": 306, "0490": 306, "387": 306, "1394": 306, "4187": 306, "2986": 306, "7954": 306, "1274": 306, "0063": 306, "813": 306, "390": 306, "8706": 306, "0114": 306, "391": 306, "6922": 306, "0004": 306, "2423": 306, "392": 306, "9115": 306, "2602": 306, "393": 306, "2449": 306, "0783": 306, "394": 306, "0631": 306, "0057": 306, "7444": 306, "395": 306, "3339": 306, "0167": 306, "396": 306, "4806": 306, "397": 306, "4171": 306, "067": 306, "398": 306, "2618": 306, "5809": 306, "399": 306, "0054": 306, "3364": 306, "8733": 306, "0184": 306, "401": 306, "9137": 306, "0113": 306, "025": 306, "0386": 306, "0625": 306, "403": 306, "1332": 306, "0582": 306, "7816": 306, "404": 306, "8341": 306, "0941": 306, "854": 306, "8615": 306, "588": 306, "406": 306, "3849": 306, "008": 306, "407": 306, "9395": 306, "0765": 306, "055": 306, "408": [306, 309], "2685": 306, "2235": 306, "688": 306, "409": 306, "3052": 306, "4249": 306, "410": 306, "6806": 306, "6383": 306, "3721": 306, "9981": 306, "412": 306, "1862": 306, "822": 306, "413": 306, "9811": 306, "0171": 306, "013": 306, "414": 306, "0252": 306, "0049": 306, "6205": 306, "415": 306, "1108": 306, "4921": 306, "9142": 306, "8130": 306, "417": 306, "1725": 306, "0036": 306, "3196": 306, "418": 306, "7795": 306, "0242": 306, "799": 306, "7737": 306, "0138": 306, "420": 306, "1462": 306, "0053": 306, "421": 306, "9226": 306, "6139": 306, "422": 306, "9889": 306, "0403": 306, "423": 306, "6194": 306, "0032": 306, "3989": [306, 311], "0104": 306, "425": 306, "9960": 306, "0009": 306, "6009": 306, "426": 306, "2697": 306, "0914": 306, "427": 306, "1114": 306, "428": 306, "9862": 306, "1932": 306, "429": 306, "0637": 306, "0623": 306, "082": 306, "430": 306, "9906": 306, "2031": 306, "431": 306, "9948": 306, "0895": 306, "432": 306, "1970": 306, "0256": 306, "433": 306, "4231": 306, "0449": 306, "644": 306, "434": 306, "1039": 306, "1973": 306, "435": 306, "4561": 306, "1225": 306, "436": 306, "0211": 306, "2125": 306, "437": 306, "3866": 306, "0050": 306, "7202": 306, "438": 306, "6388": 306, "0072": 306, "439": 306, "1187": 306, "0015": 306, "5116": 306, "440": 306, "0432": 306, "0025": 306, "7809": 306, "1925": 306, "0103": 306, "442": 306, "9570": 306, "443": 306, "0871": 306, "5601": 306, "0165": 306, "0047": 306, "6061": 306, "2746": 306, "0027": 306, "7887": 306, "446": 306, "1835": 306, "0035": 306, "855": 306, "447": 306, "8420": 306, "548": 306, "2653": 306, "0126": 306, "9736": 306, "449": 306, "0594": 306, "0119": 306, "6196": 306, "450": 306, "4509": 306, "0373": 306, "451": 306, "0620": 306, "452": 306, "6898": 306, "3235": 306, "687": 306, "453": 306, "5879": 306, "454": 306, "8406": 306, "0694": 306, "455": 306, "8259": 306, "0235": 306, "8500": 306, "0024": 306, "4054": 306, "458": 306, "2027": 306, "0894": 306, "459": 306, "5966": 306, "460": 306, "6942": 306, "0016": 306, "6703": 306, "0145": 306, "8124": 306, "0218": 306, "9196": 306, "0188": 306, "8986": 306, "0884": 306, "0084": 306, "5624": 306, "465": 306, "8862": 306, "5384": 306, "466": 306, "5837": 306, "467": 306, "8954": 306, "0101": 306, "6751": 306, "468": 306, "8063": 306, "0122": 306, "9635": 306, "469": 306, "0692": 306, "4216": 306, "470": 306, "1227": 306, "0586": 306, "162e": 306, "471": 306, "9690": 306, "0074": 306, "4166": 306, "6324": 306, "473": 306, "0778": 306, "474": 306, "8548": 306, "0017": 306, "4408": 306, "475": 306, "8125": 306, "1515": 306, "476": 306, "2733": 306, "0044": 306, "2836": 306, "477": 306, "7497": 306, "7681": 306, "478": 306, "8547": 306, "0105": 306, "7212": 306, "479": 306, "9848": 306, "0019": 306, "6498": 306, "1987": 306, "0011": 306, "5473": 306, "481": 306, "8991": 306, "0033": 306, "6091": 306, "9189": 306, "5771": 306, "483": 306, "6781": 306, "7542": 306, "484": 306, "5959": 306, "0064": 306, "4295": 306, "485": 306, "2547": 306, "486": 306, "0636": 306, "547": 306, "487": 306, "0065": 306, "488": 306, "1694": 306, "0083": 306, "5759": 306, "489": 306, "0493": 306, "0021": 306, "7805": 306, "490": 306, "0950": 306, "497": 306, "491": 306, "9717": 306, "3672": 306, "492": 306, "0207": 306, "493": 306, "8266": 306, "0069": 306, "5365": 306, "494": 306, "2623": 306, "5078": 306, "495": 306, "4545": 306, "09636": 306, "8754": 306, "0010": 306, "498": 306, "0031": 306, "8269": 306, "499": 306, "4082": 306, "6642": 306, "2284": 306, "501": 306, "9130": 306, "0008": 306, "502": 306, "503": 306, "7624": 306, "0056": 306, "3858": 306, "504": 306, "0890": 306, "0042": 306, "505": 306, "7505": 306, "2157": 306, "506": 306, "8394": 306, "3413": 306, "507": 306, "9609": 306, "0041": 306, "6905": 306, "508": 306, "8467": 306, "4409": 306, "509": 306, "510": 306, "8128": 306, "3559": 306, "511": 306, "1479": 306, "0264": 306, "1589": 306, "566": 306, "513": 306, "2756": 306, "0046": 306, "5266": 306, "514": 306, "9873": 306, "0112": 306, "9314": 306, "515": 306, "3791": 306, "0721": 306, "516": 306, "4580": 306, "0758": 306, "6114": 306, "517": 306, "2431": 306, "518": 306, "1958": 306, "5553": 306, "8924": 306, "0097": 306, "520": 306, "3737": 306, "0234": [306, 311], "521": 306, "9125": 306, "4623": 306, "3230": 306, "0589": 306, "3784": 306, "523": 306, "9482": 306, "0051": 306, "524": 306, "1979": 306, "0045": [306, 311], "6401": 306, "525": 306, "1588": 306, "0048": 306, "6255": 306, "526": 306, "6084": 306, "3477": 306, "1475": 306, "0209": 306, "528": 306, "7611": 306, "1040": 306, "0099": 306, "0173": 306, "643": 306, "530": 306, "8189": 306, "4358": 306, "531": 306, "9897": 306, "532": 306, "1548": 306, "9751": 306, "533": 306, "6362": 306, "7495": 306, "534": 306, "1749": 306, "9513": 306, "535": 306, "7708": 306, "0371": 306, "536": 306, "2649": 306, "0437": 306, "537": 306, "5491": 306, "0276": 306, "6426": 306, "7294": 306, "078e": 306, "539": 306, "9928": 306, "540": 306, "7937": 306, "0124": 306, "9664": 306, "541": 306, "3342": 306, "542": 306, "2046": 306, "5496": 306, "0956": 306, "0059": 306, "545": 306, "9028": 306, "5843": 306, "546": 306, "0674": 306, "0178": 306, "797": 306, "2815": 306, "0599": 306, "1587": 306, "9276": 306, "8228": 306, "6164": 306, "551": 306, "6850": 306, "9167": 306, "3092": 306, "0670": 306, "9177": 306, "553": 306, "1599": 306, "0043": 306, "554": 306, "6367": 306, "555": 306, "3657": 306, "556": 306, "6694": 306, "2622": 306, "0372": 306, "4841": 306, "558": 306, "2707": 306, "0058": 306, "757": 306, "559": 306, "2267": 306, "5415": 306, "560": 306, "4556": 306, "0163": 306, "561": 306, "1839": 306, "0809": 306, "6262": 306, "562": [306, 309, 310], "0278": 306, "1112": 306, "6155": 306, "565": 306, "1427": 306, "3582": 306, "624": 306, "7870": 306, "9490": 306, "0439": 306, "8796": 306, "568": 306, "8026": 306, "612": 306, "569": 306, "3147": 306, "8486": 306, "570": 306, "7917": 306, "0129": 306, "571": 306, "9553": 306, "0020": 306, "6871": 306, "572": 306, "3132": 306, "0159": 306, "8646": 306, "573": 306, "5320": 306, "0269": 306, "574": 306, "2955": 306, "0245": 306, "575": 306, "3347": 306, "0179": 306, "9718": 306, "1629": 306, "804": 306, "577": 306, "4164": 306, "0070": 306, "4335": 306, "578": 306, "579": 306, "3049": 306, "9063": 306, "580": 306, "8785": 306, "3295": 306, "5184": 306, "0546": 306, "582": 306, "4589": 306, "583": 306, "4697": 306, "2476": 306, "584": 306, "2397": 306, "585": 306, "4953": 306, "1775": 306, "586": 306, "2258": 306, "0110": 306, "7671": 306, "587": 306, "3981": 306, "8590": 306, "0007": 306, "589": 306, "9820": 306, "4221": 306, "590": 306, "1293": 306, "0116": 306, "868": 306, "1675": 306, "5931": 306, "592": 306, "2910": 306, "5219": 306, "2124": 306, "1730": 306, "737": 306, "594": [306, 309, 311], "2914": 306, "0206": 306, "595": 306, "0172": 306, "3982": 306, "0945": 306, "0121": [306, 311], "4789": 306, "597": 306, "3805": 306, "598": 306, "3310": 306, "5065": 306, "6028": 306, "6316": 306, "6724": 306, "6523": 306, "601": 306, "0136": 306, "4298": 306, "602": 306, "3524": 306, "2629": 306, "603": 306, "2635": 306, "7839": 306, "604": 306, "6041": 306, "8027": 306, "4170": 306, "4675": 306, "606": 306, "3153": 306, "9316": 306, "607": 306, "0649": 306, "9722": 306, "7989": 306, "0329": 306, "609": 306, "1976": 306, "6852": 306, "610": 306, "4793": 306, "1255": 306, "611": 306, "4581": 306, "0394": 306, "2047": 306, "0326": 306, "613": 306, "8967": 306, "8619": 306, "614": 306, "5906": 306, "6491": 306, "615": 306, "6634": 306, "4394": 306, "616": 306, "0624": 306, "0061": 306, "5676": 306, "3259": 306, "0131": 306, "7733": 306, "618": 306, "7515": 306, "0189": 306, "5575": 306, "619": 306, "9313": 306, "6286": 306, "620": 306, "4325": 306, "7832": 306, "621": 306, "1134": 306, "622": 306, "4572": 306, "0500": 306, "5838": 306, "623": 306, "3818": 306, "8623": 306, "1253": 306, "6622": 306, "subject": 306, "saw": [306, 308], "explain": 307, "semat": 307, "r3mtransform": 307, "embodi": 307, "ai": 307, "env_transform": [307, 311], "s3": 307, "amazonaw": 307, "r3m_50": 307, "374m": 307, "8m": 307, "136mb": 307, "135mb": 307, "6m": 307, "111mb": 307, "5m": 307, "3mb": 307, "108mb": 307, "122mb": 307, "102mb": 307, "105m": 307, "110mb": 307, "116m": 307, "4mb": 307, "131m": 307, "1mb": 307, "147m": 307, "113mb": 307, "159m": 307, "169m": 307, "2mb": 307, "179m": 307, "188m": 307, "196m": 307, "7mb": 307, "205m": 307, "0mb": 307, "217m": 307, "6mb": 307, "229m": 307, "246m": 307, "9mb": 307, "255m": 307, "264m": 307, "276m": 307, "285m": 307, "295m": 307, "8mb": 307, "310m": 307, "320m": 307, "327m": 307, "334m": 307, "342m": 307, "348m": 307, "354m": 307, "361m": 307, "wiser": 307, "conclud": 307, "_storag": [307, 308], "3338": [307, 309], "pretrained_model": [307, 309], "supervis": [308, 311], "pull": 308, "temporarili": 308, "drastic": 308, "ram": [308, 311], "batteri": 308, "dataliststorag": 308, "datalazytensorstorag": 308, "tensordidct": 308, "basi": 308, "datalazymemmapstorag": 308, "buffer_list": 308, "lowest": 308, "medium": 308, "buffer_lazytensor": 308, "buffer_lazymemmap": 308, "fullest": 308, "organ": 308, "convini": 308, "mydata": 308, "background": 308, "question": [308, 310], "_i": 308, "artifici": 308, "0892946e": 308, "she": 308, "augment": 308, "pars": 308, "proport": 308, "hist": 308, "barcontain": 308, "artist": 308, "revert": 308, "expens": 308, "reappear": 308, "unfold": 308, "problemat": 308, "window": 308, "4th": 308, "rb_tutori": [308, 309], "torchrl_demo": [309, 310], "torchrl_env": [309, 311], "698": 309, "2070": 309, "demo": 310, "icml": 310, "vmoen": 310, "fb": 310, "invest": 310, "platform": 310, "media": 310, "truli": 310, "predominantli": 310, "tensordict1": 310, "tensordict2": 310, "tensordict_sampl": 310, "_sampler": 310, "_sum_tre": 310, "modulenotfounderror": 310, "28791671991348267": 310, "gym_env": 310, "noopresetenv": [310, 311], "lazyconv2d": 310, "backbone_modul": 310, "params_expand": 310, "tensordict_exp": 310, "base_modul": 310, "0137": 310, "1524": 310, "0641": 310, "viewbackward0": 310, "asstridedbackward0": 310, "8728": 310, "1334": 310, "3494": 310, "6887": 310, "6402": 310, "_safetanhbackward": 310, "1132": 310, "1762": 310, "3430": 310, "2668": 310, "2918": 310, "6239": 310, "roughli": 310, "tensordicts_prealloc": 310, "tensordicts_stack": 310, "tensordict_rollout": [310, 311], "disclaim": 310, "concatmodul": 310, "loss_td": 310, "year": 310, "roadmap": 310, "compris": 310, "contributor": 310, "curiou": 310, "nascent": 310, "unsupervis": 311, "rom": 311, "licens": 311, "pygam": 311, "unifi": 311, "insid": 311, "_build_env": 311, "sphinx_gallery_start_ignor": 311, "filterwarn": 311, "sphinx_gallery_end_ignor": 311, "adventur": 311, "v5": 311, "airraid": 311, "alien": 311, "amidar": 311, "assault": 311, "void": 311, "reproduct": 311, "tensordict_tprim": 311, "imshow": 311, "axesimag": 311, "0x7fd157b18730": 311, "inconsist": 311, "pong": 311, "swingup": 311, "swingup_spars": 311, "ball_in_cup": 311, "catch": 311, "balance_spars": 311, "three_pol": 311, "two_pol": 311, "finger": 311, "turn_easi": 311, "turn_hard": 311, "fish": 311, "swim": 311, "hopper": 311, "hop": 311, "run_pure_st": 311, "bring_bal": 311, "bring_peg": 311, "insert_bal": 311, "insert_peg": 311, "point_mass": 311, "reacher": 311, "swimmer": 311, "swimmer6": 311, "swimmer15": 311, "walker": 311, "dog": 311, "trot": 311, "humanoid_cmu": 311, "lqr": 311, "lqr_2_1": 311, "lqr_6_2": 311, "quadrup": 311, "escap": 311, "stacker": 311, "stack_2": 311, "stack_4": 311, "wrapper1": 311, "wrapper2": 311, "obviou": 311, "truth": 311, "env0": 311, "env_transformed_bi": 311, "stanc": 311, "transformeddistribut": 311, "base_dist": 311, "concat": 311, "mofidi": 311, "transformedenviron": 311, "moderet": 311, "computation": 311, "legitim": 311, "incom": 311, "amongst": 311, "wor": 311, "convention": 311, "scope": 311, "markovian": 311, "3288080526": 311, "constain": 311, "bar_": 311, "get_someth": 311, "bar_0eb88538": 311, "aargh": 311, "foo_list": 311, "vec_env": 311, "_dispatch_caller_parallel": 311, "0x7fd24a2b14c0": 311, "bar_164c782c": 311, "9781": 311, "bar_1650c83c": 311, "82c3": 311, "bar_164f5ad8": 311, "8802": 311, "parallen": 311, "particularili": 311, "evolv": 311, "steadi": 311, "approx": 311, "5325": 311, "1930": 311, "4063": 311, "_extra_st": 311, "observation_ssq": 311, "observation_sum": 311, "0541": 311, "2920": 311, "2844": 311, "dispach": 311, "absor": 311}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 0, 1, "", "EnvBase"], [68, 0, 1, "", "EnvCreator"], [69, 0, 1, "", "EnvMetaData"], [70, 0, 1, "", "GymLikeEnv"], [71, 2, 1, "", "ModelBasedEnvBase"], [72, 0, 1, "", "MultiThreadedEnv"], [73, 0, 1, "", "ParallelEnv"], [74, 0, 1, "", "SerialEnv"], [71, 1, 1, "", "rand_step"], [71, 1, 1, "", "reset"], [71, 1, 1, "", "rollout"], [71, 1, 1, "", "set_seed"], [71, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[67, 3, 1, "", "action_key"], [67, 3, 1, "", "action_keys"], [67, 3, 1, "", "action_spec"], [67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 3, 1, "", "batch_locked"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 3, 1, "", "done_key"], [67, 3, 1, "", "done_keys"], [67, 3, 1, "", "done_spec"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fake_tensordict"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 3, 1, "", "input_spec"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 3, 1, "", "observation_spec"], [67, 3, 1, "", "output_spec"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "rand_action"], [67, 1, 1, "id0", "rand_step"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "id1", "reset"], [67, 3, 1, "", "reward_key"], [67, 3, 1, "", "reward_keys"], [67, 3, 1, "", "reward_spec"], [67, 1, 1, "id2", "rollout"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "id3", "set_seed"], [67, 1, 1, "", "share_memory"], [67, 3, 1, "", "specs"], [67, 1, 1, "", "state_dict"], [67, 3, 1, "", "state_spec"], [67, 1, 1, "id4", "step"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[70, 3, 1, "", "action_key"], [70, 3, 1, "", "action_keys"], [70, 3, 1, "", "action_spec"], [70, 1, 1, "", "add_module"], [70, 1, 1, "", "apply"], [70, 3, 1, "", "batch_locked"], [70, 1, 1, "", "bfloat16"], [70, 1, 1, "", "buffers"], [70, 1, 1, "", "children"], [70, 1, 1, "", "close"], [70, 1, 1, "", "compile"], [70, 1, 1, "", "cpu"], [70, 1, 1, "", "cuda"], [70, 3, 1, "", "done_key"], [70, 3, 1, "", "done_keys"], [70, 3, 1, "", "done_spec"], [70, 1, 1, "", "double"], [70, 1, 1, "", "eval"], [70, 1, 1, "", "extra_repr"], [70, 1, 1, "", "fake_tensordict"], [70, 1, 1, "", "float"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "get_buffer"], [70, 1, 1, "", "get_extra_state"], [70, 1, 1, "", "get_parameter"], [70, 1, 1, "", "get_submodule"], [70, 1, 1, "", "half"], [70, 3, 1, "", "input_spec"], [70, 1, 1, "", "ipu"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "modules"], [70, 1, 1, "", "named_buffers"], [70, 1, 1, "", "named_children"], [70, 1, 1, "", "named_modules"], [70, 1, 1, "", "named_parameters"], [70, 3, 1, "", "observation_spec"], [70, 3, 1, "", "output_spec"], [70, 1, 1, "", "parameters"], [70, 1, 1, "", "rand_action"], [70, 1, 1, "", "rand_step"], [70, 1, 1, "", "read_action"], [70, 1, 1, "", "read_done"], [70, 1, 1, "", "read_obs"], [70, 1, 1, "", "read_reward"], [70, 1, 1, "", "register_backward_hook"], [70, 1, 1, "", "register_buffer"], [70, 1, 1, "", "register_forward_hook"], [70, 1, 1, "", "register_forward_pre_hook"], [70, 1, 1, "", "register_full_backward_hook"], [70, 1, 1, "", "register_full_backward_pre_hook"], [70, 1, 1, "", "register_load_state_dict_post_hook"], [70, 1, 1, "", "register_module"], [70, 1, 1, "", "register_parameter"], [70, 1, 1, "", "register_state_dict_pre_hook"], [70, 1, 1, "", "requires_grad_"], [70, 1, 1, "", "reset"], [70, 3, 1, "", "reward_key"], [70, 3, 1, "", "reward_keys"], [70, 3, 1, "", "reward_spec"], [70, 1, 1, "", "rollout"], [70, 1, 1, "", "set_extra_state"], [70, 1, 1, "", "set_info_dict_reader"], [70, 1, 1, "", "set_seed"], [70, 1, 1, "", "share_memory"], [70, 3, 1, "", "specs"], [70, 1, 1, "", "state_dict"], [70, 3, 1, "", "state_spec"], [70, 1, 1, "", "step"], [70, 1, 1, "", "to"], [70, 1, 1, "", "to_empty"], [70, 1, 1, "", "train"], [70, 1, 1, "", "type"], [70, 1, 1, "", "xpu"], [70, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[72, 3, 1, "", "action_key"], [72, 3, 1, "", "action_keys"], [72, 3, 1, "", "action_spec"], [72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "close"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 3, 1, "", "done_key"], [72, 3, 1, "", "done_keys"], [72, 3, 1, "", "done_spec"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "fake_tensordict"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 3, 1, "", "input_spec"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 3, 1, "", "observation_spec"], [72, 3, 1, "", "output_spec"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "rand_action"], [72, 1, 1, "", "rand_step"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset"], [72, 3, 1, "", "reward_key"], [72, 3, 1, "", "reward_keys"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "", "rollout"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "share_memory"], [72, 3, 1, "", "specs"], [72, 1, 1, "", "state_dict"], [72, 3, 1, "", "state_spec"], [72, 1, 1, "", "step"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_keys"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_keys"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 3, 1, "", "input_spec"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 3, 1, "", "observation_spec"], [73, 3, 1, "", "output_spec"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "reset"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_keys"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 3, 1, "", "state_spec"], [73, 1, 1, "", "step"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "update_kwargs"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[74, 3, 1, "", "action_key"], [74, 3, 1, "", "action_keys"], [74, 3, 1, "", "action_spec"], [74, 1, 1, "", "add_module"], [74, 1, 1, "", "apply"], [74, 3, 1, "", "batch_locked"], [74, 1, 1, "", "bfloat16"], [74, 1, 1, "", "buffers"], [74, 1, 1, "", "children"], [74, 1, 1, "", "compile"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 3, 1, "", "done_key"], [74, 3, 1, "", "done_keys"], [74, 3, 1, "", "done_spec"], [74, 1, 1, "", "double"], [74, 1, 1, "", "eval"], [74, 1, 1, "", "extra_repr"], [74, 1, 1, "", "fake_tensordict"], [74, 1, 1, "", "float"], [74, 1, 1, "", "forward"], [74, 1, 1, "", "get_buffer"], [74, 1, 1, "", "get_extra_state"], [74, 1, 1, "", "get_parameter"], [74, 1, 1, "", "get_submodule"], [74, 1, 1, "", "half"], [74, 3, 1, "", "input_spec"], [74, 1, 1, "", "ipu"], [74, 1, 1, "", "load_state_dict"], [74, 1, 1, "", "modules"], [74, 1, 1, "", "named_buffers"], [74, 1, 1, "", "named_children"], [74, 1, 1, "", "named_modules"], [74, 1, 1, "", "named_parameters"], [74, 3, 1, "", "observation_spec"], [74, 3, 1, "", "output_spec"], [74, 1, 1, "", "parameters"], [74, 1, 1, "", "rand_action"], [74, 1, 1, "", "rand_step"], [74, 1, 1, "", "register_backward_hook"], [74, 1, 1, "", "register_buffer"], [74, 1, 1, "", "register_forward_hook"], [74, 1, 1, "", "register_forward_pre_hook"], [74, 1, 1, "", "register_full_backward_hook"], [74, 1, 1, "", "register_full_backward_pre_hook"], [74, 1, 1, "", "register_load_state_dict_post_hook"], [74, 1, 1, "", "register_module"], [74, 1, 1, "", "register_parameter"], [74, 1, 1, "", "register_state_dict_pre_hook"], [74, 1, 1, "", "requires_grad_"], [74, 1, 1, "", "reset"], [74, 3, 1, "", "reward_key"], [74, 3, 1, "", "reward_keys"], [74, 3, 1, "", "reward_spec"], [74, 1, 1, "", "rollout"], [74, 1, 1, "", "set_extra_state"], [74, 1, 1, "", "set_seed"], [74, 1, 1, "", "share_memory"], [74, 3, 1, "", "specs"], [74, 1, 1, "", "state_dict"], [74, 3, 1, "", "state_spec"], [74, 1, 1, "", "step"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_empty"], [74, 1, 1, "", "train"], [74, 1, 1, "", "type"], [74, 1, 1, "", "update_kwargs"], [74, 1, 1, "", "xpu"], [74, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[75, 2, 1, "", "BraxEnv"], [76, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[77, 2, 1, "", "DMControlEnv"], [78, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[79, 2, 1, "", "GymEnv"], [80, 2, 1, "", "GymWrapper"], [81, 2, 1, "", "MOGymEnv"], [82, 2, 1, "", "MOGymWrapper"], [83, 2, 1, "", "gym_backend"], [84, 2, 1, "", "set_gym_backend"]], "torchrl.envs.libs.habitat": [[85, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[86, 2, 1, "", "JumanjiEnv"], [87, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[88, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[89, 2, 1, "", "VmasEnv"], [90, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[91, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[92, 0, 1, "", "ActionMask"], [93, 0, 1, "", "BinarizeReward"], [94, 0, 1, "", "CatFrames"], [95, 0, 1, "", "CatTensors"], [96, 0, 1, "", "CenterCrop"], [97, 0, 1, "", "ClipTransform"], [98, 0, 1, "", "Compose"], [99, 0, 1, "", "DTypeCastTransform"], [100, 0, 1, "", "DeviceCastTransform"], [101, 0, 1, "", "DiscreteActionProjection"], [102, 0, 1, "", "DoubleToFloat"], [103, 0, 1, "", "ExcludeTransform"], [104, 0, 1, "", "FiniteTensorDictCheck"], [105, 0, 1, "", "FlattenObservation"], [106, 0, 1, "", "FrameSkipTransform"], [107, 0, 1, "", "GrayScale"], [108, 0, 1, "", "InitTracker"], [109, 0, 1, "", "KLRewardTransform"], [110, 0, 1, "", "NoopResetEnv"], [111, 0, 1, "", "ObservationNorm"], [112, 0, 1, "", "ObservationTransform"], [113, 0, 1, "", "PinMemoryTransform"], [114, 0, 1, "", "R3MTransform"], [115, 0, 1, "", "RandomCropTensorDict"], [116, 0, 1, "", "RenameTransform"], [117, 0, 1, "", "Resize"], [118, 0, 1, "", "Reward2GoTransform"], [119, 0, 1, "", "RewardClipping"], [120, 0, 1, "", "RewardScaling"], [121, 0, 1, "", "RewardSum"], [122, 0, 1, "", "SelectTransform"], [123, 0, 1, "", "SqueezeTransform"], [124, 0, 1, "", "StepCounter"], [125, 0, 1, "", "TargetReturn"], [126, 0, 1, "", "TensorDictPrimer"], [127, 0, 1, "", "TimeMaxPool"], [128, 0, 1, "", "ToTensorImage"], [129, 0, 1, "", "Transform"], [130, 0, 1, "", "TransformedEnv"], [131, 0, 1, "", "UnsqueezeTransform"], [132, 0, 1, "", "VC1Transform"], [133, 0, 1, "", "VIPRewardTransform"], [134, 0, 1, "", "VIPTransform"], [135, 0, 1, "", "VecNorm"], [136, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[93, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[94, 1, 1, "", "forward"], [94, 1, 1, "", "reset"], [94, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[95, 1, 1, "", "forward"], [95, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[96, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[97, 1, 1, "", "transform_observation_spec"], [97, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "reset"], [98, 1, 1, "", "to"], [98, 1, 1, "", "transform_env_device"], [98, 1, 1, "", "transform_input_spec"], [98, 1, 1, "", "transform_observation_spec"], [98, 1, 1, "", "transform_output_spec"], [98, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "transform_input_spec"], [99, 1, 1, "", "transform_observation_spec"], [99, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "transform_done_spec"], [100, 1, 1, "", "transform_env_device"], [100, 1, 1, "", "transform_input_spec"], [100, 1, 1, "", "transform_observation_spec"], [100, 1, 1, "", "transform_output_spec"], [100, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[101, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "reset"], [103, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[104, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[105, 1, 1, "", "forward"], [105, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[106, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[107, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "reset"], [108, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[109, 1, 1, "", "forward"], [109, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[110, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[111, 1, 1, "", "init_stats"], [111, 1, 1, "", "transform_input_spec"], [111, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[113, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[114, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[115, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "transform_input_spec"], [116, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[117, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[118, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[119, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[120, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "reset"], [121, 1, 1, "", "transform_input_spec"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "reset"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "reset"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "reset"], [125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "reset"], [126, 1, 1, "", "to"], [126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "reset"], [127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[129, 3, 1, "", "container"], [129, 1, 1, "", "forward"], [129, 3, 1, "", "parent"], [129, 1, 1, "", "reset"], [129, 1, 1, "", "to"], [129, 1, 1, "", "transform_done_spec"], [129, 1, 1, "", "transform_env_device"], [129, 1, 1, "", "transform_input_spec"], [129, 1, 1, "", "transform_observation_spec"], [129, 1, 1, "", "transform_output_spec"], [129, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[130, 3, 1, "", "batch_locked"], [130, 1, 1, "", "eval"], [130, 3, 1, "", "input_spec"], [130, 1, 1, "", "load_state_dict"], [130, 3, 1, "", "output_spec"], [130, 1, 1, "", "set_missing_tolerance"], [130, 1, 1, "", "set_seed"], [130, 1, 1, "", "state_dict"], [130, 1, 1, "", "to"], [130, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[131, 1, 1, "", "transform_input_spec"], [131, 1, 1, "", "transform_observation_spec"], [131, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "make_noload_model"], [132, 1, 1, "", "to"], [132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[134, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[135, 1, 1, "", "build_td_for_shared_vecnorm"], [135, 1, 1, "", "forward"], [135, 1, 1, "", "get_extra_state"], [135, 1, 1, "", "set_extra_state"], [135, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[137, 2, 1, "", "check_env_specs"], [138, 2, 1, "", "exploration_mode"], [139, 2, 1, "", "exploration_type"], [140, 2, 1, "", "get_available_libraries"], [141, 2, 1, "", "make_composite_from_td"], [142, 2, 1, "", "set_exploration_mode"], [143, 2, 1, "", "set_exploration_type"], [144, 2, 1, "", "step_mdp"]], "torchrl.modules": [[145, 0, 1, "", "CEMPlanner"], [146, 0, 1, "", "ConvNet"], [147, 0, 1, "", "DTActor"], [148, 0, 1, "", "DdpgCnnActor"], [149, 0, 1, "", "DdpgCnnQNet"], [150, 0, 1, "", "DdpgMlpActor"], [151, 0, 1, "", "DdpgMlpQNet"], [152, 0, 1, "", "DecisionTransformer"], [153, 0, 1, "", "Delta"], [154, 0, 1, "", "DistributionalDQNnet"], [155, 0, 1, "", "DistributionalQValueHook"], [156, 0, 1, "", "DreamerActor"], [157, 0, 1, "", "DuelingCnnDQNet"], [158, 0, 1, "", "IndependentNormal"], [159, 0, 1, "", "LSTMModule"], [160, 0, 1, "", "LSTMNet"], [161, 0, 1, "", "MLP"], [162, 0, 1, "", "MPCPlannerBase"], [163, 0, 1, "", "MPPIPlanner"], [164, 0, 1, "", "MaskedCategorical"], [165, 0, 1, "", "MaskedOneHotCategorical"], [166, 0, 1, "", "MultiAgentMLP"], [167, 0, 1, "", "NoisyLazyLinear"], [168, 0, 1, "", "NoisyLinear"], [169, 0, 1, "", "NormalParamWrapper"], [170, 0, 1, "", "ObsDecoder"], [171, 0, 1, "", "ObsEncoder"], [172, 0, 1, "", "OneHotCategorical"], [173, 0, 1, "", "OnlineDTActor"], [174, 0, 1, "", "QMixer"], [175, 0, 1, "", "QValueHook"], [176, 0, 1, "", "RSSMPosterior"], [177, 0, 1, "", "RSSMPrior"], [178, 0, 1, "", "Squeeze2dLayer"], [179, 0, 1, "", "SqueezeLayer"], [180, 0, 1, "", "TanhDelta"], [181, 0, 1, "", "TanhNormal"], [182, 0, 1, "", "TruncatedNormal"], [183, 0, 1, "", "VDNMixer"], [184, 0, 1, "", "VmapModule"], [185, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[145, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[146, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[147, 1, 1, "", "default_config"], [147, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[148, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[149, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[150, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[151, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[152, 0, 1, "", "DTConfig"], [152, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[153, 1, 1, "", "log_prob"], [153, 3, 1, "", "mean"], [153, 3, 1, "", "mode"], [153, 1, 1, "", "rsample"], [153, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[154, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[156, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[157, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[158, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "set_recurrent_mode"], [159, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[160, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[161, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[163, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[164, 1, 1, "", "log_prob"], [164, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[165, 1, 1, "", "log_prob"], [165, 1, 1, "", "rsample"], [165, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[166, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[167, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[169, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[170, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[171, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[172, 1, 1, "", "log_prob"], [172, 3, 1, "", "mode"], [172, 1, 1, "", "rsample"], [172, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[173, 1, 1, "", "default_config"], [173, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[174, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[176, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[177, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[179, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[180, 3, 1, "", "mean"], [180, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[181, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[182, 1, 1, "", "log_prob"], [182, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[183, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[184, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[186, 0, 1, "", "Actor"], [187, 0, 1, "", "ActorCriticOperator"], [188, 0, 1, "", "ActorCriticWrapper"], [189, 0, 1, "", "ActorValueOperator"], [190, 0, 1, "", "AdditiveGaussianWrapper"], [191, 0, 1, "", "DecisionTransformerInferenceWrapper"], [192, 0, 1, "", "DistributionalQValueActor"], [193, 0, 1, "", "DistributionalQValueModule"], [194, 0, 1, "", "EGreedyModule"], [195, 0, 1, "", "LMHeadActorValueOperator"], [196, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [197, 0, 1, "", "ProbabilisticActor"], [198, 0, 1, "", "QValueActor"], [199, 0, 1, "", "QValueModule"], [200, 0, 1, "", "SafeModule"], [201, 0, 1, "", "SafeProbabilisticModule"], [202, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [203, 0, 1, "", "SafeSequential"], [204, 0, 1, "", "TanhModule"], [205, 0, 1, "", "ValueOperator"], [206, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[187, 1, 1, "", "get_critic_operator"], [187, 1, 1, "", "get_policy_head"], [187, 1, 1, "", "get_value_head"], [187, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[188, 1, 1, "", "get_policy_head"], [188, 1, 1, "", "get_policy_operator"], [188, 1, 1, "", "get_value_head"], [188, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[189, 1, 1, "", "get_policy_head"], [189, 1, 1, "", "get_policy_operator"], [189, 1, 1, "", "get_value_head"], [189, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "mask_context"], [191, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[193, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[199, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[200, 1, 1, "", "random"], [200, 1, 1, "", "random_sample"], [200, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[201, 1, 1, "", "random"], [201, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[204, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[206, 1, 1, "", "get_reward_operator"], [206, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[207, 0, 1, "", "biased_softplus"], [208, 0, 1, "", "inv_softplus"], [209, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[207, 1, 1, "", "forward"]], "torchrl.objectives": [[210, 0, 1, "", "A2CLoss"], [211, 0, 1, "", "CQLLoss"], [212, 0, 1, "", "ClipPPOLoss"], [213, 0, 1, "", "DDPGLoss"], [214, 0, 1, "", "DQNLoss"], [215, 0, 1, "", "DTLoss"], [216, 0, 1, "", "DiscreteSACLoss"], [217, 0, 1, "", "DistributionalDQNLoss"], [218, 0, 1, "", "DreamerActorLoss"], [219, 0, 1, "", "DreamerModelLoss"], [220, 0, 1, "", "DreamerValueLoss"], [221, 0, 1, "", "HardUpdate"], [222, 0, 1, "", "IQLLoss"], [223, 0, 1, "", "KLPENPPOLoss"], [224, 0, 1, "", "LossModule"], [225, 0, 1, "", "OnlineDTLoss"], [226, 0, 1, "", "PPOLoss"], [227, 0, 1, "", "REDQLoss"], [228, 0, 1, "", "ReinforceLoss"], [229, 0, 1, "", "SACLoss"], [230, 0, 1, "", "SoftUpdate"], [231, 0, 1, "", "TD3Loss"], [232, 0, 1, "", "ValueEstimators"], [233, 0, 1, "", "default_value_kwargs"], [234, 0, 1, "", "distance_loss"], [235, 0, 1, "", "hold_out_net"], [236, 0, 1, "", "hold_out_params"], [238, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[211, 1, 1, "", "forward"], [211, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[212, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[215, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[219, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[220, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "loss_value_diff"], [222, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[223, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[224, 1, 1, "", "convert_to_functional"], [224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"], [224, 1, 1, "", "named_parameters"], [224, 1, 1, "", "parameters"], [224, 1, 1, "", "set_keys"], [224, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[225, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[237, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[239, 0, 1, "", "GAE"], [240, 0, 1, "", "TD0Estimator"], [241, 0, 1, "", "TD1Estimator"], [242, 0, 1, "", "TDLambdaEstimator"], [243, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[242, 1, 1, "", "forward"], [242, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "set_keys"], [243, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[244, 0, 1, "", "generalized_advantage_estimate"], [245, 0, 1, "", "reward2go"], [246, 0, 1, "", "td0_advantage_estimate"], [247, 0, 1, "", "td0_return_estimate"], [248, 0, 1, "", "td1_advantage_estimate"], [249, 0, 1, "", "td1_return_estimate"], [250, 0, 1, "", "td_lambda_advantage_estimate"], [251, 0, 1, "", "td_lambda_return_estimate"], [252, 0, 1, "", "vec_generalized_advantage_estimate"], [253, 0, 1, "", "vec_td1_advantage_estimate"], [254, 0, 1, "", "vec_td1_return_estimate"], [255, 0, 1, "", "vec_td_lambda_advantage_estimate"], [256, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[257, 2, 1, "", "TensorDictRecorder"], [258, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[259, 2, 1, "", "Logger"], [261, 2, 1, "", "generate_exp_name"], [262, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[260, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[263, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[264, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[265, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[266, 0, 1, "", "BatchSubSampler"], [267, 0, 1, "", "ClearCudaCache"], [268, 0, 1, "", "CountFramesLog"], [269, 0, 1, "", "LogReward"], [270, 0, 1, "", "OptimizerHook"], [271, 0, 1, "", "Recorder"], [272, 0, 1, "", "ReplayBufferTrainer"], [273, 0, 1, "", "RewardNormalizer"], [274, 0, 1, "", "SelectKeys"], [275, 0, 1, "", "Trainer"], [276, 0, 1, "", "TrainerHookBase"], [277, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[266, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[267, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[268, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[269, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[270, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[271, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[272, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[273, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[274, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[276, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[277, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[278, 2, 1, "", "correct_for_frame_skip"], [279, 2, 1, "", "get_stats_random_rollout"], [280, 2, 1, "", "make_collector_offpolicy"], [281, 2, 1, "", "make_collector_onpolicy"], [282, 2, 1, "", "make_dqn_loss"], [283, 2, 1, "", "make_redq_loss"], [284, 2, 1, "", "make_redq_model"], [285, 2, 1, "", "make_replay_buffer"], [286, 2, 1, "", "make_target_updater"], [287, 2, 1, "", "make_trainer"], [288, 2, 1, "", "parallel_env_constructor"], [289, 2, 1, "", "sync_async_collector"], [290, 2, 1, "", "sync_sync_collector"], [291, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 295, 296, 297, 298, 299, 300, 301, 305, 306, 310, 311], "tutori": [0, 301, 305], "basic": [0, 308], "intermedi": [0, 8], "advanc": 0, "refer": [0, 293], "knowledg": [0, 294], "base": [0, 7, 294], "indic": 0, "tabl": 0, "collector": [1, 299, 300, 301, 302, 305, 310], "packag": [1, 2, 3, 295, 296, 297, 298], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 299, 300, 301, 305, 310], "distribut": [1, 295], "helper": [1, 3], "function": [1, 4, 296, 300, 301, 305, 310], "replai": [2, 299, 300, 301, 302, 305, 308, 310], "buffer": [2, 299, 300, 301, 302, 305, 308, 310], "compos": [2, 98], "store": [2, 300], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 296, 301, 305], "learn": [2, 4, 301, 305], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 295, 296, 297], "env": [3, 306, 310, 311], "vector": [3, 310], "multi": [3, 295, 296, 304, 305], "agent": [3, 4, 295, 296, 305], "environ": [3, 4, 6, 7, 299, 300, 301, 302, 304, 305, 306, 310, 311], "transform": [3, 129, 299, 301, 305, 306, 308, 310, 311], "clone": [3, 7], "record": [3, 271, 297, 299], "domain": [3, 295], "specif": [3, 295, 304], "librari": [3, 310], "thing": [4, 299, 306], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 310], "gener": [4, 295], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 299, 306], "algorithm": [4, 295], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 299, 300], "return": [4, 296], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 299, 301, 302, 304, 305, 306], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 310], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "action": [4, 302, 306], "magnitud": 4, "task": [4, 304], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 299, 300, 301], "standard": 4, "explor": [4, 295, 299, 300], "valu": [4, 295, 296, 299, 301, 302], "loss": [4, 299, 300, 301, 302, 305], "earli": 4, "train": [4, 8, 296, 299, 301, 302, 305, 306], "roughli": 4, "uniformli": 4, "random": [4, 305], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 300], "increas": 4, "an": [4, 301, 302, 306], "dynam": [4, 308], "can": 4, "low": 4, "forward": [4, 299], "model": [4, 295, 299, 300, 302, 307, 310], "also": 4, "us": [4, 6, 9, 302, 307, 308, 310], "offlin": 4, "observ": [4, 299], "space": 4, "effect": [4, 306], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 311], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 310], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 305, 311], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 299], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 306], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 299, 308], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "envbas": [67, 306], "envcreat": 68, "envmetadata": 69, "gymlikeenv": 70, "modelbasedenvbas": 71, "multithreadedenv": 72, "parallelenv": 73, "serialenv": 74, "braxenv": 75, "braxwrapp": 76, "dmcontrolenv": 77, "dmcontrolwrapp": 78, "gymenv": 79, "gymwrapp": 80, "mogymenv": 81, "mogymwrapp": 82, "gym_backend": 83, "set_gym_backend": 84, "habitatenv": 85, "jumanjienv": 86, "jumanjiwrapp": 87, "openmlenv": 88, "vmasenv": 89, "vmaswrapp": 90, "dreamerenv": 91, "actionmask": 92, "binarizereward": 93, "catfram": [94, 308], "cattensor": 95, "centercrop": 96, "cliptransform": 97, "dtypecasttransform": 99, "devicecasttransform": 100, "discreteactionproject": 101, "doubletofloat": 102, "excludetransform": 103, "finitetensordictcheck": 104, "flattenobserv": 105, "frameskiptransform": 106, "grayscal": 107, "inittrack": 108, "klrewardtransform": 109, "noopresetenv": 110, "observationnorm": 111, "observationtransform": 112, "pinmemorytransform": 113, "r3mtransform": 114, "randomcroptensordict": 115, "renametransform": 116, "resiz": 117, "reward2gotransform": 118, "rewardclip": 119, "rewardsc": 120, "rewardsum": 121, "selecttransform": 122, "squeezetransform": 123, "stepcount": 124, "targetreturn": 125, "tensordictprim": 126, "timemaxpool": 127, "totensorimag": 128, "transformedenv": 130, "unsqueezetransform": 131, "vc1transform": 132, "viprewardtransform": 133, "viptransform": 134, "vecnorm": [135, 311], "gsdenois": 136, "check_env_spec": 137, "exploration_mod": 138, "exploration_typ": 139, "get_available_librari": 140, "make_composite_from_td": 141, "set_exploration_mod": 142, "set_exploration_typ": 143, "step_mdp": 144, "cemplann": 145, "convnet": 146, "dtactor": 147, "ddpgcnnactor": 148, "ddpgcnnqnet": 149, "ddpgmlpactor": 150, "ddpgmlpqnet": 151, "decisiontransform": 152, "delta": 153, "distributionaldqnnet": 154, "distributionalqvaluehook": 155, "dreameractor": 156, "duelingcnndqnet": 157, "independentnorm": 158, "lstmmodul": 159, "lstmnet": 160, "mlp": [161, 302], "mpcplannerbas": 162, "mppiplann": 163, "maskedcategor": 164, "maskedonehotcategor": 165, "multiagentmlp": 166, "noisylazylinear": 167, "noisylinear": 168, "normalparamwrapp": 169, "obsdecod": 170, "obsencod": 171, "onehotcategor": 172, "onlinedtactor": 173, "qmixer": [174, 296], "qvaluehook": 175, "rssmposterior": 176, "rssmprior": 177, "squeeze2dlay": 178, "squeezelay": 179, "tanhdelta": 180, "tanhnorm": 181, "truncatednorm": 182, "vdnmixer": 183, "vmapmodul": 184, "reset_nois": 185, "actor": [186, 295, 299], "actorcriticoper": 187, "actorcriticwrapp": 188, "actorvalueoper": 189, "additivegaussianwrapp": 190, "decisiontransformerinferencewrapp": 191, "distributionalqvalueactor": 192, "distributionalqvaluemodul": 193, "egreedymodul": 194, "lmheadactorvalueoper": 195, "ornsteinuhlenbeckprocesswrapp": 196, "probabilisticactor": 197, "qvalueactor": 198, "qvaluemodul": 199, "safemodul": [200, 295], "safeprobabilisticmodul": 201, "safeprobabilistictensordictsequenti": 202, "safesequenti": 203, "tanhmodul": 204, "valueoper": 205, "worldmodelwrapp": 206, "biased_softplu": 207, "inv_softplu": 208, "map": 209, "a2closs": 210, "cqlloss": 211, "clipppoloss": 212, "ddpgloss": 213, "dqnloss": 214, "dtloss": 215, "discretesacloss": 216, "distributionaldqnloss": 217, "dreameractorloss": 218, "dreamermodelloss": 219, "dreamervalueloss": 220, "hardupd": 221, "iqlloss": 222, "klpenppoloss": 223, "lossmodul": [224, 299], "onlinedtloss": 225, "ppoloss": 226, "redqloss": 227, "reinforceloss": 228, "sacloss": 229, "softupd": 230, "td3loss": 231, "valueestim": 232, "default_value_kwarg": 233, "distance_loss": 234, "hold_out_net": 235, "hold_out_param": 236, "qmixerloss": 237, "next_state_valu": 238, "gae": 239, "td0estim": 240, "td1estim": 241, "tdlambdaestim": 242, "valueestimatorbas": 243, "generalized_advantage_estim": 244, "reward2go": 245, "td0_advantage_estim": 246, "td0_return_estim": 247, "td1_advantage_estim": 248, "td1_return_estim": 249, "td_lambda_advantage_estim": 250, "td_lambda_return_estim": 251, "vec_generalized_advantage_estim": 252, "vec_td1_advantage_estim": 253, "vec_td1_return_estim": 254, "vec_td_lambda_advantage_estim": 255, "vec_td_lambda_return_estim": 256, "tensordictrecord": 257, "videorecord": 258, "logger": [259, 297], "csvlogger": 260, "generate_exp_nam": 261, "get_logg": 262, "mlflowlogg": 263, "tensorboardlogg": 264, "wandblogg": 265, "batchsubsampl": 266, "clearcudacach": 267, "countframeslog": 268, "logreward": 269, "optimizerhook": 270, "replaybuffertrain": 272, "rewardnorm": 273, "selectkei": 274, "trainer": [275, 297, 300], "trainerhookbas": 276, "updateweight": 277, "correct_for_frame_skip": 278, "get_stats_random_rollout": 279, "make_collector_offpolici": 280, "make_collector_onpolici": 281, "make_dqn_loss": 282, "make_redq_loss": 283, "make_redq_model": 284, "make_replay_buff": 285, "make_target_updat": 286, "make_train": 287, "parallel_env_constructor": 288, "sync_async_collector": 289, "sync_sync_collector": 290, "transformed_env_constructor": 291, "readm": [292, 303], "tuto": [292, 303], "api": 293, "contribut": [294, 310], "content": 294, "modul": [295, 299, 302, 310], "tensordict": [295, 308, 310], "wrapper": 295, "probabilist": 295, "q": [295, 300, 302], "oper": 295, "join": 295, "hook": [295, 297, 300], "regular": 295, "planner": 295, "object": [296, 299, 310], "dqn": [296, 300, 302], "ddpg": [296, 299], "sac": 296, "redq": 296, "iql": 296, "cql": 296, "dt": 296, "td3": 296, "ppo": [296, 301, 305], "a2c": 296, "dreamer": 296, "checkpoint": 297, "builder": 297, "_util": 298, "code": [299, 306], "setup": [299, 302], "The": 299, "__init__": 299, "method": 299, "estim": 299, "put": 299, "togeth": [299, 306], "call": 299, "parallel": [299, 304, 311], "execut": [299, 304, 306], "stat": 299, "build": [299, 300, 308], "evalu": 299, "batch": [299, 306, 308], "size": [299, 308], "construct": 299, "target": [299, 300], "network": [299, 300, 301, 302, 305], "updat": 299, "time": [299, 309], "experi": [299, 306], "result": [299, 301, 305], "conclus": [299, 300, 301, 302, 305, 306, 308], "A": [300, 308], "exampl": [300, 308], "comput": [300, 306, 309], "deep": 300, "collect": [300, 301], "paramet": [300, 301], "hyperparamet": [300, 301, 305], "regist": 300, "possibl": 300, "improv": 300, "defin": [301, 305], "loop": [301, 302, 305, 306], "next": [301, 305], "step": [301, 305, 311], "recurr": 302, "convolut": 302, "lstm": 302, "select": 302, "divers": 304, "rollout": [304, 305, 306, 311], "critic": 305, "pendulum": 306, "write": 306, "_step": 306, "reset": [306, 311], "simul": 306, "_reset": 306, "metadata": 306, "_spec": 306, "spec": [306, 311], "shape": 306, "seed": [306, 311], "wrap": 306, "class": [306, 310], "test": 306, "our": 306, "custom": [306, 308], "simpl": 306, "pretrain": 307, "vanilla": 308, "integr": 308, "tensorclass": 308, "sampl": 308, "iter": 308, "over": 308, "fix": 308, "priorit": 308, "save": 308, "raw": 308, "imag": 308, "more": 308, "complex": 308, "introduct": 310, "config": 310, "tensordictmodul": 310, "sequenc": 310, "program": 310, "ensembl": 310, "meta": 310, "special": 310, "state": 310, "frame_skip": 311, "deepmind": 311, "control": 311, "devic": 311, "run": 311, "close": 311, "access": 311, "attribut": 311, "kwarg": 311}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})