Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.gym.MOGymEnv", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper", "reference/generated/torchrl.envs.libs.gym.gym_backend", "reference/generated/torchrl.envs.libs.gym.set_gym_backend", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.MOGymEnv.rst", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.gym_backend.rst", "reference/generated/torchrl.envs.libs.gym.set_gym_backend.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "MOGymEnv", "MOGymWrapper", "gym_backend", "set_gym_backend", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 88, 93, 95, 97, 99, 100, 102, 108, 109, 112, 113, 114, 116, 124, 126, 127, 128, 130, 133, 135, 144, 146, 147, 148, 149, 157, 158, 159, 160, 163, 164, 168, 175, 176, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 203, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 255, 258, 267, 268, 272, 273, 276, 285, 286, 287, 288, 291, 292, 293, 296, 297, 301, 302, 304, 305, 307, 308], "open": [0, 5, 7, 11, 297, 302, 307], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308], "reinforc": [0, 3, 9, 93, 146, 147, 148, 149, 153, 190, 193, 207, 208, 212, 214, 218, 219, 225, 226, 227, 290, 297, 300, 303, 306, 307], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 93, 146, 147, 148, 149, 153, 161, 165, 190, 193, 207, 208, 212, 214, 218, 219, 224, 225, 226, 227, 290, 292, 293, 296, 297, 299, 300, 301, 303, 305, 306, 307, 308], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 71, 123, 165, 183, 194, 202, 207, 221, 223, 263, 291, 292, 293, 294, 296, 297, 298, 302, 304, 305, 308], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 72, 138, 290, 291, 292, 295, 296, 297, 298, 302, 303, 308], "pytorch": [0, 1, 2, 3, 126, 164, 165, 272, 291, 294, 296, 298, 299, 302, 303, 304, 307, 308], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 67, 70, 71, 72, 73, 74, 85, 107, 109, 113, 123, 128, 135, 146, 148, 154, 163, 171, 173, 174, 180, 181, 190, 193, 196, 198, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 234, 235, 236, 268, 281, 291, 292, 293, 296, 297, 299, 302, 303, 304, 305, 307, 308], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 67, 70, 71, 72, 73, 74, 94, 95, 97, 100, 103, 108, 109, 112, 113, 116, 119, 124, 128, 130, 132, 133, 144, 150, 153, 157, 158, 159, 160, 162, 163, 181, 183, 187, 190, 191, 193, 194, 195, 196, 201, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 255, 259, 263, 269, 276, 281, 284, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "python": [0, 3, 5, 6, 7, 10, 21, 84, 162, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 70, 93, 94, 103, 109, 112, 113, 126, 128, 130, 157, 159, 163, 164, 168, 183, 188, 189, 190, 194, 195, 197, 198, 209, 216, 220, 221, 223, 254, 271, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "low": [0, 99, 190, 201, 296, 297, 303, 307], "high": [0, 9, 41, 99, 108, 190, 201, 236, 241, 249, 296, 297, 305, 307], "level": [0, 3, 4, 22, 26, 28, 93, 220, 296, 297, 307], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 67, 110, 160, 240, 264, 273, 294, 298, 303, 307], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 67, 68, 70, 71, 72, 73, 74, 88, 96, 97, 99, 100, 102, 103, 107, 108, 112, 119, 124, 126, 127, 128, 129, 130, 132, 133, 139, 143, 149, 151, 157, 158, 160, 162, 165, 169, 171, 174, 188, 189, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 231, 234, 235, 236, 237, 238, 239, 240, 269, 284, 288, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 99, 181, 221, 292, 307], "effici": [0, 1, 2, 4, 8, 165, 292, 296, 297, 298, 299, 301, 302, 304, 305, 307], "modular": [0, 200, 305, 307], "document": [0, 5, 7, 18, 19, 21, 32, 67, 70, 72, 73, 74, 128, 297, 307], "properli": [0, 67, 70, 72, 73, 74, 298, 302, 303, 307], "test": [0, 3, 5, 130, 135, 157, 158, 268, 284, 298, 299, 307], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 72, 73, 74, 93, 96, 97, 100, 101, 109, 112, 116, 118, 120, 123, 124, 127, 128, 130, 132, 142, 143, 146, 147, 148, 149, 150, 157, 158, 160, 161, 162, 165, 166, 172, 173, 174, 183, 184, 188, 190, 193, 194, 196, 197, 198, 200, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 242, 257, 260, 261, 262, 263, 267, 284, 286, 287, 292, 293, 294, 297, 298, 299, 302, 303, 304, 305, 307, 308], "code": [0, 3, 5, 7, 8, 112, 130, 157, 200, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308], "aim": [0, 3, 7, 28, 29, 112, 130, 132, 159, 275, 291, 292, 293, 296, 297, 307], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 72, 88, 109, 127, 138, 153, 181, 189, 190, 197, 200, 214, 236, 237, 238, 239, 260, 292, 294, 298, 299, 302, 303, 305, 307], "research": [0, 7, 9, 307], "most": [0, 3, 7, 8, 32, 99, 296, 298, 303, 307, 308], "written": [0, 3, 34, 36, 39, 45, 52, 55, 67, 70, 72, 73, 74, 93, 107, 119, 122, 125, 142, 183, 193, 194, 197, 198, 202, 207, 209, 220, 223, 225, 235, 254, 255, 292, 293, 294, 296, 299, 301, 303, 307], "highli": [0, 2, 307, 308], "wai": [0, 3, 4, 112, 114, 132, 223, 236, 237, 238, 239, 292, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 67, 68, 70, 72, 73, 74, 84, 93, 96, 97, 99, 100, 108, 109, 112, 113, 116, 119, 123, 124, 127, 128, 130, 132, 133, 143, 156, 157, 160, 161, 163, 165, 166, 179, 181, 183, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 268, 281, 286, 287, 288, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "easili": [0, 3, 7, 281, 293, 296, 297, 298, 302, 307, 308], "swap": [0, 3, 298, 304, 307], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 153, 172, 189, 190, 196, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 267, 272, 296, 297, 298, 299, 301, 302, 303, 304, 307], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 145, 146, 150, 153, 154, 170, 171, 172, 180, 188, 192, 201, 204, 206, 212, 222, 255, 269, 281, 288, 290, 297, 299, 300, 304, 306], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 72, 73, 74, 97, 100, 128, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 180, 181, 187, 188, 190, 191, 193, 196, 201, 204, 220, 255, 296, 297, 299, 301, 302, 303, 304, 305, 307, 308], "write": [0, 3, 8, 23, 32, 37, 45, 70, 111, 183, 197, 198, 200, 202, 208, 210, 211, 213, 219, 224, 226, 228, 235, 240, 255, 292, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 67, 70, 72, 73, 74, 119, 127, 133, 142, 157, 193, 197, 198, 203, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 296, 298, 299, 302, 303, 307, 308], "ones": [0, 15, 26, 32, 35, 41, 42, 67, 70, 72, 73, 74, 94, 96, 97, 98, 100, 109, 112, 116, 123, 124, 127, 128, 130, 132, 162, 181, 197, 207, 208, 210, 219, 223, 224, 226, 228, 242, 296, 298, 302, 303, 305, 307, 308], "littl": [0, 3, 43, 298, 299, 305, 307, 308], "effort": [0, 3, 303, 305, 307], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 84, 85, 93, 94, 96, 97, 98, 99, 100, 102, 104, 106, 107, 109, 112, 113, 114, 116, 119, 120, 124, 125, 127, 128, 130, 131, 132, 133, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 234, 236, 237, 238, 239, 240, 254, 263, 265, 268, 269, 272, 274, 275, 276, 281, 284, 288, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "repo": [0, 6, 52, 130, 291, 302, 307], "attempt": [0, 187, 191, 193, 211, 219, 234, 307], "align": [0, 307], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 67, 70, 72, 73, 74, 94, 98, 128, 276, 288, 302, 307, 308], "ecosystem": [0, 307], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 67, 68, 70, 72, 73, 74, 93, 124, 128, 157, 187, 190, 191, 193, 198, 220, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 88, 133, 290, 296, 297, 304, 305, 307, 308], "pillar": [0, 307], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 93, 94, 97, 98, 99, 100, 104, 108, 109, 112, 113, 123, 127, 128, 130, 133, 135, 143, 157, 158, 160, 161, 187, 191, 193, 215, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 263, 265, 268, 275, 276, 277, 278, 281, 284, 285, 286, 287, 288, 290, 291, 292, 300, 304, 305, 306], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 67, 70, 71, 72, 73, 74, 97, 112, 124, 130, 132, 134, 144, 145, 150, 157, 159, 160, 161, 163, 170, 171, 180, 184, 185, 186, 192, 197, 203, 207, 208, 209, 211, 212, 215, 216, 217, 219, 220, 221, 223, 224, 226, 234, 272, 277, 278, 279, 280, 281, 290, 291, 294, 298, 300, 302, 303, 305, 306, 308], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 88, 93, 97, 98, 100, 107, 109, 116, 122, 135, 139, 143, 153, 157, 158, 161, 163, 172, 181, 183, 189, 191, 193, 194, 195, 197, 200, 201, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 263, 269, 272, 274, 277, 284, 286, 287, 288, 290, 292, 293, 294, 299, 303, 304, 305, 308], "util": [0, 3, 17, 23, 32, 40, 67, 70, 72, 73, 74, 112, 132, 135, 136, 137, 138, 139, 140, 141, 142, 144, 150, 204, 205, 206, 221, 284, 290, 295, 296, 298, 302, 303, 307, 308], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 67, 68, 70, 72, 73, 74, 94, 96, 103, 109, 112, 119, 124, 127, 128, 130, 132, 135, 156, 157, 161, 163, 166, 172, 178, 179, 188, 190, 194, 196, 197, 198, 235, 236, 237, 238, 239, 263, 275, 287, 292, 296, 297, 298, 302, 303, 304, 307, 308], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 67, 68, 70, 72, 73, 74, 94, 96, 103, 109, 112, 119, 124, 127, 128, 130, 132, 135, 156, 157, 161, 163, 178, 179, 188, 194, 197, 198, 235, 245, 246, 247, 248, 250, 251, 252, 253, 287, 292, 296, 297, 298, 302, 303, 304, 307, 308], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 93, 116, 122, 193, 269, 272, 274, 277, 278, 284, 286, 287, 290, 294, 305, 308], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 67, 70, 71, 72, 73, 74, 96, 97, 100, 112, 124, 127, 128, 130, 132, 133, 142, 143, 144, 159, 161, 163, 183, 189, 190, 194, 196, 197, 202, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 242, 259, 263, 275, 281, 284, 285, 286, 287, 288, 292, 293, 294, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 67, 70, 72, 73, 74, 107, 128, 159, 163, 296, 297, 298, 305, 307, 308], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 67, 70, 72, 73, 74, 93, 97, 100, 107, 108, 109, 123, 124, 127, 128, 133, 135, 144, 158, 159, 163, 181, 199, 200, 207, 209, 220, 223, 231, 234, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 272, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "few": [0, 2, 8, 263, 298, 299, 302, 305, 307, 308], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 97, 100, 202, 223, 292, 296, 298, 299, 302, 303, 307, 308], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 144, 197, 268, 272, 292, 296, 298, 299, 302, 303, 305, 307, 308], "standard": [0, 3, 109, 118, 133, 143, 154, 161, 164, 165, 187, 188, 228, 236, 237, 238, 239, 296, 297, 302, 305, 307], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 126, 272, 303, 305, 307, 308], "common": [0, 3, 4, 21, 70, 73, 74, 184, 185, 186, 192, 207, 208, 209, 213, 219, 220, 223, 224, 225, 226, 228, 284, 291, 292, 294, 296, 298, 301, 302, 304, 307, 308], "openai": [0, 7, 79, 80, 298, 303, 307, 308], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 93, 106, 107, 109, 114, 116, 124, 133, 157, 281, 284, 291, 296, 297, 298, 299, 303, 304, 305, 307], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 93, 94, 96, 97, 99, 100, 103, 109, 112, 113, 116, 123, 124, 127, 128, 130, 132, 133, 157, 158, 163, 183, 188, 189, 194, 195, 197, 198, 199, 200, 207, 209, 210, 213, 219, 220, 221, 223, 224, 225, 226, 227, 228, 236, 237, 238, 239, 240, 276, 294, 296, 297, 298, 299, 301, 302, 303, 305, 307, 308], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 68, 70, 71, 72, 73, 74, 77, 88, 92, 93, 94, 95, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 178, 179, 181, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 260, 263, 265, 266, 267, 268, 269, 270, 272, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 292, 299, 302, 303, 305, 307], "On": [0, 3, 7, 18, 19, 20, 21, 292, 297, 302], "end": [0, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 123, 128, 144, 160, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "come": [0, 1, 3, 8, 73, 74, 97, 100, 183, 184, 185, 186, 194, 202, 296, 297, 298, 299, 302, 305, 307, 308], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 84, 94, 96, 97, 100, 106, 107, 112, 122, 123, 124, 127, 128, 130, 132, 135, 140, 141, 157, 160, 163, 187, 188, 197, 221, 223, 240, 263, 268, 269, 278, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "re": [0, 3, 8, 32, 62, 67, 70, 72, 73, 74, 157, 162, 194, 198, 294, 296, 298, 299, 301, 303, 307, 308], "usabl": [0, 294, 299, 307], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 84, 97, 100, 128, 133, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 162, 163, 166, 167, 168, 169, 170, 173, 174, 176, 179, 181, 184, 185, 186, 187, 188, 190, 191, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 281, 284, 290, 292, 296, 299, 301, 303, 305, 308], "cost": [0, 2, 27, 296, 297, 302, 303, 305], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 142, 143, 145, 146, 147, 148, 149, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 170, 171, 173, 174, 177, 178, 179, 180, 183, 184, 185, 186, 188, 194, 196, 197, 198, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 231, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 272, 275, 277, 281, 284, 285, 286, 287, 288, 290, 292, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 67, 68, 70, 72, 73, 74, 133, 163, 190, 193, 196, 294, 296, 297, 299, 302, 303, 304, 305, 307, 308], "good": [0, 1, 4, 9, 296, 298, 299, 302, 307, 308], "runtim": [0, 3, 32, 67, 70, 72, 73, 74, 303], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 67, 70, 72, 73, 74, 97, 100, 108, 128, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 216, 223, 268, 272, 293, 296, 297, 298, 299, 301, 302, 303, 308], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 67, 70, 72, 73, 74, 133, 184, 185, 186, 193, 213, 221, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 292, 293, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 111, 113, 114, 116, 119, 120, 122, 123, 124, 125, 127, 130, 131, 133, 169, 183, 184, 185, 186, 189, 194, 197, 198, 200, 202, 203, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 255, 268, 272, 281, 292, 296, 297, 298, 299, 301, 302, 303, 304, 308], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 126, 130, 134, 153, 159, 164, 166, 183, 187, 189, 190, 191, 197, 202, 207, 214, 221, 223, 236, 241, 249, 267, 291, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 308], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 293, 296, 297, 298, 302, 303, 307, 308], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 294, 296, 301, 304, 308], "beyond": 0, "api": [0, 3, 5, 112, 132, 293, 294, 302, 303, 307, 308], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 67, 68, 70, 71, 72, 73, 74, 93, 94, 102, 107, 113, 135, 157, 183, 189, 190, 194, 195, 196, 197, 198, 292, 293, 297, 298, 299, 301, 302, 303, 304, 305, 308], "paper": [0, 112, 130, 132, 171, 180, 218, 281, 296, 298, 302], "ppo": [0, 4, 8, 194, 198, 209, 220, 223, 290, 292, 296, 297, 300, 306], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 93, 96, 106, 107, 109, 114, 116, 124, 128, 133, 157, 284, 292, 297, 298, 300, 306, 307, 308], "your": [0, 2, 3, 7, 8, 10, 18, 32, 67, 70, 72, 73, 74, 133, 288, 291, 292, 293, 297, 298, 299, 300, 302, 305, 306, 307], "introduct": [0, 293, 300, 302, 306, 308], "multi": [0, 7, 9, 28, 29, 32, 67, 70, 72, 73, 74, 157, 158, 159, 163, 234, 236, 237, 238, 239, 290, 296, 297, 298, 299, 300, 303, 306, 307], "agent": [0, 9, 28, 29, 123, 162, 163, 165, 171, 180, 234, 290, 300, 303, 306], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 157, 160, 161, 197, 221, 254, 276, 277, 278, 281, 284, 286, 287, 288, 290, 292, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 67, 68, 70, 71, 72, 73, 74, 77, 84, 88, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 109, 112, 113, 114, 116, 123, 124, 126, 127, 128, 130, 132, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 150, 153, 154, 156, 157, 159, 160, 161, 163, 165, 166, 170, 171, 172, 178, 179, 180, 181, 183, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 282, 284, 288, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 306, 308], "pretrain": [0, 300, 306], "recurr": [0, 157, 174, 297, 300, 305, 306], "dqn": [0, 153, 189, 190, 207, 208, 210, 211, 213, 214, 215, 218, 219, 221, 223, 224, 225, 226, 227, 228, 234, 279, 290, 292, 300, 306], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 67, 70, 72, 73, 74, 97, 104, 112, 123, 128, 130, 132, 135, 146, 148, 157, 187, 191, 193, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 236, 272, 274, 284, 290, 294, 297, 300, 304, 305, 306, 308], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 67, 70, 71, 72, 73, 74, 99, 107, 123, 140, 141, 153, 157, 163, 165, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 207, 208, 209, 210, 213, 219, 220, 222, 223, 224, 225, 226, 228, 268, 274, 277, 278, 284, 286, 287, 292, 293, 294, 297, 300, 304, 305, 306, 307, 308], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 93, 99, 113, 116, 124, 208, 210, 211, 213, 219, 224, 226, 228, 269, 272, 282, 284, 290, 294, 300, 303, 304, 306], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 93, 96, 99, 112, 113, 116, 124, 127, 128, 130, 132, 197, 200, 208, 210, 211, 213, 219, 224, 226, 228, 269, 272, 282, 284, 290, 294, 300, 303, 304, 306, 308], "task": [0, 3, 9, 28, 29, 40, 45, 73, 74, 77, 112, 130, 132, 219, 296, 297, 298, 299, 300, 302, 303, 306, 307, 308], "specif": [0, 2, 5, 8, 41, 42, 70, 150, 188, 272, 290, 293, 294, 298, 299, 300, 302, 305, 306], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 97, 100, 109, 112, 127, 128, 130, 133, 161, 171, 180, 183, 184, 194, 197, 198, 199, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 276, 277, 278, 283, 284, 288, 290, 292, 294, 297, 298, 299, 300, 302, 303, 305, 306, 308], "ddpg": [0, 146, 147, 148, 149, 210, 218, 227, 290, 292, 297, 300, 306], "loss": [0, 3, 8, 36, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 236, 267, 272, 279, 280, 281, 284, 293, 294, 300, 303, 305, 306, 307], "trainer": [0, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 85, 99, 104, 107, 112, 113, 114, 124, 127, 128, 130, 131, 133, 134, 135, 142, 143, 144, 153, 157, 159, 161, 162, 163, 165, 166, 181, 187, 188, 189, 190, 191, 194, 195, 198, 200, 201, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 234, 236, 237, 238, 239, 240, 242, 256, 257, 260, 265, 272, 274, 281, 284, 293, 296, 298, 300, 302, 303, 306, 308], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 106, 107, 109, 112, 114, 116, 123, 124, 126, 127, 128, 130, 132, 133, 139, 142, 143, 144, 145, 150, 153, 157, 158, 159, 161, 163, 166, 169, 170, 171, 172, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 229, 230, 234, 236, 237, 238, 239, 242, 263, 264, 265, 266, 267, 269, 270, 271, 274, 281, 284, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308], "packag": [0, 6, 7, 10, 84, 290, 291, 308], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 93, 94, 112, 132, 144, 157, 158, 159, 163, 196, 200, 209, 211, 213, 214, 220, 223, 224, 228, 236, 237, 238, 239, 245, 246, 247, 248, 250, 251, 252, 253, 281, 288, 290, 296, 297, 298, 299, 301, 302, 303, 304, 305], "node": [0, 2, 18, 19, 20, 21, 22, 281, 290], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 107, 109, 143, 151, 152, 153, 154, 156, 161, 162, 166, 169, 170, 173, 174, 177, 178, 179, 187, 188, 189, 190, 194, 198, 199, 207, 208, 209, 213, 214, 219, 220, 223, 224, 225, 226, 228, 290, 294, 297, 298, 302, 303, 307, 308], "helper": [0, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 297, 299, 303], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 67, 70, 72, 73, 74, 93, 127, 128, 133, 192, 216, 281, 290, 296, 297, 298, 299, 301, 302, 305, 307, 308], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 67, 70, 71, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 174, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 208, 211, 213, 224, 226, 228, 234, 290, 303], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 84, 93, 94, 97, 98, 99, 100, 101, 106, 107, 109, 112, 113, 114, 116, 120, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 139, 142, 143, 146, 147, 148, 149, 150, 153, 156, 157, 159, 160, 161, 163, 164, 166, 170, 171, 172, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 213, 214, 215, 219, 220, 221, 223, 224, 225, 226, 228, 230, 234, 235, 236, 237, 238, 239, 254, 255, 263, 269, 272, 275, 276, 281, 282, 284, 285, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "human": [0, 290, 303], "feedback": [0, 290, 307], "rlhf": [0, 34, 40, 45, 54, 107, 290, 292], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 68, 70, 72, 73, 74, 97, 100, 108, 114, 127, 128, 133, 135, 143, 160, 161, 268, 276, 277, 278, 281, 284, 286, 287, 288, 290, 299], "gymlikeenv": [0, 290], "envmetadata": [0, 290], "vector": [0, 1, 8, 24, 27, 33, 99, 146, 148, 159, 236, 239, 249, 250, 251, 252, 253, 290, 296, 297, 299, 301, 302, 303, 304, 308], "record": [0, 32, 67, 70, 72, 73, 74, 107, 223, 254, 255, 256, 257, 258, 259, 260, 261, 262, 284, 290, 297, 298], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 67, 70, 72, 73, 74, 99, 124, 139, 183, 189, 190, 194, 195, 196, 197, 198, 199, 200, 290, 298, 299, 302, 303, 307, 308], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 67, 70, 71, 72, 73, 74, 84, 96, 99, 107, 112, 113, 123, 124, 127, 128, 130, 132, 133, 134, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 232, 234, 236, 237, 238, 239, 240, 272, 279, 280, 284, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 142, 143, 152, 153, 157, 158, 160, 161, 171, 172, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 254, 263, 267, 268, 269, 271, 272, 281, 290, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 308], "actor": [0, 4, 15, 21, 107, 143, 145, 146, 148, 153, 154, 161, 170, 172, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 234, 281, 290, 293, 297, 298, 299, 302, 304, 307], "explor": [0, 1, 134, 165, 183, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 207, 268, 277, 278, 284, 290, 298, 299, 302, 303], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 84, 92, 93, 94, 97, 99, 100, 108, 109, 112, 113, 116, 117, 119, 124, 125, 127, 128, 132, 133, 139, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 169, 171, 172, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 263, 265, 266, 267, 268, 269, 272, 281, 284, 290, 294, 297, 301, 302, 303, 305, 307, 308], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 67, 68, 70, 71, 72, 73, 74, 96, 98, 107, 109, 114, 119, 120, 127, 151, 162, 169, 183, 194, 198, 202, 203, 224, 230, 236, 241, 249, 258, 272, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308], "hook": [0, 32, 67, 70, 72, 73, 74, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 172, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 290], "planner": [0, 143, 161, 290], "sac": [0, 213, 224, 226, 290], "redq": [0, 224, 280, 281, 290], "iql": [0, 219, 290, 302], "cql": [0, 208, 290], "dt": [0, 193, 290, 303], "td3": [0, 228, 290], "a2c": [0, 207, 290], "dreamer": [0, 91, 154, 215, 216, 217, 290, 292], "checkpoint": [0, 290, 304], "builder": [0, 290, 297, 308], "logger": [0, 255, 257, 258, 259, 260, 261, 262, 266, 272, 284, 288, 290, 297], "_util": [0, 3, 11, 290], "implement_for": [0, 3, 290], "contribut": 0, "thing": [0, 3, 7, 8, 291, 298, 299, 302, 305, 308], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 67, 70, 72, 73, 74, 99, 133, 151, 177, 291, 296, 303, 305], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 68, 70, 72, 73, 74, 88, 93, 96, 97, 99, 100, 107, 108, 109, 112, 113, 119, 123, 124, 127, 128, 130, 132, 133, 140, 141, 143, 159, 160, 161, 162, 164, 172, 178, 194, 197, 198, 200, 204, 209, 211, 214, 220, 223, 229, 234, 235, 236, 237, 238, 239, 254, 255, 269, 288, 291, 292, 294, 296, 297, 298, 299, 302, 303, 304, 305, 308], "debug": [0, 6, 8, 40, 291, 308], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 67, 70, 72, 73, 74, 94, 107, 112, 130, 133, 144, 159, 190, 196, 201, 209, 220, 223, 272, 291, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "habitat": [0, 3, 85, 291, 304], "lab": [0, 3, 77, 78, 291], "mujoco": [0, 6, 8, 291, 298, 299], "error": [0, 1, 3, 7, 10, 11, 29, 32, 67, 70, 72, 73, 74, 113, 135, 291, 296, 298, 302, 308], "solut": [0, 3, 6, 7, 9, 21, 291, 292, 294, 307], "resourc": [0, 1, 21, 291, 296, 298, 302], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 67, 70, 72, 73, 74, 186, 221, 226, 236, 239, 291, 292, 296, 298, 299, 302, 303, 304, 308], "issu": [0, 4, 5, 8, 55, 56, 65, 113, 183, 189, 190, 194, 195, 196, 197, 198, 291, 307], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 67, 70, 72, 73, 74, 93, 99, 142, 162, 301, 302, 305, 307], "search": [0, 297], "page": [0, 7], "somewhat": [1, 293, 308], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 67, 70, 72, 73, 74, 98, 128, 223, 269, 307, 308], "dataload": [1, 54, 62, 297, 298, 305], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 102, 116, 157, 169, 187, 191, 193, 292, 297, 305, 307, 308], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 104, 107, 108, 109, 112, 113, 114, 116, 123, 124, 125, 126, 127, 128, 130, 132, 133, 139, 142, 143, 144, 145, 146, 147, 149, 150, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 204, 207, 208, 209, 210, 211, 213, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 239, 242, 244, 245, 246, 250, 251, 253, 263, 268, 269, 270, 281, 284, 288, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 102, 107, 112, 127, 128, 132, 157, 158, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 269, 272, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 93, 109, 112, 132, 135, 193, 208, 210, 213, 224, 226, 228, 263, 269, 272, 274, 275, 276, 284, 294, 296, 299, 302, 303, 304, 305, 307, 308], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 67, 70, 72, 73, 74, 99, 109, 125, 142, 181, 200, 214, 216, 221, 242, 275, 294, 296, 297, 298, 302, 303, 308], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 92, 96, 103, 112, 124, 127, 128, 129, 130, 132, 142, 157, 197, 198, 207, 208, 210, 211, 213, 214, 215, 216, 219, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 292, 296, 299, 302, 303, 305, 308], "static": [1, 11, 40, 45, 133, 219, 303, 305], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 67, 68, 70, 72, 73, 74, 88, 89, 90, 94, 96, 97, 98, 99, 100, 107, 109, 112, 116, 124, 127, 128, 130, 132, 133, 139, 144, 145, 146, 147, 148, 150, 153, 155, 157, 158, 159, 162, 163, 166, 170, 181, 188, 189, 190, 191, 193, 197, 201, 202, 207, 208, 209, 210, 213, 219, 220, 223, 224, 225, 226, 228, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 263, 292, 293, 296, 297, 298, 299, 301, 302, 303, 305, 307, 308], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 67, 70, 72, 73, 74, 85, 123, 126, 135, 163, 192, 224, 293, 296, 298, 299, 302, 303, 304, 305, 308], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 67, 70, 72, 73, 74, 97, 99, 100, 108, 114, 128, 140, 141, 157, 193, 209, 220, 223, 255, 269, 274, 286, 287, 288, 292, 296, 297, 298, 299, 302, 303, 305], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 93, 96, 112, 124, 126, 127, 128, 130, 132, 133, 135, 144, 157, 163, 165, 171, 180, 184, 186, 187, 190, 194, 197, 198, 201, 208, 219, 221, 226, 236, 237, 238, 239, 240, 281, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 67, 70, 71, 72, 73, 74, 93, 96, 103, 112, 119, 124, 127, 128, 129, 130, 132, 181, 197, 198, 199, 221, 294, 298, 308], "two": [1, 3, 4, 8, 10, 32, 62, 67, 70, 72, 73, 74, 109, 112, 132, 149, 157, 175, 198, 220, 231, 268, 272, 281, 293, 296, 297, 298, 299, 301, 302, 303, 305, 307, 308], "main": [1, 2, 3, 5, 20, 22, 68, 198, 272, 292, 293, 296, 297, 301, 308], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 142, 144, 157, 159, 163, 164, 181, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 234, 236, 237, 238, 239, 240, 254, 265, 275, 281, 284, 285, 288, 296, 297, 298, 299, 302, 303, 305, 308], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 67, 70, 71, 72, 73, 74, 97, 100, 107, 109, 112, 119, 128, 130, 132, 133, 142, 152, 157, 159, 162, 167, 172, 190, 195, 196, 198, 200, 201, 202, 221, 233, 236, 239, 254, 268, 269, 286, 287, 292, 296, 298, 301, 303, 304, 305, 307, 308], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 127, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 281, 285, 288, 292, 296, 297, 298, 302, 305], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 67, 70, 72, 73, 74, 101, 109, 120, 144, 159, 163, 176, 183, 189, 194, 195, 197, 199, 200, 202, 221, 233, 268, 271, 272, 281, 293, 294, 296, 298, 299, 302, 303], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 124, 157, 199, 200, 276, 288, 292, 294, 297, 298, 299, 302, 305, 306, 308], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 68, 70, 71, 72, 73, 74, 76, 87, 103, 106, 108, 109, 122, 123, 124, 125, 128, 142, 143, 154, 157, 158, 160, 161, 187, 191, 193, 194, 198, 207, 215, 223, 235, 236, 237, 238, 239, 242, 243, 244, 254, 263, 268, 272, 294, 296, 297, 299, 301, 303, 304, 305, 307], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 67, 70, 72, 73, 74, 112, 127, 130, 133, 200, 296, 303, 307], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 67, 70, 72, 73, 74, 113, 123, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 211, 221, 236, 237, 238, 239, 240, 254, 285, 296, 297, 299, 303, 305, 308], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 67, 70, 71, 72, 73, 74, 88, 93, 99, 104, 108, 109, 118, 122, 125, 133, 143, 144, 151, 152, 154, 155, 156, 157, 159, 161, 163, 166, 167, 168, 171, 173, 174, 177, 178, 179, 180, 183, 187, 188, 191, 193, 194, 197, 198, 202, 206, 208, 213, 215, 219, 220, 222, 224, 226, 228, 263, 265, 268, 272, 274, 275, 276, 286, 287, 288, 292, 296, 297, 298, 299, 302, 303, 304, 308], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 157, 159, 164, 165, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 237, 238, 239, 269, 296, 298, 299, 302, 303, 305, 308], "deliv": [1, 16, 18, 19, 20, 296, 297, 307], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 67, 70, 72, 73, 74, 133, 157, 199, 200, 254, 263, 292, 297, 301, 303, 307], "user": [1, 2, 3, 5, 8, 21, 32, 52, 67, 70, 72, 73, 74, 123, 128, 150, 158, 223, 285, 293, 294, 296, 297, 303, 307, 308], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 93, 96, 101, 103, 106, 108, 112, 119, 120, 122, 123, 124, 125, 127, 130, 131, 133, 135, 157, 182, 193, 254, 281, 296, 297, 298, 299, 301, 302, 307], "whenev": [1, 3, 32, 35, 38, 41, 42, 84, 106, 128, 221, 236, 237, 238, 239, 274, 292], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 67, 70, 72, 73, 74, 187, 191, 193, 296, 298, 302, 307, 308], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 98, 100, 108, 109, 114, 116, 118, 120, 122, 124, 127, 133, 142, 143, 157, 161, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 281, 293, 296, 298, 299, 301, 302, 303, 304, 305, 307, 308], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 67, 70, 71, 72, 73, 74, 76, 87, 93, 94, 96, 101, 106, 109, 114, 120, 122, 123, 127, 128, 131, 133, 142, 143, 145, 150, 154, 157, 158, 159, 161, 167, 170, 171, 173, 174, 180, 184, 197, 203, 207, 209, 220, 221, 223, 224, 225, 234, 235, 236, 237, 238, 239, 240, 242, 288, 292, 293, 296, 297, 298, 299, 302, 303, 308], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 142, 157, 164, 187, 189, 191, 195, 216, 297, 298, 299, 302, 303, 304, 305, 308], "predefin": [1, 297, 298, 305], "becaus": [1, 3, 4, 7, 40, 67, 70, 72, 73, 74, 107, 127, 149, 158, 163, 183, 189, 190, 194, 195, 196, 197, 198, 296, 297, 299, 301, 302, 303, 305, 308], "potenti": [1, 303, 305], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 67, 70, 72, 73, 74, 109, 128, 131, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 167, 168, 170, 173, 174, 176, 178, 179, 181, 184, 187, 188, 190, 191, 193, 194, 196, 198, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 276, 293, 296, 298, 299, 301, 302, 304, 305], "heavi": [1, 8, 305], "crucial": [1, 187, 191, 193, 219, 221, 296, 297, 298, 299, 302, 303, 308], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 107, 145, 150, 170, 221, 223, 281, 292, 296, 297, 298, 302, 303], "hyperparamet": [1, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 296, 303, 305], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 124, 285, 288, 296, 305], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 77, 78, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 284, 285, 286, 287, 288, 292, 293, 296, 299, 302, 303, 304, 307], "take": [1, 3, 8, 23, 40, 67, 70, 72, 73, 74, 122, 123, 125, 127, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 192, 193, 196, 201, 204, 206, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 274, 292, 294, 296, 297, 298, 302, 303, 305, 308], "consider": [1, 3, 8, 297, 302, 305], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 71, 72, 73, 74, 97, 100, 123, 128, 144, 157, 159, 202, 208, 209, 210, 211, 213, 214, 220, 221, 223, 224, 226, 228, 234, 236, 239, 296, 297, 298, 302, 303, 308], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 71, 72, 73, 74, 93, 96, 98, 103, 107, 109, 113, 114, 116, 119, 120, 122, 123, 127, 128, 133, 135, 142, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 194, 196, 197, 198, 201, 204, 213, 218, 220, 221, 223, 224, 227, 235, 236, 237, 238, 239, 240, 255, 267, 268, 269, 272, 284, 286, 287, 288, 292, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "occur": [1, 8, 14, 28, 29, 94, 109, 113, 183, 189, 190, 194, 195, 196, 197, 198, 216, 305, 308], "serial": [1, 3, 32, 67, 70, 72, 73, 74, 133], "optim": [1, 2, 8, 32, 67, 70, 72, 73, 74, 128, 143, 161, 164, 165, 208, 221, 222, 223, 226, 267, 272, 284, 293, 294, 298, 299, 302, 303], "parallel": [1, 3, 8, 17, 135, 207, 285, 286, 287, 288, 297, 298, 302], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 93, 116, 284, 287, 290, 298, 299, 302, 305], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 286, 287, 288, 292, 293, 294, 296, 297, 298, 299, 302, 305, 308], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 68, 72, 73, 74, 133, 286, 287, 288, 296, 298, 307, 308], "multisyncdatacollector": [1, 18, 19, 20, 21, 287, 290, 298, 307], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 292, 294, 298, 305, 307], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 133, 193, 274, 292, 296, 302, 303], "aggreg": [1, 144, 146, 147, 200], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 142, 157, 159, 172, 188, 190, 196, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 236, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 274, 292, 297, 299, 303, 304, 307, 308], "final": [1, 3, 4, 21, 34, 36, 39, 40, 157, 187, 191, 192, 193, 199, 236, 268, 292, 296, 297, 298, 302, 303, 308], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 286, 290, 296, 297, 298, 307], "sever": [1, 8, 30, 32, 45, 67, 70, 72, 73, 74, 94, 128, 223, 296, 298, 305, 308], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 93, 103, 109, 113, 116, 124, 128, 129, 133, 151, 152, 157, 158, 162, 163, 164, 169, 171, 177, 181, 193, 197, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 263, 266, 269, 270, 271, 272, 274, 286, 287, 288, 294, 297, 298, 299, 301, 302, 304, 307, 308], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 113, 235, 276, 291, 296, 297, 298, 299, 302, 303, 305, 308], "continu": [1, 9, 25, 46, 67, 70, 72, 73, 74, 139, 146, 147, 148, 149, 193, 200, 207, 208, 213, 219, 223, 224, 225, 226, 227, 228, 236, 241, 249, 292, 296, 298, 299, 302, 303, 305, 307, 308], "concomitantli": 1, "network": [1, 4, 8, 32, 67, 70, 72, 73, 74, 144, 146, 147, 148, 149, 152, 154, 155, 159, 163, 165, 167, 168, 171, 173, 174, 175, 180, 184, 185, 186, 197, 201, 208, 209, 210, 211, 213, 214, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 232, 234, 236, 237, 238, 239, 240, 283, 284, 292, 293, 294, 301, 303, 308], "impli": [1, 308], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 157, 165, 197, 207, 208, 209, 213, 216, 274, 283, 292, 294, 296, 297, 298, 299, 301, 303, 305, 307], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 67, 70, 72, 73, 74, 107, 109, 120, 128, 129, 133, 135, 159, 293, 294, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308], "slightli": [1, 292, 293, 299, 303, 304, 305, 308], "lag": [1, 13, 14, 16, 17, 296, 297, 298], "therefor": [1, 3, 7, 67, 70, 72, 73, 74, 116, 123, 223, 234, 308], "although": [1, 8, 67, 70, 72, 73, 74, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 294, 296, 297, 305], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 88, 93, 107, 112, 119, 122, 125, 127, 129, 132, 142, 162, 187, 191, 193, 194, 197, 198, 206, 207, 208, 209, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 293, 294, 296, 297, 298, 301, 302, 303, 305, 308], "asynchron": [1, 9, 14, 21, 32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 207, 286, 297, 298], "off": [1, 2, 4, 156, 179, 189, 226, 268, 277, 292, 294, 296, 297, 298, 302, 304, 308], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 67, 70, 72, 73, 74, 97, 100, 103, 109, 123, 153, 157, 163, 164, 184, 186, 188, 190, 195, 207, 214, 219, 223, 268, 292, 294, 296, 297, 298, 299, 302, 303, 304, 305, 308], "remot": [1, 18, 19, 20, 21, 73, 74, 308], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 67, 70, 71, 72, 73, 74, 89, 90, 93, 97, 100, 107, 114, 135, 143, 157, 161, 193, 207, 276, 292, 296, 298, 299, 304, 305, 307], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 120, 224, 236, 237, 238, 239, 240, 293, 296, 298], "synchronis": [1, 68, 302], "either": [1, 5, 22, 32, 40, 54, 67, 70, 72, 73, 74, 123, 203, 228, 259, 294, 296, 297, 299, 304, 305, 307, 308], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 296, 302, 307], "update_at_each_batch": [1, 13, 14, 17, 296], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 89, 90, 93, 94, 96, 99, 103, 106, 107, 108, 109, 112, 113, 114, 118, 122, 124, 126, 127, 128, 129, 130, 132, 133, 135, 139, 142, 143, 144, 146, 147, 148, 149, 155, 157, 159, 161, 162, 163, 164, 165, 178, 179, 183, 184, 185, 186, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 236, 237, 238, 239, 242, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 265, 266, 268, 269, 272, 288, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "second": [1, 8, 157, 190, 209, 220, 223, 226, 271, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 96, 97, 98, 100, 107, 111, 112, 114, 116, 124, 126, 127, 128, 130, 132, 139, 142, 143, 144, 145, 146, 147, 148, 149, 153, 155, 157, 158, 159, 161, 163, 164, 165, 170, 171, 172, 180, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 200, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 269, 274, 281, 282, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 67, 70, 72, 73, 74, 103, 107, 127, 152, 153, 166, 184, 185, 186, 189, 190, 192, 197, 203, 207, 209, 210, 211, 214, 220, 223, 225, 234, 235, 236, 237, 238, 239, 272, 281, 290, 294, 296, 297, 298, 299, 301, 302, 303, 308], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 67, 68, 70, 71, 72, 73, 74, 78, 93, 109, 124, 127, 133, 139, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 204, 211, 213, 221, 234, 236, 237, 238, 239, 255, 259, 268, 276, 277, 278, 281, 284, 286, 287, 292, 293, 294, 296, 298, 299, 303, 305, 308], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 96, 97, 98, 100, 112, 114, 116, 124, 127, 128, 130, 132, 139, 142, 143, 157, 161, 164, 165, 171, 172, 180, 183, 184, 185, 186, 188, 189, 190, 194, 195, 196, 197, 200, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 269, 281, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 67, 70, 72, 73, 74, 114, 149, 157, 159, 166, 181, 183, 187, 189, 191, 197, 202, 221, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 291, 293, 296, 297, 298, 302, 303, 305, 307, 308], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 67, 68, 70, 72, 73, 74, 88, 93, 97, 98, 99, 100, 108, 109, 112, 121, 128, 129, 132, 133, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 163, 166, 167, 168, 169, 170, 172, 173, 174, 176, 181, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 234, 236, 237, 238, 239, 243, 244, 265, 267, 268, 272, 276, 281, 288, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 96, 107, 111, 112, 124, 127, 128, 130, 132, 197, 264, 296, 297, 298, 299, 302, 304, 308], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 73, 74, 94, 99, 108, 119, 127, 133, 157, 158, 164, 165, 183, 189, 194, 195, 197, 198, 201, 209, 213, 220, 223, 224, 228, 242, 281, 288, 292, 294, 296, 297, 298, 302, 303, 305, 307], "infer": [1, 73, 74, 93, 123, 133, 157, 164, 188, 296, 298, 305], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 67, 70, 71, 72, 73, 74, 77, 78, 108, 109, 128, 133, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 199, 200, 201, 204, 268, 286, 287, 288, 291, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307], "dispatch": [1, 18, 19, 20, 21, 181], "avail": [1, 3, 4, 6, 21, 62, 107, 153, 172, 194, 198, 221, 286, 287, 292, 296, 297, 298, 299, 302, 303, 305, 308], "speed": [1, 2, 4, 8, 27, 293, 296, 297, 298, 299, 302, 303, 305], "up": [1, 2, 3, 8, 9, 27, 40, 52, 223, 291, 292, 293, 296, 297, 298, 299, 302, 303, 305, 308], "avoid": [1, 32, 55, 56, 65, 67, 70, 72, 73, 74, 84, 128, 133, 183, 197, 202, 209, 220, 223, 275, 298, 302], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 166, 292, 293, 296, 297, 302], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 94, 97, 100, 103, 112, 114, 116, 121, 124, 126, 128, 129, 132, 133, 139, 142, 143, 144, 145, 150, 151, 153, 157, 158, 159, 161, 162, 163, 166, 169, 170, 171, 172, 173, 174, 177, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 202, 207, 208, 210, 211, 213, 219, 221, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 255, 263, 269, 281, 292, 297, 298, 299, 301, 302, 303, 304, 307, 308], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 67, 68, 69, 70, 72, 73, 74, 97, 100, 114, 127, 129, 133, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 164, 166, 167, 168, 170, 171, 173, 174, 176, 180, 181, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 209, 220, 221, 223, 236, 237, 238, 239, 240, 269, 286, 287, 288, 292, 296, 297, 298, 299, 301, 302, 303, 305, 308], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 88, 93, 103, 129, 133, 157, 188, 207, 209, 210, 213, 219, 220, 221, 223, 224, 225, 226, 228, 236, 237, 238, 239, 292, 293, 297, 298, 302, 305], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 67, 70, 72, 73, 74, 133, 143, 158, 161, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 281, 290, 294, 296, 298, 299, 302, 304, 305, 308], "while": [1, 3, 7, 8, 32, 67, 70, 72, 73, 74, 116, 128, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 219, 220, 223, 292, 296, 298, 299, 302, 303, 304, 305, 307], "wait": [1, 20, 21, 22, 299, 303], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 67, 70, 72, 73, 74, 84, 93, 99, 109, 114, 116, 119, 120, 124, 128, 174, 199, 200, 201, 207, 208, 210, 211, 213, 219, 223, 226, 236, 243, 244, 292, 294, 296, 297, 298, 299, 301, 302, 303, 305, 308], "impact": [1, 97, 100, 297, 299, 302], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 67, 68, 70, 72, 73, 74, 93, 96, 112, 124, 127, 128, 130, 132, 133, 197, 288, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "manag": [1, 8, 232, 233, 236, 237, 238, 239, 268], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 67, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 116, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 142, 143, 152, 157, 160, 161, 172, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 255, 266, 267, 268, 270, 271, 272, 276, 281, 293, 294, 296, 298, 299, 301, 302, 303, 305, 307, 308], "control": [1, 3, 5, 8, 16, 77, 78, 99, 142, 146, 147, 148, 149, 157, 160, 161, 174, 181, 193, 197, 198, 199, 207, 209, 220, 223, 227, 236, 241, 249, 292, 294, 296, 297, 298, 302, 303, 305], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 67, 70, 72, 73, 74, 93, 94, 104, 107, 108, 109, 112, 113, 122, 124, 125, 127, 128, 130, 135, 156, 157, 162, 179, 184, 185, 186, 188, 194, 197, 198, 200, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 231, 234, 236, 237, 238, 239, 263, 267, 281, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 296, 297, 302, 307], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 67, 70, 72, 73, 74, 93, 97, 100, 104, 123, 128, 157, 268, 272, 293, 296, 297, 298, 299, 302, 303, 305, 308], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 193, 296, 308], "usual": [1, 3, 4, 6, 7, 8, 52, 67, 70, 72, 73, 74, 165, 223, 236, 237, 238, 239, 240, 254, 281, 291, 292, 294, 296, 297, 298, 299, 302, 305, 308], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 67, 68, 70, 72, 73, 74, 93, 97, 99, 100, 104, 108, 109, 127, 128, 133, 144, 157, 159, 162, 163, 188, 193, 201, 296, 297, 298, 301, 302, 304, 305, 308], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 67, 69, 70, 72, 73, 74, 93, 97, 100, 116, 290, 294, 297, 298, 299, 302, 304], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 72, 73, 74, 77, 88, 93, 94, 99, 103, 107, 108, 109, 112, 113, 116, 118, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 177, 178, 179, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 234, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 284, 288, 294, 296, 297, 298, 299, 304, 305, 307, 308], "behaviour": [1, 3, 21, 70, 94, 97, 100, 109, 113, 123, 142, 156, 157, 179, 268, 292, 297, 299, 303, 305], "besid": 1, "those": [1, 5, 7, 26, 28, 73, 74, 97, 100, 109, 124, 157, 194, 198, 199, 200, 274, 286, 287, 292, 296, 297, 302, 303, 308], "choos": [1, 157, 223, 292, 293, 296, 297, 298, 302, 305], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 67, 70, 71, 72, 73, 74, 88, 107, 112, 130, 144, 157, 159, 190, 195, 196, 206, 207, 208, 209, 210, 213, 219, 220, 221, 223, 224, 225, 226, 228, 272, 281, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 305, 307, 308], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 275, 296, 298, 307], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 93, 104, 187, 191, 193, 254, 255, 265, 268, 272, 275, 276, 296, 297, 298, 299, 302, 305, 307, 308], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 70, 72, 73, 74, 88, 93, 96, 99, 103, 106, 107, 109, 111, 112, 119, 122, 124, 127, 128, 130, 132, 133, 135, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 161, 163, 164, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 197, 198, 200, 201, 204, 209, 220, 223, 235, 236, 237, 238, 239, 254, 268, 294, 297, 298, 299, 302, 303, 305, 308], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 93, 116, 275, 296, 297, 298, 299, 302, 305, 307], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 67, 68, 70, 72, 73, 74, 112, 119, 122, 123, 124, 125, 132, 133, 153, 157, 163, 167, 171, 172, 180, 187, 189, 190, 196, 200, 242, 245, 246, 247, 248, 250, 251, 252, 253, 268, 269, 286, 287, 292, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 275, 296, 297], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 67, 70, 71, 72, 73, 74, 99, 108, 109, 124, 135, 157, 194, 197, 198, 208, 224, 268, 276, 292, 296, 297, 298, 299, 303, 304, 305, 307, 308], "rand_step": [1, 3, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 106, 124, 133, 303, 307, 308], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 296], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 296, 297, 298], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 67, 70, 72, 73, 74, 113, 127, 143, 157, 161, 193, 223, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 290, 293, 296, 297, 298, 299, 303, 305, 307, 308], "pad": [1, 23, 37, 43, 52, 93, 144, 146, 147, 157, 158, 162, 269], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 93, 94, 109, 113, 119, 126, 157, 159, 162, 165, 189, 194, 197, 198, 221, 292, 296, 297, 299, 302, 303, 305], "mask": [1, 4, 23, 113, 162, 188, 269, 297, 299, 308], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 67, 70, 72, 73, 74, 93, 96, 112, 124, 126, 127, 128, 130, 132, 160, 197, 206, 214, 272, 291, 297, 298, 301, 302, 303, 305, 308], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 70, 113, 162, 187, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 294, 299], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 67, 70, 72, 73, 74, 104, 113, 133, 153, 162, 172, 189, 190, 195, 196, 198, 231, 236, 269, 296, 298, 299, 302], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 113, 128, 144, 159, 162, 187, 191, 193, 220, 236, 237, 238, 239, 269, 294, 308], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 268, 290, 296, 297], "strategi": [1, 16, 292, 294, 296, 297, 302, 305], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 67, 70, 72, 73, 74, 112, 132, 292, 293, 296, 298, 302, 303, 305, 308], "tool": [1, 2, 3, 5, 299, 303, 305, 308], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 83, 84, 294, 296, 298, 299, 303], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 290], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 290], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 107, 109, 112, 114, 116, 118, 123, 124, 126, 127, 128, 130, 132, 133, 139, 142, 143, 144, 145, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 242, 263, 270, 271, 281, 284, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "multiprocess": [1, 18, 19, 20, 68, 69, 133, 297, 298, 303, 308], "synchron": [1, 13, 19, 21, 72, 286, 287, 297, 298], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 97, 100, 123, 128, 133, 136, 140, 141, 151, 156, 157, 169, 177, 178, 179, 194, 198, 221, 268, 296, 297, 299, 302, 307, 308], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 187, 191, 193, 266, 270, 296, 297, 302], "dedic": [1, 3, 18, 19, 20, 21, 184, 185, 186, 292, 296, 301, 302], "folder": [1, 297], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 67, 70, 72, 73, 74, 113, 199, 200, 263, 272, 292, 296, 297, 298, 301, 307, 308], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 67, 68, 70, 71, 72, 73, 74, 93, 96, 97, 98, 100, 102, 107, 108, 109, 112, 119, 124, 125, 127, 128, 130, 132, 133, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 197, 198, 200, 201, 204, 216, 221, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 267, 272, 275, 286, 287, 288, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308], "variou": [1, 3, 13, 14, 16, 17, 157, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 234, 286, 287, 296, 297, 298, 302, 308], "machin": [1, 7, 18, 19, 20, 32, 53, 302], "One": [1, 2, 4, 8, 31, 33, 45, 93, 116, 130, 169, 187, 191, 197, 201, 227, 231, 259, 296, 297, 305, 308], "wonder": 1, "why": [1, 3, 303, 308], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 72, 74, 285, 290, 296, 297, 298, 301, 307, 308], "instead": [1, 4, 7, 8, 11, 27, 32, 67, 70, 72, 73, 74, 103, 124, 128, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 207, 208, 209, 211, 213, 214, 219, 220, 223, 224, 225, 226, 234, 236, 240, 288, 292, 303, 305, 308], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 67, 70, 72, 73, 74, 96, 97, 98, 100, 112, 120, 123, 124, 126, 127, 128, 130, 132, 156, 159, 174, 178, 179, 197, 200, 206, 207, 208, 210, 211, 213, 219, 221, 223, 224, 225, 226, 228, 274, 286, 287, 288, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308], "lower": [1, 2, 17, 21, 25, 133, 173, 174, 201, 298, 303], "io": [1, 72], "footprint": [1, 2, 305], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 63, 67, 70, 72, 73, 74, 93, 103, 112, 114, 128, 132, 133, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 164, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 195, 196, 197, 201, 204, 206, 213, 224, 225, 226, 228, 235, 240, 255, 272, 288, 292, 293, 296, 297, 298, 299, 302, 303, 305, 307, 308], "commun": [1, 2, 3, 291, 298, 308], "yet": [1, 221, 304], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 67, 69, 70, 71, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 139, 153, 172, 174, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 281, 292, 296, 297, 298, 299, 301, 302, 307], "plai": [1, 3, 93, 297, 298, 305, 308], "role": [1, 3, 297, 308], "opposit": 1, "direct": [1, 32, 67, 70, 72, 73, 74, 221, 297], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 142, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 189, 190, 191, 193, 195, 196, 201, 204, 296, 297, 298, 299, 303, 304, 305, 307, 308], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 72, 236, 237, 238, 239, 299, 302], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 68, 73, 74, 133, 157, 163, 184, 185, 186, 207, 209, 210, 213, 219, 220, 223, 224, 225, 226, 228, 288, 292, 298, 299, 301, 302, 307, 308], "among": [1, 3, 302], "achiev": [1, 3, 4, 32, 67, 70, 72, 73, 74, 123, 269, 294, 296, 297, 298, 299, 302, 303, 308], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 52, 53, 73, 112, 127, 132, 212, 221, 293, 294, 296, 297, 298, 299, 305, 308], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 268, 293, 296, 298, 302, 305, 308], "gpu": [1, 7, 8, 32, 55, 56, 65, 67, 70, 72, 73, 74, 296, 298, 299, 302, 308], "nativ": [1, 7, 9, 67, 70, 72, 73, 74, 93, 299, 305], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 156, 178, 179, 206, 291, 296, 297, 298, 299, 302, 304, 308], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 109, 133, 143, 151, 154, 157, 158, 161, 177, 187, 194, 198, 221, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 292, 293, 296, 297, 298, 302, 303, 305, 307, 308], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 157, 183, 187, 188, 189, 191, 193, 194, 195, 197, 198, 201, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 234, 236, 237, 238, 239, 240, 285, 296, 297, 298, 302, 305, 308], "build": [1, 3, 7, 23, 26, 32, 67, 70, 72, 73, 74, 133, 143, 157, 161, 192, 194, 198, 272, 279, 280, 282, 283, 292, 294, 298, 299, 302, 303, 304, 307, 308], "central": [2, 296, 297, 302, 305], "part": [2, 4, 8, 32, 40, 67, 70, 72, 73, 74, 109, 116, 119, 157, 202, 263, 288, 296, 298, 299, 303, 308], "algorithm": [2, 3, 8, 9, 13, 14, 71, 104, 207, 223, 224, 225, 226, 263, 277, 290, 293, 294, 296, 297, 298, 299, 302, 304, 305, 307], "implement": [2, 3, 9, 11, 16, 32, 63, 67, 70, 72, 73, 74, 96, 98, 107, 114, 127, 133, 156, 177, 178, 179, 207, 208, 212, 219, 221, 222, 223, 226, 281, 292, 294, 296, 297, 298, 299, 303, 307], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 52, 62, 67, 68, 70, 72, 73, 74, 93, 107, 112, 114, 124, 130, 133, 143, 157, 158, 163, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "give": [2, 7, 41, 67, 70, 71, 72, 73, 74, 93, 291, 293, 296, 297, 302, 303, 304, 307], "abil": [2, 221, 303, 305], "veri": [2, 3, 297, 303, 305, 307, 308], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 93, 113, 116, 136, 137, 140, 141, 143, 151, 156, 161, 162, 169, 170, 173, 178, 179, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 207, 208, 209, 210, 211, 220, 222, 223, 228, 263, 269, 272, 275, 292, 296, 297, 298, 299, 302, 304, 307, 308], "latenc": 2, "especi": [2, 3, 7, 8, 94], "larger": [2, 4, 219], "volum": 2, "lazymemmapstorag": [2, 93, 290, 296, 297, 299, 304, 305], "advis": [2, 308], "due": [2, 3, 5, 304, 305, 308], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 304, 305], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 67, 70, 72, 73, 74, 173, 174, 221, 240, 296, 297, 299, 304, 305, 307, 308], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 97, 98, 100, 119, 121, 123, 129, 143, 197, 198, 221, 227, 292, 296, 298, 299], "file": [2, 6, 7, 8, 254, 294, 297, 305, 306], "locat": [2, 7, 45, 70, 109, 118, 156, 166, 178, 179, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 296, 297, 298, 302, 305], "improv": [2, 4, 104, 207, 293, 302, 305], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 290, 305], "were": [2, 7, 73, 74, 298, 305], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 133, 194, 198, 220, 221, 223, 296, 297, 299], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 72, 93, 112, 130, 145, 146, 147, 148, 149, 150, 153, 154, 155, 161, 162, 165, 167, 168, 170, 171, 173, 174, 180, 190, 193, 207, 208, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 236, 241, 249, 281, 304, 307], "github": [2, 5, 6, 7, 10, 18, 19, 20, 130, 304, 307], "com": [2, 5, 6, 7, 10, 18, 19, 20, 304, 307], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 67, 70, 71, 72, 73, 74, 96, 98, 107, 112, 114, 124, 127, 128, 130, 132, 133, 137, 141, 144, 159, 162, 163, 165, 171, 180, 187, 189, 191, 194, 197, 198, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 230, 234, 242, 281, 286, 292, 296, 297, 298, 302, 303, 305, 308], "1x": 2, "lazytensorstorag": [2, 41, 42, 116, 290, 298, 302, 305], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 88, 93, 96, 99, 107, 109, 112, 114, 116, 124, 126, 127, 128, 130, 132, 139, 143, 144, 146, 147, 150, 153, 155, 157, 158, 159, 161, 162, 163, 166, 169, 171, 181, 183, 184, 185, 186, 189, 190, 194, 196, 197, 200, 201, 202, 207, 208, 210, 211, 213, 214, 215, 216, 219, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 242, 245, 246, 247, 248, 250, 251, 252, 253, 255, 271, 292, 294, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 108, 156, 178, 179, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 297, 298, 303, 305, 308], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 88, 93, 113, 144, 183, 187, 189, 197, 198, 202, 263, 296, 298, 305, 308], "pai": [2, 8, 296, 299], "attent": [2, 8, 296, 299], "alwai": [2, 3, 20, 26, 28, 32, 54, 67, 70, 72, 73, 74, 107, 108, 214, 221, 292, 293, 297, 298, 299, 302, 303, 305], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 124, 156, 171, 178, 179, 296, 299, 302, 303, 305, 307], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 93, 94, 103, 109, 113, 121, 126, 129, 133, 144, 145, 150, 157, 159, 162, 164, 165, 170, 171, 175, 176, 177, 178, 181, 189, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 288, 292, 296, 297, 298, 299, 302, 303, 305], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 98, 99, 120, 126, 130, 133, 157, 165, 166, 188, 190, 196, 198, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 236, 269, 281, 286, 287, 292, 294, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308], "word": [2, 40, 52, 221, 296, 303, 308], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 67, 68, 70, 72, 73, 74, 93, 112, 119, 127, 128, 130, 133, 139, 142, 144, 146, 147, 148, 149, 150, 155, 157, 159, 160, 163, 188, 198, 211, 214, 224, 234, 255, 269, 276, 277, 278, 284, 286, 287, 292, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308], "1m": [2, 275, 296, 298, 299], "multidimension": [2, 41, 58, 305], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 150, 157, 164, 181, 188, 199, 200, 207, 209, 214, 220, 223, 235, 272, 292, 294, 296, 297, 298, 299, 303, 305, 308], "desir": [2, 3, 32, 67, 70, 72, 73, 74, 96, 109, 112, 113, 124, 127, 128, 130, 132, 140, 141, 144, 159, 163, 183, 189, 190, 194, 195, 196, 197, 198, 292, 296, 302, 303], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 67, 70, 72, 73, 74, 80, 82, 87, 109, 112, 113, 116, 130, 135, 163, 164, 189, 198, 221, 223, 236, 237, 238, 239, 269, 278, 288, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "do": [2, 3, 4, 7, 70, 108, 113, 133, 142, 163, 164, 185, 236, 294, 296, 297, 298, 299, 301, 302, 303, 305, 307, 308], "custom": [2, 3, 5, 32, 67, 70, 72, 73, 74, 130, 163, 201, 214, 223, 229, 288, 292, 296, 297, 298, 299, 302], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 67, 70, 72, 73, 74, 77, 99, 101, 114, 119, 120, 128, 130, 157, 195, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 240, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 281, 294, 296, 297, 298, 299, 302, 303, 308], "randomcroptensordict": [2, 296], "here": [2, 3, 4, 7, 8, 9, 10, 67, 70, 72, 73, 74, 93, 292, 293, 296, 297, 298, 299, 302, 303, 305, 307, 308], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 67, 70, 72, 73, 74, 207, 209, 218, 220, 223, 272, 291, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 166, 181, 187, 188, 191, 193, 198, 203, 236, 260, 261, 262, 288, 290, 298, 299, 302, 304, 308], "around": [2, 5, 7, 15, 17, 41, 42, 71, 198, 236, 296, 297, 302, 308], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 93, 135, 208, 219, 294, 304, 305, 307], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 67, 70, 72, 73, 74, 101, 119, 120, 142, 145, 146, 147, 148, 149, 155, 165, 170, 193, 197, 198, 199, 200, 207, 208, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 288, 294, 296, 301, 302, 305, 307], "replaybuff": [2, 41, 42, 66, 93, 113, 116, 211, 214, 234, 282, 284, 290, 298, 302, 304, 305, 307], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 113, 211, 214, 234, 290, 296, 298, 302, 305], "By": [2, 3, 33, 67, 70, 72, 73, 74, 181, 198, 221, 268, 288, 296, 304, 305, 308], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 133, 139, 153, 166, 183, 184, 185, 186, 189, 194, 195, 197, 198, 200, 201, 202, 203, 234, 268, 290, 292, 293, 296, 297, 298, 299, 304], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 93, 94, 96, 97, 99, 100, 103, 106, 109, 112, 113, 114, 116, 118, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 210, 211, 213, 216, 217, 219, 221, 223, 224, 225, 226, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 281, 292, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 67, 70, 72, 73, 74, 114, 124, 142, 159, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 229, 231, 234, 292, 294, 296, 298, 299, 302, 303, 305, 308], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 272, 291, 298, 299, 302, 308], "respons": [2, 3, 8, 272, 308], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 107, 184, 185, 186, 197, 219, 281, 290, 296, 303, 307], "repositori": [2, 7, 53], "latest": [2, 10, 72, 269, 298, 302, 303, 307], "wheel": [2, 298], "publish": 2, "pypi": [2, 307], "openml": [2, 53, 88], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 159, 181, 197, 199, 200, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 292, 294, 296, 297, 298, 299, 302, 303, 305, 308], "parent": [2, 3, 21, 26, 28, 44, 67, 94, 96, 98, 103, 104, 109, 112, 124, 127, 129, 130, 184, 221, 223, 240, 296, 303, 307, 308], "subclass": [2, 3, 67, 70, 72, 73, 74, 127, 135, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 197, 198, 199, 201, 204, 221, 223, 297, 299, 303, 305], "basic": [2, 71, 292, 298, 308], "properti": [2, 3, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 128, 151, 156, 164, 169, 177, 178, 179, 221, 303, 305], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 101, 103, 105, 106, 107, 109, 110, 114, 115, 116, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 142, 145, 146, 147, 148, 149, 150, 153, 157, 158, 167, 168, 170, 172, 173, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 202, 203, 207, 208, 209, 210, 211, 213, 216, 219, 220, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 255, 281, 284, 292, 294, 297, 298, 299, 301, 302, 303, 305, 307, 308], "action": [2, 3, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 67, 70, 71, 72, 73, 74, 76, 87, 89, 90, 97, 99, 100, 104, 107, 108, 114, 116, 120, 128, 139, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 157, 159, 160, 161, 162, 170, 171, 172, 174, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 201, 202, 207, 208, 210, 211, 213, 219, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 281, 284, 288, 292, 293, 294, 296, 297, 298, 301, 302, 304, 305, 307, 308], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 67, 70, 72, 73, 74, 88, 90, 94, 97, 100, 107, 109, 114, 116, 124, 126, 133, 134, 135, 139, 142, 143, 145, 150, 151, 152, 157, 159, 161, 162, 163, 164, 166, 169, 170, 171, 172, 177, 180, 183, 184, 185, 186, 188, 189, 190, 194, 195, 196, 197, 200, 201, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 231, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 263, 269, 272, 284, 292, 296, 297, 298, 299, 301, 302, 304, 305, 307, 308], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 96, 97, 98, 99, 100, 107, 109, 112, 114, 116, 124, 126, 127, 128, 130, 132, 135, 139, 142, 143, 153, 157, 161, 164, 165, 171, 172, 180, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 200, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 242, 281, 292, 298, 299, 301, 302, 303, 304, 305, 307, 308], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 67, 68, 70, 71, 72, 73, 74, 82, 83, 84, 93, 106, 107, 109, 112, 114, 116, 124, 132, 133, 139, 142, 143, 153, 157, 159, 161, 163, 166, 171, 172, 180, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 207, 208, 209, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 265, 268, 281, 284, 292, 293, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 144, 151, 157, 159, 163, 177, 183, 188, 194, 195, 197, 198, 201, 202, 208, 213, 220, 222, 224, 226, 269, 274, 292, 296, 298, 301, 302, 303, 305, 307, 308], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 67, 70, 71, 72, 73, 74, 88, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 116, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 142, 144, 146, 147, 148, 149, 152, 157, 158, 159, 163, 164, 165, 172, 173, 174, 175, 176, 181, 183, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 266, 270, 275, 284, 292, 293, 294, 296, 297, 298, 299, 302, 303, 307, 308], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74, 88, 93, 96, 97, 98, 100, 107, 109, 112, 114, 125, 127, 130, 132, 135, 144, 145, 146, 147, 150, 152, 153, 154, 157, 158, 159, 163, 166, 172, 181, 183, 184, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 255, 263, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 307, 308], "send": [2, 3, 8, 307], "receiv": [2, 3, 32, 40, 67, 70, 72, 73, 74, 123, 127, 159, 242, 293, 296, 298, 301, 303], "spawn": [2, 3, 4, 18, 22, 72, 302], "check_env_spec": [2, 3, 290, 298, 302, 303], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 70, 72, 73, 74, 93, 96, 98, 103, 107, 109, 112, 114, 115, 116, 124, 127, 128, 130, 132, 143, 158, 183, 184, 185, 186, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 240, 254, 285, 293, 294, 295, 297, 298, 299, 303, 305, 308], "saniti": [2, 3, 7, 135, 298], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 67, 70, 71, 72, 73, 74, 96, 99, 109, 112, 124, 127, 128, 130, 132, 142, 143, 153, 154, 161, 172, 176, 183, 189, 190, 193, 196, 197, 198, 199, 200, 202, 206, 210, 211, 235, 236, 237, 238, 239, 240, 242, 264, 268, 284, 292, 294, 296, 297, 298, 302, 303, 308], "techniqu": [2, 8, 297, 305], "commonli": [2, 308], "emploi": [2, 165], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 305], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 93, 97, 100, 133, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 211, 214, 234, 292, 303, 307], "offer": [2, 3, 7, 292, 297, 303, 308], "facilit": [2, 3, 7, 111, 112, 130, 132, 184, 185, 186, 292, 296, 299, 303], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 123, 194, 198, 296, 298, 302, 303, 308], "extern": [2, 3, 97, 100, 308], "consist": [2, 3, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 107, 144, 159, 296, 297, 298, 303, 304, 308], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 296, 297, 308], "manner": [2, 70, 112, 130, 292, 296, 297, 298, 301, 303, 305], "handl": [3, 21, 32, 67, 70, 72, 73, 74, 133, 157, 159, 272, 286, 287, 296, 297, 298, 302, 305], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 67, 70, 72, 73, 74, 93, 99, 109, 114, 123, 128, 129, 153, 157, 159, 161, 163, 172, 219, 223, 231, 236, 237, 238, 243, 244, 268, 272, 274, 286, 287, 292, 293, 294, 296, 297, 298, 301, 302, 303, 304, 305, 308], "dm": [3, 296, 308], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 71, 72, 116, 124, 130, 131, 184, 192, 207, 208, 210, 211, 213, 215, 219, 223, 224, 225, 226, 228, 272, 281, 292, 293, 294, 296, 297, 299, 302, 303, 305, 308], "goal": [3, 4, 123, 296, 297, 298, 299, 302, 303], "abl": [3, 296, 298, 299, 301, 302, 303, 305, 307], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 135, 257, 258, 259, 260, 261, 262, 291, 297, 298, 302, 305], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 296, 298, 302, 303, 308], "simul": [3, 5, 7, 8, 91, 143, 161, 292, 296, 298, 302], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 112, 130, 135, 146, 157, 176, 198, 199, 200, 263, 275, 292, 294, 296, 297, 298, 299, 302, 303, 305, 307, 308], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 67, 70, 72, 73, 74, 124, 135, 162, 164, 165, 183, 188, 189, 190, 193, 194, 195, 196, 197, 198, 232, 233, 294, 296, 297, 298, 299, 302, 303, 305, 307, 308], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 67, 70, 72, 73, 74, 183, 189, 190, 194, 195, 196, 197, 198, 221, 236, 237, 238, 239, 240, 293, 296, 297, 303, 308], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 106, 107, 109, 114, 116, 124, 133, 157, 281, 284, 296, 297, 298, 299, 301, 302, 304, 305, 307, 308], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 67, 70, 71, 72, 73, 74, 96, 99, 107, 112, 124, 127, 128, 130, 132, 143, 144, 146, 147, 148, 149, 152, 153, 154, 155, 157, 159, 161, 163, 166, 171, 172, 180, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 202, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 281, 284, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 307], "typic": [3, 4, 8, 32, 67, 70, 72, 73, 74, 123, 208, 221, 223, 226, 292, 293, 294, 298, 302, 303], "organis": [3, 297, 303], "arbitrari": [3, 33, 73, 74, 292, 296, 297, 303], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 67, 70, 72, 73, 74, 236, 237, 238, 239, 240, 294, 297, 298, 302, 303, 305, 307], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 97, 100, 193, 236, 237, 238, 239, 240, 293, 296, 298, 299, 302, 303, 304, 305], "attribut": [3, 4, 32, 45, 67, 70, 72, 73, 74, 112, 122, 130, 157, 198, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 296, 299, 303], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 93, 97, 100, 114, 116, 124, 142, 143, 150, 153, 157, 161, 171, 172, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 263, 269, 281, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 67, 70, 72, 73, 74, 93, 113, 157, 180, 184, 185, 186, 203, 292, 297, 298, 299, 302], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 67, 70, 71, 72, 73, 74, 88, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 109, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 135, 157, 163, 190, 193, 197, 200, 207, 208, 209, 210, 211, 213, 219, 220, 221, 223, 224, 225, 226, 228, 234, 276, 291, 292, 293, 294, 296, 298, 299, 302, 303, 305, 308], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74], "actual": [3, 4, 7, 17, 67, 70, 72, 73, 74, 123, 275, 293, 296, 298, 302, 303], "just": [3, 4, 67, 70, 72, 73, 74, 163, 263, 292, 294, 296, 297, 298, 299, 302, 303, 305, 307, 308], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 67, 70, 72, 73, 74, 94, 98, 109, 142, 143, 161, 194, 198, 201, 207, 208, 209, 211, 220, 223, 224, 226, 228, 234, 236, 237, 238, 239, 281, 288, 294, 297, 298, 303, 308], "care": [3, 8, 67, 70, 72, 73, 74, 127, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 296, 298, 302, 303, 305], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 67, 70, 72, 73, 74, 96, 112, 124, 126, 127, 128, 130, 132, 134, 144, 156, 159, 163, 164, 171, 179, 180, 184, 186, 197, 198, 269, 296, 297, 298, 299, 302, 303, 305, 308], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 144, 156, 159, 163, 179, 197, 269, 296, 297, 298, 299, 303], "parametr": [3, 165, 198, 208, 219, 226, 296, 298], "hardwar": 3, "observation_spec": [3, 67, 70, 71, 72, 73, 74, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 106, 107, 109, 112, 115, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 143, 157, 161, 276, 284, 296, 298, 301, 302, 303, 308], "compositespec": [3, 28, 49, 67, 69, 70, 71, 72, 73, 74, 97, 98, 99, 100, 107, 114, 122, 123, 124, 127, 139, 143, 161, 183, 187, 191, 194, 200, 201, 290, 296, 298, 302, 303, 308], "pair": [3, 32, 34, 36, 39, 52, 67, 70, 72, 73, 74, 124, 184, 194, 198, 221, 236, 237, 238, 239, 240, 292, 293, 296, 297, 298, 301, 303, 308], "state_spec": [3, 67, 70, 71, 72, 73, 74, 298, 303, 308], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 88, 112, 125, 128, 130, 132, 296, 303], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 67, 70, 71, 72, 73, 74, 76, 87, 93, 97, 100, 107, 116, 153, 172, 174, 183, 189, 194, 195, 208, 211, 224, 226, 228, 284, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "reward_spec": [3, 67, 70, 71, 72, 73, 74, 92, 96, 97, 98, 100, 117, 118, 119, 127, 129, 143, 161, 298, 302, 303, 308], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 96, 97, 98, 100, 107, 114, 116, 117, 118, 119, 120, 123, 127, 129, 131, 132, 133, 139, 142, 143, 161, 188, 203, 207, 208, 210, 211, 213, 216, 219, 221, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 265, 266, 268, 270, 288, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "done_spec": [3, 67, 70, 72, 73, 74, 97, 98, 100, 127, 298, 302, 303, 308], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 193, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 292, 302, 303, 304], "input_spec": [3, 67, 70, 71, 72, 73, 74, 96, 97, 98, 99, 109, 114, 119, 120, 122, 127, 128, 129, 143, 161, 302, 303], "full_action_spec": [3, 67, 70, 72, 73, 74, 302], "full_state_spec": [3, 67, 70, 72, 73, 74], "lock": [3, 26, 28, 67, 70, 72, 73, 74, 124, 133, 303], "modifi": [3, 7, 8, 26, 28, 32, 45, 67, 70, 72, 73, 74, 96, 103, 107, 112, 124, 127, 128, 130, 132, 188, 193, 197, 275, 281, 296, 297, 298, 302, 303], "directli": [3, 4, 8, 67, 70, 71, 72, 73, 74, 116, 221, 288, 292, 298, 302, 303, 305], "output_spec": [3, 67, 70, 72, 73, 74, 96, 98, 107, 114, 127, 128, 302, 303], "full_observation_spec": [3, 67, 70, 72, 73, 74], "full_reward_spec": [3, 67, 70, 72, 73, 74, 302], "full_done_spec": [3, 67, 70, 72, 73, 74, 302], "importantli": [3, 194, 198], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 67, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 86, 93, 116, 133, 143, 144, 145, 146, 147, 150, 153, 154, 155, 158, 159, 161, 163, 166, 167, 168, 169, 170, 171, 172, 180, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 202, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 254, 292, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308], "action_s": 3, "help": [3, 4, 32, 67, 70, 72, 73, 74, 291, 293, 296, 297, 298, 299, 302], "prealloc": [3, 303], "With": [3, 123, 294, 296, 297, 302, 305, 308], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 83, 94, 95, 97, 98, 99, 100, 101, 103, 107, 108, 109, 112, 113, 119, 120, 124, 127, 128, 130, 132, 133, 142, 144, 157, 158, 159, 162, 163, 181, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 250, 251, 252, 253, 267, 269, 272, 274, 276, 281, 284, 288, 291, 296, 297, 298, 299, 301, 302, 303, 305, 307, 308], "instanti": [3, 21, 34, 36, 39, 73, 74, 127, 163, 296, 297, 302, 303, 305, 308], "0s": [3, 124, 299], "stateless": [3, 127, 296, 303, 308], "set_se": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 76, 87, 109, 114, 128, 303, 307, 308], "seed": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 77, 89, 90, 97, 100, 128, 135, 272], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 67, 68, 70, 71, 72, 73, 74, 76, 87, 89, 90, 93, 97, 100, 106, 107, 114, 116, 123, 124, 133, 139, 142, 143, 157, 161, 174, 203, 207, 208, 210, 211, 213, 214, 219, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 266, 268, 270, 296, 297, 299, 301, 303, 304, 305, 307, 308], "determinist": [3, 32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 145, 154, 167, 174, 183, 191, 197, 198, 201, 208, 292, 296, 297, 299, 303, 308], "preced": [3, 158, 299], "without": [3, 7, 9, 32, 40, 67, 70, 72, 73, 74, 97, 100, 126, 185, 186, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 235, 236, 237, 238, 239, 240, 284, 291, 292, 296, 297, 298, 302, 303, 305, 308], "risk": [3, 113], "overlap": [3, 41], "consecut": [3, 62, 157, 193, 299, 302, 308], "still": [3, 9, 122, 187, 220, 221, 296, 297, 299, 301, 303, 305, 308], "reproduc": [3, 93, 135, 296, 298, 302], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 25, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 67, 70, 72, 73, 74, 99, 117, 122, 123, 125, 139, 177, 178, 179, 194, 201, 208, 213, 219, 221, 222, 226, 269, 296, 297, 298, 299, 302, 303, 305, 307, 308], "max_step": [3, 13, 67, 70, 71, 72, 73, 74, 89, 90, 122, 302, 307, 308], "n": [3, 6, 7, 24, 27, 32, 33, 40, 67, 70, 72, 73, 74, 93, 99, 103, 129, 161, 193, 198, 207, 213, 221, 235, 269, 292, 294, 297, 298, 299, 302, 305, 308], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 71, 107, 157, 161, 171, 172, 180, 181, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 203, 208, 210, 213, 215, 216, 217, 219, 221, 224, 226, 228, 234, 235, 236, 237, 238, 239, 268, 284, 292, 296, 298, 299, 301, 302, 303, 304], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 103, 112, 113, 116, 128, 130, 133, 135, 144, 150, 159, 165, 188, 197, 198, 199, 200, 207, 208, 210, 211, 213, 219, 221, 223, 224, 225, 226, 228, 236, 260, 272, 291, 296, 297, 298, 302, 303, 305, 307, 308], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 67, 70, 72, 73, 74, 85, 88, 93, 130, 133, 157, 195, 207, 208, 210, 211, 213, 219, 221, 223, 224, 225, 226, 228, 231, 296, 299, 305, 307], "mark": [3, 16, 67, 70, 72, 73, 74, 157], "trail": [3, 133], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 67, 68, 70, 72, 73, 74, 84, 88, 94, 113, 124, 125, 133, 142, 154, 157, 158, 193, 209, 213, 216, 220, 221, 223, 224, 228, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 272, 292, 293, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "treat": 3, "figur": [3, 296, 298, 299, 302, 303, 308], "summar": [3, 303], "brief": [3, 298], "popul": [3, 38, 106, 124, 296, 298, 299, 303, 305], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 67, 70, 72, 73, 74, 93, 95, 97, 100, 103, 106, 109, 112, 114, 116, 122, 124, 132, 133, 142, 162, 188, 195, 196, 208, 226, 236, 237, 238, 239, 292, 296, 298, 299, 302, 303, 304, 305], "deliveri": 3, "step_mdp": [3, 157, 290, 299, 303, 307, 308], "nasium": 3, "recent": [3, 7, 11, 308], "shift": [3, 32, 204, 236, 237, 238, 239, 298], "termin": [3, 7, 32, 40, 52, 199, 296, 297, 298, 303, 307], "trust": [3, 157], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 67, 70, 72, 73, 74, 108, 122, 179, 242, 296, 298, 308], "refer": [3, 7, 8, 9, 21, 32, 40, 67, 70, 72, 73, 74, 128, 133, 143, 153, 154, 161, 162, 167, 168, 173, 174, 190, 207, 214, 215, 216, 217, 223, 236, 241, 249, 296, 298, 302], "stepcount": [3, 13, 67, 70, 72, 73, 74, 296, 297, 298, 299, 302, 307], "chosen": [3, 123, 124, 171, 172, 180, 196, 281, 292], "someth": [3, 32, 67, 70, 72, 73, 74, 291, 297, 298, 303, 308], "els": [3, 167, 292, 294, 296, 297, 298, 299, 302, 303, 304], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 67, 70, 72, 73, 74, 109, 116, 190, 264, 284, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "truncated_kei": [3, 122], "look": [3, 5, 7, 8, 32, 67, 70, 72, 73, 74, 112, 113, 130, 194, 198, 199, 200, 293, 298, 299, 302, 303, 304, 305, 307, 308], "assess": [3, 296], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 290], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 103], "reli": [3, 207, 293, 296, 298, 303, 308], "traj_id": [3, 13, 14, 16, 23, 116, 299, 305, 307], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 67, 70, 72, 73, 74, 124, 128, 142, 199, 200, 291, 296, 299], "context": [3, 5, 8, 32, 67, 68, 70, 72, 73, 74, 88, 124, 129, 163, 164, 188, 232, 233, 236, 237, 238, 239, 241, 249, 268, 292, 293, 296, 297, 298, 302, 303, 304, 305], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 73, 74, 97, 100, 113, 159, 171, 198, 199, 200, 204, 236, 237, 238, 239, 292, 296, 297, 298, 301, 302, 303, 304, 305, 308], "inittrack": [3, 157, 296, 299], "our": [3, 7, 8, 18, 93, 292, 296, 297, 298, 299, 301, 302, 304, 305, 307], "tutori": [3, 296, 297, 299, 300, 301, 303, 304, 305, 306, 308], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 67, 68, 70, 72, 73, 74, 144, 159, 163, 293, 294, 296, 297, 298, 299, 302, 303, 305], "design": [3, 13, 14, 32, 33, 67, 70, 72, 73, 74, 93, 113, 128, 188, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 296, 297, 298, 299, 301, 302, 303, 305, 308], "scratch": [3, 8, 297, 303], "better": [3, 8, 9, 157, 293, 298, 303], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 67, 70, 72, 73, 74, 93, 103, 107, 124, 129, 133, 144, 154, 155, 157, 159, 164, 165, 198, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 288, 292, 296, 297, 298, 299, 303, 305, 308], "intens": [3, 8], "gym3": 3, "envpool": [3, 72], "interfac": [3, 88, 159, 164, 292, 296, 298, 303, 305], "simultan": [3, 20, 73, 74, 303], "often": [3, 8, 218, 272, 296, 297, 303, 305, 308], "competit": [3, 302], "advantag": [3, 8, 155, 207, 209, 220, 223, 225, 236, 237, 238, 239, 240, 241, 243, 245, 247, 249, 250, 252, 293, 294, 296, 297, 298, 299, 302, 303, 308], "scale": [3, 4, 52, 93, 107, 109, 118, 123, 126, 154, 156, 166, 173, 174, 178, 179, 184, 185, 186, 194, 198, 200, 207, 208, 219, 223, 224, 225, 226, 270, 276, 281, 288, 292, 296, 297, 298, 299, 302, 307], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 67, 70, 71, 72, 73, 74, 93, 107, 123, 127, 128, 133, 144, 162, 163, 187, 191, 194, 195, 198, 201, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 234, 272, 284, 294, 296, 297, 298, 299, 302, 303, 304, 305, 308], "own": [3, 13, 14, 17, 22, 32, 67, 70, 72, 73, 74, 297, 298, 302, 303], "As": [3, 4, 67, 70, 72, 73, 74, 116, 198, 236, 292, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308], "inherit": [3, 160, 221, 294, 298, 302], "serialenv": [3, 67, 70, 72, 73, 124, 290, 308], "enjoi": 3, "exact": 3, "Of": [3, 7, 291, 303, 308], "cours": [3, 4, 291, 298, 303, 308], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 67, 70, 71, 72, 73, 74, 112, 124, 128, 132, 133, 157, 162, 193, 194, 198, 211, 213, 234, 236, 237, 238, 239, 240, 296, 297, 298, 302, 303, 304], "count": [3, 68, 122, 193, 268, 272, 275, 296, 297, 298, 299, 305, 308], "def": [3, 11, 22, 32, 67, 68, 70, 71, 72, 73, 74, 84, 97, 100, 143, 153, 161, 202, 208, 210, 213, 219, 221, 224, 226, 228, 294, 296, 297, 301, 302, 303, 307, 308], "make_env": [3, 90, 133, 277, 278, 296, 297, 308], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 85, 93, 96, 106, 107, 109, 114, 116, 124, 128, 133, 157, 281, 284, 290, 292, 296, 297, 298, 299, 304, 305, 307, 308], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 67, 68, 70, 72, 73, 74, 93, 106, 107, 109, 114, 116, 124, 157, 231, 245, 246, 247, 248, 250, 251, 252, 253, 292, 297, 299, 303, 305, 307, 308], "from_pixel": [3, 77, 78, 93, 281, 296, 297, 299, 304, 305, 307, 308], "9": [3, 7, 32, 35, 38, 41, 123, 133, 162, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 229, 234, 293, 296, 297, 298, 302, 303, 305, 306], "81": [3, 297, 303], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 92, 93, 94, 96, 98, 99, 107, 108, 109, 112, 116, 123, 124, 126, 127, 128, 130, 132, 133, 135, 143, 144, 146, 147, 149, 150, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 169, 173, 174, 177, 178, 179, 181, 183, 187, 188, 190, 191, 193, 196, 197, 200, 201, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 234, 235, 236, 237, 238, 239, 242, 243, 244, 263, 270, 284, 288, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 104, 107, 109, 124, 128, 129, 133, 144, 153, 157, 159, 162, 163, 172, 183, 189, 190, 194, 195, 196, 197, 198, 201, 202, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 227, 228, 234, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 296, 297, 298, 299, 301, 303, 305, 307], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 97, 98, 99, 100, 106, 109, 114, 116, 124, 126, 133, 139, 142, 144, 150, 153, 159, 162, 163, 166, 169, 172, 183, 184, 185, 186, 188, 189, 191, 193, 195, 197, 200, 202, 221, 281, 284, 292, 294, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "simpli": [3, 6, 34, 36, 39, 45, 101, 120, 221, 292, 293, 296, 298, 302, 308], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 163, 164, 165, 171, 180, 201, 236, 237, 238, 239, 240, 242, 255, 292, 297, 304, 305], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 109, 126, 297, 305], "d": [3, 35, 53, 54, 58, 198, 307], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 68, 73, 74, 94, 97, 99, 100, 107, 109, 113, 123, 124, 126, 133, 183, 191, 194, 195, 198, 236, 237, 238, 239, 240, 259, 292, 296, 297, 298, 299, 302, 303, 305, 307, 308], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 297, 302, 303], "_reset": [3, 67, 70, 71, 72, 73, 74, 93, 97, 100, 143, 161, 301], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 93, 94, 96, 97, 100, 103, 106, 107, 108, 109, 112, 113, 114, 116, 118, 124, 126, 127, 128, 129, 130, 132, 133, 135, 142, 143, 144, 146, 153, 156, 157, 159, 161, 162, 163, 171, 172, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 234, 236, 237, 238, 239, 245, 246, 247, 248, 250, 251, 252, 253, 265, 266, 268, 269, 270, 272, 281, 288, 292, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 100, 114, 116, 124, 128, 142, 143, 153, 157, 161, 171, 172, 180, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 200, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 276, 281, 291, 292, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 93, 94, 97, 99, 100, 103, 107, 108, 109, 112, 114, 116, 118, 124, 126, 128, 129, 130, 132, 133, 135, 142, 143, 144, 146, 147, 156, 157, 159, 161, 163, 164, 165, 178, 179, 183, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 234, 236, 237, 238, 239, 242, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 265, 266, 268, 269, 270, 272, 281, 288, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "pixel": [3, 7, 26, 93, 95, 103, 105, 109, 112, 115, 126, 130, 132, 146, 167, 168, 255, 281, 292, 296, 297, 299, 304, 305, 307, 308], "500": [3, 296, 297, 303, 307, 308], "uint8": [3, 47, 126, 297, 304, 305, 307, 308], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 68, 70, 71, 72, 73, 74, 83, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 103, 105, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 207, 208, 210, 211, 213, 214, 215, 219, 221, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 239, 240, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 281, 284, 286, 287, 288, 292, 294, 296, 297, 298, 299, 302, 303, 305, 307, 308], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 100, 114, 116, 124, 133, 142, 143, 153, 157, 161, 171, 172, 180, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 200, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 281, 292, 298, 299, 301, 302, 303, 304, 305, 307, 308], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 133, 157, 193, 194, 198, 296, 297, 301, 302, 308], "launch": [3, 18, 19, 20, 22], "quit": [3, 292, 296, 297, 298, 302, 308], "mani": [3, 4, 38, 67, 207, 209, 213, 220, 223, 224, 228, 292, 296, 297, 298, 302, 303, 305, 308], "start": [3, 4, 5, 13, 21, 45, 68, 142, 267, 296, 297, 302, 303, 305, 308], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 67, 70, 72, 73, 74, 124, 133, 199, 200, 298, 299, 302, 303, 308], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 116, 128, 187, 191, 193, 270, 294, 297, 298, 299, 303, 305, 308], "great": [3, 7, 8, 307], "speedup": [3, 8, 308], "precis": [3, 142, 296, 298], "anoth": [3, 8, 34, 36, 39, 67, 70, 72, 73, 74, 97, 98, 100, 124, 127, 159, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 292, 293, 296, 298, 299, 301, 302, 303, 308], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 67, 70, 72, 73, 74, 113], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 67, 68, 70, 72, 73, 74, 93, 97, 100, 112, 116, 125, 132, 133, 142, 189, 193, 197, 227, 236, 237, 238, 239, 240, 242, 272, 274, 288, 291, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 102, 108, 116, 128, 135, 187, 191, 193, 296, 298, 302, 305], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 84, 93, 97, 100, 107, 114, 133, 135, 139, 163, 166, 181, 236, 237, 238, 239, 263, 271, 301, 302, 305, 308], "mismatch": [3, 297], "mostli": [3, 17, 293, 305, 308], "purpos": [3, 7, 93, 284, 296, 298, 299, 302, 304, 308], "want": [3, 6, 7, 8, 109, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 292, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308], "subprocess": [3, 68], "addit": [3, 4, 32, 52, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 187, 188, 197, 206, 221, 236, 293, 296, 297, 302, 305], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 72, 305], "multithreadedenv": [3, 290], "underneath": 3, "higher": [3, 4, 201, 296, 297, 298, 305, 308], "restrict": [3, 297, 304, 305, 308], "flexibl": [3, 9, 72, 229, 293, 294, 305, 308], "cover": [3, 291, 298, 303, 307], "popular": [3, 292, 299, 302], "atari": [3, 4, 93, 308], "classic": [3, 71, 297], "benchmark_batched_env": 3, "py": [3, 84, 171, 180, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308], "pipelin": [3, 7, 292, 298], "seamlessli": [3, 303], "modif": [3, 5, 26, 28, 32, 67, 70, 72, 73, 74, 103, 221, 298, 303], "infrastructur": [3, 302], "view": [3, 8, 27, 32, 33, 67, 70, 72, 73, 74, 153, 159, 303, 305, 307, 308], "core": [3, 8, 281, 294, 299, 307], "decis": [3, 145, 170, 188, 212, 222, 299, 302, 305], "act": [3, 4, 163, 208, 210, 219, 224, 226, 228, 299, 302], "world": [3, 5, 71, 203, 216, 302, 303, 308], "paradigm": [3, 17, 302], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 67, 70, 72, 73, 74, 99, 108, 117, 128, 135, 144, 157, 159, 163, 190, 194, 198, 207, 209, 210, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 231, 236, 268, 272, 293, 296, 297, 299, 302, 303, 308], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 67, 70, 71, 72, 73, 74, 123, 128, 133, 221, 275, 292, 294, 296, 297, 298, 299, 302, 303, 305, 308], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 73, 154, 163, 272, 286, 287, 296, 297, 298, 299, 302, 305, 307], "accommod": [3, 13, 14, 16, 17], "thank": [3, 296], "carrier": [3, 298, 299, 305], "particular": [3, 32, 45, 52, 67, 70, 72, 73, 74, 128, 293, 294, 297, 299, 301, 302, 305], "carri": [3, 21, 45, 67, 70, 72, 73, 74, 124, 221, 297, 299, 302, 303, 305], "thu": [3, 220, 302], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 292, 297, 298, 302], "hand": [3, 7, 21, 302, 303], "kept": [3, 13, 14, 16, 17, 62, 73, 74, 99, 127, 135, 142, 156, 178, 179], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 67, 70, 72, 73, 74, 98, 124, 126, 128, 135, 157, 159, 163, 194, 197, 198, 200, 201, 206, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 236, 237, 238, 239, 263, 274, 286, 287, 288, 292, 294, 296, 297, 298, 299, 302, 303, 305, 308], "let": [3, 6, 7, 32, 43, 67, 70, 72, 73, 74, 93, 157, 163, 189, 268, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "understand": [3, 8, 296, 297, 302], "go": [3, 7, 113, 116, 188, 242, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "vma": [3, 89, 90, 302], "robot": [3, 5, 7, 112, 130, 132, 302], "what": [3, 8, 35, 44, 67, 70, 72, 73, 74, 124, 142, 195, 291, 292, 293, 297, 298, 299, 302, 303, 304, 305, 307, 308], "vmasenv": [3, 290, 302], "balanc": [3, 296, 297, 308], "num_env": [3, 21, 89, 90, 302], "n_agent": [3, 89, 90, 163, 171, 180, 234, 302], "5": [3, 24, 26, 28, 35, 38, 41, 42, 68, 72, 87, 89, 90, 116, 143, 144, 153, 154, 156, 158, 159, 161, 163, 167, 172, 178, 179, 188, 189, 195, 201, 220, 223, 225, 228, 292, 296, 297, 302, 303, 305, 306, 307, 308], "td": [3, 15, 26, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 94, 97, 98, 99, 100, 106, 107, 109, 116, 123, 124, 126, 128, 133, 142, 143, 153, 157, 160, 161, 171, 172, 180, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 197, 200, 202, 234, 237, 238, 239, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 263, 271, 281, 292, 293, 296, 299, 302, 303, 307, 308], "info": [3, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 89, 90, 130, 134, 302, 305], "ground_rew": 3, "pos_rew": [3, 302], "16": [3, 32, 67, 70, 72, 73, 74, 93, 296, 297, 299, 303, 305], "root": [3, 26, 28, 93, 142, 156, 178, 179, 299, 302, 303, 305, 308], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 103, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 297, 303], "vari": [3, 113, 302], "creation": [3, 73, 74, 296, 308], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 67, 70, 72, 73, 74, 112, 116, 119, 128, 132, 166, 172, 190, 194, 196, 197, 198, 236, 237, 238, 239, 263, 275, 296, 297, 298, 299, 302, 303, 305, 307, 308], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 68, 116, 126, 133, 220, 228, 293, 294, 296, 298, 299, 302, 303, 305, 307], "append": [3, 8, 35, 38, 41, 42, 52, 53, 68, 116, 124, 157, 189, 195, 296, 297, 298, 299, 302, 303, 304, 305, 307], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 67, 70, 72, 73, 74, 211, 213, 234, 290, 298, 302, 308], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 67, 70, 72, 73, 74, 84, 133, 291, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "simpl": [3, 9, 32, 33, 67, 70, 72, 73, 74, 146, 198, 211, 221, 225, 236, 292, 293, 296, 297, 298, 302, 308], "composit": [3, 26, 28, 67, 70, 72, 73, 74, 298, 303], "prefix": [3, 23, 32, 45, 67, 70, 72, 73, 74, 128, 221, 254, 299, 308], "exactli": [3, 32, 67, 70, 72, 73, 74, 85, 128, 296, 299, 302], "action_kei": [3, 15, 67, 70, 72, 73, 74, 99, 142, 143, 160, 161, 187, 191, 193, 302], "reward_kei": [3, 67, 70, 72, 73, 74, 142, 143, 161, 266, 270, 302], "done_kei": [3, 67, 70, 72, 73, 74, 142, 302], "automat": [3, 5, 55, 56, 65, 67, 70, 72, 73, 74, 97, 100, 109, 183, 194, 292, 296, 298, 302, 303, 305, 307], "right": [3, 6, 7, 40, 158, 297, 298, 302, 303, 308], "sure": [3, 4, 7, 53, 63, 116, 189, 288, 292, 296, 298, 299, 302, 303, 305, 307, 308], "set_kei": [3, 207, 208, 209, 211, 213, 214, 219, 220, 221, 223, 224, 225, 226, 234, 240, 302], "awai": [3, 298, 302], "eas": [3, 302], "access": [3, 7, 8, 32, 35, 53, 67, 70, 72, 73, 74, 112, 130, 288, 291, 296, 302, 303, 305], "leaf": [3, 26, 28, 67, 70, 72, 73, 74, 198, 302], "abov": [3, 7, 32, 67, 70, 72, 73, 74, 156, 178, 179, 206, 293, 294, 296, 298, 302, 303, 308], "would": [3, 32, 40, 67, 70, 72, 73, 74, 157, 159, 294, 297, 298, 299, 303, 305, 308], "full": [3, 67, 70, 72, 73, 74, 190, 263, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "raw": [3, 4, 40, 156, 178, 179, 297, 303], "logic": 3, "torchvis": [3, 112, 132, 307, 308], "transformedenv": [3, 13, 67, 68, 70, 72, 73, 74, 93, 96, 97, 100, 103, 106, 107, 108, 109, 114, 116, 124, 127, 133, 157, 281, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "primit": [3, 4, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228], "built": [3, 5, 7, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 229, 234, 282, 284, 285, 288, 296, 297, 298, 299, 305, 308], "base_env": [3, 97, 99, 100, 107, 124, 296, 297, 298, 304, 307, 308], "totensorimag": [3, 93, 297, 299, 305, 307, 308], "in_kei": [3, 13, 14, 16, 17, 21, 71, 92, 93, 94, 95, 97, 99, 100, 103, 105, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 123, 125, 126, 127, 128, 130, 132, 133, 143, 152, 157, 161, 171, 180, 181, 183, 184, 185, 186, 188, 189, 194, 195, 197, 198, 200, 201, 202, 207, 208, 209, 210, 211, 213, 219, 220, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 254, 255, 281, 284, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "resiz": [3, 93, 297, 299, 305, 308], "64": [3, 93, 146, 147, 155, 157, 163, 171, 234, 296, 297, 298, 299, 301, 303, 304, 305, 307, 308], "now": [3, 7, 35, 93, 163, 296, 297, 298, 299, 301, 302, 304, 305, 308], "appar": [3, 265], "bring": [3, 298, 308], "signific": [3, 5, 8, 298, 308], "kind": [3, 38, 44, 142, 305], "consult": 3, "interest": [3, 194, 198, 292, 297, 298, 302, 303, 308], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 71, 92, 93, 94, 95, 103, 105, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 123, 125, 126, 127, 130, 132, 143, 152, 153, 157, 161, 171, 172, 180, 181, 183, 184, 185, 186, 188, 190, 194, 195, 196, 197, 198, 200, 201, 202, 207, 208, 209, 213, 219, 220, 223, 224, 225, 226, 234, 236, 237, 238, 239, 268, 284, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "easi": [3, 5, 53, 187, 191, 193, 292, 293, 296, 297, 298, 302, 304, 305, 308], "graph": [3, 4, 8, 232, 233, 296, 303], "inv": [3, 99, 116, 303], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 111, 113, 114, 116, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 133, 178, 189, 236, 267, 294, 296, 297, 298, 303, 307, 308], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 128, 183, 189, 197, 199, 200, 202, 207, 208, 210, 213, 219, 223, 224, 225, 226, 228, 297, 302], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 96, 99, 144, 200, 308], "taken": [3, 67, 70, 72, 73, 74, 162, 293, 296, 298, 299, 302, 303], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 93, 97, 100, 109, 116, 205, 219, 303], "in_keys_inv": [3, 97, 100, 109, 110, 114, 116, 127, 296, 301, 303, 308], "append_transform": [3, 35, 38, 41, 42, 52, 53, 112, 124, 130, 296, 299, 303, 307, 308], "doubletofloat": [3, 281, 296, 298, 301], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 100, 109, 114, 116, 124, 126, 139, 142, 143, 153, 157, 161, 171, 172, 180, 183, 184, 185, 186, 188, 189, 193, 194, 195, 196, 197, 200, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 281, 292, 298, 299, 301, 302, 303, 304, 305, 307, 308], "float64": [3, 32, 67, 70, 72, 73, 74, 89, 96, 97, 100, 112, 124, 127, 128, 130, 132, 197, 301, 308], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 97, 100, 128, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 294, 296, 298, 305], "manipul": [3, 4, 8, 112, 130, 308], "keep": [3, 4, 7, 8, 14, 42, 62, 109, 112, 132, 133, 142, 193, 265, 272, 296, 297, 298, 299, 302, 303, 305, 307, 308], "mind": [3, 302], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 99, 142, 292, 305], "unexpect": [3, 32, 67, 70, 72, 73, 74, 128, 308], "behviour": 3, "fortun": [3, 299], "eras": [3, 67, 70, 72, 73, 74], "ident": [3, 13, 14, 16, 32, 73, 74, 163, 236, 237, 238, 239, 286, 287, 297, 302], "alreadi": [3, 8, 11, 32, 45, 67, 70, 72, 73, 74, 124, 198, 236, 237, 238, 239, 296, 298, 302], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 67, 68, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 133, 188, 197, 269, 274, 275, 297, 298, 302, 303, 305], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 67, 70, 72, 73, 74, 96, 97, 98, 100, 107, 114, 127, 128, 133, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 293, 296, 298, 299, 302, 303, 304, 305, 308], "happen": [3, 67, 70, 72, 73, 74, 187, 297, 304, 308], "catfram": [3, 297], "hold": [3, 232, 233, 303, 305], "notic": [3, 93, 298, 303], "parenthood": 3, "reason": [3, 4, 8, 32, 67, 70, 72, 73, 74, 112, 130, 157, 293, 296, 297, 298, 303, 305], "henc": [3, 35, 113, 292, 296, 298, 302, 303], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 303], "log": [3, 4, 8, 40, 151, 152, 153, 162, 169, 179, 189, 190, 194, 198, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 265, 266, 268, 272, 284, 292, 293, 294, 296, 297, 298, 302, 303, 307], "mission": 3, "irrespect": [3, 197, 198], "dmcontrol": [3, 296], "jumanji": [3, 86, 87], "natur": [3, 296, 299], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 67, 70, 72, 73, 74, 103, 109, 113, 125, 144, 157, 158, 159, 162, 167, 175, 181, 187, 188, 191, 198, 297, 298, 299, 302, 303, 304, 305, 307, 308], "special": [3, 292, 296, 299, 308], "statu": 3, "framework": [3, 4, 9, 22, 71, 307, 308], "Its": [3, 32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 133, 197, 240], "success": [3, 93, 127, 297, 303, 305, 307], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 67, 70, 72, 73, 74, 107, 127, 187, 191, 193, 296, 297, 298, 299, 301, 302, 303, 305, 308], "foundat": [3, 5, 298, 302], "inspir": [3, 303], "howev": [3, 5, 7, 32, 67, 70, 72, 73, 74, 93, 119, 122, 123, 128, 292, 296, 297, 298, 299, 305, 308], "gone": [3, 4, 5], "sometim": [3, 299, 308], "hard": [3, 7, 218, 297, 308], "adopt": [3, 5, 296, 308], "prefer": [3, 17, 20, 35, 38, 41, 42, 113, 120, 223, 269, 292, 298, 302, 305], "moreov": 3, "maintain": [3, 5, 9, 303], "gymnasium": [3, 5, 11, 81, 82, 83, 84, 297, 298, 303, 307], "both": [3, 7, 32, 67, 68, 70, 72, 73, 74, 93, 114, 128, 144, 157, 159, 163, 184, 185, 186, 190, 196, 207, 209, 210, 213, 219, 220, 221, 223, 224, 225, 226, 228, 268, 292, 296, 298, 302, 303, 304, 305, 308], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 297, 298, 299, 302, 303, 305, 308], "decor": [3, 8, 11, 84, 221, 236, 237, 238, 239], "set_gym_backend": [3, 83, 290], "relev": [3, 40, 236, 237, 238, 239, 240, 303], "gym_backend": [3, 84, 290], "env1": [3, 301], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 67, 70, 72, 73, 74, 84, 112, 132, 161, 272, 294, 297], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 84], "__init__": [3, 7, 71, 84, 97, 100, 143, 153, 161, 202, 208, 210, 213, 219, 224, 226, 228, 294, 303, 308], "env2": [3, 301], "_env": [3, 6, 308], "classic_control": 3, "pendulumenv": [3, 303], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 298], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 67, 70, 72, 73, 74, 93, 94, 122, 124, 128, 144, 159, 162, 163, 193, 195, 196, 204, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 276, 288, 291, 294, 298, 299, 303, 305, 308], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 85, 113, 123, 124, 128, 136, 137, 142, 154, 158, 174, 193, 214, 258, 294, 296, 297, 298, 299, 302, 303, 307, 308], "tell": [3, 4, 7, 296, 299, 302], "mo_gymnasium": [3, 82, 83], "handi": 3, "side": [3, 4, 308], "v0": [3, 70, 79, 80, 81, 82, 86, 87, 96, 128, 133, 284], "26": [3, 296, 297, 303, 304, 305], "fun": [3, 11, 84, 298, 302], "reveal": 4, "bug": [4, 307], "curv": 4, "won": [4, 32, 67, 68, 70, 72, 73, 74, 112, 132, 272, 288, 297, 298], "exploit": 4, "video": [4, 9, 255, 268, 288, 302], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 67, 70, 72, 73, 74, 113, 195, 297, 298, 299, 302, 303], "cv": 4, "flip": 4, "imag": [4, 7, 77, 95, 112, 126, 132, 159, 296, 297, 302, 304, 308], "correspondingli": 4, "prescript": 4, "tune": [4, 107, 302, 304], "coeffici": [4, 40, 107, 302], "bonu": [4, 207, 209, 220, 223], "beta": [4, 35, 41, 58, 219, 220, 296, 297, 305, 307], "altern": [4, 27, 72, 150, 162, 206, 221, 296, 298, 302], "reduc": [4, 6, 27, 123, 297, 298], "downstream": [4, 296], "formul": [4, 302], "ob": [4, 8, 26, 28, 97, 98, 100, 109, 126, 139, 142, 163, 195, 202, 208, 210, 213, 219, 224, 226, 228, 236, 237, 238, 239, 297, 301, 303, 307, 308], "rate": [4, 133, 235, 297, 298, 302], "gradient": [4, 32, 67, 70, 72, 73, 74, 128, 156, 165, 178, 179, 207, 209, 210, 213, 219, 220, 221, 223, 224, 225, 226, 228, 235, 236, 237, 238, 239, 272, 296, 298, 302, 303], "norm": [4, 8, 272, 296, 297, 298, 302, 303], "easier": [4, 292, 296], "behavior": [4, 32, 67, 70, 72, 73, 74, 128, 219, 298, 302], "local": [4, 7, 10, 16, 21, 32, 67, 70, 72, 73, 74, 128, 163, 171, 180, 234, 260, 302], "optima": 4, "sens": [4, 303], "product": [4, 9, 286, 287], "sum": [4, 21, 31, 33, 162, 180, 216, 235, 242, 293, 296, 297, 298, 299, 302, 303, 308], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 119, 133, 193, 260, 265, 297, 299, 302, 303, 305], "stat": [4, 109, 276, 288, 297, 298], "w": [4, 93, 95, 115, 126, 193, 255, 297, 299, 305], "r": [4, 32, 109, 198, 206, 235, 292, 297, 303, 308], "yield": [4, 16, 21, 32, 67, 70, 72, 73, 74, 221, 296], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 67, 70, 72, 73, 74, 128, 210, 211, 298, 302, 305], "futur": [4, 32, 67, 70, 72, 73, 74, 112, 128, 132, 159, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 291, 307], "past": [4, 297, 305], "becom": [4, 21, 302, 308], "spars": [4, 299], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 67, 70, 72, 73, 74, 119, 128, 164, 165, 193, 207, 209, 211, 214, 220, 223, 234, 297, 299, 305, 308], "intermedi": [4, 157, 190, 296, 304], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 296], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 67, 70, 72, 73, 74, 159, 298, 302], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 67, 70, 72, 73, 74, 93, 94, 97, 99, 100, 109, 116, 139, 142, 143, 157, 158, 162, 163, 171, 180, 191, 193, 196, 204, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 242, 299, 307], "subtask": 4, "hierarch": [4, 307], "individu": [4, 18, 19, 20, 21, 32, 45, 67, 70, 72, 73, 74, 296, 302], "select": [4, 15, 35, 38, 41, 42, 52, 53, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 111, 113, 114, 116, 119, 120, 122, 123, 124, 125, 127, 130, 131, 133, 143, 157, 189, 195, 271, 296, 305], "fall": 4, "section": [4, 297, 302], "explicit": [4, 11, 45, 158, 305], "mechan": [4, 32, 67, 70, 72, 73, 74, 128, 297, 303], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 67, 70, 72, 73, 74, 219, 298, 302], "addition": 4, "timestep": [4, 40, 116, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 302], "realli": 4, "larg": [4, 27, 97, 100, 130, 297, 298, 302, 305], "target": [4, 8, 21, 32, 67, 68, 70, 72, 73, 74, 123, 127, 197, 198, 207, 208, 209, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 239, 240, 275, 283, 284, 293, 294, 299, 303], "huge": [4, 163, 299], "std": [4, 109, 133, 166, 170, 187, 296, 308], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 299, 300, 301, 304, 305, 306], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 67, 70, 72, 73, 74, 109, 112, 124, 127, 128, 130, 134, 143, 161, 164, 165, 187, 191, 193, 207, 208, 210, 211, 213, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 228, 234, 281, 288, 297, 299, 303, 308], "estim": [4, 107, 184, 185, 186, 207, 208, 209, 210, 211, 213, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 293, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "encount": [4, 291, 297, 303], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 296, 298, 302, 308], "bonus": 4, "denser": 4, "prior": [4, 174, 216, 302], "freshli": 4, "proper": [4, 6, 7, 236, 237, 238, 239, 297, 298, 302, 305], "doesn": [4, 11, 72, 97, 100], "drop": [4, 62, 142], "meant": [4, 71], "encourag": [4, 296, 297, 305], "measur": [4, 298], "novelti": 4, "revisit": 4, "previous": [4, 298, 308], "diminish": 4, "decreas": 4, "ideal": [4, 109, 303], "down": [4, 13, 14, 16, 17, 299], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 297, 298, 299, 302, 303, 307, 308], "distil": 4, "add": [4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 67, 70, 72, 73, 74, 93, 107, 157, 164, 192, 207, 267, 298, 299, 302, 303, 305, 307], "nois": [4, 134, 165, 182, 193, 224, 228, 268, 288, 296], "exploratori": [4, 207, 209, 220, 223], "could": [4, 6, 297, 298, 302, 304, 308], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 208, 210, 211, 213, 214, 219, 224, 226, 228, 234, 294, 296, 297, 305], "schedul": [4, 7, 40, 268, 298, 303], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 112, 132, 208, 210, 213, 224, 226, 228, 296, 297, 302, 305, 308], "divers": [4, 73, 74], "bootstrap": [4, 214, 237, 243, 244, 296, 299], "noisi": [4, 164, 165, 182, 292], "unstabl": [4, 156, 178, 179], "inher": 4, "stochast": [4, 107, 154, 165, 167, 174, 208, 212, 213, 219, 222, 224, 226, 292, 298, 302], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 157, 161, 184, 185, 186, 221, 224, 294, 297], "pomdp": [4, 305], "previou": [4, 10, 32, 40, 41, 124, 174, 188, 298, 299, 303, 308], "loos": [4, 292, 297, 298], "nonexist": 4, "architectur": [4, 150, 302], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 92, 93, 94, 95, 97, 99, 100, 103, 105, 109, 110, 113, 114, 115, 116, 117, 118, 119, 123, 125, 126, 127, 133, 144, 151, 153, 159, 162, 163, 169, 172, 176, 188, 199, 200, 212, 254, 255, 267, 268, 269, 271, 272, 281, 292, 296, 298, 299, 301, 302, 308], "rather": [4, 114, 296, 297, 298, 302], "lstm": [4, 157, 158, 166], "explicitli": [4, 297, 299, 302, 305], "rel": [4, 124, 151, 177, 296, 297, 302, 305], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 93, 297, 298, 305, 307, 308], "compens": 4, "descent": [4, 165], "1000": [4, 38, 67, 70, 72, 73, 74, 93, 133, 193, 194, 198, 218, 296, 297, 298, 299, 304, 305], "know": [4, 9, 35, 38, 41, 42, 187, 191, 224, 268, 296, 297, 298, 299, 302, 305], "minimum": [4, 25, 67, 70, 72, 73, 74, 117, 139, 154, 166, 177, 178, 179, 194, 201, 204, 206, 208, 213, 221, 222, 226, 263, 296, 298, 302, 303, 307, 308], "manual": [4, 18, 20, 21, 296, 299, 305], "deviat": [4, 109, 133, 143, 154, 161, 164, 165, 187, 223, 228, 296, 302], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 67, 70, 71, 72, 73, 74, 97, 99, 100, 123, 128, 131, 133, 143, 157, 161, 187, 191, 193, 194, 195, 196, 197, 198, 207, 208, 210, 211, 213, 214, 215, 218, 219, 221, 223, 224, 225, 226, 227, 228, 234, 236, 237, 238, 239, 240, 268, 272, 274, 277, 278, 283, 284, 294, 297, 298, 299, 302, 303, 305, 307, 308], "stabil": [4, 104], "stage": [4, 296, 303], "never": 4, "prevent": [4, 26, 28, 156, 178, 179, 220, 223, 270, 305], "solv": [4, 9, 10, 291, 296, 297, 298, 302, 303, 305], "entir": [4, 298, 303, 305], "submit": [4, 291, 307], "suffici": [4, 296], "recommend": [4, 7, 302], "system": [4, 5, 298, 302, 303], "adequ": [4, 135, 298, 302], "infeas": 4, "allevi": [4, 292], "prune": 4, "develop": [4, 7, 296, 307], "filter": [4, 45, 207, 208, 210, 213, 219, 223, 224, 226], "fire": [4, 32, 67, 70, 72, 73, 74], "certain": [4, 18, 20, 21, 32, 45, 67, 70, 72, 73, 74, 84, 104, 122, 128, 220, 292, 296, 297, 298, 302, 308], "illeg": 4, "move": [4, 21, 32, 67, 70, 72, 73, 74, 96, 98, 112, 124, 127, 128, 130, 132, 133, 142, 159, 197, 270, 296, 297, 299, 307, 308], "chess": 4, "combin": [4, 127, 297, 305], "grasp": 4, "releas": [4, 7, 10, 32, 67, 70, 72, 73, 74, 128, 307], "top": [4, 143, 161], "p": [4, 68], "wherein": 4, "cumul": [4, 119, 123, 143, 242, 298], "probabl": [4, 8, 40, 151, 153, 157, 159, 162, 169, 179, 194, 198, 292, 297, 307], "q": [4, 9, 146, 147, 148, 149, 152, 153, 155, 171, 172, 180, 186, 190, 195, 196, 208, 210, 211, 213, 214, 218, 219, 224, 226, 228, 234, 281, 290, 296], "flow": [4, 296, 298, 302, 303, 305], "reparameter": [4, 151, 169], "soft": [4, 218, 226, 227], "critic": [4, 8, 184, 192, 207, 209, 210, 213, 219, 220, 223, 224, 225, 226, 228, 296, 298], "clip": [4, 40, 117, 209, 228, 272, 298, 302, 303], "oppos": [4, 45], "incorrect": 4, "thought": [4, 67, 70, 72, 73, 74], "bound": [4, 17, 21, 25, 26, 32, 67, 70, 72, 73, 74, 108, 133, 173, 174, 183, 189, 190, 193, 194, 195, 196, 197, 198, 201, 228, 292, 296, 297, 298, 308], "region": 4, "squash": [4, 299, 307], "tanh": [4, 144, 156, 159, 163, 177, 178, 179, 201, 298, 302, 303, 304, 307], "correct": [4, 107, 123, 275, 298, 299], "prob": [4, 162, 169, 298, 302], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 98, 99, 107, 112, 128, 132, 194, 197, 198, 218, 221, 223, 281, 296, 301, 303, 308], "real": [5, 198, 293, 299, 303], "histor": 5, "wa": [5, 7, 67, 70, 72, 73, 74, 128, 218, 227, 293, 297, 298, 301, 305, 307], "ceas": 5, "fork": 5, "farama": [5, 81, 82, 298, 303], "detail": [5, 6, 7, 32, 67, 70, 72, 73, 74, 126, 128, 153, 190, 207, 214, 223, 291, 297, 301, 305], "usag": [5, 7, 52, 93, 157, 208, 219, 226, 229, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "known": [5, 7, 8, 243, 244, 296, 297], "bc": [5, 307], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 67, 70, 72, 73, 74, 93, 116, 133, 297, 305, 307], "face": [5, 8, 9, 308], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 135, 183, 189, 190, 194, 195, 196, 197, 198, 298, 302], "13": [5, 10, 11, 296, 297, 298, 299, 302, 303, 305, 306], "construct": [5, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 97, 100, 135, 157, 174, 198, 272, 292, 297, 298, 299, 303, 305, 308], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 70, 72, 73, 74, 135, 157, 181, 184, 185, 186, 187, 191, 193, 195, 203, 234, 292, 296, 297, 298, 299, 302, 308], "best": [5, 9, 157, 302, 305, 307], "gymwrapp": [5, 70, 290, 298, 307], "feel": [5, 291, 307], "free": [5, 7, 97, 100, 207, 216, 223, 294, 298, 302, 307], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 99, 296, 297, 298, 299, 302, 305], "prepar": [6, 298], "conda": [6, 7, 291], "assum": [6, 26, 33, 40, 41, 42, 52, 70, 73, 74, 95, 103, 112, 113, 119, 124, 130, 132, 139, 157, 158, 181, 201, 211, 214, 226, 234, 245, 246, 247, 248, 250, 251, 252, 253, 255, 296, 298, 299, 301, 303], "7": [6, 10, 27, 33, 35, 38, 41, 143, 144, 158, 159, 161, 242, 296, 297, 302, 303, 305, 306, 307], "cmake": 6, "14": [6, 11, 109, 296, 297, 298, 302, 303, 304, 305, 306, 307], "activ": [6, 7, 9, 144, 150, 154, 159, 163, 209, 220, 223, 292, 307], "sim": 6, "bullet": 6, "physic": [6, 7, 294, 296, 302, 303], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 291], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 299], "y": [6, 7, 88, 158, 181, 296, 298, 302], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 67, 70, 72, 73, 74, 121, 221, 302, 308], "command": [6, 7, 10, 298, 302, 303, 308], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 290], "_has_habitat": 6, "available_env": [6, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 308], "startswith": [6, 293, 296], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 78, 84, 288, 294, 296, 305], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 68, 221, 296], "env_nam": [6, 72, 75, 77, 79, 81, 86, 296, 298, 308], "llvmlite": 6, "config": [6, 7, 112, 132, 145, 150, 170, 276, 277, 278, 281, 282, 285], "var": [6, 7, 32, 67, 70, 72, 73, 74, 128, 221], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 76, 144, 146, 147, 155, 159, 184, 185, 186, 194, 197, 200, 219, 296, 297, 299, 302, 303, 304, 305, 306, 307], "bind": 6, "deactiv": [6, 7, 189], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 67, 70, 72, 73, 74, 128, 221, 305], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 297], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 301, 303, 308], "joint": [7, 297], "dynam": [7, 219, 298, 303], "contact": [7, 37], "engin": [7, 303], "biomechan": 7, "graphic": 7, "anim": [7, 302], "area": 7, "demand": [7, 308], "fast": [7, 9, 76, 114, 224, 296, 297, 298], "accur": [7, 52, 297, 303, 305], "articul": 7, "acquir": [7, 298], "deepmind": [7, 8, 9, 77, 78, 298], "whomev": 7, "licenc": 7, "incorpor": [7, 187, 191, 193, 299, 303], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 74, 108, 127, 255, 292, 293, 296, 297, 298, 302, 305, 308], "legaci": 7, "pro": [7, 291], "tip": [7, 291], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 308], "sudo": [7, 291], "enabl": [7, 8, 52, 55, 56, 65, 157, 193, 268, 298, 302, 303, 305], "apt": [7, 302], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 297, 299], "fact": [7, 8, 296, 298, 302, 303, 304, 305, 308], "workflow": [7, 184, 185, 186], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 67, 70, 72, 73, 74, 112, 130, 132, 299, 308], "binari": [7, 24, 27, 33, 92, 153, 172, 189, 190, 195, 196, 211, 213, 234], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 255, 260, 288], "earlier": [7, 296, 298, 299, 302, 305], "roboti": 7, "download": [7, 10, 112, 132, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308], "html": [7, 72], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 67, 70, 72, 73, 74, 112, 123, 132, 143, 171, 269, 296, 298, 302], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54, 304], "bin": [7, 153, 190, 292], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 149, 194, 198, 296, 298, 305], "nvidia": 7, "older": [7, 11], "hack": [7, 296], "line": [7, 32, 67, 70, 72, 73, 74, 297, 302], "adatp": 7, "script": [7, 135, 281, 284, 288, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "unnot": [7, 113], "until": [7, 21, 298, 299, 302], "complet": [7, 9, 62, 70, 93, 291, 293, 296, 298, 301], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 297, 305], "troubleshoot": 7, "gl": 7, "h": [7, 93, 95, 115, 126, 157, 161, 255, 297, 299, 305], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 89, 90, 93, 123, 126, 143, 145, 150, 158, 161, 162, 170, 181, 191, 193, 201, 208, 211, 213, 223, 224, 225, 228, 234, 236, 237, 238, 239, 242, 263, 294, 296, 297, 298, 299, 302, 303, 305, 307, 308], "fatal": 7, "No": 7, "directori": [7, 45, 55, 260, 294], "devel": 7, "ubuntu": 7, "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 297, 298, 299, 303, 306], "disappear": [7, 297, 299, 301], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 87, 109, 144, 151, 158, 159, 163, 167, 177, 202, 281, 296, 297, 299, 302, 303, 305, 306, 307, 308], "glibcxx_3": 7, "29": [7, 296, 297, 303], "compil": [7, 32, 67, 70, 72, 73, 74], "libosmesa": 7, "libgcc": 7, "Then": [7, 298, 301], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 67, 70, 72, 73, 74, 108, 128, 308], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 296, 297, 303, 305, 306], "114": [7, 303, 305], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 303], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 135], "opengl": [7, 302], "global": [7, 32, 67, 70, 72, 73, 74, 171, 180, 194, 198, 234, 294, 296, 302], "cuda_visible_devic": 7, "id": [7, 23, 40, 193, 224, 258, 281], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 303, 305], "displai": [7, 272, 294, 296, 297, 302, 303], "correctli": [7, 32, 67, 70, 72, 73, 74], "lgl": 7, "libegl": 7, "x11": [7, 302], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 70, 142, 187, 191, 193, 223, 272, 294, 296, 297, 301, 305], "sketch": [8, 294], "_": [8, 68, 94, 97, 99, 100, 107, 109, 114, 126, 133, 183, 197, 202, 206, 207, 208, 210, 213, 219, 223, 224, 226, 228, 236, 237, 238, 239, 296, 297, 298, 299, 302, 303, 305, 307], "n_training_step": 8, "datapoint": [8, 45, 305], "onlin": [8, 13, 17, 93, 150, 170, 207, 212, 222, 223, 263, 288, 298, 299, 302, 305], "n_data_per_train": 8, "no_grad": [8, 32, 67, 70, 72, 73, 74, 107, 236, 237, 238, 239, 298, 299, 302], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 269, 284, 296, 297, 298, 302, 305], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 116, 269, 294, 296, 297, 298, 299, 302, 304, 305, 307], "loss_fn": [8, 299, 307], "backward": [8, 32, 67, 70, 72, 73, 74, 133, 207, 208, 210, 213, 219, 223, 224, 225, 226, 228, 296, 298, 299, 302, 303], "zero_grad": [8, 32, 67, 70, 72, 73, 74, 294, 296, 298, 299, 302, 303], "backpropag": [8, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 302, 303], "differenti": [8, 45, 107, 236, 237, 238, 239, 299, 302, 303], "denomin": 8, "artifact": 8, "numer": [8, 38, 133, 156, 178, 179, 183, 189, 190, 194, 195, 196, 197, 198, 270, 298, 305, 308], "misconcept": 8, "save": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 254, 272, 294, 302], "freed": 8, "appear": [8, 33, 303, 305], "compuat": 8, "twice": 8, "fix": [8, 124, 208, 222, 226, 297, 303, 308], "retain_graph": 8, "discuss": [8, 9, 302], "inplac": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 128, 296], "accumul": 8, "onto": [8, 33, 139, 183, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 299, 303], "exclud": [8, 52, 93, 101, 142, 171, 302, 305], "forward": [8, 32, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 116, 119, 120, 122, 123, 124, 125, 127, 130, 131, 133, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 163, 164, 166, 167, 168, 170, 171, 173, 174, 176, 180, 181, 187, 188, 190, 191, 193, 196, 197, 198, 201, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 293, 303, 307], "submodul": [8, 32, 67, 70, 72, 73, 74, 83, 221], "param": [8, 32, 40, 67, 70, 71, 72, 73, 74, 96, 98, 107, 114, 127, 151, 153, 162, 177, 188, 194, 197, 200, 202, 221, 230, 233, 236, 237, 238, 239, 240, 296, 302, 303, 304, 307], "grad": [8, 32, 67, 70, 72, 73, 74, 296, 298], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 166, 171, 197], "strictli": [8, 32, 67, 70, 72, 73, 74, 128, 296, 298], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 93, 103, 113, 129, 215, 293, 298, 302, 303], "ask": [8, 296, 298, 299, 302, 304, 308], "much": [8, 35, 41, 58, 220, 223, 298, 302, 303, 305, 308], "render": [8, 268, 296, 297, 298], "upon": [8, 303], "factor": [8, 32, 116, 156, 165, 178, 179, 187, 191, 193, 208, 214, 215, 217, 227, 242, 296, 297, 302, 305, 308], "fit": [8, 11, 109, 293, 294, 296], "everi": [8, 17, 26, 28, 32, 33, 63, 67, 70, 72, 73, 74, 123, 133, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 272, 294, 296, 297, 298, 299, 302, 303], "bottlneck": 8, "affect": [8, 32, 67, 70, 72, 73, 74, 127, 128, 135, 236, 237, 238, 239], "brax": [8, 75, 76, 114, 308], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 67, 70, 72, 73, 74, 102, 128, 162, 210, 211, 263, 293, 294, 296, 298, 299, 302, 303, 305], "underli": [8, 67, 70, 72, 73, 74, 221, 303], "tedeiou": 8, "priorit": [8, 35, 41, 58, 208, 210, 211, 213, 219, 224, 226, 228, 296, 297], "amount": [8, 193, 297, 305], "isn": [8, 34, 36, 39, 189, 197, 302], "contigu": [8, 67, 70, 72, 73, 74, 139, 298, 302, 303, 305, 307, 308], "costli": [8, 303], "concaten": [8, 21, 30, 31, 93, 94, 109, 127, 159, 200, 296, 297, 302, 303, 305, 308], "constitut": [8, 297, 302, 303], "plain": 8, "profil": 8, "fulli": [8, 32, 67, 70, 72, 73, 74, 297, 303, 305], "frequent": [8, 305], "program": [8, 219, 308], "functorch": [8, 10], "incl": 8, "suit": [8, 78, 298, 308], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 197, 200, 221, 302, 303, 307], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 72, 144, 159, 163, 221, 298, 303, 307], "lost": 8, "permut": [8, 62, 307, 308], "idea": [9, 224, 294, 299, 302], "introductori": 9, "intro": [9, 298, 299], "dai": [9, 307], "2022": [9, 10, 303, 307], "spin": [9, 308], "deep": [9, 93, 146, 147, 148, 149, 152, 193, 207, 218, 226, 227, 296], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 109, 133, 296, 297, 298, 299], "reddit": 9, "reagent": 9, "orient": [9, 308], "baselines3": 9, "tf": 9, "bandit": [9, 88], "tensorflow": [9, 162], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 67, 70, 72, 73, 74, 107, 199, 200, 223, 292, 298, 299, 302, 303, 304, 308], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 307], "grade": 9, "factori": [9, 43], "throughput": [9, 296], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 67, 70, 72, 73, 74, 99, 139, 150, 153, 168, 172, 183, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 211, 213, 228, 234, 292, 297, 298, 299, 302, 303, 307, 308], "mbrl": [9, 71, 292], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 296, 303], "dist": [10, 162, 169], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 298, 299, 302], "notebook": [10, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308], "24": [10, 296, 297, 299, 302, 303, 306], "11": [10, 27, 33, 45, 55, 56, 65, 68, 126, 143, 161, 296, 297, 298, 302, 303, 304, 305, 306], "12": [10, 55, 56, 65, 296, 297, 298, 302, 303, 305], "pip": [10, 53, 302, 307, 308], "pip3": [10, 298, 299, 302], "extra": [10, 32, 67, 70, 72, 73, 74, 93, 133, 142, 292, 298, 299, 305], "url": 10, "org": [10, 35, 58, 93, 112, 130, 145, 146, 147, 148, 149, 150, 153, 154, 155, 161, 162, 165, 167, 168, 170, 171, 173, 174, 180, 190, 193, 207, 208, 212, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 236, 241, 249, 304], "whl": 10, "u": [10, 53, 303], "There": [10, 157, 292, 294, 298, 299, 302, 303, 305, 308], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 221], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 67, 70, 72, 73, 74, 92, 93, 94, 95, 97, 99, 100, 103, 105, 106, 109, 110, 112, 113, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 132, 133, 142, 144, 146, 147, 148, 149, 151, 153, 155, 158, 159, 162, 163, 164, 165, 169, 171, 172, 177, 178, 179, 180, 197, 213, 218, 224, 227, 249, 266, 268, 269, 277, 278, 281, 282, 284, 285, 286, 287, 288], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 67, 69, 70, 72, 73, 74, 77, 83, 88, 92, 93, 94, 95, 97, 99, 100, 103, 105, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 132, 133, 136, 140, 142, 143, 144, 146, 147, 148, 149, 152, 153, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 171, 172, 180, 183, 189, 190, 194, 195, 196, 197, 198, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 234, 235, 236, 237, 238, 239, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 281, 282, 288, 297, 298], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 67, 68, 70, 71, 72, 73, 74, 84, 206, 221, 277, 278, 286, 287, 288, 297], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 55, 56, 57, 63, 65, 99, 188], "vs": [11, 157, 158, 307], "longer": [11, 297, 302, 305], "self": [11, 26, 28, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 96, 97, 100, 112, 124, 127, 128, 130, 132, 143, 153, 161, 171, 180, 187, 191, 197, 202, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 294, 296, 297, 303, 307], "x": [11, 23, 26, 32, 38, 40, 107, 126, 144, 153, 155, 157, 158, 159, 161, 163, 181, 189, 195, 204, 206, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 272, 296, 298, 303, 305, 307], "23": [11, 296, 297, 298, 302, 303, 304, 306], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 67, 68, 70, 72, 73, 74, 84, 107, 124, 181, 189, 195, 215, 217, 236, 239, 247, 248, 252, 253, 284, 293, 296, 297, 302, 305, 307, 308], "import_modul": 11, "27": [11, 297, 298, 303, 305], "get_class_that_defined_method": 11, "f": [11, 70, 206, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 296, 297, 298, 299, 302, 303, 305, 308], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 99, 109, 124, 128, 133, 156, 163, 178, 179, 195, 201, 208, 216, 221, 222, 226, 268, 269, 294, 296, 297, 298, 299, 303, 308], "module_set": 11, "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 96, 112, 121, 127, 128, 129, 131, 132, 143, 144, 152, 157, 159, 160, 161, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 240, 262, 265, 269, 272, 288, 297], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 67, 69, 70, 72, 73, 74, 93, 94, 96, 97, 98, 101, 102, 103, 106, 107, 108, 111, 113, 114, 116, 119, 120, 122, 123, 124, 125, 127, 131, 133, 142, 143, 157, 160, 161, 187, 188, 190, 191, 193, 196, 197, 198, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 272, 296, 303], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 68, 73, 74, 296, 307], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 77, 93, 94, 95, 99, 103, 104, 108, 109, 112, 113, 115, 121, 122, 125, 128, 129, 130, 132, 135, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 207, 208, 209, 213, 215, 216, 220, 221, 222, 223, 224, 228, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 263, 264, 265, 268, 269, 272, 274, 281, 282, 286, 287, 288, 303], "200": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 89, 90, 116, 146, 147, 154, 173, 174, 296, 299, 303], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 93, 116, 272, 275, 284, 294, 296, 297, 298, 299, 302, 305, 307], "create_env_kwarg": [13, 14, 16, 17, 68, 72, 73, 74, 296], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 67, 68, 70, 72, 73, 74, 107, 124, 128, 133, 144, 145, 146, 147, 148, 149, 150, 155, 158, 159, 170, 194, 198, 259, 260, 268, 277, 278, 281, 286, 287, 288, 296, 297, 298, 308], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 116, 297, 305], "interactiontyp": [13, 16, 18, 19, 20, 21, 137, 141, 194, 198, 268], "exploration_mod": [13, 16, 18, 19, 20, 290, 292], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 67, 70, 72, 73, 74, 96, 97, 100, 107, 109, 112, 116, 117, 118, 123, 124, 126, 127, 128, 130, 132, 133, 151, 154, 156, 159, 162, 164, 165, 173, 174, 177, 179, 187, 197, 201, 204, 205, 206, 207, 208, 213, 216, 217, 218, 219, 222, 224, 226, 227, 228, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 270, 296, 297, 305, 308], "datacollector": [13, 14, 16, 17, 194, 198, 223, 298], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 183, 187, 189, 190, 193, 194, 195, 196, 197, 198, 200, 292, 307], "env_mak": [13, 14, 16, 21, 284, 308], "50": [13, 14, 16, 21, 37, 40, 296, 297, 298, 299, 302, 303, 304], "linear": [13, 14, 16, 17, 21, 32, 67, 70, 71, 72, 73, 74, 96, 107, 112, 124, 127, 128, 130, 132, 143, 144, 153, 159, 161, 163, 164, 165, 166, 172, 173, 174, 183, 184, 185, 186, 191, 192, 193, 194, 195, 197, 200, 202, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 236, 237, 238, 239, 284, 292, 297, 301, 304, 307], "2000": [13, 14, 16, 45, 298, 305], "enumer": [13, 14, 16, 21, 32, 38, 42, 67, 70, 72, 73, 74, 229, 293, 296, 297, 298, 299, 305, 307], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 67, 70, 72, 73, 74, 88, 116, 153, 172, 189, 190, 193, 195, 196, 292, 298, 299, 303, 305, 307, 308], "step_count": [13, 14, 16, 67, 70, 72, 73, 74, 122, 298, 299, 307], "shutdown": [13, 14, 16, 17, 21, 296, 307], "del": [13, 14, 16, 296, 298, 301, 307, 308], "randompolici": [13, 14, 16, 18, 19, 20, 22, 93, 116, 290, 305], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 209, 220, 223, 263, 265, 268, 272, 275, 276, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308], "lifespan": [13, 14, 16, 18, 19, 20, 297], "divis": [13, 14, 16, 18, 19, 20, 302], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 99, 299, 305], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 124, 128, 194, 198, 268, 286, 287, 288, 294, 297, 298, 303, 308], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 67, 70, 72, 73, 74, 298], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 297, 298, 302], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 127, 129, 163, 293, 294, 296, 297, 302, 305, 307], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 67, 70, 72, 73, 74, 99, 101, 120, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 162, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 236, 305, 308], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 292, 302, 303], "post": [13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74], "multistep": [13, 14, 16, 18, 19, 20, 21, 290, 297], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 109, 118, 156, 164, 173, 178, 179, 234, 292, 303, 305], "explorationtyp": [13, 14, 16, 20, 21, 221, 268, 296, 297, 298, 299, 307], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 223], "whole": [13, 14, 16, 26, 28, 32, 45, 67, 70, 72, 73, 74, 128, 263, 296, 298], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 274, 284, 294, 296, 307], "async": [13, 14, 18, 19, 20, 21, 296, 307], "ratio": [13, 14, 40, 296, 298], "finish": [13, 14, 21, 116], "rest": [13, 14, 292, 298, 299, 303, 307], "earli": [13, 14, 307], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 128, 133, 294, 296], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 128, 133, 288, 294, 296, 297, 308], "ordereddict": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 128, 133, 297], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 133, 157, 206, 207, 209, 220, 223, 272, 292, 302], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 67, 70, 72, 73, 74, 128], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 67, 70, 72, 73, 74, 104, 109, 122, 144, 159, 163, 219, 226, 305], "increment": [13, 14, 16, 17, 67, 70, 72, 73, 74, 122, 220], "env_fn": [13, 14, 16, 17, 68, 286, 287], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 148, 149, 303], "out_se": [13, 14, 16, 17, 308], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 26, 32, 52, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 96, 112, 121, 124, 127, 128, 129, 131, 132, 143, 144, 146, 147, 148, 149, 152, 155, 156, 157, 159, 160, 161, 163, 169, 177, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 234, 235, 236, 237, 238, 239, 240, 255, 259, 260, 262, 265, 272, 277, 278, 281, 285, 286, 287, 293, 298, 302], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 92, 93, 94, 95, 97, 99, 100, 103, 105, 106, 107, 109, 110, 113, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 133, 142, 146, 152, 153, 157, 158, 159, 163, 166, 170, 171, 172, 190, 195, 196, 201, 207, 208, 210, 213, 215, 219, 221, 223, 224, 225, 226, 228, 236, 237, 238, 239, 266, 268, 270, 279, 280, 296], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 76, 87, 97, 100, 143, 161, 207, 208, 210, 211, 213, 219, 223, 224, 226, 228, 303, 307, 308], "describ": [15, 44, 94, 127, 177, 178, 258, 293, 296, 298, 302, 303, 308], "tensor_spec": [15, 213, 223, 225], "boundedtensorspec": [15, 22, 26, 67, 70, 72, 73, 74, 191, 193, 194, 201, 207, 208, 210, 219, 223, 224, 226, 228, 290, 298, 302, 303, 307, 308], "cube": 15, "envcreat": [16, 22, 284, 285, 288, 290, 296, 297, 307, 308], "interruptor": 16, "_interruptor": 16, "outsid": [16, 302], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 67, 70, 72, 73, 74, 298, 302, 307, 308], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 70, 72, 107, 207, 209, 220, 223, 296, 301, 303, 307], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 111, 296, 307], "regular": [17, 34, 36, 39, 172, 190, 195, 196, 197, 198, 214, 274, 290, 294, 296, 297, 305, 308], "mere": 17, "greater": [17, 157, 296, 297, 307], "signal": [17, 52, 122, 293, 296, 298, 302, 305], "sent": [17, 55, 56, 65, 133], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 73, 74, 113, 133, 143, 144, 146, 148, 150, 152, 159, 161, 163, 183, 197, 202, 263, 269, 296, 298, 299, 303, 305, 308], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 272], "string": [18, 19, 20, 32, 37, 45, 54, 67, 70, 72, 73, 74, 84, 112, 132, 157, 194, 195, 206, 254, 271, 281, 293, 296, 298, 299], "respect": [18, 19, 20, 32, 67, 70, 72, 73, 74, 92, 96, 97, 100, 112, 113, 124, 127, 128, 130, 132, 174, 197, 202, 267, 298, 299, 302], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 114, 128, 142, 157, 188, 221, 293, 296, 297, 299, 305], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 291, 297, 298, 301, 305], "serv": [18, 20, 21, 85, 305, 308], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 67, 70, 72, 73, 74, 103], "seen": [18, 20, 21, 293, 296, 297, 299, 302, 305], "turn": [18, 20, 21, 105, 129, 189, 268, 293, 296, 297, 299, 303, 304], "mp": [18, 19, 20, 68, 133], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 67, 70, 72, 73, 74, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 296], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 67, 70, 72, 73, 74, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 223, 286, 287], "homonym": [18, 19, 20, 303], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 296], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 194, 198], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 286, 287, 296, 297], "coordin": 21, "hood": [21, 303], "init": [21, 32, 67, 70, 72, 73, 74, 296, 297, 298], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 305], "similarli": [21, 32, 62, 67, 70, 72, 73, 74, 199, 200, 219, 308], "num_cpu": 21, "num_gpu": 21, "1024": [21, 150, 297, 305], "equat": [21, 193, 206, 209, 227, 298, 303], "exce": [21, 298, 305], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 272, 296, 298, 299], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 89, 90, 144, 145, 146, 147, 150, 155, 159, 163, 167, 168, 170, 171, 180, 234, 296, 297, 299, 303, 304, 305, 307, 308], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "wherea": [22, 99, 221, 294], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 145, 150, 170, 188], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 68, 297], "__main__": [22, 68], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 99, 125, 177, 178, 179, 188, 193, 208, 209, 213, 222, 224, 226, 296, 298, 299, 302], "durat": [23, 302], "meta": [23, 44, 52, 69, 294, 298, 302, 305], "aren": [23, 299], "discret": [24, 27, 30, 31, 33, 47, 67, 70, 72, 73, 74, 99, 169, 172, 213, 214, 292, 297, 298, 302, 308], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 133, 292, 296, 302], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 99, 168, 169, 173, 206, 292, 297, 298, 299, 303, 305], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 307], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 193, 201], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 201, 303], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 67, 70, 72, 73, 74, 96, 97, 100, 107, 112, 124, 127, 128, 130, 132, 133, 197, 281, 308], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 144, 159, 175, 176], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 130, 145, 170], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 67, 70, 72, 73, 74, 288, 292], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 308], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 99, 157, 183, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 292, 307, 308], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 183, 189, 190, 194, 195, 196, 197, 198, 298, 302, 303, 305], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 124, 139, 303, 305], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 93, 121, 144, 175, 176, 296, 303, 305], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 93, 94, 124, 129, 133, 158, 176, 181, 288, 297, 298, 303, 305], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 127, 128, 166, 177, 288], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 99, 153, 169, 172, 189, 190, 195, 196, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 299], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 153, 172, 189, 195, 211, 213, 234, 290, 292], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 67, 70, 72, 73, 74, 96, 97, 100, 112, 124, 127, 128, 130, 132, 133, 197, 206, 221, 296, 297, 298, 303, 305], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 124, 157, 299, 303, 304], "upper": [25, 108], "unnam": 26, "effect": [26, 32, 67, 70, 72, 73, 74, 93, 119, 128, 272, 296, 305, 308], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 67, 70, 72, 73, 74, 144, 159, 296, 297, 303], "composite_spec": 26, "observation_vector": [26, 94, 281, 296], "randn": [26, 34, 36, 39, 55, 56, 65, 109, 139, 145, 150, 153, 158, 162, 166, 169, 170, 172, 183, 184, 185, 186, 188, 189, 194, 195, 197, 200, 201, 202, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 236, 237, 238, 239, 271, 292, 307, 308], "td_project": 26, "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 67, 70, 72, 73, 74, 235, 302], "children": [26, 28, 32, 67, 70, 72, 73, 74], "keysview": [26, 28], "reflect": [26, 28, 142, 221, 275, 297, 298, 299, 302], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 67, 70, 72, 73, 74, 221], "succeed": [26, 28, 298, 302, 303], "selected_kei": [26, 28, 120, 296], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "categor": [27, 31, 33, 153, 169, 172, 189, 190, 195, 196, 211, 213, 234, 299], "action_valu": [27, 33, 152, 153, 172, 189, 190, 195, 196, 213, 221, 234, 292, 299], "arang": [27, 33, 153, 162, 189, 263, 292, 305], "argmax": [27, 153, 172, 190, 196], "chosen_action_valu": [27, 33, 171, 172, 180, 195, 196, 234, 292, 299], "outcom": [27, 33, 151, 177], "lazi": [28, 29, 49, 50, 67, 70, 72, 73, 74, 112, 130, 164, 199, 200, 296, 297, 301, 305, 308], "represent": [28, 29, 32, 67, 70, 72, 73, 74, 112, 130, 132, 296, 303, 304, 308], "drawn": [28, 29, 124, 194, 198, 298, 302], "lazystackedtensordict": [28, 67, 70, 71, 72, 73, 74, 301, 307], "heterogen": [28, 29, 135, 163, 296, 297], "semant": [28, 29, 292], "thrown": [29, 32, 67, 70, 72, 73, 74, 305], "nvec": [30, 31], "cardin": [30, 31, 153, 172, 189, 190, 196, 298], "ax": [30, 164, 165], "m": [30, 32, 67, 70, 72, 73, 74, 99, 198, 292, 297, 303], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 211, 213, 234, 290], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 290], "gamma": [32, 116, 161, 207, 208, 210, 211, 213, 214, 215, 217, 219, 221, 223, 224, 225, 226, 228, 229, 230, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 284, 293, 296, 297, 298, 302, 307], "sutton": [32, 293, 302], "1988": 32, "predict": [32, 40, 154, 160, 161, 188, 203, 214, 216, 217, 235, 292, 296, 297], "tempor": [32, 157, 161, 237, 238, 243, 244], "44": [32, 297, 299, 303, 304], "discount": [32, 68, 116, 208, 214, 215, 217, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 293, 297, 298, 302], "ahead": [32, 308], "add_modul": [32, 67, 70, 72, 73, 74], "child": [32, 67, 70, 72, 73, 74], "fn": [32, 37, 67, 70, 72, 73, 74, 166, 286, 287], "init_weight": [32, 67, 70, 72, 73, 74], "fill_": [32, 67, 70, 72, 73, 74, 297, 299, 308], "net": [32, 67, 70, 72, 73, 74, 158, 163, 207, 208, 213, 219, 223, 224, 225, 226, 281, 284, 297, 303, 304, 307], "in_featur": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 144, 146, 147, 148, 149, 158, 159, 163, 164, 165, 184, 197, 211, 307], "out_featur": [32, 67, 70, 71, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 143, 144, 146, 147, 148, 149, 154, 155, 157, 158, 159, 161, 163, 164, 165, 184, 189, 197, 211, 292, 296, 299, 307], "bia": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 144, 154, 157, 159, 163, 164, 165, 166, 191, 193, 197, 204, 205, 206, 221, 293, 296, 297, 298, 299, 302, 307], "requires_grad": [32, 67, 70, 72, 73, 74, 107], "bfloat16": [32, 67, 70, 72, 73, 74], "datatyp": [32, 67, 70, 72, 73, 74, 305], "member": [32, 67, 70, 72, 73, 74, 221], "xdoctest": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 221], "skip": [32, 67, 70, 72, 73, 74, 104, 128, 135, 194, 198, 221, 236, 237, 238, 239, 254, 255, 265, 268, 296, 297, 298, 303], "buf": [32, 67, 70, 72, 73, 74], "20l": [32, 67, 70, 72, 73, 74, 221], "1l": [32, 67, 70, 72, 73, 74, 221], "5l": [32, 67, 70, 72, 73, 74, 221], "__call__": [32, 37, 67, 70, 72, 73, 74, 198, 294], "associ": [32, 67, 70, 72, 73, 74, 173, 288, 296, 305], "doubl": [32, 46, 67, 70, 72, 73, 74, 96, 97, 98, 100, 112, 124, 127, 128, 130, 132, 197, 211, 214, 218, 224, 227, 234, 296, 297, 298, 299, 308], "eval": [32, 67, 70, 72, 73, 74, 128, 133, 296, 297, 298], "evalu": [32, 67, 70, 72, 73, 74, 128, 151, 162, 169, 179, 224, 277, 278, 297, 298], "dropout": [32, 67, 70, 72, 73, 74, 128, 157, 159, 299], "batchnorm": [32, 67, 70, 72, 73, 74, 128], "disabl": [32, 67, 70, 72, 73, 74, 128, 156, 179, 296], "comparison": [32, 54, 67, 70, 72, 73, 74, 128, 221, 296, 297], "similar": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 131, 132, 133, 184, 186, 194, 197, 198, 293, 296, 297, 298, 299, 303, 308], "confus": [32, 67, 70, 72, 73, 74, 128], "extra_repr": [32, 67, 70, 72, 73, 74], "nontermin": 32, "original_reward": 32, "newli": [32, 67, 70, 72, 73, 74], "OR": 32, "reshap": [32, 157, 159, 298, 302], "get_buff": [32, 67, 70, 72, 73, 74], "throw": [32, 67, 70, 72, 73, 74, 308], "docstr": [32, 67, 70, 72, 73, 74], "get_submodul": [32, 67, 70, 72, 73, 74], "explan": [32, 67, 70, 72, 73, 74], "qualifi": [32, 67, 70, 72, 73, 74], "referenc": [32, 67, 70, 72, 73, 74], "attributeerror": [32, 67, 70, 72, 73, 74], "invalid": [32, 67, 70, 72, 73, 74, 162], "resolv": [32, 67, 70, 72, 73, 74], "get_extra_st": [32, 67, 70, 72, 73, 74, 133], "set_extra_st": [32, 67, 70, 72, 73, 74, 133], "picklabl": [32, 67, 70, 72, 73, 74, 133], "ensur": [32, 35, 41, 58, 62, 67, 70, 72, 73, 74, 93, 112, 130, 133, 189, 292, 297, 298, 303, 305], "guarante": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 133, 307], "pickl": [32, 67, 70, 72, 73, 74, 133], "get_paramet": [32, 67, 70, 72, 73, 74], "sai": [32, 67, 70, 72, 73, 74, 304, 308], "net_b": [32, 67, 70, 72, 73, 74], "net_c": [32, 67, 70, 72, 73, 74], "conv": [32, 67, 70, 72, 73, 74, 144, 297], "conv2d": [32, 67, 70, 72, 73, 74, 144, 307], "kernel_s": [32, 67, 70, 72, 73, 74, 144, 146, 147, 167, 297, 307], "stride": [32, 67, 70, 72, 73, 74, 144, 146, 147, 155, 297, 307], "diagram": [32, 67, 70, 72, 73, 74], "show": [32, 67, 70, 72, 73, 74, 163, 292, 296, 298, 299, 302, 303, 305, 307], "itself": [32, 67, 70, 72, 73, 74, 83, 221, 298], "degre": [32, 67, 70, 72, 73, 74], "named_modul": [32, 67, 70, 72, 73, 74], "o": [32, 67, 70, 72, 73, 74], "transit": [32, 52, 67, 70, 72, 73, 74, 203, 296, 299, 303, 305], "half": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 296], "ipu": [32, 67, 70, 72, 73, 74], "strict": [32, 67, 70, 72, 73, 74, 128], "descend": [32, 67, 70, 72, 73, 74, 128], "persist": [32, 67, 70, 72, 73, 74, 128, 142], "enforc": [32, 62, 67, 70, 72, 73, 74, 128, 199, 303], "preserv": [32, 67, 70, 72, 73, 74, 128], "missing_kei": [32, 67, 70, 72, 73, 74, 128], "unexpected_kei": [32, 67, 70, 72, 73, 74, 128], "namedtupl": [32, 67, 70, 72, 73, 74, 128], "duplic": [32, 62, 67, 70, 72, 73, 74, 211, 214, 221, 234], "l": [32, 67, 70, 72, 73, 74, 235, 298, 303], "idx": [32, 67, 70, 72, 73, 74], "named_buff": [32, 67, 70, 72, 73, 74], "remove_dupl": [32, 67, 70, 72, 73, 74, 221], "prepend": [32, 67, 70, 72, 73, 74, 221], "running_var": [32, 67, 70, 72, 73, 74], "named_children": [32, 67, 70, 72, 73, 74], "conv4": [32, 67, 70, 72, 73, 74], "conv5": [32, 67, 70, 72, 73, 74], "memo": [32, 67, 70, 72, 73, 74], "named_paramet": [32, 67, 70, 72, 73, 74, 107, 221], "register_backward_hook": [32, 67, 70, 72, 73, 74], "removablehandl": [32, 67, 70, 72, 73, 74], "deprec": [32, 67, 70, 72, 73, 74, 128, 136, 140, 152, 207, 208, 209, 211, 213, 214, 219, 220, 223, 224, 225, 226, 234, 236, 237, 238, 239, 308], "favor": [32, 67, 70, 72, 73, 74, 298], "register_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_buff": [32, 67, 70, 72, 73, 74], "running_mean": [32, 67, 70, 72, 73, 74], "alongsid": [32, 67, 70, 72, 73, 74, 302], "num_featur": [32, 67, 70, 72, 73, 74], "register_forward_hook": [32, 67, 70, 72, 73, 74, 153, 172], "with_kwarg": [32, 67, 70, 72, 73, 74], "always_cal": [32, 67, 70, 72, 73, 74], "posit": [32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 103, 104, 121, 122, 125, 128, 129, 166, 293, 298, 302, 303, 305], "signatur": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 221, 293, 296, 303], "register_module_forward_hook": [32, 67, 70, 72, 73, 74], "regardless": [32, 67, 70, 72, 73, 74, 209, 220, 223], "register_forward_pre_hook": [32, 67, 70, 72, 73, 74], "invok": [32, 67, 70, 72, 73, 74], "And": [32, 67, 70, 72, 73, 74], "forward_pr": [32, 67, 70, 72, 73, 74], "register_module_forward_pre_hook": [32, 67, 70, 72, 73, 74], "grad_input": [32, 67, 70, 72, 73, 74], "grad_output": [32, 67, 70, 72, 73, 74], "subsequ": [32, 67, 70, 72, 73, 74, 299], "technic": [32, 67, 70, 72, 73, 74, 297, 299], "caller": [32, 67, 70, 72, 73, 74], "register_module_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "backward_pr": [32, 67, 70, 72, 73, 74], "register_module_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "register_load_state_dict_post_hook": [32, 67, 70, 72, 73, 74], "incompatible_kei": [32, 67, 70, 72, 73, 74], "clear": [32, 67, 70, 72, 73, 74, 264], "register_modul": [32, 67, 70, 72, 73, 74, 294], "alia": [32, 67, 70, 72, 73, 74], "register_paramet": [32, 67, 70, 72, 73, 74], "register_state_dict_pre_hook": [32, 67, 70, 72, 73, 74], "keep_var": [32, 67, 70, 72, 73, 74, 128], "made": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 193, 211, 221, 234, 296, 297, 299, 302, 304], "requires_grad_": [32, 67, 70, 72, 73, 74], "autograd": [32, 67, 70, 72, 73, 74, 128], "freez": [32, 67, 70, 72, 73, 74], "finetun": [32, 67, 70, 72, 73, 74], "gan": [32, 67, 70, 72, 73, 74], "share_memori": [32, 67, 68, 70, 72, 73, 74, 296], "share_memory_": [32, 67, 70, 72, 73, 74, 307], "destin": [32, 34, 36, 39, 67, 70, 72, 73, 74, 98, 128, 130, 142], "averag": [32, 67, 70, 72, 73, 74, 128, 133, 193, 215, 216, 270, 296, 298], "shallow": [32, 67, 70, 72, 73, 74, 128, 299], "pleas": [32, 67, 70, 72, 73, 74, 128, 291], "detach": [32, 67, 70, 72, 73, 74, 128, 221, 236, 237, 238, 239, 296], "non_block": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "memory_format": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "channels_last": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "complex": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 296, 297], "integr": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 149, 157, 161, 197, 292, 302, 303, 304], "unchang": [32, 67, 70, 72, 73, 74, 96, 99, 112, 124, 127, 128, 130, 132, 197, 269, 296, 305], "tri": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "pin": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "4d": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "ignore_w": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "1913": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "3420": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "5113": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "2325": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "torch_doctest_cuda1": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "gpu1": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "1914": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "5112": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 303], "2324": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "float16": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "cdoubl": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "3741": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 297], "j": [32, 35, 58, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 294], "2382": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "5593": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197, 303], "4443": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "complex128": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "6122": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "1150": [32, 67, 70, 72, 73, 74, 96, 112, 124, 127, 128, 130, 132, 197], "to_empti": [32, 67, 70, 72, 73, 74], "dst_type": [32, 67, 70, 72, 73, 74], "xpu": [32, 67, 70, 72, 73, 74], "set_to_non": [32, 67, 70, 72, 73, 74], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 305], "discretebox": [33, 67, 70, 72, 73, 74, 298, 302, 308], "chosen_data": [34, 54], "rewarddata": [34, 54, 290], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 88], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 303], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 97, 100, 112, 128, 132, 264, 304], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 288], "determin": [34, 35, 36, 39, 41, 52, 58, 112, 132, 193, 297, 302], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 151, 177], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 299], "memmap": [34, 36, 39, 55, 73, 74, 133, 269, 305], "unbind": [34, 36, 39, 157], "alpha": [35, 41, 58, 144, 208, 213, 222, 224, 226, 296, 305, 307], "ep": [35, 41, 58, 133, 193, 209, 227, 270, 296, 297, 299], "1e": [35, 41, 58, 133, 151, 154, 166, 177, 296, 297, 298, 302], "08": [35, 41, 58, 297, 302, 303], "collate_fn": [35, 38, 41, 42, 52, 53, 305, 307], "prefetch": [35, 38, 41, 42, 52, 53, 54, 296, 297, 299, 305], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 93, 112, 130, 145, 146, 147, 148, 149, 150, 153, 154, 155, 161, 165, 167, 168, 170, 171, 173, 174, 180, 190, 193, 207, 208, 212, 214, 215, 216, 217, 218, 219, 222, 223, 226, 227, 236, 241, 249, 304], "ab": [35, 58, 112, 130, 133, 145, 150, 154, 155, 161, 165, 167, 168, 170, 171, 173, 174, 180, 207, 208, 212, 215, 216, 217, 218, 219, 222, 223, 226, 304], "1511": [35, 58, 155], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 177, 194, 198, 290, 293], "null": [35, 41, 58, 92], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 305], "merg": [35, 38, 41, 42, 52, 53, 303], "mini": [35, 38, 41, 42, 52, 53, 302], "decid": [35, 38, 41, 42, 307], "rb": [35, 38, 41, 42, 52, 53, 93, 116, 297, 299, 302, 304, 305, 307], "meth": [35, 38, 41, 42, 221], "incompat": [35, 38, 41, 42, 305], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 305], "tensordictprioritizedreplaybuff": [35, 290, 307], "simplifi": [35, 303, 305], "manual_se": [35, 38, 41, 42, 99, 109, 116, 162, 169, 183, 190, 191, 193, 201, 207, 208, 210, 219, 226, 302, 303, 307, 308], "_weight": [35, 41, 305, 307], "arrai": [35, 40, 296, 305], "update_prior": [35, 58, 269, 294, 297, 305, 307], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 129], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 123, 296, 305], "nonetyp": [36, 39], "logit": [36, 40, 162, 169, 190, 213, 292], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 67, 70, 72, 73, 74, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204], "text": [37, 40, 43, 193, 298], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 145, 150, 170], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 305], "inde": [37, 99, 298, 303], "might": [37, 123, 259, 291, 296, 308], "writer": [38, 42, 52, 53, 60, 64, 290, 298], "randomsampl": [38, 42, 52, 53, 290, 296], "roundrobinwrit": [38, 42, 52, 53, 290], "Not": 38, "ref_model": 40, "reward_model": [40, 203], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 107], "kl": [40, 107, 216, 220], "penalti": [40, 220], "strai": 40, "far": [40, 156, 178, 179, 303, 308], "calcul": [40, 116], "gpt2rewardmodel": 40, "get_dataload": [40, 290], "promptdata": [40, 290], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 303, 305], "reward_kl": [40, 107], "reward_raw": 40, "sample_log_prob": [40, 184, 185, 186, 194, 198, 200, 223, 281, 298, 302, 307], "create_rollout_td": 40, "log_prob": [40, 151, 162, 169, 179, 198], "log_ratio": 40, "kl_coef": 40, "plu": [40, 303], "replic": 40, "rindex": 40, "multipli": [40, 208, 209, 213, 220, 222, 223, 224, 226, 270, 296], "term": [40, 107, 164, 165, 206, 207, 213, 274, 297, 298, 302], "subtract": [40, 123], "ve": [40, 296, 299], "eo": 40, "limit": [40, 71, 93, 107, 296, 297, 299, 302, 303], "generation_config": 40, "generationconfig": 40, "ti": [40, 245, 246, 247, 248, 250, 251, 252, 253, 297], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 208, 211, 213, 214, 219, 221, 224, 226, 228, 234, 305, 307], "td_error": [41, 42, 208, 210, 211, 213, 214, 219, 221, 224, 226, 228, 234, 296, 305, 307], "reduct": [41, 58], "prioritizedreplaybuff": [41, 290, 307], "update_tensordict_prior": [41, 296, 305, 307], "prioritizedsampl": [41, 42, 211, 214, 234, 290, 296, 305], "min": [41, 58, 177, 178, 179, 188, 193, 208, 209, 213, 222, 224, 226, 297, 298, 302], "median": [41, 58, 194, 198], "len": [41, 55, 56, 65, 144, 159, 163, 296, 303, 304, 305, 307], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 87, 139], "huggingfac": [43, 192], "co": [43, 303], "doc": [43, 297, 302], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 290], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 72, 73, 74, 296, 297], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 70, 130, 142, 254, 305, 308], "condit": [45, 123, 189, 190, 195, 196, 206, 296, 303, 305], "elementwis": 45, "os": [45, 297], "cpu_count": 45, "vocabulari": 45, "loader": [45, 298], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 93, 94, 95, 97, 99, 100, 101, 103, 106, 109, 113, 114, 116, 120, 122, 125, 130, 133, 142, 187, 188, 191, 193, 198, 211, 234], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 297], "batch_dimens": 45, "filder": 45, "tempfil": [45, 284, 296, 297], "randint": [45, 126, 305], "20": [45, 67, 70, 72, 73, 74, 188, 263, 296, 297, 298, 299, 302, 303, 307, 308], "temporarydirectori": [45, 296, 297], "tmpdir": [45, 296, 297], "data_memmap": 45, "exclus": [48, 49, 103, 157, 162, 189, 190, 195, 196, 227, 228, 236, 237, 238, 239, 240, 288, 292], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_timeout_as_don": 52, "env_kwarg": [52, 286, 287, 296], "metadata": [52, 298, 302, 308], "reconstruct": [52, 216, 296, 308], "timeout": 52, "recov": [52, 187, 191, 193, 199, 219, 301], "regard": [52, 153, 190, 207, 214, 223, 296, 298, 303], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 72, 181, 286, 287, 293, 298, 299, 305, 307], "left": [52, 96, 98, 107, 112, 114, 125, 127, 130, 132, 297, 298], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 116, 119, 123, 143, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 297, 302], "absent": 52, "traj_split": 52, "observationnorm": [52, 133, 288, 296, 297, 298, 299, 307], "maze2d": 52, "umaz": 52, "loc": [52, 107, 109, 118, 156, 166, 178, 179, 184, 185, 186, 194, 198, 200, 207, 208, 219, 223, 224, 225, 226, 276, 281, 288, 292, 296, 297, 298, 299, 302, 307], "128": [52, 147, 150, 297, 299, 303, 304, 305], "public": [53, 112, 132], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 88], "adult_onehot": [53, 88], "mushroom_num": [53, 88], "mushroom_onehot": [53, 88], "covertyp": [53, 88], "shuttl": [53, 88], "magic": [53, 88], "infinit": [54, 305], "three": [54, 292, 294, 298, 302, 303, 305], "block": [54, 292, 299], "pairwisedataset": [54, 290], "256": [54, 150, 296, 297, 298, 302, 303], "scratch_dir": [55, 296, 305], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 188, 305, 308], "bar": [55, 56, 65, 188, 265, 266, 268, 272, 294, 297], "attach": [55, 56, 57, 63, 65, 297], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 162, 296], "auto": [56, 65, 193, 208, 213, 222, 224, 226, 228, 293, 302], "zero_": [56, 65, 139], "max_capac": [58, 296, 305], "uniformli": [59, 221, 308], "roundrobin": [60, 64], "piec": [60, 64, 66, 296, 297, 298, 302, 303, 305], "consum": [62, 297, 298, 302, 305], "incomplet": 62, "unlik": [62, 214, 223, 297, 307], "fresh": 62, "caution": [62, 135, 308], "shuffl": [62, 302], "haven": [62, 304], "remain": [62, 98, 99, 107, 123, 165], "draw": 62, "__len__": 63, "_inplace_upd": [67, 72, 73, 74, 75, 76, 88, 89, 90, 128], "_batch_lock": [67, 72, 73, 74, 75, 76, 88, 89, 90, 128], "continuousbox": [67, 70, 72, 73, 74, 139, 298, 302, 303, 307, 308], "unboundedcontinuoustensorspec": [67, 70, 71, 72, 73, 74, 97, 100, 124, 139, 143, 161, 183, 197, 200, 202, 225, 290, 298, 299, 302, 303, 308], "another_act": [67, 70, 72, 73, 74], "mutabl": [67, 70, 72, 73, 74], "batch_lock": [67, 69, 70, 72, 73, 74, 124, 128, 303], "immut": [67, 70, 72, 73, 74, 114, 128], "another_don": [67, 70, 72, 73, 74], "fake_tensordict": [67, 70, 72, 73, 74, 297], "fake": [67, 70, 72, 73, 74, 296, 297], "overridden": [67, 70, 72, 73, 74, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 299], "afterward": [67, 70, 72, 73, 74, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204, 308], "silent": [67, 70, 72, 73, 74, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 166, 167, 168, 170, 173, 174, 176, 181, 187, 188, 190, 191, 193, 196, 201, 204], "attibut": [67, 70, 72, 73, 74], "speak": [67, 70, 72, 73, 74, 296], "rand_act": [67, 70, 72, 73, 74], "_step": [67, 70, 72, 73, 74, 97, 100, 103, 114, 123], "privat": [67, 70, 72, 73, 74, 303, 308], "another_reward": [67, 70, 72, 73, 74], "callback": [67, 70, 72, 73, 74, 302], "auto_reset": [67, 70, 72, 73, 74, 303], "auto_cast_to_devic": [67, 70, 72, 73, 74, 302], "break_when_any_don": [67, 70, 72, 73, 74, 302], "return_contigu": [67, 70, 72, 73, 74, 135, 301], "soon": [67, 70, 72, 73, 74], "ndim": [67, 70, 72, 73, 74], "concomitt": [67, 70, 72, 73, 74], "workspac": [67, 70, 72, 73, 74], "prevail": [67, 70, 72, 73, 74], "creator": [68, 277, 278, 286, 287, 288], "substitut": [68, 133], "vecnorm": [68, 288], "env_creat": [68, 296], "test_env1": 68, "_td": 68, "observation_count": [68, 308], "test_env2": 68, "sleep": [68, 308], "ps": 68, "p1": 68, "p2": 68, "join": [68, 290, 297, 298], "9934": 68, "env_str": 69, "info_dict_read": 70, "set_info_dict_read": 70, "put": [70, 133, 288, 292, 297, 298, 299, 303], "read_act": 70, "read_don": 70, "reader": [70, 297], "frame_skip": [70, 77, 78, 79, 81, 82, 86, 104, 265, 268, 275, 294, 296, 297, 298, 307], "broken": [70, 135], "read_ob": 70, "dictat": [70, 194, 198, 223, 296, 303], "inner": [70, 99, 294, 297, 298, 302, 308], "read_reward": 70, "baseinfodictread": 70, "info_dict": 70, "hoc": 70, "dict_read": 70, "default_info_dict_read": 70, "my_info_kei": 70, "some_env": 70, "environn": 71, "safeti": 71, "constraint": [71, 298, 302], "behav": [71, 85, 169, 219, 304], "mymbenv": [71, 143, 161], "world_model": [71, 143, 161, 216], "super": [71, 97, 100, 143, 153, 161, 202, 208, 210, 213, 219, 224, 226, 228, 296, 303, 307], "hidden_observ": [71, 143, 161], "mlp": [71, 143, 144, 146, 147, 148, 149, 157, 158, 161, 163, 184, 189, 211, 281, 292, 297, 301, 304, 307], "worldmodelwrapp": [71, 143, 161], "activation_class": [71, 143, 144, 146, 147, 148, 149, 154, 155, 159, 161, 163, 297, 302, 307], "relu": [71, 143, 150, 161, 166, 206], "activate_last_lay": [71, 143, 149, 159, 161], "depth": [71, 143, 144, 146, 147, 148, 149, 154, 155, 159, 161, 163, 167, 168, 189, 292, 297, 301, 302], "run_type_check": 71, "equal": [72, 73, 74, 108, 109, 144, 152, 157, 159, 163, 227, 231, 263, 286, 287, 296, 298, 304], "readthedoc": 72, "en": 72, "python_interfac": 72, "thread": 72, "task_id": 72, "my_env_fun": [73, 74], "custom_attribute_list": [73, 74], "custom_attribut": [73, 74], "custom_method_list": [73, 74], "custom_method": [73, 74], "deploi": [73, 74], "slight": [73, 74, 297], "overhead": [73, 74], "share_individual_td": [73, 74], "shared_memori": [73, 74], "policy_proof": [73, 74], "ll": [73, 74, 296, 297, 298, 299, 302, 308], "hidden": [73, 74, 154, 157, 158, 167, 168, 173, 174, 184, 185, 186, 188, 197, 200, 209, 220, 223, 292, 299, 301, 307], "update_kwarg": [73, 74], "googl": [75, 76, 298, 299, 302], "ant": [75, 76, 304], "get_environ": 76, "87": [76, 297, 303, 304], "acrobot": [76, 308], "fetch": [76, 107, 304, 305, 308], "dm_control": [77, 78, 296, 301, 308], "task_nam": 77, "cheetah": [77, 78, 296, 308], "mo": [81, 82], "minecart": [81, 82], "mo_gym": 82, "sumbodul": 83, "wish": [84, 305], "placehold": [85, 128], "secur": 85, "snake": [86, 87], "6x6": [86, 87], "td1": [87, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 296], "12x12": 87, "tsp50": 87, "tsp100": 87, "106": [88, 299, 303], "scenario": [89, 90, 296, 302, 303], "flock": [89, 90], "continuous_act": [89, 90, 302], "cohesion_rew": 89, "collision_rew": 89, "separation_rew": 89, "velocity_rew": 89, "18": [89, 90, 163, 296, 297, 298, 299, 302, 303, 308], "agent_collision_rew": 90, "agent_distance_rew": 90, "model_bas": [91, 143, 161], "transform_reward_spec": [92, 96, 97, 98, 107, 114, 117, 118, 127, 129], "as_invers": 93, "account": [93, 162, 292, 297, 299, 305], "movement": 93, "veloc": [93, 302, 303, 308], "propos": [93, 160, 218, 227, 281, 292, 299, 305], "pdf": [93, 145, 146, 147, 148, 149, 153, 170, 190, 193, 214, 224, 227, 236, 241, 249, 281], "1312": [93, 297], "5602": 93, "uesd": 93, "unsqueezetransform": [93, 303, 305], "consumpt": 93, "followin": 93, "pictur": 93, "cartpol": [93, 297, 299, 305, 308], "pixels_trsf": [93, 305], "grayscal": [93, 297, 299, 305, 308], "unsqueez": [93, 94, 126, 129, 158, 296, 299, 302, 303], "tensordictreplaybuff": [93, 269, 284, 290, 296, 297, 299, 305], "data_exclud": [93, 305], "_buffer": [93, 125], "transform_observation_spec": [93, 94, 95, 96, 97, 98, 101, 103, 105, 106, 107, 109, 114, 115, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 303], "del_kei": [94, 130, 301, 303], "unsqueeze_if_oor": 94, "observation_posit": 94, "observation_veloc": 94, "delet": 94, "key1": [94, 263, 271], "key2": [94, 263, 271], "crop": [95, 113, 255], "center": [95, 255], "width": [95, 115], "height": [95, 115], "squar": [95, 156, 178, 179, 255], "rewardsc": [96, 128, 296, 297, 299], "rewardclip": 96, "transformed_env": [96, 127, 128], "tranform": [96, 101, 106, 120, 122, 123, 127, 131], "transform_env_devic": [96, 98, 127], "transform_input_spec": [96, 97, 98, 99, 109, 114, 119, 122, 127, 129], "transform_output_spec": [96, 98, 107, 114, 127], "untouch": [96, 98, 107, 114, 127], "transformfull_done_spec": [96, 98, 107, 114, 127], "dtype_in": 97, "dtype_out": 97, "scan": [97, 100, 199, 200], "expos": [97, 100, 199, 297], "not_transform": [97, 100], "rule": [97, 100, 198, 292, 298], "constructedw": [97, 100], "myenv": [97, 100], "_set_se": [97, 100, 303], "orig_devic": 98, "unspecifi": 98, "transform_done_spec": [98, 127], "num_actions_effect": 99, "max_act": 99, "include_forward": 99, "dimension": [99, 157, 236, 241, 249, 302], "num_act": [99, 213], "action_out": 99, "_call": [99, 103, 303], "excluded_kei": 101, "finit": [102, 305], "first_dim": 103, "last_dim": 103, "allow_positive_dim": [103, 129], "flatten": [103, 269, 299, 302], "th": [103, 129, 303], "permit": [103, 129], "frameskip": 103, "repeatedli": [104, 298, 302], "init_kei": 106, "is_init": [106, 157, 193, 299], "tracker": 106, "probabilistictensordictmodul": [107, 198, 199, 307], "coef": 107, "pi_curr": 107, "pi_0": 107, "constrain": [107, 157, 223], "overfit": 107, "fine": [107, 304], "probabilist": [107, 194, 290, 298, 307], "get_dist": [107, 198, 199], "mod": [107, 157, 201, 299], "normalparamextractor": [107, 292, 298, 302], "probabilisticactor": [107, 184, 185, 186, 188, 207, 208, 212, 213, 219, 222, 223, 224, 225, 226, 228, 292, 296, 298, 302], "tanhnorm": [107, 184, 185, 186, 194, 200, 207, 208, 219, 223, 224, 225, 226, 228, 290, 298, 302, 307], "n_ob": [107, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228], "n_act": [107, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228], "distribution_class": [107, 184, 185, 186, 188, 194, 198, 200, 207, 208, 213, 219, 223, 224, 225, 226, 292, 296, 298, 302, 307], "return_log_prob": [107, 184, 185, 186, 194, 198, 200, 225, 292, 298, 302, 307], "apply_": 107, "copy_": [107, 296], "formulat": 107, "diverg": [107, 157, 194, 198, 216, 220], "noop": [108, 307], "30": [108, 173, 174, 297, 298, 302, 303, 305], "trial": 108, "op": [108, 187, 191, 274], "randomli": [108, 109, 124, 194, 198, 302, 303, 305], "noop_max": 108, "out_keys_inv": [109, 110, 114, 127, 303], "standard_norm": [109, 118, 296, 297, 299], "affin": [109, 118], "layer": [109, 133, 144, 146, 147, 154, 157, 159, 163, 164, 165, 167, 168, 175, 176, 182, 192, 201, 292, 297, 298, 299, 304], "normal": [109, 133, 144, 156, 159, 162, 166, 178, 179, 187, 194, 198, 209, 220, 223, 268, 270, 288, 292, 294, 299, 302, 308], "set_default_tensor_typ": 109, "doubletensor": 109, "isclos": 109, "next_ob": [109, 236, 237, 238, 239, 307], "rubric": [109, 200], "init_stat": [109, 296, 297, 298, 299], "3752e": 109, "01": [109, 193, 204, 209, 220, 223, 296, 297, 299, 302, 303, 304, 306], "5087e": 109, "03": [109, 296, 297, 302, 303, 304, 306], "9294e": 109, "9636": 109, "5608": 109, "6408": 109, "num_it": [109, 297, 298], "reduce_dim": [109, 296, 297, 298, 299], "cat_dim": [109, 296, 297, 298, 299], "keep_dim": [109, 297, 299], "constant": [109, 123, 294, 296, 298, 299, 308], "statist": [109, 133, 225, 288, 296, 297, 298, 308], "approach": [109, 296, 298, 308], "gaussian": [109, 124, 143, 161, 164, 165, 170, 187, 298], "empir": [109, 143, 161, 194, 198, 296, 298, 302], "3d": 109, "third": [109, 190, 302], "r3m": [112, 304], "resnet": [112, 130, 132], "visual": [112, 130, 132, 298, 303], "embed": [112, 130, 131, 132, 171, 183, 184, 185, 186, 197, 202, 304], "ego4d": [112, 130, 132], "univers": [112, 130, 132], "suraj": [112, 130], "nair": [112, 130], "aravind": [112, 130], "rajeswaran": [112, 130], "vikash": [112, 130, 132], "kumar": [112, 130, 132], "chelsea": [112, 130], "finn": [112, 130], "abhinav": [112, 130], "gupta": [112, 130], "2203": [112, 130, 161, 304], "12601": [112, 130, 304], "_init": [112, 130, 296], "snippet": [112, 130, 296], "resnet50": [112, 132, 304], "model_nam": [112, 130, 132, 258], "resnet34": 112, "resnet18": 112, "r3m_vec": [112, 304], "feed": [112, 132, 221, 292, 296, 302, 305], "244": [112, 132, 303], "stack_imag": [112, 132], "tread": [112, 132], "separet": [112, 132], "hub": [112, 132, 304], "resnet50_weight": [112, 132], "imagenet1k_v1": [112, 132], "download_path": [112, 132], "tensor_pixels_kei": [112, 132], "dest": [112, 130, 132, 197], "sub_seq_len": 113, "sample_dim": [113, 296], "mask_kei": 113, "primarili": 113, "hesit": 113, "request": 113, "robust": 113, "mix": [113, 171, 180, 234, 296, 302], "NOT": 113, "improp": 113, "create_copi": 114, "renam": [114, 116, 142, 296], "stuff": 114, "braxenv": [114, 290], "newnam": 114, "interpol": [115, 297, 299], "bilinear": [115, 299], "r2g": 116, "99": [116, 133, 161, 217, 230, 235, 242, 284, 296, 297, 298, 303, 307], "reward_to_go": 116, "bernoulli_": 116, "9010": 116, "9404": [116, 242], "9701": [116, 242], "9900": [116, 242], "0000": [116, 191, 201, 242, 298, 299, 303, 307], "crash": 116, "clamp_min": 117, "clamp_max": 117, "clip_min": 117, "scalar": [117, 147, 149, 164, 165, 187, 191, 193, 204, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 234, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 292, 297, 303], "clip_max": 117, "episode_": 119, "reward1": 119, "reward2": 119, "ho": 119, "excludetransform": [120, 305], "squeeze_dim": 121, "step_count_kei": 122, "recognis": 122, "target_return": 123, "guid": [123, 291, 296, 302], "accordingli": [123, 195, 299], "conjunct": [123, 297], "hindsight": 123, "relabel": 123, "reward2gotransform": 123, "primer": [124, 299], "default_valu": [124, 299], "unit": [124, 143, 154, 167, 168, 173, 174, 298], "transfomedenv": 124, "mykei": 124, "__unless": 124, "exists__": 124, "dtype_or_devic": 124, "pool": 125, "from_int": 126, "255": [126, 303, 305], "ri": 126, "principl": 127, "cattransform": 127, "notabl": 127, "cache_spec": 128, "anymor": [128, 197], "set_missing_toler": 128, "keyerror": 128, "unsqueeze_dim": [129, 303], "danger": 129, "vc1": 130, "vc1_vec": 130, "small": [130, 296, 298, 302, 308], "untrain": 130, "make_noload_model": 130, "naiv": 130, "vip": [131, 132, 304], "toward": 132, "implicit": [132, 219, 305], "jason": 132, "ma": 132, "shagun": 132, "sodhani": 132, "dinesh": 132, "jayaraman": 132, "osbert": 132, "bastani": 132, "ami": 132, "zhang": 132, "vip_vec": 132, "shared_td": 133, "decai": [133, 187, 191, 227, 270, 296, 297, 299, 308], "9999": [133, 303], "0001": [133, 154, 166, 298, 303], "fly": [133, 220, 293, 298, 303, 305, 308], "to_observation_norm": 133, "underflow": [133, 270], "build_td_for_shared_vecnorm": 133, "memmori": 133, "memmap_": 133, "queue": [133, 305], "td_share": 133, "v": [133, 184, 219, 226, 292, 296, 297], "state_dim": [134, 145, 150, 170, 173, 174, 188], "action_dim": [134, 145, 146, 148, 150, 170, 188, 296, 301], "gsde": [134, 224, 288], "func": 134, "gsdemodul": 134, "check_dtyp": 135, "short": [135, 297, 298, 302], "discrep": [135, 207, 209, 210, 211, 220, 223, 225, 234], "imposs": 135, "probabilistictdmodul": [140, 141, 159, 194, 198, 235, 268], "next_tensordict": 142, "keep_oth": [142, 303], "exclude_reward": 142, "exclude_don": 142, "exclude_act": 142, "next_": 142, "funtion": [142, 303], "cross": 143, "entropi": [143, 207, 208, 209, 213, 219, 220, 222, 223, 224, 226, 228, 302], "botev": 143, "et": 143, "al": [143, 308], "2013": 143, "cem": 143, "plan": [143, 160, 161], "varianc": [143, 156, 166, 178, 179, 293, 296, 298, 302], "rank": 143, "k": 143, "repeat": [143, 298, 302, 303], "maximis": [143, 146, 148, 161, 292, 296, 297, 298, 302, 303], "horizon": [143, 161, 298], "modelbasedenv": [143, 161], "planning_horizon": [143, 161], "optim_step": [143, 161, 297], "mpc": [143, 160, 161], "num_candid": [143, 161], "candid": [143, 161], "top_k": [143, 161], "modelbasedenvbas": [143, 160, 161, 290], "safemodul": [143, 160, 184, 186, 198, 207, 208, 213, 219, 223, 224, 225, 226, 228, 277, 278, 284, 290, 307], "next_hidden_observ": 143, "num_cel": [144, 146, 147, 148, 149, 154, 155, 157, 159, 163, 184, 297, 298, 299, 302, 307], "elu": [144, 146, 147, 148, 149, 154, 155, 297, 307], "activation_kwarg": [144, 159], "norm_class": [144, 146, 147, 159], "norm_kwarg": [144, 159], "bias_last_lay": [144, 146, 147, 148, 149, 155, 159], "aggregator_class": [144, 146, 147, 297, 299, 307], "squashdim": [144, 146, 307], "aggregator_kwarg": [144, 146, 147, 297, 299], "squeeze_output": [144, 146, 147, 297, 299], "convolut": [144, 146, 147, 175], "neural": [144, 175, 197, 292, 297, 298, 299, 302, 303, 308], "produc": [144, 159, 163, 169, 184, 186, 188, 255, 298, 299, 305, 308], "cell": [144, 159, 163, 298], "kernel": [144, 155, 158], "device_typ": [144, 145, 146, 147, 148, 149, 155, 159, 164, 165, 170], "cnet": 144, "34": [144, 159, 296, 297, 303], "35": [144, 159, 296, 297, 299, 302, 303, 304], "rectangular": 144, "transformer_config": [145, 170, 188], "decisiontransform": [145, 170], "dtconfig": [145, 150, 170], "2202": [145, 150, 170, 222], "05607": [145, 150, 170, 222], "return_to_go": [145, 150, 170, 188], "conv_net_kwarg": [146, 147], "mlp_net_kwarg": [146, 147, 148], "use_avg_pool": [146, 147], "WITH": [146, 147, 148, 149, 193, 227], "1509": [146, 147, 148, 149, 161, 193, 218, 227, 303], "02971": [146, 147, 148, 149, 193, 227], "convnet": [146, 299, 307], "ndims_in": 146, "avgpool": [146, 147], "adaptiveavgpool2d": [147, 297, 299], "400": [148, 149, 302, 303, 305], "mlp_net_kwargs_net1": 149, "mlp_net_kwargs_net2": 149, "decion": 150, "desdescrib": 150, "n_embd": 150, "n_layer": 150, "n_head": 150, "n_inner": 150, "n_posit": 150, "resid_pdrop": 150, "attn_pdrop": 150, "gpt2config": 150, "atol": [151, 177], "06": [151, 177, 296, 297, 303], "rtol": [151, 177], "batch_shap": [151, 177], "event_shap": [151, 177], "absolut": [151, 177, 296], "densiti": [151, 162, 169, 179], "mass": [151, 162, 169, 179, 303], "rsampl": [151, 169, 198], "sample_shap": [151, 162, 169], "dqnet": 152, "atom": 152, "softmax": [152, 189, 190], "action_spac": [153, 172, 189, 190, 195, 196, 207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 299], "var_num": [153, 172, 189, 190, 196], "action_value_kei": [153, 172, 190, 195, 196, 221, 234], "perspect": [153, 190, 214, 298], "1707": [153, 190, 214, 223], "06887": [153, 190, 214], "mult": [153, 163, 172, 189, 190, 195, 196], "functional_modul": [153, 172, 195, 197, 200, 292], "make_funct": [153, 172, 194, 195, 197, 200, 202, 221, 292, 307], "tensordict_modul": [153, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 210, 213, 219, 223, 224, 225, 226, 228, 292], "nbin": [153, 189, 292], "customdistributionalqv": 153, "log_softmax": [153, 189], "one_hot": [153, 172], "qvalue_actor": [153, 172, 189, 195, 292], "std_bia": 154, "std_min_val": 154, "belief": [154, 167, 173, 174], "1912": [154, 215, 216, 217], "01603": [154, 215, 216, 217], "softplu": [154, 166, 204, 205, 206], "out_features_valu": 155, "cnn_kwarg": [155, 297], "mlp_kwarg": [155, 158, 297], "duel": 155, "cnn": [155, 297, 307], "06581": 155, "512": [155, 297, 303, 305], "upscal": [156, 178, 179], "tanh_loc": [156, 178, 179], "event_dim": [156, 177, 178], "ultim": [156, 178, 179], "poor": [156, 178, 179], "explos": [156, 178, 179], "switch": [156, 179], "sigma": [156, 170, 178, 179, 187, 193, 298], "formula": [156, 178, 179, 207, 209, 220, 223, 293, 298], "embedd": [157, 158], "lstmcell": 157, "correspont": 157, "input_s": [157, 158, 299], "hidden_s": [157, 158, 299], "num_lay": [157, 167, 168], "b_ih": 157, "b_hh": 157, "introduc": [157, 193, 296], "proj_siz": 157, "recurrent_state_h": [157, 299], "recurrent_state_c": [157, 299], "triplet": [157, 195, 196], "custom_kei": 157, "temporal_mod": 157, "set_temporal_mod": 157, "tensordictsequenti": [157, 189, 199, 292, 296, 299, 301, 304, 307], "seq": [157, 299, 301], "lstm_modul": 157, "rs_h": 157, "rs_c": 157, "set_recurrent_mod": [157, 299], "batch_first": [157, 299], "hidden0": 157, "hidden1": 157, "policy_infer": 157, "policy_train": 157, "traj_td": 157, "td_inf": 157, "assert_clos": 157, "lstm_kwarg": 158, "next_observ": [158, 207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 301], "time_step": 158, "2d": [158, 302], "hidden0_in": 158, "hidden1_in": 158, "hidden0_out": 158, "hidden1_out": 158, "single_bias_last_lay": 159, "layer_class": 159, "layer_kwarg": 159, "perceptron": 159, "seamless": 159, "lazylinear": [159, 292, 298, 303, 304, 307], "42": [159, 207, 208, 210, 219, 226, 296, 297, 299, 302, 303, 306, 308], "noisylinear": [159, 164, 290, 297], "noisylazylinear": [159, 290], "At": [160, 297, 298, 299, 301, 303, 304], "mpcplanner": 160, "tensordict_out": [160, 308], "mppi": 161, "covari": 161, "william": [161, 225], "aldrich": 161, "theodor": 161, "01149": 161, "hansen": 161, "wang": 161, "su": 161, "04955": 161, "valueoper": [161, 184, 185, 186, 207, 208, 209, 210, 213, 219, 220, 223, 224, 225, 226, 228, 284, 292, 296, 298], "tdlambdaestim": [161, 290, 296], "value_net": [161, 211, 225, 236, 237, 238, 239, 298], "adv": 161, "lmbda": [161, 230, 236, 239, 241, 247, 248, 249, 252, 253, 293, 296, 298, 302], "95": [161, 230, 297, 298, 299, 303], "value_network": [161, 210, 211, 214, 219, 226, 236, 237, 238, 239, 293, 296, 298], "temperatur": [161, 208, 219], "neg_inf": 162, "inf": 162, "padding_valu": 162, "www": 162, "api_doc": 162, "tf_agent": 162, "event": [162, 169, 245, 246, 247, 248, 250, 251, 252, 253, 305], "unnorm": [162, 169], "sparse_mask": 162, "dens": 162, "1203": 162, "0928": 162, "0831": 162, "ones_lik": 162, "1972": 162, "n_agent_input": [163, 302], "n_agent_output": [163, 302], "centralis": [163, 302], "share_param": [163, 302], "multiag": [163, 171, 180, 234], "homogen": [163, 302], "toech": 163, "agent_network": 163, "modulelist": [163, 281, 307], "centalis": 163, "shown": [163, 292, 301, 302, 305], "std_init": [164, 165], "matrix": [164, 165], "initialize_paramet": 164, "isol": 164, "1706": [165, 180], "10295v3": 165, "induc": 165, "aid": 165, "scale_map": 166, "biased_softplus_1": 166, "scale_lb": [166, 173, 174], "exp": [166, 206], "module_norm": 166, "channel": [167, 168, 297], "decod": 167, "1803": [167, 168, 171], "10122": [167, 168], "rnn_hidden": 167, "latent": 168, "excacli": 169, "inres": 170, "mu": [170, 193, 298], "state_shap": [171, 234], "mixing_embed_dim": [171, 234], "qmix": [171, 302], "mixer": [171, 180, 234], "monoton": 171, "hyper": 171, "11485": 171, "qmixerloss": [171, 180], "qmix_vdn": [171, 180], "eventu": [171, 299, 303], "vdn": [171, 180], "greedi": [172, 190, 191, 196, 297, 299], "hidden_dim": [173, 174], "posterior": [173, 216], "rssm": [173, 174, 216], "1811": [173, 174], "04551": [173, 174], "obs_embed": 173, "rnn_hidden_dim": 174, "dream": 174, "tanhtransform": 178, "decomposit": 180, "05296": 180, "vmap": [181, 197, 200, 307], "hide": [181, 298, 302], "satisfi": [181, 292], "tensordictmodulebas": [181, 195, 299], "vmap_dim": 181, "lam": 181, "sample_in": 181, "sample_in_td": 181, "vm": 181, "translat": [183, 194], "character": [183, 189, 194, 195, 197, 305], "overflow": [183, 189, 190, 194, 195, 196, 197, 198], "td_modul": [183, 184, 185, 186, 194, 197, 198, 200, 202, 307], "3635": 183, "0340": 183, "1476": 183, "3911": [183, 303], "1664": [183, 297, 303], "5455": 183, "2247": 183, "4583": 183, "2916": 183, "2160": 183, "5337": 183, "5193": 183, "grad_fn": [183, 191, 307], "addmmbackward0": 183, "actorvalueoper": [184, 292], "get_policy_oper": [184, 185, 186, 209, 220, 223, 292], "standalon": [184, 185, 186], "tdmodul": [184, 185, 186, 284], "get_critic_oper": 184, "common_oper": [184, 186], "policy_oper": [184, 185, 186], "value_oper": [184, 185, 186], "normalparamwrapp": [184, 185, 186, 194, 200, 207, 208, 213, 219, 223, 224, 225, 226, 228, 290, 307], "module_hidden": [184, 186], "td_module_hidden": [184, 186], "module_act": [184, 186], "td_module_act": [184, 185, 186], "module_valu": [184, 185, 186], "td_module_valu": [184, 185, 186], "state_action_valu": [184, 202, 208, 226, 235, 281, 284, 292, 296, 307], "td_clone": [184, 185, 186], "tensordictmodulewrapp": [184, 277, 278, 284], "get_policy_head": [184, 185, 186], "safesequenti": [184, 185, 186, 234], "head": [184, 186, 209, 220, 223], "get_value_head": [184, 185, 186], "get_value_oper": [184, 185, 186, 209, 220, 223], "action_modul": 185, "state_valu": [185, 186, 202, 209, 220, 223, 224, 226, 236, 237, 238, 239, 241, 243, 245, 247, 249, 250, 252, 292, 296, 298, 302], "qualiti": [186, 292], "actorcriticoper": [186, 209, 220, 223, 292], "embeddig": 186, "refet": 186, "actorcriticwrapp": [186, 292, 296], "po": [187, 191], "sigma_init": 187, "epsilon": [187, 191, 193, 227, 270, 297, 298, 299], "sigma_end": 187, "annealing_num_step": [187, 191, 193, 296, 297, 299], "captur": [187, 191, 193], "omiss": [187, 191, 193], "warn": [187, 191, 193, 297, 308], "ommit": [187, 191, 193, 305], "inferec": 188, "set_tensor_kei": 188, "dt_inference_wrapp": 188, "baz": 188, "inference_context": 188, "obs_dim": 188, "15": [188, 193, 215, 296, 297, 298, 302, 303, 305], "tanhdelta": [188, 290, 296], "dtactor": 188, "actor_modul": [188, 307], "dist_class": 188, "dist_kwarg": 188, "distribution_kwarg": [188, 194, 198, 298, 302], "inference_actor": 188, "sequence_length": 188, "mask_context": 188, "qvaluemodul": [189, 195, 234, 299], "distributionaldqnnet": 189, "make_log_softmax": 189, "my_action_valu": [190, 196], "chanc": 190, "thid": 190, "eps_init": [191, 193, 297, 299], "eps_end": [191, 193, 297], "explorative_polici": [191, 193], "9055": [191, 303], "9277": 191, "6295": 191, "2532": 191, "addbackward0": 191, "lmheadmodel": 192, "extract": [192, 296, 298], "actor_head": [192, 209, 220, 223], "base_model": 192, "lm_head": 192, "ornstein": 193, "uhlenbeck": 193, "ou": [193, 296], "correl": 193, "sort": 193, "noise_t": 193, "noise_": 193, "theta": [193, 298, 303], "sigma_t": 193, "sqrt": 193, "sigma_": 193, "anneal": 193, "ou_prev_nois": 193, "ou_step": 193, "increas": [193, 302], "x0": 193, "sigma_min": 193, "n_steps_ann": 193, "is_init_kei": 193, "_ou_prev_nois": 193, "_ou_step": 193, "default_interaction_typ": [194, 198], "interaction_typ": [194, 198], "set_interaction_typ": [194, 198], "cache_dist": [194, 198], "n_empirical_estim": [194, 198], "chose": 196, "functionalmodul": 197, "functionalmodulewithbuff": 197, "grucel": 197, "td_fmodul": 197, "td_function": 197, "td_state": 197, "ensembl": [197, 224], "params_repeat": 197, "td_vmap": [197, 200], "random_sampl": [197, 198], "suppli": 198, "fist": 198, "log_prob_kei": [198, 302], "probabilistictensordictsequenti": [199, 207, 209, 220, 223, 225, 277, 278, 307], "partial_toler": [199, 200, 301], "who": [199, 200], "AND": [199, 200], "tensordictsequenci": 200, "tensordictsequ": 200, "safeprobabilisticmodul": [200, 292], "spec1": 200, "net1": 200, "module1": 200, "td_module1": 200, "spec2": 200, "module2": 200, "td_module2": 200, "clamp": [201, 216, 272, 303], "boundari": [201, 298, 302], "resolut": 201, "simplest": [201, 296, 298, 299, 302, 305, 308], "9944": 201, "9991": 201, "3020": 201, "2299": [201, 303], "5418": 201, "2989": 201, "6849": 201, "3169": 201, "2690": 201, "9649": [201, 303], "5686": 201, "8602": 201, "0315": 201, "8455": [201, 303], "6027": 201, "4746": 201, "7843": 201, "7782": 201, "2111": 201, "5115": 201, "4687": 201, "5760": 201, "custommodul": 202, "cat": [202, 208, 210, 219, 224, 226, 228, 307], "imaginari": 203, "imagin": 203, "transition_model": 203, "get_reward_oper": 203, "get_transition_model_oper": 203, "min_val": [204, 206], "bias": [204, 293, 296], "_bia": 204, "invert": [205, 298], "surject": 206, "expln": 206, "biased_softplu": [206, 290], "beggin": 206, "biased_softplus_": 206, "syntax": [206, 296], "met": [206, 303], "1602": 207, "01783v2": 207, "entropy_bonu": [207, 209, 220, 223, 298], "favour": [207, 209, 220, 223], "samples_mc_entropi": [207, 209, 220, 222, 223], "mont": [207, 209, 220, 223, 296], "carlo": [207, 209, 220, 223, 296], "entropy_coef": [207, 209, 220, 223, 298, 302], "critic_coef": [207, 209, 220, 223, 298], "loss_critic_typ": [207, 209, 220, 223, 225, 298], "l1": [207, 209, 210, 211, 213, 220, 223, 224, 225, 228, 231, 234, 292, 296], "l2": [207, 209, 210, 211, 212, 213, 216, 217, 220, 223, 224, 225, 228, 231, 234, 296], "smooth_l1": [207, 208, 209, 210, 211, 213, 219, 220, 223, 224, 225, 226, 228, 231, 234, 298], "separate_loss": [207, 209, 210, 213, 219, 220, 223, 224, 225, 226, 228], "propag": [207, 209, 210, 213, 219, 220, 223, 224, 225, 226, 228, 236, 237, 238, 239, 298, 302], "advantage_kei": [207, 209, 220, 223, 225, 236, 237, 238, 239], "value_target_kei": [207, 209, 220, 223, 225, 236, 237, 238, 239, 298], "value_target": [207, 209, 220, 223, 225, 236, 237, 238, 239, 298, 302], "loss_crit": [207, 223, 298, 302], "loss_entropi": [207, 223, 298, 302], "loss_object": [207, 223, 298, 302], "recur": [207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228, 236, 237, 238, 239, 240], "next_reward": [207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228], "next_don": [207, 208, 210, 211, 213, 219, 223, 224, 225, 226, 228], "loss_obj": 207, "sacloss": [207, 218, 227, 290], "select_out_kei": [207, 208, 210, 213, 219, 223, 224, 226, 228], "throughout": [207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 298, 308], "essenti": [207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 234, 297, 303, 305], "make_value_estim": [207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 229, 234, 293, 296, 297, 302], "value_typ": [207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 230, 234, 296], "valueestim": [207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 230, 234, 290, 293, 296, 302], "hyperparam": [207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 296, 303], "enum": [207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 230, 234, 296], "default_value_estim": [207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 296], "refin": [207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234], "default_value_kwarg": [207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 234, 290, 296], "dqnloss": [207, 208, 210, 213, 214, 215, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 234, 279, 290, 293, 297, 299], "dqn_loss": [207, 208, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 229, 234], "conserv": 208, "2006": [208, 296, 303], "04779": 208, "actor_network": [208, 210, 212, 213, 219, 222, 224, 226, 228, 296], "qvalue_network": [208, 213, 219, 224, 226, 228], "loss_funct": [208, 210, 211, 212, 213, 219, 224, 226, 228, 231, 234, 296], "alpha_init": [208, 213, 222, 224, 226], "min_alpha": [208, 213, 222, 224, 226], "max_alpha": [208, 213, 222, 224, 226], "fixed_alpha": [208, 213, 222, 224, 226], "target_entropi": [208, 213, 222, 224, 226], "prod": [208, 222, 226], "n_action": [208, 211, 222, 226], "delay_actor": [208, 210, 226, 228], "delay_qvalu": [208, 213, 224, 226, 228], "min_q_weight": 208, "max_q_backup": 208, "backup": 208, "deterministic_backup": 208, "num_random": 208, "with_lagrang": 208, "lagrang": 208, "lagrange_thresh": 208, "threshold": [208, 209, 298], "valueclass": [208, 210, 213, 219, 224, 226, 228], "qvalu": [208, 213, 219, 224, 226, 228, 281], "loss_actor": [208, 210, 213, 219, 224, 225, 226, 228, 267, 296, 307], "loss_alpha": [208, 213, 224, 226], "loss_alpha_prim": 208, "loss_qvalu": [208, 213, 219, 224, 226, 228], "clip_epsilon": [209, 298, 302], "normalize_advantag": [209, 220, 223, 302], "value_kei": [209, 220, 223, 236, 237, 238, 239, 296], "somemodul": [209, 220, 223], "someactor": [209, 220, 223], "value_head": [209, 220, 223], "somevalu": [209, 220, 223], "loss_modul": [209, 218, 220, 221, 223, 227, 272, 283, 284, 293, 294, 296, 297, 298, 302, 305], "ppoloss": [209, 220, 290], "delay_valu": [210, 211, 214, 225, 226, 234, 297, 299], "loss_valu": [210, 219, 225, 226, 296, 298, 302, 307], "pred_valu": [210, 228, 296, 307], "pred_value_max": [210, 296, 307], "target_valu": [210, 224, 228, 235, 293, 296, 307], "target_value_max": [210, 296, 307], "qvalueactor": [211, 234, 292, 297, 299], "mult_one_hot": [211, 213, 234], "binarydiscretetensorspec": [211, 213, 234, 290], "loss_val": [211, 293, 296, 298, 299, 302, 305], "2106": 212, "01345": 212, "ste": 213, "num_qvalue_net": [213, 219, 224, 226, 228], "target_entropy_weight": 213, "onehotcategor": [213, 290], "disctount": 214, "distributionalqvalueactor": [214, 292], "input_tensordict": [214, 296], "actor_model": 215, "value_model": [215, 217], "model_based_env": 215, "dreamerenv": [215, 290], "imagination_horizon": 215, "unrol": [215, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253], "discount_loss": [215, 217], "lambda_kl": 216, "lambda_reco": 216, "lambda_reward": 216, "reco_loss": 216, "reward_loss": 216, "free_nat": 216, "nat": 216, "delayed_clamp": 216, "global_averag": 216, "value_loss": 217, "fake_data": 217, "ddpgloss": [218, 227, 284, 290, 296, 307], "td3loss": [218, 227, 290], "value_network_update_interv": 218, "contrast": [218, 305], "06461": 218, "2110": 219, "06169": 219, "expectil": 219, "tau": [219, 227, 296, 297], "antmaz": 219, "sticht": 219, "loss_value_diff": 219, "diff": 219, "old_polici": 220, "new_polici": 220, "adapt": [220, 296, 303], "old": [220, 308], "distanc": [220, 231, 235, 236, 302], "apart": [220, 302], "dtarg": 220, "samples_mc_kl": 220, "analyt": 220, "decrement": 220, "loss_": [221, 267, 293, 296], "equip": [221, 299], "gh": 221, "_acceptedkei": 221, "dataclass": [221, 281], "_forward_value_estimator_kei": 221, "alter": [221, 292], "value_estim": [221, 236, 237, 238, 239, 240, 293, 296, 302], "myloss": 221, "action2": 221, "convert_to_funct": [221, 296], "expand_dim": 221, "create_target_param": [221, 296], "compare_against": [221, 296], "funs_to_decor": 221, "stuctur": 221, "_param": 221, "expans": 221, "resampl": 221, "_target_param": 221, "valueestimatorbas": [221, 290], "blend": 221, "upcom": [221, 245, 246, 247, 248, 250, 251, 252, 253, 296], "proxim": [223, 298, 302], "optimis": [223, 268, 298, 302], "flavour": [223, 302, 307], "clipppoloss": [223, 290, 298, 302], "klpenppoloss": [223, 290], "regularis": 223, "06347": 223, "gae": [223, 290, 293, 296, 298, 302], "ppo_loss": 223, "tdlambda": [223, 230, 293, 296], "base_lay": 223, "randn_lik": 223, "samplelogprob": 223, "openreview": [224, 281], "ay8zfzm0tdd": [224, 281], "sub_sample_len": 224, "subsampl": [224, 263, 294], "action_log_prob_actor": 224, "state_action_value_actor": [224, 228], "connectionist": 225, "1992": 225, "doi": 225, "1007": 225, "bf00992696": 225, "actor_net": [225, 296, 298], "1801": 226, "01290": 226, "applic": [226, 234, 303], "1812": 226, "05905": 226, "redqloss": [227, 290], "math": 227, "theta_t": [227, 303], "theta_": [227, 303], "polyak": 227, "policy_nois": 228, "noise_clip": 228, "next_state_valu": [228, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 290], "td0": [229, 296], "v2": [231, 245, 246, 247, 248, 250, 251, 252, 253, 281], "strict_shap": 231, "view_a": 231, "qmixer": [234, 290], "local_valu": 234, "visibl": [234, 302], "dafault": 234, "acceptedkei": 234, "global_valu": 234, "premad": 234, "penultim": 234, "local_value_network": 234, "mixer_network": 234, "suggest": [234, 302], "value_modul": [234, 298, 307], "qnet": [234, 296], "next_val_kei": 235, "pred_next_v": 235, "usus": 235, "mse": 235, "q_valu": 235, "n_steps_to_next": 235, "value_next_st": 235, "1506": [236, 241, 249], "02438": [236, 241, 249], "exponenti": [236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 270], "average_ga": [236, 298], "skip_exist": [236, 237, 238, 239], "advang": 236, "gradient_mod": 236, "value_error": [236, 237, 238, 239, 240], "sign": 236, "unused_arg": 236, "target_param": [236, 237, 238, 239, 240, 296, 302], "98": [236, 237, 238, 239, 297, 303], "94": [236, 239, 296, 297, 303], "unpack": [236, 237, 238, 239], "tensor_kei": [236, 237, 238, 239, 240], "next_valu": [236, 237, 238, 239, 240], "aka": [237, 297], "average_reward": [237, 238, 239], "tdestim": [237, 238, 240], "infti": 238, "valuefunctionbas": 240, "time_dim": [241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253], "old_stat": [241, 243, 245, 247, 249, 250, 252], "new_stat": [241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "rolling_gamma": [245, 246, 247, 248, 250, 251, 252, 253], "g1": [245, 246, 247, 248, 250, 251, 252, 253], "g2": [245, 246, 247, 248, 250, 251, 252, 253], "g3": [245, 246, 247, 248, 250, 251, 252, 253], "g4": [245, 246, 247, 248, 250, 251, 252, 253], "v3": [245, 246, 247, 248, 250, 251, 252, 253], "v4": [245, 246, 247, 248, 250, 251, 252, 253, 296, 298, 304], "out_file_bas": 254, "skip_reset": 254, "dump": 254, "interv": [254, 255, 264, 274, 297, 303], "center_crop": 255, "make_grid": 255, "Will": 255, "grid": 255, "exp_nam": [256, 257, 260, 261, 262, 284, 297], "log_dir": [256, 257, 259, 261, 297], "templat": 256, "csv": [257, 259, 297], "minim": [257, 305], "dependeci": 257, "experiment_nam": [258, 259], "uuid": [258, 297, 308], "date": 258, "logger_typ": 259, "logger_nam": 259, "tensorboard": [259, 261, 307], "wandb": [259, 262, 307], "mlflow": [259, 260], "wandb_kwarg": 259, "mlflow_kwarg": 259, "tracking_uri": 260, "uri": 260, "datastor": 260, "tb_log": 261, "tensoarboard": 261, "sub_traj_len": 263, "min_sub_traj_len": 263, "register_op": [263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 294, 297], "process_optim_batch": [263, 269, 270, 294], "td_out": [263, 271], "_process_optim_batch_hook": [263, 294], "batch_subsampl": 263, "clear_cuda": 264, "pre_optim_step": [264, 294], "counter": [265, 294], "log_pbar": [265, 266, 268, 270, 294, 297], "progress": [265, 266, 268, 272, 294, 297, 299, 308], "count_fram": 265, "pre_steps_log": [265, 266, 294], "count_frames_log": 265, "lognam": 266, "r_train": [266, 297], "log_reward": [266, 297], "loss_compon": 267, "appl": 267, "omit": [267, 298, 303, 305], "optimizer_hook": 267, "record_interv": [268, 296, 297], "record_fram": [268, 275, 296, 297], "policy_explor": [268, 284, 296, 297], "log_kei": [268, 297], "suffix": 268, "underestim": 268, "suppos": [268, 294, 308], "set_exploration_typ": [268, 290, 298, 299, 307], "r_evalu": [268, 296], "flatten_tensordict": [269, 297], "max_dim": 269, "rb_trainer": 269, "batch_process": [269, 270, 271, 294], "post_loss": [269, 294], "999": [270, 297], "jitter": 270, "finfo": 270, "default_dtyp": 270, "get_default_dtyp": 270, "reward_norm": 270, "update_reward_stat": 270, "normalize_reward": 270, "make_train": [271, 290], "_process_batch_hook": [271, 294], "select_kei": [271, 294], "versatil": 272, "lossmodul": [272, 283, 284, 290], "optim_steps_per_batch": [272, 294, 297], "epoch": [272, 298, 302], "clip_grad_norm": 272, "partial": [272, 299], "clip_norm": 272, "progress_bar": 272, "tqdm": [272, 296, 298, 299, 302, 303], "save_trainer_interv": 272, "disk": [272, 294, 296, 297, 299, 305], "log_interv": [272, 297], "save_trainer_fil": [272, 294], "datacollectorbas": [274, 277, 278, 284, 290], "update_weights_interv": [274, 297], "sit": [274, 297], "update_weight": 274, "post_step": [274, 294], "cfg": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288], "dictconfig": [275, 276, 277, 278, 281, 282, 283, 284, 285, 288], "divid": [275, 292, 296, 302, 303], "unknowingli": 275, "annealing_fram": [275, 296], "init_env_step": [275, 276, 296], "proof_environ": [276, 281, 296], "sta": 276, "ot": 276, "actor_model_explor": [277, 278, 296], "make_env_kwarg": [277, 278], "targetnetupdat": [279, 280, 283, 284], "redqloss_deprec": 280, "actor_net_kwarg": 281, "qvalue_net_kwarg": 281, "observation_kei": 281, "dummi": [281, 296, 308], "parser_env_arg": 281, "parser_model_args_continu": 281, "cattensor": [281, 296, 301, 303, 308], "hydra": 281, "config_stor": 281, "configstor": 281, "halfcheetah": [281, 296], "config_field": 281, "config_cl": 281, "redqmodelconfig": 281, "envconfig": 281, "make_dataclass": 281, "cls_name": 281, "cs": 281, "config_path": 281, "config_nam": 281, "17": [281, 296, 297, 298, 299, 303, 304], "replayargsconfig": 282, "target_net_updat": [284, 296, 297], "constitu": 284, "learnt": [284, 296, 298], "tensorboardlogg": [284, 290], "egreedywrapp": [284, 297, 299], "env_proof": 284, "obs_spec": 284, "net_valu": 284, "dir": [284, 294, 297], "gettempdir": 284, "argpars": [285, 288], "namespac": [285, 288], "parser": [285, 288], "transformed_env_constructor": [285, 290], "num_env_per_collector": [286, 287], "video_tag": 288, "norm_obs_onli": 288, "use_env_cr": 288, "custom_env_mak": 288, "custom_env": 288, "return_transformed_env": 288, "action_dim_gsd": 288, "state_dim_gsd": 288, "obs_norm_state_dict": 288, "wheter": 288, "maker": 288, "asyncdatacollector": 290, "distributedsyncdatacollector": 290, "submitit_delayed_launch": 290, "raycollector": 290, "samplerwithoutreplac": [290, 298, 302, 305], "tensorstorag": 290, "tensordictroundrobinwrit": 290, "d4rlexperiencereplai": 290, "openmlexperiencereplai": 290, "unboundeddiscretetensorspec": [290, 298, 308], "lazystackedtensorspec": 290, "lazystackedcompositespec": 290, "prompttensordicttoken": 290, "rolloutfrommodel": 290, "tokenizeddatasetload": 290, "create_infinite_iter": 290, "consolidate_spec": 290, "check_no_exclusive_kei": 290, "contains_lazy_spec": 290, "tensordictrecord": 290, "videorecord": [290, 298], "get_available_librari": 290, "set_exploration_mod": 290, "make_composite_from_td": [290, 303], "braxwrapp": 290, "dmcontrolenv": [290, 296, 301, 308], "dmcontrolwrapp": 290, "mogymenv": 290, "mogymwrapp": 290, "jumanjienv": 290, "jumanjiwrapp": 290, "openmlenv": 290, "vmaswrapp": 290, "qvaluehook": 290, "distributionalqvaluehook": 290, "reset_nois": 290, "cemplann": 290, "mpcplannerbas": 290, "mppiplann": 290, "independentnorm": 290, "truncatednorm": 290, "maskedcategor": 290, "inv_softplu": 290, "vmapmodul": 290, "distributionaldqnloss": [290, 297], "discretesacloss": 290, "iqlloss": 290, "cqlloss": 290, "dtloss": 290, "onlinedtloss": 290, "a2closs": 290, "reinforceloss": 290, "dreameractorloss": 290, "dreamermodelloss": 290, "dreamervalueloss": 290, "td0estim": [290, 296], "td1estim": [290, 296], "td0_return_estim": 290, "td0_advantage_estim": 290, "td1_return_estim": 290, "vec_td1_return_estim": 290, "td1_advantage_estim": 290, "vec_td1_advantage_estim": 290, "td_lambda_return_estim": 290, "vec_td_lambda_return_estim": 290, "td_lambda_advantage_estim": 290, "vec_td_lambda_advantage_estim": 290, "generalized_advantage_estim": 290, "vec_generalized_advantage_estim": 290, "reward2go": 290, "distance_loss": [290, 296], "hold_out_net": 290, "hold_out_param": [290, 296], "softupd": [290, 296, 297, 299], "hardupd": [290, 296], "batchsubsampl": [290, 294], "clearcudacach": 290, "countframeslog": 290, "logreward": [290, 294, 297], "optimizerhook": [290, 297], "replaybuffertrain": [290, 294, 297], "rewardnorm": 290, "selectkei": [290, 294], "trainerhookbas": [290, 294, 297], "updateweight": [290, 294, 297], "make_collector_offpolici": 290, "make_collector_onpolici": 290, "make_dqn_loss": 290, "make_redq_loss": 290, "make_redq_model": 290, "make_replay_buff": [290, 296], "make_target_updat": 290, "parallel_env_constructor": [290, 296], "sync_async_collector": 290, "sync_sync_collector": 290, "correct_for_frame_skip": 290, "get_stats_random_rollout": 290, "csvlogger": [290, 297], "mlflowlogg": 290, "wandblogg": 290, "get_logg": 290, "generate_exp_nam": 290, "journei": 291, "textbook": 291, "highlight": 291, "ever": [291, 302], "bump": 291, "think": [291, 298, 302, 308], "benefit": [291, 302, 305], "pr": 291, "ground": [292, 296, 303], "categori": [292, 294], "recycl": [292, 305], "impos": 292, "violat": 292, "noisier": 292, "Their": [292, 302], "sd": 292, "prob_modul": 292, "pick": [292, 296, 297], "tabl": [292, 297], "customari": 292, "hopefulli": [292, 297], "mathbb": [292, 297], "rightarrow": [292, 297], "soften": 292, "backbon": [292, 299, 301, 307], "make_actor": 292, "make_valu": 292, "shared_param": 292, "make_common": 292, "reusabl": [293, 296, 305], "swappabl": [293, 296], "characterist": [293, 296, 303], "trainabl": [293, 296, 304], "whatev": [293, 296], "convent": [293, 296, 299, 302, 303], "smth": [293, 296], "metric": [293, 296], "nutshel": [293, 296], "barto": [293, 302], "chapter": 293, "proxi": 293, "significantli": [293, 296, 297, 302], "next_stat": 293, "value_net_loss": 293, "pow": [293, 296], "therebi": 293, "room": 293, "convers": 293, "signifi": [293, 302], "underperform": 293, "thin": 293, "intric": 293, "outer": [294, 296, 297, 308], "believ": 294, "scheme": [294, 308], "substenti": 294, "_pre_steps_log_hook": 294, "_pre_optim_hook": 294, "sub_batch": 294, "_post_loss_hook": 294, "_post_optim_hook": 294, "post_optim": [294, 297], "_post_optim_log": 294, "post_optim_log": 294, "_post_steps_hook": 294, "_post_steps_log_hook": 294, "post_steps_log": 294, "comment": [294, 297, 307], "extens": [294, 305], "reserv": 294, "logginghook": 294, "logging_hook": 294, "save_dict": 294, "some_valu": 294, "torchsnapshot": 294, "ckpt_backend": 294, "pt": [294, 304], "filepath": 294, "save_train": 294, "load_from_fil": 294, "perfectli": [294, 296, 303], "intern": 295, "author": [296, 297, 298, 299, 302, 303, 305], "vincent": [296, 297, 298, 299, 303, 305], "moen": [296, 297, 298, 299, 303, 305], "assembl": 296, "focus": 296, "straightforward": [296, 297, 305], "overview": [296, 298, 302, 307], "transpar": [296, 299], "understood": 296, "sota": [296, 297, 307], "illustr": [296, 297, 305], "device_count": [296, 297, 299, 304, 308], "loss_dict": 296, "modal": 296, "oblivi": [296, 298, 305], "elementari": 296, "didact": 296, "dilut": 296, "pessimist": [296, 297, 298], "target_actor_network_param": 296, "actor_in_kei": 296, "actor_crit": 296, "noth": [296, 298], "compromis": 296, "hp": 296, "hasattr": 296, "_value_estim": 296, "elif": [296, 297], "notimplementederror": 296, "unknown": 296, "_loss_actor": 296, "td_copi": 296, "actor_network_param": 296, "value_network_param": 296, "_loss_valu": 296, "pred_val": 296, "target_value_network_param": 296, "smooth": [296, 297], "loss_funt": 296, "glue": 296, "_forward": 296, "ndimens": 296, "remaind": 296, "focu": [296, 297, 298], "pixels_onli": [296, 297, 307, 308], "env_librari": 296, "env_task": 296, "env_arg": 296, "friendli": 296, "torchr": 296, "rescal": 296, "presum": 296, "leav": 296, "make_transformed_env": 296, "reward_sc": 296, "double_to_float_list": 296, "double_to_float_inv_list": 296, "marker": 296, "leverag": [296, 302, 308], "env_per_collector": 296, "transform_state_dict": 296, "make_t_env": 296, "parallel_env": [296, 307, 308], "adjust": [296, 302, 303], "seem": [296, 299], "cheat": 296, "10m": 296, "cautiou": 296, "deal": [296, 298, 302, 305], "magnitud": 296, "thousand": [296, 299], "get_env_stat": 296, "proof_env": 296, "5000": [296, 297, 298], "maxim": [296, 303], "recal": [296, 298], "ddpgmlpactor": 296, "ddpgmlpqnet": 296, "materi": 296, "ornsteinuhlenbeckprocesswrapp": 296, "make_ddpg_actor": 296, "q_net": 296, "moduless": 296, "sugges": 296, "1_000_000": [296, 299], "tight": 296, "10_000": [296, 298, 305], "traj_len": [296, 299], "make_record": 296, "recorder_obj": 296, "flavor": 296, "circular": 296, "buffer_s": [296, 297], "random_crop_len": 296, "prb": 296, "buffer_scratch_dir": 296, "temporari": 296, "dirrectori": 296, "trajecotri": 296, "25": [296, 297, 298, 299, 303, 306], "sampel": 296, "dataflow": 296, "ceil_div": 296, "utd": [296, 299], "update_to_data": 296, "realiz": 296, "_must_": 296, "001": [296, 303], "outdat": 296, "trick": [296, 297], "despit": 296, "adam": [296, 297, 298, 299, 302, 303], "optimizer_actor": 296, "lr": [296, 297, 298, 299, 302, 303], "weight_decai": [296, 297], "optimizer_valu": 296, "total_collection_step": 296, "pretti": [296, 305], "rewards_ev": 296, "collected_fram": 296, "pbar": [296, 298, 299, 302, 303], "r0": 296, "numel": [296, 298, 299, 304, 305], "current_fram": 296, "sampled_tensordict": 296, "gn1": 296, "clip_grad_norm_": [296, 298, 302, 303], "gn2": 296, "gn": [296, 303], "td_record": 296, "rn": 296, "rs": 296, "set_descript": [296, 298, 299, 302, 303], "2f": 296, "00": [296, 297, 298, 299, 302, 303, 304, 306], "800": [296, 297], "04": [296, 297, 299, 302, 303, 304, 306], "2069": 296, "80it": [296, 297, 303], "1600": [296, 297], "02": [296, 297, 298, 303, 304, 306], "55it": [296, 297], "2400": [296, 297], "07": [296, 297, 298, 302, 303], "1054": 296, "48it": [296, 297], "3200": [296, 297], "1573": 296, "89it": [296, 297, 298], "40": [296, 297, 298, 302, 303, 305], "4000": [296, 297, 298], "1940": 296, "24it": [296, 297, 303], "48": [296, 297, 303, 304], "4800": [296, 297, 303], "12it": 296, "56": [296, 297, 302, 303, 304], "5600": 296, "2514": 296, "57": [296, 297, 299, 303, 304], "63": [296, 297, 303], "77": [296, 297, 303, 305], "102": [296, 303, 305], "65": [296, 297, 303, 305], "54": [296, 297, 303, 304], "05": [296, 297, 298, 303, 304], "6400": [296, 307], "945": 296, "39it": [296, 297, 303], "68": [296, 297, 303, 304], "61": [296, 297, 303, 304], "80": [296, 297, 298, 302, 303, 304], "82": [296, 297, 303], "221": [296, 303], "78": [296, 297, 303, 304], "09": [296, 297, 302, 303], "72": [296, 297, 303, 304], "7200": 296, "416": [296, 297, 303], "88": [296, 297, 303, 305], "47": [296, 297, 299, 303], "22": [296, 297, 303, 306], "261": [296, 303], "36": [296, 297, 298, 299, 303], "8000": [296, 298], "413": [296, 303], "90it": [296, 297], "43": [296, 297, 303], "231": [296, 297, 303, 306], "91": [296, 297, 303, 304], "8800": 296, "383": [296, 298, 303, 306], "73it": [296, 297], "174": [296, 303], "55": [296, 297, 303], "71": [296, 297, 303, 304, 305, 306, 307], "96": [296, 297, 303, 304], "9600": 296, "317": [296, 303], "63it": [296, 297, 303], "66": [296, 297, 303, 304], "74": [296, 297, 303, 304], "233": [296, 303], "59": [296, 297, 298, 303, 304], "21": [296, 297, 298, 301, 302, 303, 304, 305, 306], "10400it": 296, "266": [296, 303], "75it": [296, 297], "89": [296, 297, 303, 304, 305], "265": [296, 303], "240": [296, 303, 307, 308], "plot": [296, 298, 299, 302, 303], "mention": [296, 299, 305, 308], "matplotlib": [296, 298, 299, 302, 303, 305, 308], "pyplot": [296, 298, 299, 302, 303, 305, 308], "plt": [296, 298, 299, 302, 303, 305, 308], "zip": [296, 300], "legend": 296, "xlabel": [296, 299, 302, 303], "ylabel": [296, 302], "tight_layout": 296, "concret": [296, 298], "takeawai": [296, 297], "minut": [296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "745": [296, 306], "mb": [296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308], "coding_ddpg": [296, 306], "jupyt": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308], "ipynb": [296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308], "galleri": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308], "sphinx": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308], "customis": [297, 302], "road": 297, "aspect": 297, "did": [297, 298, 305, 308], "highest": 297, "prerequisit": 297, "familiar": [297, 302, 308], "lookup": 297, "amort": [297, 298], "cart": 297, "pole": 297, "un": 297, "actuat": 297, "frictionless": 297, "upright": [297, 308], "duelingcnndqnet": 297, "is_notebook": 297, "shell": 297, "get_ipython": 297, "__class__": 297, "zmqinteractiveshel": 297, "qtconsol": 297, "terminalinteractiveshel": 297, "ipython": [297, 302, 303], "nameerror": 297, "interpret": 297, "umbrella": 297, "misplac": 297, "misus": 297, "orchestr": 297, "everyth": [297, 299], "five": [297, 298], "64x64": 297, "motion": [297, 303], "obs_norm_sd": 297, "simpler": 297, "get_norm_stat": 297, "test_env": 297, "make_model": 297, "dummy_env": 297, "output_s": [297, 299], "init_bia": 297, "actor_explor": 297, "eps_greedy_v": 297, "eps_greedy_val_env": 297, "get_replay_buff": 297, "n_optim": 297, "themselv": 297, "simplic": [297, 298, 304, 305], "get_collector": 297, "data_collector": 297, "bunch": 297, "concept": [297, 305], "power": 297, "ubiquit": 297, "get_loss_modul": 297, "target_updat": 297, "995": [297, 303], "sensit": 297, "variat": 297, "2e": [297, 303], "wd": 297, "upd": 297, "harder": [297, 307], "5_000": 297, "500000": 297, "100000": 297, "005": 297, "mandatori": [297, 298, 302, 303], "fairer": 297, "budget": [297, 298], "dqn_exp_": 297, "uuid1": [297, 308], "9895": 297, "0737": 297, "tmp": [297, 305], "tmpifl276": 297, "dqn_exp_83b9ea22": 297, "4a58": 297, "11ee": [297, 308], "9462": [297, 308], "0242ac120002": [297, 308], "registr": 297, "cumbersom": 297, "buffer_hook": 297, "weight_updat": 297, "descript": [297, 298], "aliv": 297, "total_reward": 297, "49": [297, 302, 303], "21it": [297, 303], "4045": 297, "9174": 297, "28": [297, 298, 302, 303, 304, 306], "17it": 297, "4074": [297, 303], "52": [297, 299, 301, 303, 304, 305, 306], "3802": 297, "39": [297, 299, 303, 304, 305], "45it": 297, "160": [297, 303, 308], "14it": 297, "4676": 297, "192": [297, 303], "70it": 297, "224": [297, 303], "05it": 297, "4948": 297, "56it": 297, "288": [297, 303], "51": [297, 303, 304, 305], "33it": [297, 303], "320": [297, 303, 308], "45": [297, 303], "01it": 297, "4497": 297, "352": [297, 303], "51it": 297, "384": [297, 298, 303, 305], "52it": 297, "4375": [297, 303], "66it": 297, "4134": 297, "448": [297, 303], "53": [297, 303, 304], "67it": [297, 298], "480": [297, 303, 304], "4073": 297, "04it": 297, "3772": 297, "544": [297, 303], "19": [297, 299, 303, 304], "08it": [297, 303], "4586": 297, "576": [297, 303], "30it": [297, 303], "608": [297, 303], "640": 297, "42it": [297, 299], "672": 297, "74it": 297, "4224": 297, "704": 297, "3893": 297, "736": 297, "71it": 297, "768": 297, "50it": 297, "27it": [297, 303], "832": 297, "23it": [297, 298], "3952": 297, "864": 297, "896": 297, "65it": [297, 303], "4526": 297, "928": 297, "96it": [297, 303], "960": 297, "97it": 297, "992": [297, 303], "98it": [297, 303], "93it": 297, "4797": 297, "1056": 297, "1088": 297, "1120": 297, "1152": 297, "1184": 297, "1216": 297, "31": [297, 303, 304], "03it": 297, "1248": 297, "88it": 297, "1280": 297, "28it": [297, 303], "1344": 297, "91it": 297, "1376": 297, "36it": [297, 303], "4645": 297, "1408": 297, "32it": [297, 299, 303], "1440": 297, "07it": [297, 303], "1472": 297, "10it": [297, 303], "1504": 297, "49it": 297, "1536": 297, "37": [297, 303], "1568": 297, "46it": 297, "1632": 297, "62it": 297, "1696": 297, "1728": 297, "58": [297, 299, 303, 304], "85it": [297, 303], "1760": 297, "41": [297, 298, 303, 304], "1792": 297, "82it": 297, "1824": 297, "1856": 297, "99it": [297, 299, 303], "1888": 297, "72it": 297, "1920": 297, "1952": 297, "41it": [297, 298], "1984": 297, "25it": [297, 303], "2016": 297, "2048": [297, 304], "37it": [297, 303], "2080": 297, "4404": 297, "2112": [297, 303], "13it": [297, 298], "2144": 297, "2176": 297, "57it": 297, "2208": 297, "58it": 297, "2240": 297, "2272": 297, "95it": 297, "2304": 297, "2336": 297, "2368": 297, "60": [297, 298, 302, 303, 307], "2432": 297, "2464": 297, "09it": 297, "2496": 297, "2528": [297, 303], "20it": 297, "2560": 297, "2592": 297, "2624": 297, "2656": [297, 303], "2688": 297, "2720": [297, 303], "02it": [297, 298], "2752": 297, "11it": 297, "2784": 297, "61it": 297, "2816": 297, "2848": 297, "54it": 297, "2880": 297, "2912": 297, "69it": 297, "2944": [297, 303], "2976": [297, 303], "83it": [297, 303], "3008": 297, "35it": [297, 303], "3040": 297, "3072": 297, "62": [297, 303, 304], "3104": 297, "3136": 297, "4345": 297, "3168": 297, "06it": 297, "3232": [297, 303], "2500": 297, "3264": 297, "3296": 297, "67": [297, 301, 303, 304, 305], "3328": 297, "3360": 297, "92it": 297, "3392": 297, "3424": 297, "69": [297, 303], "3456": [297, 303], "70": [297, 298, 302, 303, 304], "3488": 297, "3520": 297, "64it": [297, 303], "3552": 297, "31it": [297, 303], "3584": 297, "3616": 297, "73": [297, 303], "3648": 297, "3680": 297, "60it": 297, "3712": 297, "43it": 297, "75": [297, 303, 304], "3744": 297, "76": [297, 303, 304, 305], "3776": 297, "15it": [297, 303], "3808": 297, "3840": 297, "3872": 297, "3904": 297, "79": [297, 303, 304], "3936": 297, "3968": 297, "4032": 297, "4064": 297, "4096": 297, "83": [297, 299, 303, 304], "4128": [297, 303], "81it": 297, "4160": 297, "84": [297, 299, 303, 304], "4192": 297, "86it": 297, "85": [297, 303], "4256": [297, 303], "86": [297, 303], "4288": [297, 303], "16it": [297, 298, 303], "4320": 297, "4352": 297, "4384": 297, "4416": 297, "4448": 297, "90": [297, 298, 302, 303, 304], "4480": 297, "4512": 297, "4544": 297, "92": [297, 299, 303, 304], "4576": 297, "4608": 297, "93": [297, 303, 304], "4640": 297, "4672": [297, 303], "4704": 297, "59it": [297, 303], "4736": 297, "4768": 297, "38it": [297, 303], "97": [297, 303, 304], "4832": 297, "4864": 297, "4896": 297, "29it": [297, 303], "4928": 297, "4960": 297, "4992": 297, "5024it": 297, "quickli": [297, 302, 308], "print_csv_files_in_fold": 297, "folder_path": 297, "csv_file": 297, "output_str": 297, "dirpath": 297, "walk": [297, 301, 308], "endswith": 297, "strip": 297, "3772369623184204": 297, "4796708822250366": 297, "45859628915786743": 297, "4948333501815796": 297, "45262256264686584": 297, "31963881850242615": 297, "3757373094558716": 297, "20530980825424194": 297, "2775327265262604": 297, "37577593326568604": 297, "33630943298339844": 297, "43300697207450867": 297, "4301953911781311": 297, "5178196430206299": 297, "grad_norm_0": 297, "366668701171875": 297, "7295522689819336": 297, "211358070373535": 297, "085080623626709": 297, "4620728492736816": 297, "606194257736206": 297, "329177379608154": 297, "6241230964660645": 297, "158267974853516": 297, "10000000894069672": 297, "250000476837158": 297, "qvaluenetwork": 297, "worst": 297, "accuraci": 297, "fanci": 297, "1101": [297, 306], "coding_dqn": [297, 306], "demonstr": [298, 302, 303, 308], "talk": 298, "repetit": 298, "six": 298, "sophist": [298, 302], "invent": 298, "theta_k": 298, "frac": 298, "pi_": 298, "exceed": 298, "discourag": [298, 303], "indispens": 298, "analyz": 298, "lingua": 298, "franca": 298, "defaultdict": [298, 303], "has_cuda": [298, 302, 308], "3e": [298, 299, 302], "max_grad_norm": [298, 302], "big": [298, 305, 308], "ourselv": [298, 308], "benefici": 298, "errat": 298, "hamper": [298, 305], "reactiv": 298, "xy": 298, "sub_batch_s": 298, "num_epoch": [298, 302], "entropy_ep": [298, 302], "generalist": 298, "interchang": [298, 304, 305], "panel": 298, "charact": 298, "inverteddoublependulum": 298, "transmit": 298, "stai": 298, "thumb": 298, "supplementari": [298, 308], "told": 298, "stringent": [298, 302], "nevertheless": [298, 305], "confid": [298, 302], "pack": [298, 308], "ran": 298, "f_": 298, "mu_": 298, "difficulti": [298, 308], "brought": [298, 299], "scrictli": 298, "d_ob": 298, "d_action": 298, "policy_modul": [298, 302], "That": 298, "said": 298, "briefli": [298, 302], "refil": [298, 302], "capac": 298, "conveni": [298, 302, 303], "easiest": [298, 302], "mathemat": [298, 302], "tradeoff": [298, 302], "advantage_modul": 298, "lr_schedul": [298, 303], "cosineannealinglr": [298, 303], "eval_str": 298, "tensordict_data": [298, 302], "data_view": [298, 302], "subdata": [298, 302], "cum_reward_str": 298, "4f": [298, 299, 303], "stepcount_str": 298, "param_group": 298, "lr_str": 298, "eval_rollout": 298, "nice": 298, "376": [298, 303], "110": [298, 303, 305], "4863": 298, "0885": [298, 303], "0003": [298, 299, 303], "377": [298, 303], "1148": [298, 303], "3000": 298, "380": [298, 303], "44it": 298, "1482": 298, "84it": 298, "1928": 298, "0002": [298, 303], "386": [298, 303], "2010": 298, "6000": 298, "2221": 298, "7000": 298, "2285": 298, "388": [298, 303], "00it": 298, "2510": 298, "9000": 298, "390": [298, 303], "2430": 298, "393": [298, 303], "2612": 298, "cap": [298, 305], "figsiz": [298, 303], "subplot": [298, 303, 308], "titl": [298, 299, 302, 303], "bit": [298, 299, 302, 305], "611": [298, 303, 306], "coding_ppo": [298, 306], "rnn": 299, "lstmmodul": 299, "84x84": 299, "accessori": 299, "stamp": 299, "tensordictprim": 299, "se": 299, "flank": 299, "assist": 299, "emb": 299, "n_cell": 299, "customiz": 299, "almost": 299, "bidirect": 299, "wouldn": 299, "make_tensordict_prim": 299, "interpolationmod": 299, "qval": 299, "stoch_polici": 299, "cudnn": 299, "opportun": 299, "coupl": [299, 303, 305], "uniniti": 299, "again": [299, 302, 304, 305, 308], "redund": 299, "strongli": 299, "million": 299, "sake": [299, 304, 305], "20_000": [299, 303], "longest": 299, "npai": 299, "recurrent_st": 299, "action_spread": 299, "1000000": 299, "0004": [299, 303, 308], "150": [299, 303], "0005": 299, "434": [299, 303, 306], "2060": [299, 306], "dqn_with_rnn": [299, 306], "tutorials_python": 300, "tutorials_jupyt": 300, "distinct": 301, "humanoid": [301, 308], "env1_obs_kei": 301, "observation_stand": 301, "env2_obs_kei": 301, "observation_walk": 301, "tdreset1": 301, "tdreset2": 301, "tdreset": 301, "policy_common": 301, "policy_stand": 301, "policy_walk": 301, "But": 301, "exclusive_field": [301, 307], "stack_dim": [301, 307], "env1_mak": 301, "env2_mak": 301, "_single_task": 301, "td_rollout": 301, "862": [301, 306], "multi_task": [301, 306], "matteo": 302, "bettini": 302, "marl": 302, "maddpg": 302, "navig": 302, "lidar": 302, "sensor": 302, "collis": 302, "tie": 302, "mappo": 302, "ippo": 302, "phase": [302, 305], "mathbf": 302, "pi": [302, 303], "_t": [302, 303], "fed": [302, 305], "approxim": [302, 308], "decentralis": 302, "literatur": 302, "overcom": 302, "stationari": 302, "concurr": 302, "analys": 302, "gui": 302, "visualis": 302, "rewardsum": 302, "multiagentmlp": 302, "divic": 302, "vmas_devic": 302, "6_000": 302, "team": [302, 307], "n_iter": 302, "minibatch_s": 302, "generalis": 302, "furthermor": 302, "simd": 302, "parallelis": 302, "warp": 302, "todai": 302, "circl": 302, "surround": 302, "dot": [302, 303], "collid": 302, "drag": 302, "elast": 302, "acceler": 302, "penalis": 302, "num_vmas_env": 302, "scenario_nam": 302, "four": [302, 303], "environmnet": 302, "final_rew": 302, "agent_collis": 302, "enviorn": 302, "stress": 302, "paramount": 302, "episode_reward": 302, "n_rollout_step": 302, "evolut": 302, "yourself": 302, "utilis": 302, "n_actions_per_ag": 302, "n_obs_per_ag": 302, "share_parameters_polici": 302, "policy_net": 302, "denot": 302, "unbatched_action_spec": 302, "carefulli": [302, 308], "grant": 302, "converg": 302, "cooper": 302, "share_parameters_crit": 302, "critic_net": 302, "fantast": 302, "minibatch": 302, "desc": 302, "episode_reward_mean": 302, "episode_reward_mean_list": 302, "critic_param": 302, "target_critic_param": 302, "refresh": 302, "3390621244907379": 302, "1457589715719223": 302, "0210180282592773": 302, "5489939451217651": 302, "7553492784500122": 302, "2441396713256836": 302, "5985326766967773": 302, "5103886127471924": 302, "7321016788482666": 302, "9089064598083496": 302, "xvfb": 302, "pyvirtualdisplai": 302, "1400": [302, 303], "900": 302, "pil": 302, "rendering_callback": 302, "fromarrai": 302, "rgb_arrai": [302, 303], "gif": 302, "save_al": 302, "append_imag": 302, "profici": 302, "master": 302, "316": [302, 303, 306], "multiagent_ppo": [302, 306], "freeli": 303, "sep": 303, "touch": 303, "undertaken": 303, "broader": 303, "challeng": [303, 304], "wider": 303, "algebra": 303, "acquaint": 303, "avenu": 303, "_apply_to_composit": 303, "default_x": 303, "default_i": 303, "torqu": 303, "upward": 303, "angular": 303, "sin": 303, "rad": 303, "sec": 303, "gravit": 303, "angl": 303, "deleg": 303, "new_th": 303, "new_thdot": 303, "thdot": 303, "g_forc": 303, "max_torqu": 303, "angle_norm": 303, "max_spe": 303, "zeros_lik": 303, "albeit": 303, "is_empti": 303, "gen_param": 303, "high_th": 303, "high_thdot": 303, "low_th": 303, "low_thdot": 303, "rng": 303, "lazili": 303, "trivial": 303, "neither": 303, "shortcut": [303, 308], "irrelev": 303, "_make_spec": 303, "td_param": 303, "commong": 303, "pseudo": 303, "render_mod": 303, "render_fp": 303, "random_": 303, "_make_step": 303, "staticmethod": 303, "complic": [303, 305, 308], "showcas": 303, "skeleton": 303, "_apply_transform": [303, 308], "_inv_apply_transform": [303, 308], "subset": [303, 304], "unitari": 303, "sine": 303, "cosin": 303, "sintransform": 303, "costransform": 303, "t_sin": 303, "t_co": 303, "cat_transform": 303, "mdp": 303, "convin": 303, "simple_rollout": 303, "_data": 303, "unexplor": 303, "assumpt": [303, 305], "recreat": 303, "init_td": 303, "traj_return": 303, "last_reward": 303, "is_ipython": 303, "inlin": 303, "get_backend": 303, "ion": 303, "gcf": 303, "clear_output": 303, "625": 303, "0488": 303, "0748": 303, "519": 303, "0499": 303, "4472": 303, "073": 303, "0685": 303, "0408": 303, "552": 303, "5154": 303, "9086": 303, "527": 303, "9385": 303, "155": 303, "2568": 303, "4981": 303, "223": 303, "8929": 303, "4491": 303, "581": 303, "3233": 303, "0664": 303, "596": 303, "1021": 303, "5263": 303, "9579": 303, "5807": 303, "8075": 303, "212": 303, "2009": 303, "5525": 303, "914": 303, "34it": 303, "2894": 303, "0115": 303, "0977": 303, "1845": 303, "1830": 303, "4858": 303, "2863": 303, "0297": 303, "464": 303, "4617": 303, "5997": 303, "904": 303, "1647": 303, "0777": 303, "901": 303, "4709": 303, "6813": 303, "8317": 303, "3221": 303, "5554": 303, "276": 303, "3353": 303, "701": 303, "8570": 303, "6656": 303, "463": 303, "7779": 303, "6911": 303, "875": 303, "0796": 303, "7082": 303, "308": 303, "0421": 303, "1496": 303, "5037": 303, "1755": 303, "5029": 303, "9454": 303, "665": 303, "9330": 303, "2118": 303, "444": 303, "0995": 303, "6294": 303, "3146": 303, "2909": 303, "461": 303, "9720": 303, "1298": 303, "9923": 303, "0345": 303, "3438": 303, "3688": 303, "424": 303, "6953": 303, "5233": 303, "411": 303, "8011": 303, "5329": 303, "2677": 303, "6969": 303, "7010": 303, "9352": 303, "7707": 303, "6178": 303, "5646": 303, "348": 303, "7304": 303, "9407": 303, "942": 303, "3882": 303, "7604": 303, "3507": 303, "8928": 303, "258": 303, "6978": 303, "4641": 303, "549": 303, "6047": 303, "5005": 303, "4136": 303, "2993": 303, "3222": 303, "4046": 303, "7314": 303, "275": 303, "6331": 303, "9318": 303, "961": 303, "8331": 303, "1604": 303, "4099": 303, "4761": 303, "125": 303, "4262": 303, "6363": 303, "382": 303, "3593": 303, "7377": 303, "2847": 303, "3443": 303, "867": 303, "3592": 303, "4760": 303, "441": 303, "9950": 303, "8021": 303, "3528": 303, "1214": 303, "708": 303, "4023": 303, "3583": 303, "041": 303, "3801": 303, "0310": 303, "120": 303, "4244": 303, "2039": 303, "4850": 303, "8748": 303, "706": 303, "4897": 303, "9210": 303, "8964": 303, "0832": 303, "3934": 303, "456": 303, "8971": 303, "2933": 303, "3377": 303, "6996": 303, "2274": 303, "8916": 303, "098": 303, "2660": 303, "9110": 303, "4503": 303, "6956": 303, "9172": 303, "4026": 303, "946": 303, "9229": 303, "5205": 303, "294": 303, "8872": 303, "6637": 303, "019": 303, "9281": 303, "2082": 303, "724": 303, "8561": 303, "6574": 303, "357": 303, "4138": 303, "5230": 303, "385": 303, "4065": 303, "5642": 303, "921": 303, "9786": 303, "4129": 303, "5831": 303, "7723": 303, "4152": 303, "0898": 303, "389": 303, "5155": 303, "5376": 303, "5616": 303, "4094": 303, "283": 303, "5333": 303, "4803": 303, "895": 303, "6566": 303, "2588": 303, "662": 303, "4732": 303, "7503": 303, "068": 303, "0714": 303, "3370": 303, "059": 303, "8612": 303, "1915": 303, "3855": 303, "0349": 303, "9644": 303, "4538": 303, "445": 303, "0392": 303, "4080": 303, "1648": 303, "9599": 303, "143": 303, "4284": 303, "5946": 303, "2590": 303, "9181": 303, "4621": 303, "9075": 303, "674": 303, "1772": 303, "9444": 303, "351": 303, "9391": 303, "5595": 303, "8673": 303, "6240": 303, "5919": 303, "0018": 303, "1071": 303, "9127": 303, "251": 303, "9799": 303, "3131": 303, "9612": 303, "9705": 303, "8741": 303, "2230": 303, "0972": 303, "0337": 303, "0350": 303, "0654": 303, "2441": 303, "4596": 303, "362": 303, "103": 303, "4362": 303, "171": 303, "104": 303, "4041": 303, "6907": 303, "105": 303, "4664": 303, "2760": 303, "0299": 303, "9712": 303, "349": 303, "107": [303, 305], "3332": 303, "4479": 303, "772": 303, "108": 303, "4357": 303, "9591": 303, "543": 303, "109": 303, "6216": 303, "1353": 303, "692": 303, "6261": 303, "7086": 303, "496": 303, "111": 303, "7758": 303, "9818": 303, "112": 303, "7772": 303, "5055": 303, "113": [303, 305], "5840": 303, "3180": 303, "2083": 303, "115": 303, "5275": 303, "6873": 303, "116": [303, 305], "4107": 303, "1624": 303, "117": [303, 305], "6372": 303, "2571": 303, "118": [303, 306], "4039": 303, "4428": 303, "119": 303, "4728": 303, "5628": 303, "22it": 303, "6767": 303, "2466": 303, "522": 303, "121": [303, 308], "26it": 303, "5873": 303, "5072": 303, "122": [303, 308], "6548": 303, "3766": 303, "123": 303, "5134": 303, "1955": 303, "124": 303, "2481": 303, "0591": 303, "4500": 303, "3368": 303, "126": [303, 305], "9708": 303, "7059": 303, "127": [303, 305], "3031": 303, "2534": 303, "843": 303, "3327": 303, "6193": 303, "129": 303, "4831": 303, "1172": 303, "2593": 303, "4219": 303, "962": 303, "131": 303, "8380": 303, "899": 303, "132": 303, "2721": 303, "9048": 303, "166": [303, 305], "133": 303, "2419": 303, "5248": 303, "134": 303, "2139": 303, "4278": 303, "135": [303, 305], "0690": 303, "5140": 303, "136": 303, "1140": 303, "7402": 303, "137": [303, 305], "5356": 303, "1636": 303, "138": 303, "0671": 303, "8798": 303, "139": 303, "8918": 303, "3298": 303, "307": 303, "140": 303, "1779": 303, "141": 303, "1771": 303, "3624": 303, "936": 303, "142": 303, "1683": 303, "4810": 303, "9373": 303, "4435": 303, "144": 303, "4396": 303, "8092": 303, "145": 303, "2572": 303, "146": [303, 306, 308], "4212": 303, "0260": 303, "147": 303, "0939": 303, "6478": 303, "605": 303, "148": 303, "6606": 303, "7289": 303, "149": [303, 305], "9300": 303, "7193": 303, "563": 303, "1166": 303, "8514": 303, "151": 303, "9108": 303, "0672": 303, "292": 303, "152": 303, "8591": 303, "3768": 303, "153": 303, "9976": 303, "154": 303, "0576": 303, "0067": 303, "935": 303, "4199": 303, "1722": 303, "156": 303, "8310": 303, "3466": 303, "157": 303, "8631": 303, "2492": 303, "158": 303, "8763": 303, "1277": 303, "159": 303, "5562": 303, "7446": 303, "1082": 303, "9830": 303, "161": 303, "0946": 303, "5229": 303, "162": 303, "4574": 303, "6900": 303, "163": [303, 304, 305], "2229": 303, "0318": 303, "482": 303, "164": 303, "0543": 303, "0817": 303, "761": 303, "165": [303, 306, 308], "2809": 303, "5118": 303, "366": 303, "1142": 303, "5635": 303, "167": 303, "1949": 303, "2327": 303, "982": 303, "168": 303, "0967": 303, "0387": 303, "457": 303, "169": 303, "0782": 303, "2150": 303, "170": [303, 305], "5222": 303, "3725": 303, "9288": 303, "9837": 303, "172": 303, "1416": 303, "1099": 303, "173": 303, "8620": 303, "8475": 303, "1807": 303, "175": 303, "0645": 303, "176": 303, "2751": 303, "8313": 303, "177": 303, "9286": 303, "9770": 303, "178": 303, "5735": 303, "2837": 303, "179": 303, "2926": 303, "9489": 303, "180": 303, "1507": 303, "181": [303, 304, 306], "8724": 303, "3567": 303, "182": 303, "3574": 303, "6140": 303, "183": 303, "7895": 303, "2518": 303, "184": 303, "6146": 303, "185": 303, "8776": 303, "7358": 303, "186": [303, 305], "3722": 303, "8428": 303, "187": 303, "7955": 303, "188": 303, "0092": 303, "7106": 303, "829": 303, "189": 303, "2264": 303, "6919": 303, "190": 303, "1438": 303, "1362": 303, "191": 303, "0618": 303, "8217": 303, "9420": 303, "6765": 303, "193": 303, "7745": 303, "0709": 303, "194": 303, "9478": 303, "6867": 303, "195": 303, "6507": 303, "6225": 303, "196": 303, "2244": 303, "2195": 303, "197": 303, "5385": 303, "9263": 303, "198": 303, "1878": 303, "2374": 303, "199": 303, "8054": 303, "3504": 303, "557": 303, "0766": 303, "6825": 303, "201": 303, "2011": 303, "8393": 303, "202": 303, "0803": 303, "7815": 303, "203": 303, "8363": 303, "2460": 303, "204": 303, "8643": 303, "2191": 303, "593": 303, "205": 303, "0773": 303, "1343": 303, "206": 303, "8657": 303, "207": 303, "9304": 303, "7584": 303, "208": 303, "8752": 303, "2307": 303, "209": 303, "5250": 303, "4869": 303, "210": [303, 308], "7837": 303, "5762": 303, "211": 303, "6661": 303, "8600": 303, "2502": 303, "1752": 303, "213": 303, "3075": 303, "8871": 303, "214": 303, "9406": 303, "8090": 303, "215": 303, "6291": 303, "8923": 303, "876": [303, 306, 307], "216": 303, "9504": 303, "21e": 303, "217": 303, "7431": 303, "7880": 303, "218": 303, "4463": 303, "5432": 303, "219": 303, "3793": 303, "3313": 303, "220": 303, "8843": 303, "0369": 303, "065": 303, "4828": 303, "8391": 303, "222": 303, "6265": 303, "2913": 303, "947": 303, "5541": 303, "1252": 303, "7342": 303, "2396": 303, "225": 303, "5936": 303, "1924": 303, "226": 303, "9975": 303, "2045": 303, "227": 303, "8367": 303, "9540": 303, "228": 303, "7259": 303, "6743": 303, "229": 303, "4827": 303, "7528": 303, "230": 303, "7361": 303, "8756": 303, "7646": 303, "1116": 303, "232": 303, "5426": 303, "8385": 303, "5662": 303, "8585": 303, "234": 303, "8234": 303, "7930": 303, "235": 303, "2648": 303, "9309": 303, "236": 303, "6817": 303, "237": 303, "0943": 303, "1533": 303, "238": 303, "3045": 303, "0483": 303, "239": 303, "6415": 303, "0201": 303, "241": 303, "4437": 303, "4365": 303, "242": 303, "0358": 303, "4943": 303, "243": 303, "1272": 303, "5003": 303, "1180": 303, "2637": 303, "245": 303, "7197": 303, "0873": 303, "246": 303, "2917": 303, "247": 303, "0160": 303, "0738": 303, "248": 303, "3689": 303, "0120": 303, "249": 303, "5570": 303, "0475": 303, "250": 303, "4423": 303, "2220": 303, "6803": 303, "252": 303, "1465": 303, "7214": 303, "253": 303, "8801": 303, "7034": 303, "254": 303, "9136": 303, "4076": 303, "7589": 303, "5013": 303, "8150": 303, "2241": 303, "257": 303, "0753": 303, "8081": 303, "1951": 303, "8314": 303, "259": 303, "0038": 303, "260": 303, "0889": 303, "4616": 303, "0655": 303, "262": 303, "8333": 303, "9476": 303, "263": 303, "7554": 303, "3798": 303, "264": 303, "3717": 303, "3947": 303, "529": 303, "3060": 303, "6495": 303, "7467": 303, "8889": 303, "267": 303, "8457": 303, "591": 303, "268": 303, "7137": 303, "0536": 303, "771": 303, "269": 303, "1651": 303, "270": 303, "8246": 303, "5709": 303, "281": 303, "271": 303, "7502": 303, "0521": 303, "032": 303, "272": 303, "5475": 303, "7253": 303, "273": 303, "2856": 303, "7130": 303, "274": 303, "2778": 303, "4122": 303, "8368": 303, "1841": 303, "9622": 303, "1603": 303, "003e": 303, "277": 303, "0247": 303, "346": 303, "278": 303, "2238": 303, "6418": 303, "279": 303, "0626": 303, "2538": 303, "280": 303, "0149": 303, "7380": 303, "2167": 303, "8911": 303, "282": 303, "8725": 303, "1983": 303, "8142": 303, "3709": 303, "284": 303, "4989": 303, "285": 303, "6464": 303, "6210": 303, "286": 303, "9726": 303, "0820": 303, "287": 303, "6975": 303, "9091": 303, "4926": 303, "4791": 303, "289": 303, "0905": 303, "3500": 303, "290": 303, "2287": 303, "291": 303, "9918": 303, "5543": 303, "9245": 303, "6444": 303, "631": 303, "293": 303, "0448": 303, "4769": 303, "8566": 303, "7208": 303, "295": 303, "0966": 303, "296": 303, "5303": 303, "1537": 303, "023": 303, "297": 303, "2682": 303, "564": 303, "298": 303, "4318": 303, "5063": 303, "299": 303, "7475": 303, "4190": 303, "8186": 303, "5077": 303, "301": 303, "1883": 303, "5291": 303, "472": 303, "302": 303, "1256": 303, "3998": 303, "303": 303, "3622": 303, "0930": 303, "626": 303, "304": 303, "9500": 303, "0075": 303, "5664": 303, "305": 303, "5697": 303, "3024": 303, "306": 303, "3117": 303, "0052": 303, "006": 303, "0981": 303, "9312": 303, "3873": 303, "309": 303, "0411": 303, "2650": 303, "310": 303, "1656": 303, "0228": 303, "004": 303, "311": 303, "1196": 303, "2478": 303, "312": 303, "7353": 303, "0812": 303, "313": 303, "3022": 303, "758": 303, "314": 303, "1406": 303, "4626": 303, "315": 303, "2156": 303, "851": 303, "1953": 303, "3774": 303, "6385": 303, "9917": 303, "318": 303, "2764": 303, "905": 303, "319": 303, "6391": 303, "9317": 303, "9748": 303, "2679": 303, "321": 303, "8495": 303, "5125": 303, "322": 303, "8177": 303, "6602": 303, "323": 303, "0704": 303, "5776": 303, "324": 303, "9833": [303, 307], "1339": 303, "402": 303, "325": 303, "1238": 303, "326": 303, "9299": 303, "0227": 303, "327": 303, "7727": 303, "1607": 303, "336": 303, "328": 303, "3958": 303, "3223": 303, "763": 303, "329": 303, "4742": 303, "1797": 303, "330": 303, "0144": 303, "0085": 303, "791": 303, "331": 303, "8284": 303, "0428": 303, "332": 303, "0098": 303, "7365": 303, "333": 303, "4566": 303, "0781": 303, "086": 303, "334": 303, "3355": 303, "0230": 303, "335": 303, "9346": 303, "0423": 303, "076": 303, "3711": 303, "1335": 303, "6855": 303, "337": 303, "40it": 303, "0304": 303, "0023": 303, "8459": 303, "338": 303, "9998": 303, "4399": 303, "339": 303, "2303": 303, "1346": 303, "340": 303, "2915": 303, "7116": 303, "341": 303, "5560": 303, "0487": 303, "342": 303, "18it": 303, "5119": 303, "061": 303, "343": 303, "3305": 303, "3705": 303, "957": 303, "344": 303, "6068": 303, "345": 303, "5731": 303, "3897": 303, "0376": 303, "347": 303, "0434": 303, "012": 303, "1300": 303, "1215": 303, "0968": 303, "350": 303, "1348": 303, "0073": 303, "5052": 303, "4184": 303, "2817": 303, "8887": 303, "353": 303, "4779": 303, "1009": 303, "354": 303, "0604": 303, "599": 303, "355": 303, "4486": 303, "1176": 303, "656": 303, "356": 303, "2436": 303, "0668": 303, "8849": 303, "0012": 303, "358": 303, "7511": 303, "8804": 303, "359": 303, "8870": 303, "6728": 303, "360": 303, "8841": 303, "5508": 303, "361": 303, "5242": 303, "0268": 303, "0013": 303, "6185": 303, "363": 303, "1378": 303, "0204": 303, "364": 303, "0355": 303, "685": 303, "365": 303, "4884": 303, "0231": 303, "0770": 303, "0014": 303, "6793": 303, "367": 303, "9834": 303, "863": [303, 306], "368": 303, "6709": 303, "462": 303, "369": 303, "5199": 303, "9790": 303, "370": 303, "9401": 303, "7802": 303, "371": 303, "6723": 303, "372": 303, "2678": 303, "6201": 303, "373": 303, "2184": 303, "7385": 303, "374": 303, "6344": 303, "617": 303, "375": 303, "9945": 303, "0772": 303, "567": 303, "7576": 303, "0398": 303, "3396": 303, "0022": 303, "094": 303, "378": 303, "3073": 303, "4018": 303, "379": 303, "1869": 303, "0481": 303, "1117": 303, "381": 303, "6823": 303, "981": 303, "8305": 303, "0210": 303, "4908": 303, "0272": 303, "538": 303, "3267": 303, "0111": 303, "7965": 303, "1796": 303, "0039": 303, "5396": 303, "3757": 303, "0490": 303, "387": 303, "1394": 303, "4187": 303, "2986": 303, "7954": 303, "1274": 303, "0063": 303, "813": 303, "8706": 303, "0114": 303, "391": 303, "6922": 303, "2423": 303, "392": 303, "9115": 303, "2602": 303, "2449": 303, "0783": 303, "394": 303, "0631": 303, "0057": 303, "7444": 303, "395": 303, "3339": 303, "0167": 303, "396": 303, "4806": 303, "397": 303, "4171": 303, "067": 303, "398": 303, "2618": 303, "5809": 303, "399": 303, "0054": 303, "3364": 303, "8733": 303, "0184": 303, "401": 303, "9137": 303, "0113": 303, "025": 303, "0386": 303, "0625": 303, "403": 303, "1332": 303, "0582": 303, "7816": 303, "404": 303, "8341": 303, "0941": 303, "854": 303, "405": 303, "8615": 303, "588": 303, "406": 303, "3849": 303, "008": 303, "407": 303, "9395": 303, "0765": 303, "055": 303, "408": 303, "2685": 303, "2235": 303, "688": 303, "409": 303, "3052": 303, "4249": 303, "410": 303, "6806": 303, "6383": 303, "3721": 303, "9981": 303, "412": 303, "1862": 303, "822": 303, "9811": 303, "0171": 303, "013": 303, "414": 303, "0252": 303, "0049": 303, "6205": 303, "415": 303, "1108": 303, "4921": 303, "9142": 303, "8130": 303, "417": 303, "1725": 303, "0036": 303, "3196": 303, "418": 303, "7795": 303, "0242": 303, "799": 303, "419": 303, "7737": 303, "0138": 303, "420": 303, "1462": 303, "0053": 303, "421": 303, "9226": 303, "6139": 303, "422": 303, "9889": 303, "0403": 303, "423": 303, "6194": 303, "0032": 303, "3989": 303, "0104": 303, "425": 303, "9960": 303, "0009": 303, "6009": 303, "426": 303, "2697": 303, "0914": 303, "427": 303, "1114": 303, "428": 303, "9862": 303, "1932": 303, "429": 303, "0637": 303, "0623": 303, "082": 303, "430": 303, "9906": 303, "2031": 303, "431": 303, "9948": 303, "0895": 303, "432": 303, "1970": 303, "0256": 303, "433": 303, "4231": 303, "0449": 303, "644": 303, "1039": 303, "1973": 303, "435": 303, "4561": 303, "1225": 303, "436": 303, "0211": 303, "2125": 303, "437": 303, "3866": 303, "0050": 303, "7202": 303, "438": 303, "6388": 303, "0072": 303, "439": 303, "1187": 303, "0015": 303, "5116": 303, "440": 303, "0432": 303, "0025": 303, "7809": 303, "1925": 303, "0103": 303, "442": 303, "9570": 303, "443": 303, "0871": 303, "5601": 303, "0165": 303, "0047": 303, "6061": 303, "2746": 303, "0027": 303, "7887": 303, "446": 303, "1835": 303, "0035": 303, "855": 303, "447": 303, "8420": 303, "548": 303, "2653": 303, "0126": 303, "9736": 303, "449": 303, "0594": 303, "0119": 303, "6196": 303, "450": 303, "4509": 303, "0373": 303, "451": 303, "0620": 303, "452": 303, "6898": 303, "3235": 303, "687": 303, "453": 303, "5879": 303, "454": 303, "8406": 303, "0694": 303, "455": 303, "8259": 303, "0235": 303, "8500": 303, "0024": 303, "4054": 303, "458": 303, "2027": 303, "0894": 303, "459": 303, "5966": 303, "460": 303, "6942": 303, "0016": 303, "4254": 303, "6703": 303, "0145": 303, "8124": 303, "0218": 303, "9196": 303, "0188": 303, "8986": 303, "0884": 303, "0084": 303, "5624": 303, "465": 303, "8862": 303, "0006": 303, "5384": 303, "466": 303, "5837": 303, "467": 303, "8954": 303, "0101": 303, "6751": 303, "468": 303, "8063": 303, "0122": 303, "9635": 303, "469": 303, "0692": 303, "4216": 303, "470": 303, "1227": 303, "0586": 303, "162e": 303, "471": 303, "9690": 303, "0074": 303, "4166": 303, "6324": 303, "473": 303, "0778": 303, "474": 303, "8548": 303, "0017": 303, "4408": 303, "475": 303, "8125": 303, "1515": 303, "476": 303, "2733": 303, "0044": 303, "2836": 303, "477": 303, "7497": 303, "7681": 303, "478": 303, "8547": 303, "0105": 303, "7212": 303, "479": 303, "9848": 303, "0019": 303, "6498": 303, "1987": 303, "0011": 303, "5473": 303, "481": 303, "8991": 303, "0033": 303, "6091": 303, "9189": 303, "5771": 303, "483": 303, "6781": 303, "7542": 303, "484": 303, "5959": 303, "0064": 303, "4295": 303, "485": 303, "2547": 303, "486": 303, "0636": 303, "547": 303, "487": 303, "0065": 303, "488": 303, "1694": 303, "0083": 303, "5759": 303, "489": 303, "0493": 303, "0021": 303, "7805": 303, "490": 303, "0950": 303, "497": 303, "491": 303, "9717": 303, "3672": 303, "492": 303, "0207": 303, "493": 303, "8266": 303, "0069": 303, "5365": 303, "494": 303, "2623": 303, "5078": 303, "495": 303, "4545": 303, "09636": 303, "8754": 303, "0010": 303, "498": 303, "0031": 303, "8269": 303, "499": 303, "4082": 303, "6642": 303, "2284": 303, "501": 303, "9130": 303, "0008": 303, "502": 303, "503": 303, "7624": 303, "0056": 303, "3858": 303, "504": 303, "0890": 303, "0042": 303, "505": 303, "7505": 303, "2157": 303, "506": 303, "8394": 303, "3413": 303, "507": 303, "9609": 303, "0041": 303, "6905": 303, "508": 303, "8467": 303, "4409": 303, "509": 303, "510": 303, "8128": 303, "3559": 303, "511": 303, "1479": 303, "0264": 303, "1589": 303, "566": 303, "513": 303, "2756": 303, "0046": 303, "5266": 303, "514": 303, "9873": 303, "0112": 303, "9314": 303, "515": 303, "3791": 303, "0721": 303, "516": 303, "4580": 303, "0758": [303, 308], "6114": 303, "517": 303, "2431": 303, "518": 303, "1958": 303, "5553": 303, "8924": 303, "0097": 303, "520": 303, "3737": 303, "0234": 303, "521": 303, "9125": 303, "4623": 303, "3230": 303, "0589": 303, "3784": 303, "523": 303, "9482": 303, "0051": 303, "524": 303, "1979": 303, "0045": 303, "6401": 303, "525": 303, "1588": 303, "0048": 303, "6255": 303, "526": 303, "6084": 303, "3477": 303, "1475": 303, "0209": 303, "528": 303, "7611": 303, "1040": 303, "0099": 303, "0173": 303, "643": 303, "530": 303, "8189": 303, "4358": 303, "531": 303, "9897": 303, "532": 303, "1548": 303, "9751": 303, "533": 303, "6362": 303, "7495": 303, "534": 303, "1749": 303, "9513": 303, "535": 303, "7708": 303, "0371": 303, "536": 303, "2649": 303, "0437": 303, "537": 303, "5491": 303, "0276": 303, "6426": 303, "7294": 303, "078e": 303, "539": 303, "9928": 303, "540": 303, "7937": 303, "0124": 303, "9664": 303, "541": 303, "3342": 303, "542": 303, "2046": 303, "5496": 303, "0956": 303, "0059": 303, "545": 303, "9028": 303, "5843": 303, "546": 303, "0674": 303, "0178": 303, "797": 303, "2815": 303, "0599": 303, "1587": 303, "9276": 303, "8228": 303, "6164": 303, "551": 303, "6850": 303, "9167": 303, "3092": 303, "0670": 303, "9177": 303, "553": 303, "1599": 303, "0043": 303, "554": 303, "6367": 303, "555": 303, "3657": 303, "556": 303, "6694": 303, "2622": 303, "0372": 303, "4841": 303, "558": 303, "2707": 303, "0058": 303, "757": 303, "559": 303, "2267": 303, "5415": 303, "560": 303, "4556": 303, "0163": 303, "561": 303, "1839": 303, "0809": 303, "6262": 303, "562": 303, "0278": 303, "1112": [303, 308], "6155": 303, "565": 303, "1427": 303, "3582": 303, "624": 303, "7870": 303, "9490": 303, "0439": 303, "8796": 303, "568": 303, "8026": 303, "612": 303, "569": 303, "3147": 303, "8486": 303, "570": 303, "7917": 303, "0129": 303, "571": 303, "9553": 303, "0020": 303, "6871": 303, "572": 303, "3132": 303, "0159": 303, "8646": 303, "573": 303, "5320": 303, "0269": 303, "574": 303, "2955": 303, "0245": 303, "575": 303, "3347": 303, "0179": 303, "9718": 303, "1629": 303, "804": 303, "577": 303, "4164": 303, "0070": 303, "4335": 303, "578": 303, "579": 303, "3049": 303, "9063": 303, "580": 303, "8785": 303, "3295": 303, "5184": 303, "0546": 303, "582": 303, "4589": 303, "583": 303, "4697": 303, "2476": 303, "584": 303, "2397": 303, "585": 303, "4953": 303, "1775": 303, "586": 303, "2258": 303, "0110": 303, "7671": 303, "587": 303, "3981": 303, "8590": 303, "0007": 303, "589": 303, "9820": 303, "4221": 303, "590": 303, "1293": 303, "0116": 303, "868": 303, "1675": 303, "5931": 303, "592": 303, "2910": 303, "5219": 303, "2124": 303, "1730": 303, "737": 303, "594": 303, "2914": 303, "0206": 303, "595": 303, "0172": 303, "3982": 303, "0945": 303, "0121": 303, "4789": 303, "597": 303, "3805": 303, "598": 303, "3310": 303, "5065": 303, "6028": 303, "6316": 303, "6724": 303, "6523": 303, "601": 303, "0136": 303, "4298": 303, "602": 303, "3524": 303, "2629": 303, "603": 303, "2635": 303, "7839": 303, "604": 303, "6041": 303, "8027": 303, "4170": 303, "4675": 303, "606": 303, "3153": 303, "9316": 303, "607": 303, "0649": 303, "9722": 303, "7989": 303, "0329": 303, "609": 303, "1976": 303, "6852": 303, "610": 303, "4793": 303, "1255": 303, "4581": 303, "0394": 303, "2047": 303, "0326": 303, "613": 303, "8967": 303, "8619": 303, "614": 303, "5906": 303, "6491": 303, "615": 303, "6634": 303, "4394": 303, "616": 303, "0624": 303, "0061": 303, "5676": 303, "3259": 303, "0131": 303, "7733": 303, "618": 303, "7515": 303, "0189": 303, "5575": 303, "619": 303, "9313": 303, "6286": 303, "620": 303, "4325": 303, "7832": 303, "621": 303, "1134": 303, "622": 303, "4572": 303, "0500": 303, "5838": 303, "623": 303, "3818": 303, "8623": 303, "1253": 303, "6622": 303, "subject": 303, "saw": [303, 305], "explain": 304, "semat": 304, "r3mtransform": 304, "embodi": 304, "ai": 304, "env_transform": [304, 308], "s3": 304, "amazonaw": 304, "r3m_50": 304, "374m": 304, "8m": 304, "148mb": 304, "9m": 304, "132mb": 304, "5m": 304, "7mb": 304, "2m": 304, "4mb": 304, "0m": 304, "3mb": 304, "3m": 304, "8mb": 304, "6m": 304, "5mb": 304, "105m": 304, "9mb": 304, "115m": 304, "1mb": 304, "131m": 304, "147m": 304, "164m": 304, "179m": 304, "188m": 304, "196m": 304, "6mb": 304, "203m": 304, "212m": 304, "221m": 304, "229m": 304, "246m": 304, "261m": 304, "270m": 304, "279m": 304, "2mb": 304, "293m": 304, "301m": 304, "311m": 304, "0mb": 304, "326m": 304, "335m": 304, "342m": 304, "349m": 304, "359m": 304, "365m": 304, "373m": 304, "wiser": 304, "conclud": 304, "_storag": [304, 305], "3321": 304, "pretrained_model": [304, 306], "supervis": [305, 308], "pull": 305, "temporarili": 305, "drastic": 305, "ram": [305, 308], "batteri": 305, "dataliststorag": 305, "datalazytensorstorag": 305, "tensordidct": 305, "basi": 305, "datalazymemmapstorag": 305, "buffer_list": 305, "lowest": 305, "medium": 305, "buffer_lazytensor": 305, "buffer_lazymemmap": 305, "fullest": 305, "organ": 305, "convini": 305, "mydata": 305, "background": 305, "question": [305, 307], "_i": 305, "artifici": 305, "0892946e": 305, "she": 305, "augment": 305, "pars": 305, "proport": 305, "hist": 305, "barcontain": 305, "artist": 305, "revert": 305, "expens": 305, "reappear": 305, "unfold": 305, "problemat": 305, "window": 305, "4th": 305, "853": [305, 306], "rb_tutori": [305, 306], "torchrl_demo": [306, 307], "torchrl_env": [306, 308], "3320": 306, "demo": 307, "icml": 307, "vmoen": 307, "fb": 307, "invest": 307, "platform": 307, "media": 307, "truli": 307, "predominantli": 307, "tensordict1": 307, "tensordict2": 307, "tensordict_sampl": 307, "_sampler": 307, "_sum_tre": 307, "modulenotfounderror": 307, "28791671991348267": 307, "gym_env": 307, "noopresetenv": [307, 308], "lazyconv2d": 307, "backbone_modul": 307, "params_expand": 307, "tensordict_exp": 307, "base_modul": 307, "0137": 307, "1524": 307, "0641": 307, "viewbackward0": 307, "asstridedbackward0": 307, "8728": 307, "1334": 307, "3494": 307, "6887": 307, "6402": 307, "_safetanhbackward": 307, "1132": 307, "1762": 307, "3430": 307, "2668": 307, "2918": 307, "6239": 307, "roughli": 307, "tensordicts_prealloc": 307, "tensordicts_stack": 307, "tensordict_rollout": [307, 308], "disclaim": 307, "concatmodul": 307, "loss_td": 307, "year": 307, "roadmap": 307, "compris": 307, "contributor": 307, "curiou": 307, "nascent": 307, "unsupervis": 308, "rom": 308, "licens": 308, "pygam": 308, "unifi": 308, "insid": 308, "_build_env": 308, "sphinx_gallery_start_ignor": 308, "filterwarn": 308, "sphinx_gallery_end_ignor": 308, "adventur": 308, "v5": 308, "airraid": 308, "alien": 308, "amidar": 308, "assault": 308, "1020": 308, "void": 308, "reproduct": 308, "tensordict_tprim": 308, "imshow": 308, "axesimag": 308, "0x7f44ec12b3a0": 308, "inconsist": 308, "pong": 308, "swingup": 308, "swingup_spars": 308, "ball_in_cup": 308, "catch": 308, "balance_spars": 308, "three_pol": 308, "two_pol": 308, "finger": 308, "turn_easi": 308, "turn_hard": 308, "fish": 308, "swim": 308, "hopper": 308, "hop": 308, "run_pure_st": 308, "bring_bal": 308, "bring_peg": 308, "insert_bal": 308, "insert_peg": 308, "point_mass": 308, "reacher": 308, "swimmer": 308, "swimmer6": 308, "swimmer15": 308, "walker": 308, "dog": 308, "trot": 308, "humanoid_cmu": 308, "lqr": 308, "lqr_2_1": 308, "lqr_6_2": 308, "quadrup": 308, "escap": 308, "stacker": 308, "stack_2": 308, "stack_4": 308, "wrapper1": 308, "wrapper2": 308, "obviou": 308, "truth": 308, "env0": 308, "env_transformed_bi": 308, "stanc": 308, "transformeddistribut": 308, "base_dist": 308, "concat": 308, "mofidi": 308, "transformedenviron": 308, "moderet": 308, "computation": 308, "legitim": 308, "incom": 308, "amongst": 308, "wor": 308, "convention": 308, "scope": 308, "markovian": 308, "3288080526": 308, "constain": 308, "bar_": 308, "get_someth": 308, "bar_ae235a74": 308, "4a57": 308, "aargh": 308, "foo_list": 308, "vec_env": 308, "_dispatch_caller_parallel": 308, "0x7f44e491afa0": 308, "bar_b5b5e586": 308, "89d2": 308, "bar_b5b512dc": 308, "98e1": 308, "bar_b5b90996": 308, "a2f5": 308, "parallen": 308, "particularili": 308, "evolv": 308, "steadi": 308, "approx": 308, "2652": 308, "3365": 308, "1355": 308, "9530": 308, "1306": 308, "_extra_st": 308, "observation_ssq": 308, "observation_sum": 308, "1200": 308, "2023": 308, "2105": 308, "1750": 308, "dispach": 308, "absor": 308}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 0, 1, "", "EnvBase"], [68, 0, 1, "", "EnvCreator"], [69, 0, 1, "", "EnvMetaData"], [70, 0, 1, "", "GymLikeEnv"], [71, 2, 1, "", "ModelBasedEnvBase"], [72, 0, 1, "", "MultiThreadedEnv"], [73, 0, 1, "", "ParallelEnv"], [74, 0, 1, "", "SerialEnv"], [71, 1, 1, "", "rand_step"], [71, 1, 1, "", "reset"], [71, 1, 1, "", "rollout"], [71, 1, 1, "", "set_seed"], [71, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[67, 3, 1, "", "action_key"], [67, 3, 1, "", "action_keys"], [67, 3, 1, "", "action_spec"], [67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 3, 1, "", "batch_locked"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 3, 1, "", "done_key"], [67, 3, 1, "", "done_keys"], [67, 3, 1, "", "done_spec"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fake_tensordict"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 3, 1, "", "input_spec"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 3, 1, "", "observation_spec"], [67, 3, 1, "", "output_spec"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "rand_action"], [67, 1, 1, "id0", "rand_step"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "id1", "reset"], [67, 3, 1, "", "reward_key"], [67, 3, 1, "", "reward_keys"], [67, 3, 1, "", "reward_spec"], [67, 1, 1, "id2", "rollout"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "id3", "set_seed"], [67, 1, 1, "", "share_memory"], [67, 3, 1, "", "specs"], [67, 1, 1, "", "state_dict"], [67, 3, 1, "", "state_spec"], [67, 1, 1, "id4", "step"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[70, 3, 1, "", "action_key"], [70, 3, 1, "", "action_keys"], [70, 3, 1, "", "action_spec"], [70, 1, 1, "", "add_module"], [70, 1, 1, "", "apply"], [70, 3, 1, "", "batch_locked"], [70, 1, 1, "", "bfloat16"], [70, 1, 1, "", "buffers"], [70, 1, 1, "", "children"], [70, 1, 1, "", "close"], [70, 1, 1, "", "compile"], [70, 1, 1, "", "cpu"], [70, 1, 1, "", "cuda"], [70, 3, 1, "", "done_key"], [70, 3, 1, "", "done_keys"], [70, 3, 1, "", "done_spec"], [70, 1, 1, "", "double"], [70, 1, 1, "", "eval"], [70, 1, 1, "", "extra_repr"], [70, 1, 1, "", "fake_tensordict"], [70, 1, 1, "", "float"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "get_buffer"], [70, 1, 1, "", "get_extra_state"], [70, 1, 1, "", "get_parameter"], [70, 1, 1, "", "get_submodule"], [70, 1, 1, "", "half"], [70, 3, 1, "", "input_spec"], [70, 1, 1, "", "ipu"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "modules"], [70, 1, 1, "", "named_buffers"], [70, 1, 1, "", "named_children"], [70, 1, 1, "", "named_modules"], [70, 1, 1, "", "named_parameters"], [70, 3, 1, "", "observation_spec"], [70, 3, 1, "", "output_spec"], [70, 1, 1, "", "parameters"], [70, 1, 1, "", "rand_action"], [70, 1, 1, "", "rand_step"], [70, 1, 1, "", "read_action"], [70, 1, 1, "", "read_done"], [70, 1, 1, "", "read_obs"], [70, 1, 1, "", "read_reward"], [70, 1, 1, "", "register_backward_hook"], [70, 1, 1, "", "register_buffer"], [70, 1, 1, "", "register_forward_hook"], [70, 1, 1, "", "register_forward_pre_hook"], [70, 1, 1, "", "register_full_backward_hook"], [70, 1, 1, "", "register_full_backward_pre_hook"], [70, 1, 1, "", "register_load_state_dict_post_hook"], [70, 1, 1, "", "register_module"], [70, 1, 1, "", "register_parameter"], [70, 1, 1, "", "register_state_dict_pre_hook"], [70, 1, 1, "", "requires_grad_"], [70, 1, 1, "", "reset"], [70, 3, 1, "", "reward_key"], [70, 3, 1, "", "reward_keys"], [70, 3, 1, "", "reward_spec"], [70, 1, 1, "", "rollout"], [70, 1, 1, "", "set_extra_state"], [70, 1, 1, "", "set_info_dict_reader"], [70, 1, 1, "", "set_seed"], [70, 1, 1, "", "share_memory"], [70, 3, 1, "", "specs"], [70, 1, 1, "", "state_dict"], [70, 3, 1, "", "state_spec"], [70, 1, 1, "", "step"], [70, 1, 1, "", "to"], [70, 1, 1, "", "to_empty"], [70, 1, 1, "", "train"], [70, 1, 1, "", "type"], [70, 1, 1, "", "xpu"], [70, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[72, 3, 1, "", "action_key"], [72, 3, 1, "", "action_keys"], [72, 3, 1, "", "action_spec"], [72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "close"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 3, 1, "", "done_key"], [72, 3, 1, "", "done_keys"], [72, 3, 1, "", "done_spec"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "fake_tensordict"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 3, 1, "", "input_spec"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 3, 1, "", "observation_spec"], [72, 3, 1, "", "output_spec"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "rand_action"], [72, 1, 1, "", "rand_step"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset"], [72, 3, 1, "", "reward_key"], [72, 3, 1, "", "reward_keys"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "", "rollout"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "share_memory"], [72, 3, 1, "", "specs"], [72, 1, 1, "", "state_dict"], [72, 3, 1, "", "state_spec"], [72, 1, 1, "", "step"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_keys"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_keys"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 3, 1, "", "input_spec"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 3, 1, "", "observation_spec"], [73, 3, 1, "", "output_spec"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "reset"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_keys"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 3, 1, "", "state_spec"], [73, 1, 1, "", "step"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "update_kwargs"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[74, 3, 1, "", "action_key"], [74, 3, 1, "", "action_keys"], [74, 3, 1, "", "action_spec"], [74, 1, 1, "", "add_module"], [74, 1, 1, "", "apply"], [74, 3, 1, "", "batch_locked"], [74, 1, 1, "", "bfloat16"], [74, 1, 1, "", "buffers"], [74, 1, 1, "", "children"], [74, 1, 1, "", "compile"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 3, 1, "", "done_key"], [74, 3, 1, "", "done_keys"], [74, 3, 1, "", "done_spec"], [74, 1, 1, "", "double"], [74, 1, 1, "", "eval"], [74, 1, 1, "", "extra_repr"], [74, 1, 1, "", "fake_tensordict"], [74, 1, 1, "", "float"], [74, 1, 1, "", "forward"], [74, 1, 1, "", "get_buffer"], [74, 1, 1, "", "get_extra_state"], [74, 1, 1, "", "get_parameter"], [74, 1, 1, "", "get_submodule"], [74, 1, 1, "", "half"], [74, 3, 1, "", "input_spec"], [74, 1, 1, "", "ipu"], [74, 1, 1, "", "load_state_dict"], [74, 1, 1, "", "modules"], [74, 1, 1, "", "named_buffers"], [74, 1, 1, "", "named_children"], [74, 1, 1, "", "named_modules"], [74, 1, 1, "", "named_parameters"], [74, 3, 1, "", "observation_spec"], [74, 3, 1, "", "output_spec"], [74, 1, 1, "", "parameters"], [74, 1, 1, "", "rand_action"], [74, 1, 1, "", "rand_step"], [74, 1, 1, "", "register_backward_hook"], [74, 1, 1, "", "register_buffer"], [74, 1, 1, "", "register_forward_hook"], [74, 1, 1, "", "register_forward_pre_hook"], [74, 1, 1, "", "register_full_backward_hook"], [74, 1, 1, "", "register_full_backward_pre_hook"], [74, 1, 1, "", "register_load_state_dict_post_hook"], [74, 1, 1, "", "register_module"], [74, 1, 1, "", "register_parameter"], [74, 1, 1, "", "register_state_dict_pre_hook"], [74, 1, 1, "", "requires_grad_"], [74, 1, 1, "", "reset"], [74, 3, 1, "", "reward_key"], [74, 3, 1, "", "reward_keys"], [74, 3, 1, "", "reward_spec"], [74, 1, 1, "", "rollout"], [74, 1, 1, "", "set_extra_state"], [74, 1, 1, "", "set_seed"], [74, 1, 1, "", "share_memory"], [74, 3, 1, "", "specs"], [74, 1, 1, "", "state_dict"], [74, 3, 1, "", "state_spec"], [74, 1, 1, "", "step"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_empty"], [74, 1, 1, "", "train"], [74, 1, 1, "", "type"], [74, 1, 1, "", "update_kwargs"], [74, 1, 1, "", "xpu"], [74, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[75, 2, 1, "", "BraxEnv"], [76, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[77, 2, 1, "", "DMControlEnv"], [78, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[79, 2, 1, "", "GymEnv"], [80, 2, 1, "", "GymWrapper"], [81, 2, 1, "", "MOGymEnv"], [82, 2, 1, "", "MOGymWrapper"], [83, 2, 1, "", "gym_backend"], [84, 2, 1, "", "set_gym_backend"]], "torchrl.envs.libs.habitat": [[85, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[86, 2, 1, "", "JumanjiEnv"], [87, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[88, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[89, 2, 1, "", "VmasEnv"], [90, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[91, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[92, 0, 1, "", "BinarizeReward"], [93, 0, 1, "", "CatFrames"], [94, 0, 1, "", "CatTensors"], [95, 0, 1, "", "CenterCrop"], [96, 0, 1, "", "Compose"], [97, 0, 1, "", "DTypeCastTransform"], [98, 0, 1, "", "DeviceCastTransform"], [99, 0, 1, "", "DiscreteActionProjection"], [100, 0, 1, "", "DoubleToFloat"], [101, 0, 1, "", "ExcludeTransform"], [102, 0, 1, "", "FiniteTensorDictCheck"], [103, 0, 1, "", "FlattenObservation"], [104, 0, 1, "", "FrameSkipTransform"], [105, 0, 1, "", "GrayScale"], [106, 0, 1, "", "InitTracker"], [107, 0, 1, "", "KLRewardTransform"], [108, 0, 1, "", "NoopResetEnv"], [109, 0, 1, "", "ObservationNorm"], [110, 0, 1, "", "ObservationTransform"], [111, 0, 1, "", "PinMemoryTransform"], [112, 0, 1, "", "R3MTransform"], [113, 0, 1, "", "RandomCropTensorDict"], [114, 0, 1, "", "RenameTransform"], [115, 0, 1, "", "Resize"], [116, 0, 1, "", "Reward2GoTransform"], [117, 0, 1, "", "RewardClipping"], [118, 0, 1, "", "RewardScaling"], [119, 0, 1, "", "RewardSum"], [120, 0, 1, "", "SelectTransform"], [121, 0, 1, "", "SqueezeTransform"], [122, 0, 1, "", "StepCounter"], [123, 0, 1, "", "TargetReturn"], [124, 0, 1, "", "TensorDictPrimer"], [125, 0, 1, "", "TimeMaxPool"], [126, 0, 1, "", "ToTensorImage"], [127, 0, 1, "", "Transform"], [128, 0, 1, "", "TransformedEnv"], [129, 0, 1, "", "UnsqueezeTransform"], [130, 0, 1, "", "VC1Transform"], [131, 0, 1, "", "VIPRewardTransform"], [132, 0, 1, "", "VIPTransform"], [133, 0, 1, "", "VecNorm"], [134, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[92, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "reset"], [93, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[94, 1, 1, "", "forward"], [94, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[95, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "reset"], [96, 1, 1, "", "to"], [96, 1, 1, "", "transform_env_device"], [96, 1, 1, "", "transform_input_spec"], [96, 1, 1, "", "transform_observation_spec"], [96, 1, 1, "", "transform_output_spec"], [96, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[97, 1, 1, "", "forward"], [97, 1, 1, "", "transform_input_spec"], [97, 1, 1, "", "transform_observation_spec"], [97, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "transform_done_spec"], [98, 1, 1, "", "transform_env_device"], [98, 1, 1, "", "transform_input_spec"], [98, 1, 1, "", "transform_observation_spec"], [98, 1, 1, "", "transform_output_spec"], [98, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[99, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[101, 1, 1, "", "forward"], [101, 1, 1, "", "reset"], [101, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[102, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[104, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[105, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "reset"], [106, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[108, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[109, 1, 1, "", "init_stats"], [109, 1, 1, "", "transform_input_spec"], [109, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[111, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[112, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[113, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "transform_input_spec"], [114, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[115, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[116, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[117, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[118, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "transform_input_spec"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "reset"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "reset"], [122, 1, 1, "", "transform_input_spec"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "reset"], [123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "reset"], [124, 1, 1, "", "to"], [124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "reset"], [125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "reset"], [127, 1, 1, "", "to"], [127, 1, 1, "", "transform_done_spec"], [127, 1, 1, "", "transform_env_device"], [127, 1, 1, "", "transform_input_spec"], [127, 1, 1, "", "transform_observation_spec"], [127, 1, 1, "", "transform_output_spec"], [127, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[128, 3, 1, "", "batch_locked"], [128, 1, 1, "", "eval"], [128, 3, 1, "", "input_spec"], [128, 1, 1, "", "load_state_dict"], [128, 3, 1, "", "output_spec"], [128, 1, 1, "", "set_missing_tolerance"], [128, 1, 1, "", "set_seed"], [128, 1, 1, "", "state_dict"], [128, 1, 1, "", "to"], [128, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[129, 1, 1, "", "transform_input_spec"], [129, 1, 1, "", "transform_observation_spec"], [129, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "make_noload_model"], [130, 1, 1, "", "to"], [130, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[132, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[133, 1, 1, "", "build_td_for_shared_vecnorm"], [133, 1, 1, "", "forward"], [133, 1, 1, "", "get_extra_state"], [133, 1, 1, "", "set_extra_state"], [133, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[135, 2, 1, "", "check_env_specs"], [136, 2, 1, "", "exploration_mode"], [137, 2, 1, "", "exploration_type"], [138, 2, 1, "", "get_available_libraries"], [139, 2, 1, "", "make_composite_from_td"], [140, 2, 1, "", "set_exploration_mode"], [141, 2, 1, "", "set_exploration_type"], [142, 2, 1, "", "step_mdp"]], "torchrl.modules": [[143, 0, 1, "", "CEMPlanner"], [144, 0, 1, "", "ConvNet"], [145, 0, 1, "", "DTActor"], [146, 0, 1, "", "DdpgCnnActor"], [147, 0, 1, "", "DdpgCnnQNet"], [148, 0, 1, "", "DdpgMlpActor"], [149, 0, 1, "", "DdpgMlpQNet"], [150, 0, 1, "", "DecisionTransformer"], [151, 0, 1, "", "Delta"], [152, 0, 1, "", "DistributionalDQNnet"], [153, 0, 1, "", "DistributionalQValueHook"], [154, 0, 1, "", "DreamerActor"], [155, 0, 1, "", "DuelingCnnDQNet"], [156, 0, 1, "", "IndependentNormal"], [157, 0, 1, "", "LSTMModule"], [158, 0, 1, "", "LSTMNet"], [159, 0, 1, "", "MLP"], [160, 0, 1, "", "MPCPlannerBase"], [161, 0, 1, "", "MPPIPlanner"], [162, 0, 1, "", "MaskedCategorical"], [163, 0, 1, "", "MultiAgentMLP"], [164, 0, 1, "", "NoisyLazyLinear"], [165, 0, 1, "", "NoisyLinear"], [166, 0, 1, "", "NormalParamWrapper"], [167, 0, 1, "", "ObsDecoder"], [168, 0, 1, "", "ObsEncoder"], [169, 0, 1, "", "OneHotCategorical"], [170, 0, 1, "", "OnlineDTActor"], [171, 0, 1, "", "QMixer"], [172, 0, 1, "", "QValueHook"], [173, 0, 1, "", "RSSMPosterior"], [174, 0, 1, "", "RSSMPrior"], [175, 0, 1, "", "Squeeze2dLayer"], [176, 0, 1, "", "SqueezeLayer"], [177, 0, 1, "", "TanhDelta"], [178, 0, 1, "", "TanhNormal"], [179, 0, 1, "", "TruncatedNormal"], [180, 0, 1, "", "VDNMixer"], [181, 0, 1, "", "VmapModule"], [182, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[143, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[144, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[145, 1, 1, "", "default_config"], [145, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[146, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[147, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[148, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[149, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[150, 0, 1, "", "DTConfig"], [150, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[151, 1, 1, "", "log_prob"], [151, 3, 1, "", "mean"], [151, 3, 1, "", "mode"], [151, 1, 1, "", "rsample"], [151, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[152, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[154, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[155, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[156, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "set_recurrent_mode"], [157, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[158, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[159, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[161, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[162, 1, 1, "", "log_prob"], [162, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[163, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[164, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[166, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[167, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[168, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[169, 1, 1, "", "log_prob"], [169, 3, 1, "", "mode"], [169, 1, 1, "", "rsample"], [169, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[170, 1, 1, "", "default_config"], [170, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[171, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[173, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[174, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[176, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[177, 3, 1, "", "mean"], [177, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[178, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[179, 1, 1, "", "log_prob"], [179, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[180, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[181, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[183, 0, 1, "", "Actor"], [184, 0, 1, "", "ActorCriticOperator"], [185, 0, 1, "", "ActorCriticWrapper"], [186, 0, 1, "", "ActorValueOperator"], [187, 0, 1, "", "AdditiveGaussianWrapper"], [188, 0, 1, "", "DecisionTransformerInferenceWrapper"], [189, 0, 1, "", "DistributionalQValueActor"], [190, 0, 1, "", "DistributionalQValueModule"], [191, 0, 1, "", "EGreedyWrapper"], [192, 0, 1, "", "LMHeadActorValueOperator"], [193, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [194, 0, 1, "", "ProbabilisticActor"], [195, 0, 1, "", "QValueActor"], [196, 0, 1, "", "QValueModule"], [197, 0, 1, "", "SafeModule"], [198, 0, 1, "", "SafeProbabilisticModule"], [199, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [200, 0, 1, "", "SafeSequential"], [201, 0, 1, "", "TanhModule"], [202, 0, 1, "", "ValueOperator"], [203, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[184, 1, 1, "", "get_critic_operator"], [184, 1, 1, "", "get_policy_head"], [184, 1, 1, "", "get_value_head"], [184, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[185, 1, 1, "", "get_policy_head"], [185, 1, 1, "", "get_policy_operator"], [185, 1, 1, "", "get_value_head"], [185, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[186, 1, 1, "", "get_policy_head"], [186, 1, 1, "", "get_policy_operator"], [186, 1, 1, "", "get_value_head"], [186, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "mask_context"], [188, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[190, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[193, 1, 1, "", "forward"], [193, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[196, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[197, 1, 1, "", "random"], [197, 1, 1, "", "random_sample"], [197, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[198, 1, 1, "", "random"], [198, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[201, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[203, 1, 1, "", "get_reward_operator"], [203, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[204, 0, 1, "", "biased_softplus"], [205, 0, 1, "", "inv_softplus"], [206, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[204, 1, 1, "", "forward"]], "torchrl.objectives": [[207, 0, 1, "", "A2CLoss"], [208, 0, 1, "", "CQLLoss"], [209, 0, 1, "", "ClipPPOLoss"], [210, 0, 1, "", "DDPGLoss"], [211, 0, 1, "", "DQNLoss"], [212, 0, 1, "", "DTLoss"], [213, 0, 1, "", "DiscreteSACLoss"], [214, 0, 1, "", "DistributionalDQNLoss"], [215, 0, 1, "", "DreamerActorLoss"], [216, 0, 1, "", "DreamerModelLoss"], [217, 0, 1, "", "DreamerValueLoss"], [218, 0, 1, "", "HardUpdate"], [219, 0, 1, "", "IQLLoss"], [220, 0, 1, "", "KLPENPPOLoss"], [221, 0, 1, "", "LossModule"], [222, 0, 1, "", "OnlineDTLoss"], [223, 0, 1, "", "PPOLoss"], [224, 0, 1, "", "REDQLoss"], [225, 0, 1, "", "ReinforceLoss"], [226, 0, 1, "", "SACLoss"], [227, 0, 1, "", "SoftUpdate"], [228, 0, 1, "", "TD3Loss"], [229, 0, 1, "", "ValueEstimators"], [230, 0, 1, "", "default_value_kwargs"], [231, 0, 1, "", "distance_loss"], [232, 0, 1, "", "hold_out_net"], [233, 0, 1, "", "hold_out_params"], [235, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[209, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[211, 1, 1, "", "forward"], [211, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[212, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[216, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[217, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "loss_value_diff"], [219, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[220, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[221, 1, 1, "", "convert_to_functional"], [221, 1, 1, "", "forward"], [221, 1, 1, "", "make_value_estimator"], [221, 1, 1, "", "named_parameters"], [221, 1, 1, "", "parameters"], [221, 1, 1, "", "set_keys"], [221, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[222, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[234, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[236, 0, 1, "", "GAE"], [237, 0, 1, "", "TD0Estimator"], [238, 0, 1, "", "TD1Estimator"], [239, 0, 1, "", "TDLambdaEstimator"], [240, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "set_keys"], [240, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[241, 0, 1, "", "generalized_advantage_estimate"], [242, 0, 1, "", "reward2go"], [243, 0, 1, "", "td0_advantage_estimate"], [244, 0, 1, "", "td0_return_estimate"], [245, 0, 1, "", "td1_advantage_estimate"], [246, 0, 1, "", "td1_return_estimate"], [247, 0, 1, "", "td_lambda_advantage_estimate"], [248, 0, 1, "", "td_lambda_return_estimate"], [249, 0, 1, "", "vec_generalized_advantage_estimate"], [250, 0, 1, "", "vec_td1_advantage_estimate"], [251, 0, 1, "", "vec_td1_return_estimate"], [252, 0, 1, "", "vec_td_lambda_advantage_estimate"], [253, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[254, 2, 1, "", "TensorDictRecorder"], [255, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[256, 2, 1, "", "Logger"], [258, 2, 1, "", "generate_exp_name"], [259, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[257, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[260, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[261, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[262, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[263, 0, 1, "", "BatchSubSampler"], [264, 0, 1, "", "ClearCudaCache"], [265, 0, 1, "", "CountFramesLog"], [266, 0, 1, "", "LogReward"], [267, 0, 1, "", "OptimizerHook"], [268, 0, 1, "", "Recorder"], [269, 0, 1, "", "ReplayBufferTrainer"], [270, 0, 1, "", "RewardNormalizer"], [271, 0, 1, "", "SelectKeys"], [272, 0, 1, "", "Trainer"], [273, 0, 1, "", "TrainerHookBase"], [274, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[263, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[264, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[265, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[266, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[267, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[268, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[269, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[270, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[271, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[273, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[274, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[275, 2, 1, "", "correct_for_frame_skip"], [276, 2, 1, "", "get_stats_random_rollout"], [277, 2, 1, "", "make_collector_offpolicy"], [278, 2, 1, "", "make_collector_onpolicy"], [279, 2, 1, "", "make_dqn_loss"], [280, 2, 1, "", "make_redq_loss"], [281, 2, 1, "", "make_redq_model"], [282, 2, 1, "", "make_replay_buffer"], [283, 2, 1, "", "make_target_updater"], [284, 2, 1, "", "make_trainer"], [285, 2, 1, "", "parallel_env_constructor"], [286, 2, 1, "", "sync_async_collector"], [287, 2, 1, "", "sync_sync_collector"], [288, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 292, 293, 294, 295, 296, 297, 298, 302, 303, 307, 308], "tutori": [0, 298, 302], "basic": [0, 305], "intermedi": [0, 8], "advanc": 0, "refer": [0, 290], "knowledg": [0, 291], "base": [0, 7, 291], "indic": 0, "tabl": 0, "collector": [1, 296, 297, 298, 299, 302, 307], "packag": [1, 2, 3, 292, 293, 294, 295], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 296, 297, 298, 302, 307], "distribut": [1, 292], "helper": [1, 3], "function": [1, 4, 293, 297, 298, 302, 307], "replai": [2, 296, 297, 298, 299, 302, 305, 307], "buffer": [2, 296, 297, 298, 299, 302, 305, 307], "compos": [2, 96], "store": [2, 297], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 293, 298, 302], "learn": [2, 4, 298, 302], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 292, 293, 294], "env": [3, 303, 307, 308], "vector": [3, 307], "multi": [3, 292, 293, 301, 302], "agent": [3, 4, 292, 293, 302], "environ": [3, 4, 6, 7, 296, 297, 298, 299, 301, 302, 303, 307, 308], "transform": [3, 127, 296, 298, 302, 303, 305, 307, 308], "clone": [3, 7], "record": [3, 268, 294, 296], "domain": [3, 292], "specif": [3, 292, 301], "librari": [3, 307], "thing": [4, 296, 303], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 307], "gener": [4, 292], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 296, 303], "algorithm": [4, 292], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 296, 297], "return": [4, 293], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 296, 298, 299, 301, 302, 303], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 307], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "action": [4, 299, 303], "magnitud": 4, "task": [4, 301], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 296, 297, 298], "standard": 4, "explor": [4, 292, 296, 297], "valu": [4, 292, 293, 296, 298, 299], "loss": [4, 296, 297, 298, 299, 302], "earli": 4, "train": [4, 8, 293, 296, 298, 299, 302, 303], "roughli": 4, "uniformli": 4, "random": [4, 302], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 297], "increas": 4, "an": [4, 298, 299, 303], "dynam": [4, 305], "can": 4, "low": 4, "forward": [4, 296], "model": [4, 292, 296, 297, 299, 304, 307], "also": 4, "us": [4, 6, 9, 299, 304, 305, 307], "offlin": 4, "observ": [4, 296], "space": 4, "effect": [4, 303], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 308], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 307], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 302, 308], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 296], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 303], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 296, 305], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "envbas": [67, 303], "envcreat": 68, "envmetadata": 69, "gymlikeenv": 70, "modelbasedenvbas": 71, "multithreadedenv": 72, "parallelenv": 73, "serialenv": 74, "braxenv": 75, "braxwrapp": 76, "dmcontrolenv": 77, "dmcontrolwrapp": 78, "gymenv": 79, "gymwrapp": 80, "mogymenv": 81, "mogymwrapp": 82, "gym_backend": 83, "set_gym_backend": 84, "habitatenv": 85, "jumanjienv": 86, "jumanjiwrapp": 87, "openmlenv": 88, "vmasenv": 89, "vmaswrapp": 90, "dreamerenv": 91, "binarizereward": 92, "catfram": [93, 305], "cattensor": 94, "centercrop": 95, "dtypecasttransform": 97, "devicecasttransform": 98, "discreteactionproject": 99, "doubletofloat": 100, "excludetransform": 101, "finitetensordictcheck": 102, "flattenobserv": 103, "frameskiptransform": 104, "grayscal": 105, "inittrack": 106, "klrewardtransform": 107, "noopresetenv": 108, "observationnorm": 109, "observationtransform": 110, "pinmemorytransform": 111, "r3mtransform": 112, "randomcroptensordict": 113, "renametransform": 114, "resiz": 115, "reward2gotransform": 116, "rewardclip": 117, "rewardsc": 118, "rewardsum": 119, "selecttransform": 120, "squeezetransform": 121, "stepcount": 122, "targetreturn": 123, "tensordictprim": 124, "timemaxpool": 125, "totensorimag": 126, "transformedenv": 128, "unsqueezetransform": 129, "vc1transform": 130, "viprewardtransform": 131, "viptransform": 132, "vecnorm": [133, 308], "gsdenois": 134, "check_env_spec": 135, "exploration_mod": 136, "exploration_typ": 137, "get_available_librari": 138, "make_composite_from_td": 139, "set_exploration_mod": 140, "set_exploration_typ": 141, "step_mdp": 142, "cemplann": 143, "convnet": 144, "dtactor": 145, "ddpgcnnactor": 146, "ddpgcnnqnet": 147, "ddpgmlpactor": 148, "ddpgmlpqnet": 149, "decisiontransform": 150, "delta": 151, "distributionaldqnnet": 152, "distributionalqvaluehook": 153, "dreameractor": 154, "duelingcnndqnet": 155, "independentnorm": 156, "lstmmodul": 157, "lstmnet": 158, "mlp": [159, 299], "mpcplannerbas": 160, "mppiplann": 161, "maskedcategor": 162, "multiagentmlp": 163, "noisylazylinear": 164, "noisylinear": 165, "normalparamwrapp": 166, "obsdecod": 167, "obsencod": 168, "onehotcategor": 169, "onlinedtactor": 170, "qmixer": [171, 293], "qvaluehook": 172, "rssmposterior": 173, "rssmprior": 174, "squeeze2dlay": 175, "squeezelay": 176, "tanhdelta": 177, "tanhnorm": 178, "truncatednorm": 179, "vdnmixer": 180, "vmapmodul": 181, "reset_nois": 182, "actor": [183, 292, 296], "actorcriticoper": 184, "actorcriticwrapp": 185, "actorvalueoper": 186, "additivegaussianwrapp": 187, "decisiontransformerinferencewrapp": 188, "distributionalqvalueactor": 189, "distributionalqvaluemodul": 190, "egreedywrapp": 191, "lmheadactorvalueoper": 192, "ornsteinuhlenbeckprocesswrapp": 193, "probabilisticactor": 194, "qvalueactor": 195, "qvaluemodul": 196, "safemodul": [197, 292], "safeprobabilisticmodul": 198, "safeprobabilistictensordictsequenti": 199, "safesequenti": 200, "tanhmodul": 201, "valueoper": 202, "worldmodelwrapp": 203, "biased_softplu": 204, "inv_softplu": 205, "map": 206, "a2closs": 207, "cqlloss": 208, "clipppoloss": 209, "ddpgloss": 210, "dqnloss": 211, "dtloss": 212, "discretesacloss": 213, "distributionaldqnloss": 214, "dreameractorloss": 215, "dreamermodelloss": 216, "dreamervalueloss": 217, "hardupd": 218, "iqlloss": 219, "klpenppoloss": 220, "lossmodul": [221, 296], "onlinedtloss": 222, "ppoloss": 223, "redqloss": 224, "reinforceloss": 225, "sacloss": 226, "softupd": 227, "td3loss": 228, "valueestim": 229, "default_value_kwarg": 230, "distance_loss": 231, "hold_out_net": 232, "hold_out_param": 233, "qmixerloss": 234, "next_state_valu": 235, "gae": 236, "td0estim": 237, "td1estim": 238, "tdlambdaestim": 239, "valueestimatorbas": 240, "generalized_advantage_estim": 241, "reward2go": 242, "td0_advantage_estim": 243, "td0_return_estim": 244, "td1_advantage_estim": 245, "td1_return_estim": 246, "td_lambda_advantage_estim": 247, "td_lambda_return_estim": 248, "vec_generalized_advantage_estim": 249, "vec_td1_advantage_estim": 250, "vec_td1_return_estim": 251, "vec_td_lambda_advantage_estim": 252, "vec_td_lambda_return_estim": 253, "tensordictrecord": 254, "videorecord": 255, "logger": [256, 294], "csvlogger": 257, "generate_exp_nam": 258, "get_logg": 259, "mlflowlogg": 260, "tensorboardlogg": 261, "wandblogg": 262, "batchsubsampl": 263, "clearcudacach": 264, "countframeslog": 265, "logreward": 266, "optimizerhook": 267, "replaybuffertrain": 269, "rewardnorm": 270, "selectkei": 271, "trainer": [272, 294, 297], "trainerhookbas": 273, "updateweight": 274, "correct_for_frame_skip": 275, "get_stats_random_rollout": 276, "make_collector_offpolici": 277, "make_collector_onpolici": 278, "make_dqn_loss": 279, "make_redq_loss": 280, "make_redq_model": 281, "make_replay_buff": 282, "make_target_updat": 283, "make_train": 284, "parallel_env_constructor": 285, "sync_async_collector": 286, "sync_sync_collector": 287, "transformed_env_constructor": 288, "readm": [289, 300], "tuto": [289, 300], "api": 290, "contribut": [291, 307], "content": 291, "modul": [292, 296, 299, 307], "tensordict": [292, 305, 307], "wrapper": 292, "probabilist": 292, "q": [292, 297, 299], "oper": 292, "join": 292, "hook": [292, 294, 297], "regular": 292, "planner": 292, "object": [293, 296, 307], "dqn": [293, 297, 299], "ddpg": [293, 296], "sac": 293, "redq": 293, "iql": 293, "cql": 293, "dt": 293, "td3": 293, "ppo": [293, 298, 302], "a2c": 293, "dreamer": 293, "checkpoint": 294, "builder": 294, "_util": 295, "code": [296, 303], "setup": [296, 299], "The": 296, "__init__": 296, "method": 296, "estim": 296, "put": 296, "togeth": [296, 303], "call": 296, "parallel": [296, 301, 308], "execut": [296, 301, 303], "stat": 296, "build": [296, 297, 305], "evalu": 296, "batch": [296, 303, 305], "size": [296, 305], "construct": 296, "target": [296, 297], "network": [296, 297, 298, 299, 302], "updat": 296, "time": [296, 306], "experi": [296, 303], "result": [296, 298, 302], "conclus": [296, 297, 298, 299, 302, 303, 305], "A": [297, 305], "exampl": [297, 305], "comput": [297, 303, 306], "deep": 297, "collect": [297, 298], "paramet": [297, 298], "hyperparamet": [297, 298, 302], "regist": 297, "possibl": 297, "improv": 297, "defin": [298, 302], "loop": [298, 299, 302, 303], "next": [298, 302], "step": [298, 302, 308], "recurr": 299, "convolut": 299, "lstm": 299, "select": 299, "divers": 301, "rollout": [301, 302, 303, 308], "critic": 302, "pendulum": 303, "write": 303, "_step": 303, "reset": [303, 308], "simul": 303, "_reset": 303, "metadata": 303, "_spec": 303, "spec": [303, 308], "shape": 303, "seed": [303, 308], "wrap": 303, "class": [303, 307], "test": 303, "our": 303, "custom": [303, 305], "simpl": 303, "pretrain": 304, "vanilla": 305, "integr": 305, "tensorclass": 305, "sampl": 305, "iter": 305, "over": 305, "fix": 305, "priorit": 305, "save": 305, "raw": 305, "imag": 305, "more": 305, "complex": 305, "introduct": 307, "config": 307, "tensordictmodul": 307, "sequenc": 307, "program": 307, "ensembl": 307, "meta": 307, "special": 307, "state": 307, "frame_skip": 308, "deepmind": 308, "control": 308, "devic": 308, "run": 308, "close": 308, "access": 308, "attribut": 308, "kwarg": 308}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})