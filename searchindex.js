Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "DreamerEnv", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 69, 71, 72, 75, 83, 84, 86, 87, 88, 89, 93, 96, 98, 100, 102, 105, 107, 108, 110, 116, 117, 121, 122, 123, 125, 133, 135, 136, 137, 139, 142, 144, 153, 155, 156, 157, 158, 166, 167, 168, 169, 173, 174, 178, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 213, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 265, 268, 277, 278, 282, 283, 286, 295, 296, 297, 298, 301, 302, 303, 306, 307, 311, 312, 314, 315, 317, 318], "open": [0, 5, 7, 11, 307, 312, 317], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "reinforc": [0, 3, 9, 100, 155, 156, 157, 158, 162, 200, 203, 217, 218, 222, 224, 228, 229, 235, 236, 237, 300, 307, 310, 313, 316, 317], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 100, 155, 156, 157, 158, 162, 170, 175, 200, 203, 217, 218, 222, 224, 228, 229, 234, 235, 236, 237, 300, 302, 303, 306, 307, 309, 310, 311, 313, 315, 316, 317, 318], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 83, 132, 175, 193, 204, 212, 217, 231, 233, 273, 301, 302, 303, 304, 306, 307, 308, 312, 314, 315, 318], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 79, 84, 147, 300, 301, 302, 305, 306, 307, 308, 312, 313, 318], "pytorch": [0, 1, 2, 3, 135, 174, 175, 282, 301, 304, 306, 308, 309, 312, 313, 314, 317, 318], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 71, 75, 77, 83, 84, 87, 88, 89, 93, 115, 117, 122, 132, 137, 144, 155, 157, 163, 173, 181, 183, 184, 190, 191, 200, 201, 203, 206, 208, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 244, 245, 246, 278, 291, 301, 302, 303, 306, 307, 309, 312, 313, 314, 315, 317, 318], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 71, 75, 83, 87, 88, 89, 93, 101, 102, 103, 105, 108, 111, 116, 117, 119, 121, 122, 125, 128, 133, 137, 139, 141, 142, 153, 159, 162, 166, 167, 168, 169, 171, 172, 173, 191, 193, 197, 200, 201, 203, 204, 205, 206, 211, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 265, 269, 273, 279, 286, 291, 294, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "python": [0, 3, 5, 6, 7, 10, 21, 171, 172, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 75, 100, 101, 111, 117, 121, 122, 135, 137, 139, 166, 168, 173, 174, 178, 193, 198, 199, 200, 204, 205, 207, 208, 219, 226, 230, 231, 233, 264, 281, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "low": [0, 25, 71, 75, 87, 93, 103, 107, 148, 200, 204, 211, 306, 307, 308, 312, 313, 317], "high": [0, 9, 25, 41, 71, 75, 87, 93, 103, 107, 116, 148, 200, 204, 211, 246, 251, 259, 306, 307, 308, 312, 313, 315, 317], "level": [0, 3, 4, 22, 26, 28, 100, 230, 306, 307, 317], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 71, 118, 169, 250, 274, 283, 304, 308, 313, 317], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 71, 72, 75, 82, 83, 86, 87, 88, 89, 90, 93, 103, 104, 105, 107, 108, 110, 111, 115, 116, 119, 121, 128, 133, 135, 136, 137, 138, 139, 141, 142, 148, 152, 158, 160, 166, 167, 169, 171, 172, 175, 179, 181, 184, 198, 199, 201, 203, 204, 205, 207, 208, 209, 210, 211, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 241, 244, 245, 246, 247, 248, 249, 250, 279, 294, 298, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 107, 191, 231, 302, 317], "effici": [0, 1, 2, 4, 8, 175, 302, 306, 307, 308, 309, 311, 312, 314, 315, 317], "modular": [0, 210, 315, 317], "document": [0, 5, 7, 18, 19, 21, 32, 71, 75, 87, 93, 137, 307, 317], "properli": [0, 71, 75, 87, 93, 308, 312, 313, 317], "test": [0, 3, 5, 139, 144, 166, 167, 278, 294, 308, 309, 317], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 79, 87, 88, 89, 93, 100, 104, 105, 108, 109, 117, 119, 121, 125, 127, 129, 132, 133, 136, 137, 139, 141, 151, 152, 155, 156, 157, 158, 159, 162, 166, 167, 169, 170, 171, 172, 175, 176, 182, 183, 184, 193, 194, 198, 199, 200, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 252, 267, 270, 271, 272, 273, 277, 294, 296, 297, 302, 303, 304, 307, 308, 309, 312, 313, 314, 315, 317, 318], "code": [0, 3, 5, 7, 8, 121, 139, 166, 210, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318], "aim": [0, 3, 7, 28, 29, 121, 139, 141, 168, 285, 301, 302, 303, 306, 307, 317], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 84, 86, 88, 117, 136, 147, 162, 191, 199, 200, 207, 210, 224, 246, 247, 248, 249, 270, 302, 304, 308, 309, 312, 313, 315, 317], "research": [0, 7, 9, 317], "most": [0, 3, 7, 8, 32, 107, 306, 307, 308, 313, 317, 318], "written": [0, 3, 34, 36, 39, 45, 52, 55, 71, 75, 87, 93, 100, 115, 128, 131, 134, 151, 193, 203, 204, 207, 208, 212, 217, 219, 230, 233, 235, 245, 264, 265, 302, 303, 304, 306, 309, 311, 313, 317], "highli": [0, 2, 317, 318], "wai": [0, 3, 4, 79, 121, 123, 141, 233, 246, 247, 248, 249, 302, 306, 307, 308, 311, 312, 313, 314, 315, 317, 318], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 71, 72, 75, 79, 82, 87, 88, 89, 91, 92, 93, 98, 100, 103, 104, 105, 107, 108, 116, 117, 121, 122, 125, 128, 132, 133, 136, 137, 139, 141, 142, 152, 165, 166, 169, 170, 173, 175, 176, 189, 191, 193, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 278, 291, 296, 297, 298, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "easili": [0, 3, 7, 291, 303, 306, 307, 308, 312, 317, 318], "swap": [0, 3, 308, 314, 317], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 162, 182, 199, 200, 206, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 277, 282, 306, 307, 308, 309, 311, 312, 313, 314, 317], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 71, 72, 75, 87, 88, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 154, 155, 159, 162, 163, 180, 181, 182, 190, 198, 202, 211, 214, 216, 222, 232, 265, 279, 291, 298, 300, 307, 309, 310, 314, 316], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 82, 87, 88, 89, 93, 105, 108, 137, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 190, 191, 197, 198, 200, 201, 203, 206, 211, 214, 230, 265, 306, 307, 309, 311, 312, 313, 314, 315, 317, 318], "write": [0, 3, 8, 23, 32, 37, 45, 75, 103, 119, 120, 193, 207, 208, 210, 212, 218, 220, 221, 223, 229, 234, 236, 238, 245, 250, 265, 302, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 71, 75, 84, 87, 91, 92, 93, 128, 136, 142, 151, 166, 203, 207, 208, 213, 217, 218, 219, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 306, 308, 309, 312, 313, 317, 318], "ones": [0, 15, 26, 32, 35, 41, 42, 71, 75, 87, 93, 101, 104, 105, 106, 108, 117, 121, 125, 132, 133, 136, 137, 139, 141, 171, 172, 191, 207, 217, 218, 220, 229, 233, 234, 236, 238, 252, 306, 308, 312, 313, 315, 317, 318], "littl": [0, 3, 43, 308, 309, 315, 317, 318], "effort": [0, 3, 313, 315, 317], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 71, 75, 77, 82, 83, 87, 88, 89, 93, 98, 100, 101, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 117, 121, 122, 123, 125, 128, 129, 133, 134, 136, 137, 139, 140, 141, 142, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 244, 246, 247, 248, 249, 250, 264, 273, 275, 278, 279, 282, 284, 285, 286, 291, 294, 298, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "repo": [0, 6, 52, 139, 301, 312, 317], "attempt": [0, 197, 203, 221, 229, 244, 317], "align": [0, 317], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 71, 75, 87, 93, 101, 106, 137, 286, 298, 312, 317, 318], "ecosystem": [0, 317], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 71, 72, 75, 79, 87, 93, 100, 133, 137, 166, 197, 200, 203, 208, 230, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 86, 142, 300, 306, 307, 314, 315, 317, 318], "pillar": [0, 317], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 105, 106, 107, 108, 112, 116, 117, 121, 122, 132, 136, 137, 139, 142, 144, 152, 166, 167, 169, 170, 197, 203, 225, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 273, 275, 278, 285, 286, 287, 288, 291, 294, 295, 296, 297, 298, 300, 301, 302, 310, 314, 315, 316], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 71, 75, 83, 87, 93, 105, 121, 133, 139, 141, 143, 153, 154, 159, 166, 168, 169, 170, 173, 180, 181, 190, 194, 195, 196, 202, 207, 213, 217, 218, 219, 221, 222, 225, 226, 227, 229, 230, 231, 233, 234, 236, 244, 282, 287, 288, 289, 290, 291, 300, 301, 304, 308, 310, 312, 313, 315, 316, 318], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 83, 86, 87, 88, 89, 93, 98, 100, 105, 106, 108, 115, 117, 125, 131, 144, 148, 152, 162, 166, 167, 170, 173, 182, 191, 193, 199, 201, 203, 204, 205, 207, 210, 211, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 273, 279, 282, 284, 287, 294, 296, 297, 298, 300, 302, 303, 304, 309, 313, 314, 315, 318], "util": [0, 3, 17, 23, 32, 40, 71, 75, 87, 88, 89, 93, 96, 121, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 159, 214, 215, 216, 231, 294, 300, 305, 306, 307, 308, 312, 313, 317, 318], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 71, 72, 75, 87, 93, 101, 104, 111, 117, 121, 128, 133, 136, 137, 139, 141, 144, 165, 166, 170, 173, 176, 182, 188, 189, 198, 200, 204, 206, 207, 208, 245, 246, 247, 248, 249, 273, 285, 297, 302, 306, 307, 308, 312, 313, 314, 317, 318], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 71, 72, 75, 87, 93, 101, 104, 111, 117, 121, 128, 133, 136, 137, 139, 141, 144, 165, 166, 170, 173, 188, 189, 198, 204, 207, 208, 245, 255, 256, 257, 258, 260, 261, 262, 263, 297, 302, 306, 307, 308, 312, 313, 314, 317, 318], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 100, 125, 131, 203, 279, 282, 284, 287, 288, 294, 296, 297, 300, 304, 315, 318], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 71, 75, 83, 87, 93, 104, 105, 108, 121, 133, 136, 137, 139, 141, 142, 151, 152, 153, 168, 170, 173, 193, 199, 200, 204, 206, 207, 212, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 252, 269, 273, 285, 291, 294, 295, 296, 297, 298, 302, 303, 304, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 71, 75, 87, 93, 115, 137, 168, 173, 306, 307, 308, 315, 317, 318], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 71, 75, 87, 88, 89, 93, 100, 105, 108, 115, 116, 117, 132, 133, 136, 137, 142, 144, 153, 167, 168, 173, 191, 209, 210, 217, 219, 230, 233, 241, 244, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 282, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "few": [0, 2, 8, 273, 308, 309, 312, 315, 317, 318], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 105, 108, 212, 233, 302, 306, 308, 309, 312, 313, 317, 318], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 153, 207, 278, 282, 302, 306, 308, 309, 312, 313, 315, 317, 318], "standard": [0, 3, 117, 127, 142, 152, 163, 170, 174, 175, 197, 198, 238, 246, 247, 248, 249, 306, 307, 312, 315, 317], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 135, 282, 313, 315, 317, 318], "common": [0, 3, 4, 21, 75, 87, 93, 98, 194, 195, 196, 202, 217, 218, 219, 223, 229, 230, 233, 234, 235, 236, 238, 294, 301, 302, 304, 306, 307, 308, 311, 312, 313, 314, 317, 318], "openai": [0, 7, 74, 76, 90, 308, 313, 317, 318], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 79, 87, 90, 93, 100, 103, 114, 115, 117, 119, 123, 125, 133, 136, 142, 166, 291, 294, 301, 306, 307, 308, 309, 313, 314, 315, 317], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 71, 75, 79, 84, 87, 88, 89, 93, 100, 101, 103, 104, 105, 107, 108, 111, 117, 121, 122, 125, 132, 133, 136, 137, 139, 141, 142, 166, 167, 173, 193, 198, 199, 204, 205, 207, 208, 209, 210, 217, 219, 220, 223, 229, 230, 231, 233, 234, 235, 236, 237, 238, 246, 247, 248, 249, 250, 286, 304, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 93, 98, 99, 100, 101, 102, 103, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 187, 188, 189, 191, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 270, 273, 275, 276, 277, 278, 279, 280, 282, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 302, 309, 312, 313, 315, 317], "On": [0, 3, 7, 18, 19, 20, 21, 302, 307, 312], "end": [0, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 119, 132, 137, 153, 169, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "come": [0, 1, 3, 8, 82, 87, 93, 105, 108, 193, 194, 195, 196, 204, 212, 306, 307, 308, 309, 312, 315, 317, 318], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 71, 73, 75, 83, 87, 88, 89, 93, 98, 101, 104, 105, 108, 114, 115, 121, 131, 132, 133, 136, 137, 139, 141, 144, 149, 150, 166, 169, 173, 197, 198, 207, 231, 233, 250, 273, 278, 279, 288, 298, 301, 302, 303, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "re": [0, 3, 8, 32, 62, 71, 75, 87, 93, 166, 171, 172, 204, 208, 304, 306, 308, 309, 311, 313, 317, 318], "usabl": [0, 304, 309, 317], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 71, 72, 75, 87, 93, 105, 108, 137, 142, 144, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 171, 172, 173, 176, 177, 178, 179, 180, 183, 184, 186, 189, 191, 194, 195, 196, 197, 198, 200, 201, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 291, 294, 300, 302, 306, 309, 311, 313, 315, 318], "cost": [0, 2, 27, 306, 307, 312, 313, 315], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 69, 71, 72, 75, 83, 86, 87, 88, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 145, 146, 147, 151, 152, 154, 155, 156, 157, 158, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 180, 181, 183, 184, 187, 188, 189, 190, 193, 194, 195, 196, 198, 204, 206, 207, 208, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 241, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 282, 285, 287, 291, 294, 295, 296, 297, 298, 300, 302, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 71, 72, 75, 79, 82, 84, 87, 88, 89, 93, 142, 173, 200, 203, 206, 304, 306, 307, 309, 312, 313, 314, 315, 317, 318], "good": [0, 1, 4, 9, 306, 308, 309, 312, 317, 318], "runtim": [0, 3, 32, 71, 75, 87, 93, 313], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 71, 75, 87, 93, 96, 105, 108, 116, 137, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 169, 170, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 226, 233, 278, 282, 303, 306, 307, 308, 309, 311, 312, 313, 318], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 71, 75, 82, 87, 88, 89, 91, 92, 93, 142, 194, 195, 196, 203, 223, 231, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 302, 303, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 71, 75, 87, 93, 98, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 119, 120, 122, 123, 125, 128, 129, 131, 132, 133, 134, 136, 139, 140, 142, 179, 193, 194, 195, 196, 199, 204, 207, 208, 210, 212, 213, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 265, 278, 282, 291, 302, 306, 307, 308, 309, 311, 312, 313, 314, 318], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 78, 79, 87, 88, 89, 93, 135, 139, 143, 162, 168, 174, 176, 193, 197, 199, 200, 207, 212, 217, 224, 231, 233, 246, 251, 259, 277, 301, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 318], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 303, 306, 307, 308, 312, 313, 317, 318], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 304, 306, 311, 314, 318], "beyond": 0, "api": [0, 3, 5, 88, 89, 90, 121, 141, 303, 304, 312, 313, 317, 318], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 71, 72, 75, 83, 87, 93, 96, 100, 101, 110, 115, 122, 144, 166, 193, 199, 200, 204, 205, 206, 207, 208, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 318], "paper": [0, 121, 139, 141, 181, 190, 228, 291, 306, 308, 312], "ppo": [0, 4, 8, 204, 208, 219, 230, 233, 300, 302, 306, 307, 310, 316], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 71, 72, 74, 75, 76, 84, 87, 93, 100, 103, 104, 114, 115, 117, 123, 125, 133, 136, 137, 142, 166, 294, 302, 307, 308, 310, 316, 317, 318], "your": [0, 2, 3, 7, 8, 10, 18, 32, 71, 75, 79, 82, 87, 88, 89, 93, 142, 298, 301, 302, 303, 307, 308, 309, 310, 312, 315, 316, 317], "introduct": [0, 303, 310, 312, 316, 318], "multi": [0, 7, 9, 28, 29, 32, 71, 75, 87, 91, 92, 93, 166, 167, 168, 173, 244, 246, 247, 248, 249, 300, 306, 307, 308, 309, 310, 313, 316, 317], "agent": [0, 9, 28, 29, 82, 88, 89, 91, 92, 96, 132, 171, 172, 173, 175, 181, 190, 244, 300, 310, 313, 316], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 166, 169, 170, 207, 231, 264, 286, 287, 288, 291, 294, 296, 297, 298, 300, 302, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 91, 92, 93, 98, 100, 101, 102, 104, 105, 106, 107, 108, 114, 115, 117, 121, 122, 123, 125, 132, 133, 135, 136, 137, 139, 141, 142, 144, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 179, 180, 181, 182, 188, 189, 190, 191, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 292, 294, 298, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 316, 318], "pretrain": [0, 310, 316], "recurr": [0, 166, 184, 307, 310, 315, 316], "dqn": [0, 162, 199, 200, 217, 218, 220, 221, 223, 224, 225, 228, 229, 231, 233, 234, 235, 236, 237, 238, 244, 289, 300, 302, 310, 316], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 71, 75, 87, 88, 89, 93, 105, 112, 121, 132, 137, 139, 141, 144, 155, 157, 166, 197, 201, 203, 217, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 246, 282, 284, 294, 300, 304, 307, 310, 314, 315, 316, 318], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 71, 75, 83, 87, 93, 107, 115, 132, 149, 150, 162, 166, 173, 175, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 217, 218, 219, 220, 223, 229, 230, 232, 233, 234, 235, 236, 238, 278, 284, 287, 288, 294, 296, 297, 302, 303, 304, 307, 310, 314, 315, 316, 317, 318], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 100, 107, 122, 125, 133, 218, 220, 221, 223, 229, 234, 236, 238, 279, 282, 292, 294, 300, 304, 310, 313, 314, 316], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 71, 75, 83, 87, 93, 100, 104, 107, 121, 122, 125, 133, 136, 137, 139, 141, 207, 210, 218, 220, 221, 223, 229, 234, 236, 238, 279, 282, 292, 294, 300, 304, 310, 313, 314, 316, 318], "task": [0, 3, 9, 28, 29, 40, 45, 69, 78, 87, 88, 89, 90, 93, 121, 139, 141, 229, 306, 307, 308, 309, 310, 312, 313, 316, 317, 318], "specif": [0, 2, 5, 8, 41, 42, 75, 159, 198, 282, 300, 303, 304, 308, 309, 310, 312, 315, 316], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 71, 75, 87, 93, 105, 108, 117, 121, 136, 137, 139, 142, 170, 181, 190, 193, 194, 204, 207, 208, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 286, 287, 288, 293, 294, 298, 300, 302, 304, 307, 308, 309, 310, 312, 313, 315, 316, 318], "ddpg": [0, 155, 156, 157, 158, 220, 228, 237, 300, 302, 307, 310, 316], "loss": [0, 3, 8, 36, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 277, 282, 289, 290, 291, 294, 303, 304, 310, 313, 315, 316, 317], "trainer": [0, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 306, 310, 316], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 77, 78, 87, 90, 93, 103, 107, 112, 115, 121, 122, 123, 133, 136, 137, 139, 140, 142, 143, 144, 151, 152, 153, 162, 166, 168, 170, 171, 172, 173, 175, 176, 191, 197, 198, 199, 200, 201, 204, 205, 208, 210, 211, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 241, 244, 246, 247, 248, 249, 250, 252, 266, 267, 270, 275, 282, 284, 291, 294, 303, 306, 308, 310, 312, 313, 316, 318], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 80, 81, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 104, 105, 106, 107, 108, 114, 115, 117, 119, 121, 123, 125, 132, 133, 135, 136, 137, 139, 141, 142, 148, 151, 152, 153, 154, 159, 162, 166, 167, 168, 170, 173, 176, 179, 180, 181, 182, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 239, 240, 244, 246, 247, 248, 249, 252, 273, 274, 275, 276, 277, 279, 280, 281, 284, 291, 294, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318], "packag": [0, 6, 7, 10, 300, 301, 306, 307, 318], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 71, 75, 87, 93, 100, 101, 121, 141, 153, 166, 167, 168, 173, 206, 210, 219, 221, 223, 224, 230, 233, 234, 238, 246, 247, 248, 249, 255, 256, 257, 258, 260, 261, 262, 263, 291, 298, 300, 306, 307, 308, 309, 311, 312, 313, 314, 315], "node": [0, 2, 18, 19, 20, 21, 22, 291, 300], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 88, 89, 115, 117, 152, 160, 161, 162, 163, 165, 170, 171, 172, 176, 179, 180, 183, 184, 187, 188, 189, 197, 198, 199, 200, 204, 208, 209, 217, 218, 219, 223, 224, 229, 230, 233, 234, 235, 236, 238, 300, 304, 307, 308, 312, 313, 317, 318], "helper": [0, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 306, 307, 309, 313], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 71, 75, 87, 93, 100, 136, 137, 142, 202, 226, 291, 300, 306, 307, 308, 309, 311, 312, 315, 317, 318], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 71, 75, 83, 87, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 117, 119, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 184, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 218, 221, 223, 234, 236, 238, 244, 300, 313], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 91, 92, 93, 96, 98, 100, 101, 103, 105, 106, 107, 108, 109, 114, 115, 117, 119, 121, 122, 123, 125, 129, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 148, 151, 152, 155, 156, 157, 158, 159, 162, 165, 166, 168, 169, 170, 172, 173, 174, 176, 179, 180, 181, 182, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 238, 240, 244, 245, 246, 247, 248, 249, 264, 265, 273, 279, 282, 285, 286, 291, 292, 294, 295, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "human": [0, 300, 313], "feedback": [0, 300, 317], "rlhf": [0, 34, 40, 45, 54, 115, 300, 302], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 72, 75, 87, 93, 98, 105, 108, 116, 123, 136, 137, 142, 144, 152, 169, 170, 278, 286, 287, 288, 291, 294, 296, 297, 298, 300, 309], "gymlikeenv": [0, 300], "envmetadata": [0, 300], "vector": [0, 1, 8, 24, 27, 33, 82, 88, 89, 107, 155, 157, 168, 246, 249, 259, 260, 261, 262, 263, 300, 306, 307, 309, 311, 312, 313, 314, 318], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 88, 89, 98, 122, 162, 171, 172, 182, 198, 199, 200, 201, 205, 206, 279, 300, 307, 309, 318], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 68, 71, 75, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 95, 98, 103, 105, 107, 108, 112, 115, 116, 119, 123, 125, 129, 137, 148, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 172, 180, 181, 182, 184, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 217, 218, 220, 221, 223, 229, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 291, 294, 298, 300, 302, 303, 304, 306, 307, 308, 311, 312, 314, 315, 317, 318], "record": [0, 32, 71, 75, 87, 93, 115, 233, 264, 265, 266, 267, 268, 269, 270, 271, 272, 294, 300, 307, 308], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 75, 87, 93, 107, 133, 148, 193, 199, 200, 204, 205, 206, 207, 208, 209, 210, 300, 308, 309, 312, 313, 317, 318], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 71, 75, 82, 83, 87, 93, 104, 107, 115, 121, 122, 132, 133, 136, 137, 139, 141, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 244, 246, 247, 248, 249, 250, 282, 289, 290, 294, 300, 303, 304, 307, 308, 311, 312, 313, 314, 315, 318], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 68, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 151, 152, 161, 162, 166, 167, 169, 170, 181, 182, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 264, 273, 277, 278, 279, 281, 282, 291, 300, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 318], "actor": [0, 3, 4, 15, 21, 115, 152, 154, 155, 157, 162, 163, 170, 180, 182, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 244, 291, 300, 303, 307, 308, 309, 312, 314, 317], "explor": [0, 1, 143, 175, 193, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 217, 278, 287, 288, 294, 300, 308, 309, 312, 313], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 93, 99, 100, 101, 103, 105, 107, 108, 116, 117, 121, 122, 125, 126, 128, 133, 134, 136, 137, 141, 142, 148, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 181, 182, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 273, 275, 276, 277, 278, 279, 282, 291, 294, 300, 304, 307, 311, 312, 313, 315, 317, 318], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 104, 106, 115, 117, 123, 128, 129, 136, 160, 171, 172, 179, 193, 204, 208, 212, 213, 234, 240, 246, 251, 259, 268, 282, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "hook": [0, 32, 71, 75, 87, 93, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 182, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 300], "planner": [0, 152, 170, 300], "sac": [0, 223, 234, 236, 300], "redq": [0, 234, 290, 291, 300], "iql": [0, 229, 300, 312], "cql": [0, 218, 300], "dt": [0, 203, 300, 313], "td3": [0, 238, 300], "a2c": [0, 217, 300], "dreamer": [0, 97, 163, 225, 226, 227, 300, 302], "checkpoint": [0, 300, 314], "builder": [0, 300, 307, 318], "logger": [0, 265, 267, 268, 269, 270, 271, 272, 276, 282, 294, 298, 300, 307], "_util": [0, 3, 11, 300], "implement_for": [0, 3, 300], "contribut": 0, "thing": [0, 3, 7, 8, 301, 308, 309, 312, 315, 318], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 71, 75, 87, 93, 107, 142, 160, 187, 301, 306, 313, 315], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 72, 75, 82, 84, 86, 87, 88, 89, 93, 98, 100, 104, 105, 107, 108, 115, 116, 117, 121, 122, 128, 132, 133, 136, 137, 139, 141, 142, 149, 150, 152, 162, 168, 169, 170, 171, 172, 174, 182, 188, 204, 207, 208, 210, 214, 219, 221, 224, 230, 233, 239, 244, 245, 246, 247, 248, 249, 264, 265, 279, 298, 301, 302, 304, 306, 307, 308, 309, 312, 313, 314, 315, 318], "debug": [0, 6, 8, 40, 301, 318], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 71, 75, 79, 87, 93, 101, 115, 121, 139, 142, 153, 168, 200, 206, 211, 219, 230, 233, 282, 301, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "habitat": [0, 3, 77, 301, 314], "lab": [0, 3, 69, 70, 301], "mujoco": [0, 6, 8, 90, 301, 308, 309], "error": [0, 1, 3, 7, 10, 11, 29, 32, 71, 75, 87, 93, 96, 122, 144, 301, 306, 308, 312, 318], "solut": [0, 3, 6, 7, 9, 21, 301, 302, 304, 317], "resourc": [0, 1, 21, 301, 306, 308, 312], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 71, 75, 87, 88, 93, 196, 231, 236, 246, 249, 301, 302, 306, 308, 309, 312, 313, 314, 318], "issu": [0, 4, 5, 8, 55, 56, 65, 79, 122, 193, 199, 200, 204, 205, 206, 207, 208, 301, 317], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 71, 75, 87, 93, 100, 107, 151, 171, 172, 311, 312, 315, 317], "search": [0, 307], "page": [0, 7], "somewhat": [1, 303, 318], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 71, 75, 87, 93, 106, 137, 162, 182, 199, 200, 205, 206, 233, 279, 317, 318], "dataload": [1, 54, 62, 307, 308, 315], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 110, 125, 166, 179, 197, 201, 203, 302, 307, 315, 317, 318], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 112, 115, 116, 117, 119, 121, 122, 123, 125, 132, 133, 134, 135, 136, 137, 139, 141, 142, 148, 151, 152, 153, 154, 155, 156, 158, 159, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 214, 217, 218, 219, 220, 221, 223, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 260, 261, 263, 273, 278, 279, 280, 291, 294, 298, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 82, 87, 88, 89, 93, 110, 115, 121, 136, 137, 141, 166, 167, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 279, 282, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 90, 100, 117, 121, 141, 144, 203, 218, 220, 223, 234, 236, 238, 273, 279, 282, 284, 285, 286, 294, 304, 306, 309, 312, 313, 314, 315, 317, 318], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 71, 75, 87, 93, 107, 117, 134, 151, 191, 210, 224, 226, 231, 252, 285, 304, 306, 307, 308, 312, 313, 318], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 88, 89, 93, 99, 104, 111, 121, 133, 136, 137, 138, 139, 141, 151, 166, 207, 208, 217, 218, 220, 221, 223, 224, 225, 226, 229, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 302, 306, 309, 312, 313, 315, 318], "static": [1, 11, 40, 45, 142, 229, 313, 315], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 71, 72, 75, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 101, 104, 105, 106, 107, 108, 115, 117, 119, 121, 125, 133, 136, 137, 139, 141, 142, 148, 153, 154, 155, 156, 157, 159, 162, 164, 166, 167, 168, 171, 172, 173, 176, 180, 191, 198, 199, 200, 201, 203, 207, 211, 212, 217, 218, 219, 220, 223, 229, 230, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 273, 302, 303, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 71, 75, 77, 82, 87, 88, 89, 93, 132, 135, 144, 173, 202, 234, 303, 306, 308, 309, 312, 313, 314, 315, 318], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 71, 75, 87, 93, 105, 107, 108, 116, 123, 137, 149, 150, 166, 201, 203, 219, 230, 233, 265, 279, 284, 296, 297, 298, 302, 306, 307, 308, 309, 312, 313, 315], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 71, 75, 79, 84, 87, 88, 89, 93, 100, 104, 121, 133, 135, 136, 137, 139, 141, 142, 144, 153, 166, 172, 173, 175, 181, 190, 194, 196, 197, 200, 201, 204, 207, 208, 211, 218, 229, 231, 236, 246, 247, 248, 249, 250, 291, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 71, 75, 83, 87, 93, 100, 104, 111, 121, 128, 133, 136, 137, 138, 139, 141, 191, 207, 208, 209, 231, 304, 308, 318], "two": [1, 3, 4, 8, 10, 32, 62, 71, 75, 87, 93, 117, 121, 141, 158, 166, 185, 208, 230, 241, 278, 282, 291, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318], "main": [1, 2, 3, 5, 20, 22, 72, 208, 282, 302, 303, 306, 307, 311, 318], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 71, 75, 84, 87, 88, 93, 103, 104, 121, 133, 136, 137, 139, 141, 151, 153, 166, 168, 171, 172, 173, 174, 191, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 217, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 244, 246, 247, 248, 249, 250, 264, 275, 285, 291, 294, 295, 298, 306, 307, 308, 309, 312, 313, 315, 318], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 71, 75, 83, 87, 88, 89, 93, 96, 103, 105, 108, 115, 117, 119, 121, 128, 137, 139, 141, 142, 151, 161, 166, 168, 171, 172, 177, 182, 200, 205, 206, 208, 210, 211, 212, 231, 243, 246, 249, 264, 278, 279, 296, 297, 302, 306, 308, 311, 313, 314, 315, 317, 318], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 136, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 291, 295, 298, 302, 306, 307, 308, 312, 315], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 71, 75, 87, 93, 109, 117, 129, 153, 168, 173, 186, 193, 199, 204, 205, 207, 209, 210, 212, 231, 243, 278, 281, 282, 291, 303, 304, 306, 308, 309, 312, 313], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 71, 72, 75, 79, 83, 84, 87, 93, 98, 133, 166, 201, 209, 210, 286, 298, 302, 304, 307, 308, 309, 312, 315, 316, 318], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 68, 71, 72, 75, 81, 83, 87, 88, 89, 93, 98, 111, 114, 116, 117, 131, 132, 133, 134, 137, 151, 152, 163, 166, 167, 169, 170, 197, 201, 203, 204, 208, 217, 225, 233, 245, 246, 247, 248, 249, 252, 253, 254, 264, 273, 278, 282, 304, 306, 307, 309, 311, 313, 314, 315, 317], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 71, 75, 87, 93, 121, 136, 139, 142, 210, 306, 313, 317], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 71, 75, 87, 93, 122, 132, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 221, 231, 246, 247, 248, 249, 250, 264, 295, 306, 307, 309, 313, 315, 318], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 71, 75, 83, 84, 86, 87, 88, 89, 93, 100, 107, 112, 116, 117, 127, 131, 134, 142, 152, 153, 160, 161, 163, 164, 165, 166, 168, 170, 173, 176, 177, 178, 181, 183, 184, 187, 188, 189, 190, 193, 197, 198, 201, 203, 204, 207, 208, 212, 216, 218, 223, 225, 229, 230, 232, 234, 236, 238, 273, 275, 278, 282, 284, 285, 286, 296, 297, 298, 302, 306, 307, 308, 309, 312, 313, 314, 318], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 71, 75, 87, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 119, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 166, 168, 174, 175, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 247, 248, 249, 279, 306, 308, 309, 312, 313, 315, 318], "deliv": [1, 16, 18, 19, 20, 306, 307, 317], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 71, 75, 82, 87, 88, 89, 93, 142, 166, 209, 210, 264, 273, 302, 307, 311, 313, 317], "user": [1, 2, 3, 5, 8, 21, 32, 52, 71, 75, 87, 93, 132, 137, 159, 167, 233, 295, 303, 304, 306, 307, 313, 317, 318], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 68, 71, 72, 75, 81, 82, 83, 84, 86, 87, 88, 89, 93, 98, 100, 104, 109, 111, 114, 116, 121, 128, 129, 131, 132, 133, 134, 136, 139, 140, 142, 144, 166, 192, 203, 264, 291, 306, 307, 308, 309, 311, 312, 317], "whenev": [1, 3, 32, 35, 38, 41, 42, 114, 137, 231, 246, 247, 248, 249, 284, 302], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 71, 75, 87, 93, 197, 201, 203, 306, 308, 312, 317, 318], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 105, 106, 108, 116, 117, 119, 123, 125, 127, 129, 131, 133, 136, 142, 151, 152, 166, 170, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 291, 303, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 68, 71, 75, 81, 83, 87, 88, 89, 91, 92, 93, 98, 100, 101, 103, 104, 109, 114, 117, 123, 129, 131, 132, 136, 137, 140, 142, 151, 152, 154, 159, 163, 166, 167, 168, 170, 177, 180, 181, 183, 184, 190, 194, 207, 213, 217, 219, 230, 231, 233, 234, 235, 244, 245, 246, 247, 248, 249, 250, 252, 298, 302, 303, 306, 307, 308, 309, 312, 313, 318], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 71, 75, 79, 87, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 119, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 151, 166, 174, 197, 199, 201, 205, 226, 306, 307, 308, 309, 312, 313, 314, 315, 318], "predefin": [1, 307, 308, 315], "becaus": [1, 3, 4, 7, 40, 71, 75, 87, 93, 115, 136, 158, 167, 173, 193, 199, 200, 204, 205, 206, 207, 208, 306, 307, 309, 311, 312, 313, 315, 318], "potenti": [1, 313, 315], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 71, 75, 87, 93, 117, 137, 140, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 183, 184, 186, 188, 189, 191, 194, 197, 198, 200, 201, 203, 204, 206, 208, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 286, 303, 306, 308, 309, 311, 312, 314, 315], "heavi": [1, 8, 315], "crucial": [1, 197, 201, 203, 229, 231, 306, 307, 308, 309, 312, 313, 318], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 115, 154, 159, 180, 231, 233, 291, 302, 306, 307, 308, 312, 313], "hyperparamet": [1, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 306, 313, 315], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 133, 295, 298, 306, 315], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 69, 70, 71, 72, 75, 83, 84, 86, 87, 88, 89, 90, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 294, 295, 296, 297, 298, 302, 303, 306, 309, 312, 313, 314, 317], "take": [1, 3, 8, 23, 40, 71, 75, 87, 93, 103, 131, 132, 134, 136, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 202, 203, 206, 211, 214, 216, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 284, 302, 304, 306, 307, 308, 312, 313, 315, 318], "consider": [1, 3, 8, 307, 312, 315], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 83, 87, 88, 89, 90, 93, 105, 108, 132, 137, 153, 166, 168, 212, 218, 219, 220, 221, 223, 224, 230, 231, 233, 234, 236, 238, 244, 246, 249, 306, 307, 308, 312, 313, 318], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 71, 75, 82, 83, 87, 88, 89, 90, 93, 100, 103, 104, 106, 111, 115, 117, 122, 123, 125, 128, 129, 131, 132, 136, 137, 142, 144, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 204, 206, 207, 208, 211, 214, 223, 228, 230, 231, 233, 234, 237, 245, 246, 247, 248, 249, 250, 265, 277, 278, 279, 282, 294, 296, 297, 298, 302, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "occur": [1, 8, 14, 28, 29, 101, 117, 122, 193, 199, 200, 204, 205, 206, 207, 208, 226, 315, 318], "serial": [1, 3, 32, 71, 75, 87, 93, 142], "optim": [1, 2, 8, 32, 71, 75, 87, 93, 137, 152, 170, 174, 175, 218, 231, 232, 233, 236, 277, 282, 294, 303, 304, 308, 309, 312, 313], "parallel": [1, 3, 8, 17, 88, 89, 144, 217, 295, 296, 297, 298, 307, 308, 312], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 100, 125, 294, 297, 300, 308, 309, 312, 315], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 75, 77, 82, 83, 87, 88, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 296, 297, 298, 302, 303, 304, 306, 307, 308, 309, 312, 315, 318], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 72, 84, 87, 93, 142, 296, 297, 298, 306, 308, 317, 318], "multisyncdatacollector": [1, 18, 19, 20, 21, 297, 300, 308, 317], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 82, 88, 89, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 302, 304, 308, 315, 317], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 79, 142, 203, 284, 302, 306, 312, 313], "aggreg": [1, 153, 155, 156, 210], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 71, 72, 75, 87, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 119, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 151, 166, 168, 182, 198, 200, 201, 206, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 246, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 284, 302, 307, 309, 313, 314, 317, 318], "final": [1, 3, 4, 21, 34, 36, 39, 40, 166, 197, 201, 202, 203, 209, 246, 278, 302, 306, 307, 308, 312, 313, 318], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 296, 300, 306, 307, 308, 317], "sever": [1, 8, 30, 32, 45, 71, 75, 87, 93, 101, 103, 137, 233, 306, 308, 315, 318], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 65, 71, 75, 83, 84, 86, 87, 93, 100, 111, 117, 119, 122, 125, 133, 137, 138, 142, 160, 161, 166, 167, 171, 172, 173, 174, 179, 181, 187, 191, 203, 207, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 273, 276, 279, 280, 281, 282, 284, 296, 297, 298, 304, 307, 308, 309, 311, 312, 314, 317, 318], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 65, 122, 172, 179, 245, 286, 301, 306, 307, 308, 309, 312, 313, 315, 318], "continu": [1, 9, 25, 46, 71, 75, 87, 88, 89, 93, 148, 155, 156, 157, 158, 203, 210, 217, 218, 223, 229, 233, 234, 235, 236, 237, 238, 246, 251, 259, 302, 306, 308, 309, 312, 313, 315, 317], "concomitantli": 1, "network": [1, 4, 8, 32, 71, 75, 82, 87, 88, 89, 93, 153, 155, 156, 157, 158, 161, 163, 164, 168, 173, 175, 177, 178, 181, 183, 184, 185, 190, 194, 195, 196, 207, 211, 218, 219, 220, 221, 223, 224, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 242, 244, 246, 247, 248, 249, 250, 293, 294, 302, 303, 304, 311, 313, 318], "impli": [1, 318], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 71, 75, 87, 91, 92, 93, 104, 121, 133, 136, 137, 139, 141, 166, 175, 207, 217, 218, 219, 223, 226, 284, 293, 302, 304, 306, 307, 308, 309, 311, 313, 315, 317], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 71, 75, 87, 93, 115, 117, 129, 137, 138, 142, 144, 168, 303, 304, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "slightli": [1, 302, 303, 309, 313, 314, 315, 318], "lag": [1, 13, 14, 16, 17, 306, 307, 308], "therefor": [1, 3, 7, 71, 75, 87, 93, 125, 132, 233, 244, 318], "although": [1, 8, 71, 75, 87, 93, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 304, 306, 307, 315], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 71, 75, 82, 83, 86, 87, 88, 89, 93, 98, 100, 115, 121, 128, 131, 134, 136, 138, 141, 151, 171, 172, 197, 201, 203, 204, 207, 208, 216, 217, 218, 219, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 303, 304, 306, 307, 308, 311, 312, 313, 315, 318], "asynchron": [1, 9, 14, 21, 32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207, 217, 296, 307, 308], "off": [1, 2, 4, 165, 189, 199, 236, 278, 287, 302, 304, 306, 307, 308, 312, 314, 318], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 71, 75, 87, 88, 89, 93, 105, 108, 111, 117, 132, 162, 166, 173, 174, 194, 196, 198, 200, 205, 217, 224, 229, 233, 278, 302, 304, 306, 307, 308, 309, 312, 313, 314, 315, 318], "remot": [1, 18, 19, 20, 21, 87, 93, 318], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 71, 75, 78, 83, 84, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 103, 105, 108, 115, 119, 123, 144, 152, 166, 170, 203, 217, 286, 302, 306, 307, 308, 309, 314, 315, 317], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 129, 234, 246, 247, 248, 249, 250, 303, 306, 308], "synchronis": [1, 72, 312], "either": [1, 5, 22, 32, 40, 54, 71, 75, 87, 93, 132, 213, 238, 269, 304, 306, 307, 309, 314, 315, 317, 318], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 306, 312, 317], "update_at_each_batch": [1, 13, 14, 17, 306], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 104, 107, 111, 114, 115, 116, 117, 121, 122, 123, 127, 131, 133, 135, 136, 137, 138, 139, 141, 142, 144, 148, 151, 152, 153, 155, 156, 157, 158, 164, 166, 168, 170, 171, 172, 173, 174, 175, 188, 189, 193, 194, 195, 196, 197, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 246, 247, 248, 249, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 275, 276, 278, 279, 282, 298, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "second": [1, 8, 166, 200, 219, 230, 233, 236, 281, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 68, 71, 73, 75, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 104, 105, 106, 108, 115, 119, 120, 121, 123, 125, 133, 135, 136, 137, 139, 141, 148, 151, 152, 153, 154, 155, 156, 157, 158, 162, 164, 166, 167, 168, 170, 173, 174, 175, 180, 181, 182, 190, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 210, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 279, 284, 291, 292, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 71, 75, 87, 93, 111, 115, 136, 161, 162, 176, 194, 195, 196, 199, 200, 202, 207, 213, 217, 219, 220, 221, 224, 230, 233, 235, 244, 245, 246, 247, 248, 249, 282, 291, 300, 304, 306, 307, 308, 309, 311, 312, 313, 318], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 70, 71, 72, 75, 83, 87, 93, 100, 117, 133, 136, 142, 148, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 169, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 214, 221, 223, 231, 244, 246, 247, 248, 249, 265, 269, 278, 286, 287, 288, 291, 294, 296, 297, 302, 303, 304, 306, 308, 309, 313, 315, 318], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 104, 105, 106, 108, 119, 121, 123, 125, 133, 136, 137, 139, 141, 148, 151, 152, 166, 170, 174, 175, 181, 182, 190, 193, 194, 195, 196, 198, 199, 200, 204, 205, 206, 207, 210, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 279, 291, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 71, 75, 79, 87, 93, 123, 158, 166, 168, 176, 191, 193, 197, 199, 207, 212, 231, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 301, 303, 306, 307, 308, 312, 313, 315, 317, 318], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 71, 72, 75, 79, 82, 86, 87, 88, 89, 93, 98, 100, 103, 105, 106, 107, 108, 116, 117, 121, 130, 136, 137, 138, 141, 142, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 173, 176, 177, 178, 179, 180, 182, 183, 184, 186, 191, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 244, 246, 247, 248, 249, 253, 254, 275, 277, 278, 282, 286, 291, 298, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 78, 79, 87, 93, 104, 115, 120, 121, 133, 136, 137, 139, 141, 207, 274, 306, 307, 308, 309, 312, 314, 318], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 87, 93, 101, 103, 107, 116, 128, 136, 142, 166, 167, 174, 175, 193, 199, 204, 205, 207, 208, 211, 219, 223, 230, 233, 234, 238, 252, 291, 298, 302, 304, 306, 307, 308, 312, 313, 315, 317], "infer": [1, 87, 93, 100, 132, 142, 166, 174, 198, 306, 308, 315], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 69, 70, 71, 75, 83, 87, 93, 116, 117, 137, 142, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 209, 210, 211, 214, 278, 296, 297, 298, 301, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317], "dispatch": [1, 18, 19, 20, 21, 191], "avail": [1, 3, 4, 6, 21, 62, 79, 88, 89, 115, 162, 182, 204, 208, 231, 296, 297, 302, 306, 307, 308, 309, 312, 313, 315, 318], "speed": [1, 2, 4, 8, 27, 303, 306, 307, 308, 309, 312, 313, 315], "up": [1, 2, 3, 8, 9, 27, 40, 52, 136, 233, 301, 302, 303, 306, 307, 308, 309, 312, 313, 315, 318], "avoid": [1, 32, 55, 56, 65, 71, 75, 87, 93, 137, 142, 193, 207, 212, 219, 230, 233, 285, 308, 312], "oom": [1, 55, 56, 65], "choic": [1, 2, 52, 176, 302, 303, 306, 307, 312], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 68, 71, 73, 75, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 101, 105, 108, 111, 119, 121, 123, 125, 130, 133, 135, 136, 137, 138, 141, 142, 148, 151, 152, 153, 154, 159, 160, 162, 166, 167, 168, 170, 171, 172, 173, 176, 179, 180, 181, 182, 183, 184, 187, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 212, 217, 218, 220, 221, 223, 229, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 265, 273, 279, 291, 302, 307, 308, 309, 311, 312, 313, 314, 317, 318], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 65, 71, 72, 73, 75, 82, 84, 87, 88, 89, 93, 105, 108, 123, 136, 138, 142, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 174, 176, 177, 178, 180, 181, 183, 184, 186, 190, 191, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 219, 230, 231, 233, 246, 247, 248, 249, 250, 279, 296, 297, 298, 302, 306, 307, 308, 309, 311, 312, 313, 315, 318], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 79, 86, 100, 111, 138, 142, 166, 198, 217, 219, 220, 223, 229, 230, 231, 233, 234, 235, 236, 238, 246, 247, 248, 249, 302, 303, 307, 308, 312, 315], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 71, 75, 87, 93, 142, 152, 167, 170, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 291, 300, 304, 306, 308, 309, 312, 314, 315, 318], "while": [1, 3, 7, 8, 32, 71, 75, 87, 93, 125, 137, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 229, 230, 233, 302, 306, 308, 309, 312, 313, 314, 315, 317], "wait": [1, 20, 21, 22, 309, 313], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 71, 75, 87, 88, 89, 93, 100, 107, 117, 123, 125, 128, 129, 133, 137, 184, 209, 210, 211, 217, 218, 220, 221, 223, 229, 233, 236, 246, 253, 254, 302, 304, 306, 307, 308, 309, 311, 312, 313, 315, 318], "impact": [1, 105, 108, 307, 309, 312], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 71, 72, 75, 79, 87, 93, 100, 104, 121, 133, 136, 137, 139, 141, 142, 207, 298, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "manag": [1, 8, 242, 243, 246, 247, 248, 249, 278], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 71, 75, 87, 93, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 120, 121, 122, 123, 125, 128, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 151, 152, 161, 162, 166, 169, 170, 182, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 265, 276, 277, 278, 280, 281, 282, 286, 291, 303, 304, 306, 308, 309, 311, 312, 313, 315, 317, 318], "control": [1, 3, 5, 8, 16, 69, 70, 82, 88, 89, 107, 151, 155, 156, 157, 158, 166, 169, 170, 184, 191, 203, 207, 208, 209, 217, 219, 230, 233, 237, 246, 251, 259, 302, 304, 306, 307, 308, 312, 313, 315], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 71, 75, 79, 84, 87, 90, 93, 100, 101, 112, 115, 116, 117, 121, 122, 131, 133, 134, 136, 137, 139, 144, 165, 166, 171, 172, 189, 194, 195, 196, 198, 204, 207, 208, 210, 217, 218, 219, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 241, 244, 246, 247, 248, 249, 273, 277, 291, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 306, 307, 312, 317], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 71, 75, 87, 88, 89, 93, 100, 103, 105, 108, 112, 119, 132, 137, 166, 278, 282, 303, 306, 307, 308, 309, 312, 313, 315, 318], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 203, 306, 318], "usual": [1, 3, 4, 6, 7, 8, 52, 71, 75, 87, 93, 175, 233, 246, 247, 248, 249, 250, 264, 291, 301, 302, 304, 306, 307, 308, 309, 312, 315, 318], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 71, 72, 75, 82, 87, 88, 89, 93, 100, 105, 107, 108, 112, 116, 117, 136, 137, 142, 153, 166, 168, 171, 172, 173, 198, 203, 211, 306, 307, 308, 311, 312, 314, 315, 318], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 71, 73, 75, 87, 93, 100, 105, 108, 125, 300, 304, 307, 308, 309, 312, 314], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 69, 71, 75, 86, 87, 88, 89, 90, 93, 98, 100, 101, 107, 111, 115, 116, 117, 119, 121, 122, 125, 127, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 186, 187, 188, 189, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291, 294, 298, 304, 306, 307, 308, 309, 314, 315, 317, 318], "behaviour": [1, 3, 21, 75, 101, 105, 108, 117, 122, 132, 151, 165, 166, 189, 278, 302, 307, 309, 313, 315], "besid": 1, "those": [1, 5, 7, 26, 28, 87, 93, 105, 108, 117, 133, 166, 204, 208, 209, 210, 284, 296, 297, 302, 306, 307, 312, 313, 318], "choos": [1, 82, 166, 233, 302, 303, 306, 307, 308, 312, 315], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 71, 75, 83, 86, 87, 88, 89, 91, 92, 93, 115, 121, 139, 153, 166, 168, 200, 205, 206, 216, 217, 218, 219, 220, 223, 229, 230, 231, 233, 234, 235, 236, 238, 282, 291, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 285, 306, 308, 317], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 100, 112, 197, 201, 203, 264, 265, 275, 278, 282, 285, 286, 306, 307, 308, 309, 312, 315, 317, 318], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 71, 75, 86, 87, 93, 100, 103, 104, 107, 111, 114, 115, 117, 119, 120, 121, 128, 131, 133, 136, 137, 139, 141, 142, 144, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 170, 173, 174, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 207, 208, 210, 211, 214, 219, 230, 233, 245, 246, 247, 248, 249, 264, 278, 304, 307, 308, 309, 312, 313, 315, 318], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 100, 125, 285, 306, 307, 308, 309, 312, 315, 317], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 71, 72, 75, 87, 88, 89, 93, 121, 128, 131, 132, 133, 134, 141, 142, 162, 166, 173, 177, 181, 182, 190, 197, 199, 200, 201, 206, 210, 252, 255, 256, 257, 258, 260, 261, 262, 263, 278, 279, 296, 297, 302, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 285, 306, 307], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 71, 75, 83, 87, 93, 107, 116, 117, 133, 144, 166, 201, 204, 207, 208, 218, 234, 278, 286, 302, 306, 307, 308, 309, 313, 314, 315, 317, 318], "rand_step": [1, 3, 67, 69, 70, 71, 72, 74, 75, 76, 80, 83, 84, 87, 93, 114, 133, 142, 313, 317, 318], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 306], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 306, 307, 308], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 71, 75, 87, 93, 122, 136, 152, 166, 170, 203, 233, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 300, 303, 306, 307, 308, 309, 313, 315, 317, 318], "pad": [1, 23, 37, 43, 52, 100, 153, 155, 156, 166, 167, 171, 172, 279], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 100, 101, 117, 119, 122, 128, 135, 166, 168, 171, 172, 175, 199, 204, 207, 208, 231, 302, 306, 307, 309, 312, 313, 315], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 71, 75, 87, 93, 100, 104, 121, 133, 135, 136, 137, 139, 141, 169, 207, 216, 224, 282, 301, 307, 308, 311, 312, 313, 315, 318], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 75, 122, 171, 172, 197, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 304, 309], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 71, 75, 87, 93, 112, 122, 142, 162, 171, 172, 182, 199, 200, 205, 206, 208, 241, 246, 279, 306, 308, 309, 312], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 96, 122, 137, 153, 168, 171, 172, 197, 203, 230, 246, 247, 248, 249, 279, 304, 318], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 278, 300, 306, 307], "strategi": [1, 16, 82, 172, 179, 201, 302, 304, 306, 307, 312, 315], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 71, 75, 87, 93, 121, 141, 302, 303, 306, 308, 312, 313, 315, 318], "tool": [1, 2, 3, 5, 309, 313, 315, 318], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 304, 306, 308, 309, 313], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 300], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 300], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 101, 104, 105, 106, 107, 108, 115, 117, 119, 121, 123, 125, 127, 132, 133, 135, 136, 137, 139, 141, 142, 148, 151, 152, 153, 154, 159, 160, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 252, 273, 280, 281, 291, 294, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "multiprocess": [1, 3, 18, 19, 20, 72, 73, 142, 307, 308, 313, 318], "synchron": [1, 13, 19, 21, 84, 296, 297, 307, 308], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 84, 87, 93, 105, 108, 132, 137, 142, 145, 149, 150, 160, 165, 166, 179, 187, 188, 189, 204, 208, 231, 278, 306, 307, 309, 312, 317, 318], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 197, 203, 276, 280, 306, 307, 312], "dedic": [1, 3, 18, 19, 20, 21, 194, 195, 196, 302, 306, 311, 312], "folder": [1, 307], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 71, 75, 87, 93, 122, 209, 210, 273, 282, 302, 306, 307, 308, 311, 317, 318], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 71, 72, 75, 83, 87, 88, 89, 93, 96, 100, 103, 104, 105, 106, 108, 110, 115, 116, 117, 121, 128, 133, 134, 136, 137, 139, 141, 142, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 207, 208, 210, 211, 214, 226, 231, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 277, 282, 285, 296, 297, 298, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318], "variou": [1, 3, 13, 14, 16, 17, 166, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 239, 244, 296, 297, 306, 307, 308, 312, 318], "machin": [1, 7, 18, 19, 20, 32, 53, 79, 312], "One": [1, 2, 4, 8, 31, 33, 45, 100, 125, 139, 179, 197, 207, 211, 237, 241, 269, 306, 307, 315, 318], "wonder": 1, "why": [1, 3, 313, 318], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 84, 88, 89, 93, 295, 300, 306, 307, 308, 311, 317, 318], "instead": [1, 4, 7, 8, 11, 27, 32, 71, 75, 87, 93, 111, 133, 137, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 217, 218, 219, 221, 223, 224, 229, 230, 233, 234, 235, 236, 244, 246, 250, 298, 302, 313, 315, 318], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 71, 75, 87, 88, 89, 93, 104, 105, 106, 108, 121, 129, 132, 133, 135, 136, 137, 139, 141, 165, 168, 184, 188, 189, 207, 210, 216, 217, 218, 220, 221, 223, 229, 231, 233, 234, 235, 236, 238, 284, 296, 297, 298, 302, 303, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318], "lower": [1, 2, 17, 21, 25, 103, 142, 183, 184, 211, 308, 313], "io": [1, 84], "footprint": [1, 2, 315], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 63, 71, 75, 79, 82, 87, 88, 89, 93, 100, 103, 111, 121, 123, 137, 141, 142, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 174, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 205, 206, 207, 211, 214, 216, 223, 234, 235, 236, 238, 245, 250, 265, 282, 298, 302, 303, 306, 307, 308, 309, 312, 313, 315, 317, 318], "commun": [1, 2, 3, 301, 308, 318], "yet": [1, 231, 314], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 71, 73, 75, 83, 87, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 119, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 148, 162, 182, 184, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 291, 302, 306, 307, 308, 309, 311, 312, 317], "plai": [1, 3, 88, 89, 100, 307, 308, 315, 318], "role": [1, 3, 307, 318], "opposit": 1, "direct": [1, 32, 71, 75, 87, 93, 231, 307], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 71, 75, 87, 88, 89, 93, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 199, 200, 201, 203, 205, 206, 211, 214, 306, 307, 308, 309, 313, 314, 315, 317, 318], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 84, 246, 247, 248, 249, 309, 312], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 72, 87, 93, 142, 166, 173, 194, 195, 196, 217, 219, 220, 223, 229, 230, 233, 234, 235, 236, 238, 298, 302, 308, 309, 311, 312, 317, 318], "among": [1, 3, 88, 89, 312], "achiev": [1, 3, 4, 32, 71, 75, 79, 87, 93, 132, 279, 304, 306, 307, 308, 309, 312, 313, 318], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 52, 53, 87, 121, 136, 141, 222, 231, 303, 304, 306, 307, 308, 309, 315, 318], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 278, 303, 306, 308, 312, 315, 318], "gpu": [1, 7, 8, 32, 55, 56, 65, 71, 75, 79, 87, 93, 306, 308, 309, 312, 318], "nativ": [1, 7, 9, 71, 75, 87, 93, 100, 309, 315], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 165, 188, 189, 216, 301, 306, 307, 308, 309, 312, 314, 318], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 117, 142, 152, 160, 163, 166, 167, 170, 187, 197, 204, 208, 231, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 302, 303, 306, 307, 308, 312, 313, 315, 317, 318], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 71, 75, 87, 93, 103, 104, 121, 133, 136, 137, 139, 141, 166, 171, 172, 193, 197, 198, 199, 201, 203, 204, 205, 207, 208, 211, 217, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 244, 246, 247, 248, 249, 250, 295, 306, 307, 308, 312, 315, 318], "build": [1, 3, 7, 23, 26, 32, 71, 75, 87, 90, 93, 142, 152, 166, 170, 202, 204, 208, 282, 289, 290, 292, 293, 302, 304, 308, 309, 312, 313, 314, 317, 318], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 71, 75, 83, 87, 93, 104, 107, 117, 121, 133, 136, 137, 139, 141, 151, 152, 162, 163, 170, 182, 186, 193, 199, 200, 201, 203, 206, 207, 208, 209, 210, 212, 216, 220, 221, 245, 246, 247, 248, 249, 250, 252, 274, 278, 294, 302, 304, 306, 307, 308, 312, 313, 318], "mani": [1, 3, 4, 38, 71, 217, 219, 223, 230, 233, 234, 238, 302, 306, 307, 308, 312, 313, 315, 318], "eg": [1, 3, 11, 55, 56, 57, 63, 65, 79, 107, 198], "gymnasium": [1, 3, 5, 11, 307, 308, 313, 317], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 71, 75, 83, 87, 93, 103, 106, 107, 129, 135, 139, 142, 166, 175, 176, 198, 200, 201, 206, 208, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 246, 279, 291, 296, 297, 302, 304, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "warn": [1, 3, 197, 201, 203, 307, 318], "quickli": [1, 3, 307, 312, 318], "becom": [1, 3, 4, 21, 312, 318], "quit": [1, 3, 302, 306, 307, 308, 312, 318], "annoi": [1, 3], "By": [1, 2, 3, 33, 71, 75, 87, 88, 89, 93, 191, 208, 231, 278, 298, 306, 314, 315, 318], "filter": [1, 3, 4, 45, 217, 218, 220, 223, 229, 233, 234, 236], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 71, 75, 87, 88, 89, 93, 133, 144, 171, 172, 174, 175, 193, 198, 199, 200, 203, 204, 205, 206, 207, 208, 242, 243, 304, 306, 307, 308, 309, 312, 313, 315, 317, 318], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 71, 72, 75, 79, 83, 87, 88, 89, 93, 101, 102, 103, 105, 106, 107, 108, 109, 111, 115, 116, 117, 121, 122, 128, 129, 133, 136, 137, 139, 141, 142, 151, 153, 166, 167, 168, 171, 172, 173, 191, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 260, 261, 262, 263, 277, 279, 282, 284, 286, 291, 294, 298, 301, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318], "still": [1, 3, 9, 131, 197, 230, 231, 306, 307, 309, 311, 313, 315, 318], "wish": [1, 3, 315], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 71, 75, 78, 84, 87, 88, 89, 93, 104, 121, 133, 135, 136, 137, 139, 141, 143, 153, 165, 168, 173, 174, 181, 189, 190, 194, 196, 207, 208, 279, 306, 307, 308, 309, 312, 313, 315, 318], "displai": [1, 3, 7, 282, 304, 306, 307, 312, 313], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 69, 71, 72, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 101, 104, 105, 108, 111, 114, 115, 116, 117, 119, 121, 122, 123, 125, 127, 133, 135, 136, 137, 138, 139, 141, 142, 144, 151, 152, 153, 155, 162, 165, 166, 168, 170, 171, 172, 173, 181, 182, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 217, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 244, 246, 247, 248, 249, 255, 256, 257, 258, 260, 261, 262, 263, 275, 276, 278, 279, 280, 282, 291, 298, 302, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317], "central": [2, 306, 307, 312, 315], "part": [2, 4, 8, 32, 40, 71, 75, 87, 93, 117, 125, 128, 166, 212, 273, 298, 306, 308, 309, 313, 318], "algorithm": [2, 3, 8, 9, 13, 14, 83, 112, 217, 233, 234, 235, 236, 273, 287, 300, 303, 304, 306, 307, 308, 309, 312, 314, 315, 317], "implement": [2, 3, 9, 11, 16, 32, 63, 71, 75, 84, 87, 93, 104, 106, 115, 123, 136, 142, 165, 187, 188, 189, 217, 218, 222, 229, 231, 232, 233, 236, 291, 302, 304, 306, 307, 308, 309, 313, 317], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 52, 62, 71, 72, 75, 79, 87, 93, 100, 115, 121, 123, 133, 139, 142, 152, 166, 167, 173, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "give": [2, 7, 41, 71, 75, 83, 87, 93, 100, 301, 303, 306, 307, 312, 313, 314, 317], "abil": [2, 231, 313, 315], "veri": [2, 3, 307, 313, 315, 317, 318], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 71, 75, 83, 86, 87, 93, 100, 122, 125, 145, 146, 149, 150, 152, 160, 165, 170, 171, 172, 179, 180, 183, 188, 189, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 217, 218, 219, 220, 221, 230, 232, 233, 238, 273, 279, 282, 285, 302, 306, 307, 308, 309, 312, 314, 317, 318], "latenc": 2, "especi": [2, 3, 7, 8, 101], "larger": [2, 4, 229], "volum": 2, "lazymemmapstorag": [2, 100, 300, 306, 307, 309, 314, 315], "advis": [2, 318], "due": [2, 3, 5, 314, 315, 318], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 314, 315], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 71, 75, 87, 93, 183, 184, 231, 250, 306, 307, 309, 314, 315, 317, 318], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 71, 75, 87, 88, 89, 93, 105, 106, 108, 128, 130, 132, 138, 152, 207, 208, 231, 237, 302, 306, 307, 308, 309], "file": [2, 6, 7, 8, 264, 304, 306, 307, 315, 316, 318], "locat": [2, 7, 45, 75, 117, 127, 165, 176, 188, 189, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 306, 307, 308, 312, 315], "improv": [2, 4, 112, 217, 303, 312, 315], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 300, 315], "were": [2, 7, 87, 93, 308, 315], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 71, 75, 79, 87, 93, 98, 142, 201, 204, 208, 230, 231, 233, 306, 307, 309], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 79, 84, 88, 89, 90, 100, 121, 139, 154, 155, 156, 157, 158, 159, 162, 163, 164, 170, 171, 172, 175, 177, 178, 180, 181, 183, 184, 190, 200, 203, 217, 218, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 246, 251, 259, 291, 314, 317], "github": [2, 5, 6, 7, 10, 18, 19, 20, 88, 89, 90, 139, 314, 317], "com": [2, 5, 6, 7, 10, 18, 19, 20, 79, 88, 89, 90, 314, 317], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 71, 75, 82, 83, 87, 88, 89, 93, 104, 106, 115, 121, 123, 133, 136, 137, 139, 141, 142, 146, 150, 153, 168, 173, 175, 181, 190, 197, 199, 204, 207, 208, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 240, 244, 252, 291, 296, 302, 306, 307, 308, 312, 313, 315, 318], "1x": 2, "lazytensorstorag": [2, 41, 42, 125, 300, 308, 312, 315], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 71, 75, 78, 82, 84, 86, 87, 88, 89, 91, 92, 93, 98, 100, 104, 107, 115, 117, 119, 121, 123, 125, 133, 135, 136, 137, 139, 141, 148, 152, 153, 155, 156, 159, 162, 164, 166, 167, 168, 170, 173, 176, 179, 181, 191, 193, 194, 195, 196, 199, 200, 204, 206, 207, 210, 211, 212, 217, 218, 220, 221, 223, 224, 225, 226, 229, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 252, 255, 256, 257, 258, 260, 261, 262, 263, 265, 281, 302, 304, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 116, 165, 188, 189, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 307, 308, 313, 315, 318], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 86, 100, 122, 153, 193, 197, 199, 207, 208, 212, 273, 306, 308, 315, 318], "pai": [2, 8, 306, 309], "attent": [2, 8, 306, 309], "alwai": [2, 3, 20, 26, 28, 32, 54, 71, 75, 87, 93, 115, 116, 224, 231, 302, 303, 307, 308, 309, 312, 313, 315], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 133, 165, 181, 188, 189, 306, 309, 312, 313, 315, 317], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 93, 100, 101, 111, 117, 119, 122, 130, 135, 138, 142, 153, 154, 159, 166, 168, 171, 172, 174, 175, 180, 181, 185, 186, 187, 188, 191, 199, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 298, 302, 306, 307, 308, 309, 312, 313, 315], "word": [2, 40, 52, 231, 306, 313, 318], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 71, 72, 75, 79, 84, 87, 88, 93, 100, 121, 128, 136, 137, 139, 142, 148, 151, 153, 155, 156, 157, 158, 159, 164, 166, 168, 169, 173, 198, 208, 221, 224, 234, 244, 265, 279, 286, 287, 288, 294, 296, 297, 302, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "1m": [2, 285, 306, 308, 309, 314], "multidimension": [2, 41, 58, 315], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 159, 166, 174, 191, 198, 209, 210, 217, 219, 224, 230, 233, 245, 282, 302, 304, 306, 307, 308, 309, 313, 315, 318], "desir": [2, 3, 32, 71, 75, 87, 93, 104, 117, 119, 121, 122, 133, 136, 137, 139, 141, 149, 150, 153, 168, 173, 193, 199, 200, 204, 205, 206, 207, 208, 302, 306, 312, 313], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 71, 75, 76, 79, 81, 84, 87, 93, 117, 121, 122, 125, 139, 144, 173, 174, 199, 208, 231, 233, 246, 247, 248, 249, 279, 288, 298, 302, 303, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "do": [2, 3, 4, 7, 75, 116, 122, 142, 151, 173, 174, 195, 246, 304, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318], "custom": [2, 3, 5, 32, 71, 75, 87, 93, 139, 173, 211, 224, 233, 239, 298, 302, 306, 307, 308, 309, 312], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 69, 71, 75, 82, 84, 87, 88, 89, 90, 93, 96, 107, 109, 123, 128, 129, 137, 139, 166, 199, 205, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 250, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 291, 304, 306, 307, 308, 309, 312, 313, 318], "randomcroptensordict": [2, 306], "here": [2, 3, 4, 7, 8, 9, 10, 71, 75, 79, 87, 88, 89, 93, 100, 302, 303, 306, 307, 308, 309, 312, 313, 315, 317, 318], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 71, 75, 87, 88, 89, 93, 217, 219, 228, 230, 233, 282, 301, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 67, 68, 69, 70, 74, 76, 77, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 94, 95, 176, 191, 197, 198, 203, 208, 213, 246, 270, 271, 272, 298, 300, 308, 309, 312, 314, 318], "around": [2, 5, 7, 15, 17, 41, 42, 83, 208, 246, 306, 307, 312, 318], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 100, 144, 218, 229, 304, 314, 315, 317], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 71, 75, 87, 93, 109, 128, 129, 151, 154, 155, 156, 157, 158, 164, 175, 180, 203, 207, 208, 209, 210, 217, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 298, 304, 306, 311, 312, 315, 317], "replaybuff": [2, 41, 42, 66, 100, 122, 125, 221, 224, 244, 292, 294, 300, 308, 312, 314, 315, 317], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 122, 221, 224, 244, 300, 306, 308, 312, 315], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 71, 75, 82, 87, 88, 89, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 119, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 142, 148, 162, 176, 193, 194, 195, 196, 199, 204, 205, 207, 208, 210, 211, 212, 213, 244, 278, 300, 302, 303, 306, 307, 308, 309, 314], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 68, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 101, 104, 105, 107, 108, 111, 114, 117, 119, 121, 122, 123, 125, 127, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 217, 218, 220, 221, 223, 226, 227, 229, 231, 233, 234, 235, 236, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 291, 302, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 71, 75, 87, 93, 123, 133, 151, 168, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 239, 241, 244, 302, 304, 306, 307, 308, 309, 312, 313, 315, 318], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 88, 89, 91, 92, 282, 301, 308, 309, 312, 318], "respons": [2, 3, 8, 282, 318], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 115, 194, 195, 196, 207, 229, 291, 300, 306, 313, 317], "repositori": [2, 7, 53], "latest": [2, 3, 10, 84, 88, 89, 279, 308, 312, 313, 317], "wheel": [2, 308], "publish": 2, "pypi": [2, 317], "openml": [2, 53, 86], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 71, 75, 79, 84, 87, 90, 93, 104, 121, 133, 136, 137, 139, 141, 168, 191, 207, 209, 210, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 302, 304, 306, 307, 308, 309, 312, 313, 315, 318], "parent": [2, 3, 21, 26, 28, 44, 71, 101, 104, 106, 111, 112, 117, 121, 133, 136, 138, 139, 194, 231, 233, 250, 306, 313, 317, 318], "subclass": [2, 3, 71, 75, 87, 93, 136, 144, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 207, 208, 209, 211, 214, 231, 233, 307, 309, 313, 315], "basic": [2, 83, 302, 308, 318], "properti": [2, 3, 32, 34, 36, 39, 71, 75, 83, 87, 93, 136, 137, 160, 165, 174, 179, 187, 188, 189, 231, 313, 315], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 68, 69, 70, 71, 72, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 111, 113, 114, 115, 117, 118, 119, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 151, 154, 155, 156, 157, 158, 159, 162, 166, 167, 177, 178, 180, 182, 183, 193, 194, 195, 196, 198, 199, 201, 203, 204, 205, 212, 213, 217, 218, 219, 220, 221, 223, 226, 229, 230, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 265, 291, 294, 302, 304, 307, 308, 309, 311, 312, 313, 315, 317, 318], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 95, 101, 105, 108, 115, 117, 119, 123, 125, 133, 135, 142, 143, 144, 148, 151, 152, 154, 159, 160, 161, 166, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 187, 190, 193, 194, 195, 196, 198, 199, 200, 204, 205, 206, 207, 210, 211, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 241, 244, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 273, 279, 282, 294, 302, 306, 307, 308, 309, 311, 312, 314, 315, 317, 318], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 104, 105, 106, 107, 108, 115, 117, 119, 121, 123, 125, 133, 135, 136, 137, 139, 141, 144, 148, 151, 152, 162, 166, 170, 174, 175, 181, 182, 190, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 210, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 252, 291, 302, 308, 309, 311, 312, 313, 314, 315, 317, 318], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 71, 72, 75, 83, 87, 88, 89, 91, 92, 93, 96, 98, 100, 103, 114, 115, 117, 119, 121, 123, 125, 133, 136, 141, 142, 148, 151, 152, 162, 166, 168, 170, 173, 176, 181, 182, 190, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 217, 218, 219, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 275, 278, 291, 294, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 71, 72, 75, 87, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 117, 119, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 153, 160, 166, 168, 173, 187, 193, 198, 199, 204, 205, 207, 208, 211, 212, 218, 223, 230, 232, 234, 236, 279, 284, 302, 306, 308, 311, 312, 313, 315, 317, 318], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 71, 75, 83, 86, 87, 88, 89, 90, 93, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 151, 153, 155, 156, 157, 158, 161, 162, 166, 167, 168, 173, 174, 175, 182, 183, 184, 185, 186, 191, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 280, 285, 294, 302, 303, 304, 306, 307, 308, 309, 312, 313, 317, 318], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 86, 87, 88, 89, 90, 93, 100, 103, 104, 105, 106, 108, 115, 117, 121, 123, 134, 136, 139, 141, 144, 153, 154, 155, 156, 159, 161, 162, 163, 166, 167, 168, 173, 176, 182, 191, 193, 194, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 265, 273, 302, 303, 306, 307, 308, 309, 311, 312, 313, 314, 317, 318], "send": [2, 3, 8, 317], "receiv": [2, 3, 32, 40, 71, 75, 87, 93, 132, 136, 168, 252, 303, 306, 308, 311, 313], "spawn": [2, 3, 4, 18, 22, 79, 84, 312], "check_env_spec": [2, 3, 300, 308, 312, 313], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 75, 87, 93, 100, 104, 106, 111, 115, 117, 121, 123, 124, 125, 133, 136, 137, 139, 141, 152, 167, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 250, 264, 295, 303, 304, 305, 307, 308, 309, 313, 315, 318], "saniti": [2, 3, 7, 144, 308], "utmost": 2, "techniqu": [2, 8, 307, 315], "commonli": [2, 318], "emploi": [2, 175], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 315], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 71, 75, 87, 93, 100, 105, 108, 142, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 221, 224, 244, 302, 313, 317], "offer": [2, 3, 7, 302, 307, 313, 318], "facilit": [2, 3, 7, 120, 121, 139, 141, 194, 195, 196, 302, 306, 309, 313], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 132, 204, 208, 306, 308, 312, 313, 318], "extern": [2, 3, 105, 108, 318], "consist": [2, 3, 32, 35, 38, 41, 42, 71, 75, 87, 93, 115, 153, 168, 306, 307, 308, 313, 314, 318], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207, 306, 307, 318], "manner": [2, 75, 121, 139, 302, 306, 307, 308, 311, 313, 315], "handl": [3, 21, 32, 71, 75, 87, 93, 142, 166, 168, 282, 296, 297, 306, 307, 308, 312, 315], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 71, 75, 82, 87, 88, 89, 93, 100, 107, 117, 123, 132, 137, 138, 162, 166, 168, 170, 173, 182, 229, 233, 241, 246, 247, 248, 253, 254, 278, 282, 284, 296, 297, 302, 303, 304, 306, 307, 308, 311, 312, 313, 314, 315, 318], "dm": [3, 306, 318], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 79, 83, 84, 85, 125, 133, 139, 140, 194, 202, 217, 218, 220, 221, 223, 225, 229, 233, 234, 235, 236, 238, 282, 291, 302, 303, 304, 306, 307, 309, 312, 313, 315, 318], "goal": [3, 4, 132, 306, 307, 308, 309, 312, 313], "abl": [3, 82, 88, 89, 306, 308, 309, 311, 312, 313, 315, 317], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 144, 267, 268, 269, 270, 271, 272, 301, 307, 308, 312, 315], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 71, 72, 75, 79, 87, 93, 306, 308, 312, 313, 318], "simul": [3, 5, 7, 8, 90, 97, 152, 170, 302, 306, 308, 312], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 71, 75, 87, 88, 89, 93, 121, 139, 144, 155, 166, 186, 208, 209, 210, 273, 285, 302, 304, 306, 307, 308, 309, 312, 313, 315, 317, 318], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 71, 75, 87, 93, 193, 199, 200, 204, 205, 206, 207, 208, 231, 246, 247, 248, 249, 250, 303, 306, 307, 313, 318], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 71, 72, 75, 87, 88, 89, 91, 92, 93, 100, 103, 114, 115, 117, 119, 123, 125, 133, 136, 142, 166, 291, 294, 306, 307, 308, 309, 311, 312, 314, 315, 317, 318], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 71, 75, 83, 87, 93, 104, 107, 115, 121, 133, 136, 137, 139, 141, 152, 153, 155, 156, 157, 158, 161, 162, 163, 164, 166, 168, 170, 172, 173, 176, 181, 182, 190, 193, 194, 195, 196, 198, 199, 201, 203, 204, 205, 207, 208, 209, 210, 212, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 291, 294, 302, 303, 306, 307, 308, 309, 311, 312, 313, 314, 317], "typic": [3, 4, 8, 32, 71, 75, 87, 93, 132, 218, 231, 233, 236, 302, 303, 304, 308, 312, 313], "organis": [3, 307, 313], "arbitrari": [3, 33, 87, 93, 302, 306, 307, 313], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 71, 75, 87, 93, 246, 247, 248, 249, 250, 304, 307, 308, 312, 313, 315, 317], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 105, 108, 203, 246, 247, 248, 249, 250, 303, 306, 308, 309, 312, 313, 314, 315], "attribut": [3, 4, 32, 45, 71, 75, 87, 93, 121, 131, 139, 166, 208, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 306, 309, 313], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 68, 71, 73, 75, 78, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 105, 108, 119, 123, 125, 133, 136, 151, 152, 159, 162, 166, 170, 181, 182, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 273, 279, 291, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 71, 75, 82, 87, 88, 89, 93, 100, 122, 166, 190, 194, 195, 196, 213, 302, 307, 308, 309, 312], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 71, 75, 83, 86, 87, 90, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 117, 119, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 144, 166, 173, 200, 203, 207, 210, 217, 218, 219, 220, 221, 223, 229, 230, 231, 233, 234, 235, 236, 238, 244, 286, 301, 302, 303, 304, 306, 308, 309, 312, 313, 315, 318], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 71, 75, 83, 87, 93], "actual": [3, 4, 7, 17, 71, 75, 87, 93, 132, 285, 303, 306, 308, 312, 313], "just": [3, 4, 71, 75, 82, 87, 88, 89, 93, 103, 173, 273, 302, 304, 306, 307, 308, 309, 312, 313, 315, 317, 318], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 71, 75, 87, 93, 101, 106, 117, 151, 152, 170, 204, 208, 211, 217, 218, 219, 221, 230, 233, 234, 236, 238, 244, 246, 247, 248, 249, 291, 298, 304, 307, 308, 313, 318], "care": [3, 8, 71, 75, 87, 93, 136, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 306, 308, 312, 313, 315], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 153, 165, 168, 173, 189, 207, 279, 306, 307, 308, 309, 313], "parametr": [3, 175, 208, 218, 229, 236, 306, 308], "hardwar": 3, "observation_spec": [3, 71, 75, 83, 87, 93, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 117, 119, 121, 124, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 152, 166, 170, 286, 294, 306, 308, 311, 312, 313, 318], "compositespec": [3, 28, 49, 71, 73, 75, 83, 87, 93, 98, 105, 106, 107, 108, 115, 123, 131, 132, 133, 136, 148, 152, 170, 193, 197, 204, 210, 211, 300, 306, 308, 312, 313, 318], "pair": [3, 32, 34, 36, 39, 52, 71, 75, 87, 93, 133, 194, 204, 208, 231, 246, 247, 248, 249, 250, 302, 303, 306, 307, 308, 311, 313, 318], "state_spec": [3, 71, 75, 83, 87, 93, 98, 308, 313, 318], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 71, 75, 86, 87, 93, 121, 134, 137, 139, 141, 306, 313], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 68, 71, 75, 81, 83, 87, 88, 89, 93, 98, 100, 105, 108, 115, 125, 162, 182, 184, 193, 199, 204, 205, 218, 221, 234, 236, 238, 294, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "reward_spec": [3, 71, 75, 83, 87, 93, 98, 99, 103, 104, 105, 106, 108, 126, 127, 128, 136, 138, 152, 170, 308, 312, 313, 318], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 108, 115, 119, 123, 125, 126, 127, 128, 129, 132, 136, 138, 140, 141, 142, 148, 151, 152, 170, 198, 213, 217, 218, 220, 221, 223, 226, 229, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 275, 276, 278, 280, 298, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "done_spec": [3, 71, 75, 87, 93, 105, 106, 108, 136, 308, 312, 313, 318], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 203, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 302, 312, 313, 314], "input_spec": [3, 71, 75, 83, 87, 93, 104, 105, 106, 107, 117, 119, 123, 128, 129, 131, 136, 137, 138, 152, 170, 312, 313], "full_action_spec": [3, 71, 75, 87, 93, 312], "full_state_spec": [3, 71, 75, 87, 93], "lock": [3, 26, 28, 71, 75, 87, 93, 133, 142, 313], "modifi": [3, 7, 8, 26, 28, 32, 45, 71, 75, 87, 93, 104, 111, 115, 121, 133, 136, 137, 139, 141, 198, 203, 207, 285, 291, 306, 307, 308, 312, 313], "directli": [3, 4, 8, 71, 75, 83, 87, 93, 125, 231, 298, 302, 308, 312, 313, 315], "output_spec": [3, 71, 75, 87, 93, 104, 106, 115, 123, 136, 137, 312, 313], "full_observation_spec": [3, 71, 75, 87, 93], "full_reward_spec": [3, 71, 75, 87, 93, 312], "full_done_spec": [3, 71, 75, 87, 93, 312], "importantli": [3, 204, 208], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 69, 70, 71, 74, 75, 80, 82, 83, 87, 91, 92, 93, 98, 100, 125, 142, 152, 153, 154, 155, 156, 159, 162, 163, 164, 167, 168, 170, 173, 176, 177, 178, 179, 180, 181, 182, 190, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 212, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 264, 302, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318], "action_s": 3, "help": [3, 4, 32, 71, 75, 87, 93, 301, 303, 306, 307, 308, 309, 312], "prealloc": [3, 313], "With": [3, 82, 132, 304, 306, 307, 312, 315, 318], "necessarili": 3, "instanti": [3, 21, 34, 36, 39, 79, 87, 93, 136, 173, 306, 307, 312, 313, 315, 318], "0s": [3, 133, 309], "stateless": [3, 136, 306, 313, 318], "set_se": [3, 13, 14, 16, 17, 21, 68, 71, 75, 81, 83, 87, 93, 117, 123, 137, 313, 317, 318], "seed": [3, 13, 14, 16, 17, 21, 69, 71, 75, 83, 87, 88, 89, 93, 94, 95, 98, 105, 108, 137, 144, 282], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 68, 71, 72, 75, 81, 83, 87, 91, 92, 93, 94, 95, 100, 105, 108, 114, 115, 119, 123, 125, 132, 133, 142, 148, 151, 152, 166, 170, 184, 213, 217, 218, 220, 221, 223, 224, 229, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 276, 278, 280, 306, 307, 309, 311, 313, 314, 315, 317, 318], "determinist": [3, 32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 154, 163, 177, 184, 193, 207, 208, 211, 218, 302, 306, 307, 309, 313, 318], "preced": [3, 167, 309], "without": [3, 7, 9, 32, 40, 71, 75, 87, 93, 98, 105, 108, 135, 195, 196, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 250, 294, 301, 302, 306, 307, 308, 312, 313, 315, 318], "risk": [3, 122], "overlap": [3, 41], "consecut": [3, 62, 79, 166, 203, 309, 312, 318], "reproduc": [3, 100, 144, 306, 308, 312], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 71, 75, 87, 93, 107, 126, 131, 132, 134, 187, 188, 189, 211, 218, 223, 229, 231, 232, 236, 279, 306, 307, 308, 309, 312, 315], "max_step": [3, 13, 71, 75, 83, 87, 93, 94, 95, 131, 312, 317, 318], "n": [3, 6, 7, 24, 27, 32, 33, 40, 71, 75, 87, 93, 100, 107, 111, 138, 170, 203, 208, 217, 223, 231, 245, 279, 302, 304, 307, 308, 309, 312, 315, 318], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 83, 115, 162, 166, 170, 181, 182, 190, 191, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 218, 220, 223, 225, 226, 227, 229, 231, 234, 236, 238, 244, 245, 246, 247, 248, 249, 278, 294, 302, 306, 308, 309, 311, 312, 313, 314], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 71, 72, 75, 87, 88, 89, 93, 98, 111, 121, 122, 125, 137, 139, 142, 144, 153, 159, 168, 175, 198, 207, 208, 209, 210, 217, 218, 220, 221, 223, 229, 231, 233, 234, 235, 236, 238, 246, 270, 282, 301, 306, 307, 308, 312, 313, 315, 317, 318], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 71, 75, 77, 86, 87, 93, 100, 139, 142, 166, 205, 217, 218, 220, 221, 223, 229, 231, 233, 234, 235, 236, 238, 241, 306, 309, 315, 317], "mark": [3, 16, 71, 75, 87, 93, 166], "trail": [3, 142], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 71, 72, 75, 82, 86, 87, 88, 89, 93, 101, 122, 133, 134, 142, 151, 163, 166, 167, 203, 219, 223, 226, 230, 231, 233, 234, 238, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 282, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "treat": 3, "figur": [3, 306, 308, 309, 312, 313, 318], "summar": [3, 313], "brief": [3, 308], "popul": [3, 38, 114, 133, 306, 308, 309, 313, 315], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 71, 75, 87, 93, 100, 102, 103, 105, 108, 111, 114, 117, 119, 121, 123, 125, 131, 133, 141, 142, 151, 171, 172, 198, 199, 205, 206, 218, 236, 246, 247, 248, 249, 302, 306, 308, 309, 312, 313, 314, 315], "deliveri": 3, "step_mdp": [3, 166, 300, 309, 313, 317, 318], "nasium": 3, "recent": [3, 7, 11, 306, 307, 318], "shift": [3, 32, 214, 246, 247, 248, 249, 308], "termin": [3, 7, 32, 40, 52, 209, 306, 307, 308, 313, 317], "trust": [3, 166], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 71, 75, 87, 93, 116, 131, 189, 252, 306, 308, 318], "refer": [3, 7, 8, 9, 21, 32, 40, 71, 75, 87, 93, 137, 142, 152, 162, 163, 170, 171, 172, 177, 178, 183, 184, 200, 217, 224, 225, 226, 227, 233, 246, 251, 259, 306, 307, 308, 312, 318], "stepcount": [3, 13, 71, 75, 87, 93, 136, 306, 307, 308, 309, 312, 317], "chosen": [3, 132, 133, 181, 182, 190, 206, 291, 302], "someth": [3, 32, 71, 75, 82, 87, 93, 301, 307, 308, 313, 318], "els": [3, 177, 302, 304, 306, 307, 308, 309, 312, 313, 314], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 71, 75, 87, 93, 103, 117, 125, 200, 274, 294, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "truncated_kei": [3, 131], "look": [3, 5, 7, 8, 32, 71, 75, 82, 87, 88, 89, 93, 121, 122, 139, 204, 208, 209, 210, 303, 308, 309, 312, 313, 314, 315, 317, 318], "assess": [3, 96, 306], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 300], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 111], "reli": [3, 217, 303, 306, 308, 313, 318], "traj_id": [3, 13, 14, 16, 23, 125, 309, 315, 317], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 71, 75, 87, 93, 133, 137, 151, 209, 210, 301, 306, 309], "context": [3, 5, 8, 32, 71, 72, 75, 86, 87, 93, 133, 138, 173, 174, 198, 242, 243, 246, 247, 248, 249, 251, 259, 278, 302, 303, 306, 307, 308, 312, 313, 314, 315], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 79, 82, 87, 88, 89, 93, 105, 108, 122, 168, 181, 208, 209, 210, 214, 246, 247, 248, 249, 302, 306, 307, 308, 311, 312, 313, 314, 315, 318], "inittrack": [3, 166, 306, 309], "our": [3, 7, 8, 18, 100, 302, 306, 307, 308, 309, 311, 312, 314, 315, 317], "tutori": [3, 306, 307, 309, 310, 311, 313, 314, 315, 316, 318], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 71, 72, 75, 78, 87, 93, 153, 168, 173, 303, 304, 306, 307, 308, 309, 312, 313, 315], "design": [3, 13, 14, 32, 33, 71, 75, 87, 93, 100, 122, 137, 198, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 306, 307, 308, 309, 311, 312, 313, 315, 318], "scratch": [3, 8, 307, 313], "better": [3, 8, 9, 166, 303, 308, 313], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 71, 75, 82, 87, 88, 89, 91, 92, 93, 100, 111, 115, 119, 133, 138, 142, 153, 163, 164, 166, 168, 174, 175, 208, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 298, 302, 306, 307, 308, 309, 313, 315, 318], "intens": [3, 8], "gym3": 3, "envpool": [3, 84, 85], "interfac": [3, 78, 86, 168, 174, 302, 306, 308, 313, 315], "simultan": [3, 20, 87, 93, 313], "often": [3, 8, 228, 282, 306, 307, 313, 315, 318], "competit": [3, 312], "advantag": [3, 8, 164, 217, 219, 230, 233, 235, 246, 247, 248, 249, 250, 251, 253, 255, 257, 259, 260, 262, 303, 304, 306, 307, 308, 309, 312, 313, 318], "scale": [3, 4, 52, 100, 115, 117, 127, 132, 135, 163, 165, 176, 183, 184, 188, 189, 194, 195, 196, 204, 208, 210, 217, 218, 229, 233, 234, 235, 236, 280, 286, 291, 298, 302, 306, 307, 308, 309, 312, 317], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 71, 75, 83, 87, 88, 89, 93, 96, 100, 115, 132, 136, 137, 142, 153, 171, 172, 173, 197, 199, 204, 205, 208, 211, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 282, 294, 304, 306, 307, 308, 309, 312, 313, 314, 315, 318], "own": [3, 13, 14, 17, 22, 32, 71, 75, 87, 88, 89, 93, 307, 308, 312, 313], "As": [3, 4, 71, 75, 82, 87, 88, 89, 93, 125, 208, 246, 302, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "inherit": [3, 169, 231, 304, 308, 312], "serialenv": [3, 71, 75, 87, 133, 300, 318], "enjoi": 3, "exact": 3, "Of": [3, 7, 301, 313, 318], "cours": [3, 4, 301, 308, 313, 318], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 71, 75, 83, 84, 87, 93, 121, 133, 137, 141, 142, 166, 171, 172, 201, 203, 204, 208, 221, 223, 244, 246, 247, 248, 249, 250, 306, 307, 308, 312, 313, 314], "count": [3, 72, 131, 203, 278, 282, 285, 306, 307, 308, 309, 315, 318], "def": [3, 11, 22, 32, 71, 72, 75, 83, 87, 93, 98, 105, 108, 152, 162, 170, 212, 218, 220, 223, 229, 231, 234, 236, 238, 304, 306, 307, 311, 312, 313, 317, 318], "make_env": [3, 95, 142, 287, 288, 306, 307, 318], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 71, 72, 75, 77, 87, 93, 100, 103, 104, 114, 115, 117, 119, 123, 125, 133, 136, 137, 142, 166, 291, 294, 300, 302, 306, 307, 308, 309, 314, 315, 317, 318], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 71, 72, 75, 84, 87, 93, 100, 103, 114, 115, 117, 123, 125, 133, 136, 166, 241, 255, 256, 257, 258, 260, 261, 262, 263, 302, 307, 309, 313, 315, 317, 318], "from_pixel": [3, 69, 70, 100, 291, 306, 307, 309, 314, 315, 317, 318], "9": [3, 7, 32, 35, 38, 41, 82, 88, 89, 132, 142, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 239, 244, 303, 306, 307, 308, 312, 313, 314, 315, 316], "81": [3, 313, 314], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 68, 71, 75, 78, 81, 83, 87, 90, 91, 92, 93, 98, 99, 100, 101, 103, 104, 106, 107, 115, 116, 117, 121, 125, 132, 133, 135, 136, 137, 139, 141, 142, 144, 152, 153, 155, 156, 158, 159, 163, 165, 166, 168, 170, 172, 173, 174, 175, 176, 179, 183, 184, 187, 188, 189, 191, 193, 197, 198, 200, 201, 203, 206, 207, 210, 211, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 248, 249, 252, 253, 254, 273, 280, 294, 298, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 71, 72, 75, 87, 88, 89, 93, 103, 112, 115, 117, 119, 133, 137, 138, 142, 153, 162, 166, 168, 171, 172, 173, 182, 193, 199, 200, 204, 205, 206, 207, 208, 211, 212, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 237, 238, 244, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291, 306, 307, 308, 309, 311, 313, 315, 317], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 101, 105, 106, 107, 108, 114, 117, 123, 125, 133, 135, 142, 148, 151, 153, 159, 162, 168, 171, 172, 173, 176, 179, 182, 193, 194, 195, 196, 198, 199, 201, 203, 205, 207, 210, 212, 231, 291, 294, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "simpli": [3, 6, 34, 36, 39, 45, 109, 129, 231, 302, 303, 306, 308, 312, 318], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 173, 174, 175, 181, 190, 211, 246, 247, 248, 249, 250, 252, 265, 302, 307, 314, 315], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 117, 135, 307, 315], "d": [3, 35, 53, 54, 58, 208, 317], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 72, 87, 93, 98, 101, 105, 107, 108, 115, 117, 122, 132, 133, 135, 142, 193, 201, 204, 205, 208, 246, 247, 248, 249, 250, 269, 302, 306, 307, 308, 309, 312, 313, 315, 317, 318], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 307, 312, 313], "_reset": [3, 71, 75, 83, 87, 93, 98, 100, 105, 108, 152, 170, 306, 307, 311], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 105, 108, 119, 123, 125, 133, 137, 151, 152, 162, 166, 170, 181, 182, 190, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 210, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 286, 291, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 68, 69, 70, 71, 72, 73, 75, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 105, 107, 108, 111, 115, 116, 117, 119, 121, 123, 125, 127, 133, 135, 137, 138, 139, 141, 142, 144, 151, 152, 153, 155, 156, 165, 166, 168, 170, 173, 174, 175, 188, 189, 193, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 244, 246, 247, 248, 249, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 275, 276, 278, 279, 280, 282, 291, 298, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "pixel": [3, 7, 26, 100, 102, 111, 113, 117, 119, 121, 124, 135, 139, 141, 155, 177, 178, 265, 291, 302, 306, 307, 309, 314, 315, 317, 318], "500": [3, 306, 307, 313, 317], "uint8": [3, 47, 119, 135, 307, 314, 315, 317], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 71, 72, 75, 82, 83, 87, 88, 89, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 108, 111, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 217, 218, 220, 221, 223, 224, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 276, 277, 278, 279, 280, 281, 282, 286, 287, 288, 291, 294, 296, 297, 298, 302, 304, 306, 307, 308, 309, 312, 313, 315, 317], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 68, 71, 75, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 105, 108, 119, 123, 125, 133, 142, 151, 152, 162, 166, 170, 181, 182, 190, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 210, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 291, 302, 308, 309, 311, 312, 313, 314, 315, 317], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 71, 75, 87, 93, 142, 166, 203, 204, 208, 306, 307, 311, 312, 318], "launch": [3, 18, 19, 20, 22], "start": [3, 4, 5, 13, 21, 45, 72, 82, 151, 277, 306, 307, 312, 313, 315, 318], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 71, 75, 87, 93, 133, 142, 209, 210, 308, 309, 312, 313, 318], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 71, 75, 87, 93, 125, 137, 197, 203, 280, 304, 307, 308, 309, 313, 315, 318], "great": [3, 7, 8, 317], "speedup": [3, 8, 318], "precis": [3, 151, 306, 308], "anoth": [3, 8, 34, 36, 39, 71, 75, 79, 87, 93, 105, 106, 108, 133, 136, 168, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 302, 303, 306, 308, 309, 311, 312, 313, 318], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 65, 71, 75, 79, 87, 93, 122], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 71, 72, 75, 84, 87, 93, 100, 105, 108, 121, 125, 134, 141, 142, 151, 199, 203, 207, 237, 246, 247, 248, 249, 250, 252, 282, 284, 298, 301, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 96, 110, 116, 125, 137, 144, 197, 201, 203, 306, 307, 308, 312, 315], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 78, 100, 103, 105, 108, 115, 123, 142, 144, 148, 173, 176, 191, 246, 247, 248, 249, 273, 281, 311, 312, 315, 318], "mismatch": [3, 307], "mostli": [3, 17, 303, 315, 318], "purpos": [3, 7, 100, 294, 306, 308, 309, 312, 314, 318], "want": [3, 6, 7, 8, 117, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 302, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "subprocess": [3, 72], "addit": [3, 4, 32, 52, 71, 75, 84, 87, 93, 104, 121, 133, 136, 137, 139, 141, 197, 198, 207, 216, 231, 246, 303, 306, 307, 312, 315], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 84, 85, 315], "multithreadedenv": [3, 300], "underneath": 3, "higher": [3, 4, 103, 211, 306, 307, 308, 315, 318], "restrict": [3, 307, 314, 315, 318], "flexibl": [3, 9, 84, 239, 303, 304, 315, 318], "cover": [3, 301, 308, 313, 317], "popular": [3, 302, 309, 312], "atari": [3, 4, 100, 318], "classic": [3, 83, 89, 307], "benchmark_batched_env": 3, "py": [3, 181, 190, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318], "pipelin": [3, 7, 302, 308], "seamlessli": [3, 313], "modif": [3, 5, 26, 28, 32, 71, 75, 87, 93, 111, 231, 308, 313], "infrastructur": [3, 312], "view": [3, 8, 27, 32, 33, 71, 75, 87, 93, 98, 162, 168, 313, 315, 317, 318], "core": [3, 8, 291, 304, 309, 317], "decis": [3, 154, 180, 198, 222, 232, 309, 312, 315], "act": [3, 4, 88, 89, 173, 218, 220, 229, 234, 236, 238, 309, 312], "world": [3, 5, 83, 213, 226, 312, 313, 318], "paradigm": [3, 17, 312], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 71, 75, 87, 93, 107, 116, 126, 137, 144, 153, 166, 168, 173, 200, 204, 208, 217, 219, 220, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 241, 246, 278, 282, 303, 306, 307, 309, 312, 313, 318], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 71, 75, 83, 87, 93, 132, 137, 142, 231, 285, 302, 304, 306, 307, 308, 309, 312, 313, 315, 318], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 79, 87, 88, 89, 103, 163, 173, 201, 282, 296, 297, 306, 307, 308, 309, 312, 315, 317], "accommod": [3, 13, 14, 16, 17], "thank": [3, 306], "carrier": [3, 308, 309, 315], "particular": [3, 32, 45, 52, 71, 75, 87, 93, 137, 303, 304, 307, 309, 311, 312, 315], "carri": [3, 21, 45, 71, 75, 87, 93, 133, 231, 307, 309, 312, 313, 315], "thu": [3, 230, 312], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 82, 88, 89, 96, 302, 307, 308, 312], "hand": [3, 7, 21, 312, 313], "kept": [3, 13, 14, 16, 17, 62, 87, 93, 107, 136, 144, 151, 165, 188, 189], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 71, 75, 87, 93, 106, 133, 135, 137, 144, 166, 168, 173, 204, 207, 208, 210, 211, 216, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 246, 247, 248, 249, 273, 284, 296, 297, 298, 302, 304, 306, 307, 308, 309, 312, 313, 315, 318], "let": [3, 6, 7, 32, 43, 71, 75, 87, 88, 89, 93, 100, 166, 173, 199, 278, 303, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "understand": [3, 8, 306, 307, 312], "go": [3, 7, 82, 122, 125, 198, 252, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "vma": [3, 94, 95, 312], "robot": [3, 5, 7, 121, 139, 141, 312], "what": [3, 8, 35, 44, 71, 75, 87, 93, 133, 151, 205, 301, 302, 303, 307, 308, 309, 312, 313, 314, 315, 317, 318], "vmasenv": [3, 300, 312], "balanc": [3, 306, 307], "num_env": [3, 21, 78, 94, 95, 312], "n_agent": [3, 94, 95, 173, 181, 190, 244, 312], "5": [3, 24, 26, 28, 35, 38, 41, 42, 72, 81, 84, 91, 92, 94, 95, 125, 152, 153, 162, 163, 165, 167, 168, 170, 173, 177, 182, 188, 189, 198, 199, 205, 211, 230, 233, 235, 238, 302, 306, 307, 309, 312, 313, 314, 315, 317, 318], "td": [3, 15, 26, 67, 68, 69, 70, 74, 76, 80, 81, 98, 101, 105, 106, 107, 108, 114, 115, 117, 125, 132, 133, 135, 137, 142, 151, 152, 162, 166, 169, 170, 181, 182, 190, 193, 194, 195, 196, 198, 199, 201, 203, 204, 205, 207, 210, 212, 244, 247, 248, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 273, 281, 291, 302, 303, 306, 309, 312, 313, 317, 318], "info": [3, 35, 38, 41, 42, 52, 53, 71, 75, 87, 88, 89, 90, 91, 92, 93, 94, 95, 139, 143, 312, 315], "ground_rew": 3, "pos_rew": [3, 312], "16": [3, 32, 71, 75, 87, 93, 100, 308, 309, 313, 314, 315], "root": [3, 26, 28, 100, 151, 165, 188, 189, 309, 312, 313, 315, 318], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 111, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 307, 313], "vari": [3, 88, 89, 122, 312], "creation": [3, 87, 93, 306, 318], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 71, 75, 87, 93, 121, 125, 128, 137, 141, 176, 182, 200, 204, 206, 207, 208, 246, 247, 248, 249, 273, 285, 306, 307, 308, 309, 312, 313, 315, 317, 318], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 72, 125, 135, 142, 230, 238, 303, 304, 306, 308, 309, 312, 313, 315, 317], "append": [3, 8, 35, 38, 41, 42, 52, 53, 72, 103, 125, 133, 166, 199, 205, 306, 307, 308, 309, 312, 313, 314, 315, 317], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 71, 75, 87, 93, 98, 221, 223, 244, 300, 308, 312], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 71, 75, 79, 82, 87, 88, 89, 91, 92, 93, 142, 301, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "simpl": [3, 9, 32, 33, 71, 75, 87, 93, 155, 208, 221, 231, 235, 246, 302, 303, 306, 307, 308, 312, 318], "composit": [3, 26, 28, 71, 75, 87, 93, 308, 313], "prefix": [3, 23, 32, 34, 36, 39, 45, 71, 75, 87, 93, 137, 231, 264, 309, 318], "exactli": [3, 32, 71, 75, 77, 87, 93, 137, 306, 309, 312], "action_kei": [3, 15, 71, 75, 87, 93, 98, 107, 151, 152, 169, 170, 197, 201, 203, 312], "reward_kei": [3, 71, 75, 87, 93, 151, 152, 170, 276, 280, 312], "done_kei": [3, 71, 75, 87, 93, 151, 312], "automat": [3, 5, 55, 56, 65, 71, 75, 87, 88, 89, 93, 105, 108, 117, 193, 204, 302, 306, 308, 312, 313, 315, 317], "right": [3, 6, 7, 40, 167, 307, 308, 312, 313, 318], "sure": [3, 4, 7, 53, 63, 79, 125, 199, 298, 302, 306, 308, 309, 312, 313, 315, 317, 318], "set_kei": [3, 217, 218, 219, 221, 223, 224, 229, 230, 231, 233, 234, 235, 236, 244, 250, 312], "awai": [3, 308, 312], "eas": [3, 312], "access": [3, 7, 8, 32, 35, 53, 71, 75, 87, 93, 121, 139, 298, 301, 306, 312, 313, 315], "leaf": [3, 26, 28, 71, 75, 87, 93, 208, 312], "abov": [3, 7, 32, 71, 75, 87, 93, 165, 188, 189, 216, 303, 304, 306, 308, 312, 313, 318], "would": [3, 32, 40, 71, 75, 87, 93, 166, 168, 304, 307, 308, 309, 313, 315, 318], "full": [3, 71, 75, 87, 93, 200, 273, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "raw": [3, 4, 40, 165, 188, 189, 307, 313], "logic": 3, "torchvis": [3, 121, 141, 317, 318], "transformedenv": [3, 13, 71, 72, 75, 87, 93, 98, 100, 103, 104, 105, 108, 111, 114, 115, 116, 117, 119, 123, 125, 133, 136, 142, 166, 291, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "primit": [3, 4, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238], "built": [3, 5, 7, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 239, 244, 292, 294, 295, 298, 306, 307, 308, 309, 315, 318], "base_env": [3, 98, 103, 105, 107, 108, 115, 119, 133, 306, 307, 308, 314, 317, 318], "totensorimag": [3, 100, 307, 309, 315, 317, 318], "in_kei": [3, 13, 14, 16, 17, 21, 83, 99, 100, 101, 102, 103, 105, 107, 108, 111, 113, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 132, 134, 135, 136, 137, 139, 141, 142, 152, 161, 166, 170, 181, 190, 191, 193, 194, 195, 196, 198, 199, 204, 205, 207, 208, 210, 211, 212, 217, 218, 219, 220, 221, 223, 229, 230, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 264, 265, 291, 294, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "resiz": [3, 100, 307, 309, 315, 318], "64": [3, 100, 155, 156, 164, 166, 173, 181, 244, 306, 307, 308, 309, 311, 313, 314, 315, 317, 318], "now": [3, 7, 35, 100, 173, 306, 307, 308, 309, 311, 312, 314, 315, 318], "appar": [3, 275], "bring": [3, 308, 318], "signific": [3, 5, 8, 308, 318], "kind": [3, 38, 44, 151, 315], "consult": 3, "interest": [3, 204, 208, 302, 307, 308, 312, 313, 318], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 83, 99, 100, 101, 102, 103, 111, 113, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 132, 134, 135, 136, 139, 141, 152, 161, 162, 166, 170, 181, 182, 190, 191, 193, 194, 195, 196, 198, 200, 204, 205, 206, 207, 208, 210, 211, 212, 217, 218, 219, 223, 229, 230, 233, 234, 235, 236, 244, 246, 247, 248, 249, 278, 294, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "easi": [3, 5, 53, 197, 201, 203, 302, 303, 306, 307, 308, 312, 314, 315, 318], "graph": [3, 4, 8, 242, 243, 306, 313], "inv": [3, 103, 107, 119, 125, 313], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 71, 75, 87, 93, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 120, 122, 123, 125, 128, 129, 131, 132, 133, 134, 136, 137, 139, 140, 142, 188, 199, 246, 277, 304, 306, 307, 308, 313, 317, 318], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 71, 75, 87, 93, 119, 137, 193, 199, 207, 209, 210, 212, 217, 218, 220, 223, 229, 233, 234, 235, 236, 238, 307, 312], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 104, 107, 153, 210, 318], "taken": [3, 71, 75, 87, 93, 171, 172, 303, 306, 308, 309, 312, 313], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 100, 105, 108, 117, 125, 215, 229, 313], "in_keys_inv": [3, 103, 105, 108, 117, 118, 119, 123, 125, 136, 306, 311, 313, 318], "append_transform": [3, 35, 38, 41, 42, 52, 53, 121, 133, 139, 306, 309, 313, 317, 318], "doubletofloat": [3, 291, 306, 308, 311], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 68, 71, 75, 81, 83, 86, 87, 91, 92, 93, 94, 95, 105, 108, 117, 119, 123, 125, 133, 135, 148, 151, 152, 162, 166, 170, 181, 182, 190, 193, 194, 195, 196, 198, 199, 203, 204, 205, 206, 207, 210, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 291, 302, 308, 309, 311, 312, 313, 314, 315, 317], "float64": [3, 32, 71, 75, 87, 93, 94, 104, 105, 108, 121, 133, 136, 137, 139, 141, 207, 311], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 105, 108, 137, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 304, 306, 308, 315], "manipul": [3, 4, 8, 121, 139], "keep": [3, 4, 7, 8, 14, 42, 62, 117, 121, 141, 142, 151, 203, 275, 282, 306, 307, 308, 309, 312, 313, 315, 317, 318], "mind": [3, 312], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 107, 151, 201, 302, 315], "unexpect": [3, 32, 71, 75, 87, 93, 137, 318], "behviour": 3, "fortun": [3, 309], "eras": [3, 71, 75, 87, 93], "ident": [3, 13, 14, 16, 32, 87, 93, 173, 246, 247, 248, 249, 296, 297, 307, 312], "alreadi": [3, 8, 11, 32, 45, 71, 75, 87, 93, 133, 208, 246, 247, 248, 249, 306, 308, 312], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 65, 71, 72, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 142, 198, 207, 279, 284, 285, 307, 308, 312, 313, 315], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 71, 75, 87, 93, 104, 105, 106, 108, 115, 123, 136, 137, 142, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 303, 306, 308, 309, 312, 313, 314, 315, 318], "happen": [3, 71, 75, 87, 93, 197, 307, 314, 318], "catfram": [3, 307], "hold": [3, 242, 243, 313, 315], "notic": [3, 100, 308, 313], "parenthood": 3, "reason": [3, 4, 8, 32, 71, 75, 87, 88, 89, 93, 121, 139, 166, 303, 306, 307, 308, 313, 315], "henc": [3, 35, 122, 302, 306, 308, 312, 313], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 313], "discret": [3, 24, 27, 30, 31, 33, 47, 71, 75, 87, 88, 89, 93, 107, 179, 182, 223, 224, 302, 307, 308, 312], "might": [3, 37, 132, 269, 301, 306, 318], "throughout": [3, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 308, 318], "action_mask": [3, 88, 89, 91, 92, 98], "unavail": [3, 88, 89], "probabl": [3, 4, 8, 40, 160, 162, 166, 168, 171, 172, 179, 189, 201, 204, 208, 302, 307, 317], "categor": [3, 27, 31, 33, 88, 89, 98, 162, 179, 182, 199, 200, 205, 206, 221, 223, 244, 309], "probabilistictensordictmodul": [3, 115, 208, 209, 317], "tensordictsequenti": [3, 166, 199, 201, 209, 302, 306, 309, 311, 314, 317], "maskedcategor": [3, 172, 300], "linear": [3, 13, 14, 16, 17, 21, 32, 71, 75, 83, 87, 93, 104, 115, 121, 133, 136, 137, 139, 141, 152, 153, 162, 168, 170, 173, 174, 175, 176, 182, 183, 184, 193, 194, 195, 196, 201, 202, 203, 204, 205, 207, 210, 212, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 294, 302, 307, 311, 314, 317], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 171, 172, 179, 200, 223, 302], "dist": [3, 10, 171, 172, 179, 306, 307], "distribution_class": [3, 115, 194, 195, 196, 198, 204, 208, 210, 217, 218, 223, 229, 233, 234, 235, 236, 302, 306, 308, 312, 317], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 71, 75, 87, 88, 89, 93, 144, 166, 191, 194, 195, 196, 197, 203, 205, 213, 244, 302, 306, 307, 308, 309, 312, 318], "actionmask": 3, "updat": [3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 71, 75, 83, 87, 88, 89, 93, 98, 105, 107, 108, 132, 137, 140, 142, 152, 166, 170, 197, 201, 203, 204, 205, 206, 207, 208, 217, 218, 220, 221, 223, 224, 225, 228, 229, 231, 233, 234, 235, 236, 237, 238, 244, 246, 247, 248, 249, 250, 278, 282, 284, 287, 288, 293, 294, 304, 307, 308, 309, 312, 313, 315, 317, 318], "know": [3, 4, 9, 35, 38, 41, 42, 197, 234, 278, 306, 307, 308, 309, 312, 315], "your_base_env": 3, "mask_kei": [3, 98, 122], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 71, 75, 87, 93, 100, 115, 166, 174, 202, 217, 277, 308, 309, 312, 313, 315, 317], "enviorn": [3, 88, 89, 312], "itself": [3, 32, 71, 75, 87, 93, 231, 308], "log": [3, 4, 8, 40, 160, 161, 162, 171, 172, 179, 189, 199, 200, 204, 208, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 275, 276, 278, 282, 294, 302, 303, 304, 306, 307, 308, 312, 313, 317], "mission": 3, "irrespect": [3, 207, 208], "dmcontrol": [3, 306], "jumanji": [3, 80, 81], "natur": [3, 306, 309], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 71, 75, 87, 93, 111, 117, 122, 134, 153, 166, 167, 168, 171, 172, 177, 185, 191, 197, 198, 201, 208, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "special": [3, 302, 306, 309, 318], "statu": 3, "framework": [3, 4, 9, 22, 83, 317, 318], "Its": [3, 32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 142, 207, 250], "success": [3, 100, 136, 201, 307, 313, 315, 317], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 71, 75, 79, 87, 93, 115, 136, 197, 203, 306, 307, 308, 309, 311, 312, 313, 315, 318], "foundat": [3, 5, 88, 89, 308, 312], "inspir": [3, 313], "howev": [3, 5, 7, 32, 71, 75, 87, 93, 100, 128, 131, 132, 137, 302, 306, 307, 308, 309, 315, 318], "gone": [3, 4, 5], "sometim": [3, 309, 318], "hard": [3, 7, 228, 307, 318], "adopt": [3, 5, 306, 318], "prefer": [3, 17, 20, 35, 38, 41, 42, 122, 129, 233, 279, 302, 308, 312, 315], "moreov": 3, "maintain": [3, 5, 9, 313], "both": [3, 7, 32, 71, 72, 75, 87, 88, 89, 93, 100, 123, 137, 153, 166, 168, 173, 194, 195, 196, 200, 206, 217, 219, 220, 223, 229, 230, 231, 233, 234, 235, 236, 238, 278, 302, 306, 308, 312, 313, 314, 315, 318], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 307, 308, 309, 312, 313, 315, 318], "decor": [3, 8, 11, 231, 246, 247, 248, 249], "set_gym_backend": 3, "relev": [3, 40, 246, 247, 248, 249, 250, 313], "gym_backend": 3, "env1": [3, 311], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 71, 75, 87, 93, 121, 141, 170, 282, 304, 307], "venv": 3, "python3": [3, 6, 7, 10, 306, 307], "site": [3, 6, 7], "__init__": [3, 7, 83, 98, 105, 108, 152, 162, 170, 212, 218, 220, 223, 229, 234, 236, 238, 304, 313, 318], "env2": [3, 311], "_env": [3, 6, 318], "classic_control": 3, "pendulumenv": [3, 313], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 308], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 71, 75, 87, 93, 100, 101, 131, 133, 137, 153, 168, 171, 172, 173, 203, 205, 206, 214, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 286, 298, 301, 304, 308, 309, 313, 315, 318], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 77, 84, 87, 93, 122, 132, 133, 136, 137, 145, 146, 151, 163, 167, 184, 203, 224, 268, 304, 306, 307, 308, 309, 312, 313, 317, 318], "tell": [3, 4, 7, 88, 89, 306, 309, 312], "mo_gymnasium": 3, "handi": 3, "side": [3, 4, 318], "v0": [3, 74, 75, 76, 80, 81, 104, 137, 142, 294], "26": [3, 308, 313, 314, 315], "fun": [3, 11, 308, 312], "reveal": 4, "bug": [4, 317], "curv": 4, "won": [4, 32, 71, 72, 75, 87, 93, 121, 141, 282, 298, 307, 308], "exploit": 4, "video": [4, 9, 265, 278, 298, 312], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 71, 75, 79, 87, 93, 122, 205, 307, 308, 309, 312, 313], "cv": 4, "flip": 4, "imag": [4, 7, 69, 102, 121, 135, 141, 168, 306, 307, 312, 314, 318], "correspondingli": 4, "prescript": 4, "tune": [4, 115, 312, 314], "coeffici": [4, 40, 115, 312], "bonu": [4, 217, 219, 230, 233], "beta": [4, 35, 41, 58, 229, 230, 306, 307, 315, 317], "altern": [4, 27, 84, 159, 171, 172, 216, 231, 306, 308, 312], "reduc": [4, 6, 27, 132, 307, 308], "downstream": [4, 306], "formul": [4, 312], "ob": [4, 8, 26, 28, 98, 105, 106, 108, 117, 135, 148, 151, 173, 205, 212, 218, 220, 223, 229, 234, 236, 238, 246, 247, 248, 249, 307, 311, 313, 317, 318], "rate": [4, 142, 245, 307, 308, 312], "gradient": [4, 32, 71, 75, 87, 93, 137, 165, 172, 175, 179, 188, 189, 217, 219, 220, 223, 229, 230, 231, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 282, 306, 308, 312, 313], "norm": [4, 8, 282, 306, 307, 308, 312, 313], "easier": [4, 302, 306], "behavior": [4, 32, 71, 75, 87, 93, 137, 229, 308, 312], "local": [4, 7, 10, 16, 21, 32, 71, 75, 87, 93, 137, 173, 181, 190, 244, 270, 306, 307, 312], "optima": 4, "sens": [4, 313], "product": [4, 9, 296, 297], "sum": [4, 21, 31, 33, 171, 172, 190, 226, 245, 252, 303, 306, 307, 308, 309, 312, 313, 318], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 128, 142, 203, 270, 275, 307, 309, 312, 313, 315], "stat": [4, 117, 286, 298, 307, 308], "w": [4, 100, 102, 124, 135, 203, 265, 307, 309, 315], "r": [4, 32, 98, 103, 117, 208, 216, 245, 302, 307, 313, 318], "yield": [4, 16, 21, 32, 71, 75, 87, 93, 231, 306], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 34, 36, 39, 71, 75, 87, 93, 137, 220, 221, 308, 312, 315], "futur": [4, 32, 71, 75, 87, 93, 121, 137, 141, 168, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 301, 317], "past": [4, 307, 315], "spars": [4, 309], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 71, 75, 87, 93, 128, 137, 174, 175, 203, 217, 219, 221, 224, 230, 233, 244, 307, 309, 315, 318], "intermedi": [4, 166, 200, 306, 314], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 306], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 71, 75, 87, 93, 168, 308, 312], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 71, 75, 87, 93, 100, 101, 105, 107, 108, 117, 125, 148, 151, 152, 166, 167, 171, 172, 173, 181, 190, 201, 203, 206, 214, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 252, 309, 317], "subtask": 4, "hierarch": [4, 317], "individu": [4, 18, 19, 20, 21, 32, 45, 71, 75, 87, 93, 306, 312], "select": [4, 15, 35, 38, 41, 42, 52, 53, 88, 89, 98, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 120, 122, 123, 125, 128, 129, 131, 132, 133, 134, 136, 139, 140, 142, 152, 166, 199, 205, 281, 306, 315], "fall": 4, "section": [4, 307, 312], "explicit": [4, 11, 45, 167, 315], "mechan": [4, 32, 71, 75, 87, 93, 137, 307, 313], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 71, 75, 87, 93, 229, 308, 312], "addition": 4, "timestep": [4, 40, 125, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 312], "realli": 4, "larg": [4, 27, 105, 108, 139, 307, 308, 312, 315], "target": [4, 8, 21, 32, 71, 72, 75, 87, 93, 132, 136, 207, 208, 217, 218, 219, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 248, 249, 250, 285, 293, 294, 303, 304, 309, 313], "huge": [4, 173, 309], "std": [4, 117, 142, 176, 180, 197, 306, 318], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 309, 310, 311, 314, 315, 316], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 71, 75, 87, 93, 117, 121, 133, 136, 137, 139, 143, 152, 170, 174, 175, 197, 201, 203, 217, 218, 220, 221, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 291, 298, 307, 309, 313, 318], "estim": [4, 115, 194, 195, 196, 217, 218, 219, 220, 221, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 303, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "encount": [4, 301, 307, 313], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 88, 89, 306, 308, 312, 318], "bonus": 4, "denser": 4, "prior": [4, 184, 226, 312], "freshli": 4, "proper": [4, 6, 7, 246, 247, 248, 249, 307, 308, 312, 315], "doesn": [4, 11, 84, 105, 108], "drop": [4, 62, 151], "meant": [4, 83], "encourag": [4, 306, 307, 315], "measur": [4, 308], "novelti": 4, "revisit": 4, "previous": [4, 308, 318], "diminish": 4, "decreas": 4, "ideal": [4, 117, 313], "down": [4, 13, 14, 16, 17, 309], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 307, 308, 309, 312, 313, 317, 318], "distil": 4, "nois": [4, 143, 175, 192, 203, 234, 238, 278, 298, 306], "exploratori": [4, 217, 219, 230, 233], "could": [4, 6, 307, 308, 312, 314, 318], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 218, 220, 221, 223, 224, 229, 234, 236, 238, 244, 304, 306, 307, 315], "schedul": [4, 7, 40, 278, 308, 313], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 121, 141, 218, 220, 223, 234, 236, 238, 306, 307, 312, 315, 318], "divers": [4, 87, 93], "bootstrap": [4, 224, 247, 253, 254, 306, 309], "noisi": [4, 174, 175, 192, 302], "unstabl": [4, 165, 188, 189], "inher": 4, "stochast": [4, 115, 163, 175, 177, 184, 218, 222, 223, 229, 232, 234, 236, 302, 308, 312], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 166, 170, 194, 195, 196, 231, 234, 304, 307], "pomdp": [4, 315], "previou": [4, 10, 32, 40, 41, 133, 184, 198, 308, 309, 313, 318], "loos": [4, 302, 307, 308], "nonexist": 4, "architectur": [4, 159, 312], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 99, 100, 101, 102, 105, 107, 108, 111, 113, 117, 118, 122, 123, 124, 125, 126, 127, 128, 132, 134, 135, 136, 142, 153, 160, 162, 168, 171, 172, 173, 179, 182, 186, 198, 209, 210, 222, 264, 265, 277, 278, 279, 281, 282, 291, 302, 306, 308, 309, 311, 312, 318], "rather": [4, 123, 306, 307, 308, 312], "lstm": [4, 166, 167, 176], "explicitli": [4, 307, 309, 312, 315], "rel": [4, 133, 160, 187, 306, 307, 312, 315], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 100, 307, 308, 315, 317, 318], "compens": 4, "descent": [4, 175], "1000": [4, 38, 71, 75, 87, 93, 100, 142, 201, 203, 204, 208, 228, 306, 307, 308, 309, 314, 315], "minimum": [4, 126, 163, 176, 187, 188, 189, 211, 214, 216, 218, 223, 231, 232, 236, 273, 306, 308, 312], "manual": [4, 18, 20, 21, 306, 309, 315], "deviat": [4, 117, 142, 152, 163, 170, 174, 175, 197, 233, 238, 306, 312], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "stabil": [4, 112], "stage": [4, 306, 313], "never": 4, "prevent": [4, 26, 28, 165, 188, 189, 230, 233, 280, 315], "solv": [4, 9, 10, 301, 306, 307, 308, 312, 313, 315], "entir": [4, 308, 313, 315], "submit": [4, 301, 317], "suffici": [4, 306], "recommend": [4, 7, 79, 312], "system": [4, 5, 308, 312, 313], "adequ": [4, 144, 308, 312], "infeas": 4, "allevi": [4, 302], "prune": 4, "develop": [4, 7, 79, 306, 317], "fire": [4, 32, 71, 75, 87, 93], "certain": [4, 18, 20, 21, 32, 45, 71, 75, 87, 93, 112, 131, 137, 201, 230, 302, 306, 307, 308, 312, 318], "illeg": 4, "move": [4, 21, 32, 71, 75, 87, 93, 104, 106, 121, 133, 136, 137, 139, 141, 142, 151, 168, 207, 280, 306, 307, 309, 317, 318], "chess": 4, "combin": [4, 136, 307, 315], "grasp": 4, "releas": [4, 7, 10, 32, 71, 75, 87, 93, 137, 317], "top": [4, 152, 170], "p": [4, 72, 91, 92], "wherein": 4, "cumul": [4, 128, 132, 152, 252, 308], "q": [4, 9, 155, 156, 157, 158, 161, 162, 164, 181, 182, 190, 196, 200, 205, 206, 218, 220, 221, 223, 224, 228, 229, 234, 236, 238, 244, 291, 300, 306], "flow": [4, 306, 308, 312, 313, 315], "reparameter": [4, 160, 172, 179], "soft": [4, 228, 236, 237], "critic": [4, 8, 194, 202, 217, 219, 220, 223, 229, 230, 233, 234, 235, 236, 238, 306, 308], "clip": [4, 40, 103, 126, 219, 238, 282, 308, 312, 313], "oppos": [4, 45], "incorrect": 4, "thought": [4, 71, 75, 87, 93], "bound": [4, 17, 21, 25, 26, 32, 71, 75, 87, 93, 103, 116, 142, 183, 184, 193, 199, 200, 203, 204, 205, 206, 207, 208, 211, 238, 302, 306, 307, 308, 318], "region": 4, "squash": [4, 309, 317], "tanh": [4, 153, 165, 168, 173, 187, 188, 189, 211, 308, 312, 313, 314, 317], "correct": [4, 115, 132, 285, 308, 309], "prob": [4, 171, 172, 179, 308, 312], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 79, 106, 107, 115, 121, 137, 141, 204, 207, 208, 228, 231, 233, 291, 306, 311, 313, 318], "real": [5, 208, 303, 309, 313], "histor": 5, "wa": [5, 7, 71, 75, 87, 93, 137, 228, 237, 303, 306, 307, 308, 311, 315, 317], "ceas": 5, "fork": 5, "farama": [5, 88, 89, 308, 313], "detail": [5, 6, 7, 32, 71, 75, 87, 88, 89, 93, 135, 137, 162, 200, 217, 224, 233, 301, 307, 311, 315], "usag": [5, 7, 52, 100, 166, 218, 229, 236, 239, 302, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "known": [5, 7, 8, 253, 254, 306, 307], "bc": [5, 317], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 71, 75, 87, 93, 100, 125, 142, 307, 315, 317], "face": [5, 8, 9, 318], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 71, 75, 87, 93, 144, 193, 199, 200, 204, 205, 206, 207, 208, 308, 312], "13": [5, 10, 11, 90, 308, 312, 313, 314, 315], "construct": [5, 32, 35, 38, 41, 42, 71, 75, 87, 88, 93, 105, 108, 144, 166, 184, 208, 282, 302, 307, 308, 309, 313, 315, 318], "best": [5, 9, 79, 166, 312, 315, 317], "gymwrapp": [5, 75, 300, 308, 317], "feel": [5, 301, 317], "free": [5, 7, 105, 108, 217, 226, 233, 304, 308, 312, 317], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 107, 306, 307, 308, 309, 312, 315], "prepar": [6, 308], "conda": [6, 7, 301], "assum": [6, 26, 33, 40, 41, 42, 52, 75, 87, 93, 102, 111, 121, 122, 128, 133, 139, 141, 148, 166, 167, 191, 211, 221, 224, 236, 244, 255, 256, 257, 258, 260, 261, 262, 263, 265, 306, 308, 309, 311, 313], "7": [6, 10, 27, 33, 35, 38, 41, 152, 153, 167, 168, 170, 252, 306, 308, 312, 313, 315, 316, 317], "cmake": 6, "14": [6, 11, 117, 312, 313, 315], "activ": [6, 7, 9, 153, 159, 163, 168, 173, 219, 230, 233, 302, 317], "sim": 6, "bullet": 6, "physic": [6, 7, 90, 304, 306, 312, 313], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 301], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 309], "y": [6, 7, 86, 167, 191, 306, 308, 312], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 71, 75, 87, 93, 130, 231, 312, 318], "command": [6, 7, 10, 308, 312, 313, 318], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 300], "_has_habitat": 6, "available_env": [6, 67, 68, 69, 70, 74, 76, 80, 81, 91, 92, 318], "startswith": [6, 303, 306], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 70, 298, 304, 306, 315], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 72, 231, 306], "env_nam": [6, 67, 69, 74, 80, 84, 90, 306, 308, 318], "llvmlite": 6, "config": [6, 7, 121, 141, 154, 159, 180, 286, 287, 288, 291, 292, 295], "var": [6, 7, 32, 71, 75, 87, 93, 137, 231], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 68, 153, 155, 156, 164, 168, 194, 195, 196, 204, 207, 210, 229, 306, 307, 312, 313, 314, 315, 316, 317, 318], "bind": 6, "deactiv": [6, 7, 199], "importerror": [6, 7, 10], "usr": [6, 7, 10, 306, 307], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 71, 75, 87, 93, 137, 231, 315], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 307], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 311, 313], "joint": [7, 307], "dynam": [7, 229, 308, 313], "contact": [7, 37], "engin": [7, 90, 313], "biomechan": 7, "graphic": 7, "anim": [7, 312], "area": 7, "demand": [7, 318], "fast": [7, 9, 68, 123, 234, 306, 307, 308], "accur": [7, 52, 307, 313, 315], "articul": 7, "acquir": [7, 308], "deepmind": [7, 8, 9, 69, 70, 308], "whomev": 7, "licenc": 7, "incorpor": [7, 197, 201, 203, 309, 313], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 93, 116, 136, 265, 302, 303, 306, 307, 308, 312, 315, 318], "legaci": 7, "pro": [7, 301], "tip": [7, 301], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 318], "sudo": [7, 301], "enabl": [7, 8, 52, 55, 56, 65, 166, 203, 278, 308, 312, 313, 315], "apt": [7, 312], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 307, 309], "fact": [7, 8, 306, 308, 312, 313, 314, 315, 318], "workflow": [7, 194, 195, 196], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 71, 75, 87, 93, 121, 139, 141, 309, 318], "binari": [7, 24, 27, 33, 99, 162, 182, 199, 200, 205, 206, 221, 223, 244], "setup": [7, 79], "mkdir": 7, "cd": 7, "tag": [7, 265, 270, 298], "earlier": [7, 306, 308, 309, 312, 315], "roboti": 7, "download": [7, 10, 79, 121, 141, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "html": [7, 84], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 71, 75, 87, 93, 121, 132, 141, 152, 181, 279, 306, 308, 312], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54, 314], "bin": [7, 162, 200, 302], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 158, 204, 208, 306, 308, 315], "nvidia": [7, 79], "older": [7, 11], "hack": [7, 306], "line": [7, 32, 71, 75, 87, 93, 306, 307, 312, 318], "adatp": 7, "script": [7, 144, 291, 294, 298, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "unnot": [7, 122], "until": [7, 21, 136, 308, 309, 312], "complet": [7, 9, 62, 75, 100, 301, 303, 306, 308, 311], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 307, 315], "troubleshoot": 7, "gl": 7, "h": [7, 100, 102, 124, 135, 166, 170, 265, 307, 309, 315], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 72, 83, 88, 89, 91, 92, 94, 95, 98, 100, 132, 135, 152, 154, 159, 167, 170, 180, 191, 201, 203, 211, 218, 221, 223, 233, 234, 235, 238, 244, 246, 247, 248, 249, 252, 273, 304, 306, 307, 308, 309, 312, 313, 315, 317, 318], "fatal": 7, "No": 7, "directori": [7, 45, 55, 270, 304], "devel": 7, "ubuntu": [7, 79], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 313, 315, 316], "disappear": [7, 307, 309, 311], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 81, 91, 92, 117, 119, 153, 160, 167, 168, 173, 177, 187, 212, 291, 307, 309, 312, 313, 315, 316, 317], "glibcxx_3": 7, "29": [7, 313], "compil": [7, 32, 71, 75, 87, 93], "libosmesa": 7, "libgcc": 7, "Then": [7, 308, 311], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 71, 75, 87, 93, 116, 137, 306, 307, 318], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 313, 314], "114": [7, 313, 315], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 313], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 98, 144], "opengl": [7, 312], "global": [7, 32, 71, 75, 87, 88, 89, 93, 181, 190, 204, 208, 244, 304, 306, 312], "cuda_visible_devic": 7, "id": [7, 23, 40, 203, 234, 268, 291], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 313, 315], "correctli": [7, 32, 71, 75, 87, 93], "lgl": 7, "libegl": 7, "x11": [7, 312], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 75, 151, 197, 201, 203, 233, 282, 304, 306, 307, 311, 315], "sketch": [8, 304], "_": [8, 72, 79, 101, 105, 107, 108, 115, 117, 123, 135, 142, 193, 207, 212, 216, 217, 218, 220, 223, 229, 233, 234, 236, 238, 246, 247, 248, 249, 306, 307, 308, 309, 312, 313, 315, 317], "n_training_step": 8, "datapoint": [8, 45, 315], "onlin": [8, 13, 17, 100, 159, 180, 217, 222, 232, 233, 273, 298, 308, 309, 312, 315], "n_data_per_train": 8, "no_grad": [8, 32, 71, 75, 87, 93, 115, 246, 247, 248, 249, 308, 309, 312], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 279, 294, 306, 307, 308, 312, 315], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 125, 279, 304, 306, 307, 308, 309, 312, 314, 315, 317], "loss_fn": [8, 309, 317], "backward": [8, 32, 71, 75, 87, 93, 142, 217, 218, 220, 223, 229, 233, 234, 235, 236, 238, 306, 308, 309, 312, 313], "zero_grad": [8, 32, 71, 75, 87, 93, 304, 306, 308, 309, 312, 313], "backpropag": [8, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 312, 313], "differenti": [8, 45, 115, 246, 247, 248, 249, 309, 312, 313], "denomin": 8, "artifact": 8, "numer": [8, 38, 142, 165, 188, 189, 193, 199, 200, 204, 205, 206, 207, 208, 280, 308, 315, 318], "misconcept": 8, "save": [8, 32, 34, 36, 39, 71, 75, 87, 93, 264, 282, 304, 312], "freed": 8, "appear": [8, 33, 313, 315], "compuat": 8, "twice": 8, "fix": [8, 133, 218, 232, 236, 307, 313, 318], "retain_graph": 8, "discuss": [8, 9, 312], "inplac": [8, 32, 34, 36, 39, 71, 75, 87, 93, 137, 306], "accumul": 8, "onto": [8, 33, 148, 193, 197, 199, 200, 203, 204, 205, 206, 207, 208, 309, 313], "exclud": [8, 52, 100, 109, 151, 181, 312, 315], "forward": [8, 32, 71, 75, 87, 93, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 120, 121, 122, 123, 125, 128, 129, 131, 132, 133, 134, 136, 139, 140, 142, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 173, 174, 176, 177, 178, 180, 181, 183, 184, 186, 190, 191, 197, 198, 200, 201, 203, 206, 207, 208, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 303, 313, 317], "submodul": [8, 32, 71, 75, 87, 93, 231], "param": [8, 32, 40, 71, 75, 83, 87, 93, 104, 106, 115, 123, 136, 160, 162, 187, 198, 204, 207, 210, 212, 231, 240, 243, 246, 247, 248, 249, 250, 306, 312, 313, 314, 317], "grad": [8, 32, 71, 75, 87, 93, 306, 308], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 75, 87, 88, 89, 93, 104, 121, 133, 136, 137, 139, 141, 176, 181, 207], "strictli": [8, 32, 71, 75, 87, 93, 137, 306, 308], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 100, 111, 122, 138, 225, 303, 308, 312, 313], "ask": [8, 306, 308, 309, 312, 314, 318], "much": [8, 35, 41, 58, 230, 233, 308, 312, 313, 315, 318], "render": [8, 278, 306, 307, 308], "upon": [8, 313], "factor": [8, 32, 125, 165, 175, 188, 189, 197, 201, 203, 218, 224, 225, 227, 237, 252, 306, 307, 312, 315, 318], "fit": [8, 11, 117, 303, 304, 306], "everi": [8, 17, 26, 28, 32, 33, 63, 71, 75, 87, 93, 132, 142, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 282, 304, 306, 307, 308, 309, 312, 313], "bottlneck": 8, "affect": [8, 32, 71, 75, 87, 93, 136, 137, 144, 246, 247, 248, 249], "brax": [8, 67, 68, 123, 318], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 71, 75, 87, 93, 110, 137, 171, 172, 220, 221, 273, 303, 304, 306, 308, 309, 312, 313, 315], "underli": [8, 71, 75, 87, 93, 231, 313], "tedeiou": 8, "priorit": [8, 35, 41, 58, 218, 220, 221, 223, 229, 234, 236, 238, 306, 307], "amount": [8, 203, 307, 315], "isn": [8, 34, 36, 39, 199, 207, 312], "contigu": [8, 71, 75, 87, 93, 148, 308, 312, 313, 315, 317], "costli": [8, 313], "concaten": [8, 21, 30, 31, 100, 101, 117, 136, 168, 210, 306, 307, 312, 313, 315, 318], "constitut": [8, 307, 312, 313], "plain": 8, "profil": 8, "fulli": [8, 32, 71, 75, 87, 93, 307, 313, 315], "frequent": [8, 315], "program": [8, 229, 318], "functorch": [8, 10], "incl": 8, "suit": [8, 70, 308, 318], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 207, 210, 231, 312, 313, 317], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 84, 153, 168, 173, 231, 308, 313, 317], "lost": 8, "permut": [8, 62, 119, 317, 318], "idea": [9, 234, 304, 309, 312], "introductori": 9, "intro": [9, 308, 309], "dai": [9, 317], "2022": [9, 10, 313, 317], "spin": 9, "deep": [9, 100, 155, 156, 157, 158, 161, 203, 217, 228, 236, 237, 306], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 117, 142, 306, 307, 308, 309], "reddit": 9, "reagent": 9, "orient": [9, 318], "baselines3": 9, "tf": 9, "bandit": [9, 86], "tensorflow": [9, 171, 172], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 71, 75, 87, 93, 115, 209, 210, 233, 302, 308, 309, 312, 313, 314, 318], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 317], "grade": 9, "factori": [9, 43], "throughput": [9, 306], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 71, 75, 87, 93, 103, 107, 148, 159, 162, 178, 182, 193, 197, 199, 200, 203, 204, 205, 206, 207, 208, 210, 211, 212, 221, 223, 238, 244, 302, 307, 308, 309, 312, 313, 317, 318], "mbrl": [9, 83, 302], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 313], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 308, 309, 312], "notebook": [10, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "24": [10, 309, 312, 313, 314], "11": [10, 27, 33, 45, 55, 56, 65, 72, 135, 152, 170, 308, 309, 312, 313, 315, 316], "12": [10, 55, 56, 65, 91, 92, 308, 309, 312, 313, 315], "pip": [10, 53, 312, 317, 318], "pip3": [10, 308, 309, 312], "extra": [10, 32, 71, 75, 87, 93, 100, 142, 151, 302, 308, 309, 315], "url": 10, "org": [10, 35, 58, 100, 121, 139, 154, 155, 156, 157, 158, 159, 162, 163, 164, 170, 171, 172, 175, 177, 178, 180, 181, 183, 184, 190, 200, 203, 217, 218, 222, 224, 225, 226, 227, 228, 229, 232, 233, 235, 236, 237, 246, 251, 259, 314], "whl": 10, "u": [10, 53, 313], "There": [10, 166, 302, 304, 308, 309, 312, 313, 315, 318], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 231], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 71, 75, 87, 93, 98, 99, 100, 101, 102, 105, 107, 108, 111, 113, 114, 117, 118, 121, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 139, 141, 142, 151, 153, 155, 156, 157, 158, 160, 162, 164, 167, 168, 171, 172, 173, 174, 175, 179, 181, 182, 187, 188, 189, 190, 207, 223, 228, 234, 237, 259, 276, 278, 279, 287, 288, 291, 292, 294, 295, 296, 297, 298], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 69, 71, 73, 75, 86, 87, 88, 89, 90, 93, 96, 98, 99, 100, 101, 102, 105, 107, 108, 111, 113, 114, 115, 117, 118, 121, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 139, 141, 142, 145, 149, 151, 152, 153, 155, 156, 157, 158, 161, 162, 164, 166, 167, 168, 169, 170, 173, 174, 175, 176, 181, 182, 190, 193, 199, 200, 204, 205, 206, 207, 208, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 244, 245, 246, 247, 248, 249, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 291, 292, 298, 307, 308], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 71, 72, 75, 83, 87, 93, 216, 231, 287, 288, 296, 297, 298, 307], "from_vers": 11, "to_vers": 11, "intersect": 11, "vs": [11, 166, 167, 317], "longer": [11, 307, 312, 315], "self": [11, 26, 28, 32, 34, 36, 39, 71, 75, 83, 87, 93, 98, 104, 105, 108, 121, 133, 136, 137, 139, 141, 152, 162, 170, 181, 190, 197, 201, 207, 212, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 304, 306, 307, 313, 317], "x": [11, 23, 26, 32, 38, 40, 115, 135, 153, 162, 164, 166, 167, 168, 170, 173, 191, 199, 205, 214, 216, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 282, 306, 308, 313, 315, 317], "23": [11, 308, 312, 313, 316], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 71, 72, 75, 87, 93, 115, 133, 191, 199, 205, 225, 227, 246, 249, 257, 258, 262, 263, 294, 303, 306, 307, 312, 315, 317, 318], "import_modul": 11, "27": [11, 309, 313, 315, 316], "get_class_that_defined_method": 11, "f": [11, 75, 216, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 306, 307, 308, 309, 312, 313, 315, 318], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 71, 75, 82, 87, 88, 89, 93, 107, 117, 133, 137, 142, 165, 173, 188, 189, 199, 205, 211, 218, 226, 231, 232, 236, 278, 279, 304, 306, 307, 308, 309, 313, 318], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 139, 154, 180], "module_set": 11, "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 104, 121, 130, 136, 137, 138, 140, 141, 152, 153, 161, 166, 168, 169, 170, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 246, 247, 248, 249, 250, 272, 275, 279, 282, 298, 306, 307], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 71, 73, 75, 87, 93, 98, 100, 101, 104, 105, 106, 109, 110, 111, 114, 115, 116, 120, 122, 123, 125, 128, 129, 131, 132, 133, 134, 136, 140, 142, 151, 152, 166, 169, 170, 197, 198, 200, 201, 203, 206, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 282, 306, 313], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 72, 87, 93, 306, 317], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 71, 75, 83, 87, 88, 89, 93, 100, 101, 102, 107, 111, 112, 116, 117, 119, 121, 122, 124, 130, 131, 134, 137, 138, 139, 141, 144, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 217, 218, 219, 223, 225, 226, 230, 231, 232, 233, 234, 238, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273, 274, 275, 278, 279, 282, 284, 291, 292, 296, 297, 298, 313], "200": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 94, 95, 125, 155, 156, 163, 183, 184, 306, 309, 313], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 100, 125, 282, 285, 294, 304, 306, 307, 308, 309, 312, 315, 317], "create_env_kwarg": [13, 14, 16, 17, 72, 84, 87, 93, 306], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 71, 72, 75, 87, 88, 89, 93, 96, 115, 133, 137, 142, 153, 154, 155, 156, 157, 158, 159, 164, 167, 168, 180, 204, 208, 269, 270, 278, 287, 288, 291, 296, 297, 298, 306, 307, 308, 318], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 125, 307, 315], "interactiontyp": [13, 16, 18, 19, 20, 21, 146, 150, 204, 208, 278], "exploration_mod": [13, 16, 18, 19, 20, 300, 302], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 71, 75, 87, 93, 104, 105, 108, 115, 117, 121, 125, 126, 127, 132, 133, 135, 136, 137, 139, 141, 142, 160, 163, 165, 168, 171, 172, 174, 175, 183, 184, 187, 189, 197, 207, 211, 214, 215, 216, 217, 218, 223, 226, 227, 228, 229, 232, 234, 236, 237, 238, 245, 251, 252, 253, 254, 255, 256, 257, 258, 259, 280, 306, 307, 315, 318], "datacollector": [13, 14, 16, 17, 204, 208, 233, 308], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 193, 197, 199, 200, 203, 204, 205, 206, 207, 208, 210, 302, 317], "env_mak": [13, 14, 16, 21, 294, 318], "50": [13, 14, 16, 21, 37, 40, 308, 309, 312, 313, 314], "2000": [13, 14, 16, 45, 78, 308, 315], "enumer": [13, 14, 16, 21, 32, 38, 42, 71, 75, 87, 93, 239, 303, 306, 307, 308, 309, 315, 317], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 71, 75, 82, 86, 87, 88, 89, 91, 92, 93, 119, 125, 162, 182, 199, 200, 203, 205, 206, 302, 308, 309, 313, 315, 317], "step_count": [13, 14, 16, 71, 75, 87, 93, 131, 308, 309, 317], "shutdown": [13, 14, 16, 17, 21, 306, 317], "del": [13, 14, 16, 306, 308, 311, 317, 318], "randompolici": [13, 14, 16, 18, 19, 20, 22, 100, 125, 300, 315], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 219, 230, 233, 273, 275, 278, 282, 285, 286, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318], "lifespan": [13, 14, 16, 18, 19, 20, 307], "divis": [13, 14, 16, 18, 19, 20, 312], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 107, 309, 315], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 71, 75, 87, 93, 133, 137, 204, 208, 278, 296, 297, 298, 304, 307, 308, 313, 318], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 71, 75, 87, 93, 308], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 307, 308, 312], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 136, 138, 173, 303, 304, 306, 307, 312, 315, 317], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 71, 75, 87, 93, 107, 109, 129, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 171, 172, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 246, 315, 318], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 302, 312, 313], "post": [13, 14, 16, 18, 19, 20, 21, 32, 71, 75, 87, 93], "multistep": [13, 14, 16, 18, 19, 20, 21, 300, 307], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 117, 127, 165, 174, 183, 188, 189, 244, 302, 313, 315], "explorationtyp": [13, 14, 16, 20, 21, 231, 278, 306, 307, 308, 309, 317], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 233], "whole": [13, 14, 16, 26, 28, 32, 45, 71, 75, 87, 93, 137, 273, 306, 308], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 284, 294, 304, 306, 317], "async": [13, 14, 18, 19, 20, 21, 306, 317], "ratio": [13, 14, 40, 306, 308], "finish": [13, 14, 21, 125], "rest": [13, 14, 302, 308, 309, 313, 317], "earli": [13, 14, 317], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 137, 142, 304, 306], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 71, 75, 87, 93, 137, 142, 298, 304, 306, 307, 318], "ordereddict": [13, 14, 16, 17, 21, 32, 71, 75, 87, 93, 137, 142, 307], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 142, 166, 216, 217, 219, 230, 233, 282, 302, 312], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 71, 75, 87, 93, 137], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 71, 75, 87, 93, 112, 117, 131, 153, 168, 173, 229, 236, 315], "increment": [13, 14, 16, 17, 71, 75, 87, 93, 131, 230], "env_fn": [13, 14, 16, 17, 72, 296, 297], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 157, 158, 313], "out_se": [13, 14, 16, 17, 318], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 55, 56, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 104, 121, 130, 133, 136, 137, 138, 140, 141, 152, 153, 155, 156, 157, 158, 161, 164, 165, 166, 168, 169, 170, 173, 179, 187, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 244, 245, 246, 247, 248, 249, 250, 265, 269, 270, 272, 275, 282, 287, 288, 291, 295, 296, 297, 303, 306, 307, 308, 312], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 71, 75, 87, 93, 98, 99, 100, 101, 102, 105, 107, 108, 111, 113, 114, 115, 117, 118, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 142, 151, 155, 161, 162, 166, 167, 168, 173, 176, 180, 181, 182, 199, 200, 205, 206, 211, 217, 218, 220, 223, 225, 229, 231, 233, 234, 235, 236, 238, 246, 247, 248, 249, 276, 278, 280, 289, 290, 306], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 68, 81, 83, 98, 105, 108, 152, 170, 217, 218, 220, 221, 223, 229, 233, 234, 236, 238, 313, 317, 318], "describ": [15, 44, 101, 136, 187, 188, 268, 303, 306, 308, 312, 313, 318], "tensor_spec": [15, 98, 223, 233, 235], "boundedtensorspec": [15, 22, 26, 71, 75, 87, 93, 201, 203, 204, 211, 217, 218, 220, 229, 233, 234, 236, 238, 300, 308, 312, 313, 317], "cube": 15, "envcreat": [16, 22, 294, 295, 298, 300, 306, 307, 317, 318], "interruptor": 16, "_interruptor": 16, "outsid": [16, 312], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 71, 75, 87, 93, 308, 312, 317, 318], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 75, 84, 115, 217, 219, 230, 233, 306, 311, 313, 317], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 120, 306, 317], "regular": [17, 34, 36, 39, 182, 200, 205, 206, 207, 208, 224, 284, 300, 304, 306, 307, 315, 318], "mere": 17, "greater": [17, 166, 306, 307, 317], "signal": [17, 52, 131, 303, 306, 308, 312, 315], "sent": [17, 55, 56, 65, 142], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 87, 93, 122, 142, 152, 153, 155, 157, 159, 161, 168, 170, 173, 193, 207, 212, 273, 279, 306, 308, 309, 313, 315, 318], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 282], "string": [18, 19, 20, 32, 37, 45, 54, 71, 75, 87, 93, 121, 141, 166, 199, 204, 205, 216, 264, 281, 291, 303, 306, 308, 309], "respect": [18, 19, 20, 32, 71, 75, 87, 93, 99, 104, 105, 108, 121, 122, 133, 136, 137, 139, 141, 184, 207, 212, 277, 308, 309, 312], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 71, 75, 87, 93, 123, 137, 151, 166, 198, 231, 303, 306, 307, 309, 315], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 301, 307, 308, 311, 315], "serv": [18, 20, 21, 77, 315, 318], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 71, 75, 87, 93, 111], "seen": [18, 20, 21, 303, 306, 307, 309, 312, 315], "turn": [18, 20, 21, 113, 138, 199, 278, 303, 306, 307, 309, 313, 314], "mp": [18, 19, 20, 72, 142], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 71, 75, 87, 93, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 306], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 71, 75, 87, 93, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 233, 296, 297], "homonym": [18, 19, 20, 313], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 306], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 204, 208], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 296, 297, 306, 307], "coordin": 21, "hood": [21, 313], "init": [21, 32, 71, 75, 87, 93, 306, 307, 308], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 315], "similarli": [21, 32, 62, 71, 75, 87, 93, 209, 210, 229, 318], "num_cpu": 21, "num_gpu": 21, "1024": [21, 159, 315], "equat": [21, 203, 216, 219, 237, 308, 313], "exce": [21, 308, 315], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 282, 308, 309], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 91, 92, 94, 95, 153, 154, 155, 156, 159, 164, 168, 173, 177, 178, 180, 181, 190, 244, 307, 309, 313, 314, 315, 317, 318], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "wherea": [22, 107, 231, 304], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 154, 159, 180, 198], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 72, 307], "__main__": [22, 72], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 107, 134, 187, 188, 189, 198, 203, 218, 219, 223, 232, 234, 236, 306, 308, 309, 312], "durat": [23, 312], "meta": [23, 44, 52, 73, 304, 308, 312, 315], "aren": [23, 309], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 142, 302, 306, 312], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 107, 178, 179, 183, 216, 302, 307, 308, 309, 313, 315], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 317], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 203, 211], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 75, 211, 313], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 71, 75, 87, 93, 104, 105, 108, 115, 121, 133, 136, 137, 139, 141, 142, 207, 291, 318], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 103], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 153, 168, 185, 186], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 71, 75, 87, 93, 298, 302], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 318], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 107, 166, 193, 197, 199, 200, 203, 204, 205, 206, 207, 208, 302, 317, 318], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 193, 199, 200, 204, 205, 206, 207, 208, 308, 312, 313, 315], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 133, 148, 313, 315], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 100, 130, 153, 185, 186, 306, 313, 315], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 100, 101, 119, 133, 138, 142, 167, 186, 191, 298, 307, 308, 313, 315], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 136, 137, 176, 187, 298], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 88, 89, 98, 107, 162, 179, 182, 199, 200, 205, 206, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 309], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 162, 182, 199, 205, 221, 223, 244, 300, 302], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 71, 75, 87, 93, 104, 105, 108, 121, 133, 136, 137, 139, 141, 142, 207, 216, 231, 306, 307, 308, 313, 315], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 133, 166, 309, 313, 314], "upper": [25, 116], "unnam": 26, "effect": [26, 32, 71, 75, 87, 93, 100, 128, 137, 282, 306, 315, 318], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 71, 75, 87, 93, 153, 168, 313], "composite_spec": 26, "observation_vector": [26, 101, 291, 306], "randn": [26, 34, 36, 39, 55, 56, 65, 117, 148, 154, 159, 162, 167, 171, 172, 176, 179, 180, 182, 193, 194, 195, 196, 198, 199, 204, 205, 207, 210, 211, 212, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 246, 247, 248, 249, 281, 302, 317, 318], "td_project": 26, "is_empti": [26, 28, 313], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 71, 75, 87, 93, 245, 312], "children": [26, 28, 32, 71, 75, 87, 93], "keysview": [26, 28], "reflect": [26, 28, 88, 89, 151, 231, 285, 307, 308, 309, 312], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 71, 75, 87, 93, 231], "succeed": [26, 28, 308, 312, 313], "selected_kei": [26, 28, 129, 306], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "device_typ": [27, 30, 33, 153, 154, 155, 156, 157, 158, 164, 168, 174, 175, 180], "onehottensorspec": 27, "action_valu": [27, 33, 161, 162, 182, 199, 200, 205, 206, 223, 231, 244, 302, 309], "arang": [27, 33, 162, 172, 199, 273, 302, 315], "argmax": [27, 162, 182, 200, 206], "chosen_action_valu": [27, 33, 181, 182, 190, 205, 206, 244, 302, 309], "outcom": [27, 33, 160, 187], "lazi": [28, 29, 49, 50, 71, 75, 87, 93, 121, 139, 174, 209, 210, 306, 307, 311, 315, 318], "represent": [28, 29, 32, 71, 75, 87, 93, 121, 139, 141, 306, 313, 314, 318], "drawn": [28, 29, 133, 201, 204, 208, 308, 312], "lazystackedtensordict": [28, 71, 75, 83, 87, 93, 311, 317], "heterogen": [28, 29, 82, 88, 89, 144, 173, 306, 307], "semant": [28, 29, 302], "thrown": [29, 32, 71, 75, 87, 93, 315], "nvec": [30, 31], "cardin": [30, 31, 162, 182, 199, 200, 206, 308], "ax": [30, 174, 175], "m": [30, 32, 71, 75, 87, 93, 107, 208, 302, 307, 313], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 221, 223, 244, 300], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 300], "gamma": [32, 125, 170, 217, 218, 220, 221, 223, 224, 225, 227, 229, 231, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 294, 303, 306, 307, 308, 312, 317], "sutton": [32, 303, 312], "1988": 32, "predict": [32, 40, 163, 169, 170, 198, 213, 224, 226, 227, 245, 302, 306, 307], "tempor": [32, 166, 170, 247, 248, 253, 254], "44": [32, 309, 313, 314], "discount": [32, 72, 125, 218, 224, 225, 227, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 303, 307, 308, 312], "ahead": [32, 318], "add_modul": [32, 71, 75, 87, 93], "child": [32, 71, 75, 87, 93], "fn": [32, 37, 71, 75, 87, 93, 176, 296, 297], "init_weight": [32, 71, 75, 87, 93], "fill_": [32, 71, 75, 87, 93, 307, 309, 318], "net": [32, 71, 75, 87, 93, 167, 173, 217, 218, 223, 229, 233, 234, 235, 236, 291, 294, 307, 313, 314, 317], "in_featur": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 153, 155, 156, 157, 158, 167, 168, 173, 174, 175, 194, 207, 221, 317], "out_featur": [32, 71, 75, 83, 87, 93, 104, 121, 133, 136, 137, 139, 141, 152, 153, 155, 156, 157, 158, 163, 164, 166, 167, 168, 170, 173, 174, 175, 194, 199, 207, 221, 302, 306, 309, 317], "bia": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 153, 163, 166, 168, 173, 174, 175, 176, 201, 203, 207, 214, 215, 216, 231, 303, 306, 307, 308, 309, 312, 317], "requires_grad": [32, 71, 75, 87, 93, 115], "bfloat16": [32, 71, 75, 87, 93], "datatyp": [32, 71, 75, 87, 93, 315], "member": [32, 71, 75, 87, 93, 231], "xdoctest": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207, 231], "skip": [32, 71, 75, 87, 93, 112, 137, 144, 204, 208, 231, 246, 247, 248, 249, 264, 265, 275, 278, 306, 307, 308, 313], "buf": [32, 71, 75, 87, 93], "20l": [32, 71, 75, 87, 93, 231], "1l": [32, 71, 75, 87, 93, 231], "5l": [32, 71, 75, 87, 93, 231], "__call__": [32, 37, 71, 75, 87, 93, 208, 304, 306, 307], "associ": [32, 71, 75, 87, 93, 183, 298, 306, 315], "doubl": [32, 46, 71, 75, 87, 93, 104, 105, 106, 108, 121, 133, 136, 137, 139, 141, 207, 221, 224, 228, 234, 237, 244, 306, 307, 308, 309, 318], "eval": [32, 71, 75, 87, 93, 137, 142, 306, 307, 308], "evalu": [32, 71, 75, 87, 93, 137, 160, 171, 172, 179, 189, 234, 287, 288, 307, 308], "dropout": [32, 71, 75, 87, 93, 137, 166, 168, 309], "batchnorm": [32, 71, 75, 87, 93, 137], "disabl": [32, 71, 75, 87, 93, 137, 165, 189, 306], "comparison": [32, 54, 71, 75, 87, 93, 137, 231, 306, 307], "similar": [32, 71, 75, 87, 88, 89, 93, 104, 121, 133, 136, 137, 139, 140, 141, 142, 194, 196, 204, 207, 208, 303, 306, 307, 308, 309, 313, 318], "confus": [32, 71, 75, 87, 93, 137], "extra_repr": [32, 71, 75, 87, 93], "nontermin": 32, "original_reward": 32, "newli": [32, 71, 75, 87, 93], "OR": 32, "reshap": [32, 166, 168, 308, 312], "get_buff": [32, 71, 75, 87, 93], "throw": [32, 71, 75, 87, 93, 318], "docstr": [32, 71, 75, 87, 93], "get_submodul": [32, 71, 75, 87, 93], "explan": [32, 71, 75, 87, 93], "qualifi": [32, 71, 75, 87, 93], "referenc": [32, 71, 75, 87, 93], "attributeerror": [32, 71, 75, 87, 93], "invalid": [32, 71, 75, 87, 93, 96, 171, 172], "resolv": [32, 71, 75, 87, 93], "get_extra_st": [32, 71, 75, 87, 93, 142], "set_extra_st": [32, 71, 75, 87, 93, 142], "picklabl": [32, 71, 75, 87, 93, 142], "ensur": [32, 35, 41, 58, 62, 71, 75, 87, 93, 100, 121, 139, 142, 199, 302, 307, 308, 313, 315], "guarante": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 142, 317], "pickl": [32, 71, 75, 87, 93, 142], "get_paramet": [32, 71, 75, 87, 93], "sai": [32, 71, 75, 87, 93, 314, 318], "net_b": [32, 71, 75, 87, 93], "net_c": [32, 71, 75, 87, 93], "conv": [32, 71, 75, 87, 93, 153, 307], "conv2d": [32, 71, 75, 87, 93, 153, 317], "kernel_s": [32, 71, 75, 87, 93, 153, 155, 156, 177, 307, 317], "stride": [32, 71, 75, 87, 93, 153, 155, 156, 164, 307, 317], "diagram": [32, 71, 75, 87, 93], "show": [32, 71, 75, 87, 93, 173, 302, 306, 308, 309, 312, 313, 315, 317], "degre": [32, 71, 75, 87, 93], "named_modul": [32, 71, 75, 87, 93], "o": [32, 71, 75, 87, 93], "transit": [32, 52, 71, 75, 87, 93, 213, 306, 309, 313, 315], "half": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207, 306], "ipu": [32, 71, 75, 87, 93], "strict": [32, 34, 36, 39, 71, 75, 87, 93, 137], "descend": [32, 71, 75, 87, 93, 137], "persist": [32, 71, 75, 87, 93, 137, 151], "enforc": [32, 62, 71, 75, 87, 93, 137, 209, 313], "preserv": [32, 71, 75, 87, 93, 137], "missing_kei": [32, 71, 75, 87, 93, 137], "unexpected_kei": [32, 71, 75, 87, 93, 137], "namedtupl": [32, 71, 75, 87, 93, 137], "duplic": [32, 62, 71, 75, 87, 93, 221, 224, 231, 244], "l": [32, 71, 75, 87, 93, 245, 308, 313], "idx": [32, 71, 75, 87, 93], "named_buff": [32, 71, 75, 87, 93], "remove_dupl": [32, 71, 75, 87, 93, 231], "prepend": [32, 71, 75, 87, 93, 231], "running_var": [32, 71, 75, 87, 93], "named_children": [32, 71, 75, 87, 93], "conv4": [32, 71, 75, 87, 93], "conv5": [32, 71, 75, 87, 93], "memo": [32, 71, 75, 87, 93], "named_paramet": [32, 71, 75, 87, 93, 115, 231], "register_backward_hook": [32, 71, 75, 87, 93], "removablehandl": [32, 71, 75, 87, 93], "deprec": [32, 71, 75, 87, 93, 137, 145, 149, 161, 217, 218, 219, 221, 223, 224, 229, 230, 233, 234, 235, 236, 244, 246, 247, 248, 249, 318], "favor": [32, 71, 75, 87, 93, 308], "register_full_backward_hook": [32, 71, 75, 87, 93], "register_buff": [32, 71, 75, 87, 93], "running_mean": [32, 71, 75, 87, 93], "alongsid": [32, 71, 75, 87, 93, 312], "num_featur": [32, 71, 75, 87, 93], "register_forward_hook": [32, 71, 75, 87, 93, 162, 182], "with_kwarg": [32, 71, 75, 87, 93], "always_cal": [32, 71, 75, 87, 93], "posit": [32, 35, 38, 41, 42, 52, 53, 71, 75, 87, 93, 111, 112, 130, 131, 134, 137, 138, 176, 303, 308, 312, 313, 315], "signatur": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207, 231, 303, 306, 313], "register_module_forward_hook": [32, 71, 75, 87, 93], "regardless": [32, 71, 75, 87, 93, 219, 230, 233], "register_forward_pre_hook": [32, 71, 75, 87, 93], "invok": [32, 71, 75, 87, 93], "And": [32, 71, 75, 87, 93], "forward_pr": [32, 71, 75, 87, 93], "register_module_forward_pre_hook": [32, 71, 75, 87, 93], "grad_input": [32, 71, 75, 87, 93], "grad_output": [32, 71, 75, 87, 93], "subsequ": [32, 71, 75, 87, 93, 309], "technic": [32, 71, 75, 87, 93, 307, 309], "caller": [32, 71, 75, 87, 93], "register_module_full_backward_hook": [32, 71, 75, 87, 93], "register_full_backward_pre_hook": [32, 71, 75, 87, 93], "backward_pr": [32, 71, 75, 87, 93], "register_module_full_backward_pre_hook": [32, 71, 75, 87, 93], "register_load_state_dict_post_hook": [32, 71, 75, 87, 93], "incompatible_kei": [32, 71, 75, 87, 93], "clear": [32, 71, 75, 79, 87, 93, 274], "register_modul": [32, 71, 75, 87, 93, 304], "alia": [32, 71, 75, 87, 93], "register_paramet": [32, 71, 75, 87, 93], "register_state_dict_pre_hook": [32, 71, 75, 87, 93], "keep_var": [32, 34, 36, 39, 71, 75, 87, 93, 137], "made": [32, 55, 56, 57, 63, 65, 71, 75, 87, 93, 203, 221, 231, 244, 306, 307, 309, 312, 314], "requires_grad_": [32, 71, 75, 87, 93], "autograd": [32, 71, 75, 87, 93, 137], "freez": [32, 71, 75, 87, 93], "finetun": [32, 71, 75, 87, 93], "gan": [32, 71, 75, 87, 93], "share_memori": [32, 71, 72, 75, 87, 93, 306], "share_memory_": [32, 71, 75, 87, 93, 317], "destin": [32, 34, 36, 39, 71, 75, 87, 93, 106, 137, 139, 151], "averag": [32, 71, 75, 87, 93, 137, 142, 203, 225, 226, 280, 306, 308], "shallow": [32, 71, 75, 87, 93, 137, 309], "pleas": [32, 71, 75, 87, 88, 89, 93, 137, 301], "detach": [32, 71, 75, 87, 93, 137, 231, 246, 247, 248, 249, 306], "non_block": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "memory_format": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "channels_last": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "complex": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207, 306, 307], "integr": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 158, 166, 170, 207, 302, 312, 313, 314], "unchang": [32, 71, 75, 87, 93, 104, 107, 121, 133, 136, 137, 139, 141, 201, 207, 279, 306, 315], "tri": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "pin": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "4d": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "ignore_w": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "1913": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "3420": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "5113": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "2325": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "torch_doctest_cuda1": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "gpu1": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "1914": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "5112": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207, 313], "2324": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "float16": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "cdoubl": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "3741": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "j": [32, 35, 58, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207, 304], "2382": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "5593": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207, 313], "4443": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "complex128": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "6122": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "1150": [32, 71, 75, 87, 93, 104, 121, 133, 136, 137, 139, 141, 207], "to_empti": [32, 71, 75, 87, 93], "dst_type": [32, 71, 75, 87, 93], "xpu": [32, 71, 75, 87, 93], "set_to_non": [32, 71, 75, 87, 93], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 315], "discretebox": [33, 71, 75, 87, 93, 308, 312], "chosen_data": [34, 54], "rewarddata": [34, 54, 300], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 86], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 313], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 105, 108, 121, 137, 141, 274, 314], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 298], "determin": [34, 35, 36, 39, 41, 52, 58, 121, 141, 203, 307, 312], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 160, 187], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "flatten": [34, 36, 39, 111, 279, 309, 312], "to_tensordict": [34, 36, 39, 309], "memmap": [34, 36, 39, 55, 87, 93, 142, 279, 315], "unbind": [34, 36, 39, 166], "alpha": [35, 41, 58, 153, 218, 223, 232, 234, 236, 306, 315, 317], "ep": [35, 41, 58, 142, 203, 219, 237, 280, 306, 307, 309], "1e": [35, 41, 58, 142, 160, 163, 176, 187, 306, 307, 308, 312], "08": [35, 41, 58, 313, 316], "collate_fn": [35, 38, 41, 42, 52, 53, 315, 317], "prefetch": [35, 38, 41, 42, 52, 53, 54, 306, 307, 309, 315], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 100, 121, 139, 154, 155, 156, 157, 158, 159, 162, 163, 164, 170, 175, 177, 178, 180, 181, 183, 184, 190, 200, 203, 217, 218, 222, 224, 225, 226, 227, 228, 229, 232, 233, 236, 237, 246, 251, 259, 314], "ab": [35, 58, 121, 139, 142, 154, 159, 163, 164, 170, 175, 177, 178, 180, 181, 183, 184, 190, 217, 218, 222, 225, 226, 227, 228, 229, 232, 233, 236, 314], "1511": [35, 58, 164], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 187, 204, 208, 300, 303], "null": [35, 41, 58, 99], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 315], "merg": [35, 38, 41, 42, 52, 53, 313], "mini": [35, 38, 41, 42, 52, 53, 312], "decid": [35, 38, 41, 42, 317], "rb": [35, 38, 41, 42, 52, 53, 100, 125, 307, 309, 312, 314, 315, 317], "meth": [35, 38, 41, 42, 231], "incompat": [35, 38, 41, 42, 315], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 315], "tensordictprioritizedreplaybuff": [35, 300, 317], "simplifi": [35, 313, 315], "manual_se": [35, 38, 41, 42, 98, 107, 117, 125, 171, 172, 179, 193, 200, 201, 203, 211, 217, 218, 220, 229, 236, 312, 313, 317, 318], "_weight": [35, 41, 315, 317], "arrai": [35, 40, 306, 315], "update_prior": [35, 58, 279, 304, 307, 315, 317], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 138], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 132, 306, 315], "nonetyp": [36, 39], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 71, 75, 87, 93, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214], "text": [37, 40, 43, 203, 308], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 154, 159, 180], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 315], "inde": [37, 107, 308, 313], "writer": [38, 42, 52, 53, 60, 64, 300, 308], "randomsampl": [38, 42, 52, 53, 300, 306], "roundrobinwrit": [38, 42, 52, 53, 300], "Not": 38, "ref_model": 40, "reward_model": [40, 213], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 115], "kl": [40, 115, 226, 230], "penalti": [40, 230], "strai": 40, "far": [40, 165, 188, 189, 313, 318], "calcul": [40, 125], "gpt2rewardmodel": 40, "get_dataload": [40, 300], "promptdata": [40, 300], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 313, 315], "reward_kl": [40, 115], "reward_raw": 40, "sample_log_prob": [40, 194, 195, 196, 204, 208, 210, 233, 291, 308, 312, 317], "create_rollout_td": 40, "log_prob": [40, 160, 171, 172, 179, 189, 208], "log_ratio": 40, "kl_coef": 40, "plu": [40, 313], "replic": 40, "rindex": 40, "multipli": [40, 218, 219, 223, 230, 232, 233, 234, 236, 280, 306], "term": [40, 115, 174, 175, 216, 217, 223, 284, 307, 308, 312], "subtract": [40, 132], "ve": [40, 306, 309], "eo": 40, "limit": [40, 83, 100, 115, 306, 307, 309, 312, 313], "generation_config": 40, "generationconfig": 40, "ti": [40, 255, 256, 257, 258, 260, 261, 262, 263, 307], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 218, 221, 223, 224, 229, 231, 234, 236, 238, 244, 315, 317], "td_error": [41, 42, 218, 220, 221, 223, 224, 229, 231, 234, 236, 238, 244, 306, 315, 317], "reduct": [41, 58], "prioritizedreplaybuff": [41, 300, 317], "update_tensordict_prior": [41, 306, 315, 317], "prioritizedsampl": [41, 42, 221, 224, 244, 300, 306, 315], "min": [41, 58, 187, 188, 189, 198, 203, 218, 219, 223, 232, 234, 236, 307, 308, 312], "median": [41, 58, 204, 208], "len": [41, 55, 56, 65, 119, 153, 168, 173, 306, 313, 314, 315, 317], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 81, 148], "huggingfac": [43, 202], "co": [43, 313], "doc": [43, 306, 307, 312, 318], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 300], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 84, 87, 93, 306, 307], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 75, 139, 151, 264, 315, 318], "condit": [45, 132, 199, 200, 205, 206, 216, 306, 313, 315], "elementwis": 45, "os": [45, 307], "cpu_count": 45, "vocabulari": 45, "loader": [45, 308], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 98, 100, 101, 102, 103, 105, 107, 108, 109, 111, 114, 117, 119, 122, 123, 125, 129, 131, 134, 139, 142, 151, 197, 198, 201, 203, 208, 221, 244], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 307], "batch_dimens": 45, "filder": 45, "tempfil": [45, 294, 306, 307], "randint": [45, 135, 315], "20": [45, 71, 75, 79, 87, 93, 198, 273, 308, 309, 312, 313, 317, 318], "temporarydirectori": [45, 306, 307], "tmpdir": [45, 306, 307], "data_memmap": 45, "exclus": [48, 49, 111, 166, 171, 172, 199, 200, 205, 206, 237, 238, 246, 247, 248, 249, 250, 298, 302], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_timeout_as_don": 52, "env_kwarg": [52, 296, 297, 306], "metadata": [52, 308, 312, 318], "reconstruct": [52, 226, 306, 318], "timeout": 52, "recov": [52, 197, 203, 209, 229, 311], "regard": [52, 162, 200, 217, 224, 233, 306, 308, 313], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 84, 191, 296, 297, 303, 308, 309, 315, 317], "left": [52, 104, 106, 115, 121, 123, 134, 136, 139, 141, 201, 307, 308], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 125, 128, 132, 152, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 307, 312], "absent": 52, "traj_split": 52, "observationnorm": [52, 142, 298, 306, 307, 308, 309, 317], "maze2d": 52, "umaz": 52, "loc": [52, 115, 117, 127, 165, 176, 188, 189, 194, 195, 196, 204, 208, 210, 217, 218, 229, 233, 234, 235, 236, 286, 291, 298, 302, 306, 307, 308, 309, 312, 317], "128": [52, 156, 159, 307, 309, 313, 314, 315], "public": [53, 121, 141], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 86], "adult_onehot": [53, 86], "mushroom_num": [53, 86], "mushroom_onehot": [53, 86], "covertyp": [53, 86], "shuttl": [53, 86], "magic": [53, 86], "infinit": [54, 315], "three": [54, 302, 304, 308, 312, 313, 315], "block": [54, 302, 309], "pairwisedataset": [54, 300], "256": [54, 159, 307, 308, 312, 313], "scratch_dir": [55, 306, 315], "mistak": [55, 56, 65], "myclass": [55, 56, 65], "foo": [55, 56, 65, 198, 315, 318], "bar": [55, 56, 65, 198, 275, 276, 278, 282, 304, 307], "attach": [55, 56, 57, 63, 65, 307], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 171, 172, 306], "auto": [56, 65, 203, 218, 223, 232, 234, 236, 238, 303, 312], "zero_": [56, 65, 148], "max_capac": [58, 306, 315], "uniformli": [59, 231, 318], "roundrobin": [60, 64], "piec": [60, 64, 66, 306, 307, 308, 312, 313, 315], "consum": [62, 307, 308, 312, 315], "incomplet": 62, "unlik": [62, 224, 233, 307, 317], "fresh": 62, "caution": [62, 144, 318], "shuffl": [62, 312], "haven": [62, 314], "remain": [62, 106, 107, 115, 132, 175], "draw": [62, 201], "__len__": 63, "_inplace_upd": [67, 68, 71, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 137], "_batch_lock": [67, 68, 71, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 137], "googl": [67, 68, 308, 309, 312], "ant": [67, 68, 78, 314], "get_environ": 68, "87": [68, 313], "acrobot": [68, 318], "fetch": [68, 115, 314, 315], "task_nam": 69, "cheetah": [69, 70, 306], "frame_skip": [69, 70, 74, 75, 80, 112, 275, 278, 285, 304, 306, 307, 308, 317], "dm_control": [70, 306, 311, 318], "continuousbox": [71, 75, 87, 93, 148, 308, 312, 313, 317], "unboundedcontinuoustensorspec": [71, 75, 83, 87, 93, 98, 105, 108, 133, 148, 152, 170, 193, 207, 210, 212, 235, 300, 308, 309, 312, 313], "another_act": [71, 75, 87, 93], "mutabl": [71, 75, 87, 93], "batch_lock": [71, 73, 75, 87, 93, 133, 137, 313], "immut": [71, 75, 87, 93, 123, 137], "another_don": [71, 75, 87, 93], "fake_tensordict": [71, 75, 87, 93, 307], "fake": [71, 75, 87, 93, 306, 307], "overridden": [71, 75, 87, 93, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 309], "afterward": [71, 75, 87, 93, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214, 318], "silent": [71, 75, 87, 93, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 180, 183, 184, 186, 191, 197, 198, 200, 201, 203, 206, 211, 214], "attibut": [71, 75, 87, 93], "speak": [71, 75, 87, 93, 306], "rand_act": [71, 75, 82, 87, 88, 89, 93], "_step": [71, 75, 87, 93, 98, 105, 108, 111, 123, 132], "privat": [71, 75, 87, 93, 313, 318], "another_reward": [71, 75, 87, 93], "callback": [71, 75, 87, 93, 312], "auto_reset": [71, 75, 87, 93, 313], "auto_cast_to_devic": [71, 75, 87, 93, 312], "break_when_any_don": [71, 75, 87, 93, 312], "return_contigu": [71, 75, 87, 93, 144, 311], "soon": [71, 75, 87, 88, 89, 93], "ndim": [71, 75, 87, 93], "concomitt": [71, 75, 87, 93], "workspac": [71, 75, 87, 93], "prevail": [71, 75, 87, 93], "creator": [72, 287, 288, 296, 297, 298], "substitut": [72, 142], "vecnorm": [72, 298], "env_creat": [72, 306], "test_env1": 72, "_td": 72, "observation_count": [72, 318], "test_env2": 72, "sleep": [72, 318], "ps": 72, "p1": 72, "p2": 72, "join": [72, 300, 307, 308], "9934": 72, "env_str": 73, "info_dict_read": 75, "set_info_dict_read": 75, "put": [75, 142, 298, 302, 307, 308, 309, 313], "read_act": 75, "read_don": 75, "reader": [75, 307], "broken": [75, 144], "read_ob": 75, "dictat": [75, 204, 208, 233, 306, 313], "inner": [75, 107, 304, 307, 308, 312, 318], "read_reward": 75, "baseinfodictread": 75, "info_dict": 75, "hoc": 75, "dict_read": 75, "default_info_dict_read": 75, "my_info_kei": 75, "some_env": 75, "placehold": [77, 137], "secur": 77, "behav": [77, 83, 179, 229, 314], "isaacgym": [78, 79], "isaacgymwrapp": [78, 300], "isaacgymenv": [79, 300], "webpag": 79, "isaac": 79, "essenc": 79, "04": [79, 308, 312, 313, 314, 316], "snake": [80, 81], "6x6": [80, 81], "td1": [81, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 306], "12x12": 81, "tsp50": 81, "tsp100": 81, "qualnam": 82, "marl": [82, 96, 312], "multiag": [82, 88, 89, 173, 181, 190, 244], "leverag": [82, 88, 89, 306, 312, 318], "neural": [82, 88, 89, 153, 185, 207, 302, 307, 308, 309, 312, 313, 318], "group_map": [82, 88, 89, 96], "constructiuon": [82, 88, 89], "premad": [82, 88, 89, 244], "all_in_one_group": [82, 96], "agent_0": [82, 88, 89, 96], "agent_1": [82, 88, 89, 96], "agent_2": [82, 88, 89, 96], "agent_3": 82, "int8": [82, 88, 89], "one_group_per_ag": [82, 88, 89], "environn": 83, "safeti": 83, "constraint": [83, 308, 312], "mymbenv": [83, 152, 170], "world_model": [83, 152, 170, 226], "super": [83, 98, 105, 108, 152, 162, 170, 212, 218, 220, 223, 229, 234, 236, 238, 306, 313, 317], "hidden_observ": [83, 152, 170], "mlp": [83, 152, 153, 155, 156, 157, 158, 166, 167, 170, 173, 194, 199, 221, 291, 302, 307, 311, 314, 317], "worldmodelwrapp": [83, 152, 170], "activation_class": [83, 152, 153, 155, 156, 157, 158, 163, 164, 168, 170, 173, 307, 312, 317], "relu": [83, 152, 159, 170, 176, 216], "activate_last_lay": [83, 152, 158, 168, 170], "depth": [83, 152, 153, 155, 156, 157, 158, 163, 164, 168, 170, 173, 177, 178, 199, 302, 307, 311, 312], "run_type_check": 83, "equal": [84, 87, 93, 116, 117, 153, 161, 166, 168, 173, 237, 241, 273, 296, 297, 306, 308, 314], "readthedoc": 84, "en": 84, "python_interfac": 84, "thread": 84, "task_id": 84, "106": [86, 313], "my_env_fun": [87, 93], "custom_attribute_list": [87, 93], "custom_attribut": [87, 93], "custom_method_list": [87, 93], "custom_method": [87, 93], "deploi": [87, 93], "slight": [87, 93, 307], "overhead": [87, 93], "share_individual_td": [87, 93], "shared_memori": [87, 93], "policy_proof": [87, 93], "ll": [87, 93, 306, 307, 308, 309, 312, 318], "hidden": [87, 93, 163, 166, 167, 177, 178, 183, 184, 194, 195, 196, 198, 207, 210, 219, 230, 233, 302, 309, 311, 317], "update_kwarg": [87, 93], "pettingzoo": [88, 89], "pet": [88, 89], "zoo": [88, 89], "guid": [88, 89, 91, 92, 132, 301, 306, 312], "__": [88, 89], "aecenv": [88, 89], "use_mask": [88, 89], "dead": [88, 89], "compulsori": [88, 89], "adversary_0": [88, 89], "adversari": [88, 89], "marlgroupmaptyp": [88, 89, 96, 300], "vectoris": [88, 89], "multiwalker_v9": 88, "return_st": [88, 89], "categorical_act": [88, 89, 91, 92], "n_piston": [88, 89], "21": [88, 89, 308, 311, 312, 313], "pistonball_v6": [88, 89], "piston": [88, 89], "piston_0": [88, 89], "piston_1": [88, 89], "piston_20": [88, 89], "aec": [88, 89], "tictactoe_v3": [88, 89], "player": [88, 89], "player_1": [88, 89], "player_2": [88, 89], "butterfli": 89, "parallel_env": [89, 306, 317, 318], "roboh": 90, "expos": [90, 105, 108, 209, 307], "vikashplu": 90, "read_info": 90, "pars": [90, 315], "smacv2": [91, 92], "starcraft": [91, 92], "challeng": [91, 92, 313, 314], "v2": [91, 92, 241, 255, 256, 257, 258, 260, 261, 262, 263, 291], "10gen_terran": [91, 92], "10gen_zerg": [91, 92], "10gen_protoss": [91, 92], "3m": [91, 92, 314], "8m": [91, 92, 314], "25m": [91, 92], "5m_vs_6m": [91, 92], "8m_vs_9m": [91, 92], "10m_vs_11m": [91, 92], "27m_vs_30m": [91, 92], "mmm": [91, 92], "mmm2": [91, 92], "2s3z": [91, 92], "3s5z": [91, 92], "3s5z_vs_3s6z": [91, 92], "3s_vs_3z": [91, 92], "3s_vs_4z": [91, 92], "3s_vs_5z": [91, 92], "1c3s5z": [91, 92], "2m_vs_1z": [91, 92], "corridor": [91, 92], "6h_vs_8z": [91, 92], "2s_vs_1sc": [91, 92], "so_many_banel": [91, 92], "bane_vs_ban": [91, 92], "2c_vs_64zg": [91, 92], "old": [91, 92, 230, 318], "smac": [91, 92], "map_nam": [91, 92], "18": [91, 92, 94, 95, 173, 308, 312, 313], "176": [91, 92, 313], "battle_won": [91, 92], "dead_al": [91, 92], "dead_enemi": [91, 92], "episode_limit": [91, 92], "322": [91, 92, 313], "Or": [91, 92], "procedur": [91, 92], "distribution_config": [91, 92], "n_unit": [91, 92], "n_enemi": [91, 92], "team_gen": [91, 92], "dist_typ": [91, 92], "weighted_team": [91, 92], "unit_typ": [91, 92], "marin": [91, 92], "maraud": [91, 92], "medivac": [91, 92], "exception_unit_typ": [91, 92], "start_posit": [91, 92], "surrounded_and_reflect": [91, 92], "map_x": [91, 92], "map_i": [91, 92], "capability_config": [91, 92], "88": [91, 92, 313, 314], "131": [91, 92, 313, 315], "starcraft2env": 92, "scenario": [94, 95, 306, 312, 313], "flock": [94, 95], "continuous_act": [94, 95, 312], "cohesion_rew": 94, "collision_rew": 94, "separation_rew": 94, "velocity_rew": 94, "agent_collision_rew": 95, "agent_distance_rew": 95, "agent_nam": 96, "ca": 96, "environment4": 96, "get_group_map": 96, "model_bas": [97, 152, 170], "adapt": [98, 230, 306, 313], "masker": 98, "binarydiscretetensorspec": [98, 221, 223, 244, 300], "maskedenv": 98, "ones_lik": 98, "scatter": 98, "unsqueez": [98, 100, 101, 135, 138, 167, 306, 309, 312, 313], "_set_se": [98, 105, 108, 313], "tranform": [98, 104, 109, 114, 129, 131, 132, 136, 140], "transform_reward_spec": [99, 103, 104, 105, 106, 115, 123, 126, 127, 136, 138], "as_invers": 100, "account": [100, 171, 172, 302, 307, 309, 315], "movement": 100, "veloc": [100, 312, 313, 318], "propos": [100, 169, 228, 237, 291, 302, 309, 315], "pdf": [100, 154, 155, 156, 157, 158, 162, 180, 200, 203, 224, 234, 237, 246, 251, 259, 291], "1312": 100, "5602": 100, "uesd": 100, "unsqueezetransform": [100, 313, 315], "consumpt": 100, "followin": 100, "pictur": 100, "cartpol": [100, 307, 309, 315, 318], "pixels_trsf": [100, 315], "grayscal": [100, 307, 309, 315, 318], "tensordictreplaybuff": [100, 279, 294, 300, 306, 307, 309, 315], "data_exclud": [100, 315], "_buffer": [100, 134], "transform_observation_spec": [100, 101, 102, 103, 104, 105, 106, 109, 111, 113, 114, 115, 117, 119, 123, 124, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 313], "del_kei": [101, 139, 311, 313], "unsqueeze_if_oor": 101, "observation_posit": 101, "observation_veloc": 101, "delet": 101, "key1": [101, 273, 281], "key2": [101, 273, 281], "crop": [102, 122, 265], "center": [102, 265], "width": [102, 124], "height": [102, 124], "squar": [102, 165, 188, 189, 265], "out_keys_inv": [103, 117, 118, 119, 123, 136, 313], "scalar": [103, 126, 156, 158, 174, 175, 197, 201, 203, 214, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 244, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 302, 307, 313], "permit": [103, 111, 138], "rewardsc": [104, 137, 306, 307, 309], "rewardclip": 104, "transformed_env": [104, 136, 137], "transform_env_devic": [104, 106, 136], "transform_input_spec": [104, 105, 106, 107, 117, 119, 123, 128, 131, 136, 138], "transform_output_spec": [104, 106, 115, 123, 136], "untouch": [104, 106, 115, 123, 136], "transformfull_done_spec": [104, 106, 115, 123, 136], "dtype_in": 105, "dtype_out": 105, "scan": [105, 108, 209, 210], "not_transform": [105, 108], "rule": [105, 108, 208, 302, 308], "constructedw": [105, 108], "myenv": [105, 108], "orig_devic": 106, "unspecifi": 106, "transform_done_spec": [106, 136], "num_actions_effect": 107, "max_act": 107, "include_forward": 107, "dimension": [107, 166, 246, 251, 259, 312], "num_act": [107, 223], "action_out": 107, "_call": [107, 111, 313], "excluded_kei": 109, "finit": [110, 315], "first_dim": 111, "last_dim": 111, "allow_positive_dim": [111, 138], "th": [111, 138, 313], "frameskip": 111, "repeatedli": [112, 308, 312], "init_kei": 114, "is_init": [114, 166, 203, 309], "tracker": 114, "coef": 115, "pi_curr": 115, "pi_0": 115, "constrain": [115, 166, 233], "overfit": 115, "fine": [115, 314], "probabilist": [115, 204, 300, 308, 317], "get_dist": [115, 208, 209], "mod": [115, 166, 211, 309], "normalparamextractor": [115, 302, 308, 312], "probabilisticactor": [115, 194, 195, 196, 198, 217, 218, 222, 223, 229, 232, 233, 234, 235, 236, 238, 302, 306, 308, 312], "tanhnorm": [115, 194, 195, 196, 204, 210, 217, 218, 229, 233, 234, 235, 236, 238, 300, 308, 312, 317], "n_ob": [115, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238], "n_act": [115, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238], "return_log_prob": [115, 194, 195, 196, 204, 208, 210, 235, 302, 308, 312, 317], "apply_": 115, "copy_": [115, 306], "formulat": 115, "diverg": [115, 166, 204, 208, 226, 230], "noop": [116, 317], "30": [116, 183, 184, 308, 312, 313], "trial": 116, "op": [116, 197, 201, 284, 306, 307], "randomli": [116, 117, 133, 201, 204, 208, 312, 313, 315], "noop_max": 116, "standard_norm": [117, 127, 306, 307, 309], "affin": [117, 127], "layer": [117, 142, 153, 155, 156, 163, 166, 168, 173, 174, 175, 177, 178, 185, 186, 192, 202, 211, 302, 307, 308, 309, 314], "normal": [117, 142, 153, 165, 168, 171, 172, 176, 188, 189, 197, 204, 208, 219, 230, 233, 278, 280, 298, 302, 304, 309, 312, 318], "set_default_tensor_typ": 117, "doubletensor": 117, "isclos": 117, "next_ob": [117, 246, 247, 248, 249, 317], "rubric": [117, 210], "init_stat": [117, 306, 307, 308, 309], "3752e": 117, "01": [117, 203, 214, 219, 230, 233, 309, 312, 313, 314, 316], "5087e": 117, "03": [117, 313, 314], "9294e": 117, "9636": 117, "5608": 117, "6408": 117, "num_it": [117, 307, 308], "reduce_dim": [117, 306, 307, 308, 309], "cat_dim": [117, 306, 307, 308, 309], "keep_dim": [117, 307, 309], "constant": [117, 132, 304, 306, 308, 309, 318], "statist": [117, 142, 235, 298, 306, 307, 308, 318], "approach": [117, 306, 308, 318], "gaussian": [117, 133, 152, 170, 174, 175, 180, 197, 308], "empir": [117, 152, 170, 204, 208, 306, 308, 312], "3d": 117, "third": [117, 200, 312], "reorder": 119, "in_keys_in": 119, "al": [119, 152, 318], "pong": [119, 318], "v5": [119, 318], "210": [119, 313], "160": [119, 313], "channel": [119, 177, 178, 307], "r3m": [121, 314], "resnet": [121, 139, 141], "visual": [121, 139, 141, 308, 313], "embed": [121, 139, 140, 141, 181, 193, 194, 195, 196, 207, 212, 314], "ego4d": [121, 139, 141], "univers": [121, 139, 141], "suraj": [121, 139], "nair": [121, 139], "aravind": [121, 139], "rajeswaran": [121, 139], "vikash": [121, 139, 141], "kumar": [121, 139, 141], "chelsea": [121, 139], "finn": [121, 139], "abhinav": [121, 139], "gupta": [121, 139], "2203": [121, 139, 170, 314], "12601": [121, 139, 314], "_init": [121, 139, 306], "snippet": [121, 139, 306], "resnet50": [121, 141, 314], "model_nam": [121, 139, 141, 268], "resnet34": 121, "resnet18": 121, "r3m_vec": [121, 314], "feed": [121, 141, 231, 302, 306, 312, 315], "244": [121, 141, 313], "stack_imag": [121, 141], "tread": [121, 141], "separet": [121, 141], "hub": [121, 141, 314], "resnet50_weight": [121, 141], "imagenet1k_v1": [121, 141], "download_path": [121, 141], "tensor_pixels_kei": [121, 141], "dest": [121, 139, 141, 207], "sub_seq_len": 122, "sample_dim": [122, 306], "primarili": 122, "hesit": 122, "request": 122, "robust": 122, "mix": [122, 181, 190, 244, 306, 312], "NOT": 122, "improp": 122, "create_copi": 123, "renam": [123, 125, 151, 306], "stuff": 123, "braxenv": [123, 300], "newnam": 123, "interpol": [124, 307, 309], "bilinear": [124, 309], "r2g": 125, "99": [125, 142, 170, 227, 240, 245, 252, 294, 306, 307, 308, 313, 317], "reward_to_go": 125, "bernoulli_": 125, "9010": 125, "9404": [125, 252], "9701": [125, 252], "9900": [125, 252], "0000": [125, 201, 211, 252, 308, 309, 313, 317], "crash": 125, "clamp_min": 126, "clamp_max": 126, "clip_min": 126, "clip_max": 126, "episode_": 128, "reward1": 128, "reward2": 128, "ho": 128, "excludetransform": [129, 315], "squeeze_dim": 130, "step_count_kei": 131, "recognis": 131, "target_return": 132, "accordingli": [132, 205, 309], "conjunct": [132, 307], "hindsight": 132, "relabel": 132, "reward2gotransform": 132, "primer": [133, 309], "default_valu": [133, 309], "unit": [133, 152, 163, 177, 178, 183, 184, 308], "transfomedenv": 133, "mykei": 133, "__unless": 133, "exists__": 133, "dtype_or_devic": 133, "pool": 134, "from_int": 135, "255": [135, 313, 315], "ri": 135, "principl": 136, "cattransform": 136, "notabl": 136, "rewardsum": [136, 312], "cache_spec": 137, "anymor": [137, 207], "set_missing_toler": 137, "keyerror": 137, "unsqueeze_dim": [138, 313], "danger": 138, "vc1": 139, "vc1_vec": 139, "small": [139, 306, 308, 312, 318], "untrain": 139, "make_noload_model": 139, "naiv": 139, "vip": [140, 141, 314], "toward": 141, "implicit": [141, 229, 315], "jason": 141, "ma": 141, "shagun": 141, "sodhani": 141, "dinesh": 141, "jayaraman": 141, "osbert": 141, "bastani": 141, "ami": 141, "zhang": 141, "vip_vec": 141, "shared_td": 142, "decai": [142, 197, 201, 237, 280, 306, 307, 309, 318], "9999": [142, 313], "0001": [142, 163, 176, 308, 313], "fly": [142, 230, 303, 308, 313, 315, 318], "to_observation_norm": 142, "underflow": [142, 280], "build_td_for_shared_vecnorm": 142, "memmori": 142, "memmap_": 142, "queue": [142, 315], "td_share": 142, "v": [142, 194, 229, 236, 302, 306, 307], "state_dim": [143, 154, 159, 180, 183, 184, 198], "action_dim": [143, 154, 155, 157, 159, 180, 198, 306, 311], "gsde": [143, 234, 298], "func": [143, 306, 307], "gsdemodul": 143, "check_dtyp": 144, "short": [144, 307, 308, 312], "discrep": [144, 217, 219, 220, 221, 230, 233, 235, 244], "imposs": 144, "probabilistictdmodul": [149, 150, 168, 204, 208, 245, 278], "next_tensordict": 151, "keep_oth": [151, 313], "exclude_reward": 151, "exclude_don": 151, "exclude_act": 151, "next_": 151, "funtion": [151, 313], "cross": 152, "entropi": [152, 217, 218, 219, 223, 229, 230, 232, 233, 234, 236, 238, 312], "botev": 152, "et": 152, "2013": 152, "cem": 152, "plan": [152, 169, 170], "varianc": [152, 165, 176, 188, 189, 303, 306, 308, 312], "rank": 152, "k": 152, "repeat": [152, 308, 312, 313], "maximis": [152, 155, 157, 170, 302, 306, 307, 308, 312, 313], "horizon": [152, 170, 308], "modelbasedenv": [152, 170], "planning_horizon": [152, 170], "optim_step": [152, 170], "mpc": [152, 169, 170], "num_candid": [152, 170], "candid": [152, 170], "top_k": [152, 170], "modelbasedenvbas": [152, 169, 170, 300], "safemodul": [152, 169, 194, 196, 208, 217, 218, 223, 229, 233, 234, 235, 236, 238, 287, 288, 294, 300, 317], "next_hidden_observ": 152, "num_cel": [153, 155, 156, 157, 158, 163, 164, 166, 168, 173, 194, 307, 308, 309, 312, 317], "elu": [153, 155, 156, 157, 158, 163, 164, 307, 317], "activation_kwarg": [153, 168], "norm_class": [153, 155, 156, 168], "norm_kwarg": [153, 168], "bias_last_lay": [153, 155, 156, 157, 158, 164, 168], "aggregator_class": [153, 155, 156, 307, 309, 317], "squashdim": [153, 155, 317], "aggregator_kwarg": [153, 155, 156, 307, 309], "squeeze_output": [153, 155, 156, 307, 309], "convolut": [153, 155, 156, 185], "produc": [153, 168, 173, 179, 194, 196, 198, 265, 308, 309, 315, 318], "cell": [153, 168, 173, 308], "kernel": [153, 164, 167], "cnet": 153, "34": [153, 168, 308, 313, 316], "35": [153, 168, 309, 312, 313, 314], "rectangular": 153, "transformer_config": [154, 180, 198], "decisiontransform": [154, 180], "dtconfig": [154, 159, 180], "2202": [154, 159, 180, 232], "05607": [154, 159, 180, 232], "return_to_go": [154, 159, 180, 198], "conv_net_kwarg": [155, 156], "mlp_net_kwarg": [155, 156, 157], "use_avg_pool": [155, 156], "WITH": [155, 156, 157, 158, 203, 237], "1509": [155, 156, 157, 158, 170, 203, 228, 237, 313], "02971": [155, 156, 157, 158, 203, 237], "convnet": [155, 309, 317], "ndims_in": 155, "avgpool": [155, 156], "adaptiveavgpool2d": [156, 307, 309], "400": [157, 158, 312, 313, 315], "mlp_net_kwargs_net1": 158, "mlp_net_kwargs_net2": 158, "decion": 159, "desdescrib": 159, "n_embd": 159, "n_layer": 159, "n_head": 159, "n_inner": 159, "n_posit": 159, "resid_pdrop": 159, "attn_pdrop": 159, "gpt2config": 159, "atol": [160, 187], "06": [160, 187, 308, 313, 314], "rtol": [160, 187], "batch_shap": [160, 187], "event_shap": [160, 187], "absolut": [160, 187, 306], "densiti": [160, 171, 172, 179, 189], "mass": [160, 171, 172, 179, 189, 313], "rsampl": [160, 172, 179, 208], "sample_shap": [160, 171, 172, 179], "dqnet": 161, "atom": 161, "softmax": [161, 172, 179, 199, 200], "action_spac": [162, 182, 199, 200, 205, 206, 217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 309], "var_num": [162, 182, 199, 200, 206], "action_value_kei": [162, 182, 199, 200, 205, 206, 231, 244], "action_mask_kei": [162, 182, 199, 200, 201, 205, 206], "perspect": [162, 200, 224, 308], "1707": [162, 200, 224, 233], "06887": [162, 200, 224], "mult": [162, 173, 182, 199, 200, 205, 206], "functional_modul": [162, 182, 205, 207, 210, 302], "make_funct": [162, 182, 204, 205, 207, 210, 212, 231, 302, 317], "tensordict_modul": [162, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 220, 223, 229, 233, 234, 235, 236, 238, 302], "nbin": [162, 199, 302], "customdistributionalqv": 162, "log_softmax": [162, 199], "one_hot": [162, 172, 182], "qvalue_actor": [162, 182, 199, 205, 302], "std_bia": 163, "std_min_val": 163, "belief": [163, 177, 183, 184], "1912": [163, 225, 226, 227], "01603": [163, 225, 226, 227], "softplu": [163, 176, 214, 215, 216], "out_features_valu": 164, "cnn_kwarg": [164, 307], "mlp_kwarg": [164, 167, 307], "duel": 164, "cnn": [164, 307, 317], "06581": 164, "512": [164, 313, 315], "upscal": [165, 188, 189], "tanh_loc": [165, 188, 189], "event_dim": [165, 187, 188], "ultim": [165, 188, 189], "poor": [165, 188, 189], "explos": [165, 188, 189], "switch": [165, 189], "sigma": [165, 180, 188, 189, 197, 203, 308], "formula": [165, 188, 189, 217, 219, 230, 233, 303, 308], "embedd": [166, 167], "lstmcell": 166, "correspont": 166, "input_s": [166, 167, 309], "hidden_s": [166, 167, 309], "num_lay": [166, 177, 178], "b_ih": 166, "b_hh": 166, "introduc": [166, 203, 306], "proj_siz": 166, "recurrent_state_h": [166, 309], "recurrent_state_c": [166, 309], "triplet": [166, 205, 206], "custom_kei": 166, "temporal_mod": 166, "set_temporal_mod": 166, "seq": [166, 309, 311], "lstm_modul": 166, "rs_h": 166, "rs_c": 166, "set_recurrent_mod": [166, 309], "batch_first": [166, 309], "hidden0": 166, "hidden1": 166, "policy_infer": 166, "policy_train": 166, "traj_td": 166, "td_inf": 166, "assert_clos": 166, "lstm_kwarg": 167, "next_observ": [167, 217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 311], "time_step": 167, "2d": [167, 312], "hidden0_in": 167, "hidden1_in": 167, "hidden0_out": 167, "hidden1_out": 167, "single_bias_last_lay": 168, "layer_class": 168, "layer_kwarg": 168, "perceptron": 168, "seamless": 168, "lazylinear": [168, 302, 308, 313, 314, 317], "42": [168, 217, 218, 220, 229, 236, 312, 313], "noisylinear": [168, 174, 300, 307], "noisylazylinear": [168, 300], "At": [169, 201, 307, 308, 309, 311, 313, 314], "mpcplanner": 169, "tensordict_out": [169, 318], "mppi": 170, "covari": 170, "william": [170, 235], "aldrich": 170, "theodor": 170, "01149": 170, "hansen": 170, "wang": 170, "su": 170, "04955": 170, "valueoper": [170, 194, 195, 196, 217, 218, 219, 220, 223, 229, 230, 233, 234, 235, 236, 238, 294, 302, 306, 308], "tdlambdaestim": [170, 300, 306], "value_net": [170, 221, 235, 246, 247, 248, 249, 308], "adv": 170, "lmbda": [170, 240, 246, 249, 251, 257, 258, 259, 262, 263, 303, 306, 308, 312], "95": [170, 240, 308, 309, 313, 315], "value_network": [170, 220, 221, 224, 229, 236, 246, 247, 248, 249, 303, 306, 308], "temperatur": [170, 218, 229], "neg_inf": [171, 172], "inf": [171, 172], "padding_valu": [171, 172], "www": [171, 172], "api_doc": [171, 172], "tf_agent": [171, 172], "event": [171, 172, 179, 255, 256, 257, 258, 260, 261, 262, 263, 315], "unnorm": [171, 172, 179], "sparse_mask": [171, 172], "dens": [171, 172], "0831": [171, 172], "1203": [171, 172], "0928": [171, 172], "1972": [171, 172], "grad_method": [172, 179], "reparamgradientstrategi": [172, 179], "passthrough": [172, 179], "proxi": [172, 179, 303], "relaxedonehot": [172, 179], "zeros_lik": [172, 313], "sample_non_valid": 172, "n_agent_input": [173, 312], "n_agent_output": [173, 312], "centralis": [173, 312], "share_param": [173, 312], "homogen": [173, 312], "toech": 173, "agent_network": 173, "modulelist": [173, 291, 317], "centalis": 173, "shown": [173, 302, 311, 312, 315], "std_init": [174, 175], "matrix": [174, 175], "initialize_paramet": 174, "isol": 174, "1706": [175, 190], "10295v3": 175, "induc": 175, "aid": 175, "scale_map": 176, "biased_softplus_1": 176, "scale_lb": [176, 183, 184], "exp": [176, 216], "module_norm": 176, "decod": 177, "1803": [177, 178, 181], "10122": [177, 178], "rnn_hidden": 177, "latent": 178, "excacli": 179, "inres": 180, "mu": [180, 203, 308], "state_shap": [181, 244], "mixing_embed_dim": [181, 244], "qmix": [181, 312], "mixer": [181, 190, 244], "monoton": 181, "hyper": 181, "11485": 181, "qmixerloss": [181, 190], "qmix_vdn": [181, 190], "eventu": [181, 309, 313], "vdn": [181, 190], "greedi": [182, 200, 201, 206, 307, 309], "hidden_dim": [183, 184], "posterior": [183, 226], "rssm": [183, 184, 226], "1811": [183, 184], "04551": [183, 184], "obs_embed": 183, "rnn_hidden_dim": 184, "dream": 184, "tanhtransform": 188, "decomposit": 190, "05296": 190, "vmap": [191, 207, 210, 317], "hide": [191, 308, 312], "satisfi": [191, 302], "tensordictmodulebas": [191, 199, 205, 309], "vmap_dim": 191, "lam": 191, "sample_in": 191, "sample_in_td": 191, "vm": 191, "translat": [193, 204], "character": [193, 199, 204, 205, 207, 315], "overflow": [193, 199, 200, 204, 205, 206, 207, 208], "td_modul": [193, 194, 195, 196, 204, 207, 208, 210, 212, 317], "3635": 193, "0340": 193, "1476": 193, "3911": [193, 313], "1664": [193, 313], "5455": 193, "2247": 193, "4583": 193, "2916": 193, "2160": 193, "5337": 193, "5193": 193, "grad_fn": [193, 201, 317], "addmmbackward0": 193, "actorvalueoper": [194, 302], "get_policy_oper": [194, 195, 196, 219, 230, 233, 302], "standalon": [194, 195, 196], "tdmodul": [194, 195, 196, 294], "get_critic_oper": 194, "common_oper": [194, 196], "policy_oper": [194, 195, 196], "value_oper": [194, 195, 196], "normalparamwrapp": [194, 195, 196, 204, 210, 217, 218, 223, 229, 233, 234, 235, 236, 238, 300, 317], "module_hidden": [194, 196], "td_module_hidden": [194, 196], "module_act": [194, 196], "td_module_act": [194, 195, 196], "module_valu": [194, 195, 196], "td_module_valu": [194, 195, 196], "state_action_valu": [194, 212, 218, 236, 245, 291, 294, 302, 306, 317], "td_clone": [194, 195, 196], "tensordictmodulewrapp": [194, 287, 288, 294], "get_policy_head": [194, 195, 196], "safesequenti": [194, 195, 196, 244], "head": [194, 196, 219, 230, 233], "get_value_head": [194, 195, 196], "get_value_oper": [194, 195, 196, 219, 230, 233], "action_modul": 195, "state_valu": [195, 196, 212, 219, 230, 233, 234, 236, 246, 247, 248, 249, 251, 253, 255, 257, 259, 260, 262, 302, 306, 308, 312], "qualiti": [196, 302], "actorcriticoper": [196, 219, 230, 233, 302], "embeddig": 196, "refet": 196, "actorcriticwrapp": [196, 302, 306], "po": 197, "sigma_init": 197, "epsilon": [197, 201, 203, 237, 280, 307, 308, 309], "sigma_end": 197, "annealing_num_step": [197, 201, 203, 306, 307, 309], "captur": [197, 201, 203], "omiss": [197, 201, 203], "ommit": [197, 201, 203, 315], "inferec": 198, "set_tensor_kei": 198, "dt_inference_wrapp": 198, "baz": 198, "inference_context": 198, "obs_dim": 198, "15": [198, 203, 225, 308, 312, 313, 315, 316, 317], "tanhdelta": [198, 300, 306], "dtactor": 198, "actor_modul": [198, 317], "dist_class": 198, "dist_kwarg": 198, "distribution_kwarg": [198, 204, 208, 308, 312], "inference_actor": 198, "sequence_length": 198, "mask_context": 198, "qvaluemodul": [199, 205, 244, 309], "distributionaldqnnet": 199, "make_log_softmax": 199, "my_action_valu": [200, 206], "chanc": 200, "thid": 200, "threshold": [201, 218, 219, 308], "eps_init": [201, 203, 307, 309], "eps_end": [201, 203, 307], "explorative_polici": [201, 203], "9055": [201, 313], "9277": 201, "6295": 201, "2532": 201, "addbackward0": 201, "lmheadmodel": 202, "extract": [202, 306, 308], "actor_head": [202, 219, 230, 233], "base_model": 202, "lm_head": 202, "ornstein": 203, "uhlenbeck": 203, "ou": [203, 306], "correl": 203, "sort": 203, "noise_t": 203, "noise_": 203, "theta": [203, 308, 313], "sigma_t": 203, "sqrt": 203, "sigma_": 203, "anneal": 203, "ou_prev_nois": 203, "ou_step": 203, "increas": [203, 312], "x0": 203, "sigma_min": 203, "n_steps_ann": 203, "is_init_kei": 203, "_ou_prev_nois": 203, "_ou_step": 203, "default_interaction_typ": [204, 208], "interaction_typ": [204, 208], "set_interaction_typ": [204, 208], "cache_dist": [204, 208], "n_empirical_estim": [204, 208], "chose": 206, "functionalmodul": 207, "functionalmodulewithbuff": 207, "grucel": 207, "td_fmodul": 207, "td_function": 207, "td_state": 207, "ensembl": [207, 234], "params_repeat": 207, "td_vmap": [207, 210], "random_sampl": [207, 208], "suppli": 208, "fist": 208, "log_prob_kei": [208, 312], "probabilistictensordictsequenti": [209, 217, 219, 230, 233, 235, 287, 288, 317], "partial_toler": [209, 210, 311], "who": [209, 210], "AND": [209, 210], "tensordictsequenci": 210, "tensordictsequ": 210, "safeprobabilisticmodul": [210, 302], "spec1": 210, "net1": 210, "module1": 210, "td_module1": 210, "spec2": 210, "module2": 210, "td_module2": 210, "clamp": [211, 226, 282, 313], "boundari": [211, 308, 312], "resolut": 211, "simplest": [211, 306, 308, 309, 312, 315, 318], "9944": 211, "9991": 211, "3020": 211, "2299": [211, 313], "5418": 211, "2989": 211, "6849": 211, "3169": 211, "2690": 211, "9649": [211, 313], "5686": 211, "8602": 211, "0315": 211, "8455": [211, 313], "6027": 211, "4746": 211, "7843": 211, "7782": 211, "2111": 211, "5115": 211, "4687": 211, "5760": 211, "custommodul": 212, "cat": [212, 218, 220, 229, 234, 236, 238, 317], "imaginari": 213, "imagin": 213, "transition_model": 213, "get_reward_oper": 213, "get_transition_model_oper": 213, "min_val": [214, 216], "bias": [214, 303, 306], "_bia": 214, "invert": [215, 308], "surject": 216, "expln": 216, "biased_softplu": [216, 300], "beggin": 216, "biased_softplus_": 216, "syntax": [216, 306], "met": [216, 313], "1602": 217, "01783v2": 217, "entropy_bonu": [217, 219, 230, 233, 308], "favour": [217, 219, 230, 233], "samples_mc_entropi": [217, 219, 230, 232, 233], "mont": [217, 219, 230, 233, 306], "carlo": [217, 219, 230, 233, 306], "entropy_coef": [217, 219, 230, 233, 308, 312], "critic_coef": [217, 219, 230, 233, 308], "loss_critic_typ": [217, 219, 230, 233, 235, 308], "l1": [217, 219, 220, 221, 223, 230, 233, 234, 235, 238, 241, 244, 302, 306], "l2": [217, 219, 220, 221, 222, 223, 226, 227, 230, 233, 234, 235, 238, 241, 244, 306], "smooth_l1": [217, 218, 219, 220, 221, 223, 229, 230, 233, 234, 235, 236, 238, 241, 244, 308], "separate_loss": [217, 219, 220, 223, 229, 230, 233, 234, 235, 236, 238], "propag": [217, 219, 220, 223, 229, 230, 233, 234, 235, 236, 238, 246, 247, 248, 249, 308, 312], "advantage_kei": [217, 219, 230, 233, 235, 246, 247, 248, 249], "value_target_kei": [217, 219, 230, 233, 235, 246, 247, 248, 249, 308], "value_target": [217, 219, 230, 233, 235, 246, 247, 248, 249, 308, 312], "loss_crit": [217, 233, 308, 312], "loss_entropi": [217, 233, 308, 312], "loss_object": [217, 233, 308, 312], "recur": [217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238, 246, 247, 248, 249, 250], "next_reward": [217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238], "next_don": [217, 218, 220, 221, 223, 229, 233, 234, 235, 236, 238], "loss_obj": 217, "sacloss": [217, 228, 237, 300], "select_out_kei": [217, 218, 220, 223, 229, 233, 234, 236, 238], "essenti": [217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 244, 307, 313, 315], "make_value_estim": [217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 239, 244, 303, 306, 307, 312], "value_typ": [217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 240, 244, 306], "valueestim": [217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 240, 244, 300, 303, 306, 312], "hyperparam": [217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 306, 313], "enum": [217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 240, 244, 306], "default_value_estim": [217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 306], "refin": [217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244], "default_value_kwarg": [217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 244, 300, 306], "dqnloss": [217, 218, 220, 223, 224, 225, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 244, 289, 300, 303, 307, 309], "dqn_loss": [217, 218, 220, 221, 223, 224, 225, 229, 231, 233, 234, 235, 236, 238, 239, 244], "conserv": 218, "2006": [218, 313], "04779": 218, "actor_network": [218, 220, 222, 223, 229, 232, 234, 236, 238, 306], "qvalue_network": [218, 223, 229, 234, 236, 238], "loss_funct": [218, 220, 221, 222, 223, 229, 234, 236, 238, 241, 244, 306], "alpha_init": [218, 223, 232, 234, 236], "min_alpha": [218, 223, 232, 234, 236], "max_alpha": [218, 223, 232, 234, 236], "fixed_alpha": [218, 223, 232, 234, 236], "target_entropi": [218, 223, 232, 234, 236], "prod": [218, 232, 236], "n_action": [218, 221, 232, 236], "delay_actor": [218, 220, 236, 238], "delay_qvalu": [218, 223, 234, 236, 238], "min_q_weight": 218, "max_q_backup": 218, "backup": 218, "deterministic_backup": 218, "num_random": 218, "with_lagrang": 218, "lagrang": 218, "lagrange_thresh": 218, "valueclass": [218, 220, 223, 229, 234, 236, 238], "qvalu": [218, 223, 229, 234, 236, 238, 291], "loss_actor": [218, 220, 223, 229, 234, 235, 236, 238, 277, 306, 317], "loss_alpha": [218, 223, 234, 236], "loss_alpha_prim": 218, "loss_qvalu": [218, 223, 229, 234, 236, 238], "clip_epsilon": [219, 308, 312], "normalize_advantag": [219, 230, 233, 312], "value_kei": [219, 230, 233, 246, 247, 248, 249, 306], "somemodul": [219, 230, 233], "someactor": [219, 230, 233], "value_head": [219, 230, 233], "somevalu": [219, 230, 233], "loss_modul": [219, 228, 230, 231, 233, 237, 282, 293, 294, 303, 304, 306, 307, 308, 312, 315], "ppoloss": [219, 230, 300], "delay_valu": [220, 221, 224, 235, 236, 244, 307, 309], "loss_valu": [220, 229, 235, 236, 306, 308, 312, 317], "pred_valu": [220, 238, 306, 317], "pred_value_max": [220, 306, 317], "target_valu": [220, 234, 238, 245, 303, 306, 317], "target_value_max": [220, 306, 317], "qvalueactor": [221, 244, 302, 307, 309], "mult_one_hot": [221, 223, 244], "loss_val": [221, 303, 306, 308, 309, 312, 315], "2106": 222, "01345": 222, "ste": 223, "num_qvalue_net": [223, 229, 234, 236, 238], "target_entropy_weight": 223, "onehotcategor": [223, 300], "disctount": 224, "distributionalqvalueactor": [224, 302], "input_tensordict": [224, 306], "actor_model": 225, "value_model": [225, 227], "model_based_env": 225, "dreamerenv": [225, 300], "imagination_horizon": 225, "unrol": [225, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263], "discount_loss": [225, 227], "lambda_kl": 226, "lambda_reco": 226, "lambda_reward": 226, "reco_loss": 226, "reward_loss": 226, "free_nat": 226, "nat": 226, "delayed_clamp": 226, "global_averag": 226, "value_loss": 227, "fake_data": 227, "ddpgloss": [228, 237, 294, 300, 306, 317], "td3loss": [228, 237, 300], "value_network_update_interv": 228, "contrast": [228, 315], "06461": 228, "2110": 229, "06169": 229, "expectil": 229, "tau": [229, 237, 306, 307], "antmaz": 229, "sticht": 229, "loss_value_diff": 229, "diff": 229, "old_polici": 230, "new_polici": 230, "distanc": [230, 241, 245, 246, 312], "apart": [230, 312], "dtarg": 230, "samples_mc_kl": 230, "analyt": 230, "decrement": 230, "loss_": [231, 277, 303, 306], "equip": [231, 309], "gh": 231, "_acceptedkei": 231, "dataclass": [231, 291], "_forward_value_estimator_kei": 231, "alter": [231, 302], "value_estim": [231, 246, 247, 248, 249, 250, 303, 306, 312], "myloss": 231, "action2": 231, "convert_to_funct": [231, 306], "expand_dim": 231, "create_target_param": [231, 306], "compare_against": [231, 306], "funs_to_decor": 231, "stuctur": 231, "_param": 231, "expans": 231, "resampl": 231, "_target_param": 231, "valueestimatorbas": [231, 300], "blend": 231, "upcom": [231, 255, 256, 257, 258, 260, 261, 262, 263, 306], "proxim": [233, 308, 312], "optimis": [233, 278, 308, 312], "flavour": [233, 312, 317], "clipppoloss": [233, 300, 308, 312], "klpenppoloss": [233, 300], "regularis": 233, "06347": 233, "gae": [233, 300, 303, 306, 308, 312], "ppo_loss": 233, "tdlambda": [233, 240, 303, 306], "base_lay": 233, "randn_lik": 233, "samplelogprob": 233, "openreview": [234, 291], "ay8zfzm0tdd": [234, 291], "sub_sample_len": 234, "subsampl": [234, 273, 304], "action_log_prob_actor": 234, "state_action_value_actor": [234, 238], "connectionist": 235, "1992": 235, "doi": 235, "1007": 235, "bf00992696": 235, "actor_net": [235, 306, 308], "1801": 236, "01290": 236, "applic": [236, 244, 313], "1812": 236, "05905": 236, "redqloss": [237, 300], "math": 237, "theta_t": [237, 313], "theta_": [237, 313], "polyak": 237, "policy_nois": 238, "noise_clip": 238, "next_state_valu": [238, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 300], "td0": [239, 306], "strict_shap": 241, "view_a": 241, "qmixer": [244, 300], "local_valu": 244, "visibl": [244, 312], "dafault": 244, "acceptedkei": 244, "global_valu": 244, "penultim": 244, "local_value_network": 244, "mixer_network": 244, "suggest": [244, 312], "value_modul": [244, 308, 317], "qnet": [244, 306], "next_val_kei": 245, "pred_next_v": 245, "usus": 245, "mse": 245, "q_valu": 245, "n_steps_to_next": 245, "value_next_st": 245, "1506": [246, 251, 259], "02438": [246, 251, 259], "exponenti": [246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 280], "average_ga": [246, 308], "skip_exist": [246, 247, 248, 249], "advang": 246, "gradient_mod": 246, "value_error": [246, 247, 248, 249, 250], "sign": 246, "unused_arg": 246, "target_param": [246, 247, 248, 249, 250, 306, 312], "98": [246, 247, 248, 249, 313, 314], "94": [246, 249, 313], "unpack": [246, 247, 248, 249], "tensor_kei": [246, 247, 248, 249, 250], "next_valu": [246, 247, 248, 249, 250], "aka": [247, 307], "average_reward": [247, 248, 249], "tdestim": [247, 248, 250], "infti": 248, "valuefunctionbas": 250, "time_dim": [251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263], "old_stat": [251, 253, 255, 257, 259, 260, 262], "new_stat": [251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "rolling_gamma": [255, 256, 257, 258, 260, 261, 262, 263], "g1": [255, 256, 257, 258, 260, 261, 262, 263], "g2": [255, 256, 257, 258, 260, 261, 262, 263], "g3": [255, 256, 257, 258, 260, 261, 262, 263], "g4": [255, 256, 257, 258, 260, 261, 262, 263], "v3": [255, 256, 257, 258, 260, 261, 262, 263], "v4": [255, 256, 257, 258, 260, 261, 262, 263, 306, 308, 314], "out_file_bas": 264, "skip_reset": 264, "dump": 264, "interv": [264, 265, 274, 284, 307, 313], "center_crop": 265, "make_grid": 265, "Will": 265, "grid": 265, "exp_nam": [266, 267, 270, 271, 272, 294, 307], "log_dir": [266, 267, 269, 271, 307], "templat": 266, "csv": [267, 269, 307], "minim": [267, 315], "dependeci": 267, "experiment_nam": [268, 269], "uuid": [268, 307, 318], "date": 268, "logger_typ": 269, "logger_nam": 269, "tensorboard": [269, 271, 317], "wandb": [269, 272, 317], "mlflow": [269, 270], "wandb_kwarg": 269, "mlflow_kwarg": 269, "tracking_uri": 270, "uri": 270, "datastor": 270, "tb_log": 271, "tensoarboard": 271, "sub_traj_len": 273, "min_sub_traj_len": 273, "register_op": [273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 304, 307], "process_optim_batch": [273, 279, 280, 304], "td_out": [273, 281], "_process_optim_batch_hook": [273, 304], "batch_subsampl": 273, "clear_cuda": 274, "pre_optim_step": [274, 304], "counter": [275, 304], "log_pbar": [275, 276, 278, 280, 304, 307], "progress": [275, 276, 278, 282, 304, 307, 309, 318], "count_fram": 275, "pre_steps_log": [275, 276, 304], "count_frames_log": 275, "lognam": 276, "r_train": 276, "log_reward": [276, 307], "loss_compon": 277, "appl": 277, "omit": [277, 308, 313, 315], "optimizer_hook": 277, "record_interv": [278, 306, 307], "record_fram": [278, 285, 306, 307], "policy_explor": [278, 294, 306, 307], "log_kei": [278, 307], "suffix": 278, "underestim": 278, "suppos": [278, 304, 318], "set_exploration_typ": [278, 300, 308, 309, 317], "r_evalu": [278, 306], "flatten_tensordict": [279, 307], "max_dim": 279, "rb_trainer": 279, "batch_process": [279, 280, 281, 304], "post_loss": [279, 304], "999": [280, 307], "jitter": 280, "finfo": 280, "default_dtyp": 280, "get_default_dtyp": 280, "reward_norm": 280, "update_reward_stat": 280, "normalize_reward": 280, "make_train": [281, 300], "_process_batch_hook": [281, 304], "select_kei": [281, 304], "versatil": 282, "lossmodul": [282, 293, 294, 300], "optim_steps_per_batch": [282, 304, 307], "epoch": [282, 308, 312], "clip_grad_norm": 282, "partial": [282, 309], "clip_norm": 282, "progress_bar": 282, "tqdm": [282, 306, 308, 309, 312, 313], "save_trainer_interv": 282, "disk": [282, 304, 306, 307, 309, 315], "log_interv": [282, 307], "save_trainer_fil": [282, 304], "datacollectorbas": [284, 287, 288, 294, 300], "update_weights_interv": [284, 307], "sit": [284, 307], "update_weight": 284, "post_step": [284, 304], "cfg": [285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298], "dictconfig": [285, 286, 287, 288, 291, 292, 293, 294, 295, 298], "divid": [285, 302, 306, 312, 313], "unknowingli": 285, "annealing_fram": [285, 306], "init_env_step": [285, 286, 306], "proof_environ": [286, 291, 306], "sta": 286, "ot": 286, "actor_model_explor": [287, 288, 306], "make_env_kwarg": [287, 288], "targetnetupdat": [289, 290, 293, 294], "redqloss_deprec": 290, "actor_net_kwarg": 291, "qvalue_net_kwarg": 291, "observation_kei": 291, "dummi": [291, 306, 318], "parser_env_arg": 291, "parser_model_args_continu": 291, "cattensor": [291, 306, 311, 313, 318], "hydra": 291, "config_stor": 291, "configstor": 291, "halfcheetah": [291, 306], "config_field": 291, "config_cl": 291, "redqmodelconfig": 291, "envconfig": 291, "make_dataclass": 291, "cls_name": 291, "cs": 291, "config_path": 291, "config_nam": 291, "17": [291, 313, 314], "replayargsconfig": 292, "target_net_updat": [294, 306, 307], "constitu": 294, "learnt": [294, 306, 308], "tensorboardlogg": [294, 300], "egreedywrapp": [294, 307, 309], "env_proof": 294, "obs_spec": 294, "net_valu": 294, "dir": [294, 304, 307], "gettempdir": 294, "argpars": [295, 298], "namespac": [295, 298], "parser": [295, 298], "transformed_env_constructor": [295, 300], "num_env_per_collector": [296, 297], "video_tag": 298, "norm_obs_onli": 298, "use_env_cr": 298, "custom_env_mak": 298, "custom_env": 298, "return_transformed_env": 298, "action_dim_gsd": 298, "state_dim_gsd": 298, "obs_norm_state_dict": 298, "wheter": 298, "maker": 298, "asyncdatacollector": 300, "distributedsyncdatacollector": 300, "submitit_delayed_launch": 300, "raycollector": 300, "samplerwithoutreplac": [300, 308, 312, 315], "tensorstorag": 300, "tensordictroundrobinwrit": 300, "d4rlexperiencereplai": 300, "openmlexperiencereplai": 300, "unboundeddiscretetensorspec": [300, 308], "lazystackedtensorspec": 300, "lazystackedcompositespec": 300, "prompttensordicttoken": 300, "rolloutfrommodel": 300, "tokenizeddatasetload": 300, "create_infinite_iter": 300, "consolidate_spec": 300, "check_no_exclusive_kei": 300, "contains_lazy_spec": 300, "check_marl_group": 300, "tensordictrecord": 300, "videorecord": [300, 308], "get_available_librari": 300, "set_exploration_mod": 300, "make_composite_from_td": [300, 313], "braxwrapp": 300, "dmcontrolenv": [300, 306, 311, 318], "dmcontrolwrapp": 300, "jumanjienv": 300, "jumanjiwrapp": 300, "multithreadedenvwrapp": 300, "openmlenv": 300, "pettingzooenv": 300, "pettingzoowrapp": 300, "robohiveenv": 300, "smacv2env": 300, "smacv2wrapp": 300, "vmaswrapp": 300, "qvaluehook": 300, "distributionalqvaluehook": 300, "reset_nois": 300, "cemplann": 300, "mpcplannerbas": 300, "mppiplann": 300, "independentnorm": 300, "truncatednorm": 300, "maskedonehotcategor": 300, "inv_softplu": 300, "vmapmodul": 300, "distributionaldqnloss": [300, 307], "discretesacloss": 300, "iqlloss": 300, "cqlloss": 300, "dtloss": 300, "onlinedtloss": 300, "a2closs": 300, "reinforceloss": 300, "dreameractorloss": 300, "dreamermodelloss": 300, "dreamervalueloss": 300, "td0estim": [300, 306], "td1estim": [300, 306], "td0_return_estim": 300, "td0_advantage_estim": 300, "td1_return_estim": 300, "vec_td1_return_estim": 300, "td1_advantage_estim": 300, "vec_td1_advantage_estim": 300, "td_lambda_return_estim": 300, "vec_td_lambda_return_estim": 300, "td_lambda_advantage_estim": 300, "vec_td_lambda_advantage_estim": 300, "generalized_advantage_estim": 300, "vec_generalized_advantage_estim": 300, "reward2go": 300, "distance_loss": [300, 306], "hold_out_net": 300, "hold_out_param": [300, 306], "softupd": [300, 306, 307, 309], "hardupd": [300, 306], "batchsubsampl": [300, 304], "clearcudacach": 300, "countframeslog": 300, "logreward": [300, 304, 307], "optimizerhook": [300, 307], "replaybuffertrain": [300, 304, 307], "rewardnorm": 300, "selectkei": [300, 304], "trainerhookbas": [300, 304, 307], "updateweight": [300, 304, 307], "make_collector_offpolici": 300, "make_collector_onpolici": 300, "make_dqn_loss": 300, "make_redq_loss": 300, "make_redq_model": 300, "make_replay_buff": [300, 306], "make_target_updat": 300, "parallel_env_constructor": [300, 306], "sync_async_collector": 300, "sync_sync_collector": 300, "correct_for_frame_skip": 300, "get_stats_random_rollout": 300, "csvlogger": [300, 307], "mlflowlogg": 300, "wandblogg": 300, "get_logg": 300, "generate_exp_nam": 300, "journei": 301, "textbook": 301, "highlight": 301, "ever": [301, 312], "bump": 301, "think": [301, 308, 312, 318], "benefit": [301, 312, 315], "pr": 301, "ground": [302, 306, 313], "categori": [302, 304], "recycl": [302, 315], "impos": 302, "violat": 302, "noisier": 302, "Their": [302, 312], "sd": 302, "prob_modul": 302, "pick": [302, 306, 307], "tabl": [302, 307], "customari": 302, "hopefulli": [302, 307], "mathbb": [302, 307], "rightarrow": [302, 307], "soften": 302, "backbon": [302, 309, 311, 317], "make_actor": 302, "make_valu": 302, "shared_param": 302, "make_common": 302, "reusabl": [303, 306, 315], "swappabl": [303, 306], "characterist": [303, 306, 313], "trainabl": [303, 306, 314], "whatev": [303, 306], "convent": [303, 306, 309, 312, 313], "smth": [303, 306], "metric": [303, 306], "nutshel": [303, 306], "barto": [303, 312], "chapter": 303, "significantli": [303, 306, 307, 312], "next_stat": 303, "value_net_loss": 303, "pow": [303, 306], "therebi": 303, "room": 303, "convers": 303, "signifi": [303, 312], "underperform": 303, "thin": 303, "intric": 303, "outer": [304, 306, 307, 318], "believ": 304, "scheme": [304, 318], "substenti": 304, "_pre_steps_log_hook": 304, "_pre_optim_hook": 304, "sub_batch": 304, "_post_loss_hook": 304, "_post_optim_hook": 304, "post_optim": [304, 307], "_post_optim_log": 304, "post_optim_log": 304, "_post_steps_hook": 304, "_post_steps_log_hook": [304, 306, 307], "post_steps_log": 304, "comment": [304, 307, 317], "extens": [304, 315], "reserv": 304, "logginghook": 304, "logging_hook": 304, "save_dict": 304, "some_valu": 304, "torchsnapshot": 304, "ckpt_backend": 304, "pt": [304, 314], "filepath": 304, "save_train": 304, "load_from_fil": 304, "perfectli": [304, 306, 313], "intern": 305, "author": [306, 307, 308, 309, 312, 313, 315], "vincent": [306, 307, 308, 309, 313, 315], "moen": [306, 307, 308, 309, 313, 315], "assembl": 306, "focus": 306, "straightforward": [306, 307, 315], "overview": [306, 308, 312, 317], "transpar": [306, 309], "understood": 306, "sota": [306, 307, 317], "illustr": [306, 307, 315], "device_count": [306, 307, 309, 314, 318], "loss_dict": 306, "modal": 306, "oblivi": [306, 308, 315], "elementari": 306, "didact": 306, "dilut": 306, "pessimist": [306, 307, 308], "target_actor_network_param": 306, "actor_in_kei": 306, "actor_crit": 306, "noth": [306, 308], "compromis": 306, "hp": 306, "hasattr": 306, "_value_estim": 306, "elif": [306, 307], "notimplementederror": 306, "unknown": 306, "_loss_actor": 306, "td_copi": 306, "actor_network_param": 306, "value_network_param": 306, "_loss_valu": 306, "pred_val": 306, "target_value_network_param": 306, "smooth": [306, 307], "loss_funt": 306, "glue": 306, "_forward": 306, "ndimens": 306, "remaind": 306, "focu": [306, 307, 308], "pixels_onli": [306, 307, 317, 318], "env_librari": 306, "env_task": 306, "env_arg": 306, "friendli": 306, "torchr": 306, "rescal": 306, "presum": 306, "leav": 306, "make_transformed_env": 306, "reward_sc": 306, "double_to_float_list": 306, "double_to_float_inv_list": 306, "marker": 306, "env_per_collector": 306, "transform_state_dict": 306, "make_t_env": 306, "adjust": [306, 312, 313], "seem": [306, 309], "cheat": 306, "10m": 306, "cautiou": 306, "deal": [306, 308, 312, 315], "magnitud": 306, "thousand": [306, 309], "get_env_stat": 306, "proof_env": 306, "5000": [306, 308], "maxim": [306, 313], "recal": [306, 308], "ddpgmlpactor": 306, "ddpgmlpqnet": 306, "materi": 306, "ornsteinuhlenbeckprocesswrapp": 306, "make_ddpg_actor": 306, "q_net": 306, "moduless": 306, "sugges": 306, "1_000_000": [306, 309], "tight": 306, "10_000": [306, 308, 315], "traj_len": [306, 309], "make_record": 306, "recorder_obj": 306, "flavor": 306, "circular": 306, "buffer_s": [306, 307], "random_crop_len": 306, "prb": 306, "buffer_scratch_dir": 306, "temporari": 306, "dirrectori": 306, "trajecotri": 306, "25": [306, 313], "sampel": 306, "dataflow": 306, "ceil_div": 306, "utd": [306, 309], "update_to_data": 306, "realiz": 306, "_must_": 306, "001": [306, 313], "outdat": 306, "trick": [306, 307], "despit": 306, "adam": [306, 307, 308, 309, 312, 313], "optimizer_actor": 306, "lr": [306, 307, 308, 309, 312, 313], "weight_decai": [306, 307], "optimizer_valu": 306, "total_collection_step": 306, "pretti": [306, 315], "rewards_ev": 306, "collected_fram": 306, "pbar": [306, 308, 309, 312, 313], "r0": 306, "numel": [306, 308, 309, 314, 315], "current_fram": 306, "sampled_tensordict": 306, "gn1": 306, "clip_grad_norm_": [306, 308, 312, 313], "gn2": 306, "gn": [306, 313], "td_record": [306, 307], "rn": 306, "rs": 306, "set_descript": [306, 308, 309, 312, 313], "2f": 306, "traceback": [306, 307, 318], "__w": [306, 307, 318], "coding_dqn": [306, 307, 316], "660": [306, 307], "454": [306, 307, 313], "430": [306, 307, 313], "_contextlib": [306, 307], "115": [306, 307, 313], "decorate_context": [306, 307], "1212": [306, 307], "1618": [306, 307], "1321": [306, 307], "done_after_reset_error": [306, 307], "plot": [306, 308, 309, 312, 313], "mention": [306, 309, 315, 318], "matplotlib": [306, 308, 309, 312, 313, 315, 318], "pyplot": [306, 308, 309, 312, 313, 315, 318], "plt": [306, 308, 309, 312, 313, 315, 318], "zip": [306, 310], "legend": 306, "xlabel": [306, 309, 312, 313], "ylabel": [306, 312], "tight_layout": 306, "concret": [306, 308], "takeawai": [306, 307], "minut": [306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "40": [306, 308, 309, 312, 313, 315, 316], "413": [306, 313, 316], "3851": [306, 316], "mb": [306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318], "coding_ddpg": [306, 316], "jupyt": [306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "ipynb": [306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318], "galleri": [306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "sphinx": [306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "customis": [307, 312], "road": 307, "aspect": 307, "did": [307, 308, 315, 318], "highest": 307, "prerequisit": 307, "familiar": [307, 312, 318], "lookup": 307, "amort": [307, 308], "cart": 307, "pole": 307, "un": 307, "actuat": 307, "frictionless": 307, "upright": 307, "duelingcnndqnet": 307, "is_notebook": 307, "shell": 307, "get_ipython": 307, "__class__": 307, "zmqinteractiveshel": 307, "qtconsol": 307, "terminalinteractiveshel": 307, "ipython": [307, 312, 313], "nameerror": 307, "interpret": 307, "umbrella": 307, "misplac": 307, "misus": 307, "orchestr": 307, "everyth": [307, 309], "five": [307, 308], "64x64": 307, "motion": [307, 313], "obs_norm_sd": 307, "simpler": 307, "get_norm_stat": 307, "test_env": 307, "make_model": 307, "dummy_env": 307, "output_s": [307, 309], "init_bia": 307, "actor_explor": 307, "eps_greedy_v": 307, "eps_greedy_val_env": 307, "get_replay_buff": 307, "n_optim": 307, "themselv": 307, "simplic": [307, 308, 314, 315], "get_collector": 307, "data_collector": 307, "bunch": 307, "concept": [307, 315], "power": 307, "ubiquit": 307, "get_loss_modul": 307, "target_updat": 307, "995": [307, 313], "sensit": 307, "variat": 307, "2e": [307, 313], "wd": 307, "upd": 307, "02": [307, 308, 313, 314, 316], "harder": [307, 317], "5_000": 307, "500000": 307, "100000": 307, "005": 307, "mandatori": [307, 308, 312, 313], "fairer": 307, "budget": [307, 308], "dqn_exp_": 307, "uuid1": [307, 318], "9895": 307, "0737": 307, "tmp": [307, 315], "tmpql6neez9": 307, "dqn_exp_4e118790": 307, "588b": 307, "11ee": 307, "b9b8": 307, "0242ac120002": 307, "registr": 307, "cumbersom": 307, "buffer_hook": 307, "weight_updat": 307, "descript": [307, 308], "aliv": 307, "total_reward": 307, "print_csv_files_in_fold": 307, "folder_path": 307, "csv_file": 307, "output_str": 307, "dirpath": 307, "walk": [307, 311], "endswith": 307, "strip": 307, "qvaluenetwork": 307, "worst": 307, "accuraci": 307, "fanci": 307, "28": [307, 312, 313, 314, 316], "162": [307, 313, 316], "3802": [307, 316], "demonstr": [308, 312, 313, 318], "talk": 308, "repetit": 308, "six": 308, "sophist": [308, 312], "invent": 308, "theta_k": 308, "frac": 308, "pi_": 308, "exceed": 308, "discourag": [308, 313], "indispens": 308, "analyz": 308, "lingua": 308, "franca": 308, "defaultdict": [308, 313], "has_cuda": [308, 312, 318], "3e": [308, 309, 312], "max_grad_norm": [308, 312], "big": [308, 315, 318], "ourselv": [308, 318], "benefici": 308, "errat": 308, "hamper": [308, 315], "reactiv": 308, "xy": 308, "sub_batch_s": 308, "num_epoch": [308, 312], "entropy_ep": [308, 312], "generalist": 308, "interchang": [308, 314, 315], "panel": 308, "charact": 308, "inverteddoublependulum": 308, "transmit": 308, "stai": 308, "thumb": 308, "supplementari": [308, 318], "told": 308, "stringent": [308, 312], "nevertheless": [308, 315], "confid": [308, 312], "pack": [308, 318], "ran": 308, "f_": 308, "mu_": 308, "difficulti": [308, 318], "brought": [308, 309], "d_ob": 308, "d_action": 308, "policy_modul": [308, 312], "That": 308, "said": 308, "briefli": [308, 312], "refil": [308, 312], "capac": 308, "conveni": [308, 312, 313], "easiest": [308, 312], "mathemat": [308, 312], "tradeoff": [308, 312], "advantage_modul": 308, "lr_schedul": [308, 313], "cosineannealinglr": [308, 313], "eval_str": 308, "tensordict_data": [308, 312], "data_view": [308, 312], "subdata": [308, 312], "cum_reward_str": 308, "4f": [308, 309, 313], "stepcount_str": 308, "param_group": 308, "lr_str": 308, "eval_rollout": 308, "nice": 308, "00": [308, 309, 312, 313, 314, 316], "440": [308, 313], "27it": [308, 313], "73": [308, 313, 314], "3128": 308, "0886": 308, "0003": [308, 313], "437": [308, 313], "30it": [308, 313], "1085": 308, "3000": 308, "439": [308, 313], "71it": [308, 313], "1535": 308, "4000": 308, "09": [308, 313], "441": [308, 313], "1845": [308, 313], "0002": [308, 313], "442": [308, 313], "86it": 308, "2060": 308, "60": [308, 312, 313, 314, 316, 317], "6000": 308, "432": [308, 313], "84it": [308, 313], "2195": [308, 313], "70": [308, 312, 313, 314], "7000": 308, "48it": [308, 313], "2326": 308, "80": [308, 312, 313, 314], "8000": 308, "24it": [308, 313], "2517": 308, "48": [308, 309, 313, 314, 318], "90": [308, 312, 313], "9000": 308, "443": [308, 313], "95it": [308, 313], "2433": 308, "22": [308, 313, 314, 316], "446": [308, 313], "13it": 308, "2686": 308, "51": [308, 313, 314, 315], "cap": [308, 315], "figsiz": [308, 313], "subplot": [308, 313, 318], "titl": [308, 309, 312, 313], "bit": [308, 309, 312, 315], "353": [308, 313, 316], "coding_ppo": [308, 316], "rnn": 309, "lstmmodul": 309, "84x84": 309, "accessori": 309, "stamp": 309, "tensordictprim": 309, "se": 309, "84": [309, 313], "flank": 309, "assist": 309, "emb": 309, "n_cell": 309, "customiz": 309, "almost": 309, "bidirect": 309, "wouldn": 309, "make_tensordict_prim": 309, "interpolationmod": 309, "qval": 309, "stoch_polici": 309, "cudnn": 309, "opportun": 309, "coupl": [309, 313, 315], "uniniti": 309, "again": [309, 312, 314, 315, 318], "redund": 309, "strongli": 309, "million": 309, "sake": [309, 314, 315], "20_000": [309, 313], "longest": 309, "npai": 309, "recurrent_st": 309, "action_spread": 309, "1000000": 309, "112": [309, 313, 315], "76it": 309, "0006": [309, 313], "66": [309, 313, 314], "37": [309, 313], "17it": 309, "0007": [309, 313], "45": [309, 313, 314], "39": [309, 311, 313, 314], "150": [309, 313, 315], "86": [309, 313], "21it": [309, 313], "59": [309, 313, 314], "47": [309, 313, 315, 316], "55": [309, 313, 314], "90it": [309, 313], "19": [309, 313, 314, 315], "134": [309, 313, 316], "2076": [309, 316], "dqn_with_rnn": [309, 316], "tutorials_python": 310, "tutorials_jupyt": 310, "distinct": 311, "humanoid": 311, "env1_obs_kei": 311, "observation_stand": 311, "env2_obs_kei": 311, "observation_walk": 311, "tdreset1": 311, "tdreset2": 311, "tdreset": 311, "67": [311, 313, 314], "policy_common": 311, "policy_stand": 311, "policy_walk": 311, "But": 311, "exclusive_field": [311, 317], "stack_dim": [311, 317], "env1_mak": 311, "env2_mak": 311, "_single_task": 311, "td_rollout": 311, "53": [311, 313, 316], "628": [311, 316], "multi_task": [311, 316], "matteo": 312, "bettini": 312, "maddpg": 312, "navig": 312, "lidar": 312, "sensor": 312, "collis": 312, "tie": 312, "mappo": 312, "ippo": 312, "phase": [312, 315], "mathbf": 312, "pi": [312, 313], "_t": [312, 313], "fed": [312, 315], "approxim": [312, 318], "decentralis": 312, "literatur": 312, "overcom": 312, "stationari": 312, "concurr": 312, "analys": 312, "gui": 312, "visualis": 312, "multiagentmlp": 312, "divic": 312, "vmas_devic": 312, "6_000": 312, "team": [312, 317], "n_iter": 312, "minibatch_s": 312, "generalis": 312, "furthermor": 312, "simd": 312, "parallelis": 312, "warp": 312, "todai": 312, "circl": 312, "surround": 312, "dot": [312, 313], "collid": 312, "drag": 312, "elast": 312, "acceler": 312, "penalis": 312, "num_vmas_env": 312, "scenario_nam": 312, "four": [312, 313], "environmnet": 312, "final_rew": 312, "agent_collis": 312, "stress": 312, "paramount": 312, "episode_reward": 312, "n_rollout_step": 312, "evolut": 312, "yourself": 312, "utilis": 312, "n_actions_per_ag": 312, "n_obs_per_ag": 312, "share_parameters_polici": 312, "policy_net": 312, "denot": 312, "unbatched_action_spec": 312, "carefulli": [312, 318], "grant": 312, "converg": 312, "cooper": 312, "share_parameters_crit": 312, "critic_net": 312, "fantast": 312, "minibatch": 312, "desc": 312, "episode_reward_mean": 312, "episode_reward_mean_list": 312, "critic_param": 312, "target_critic_param": 312, "refresh": 312, "3641679584980011": 312, "07": [312, 313, 314], "5052392482757568": 312, "57": [312, 313, 314], "0283849239349365": 312, "49": [312, 313, 314], "331086277961731": 312, "0674946308135986": 312, "245943784713745": 312, "611856698989868": 312, "8442416191101074": 312, "856468677520752": 312, "05": [312, 313, 314], "41": [312, 313], "9219210147857666": 312, "xvfb": 312, "pyvirtualdisplai": 312, "1400": [312, 313], "900": 312, "pil": 312, "rendering_callback": 312, "fromarrai": 312, "rgb_arrai": [312, 313], "gif": 312, "save_al": 312, "append_imag": 312, "profici": 312, "master": 312, "834": [312, 316], "multiagent_ppo": [312, 316], "freeli": 313, "touch": 313, "undertaken": 313, "broader": 313, "wider": 313, "algebra": 313, "acquaint": 313, "avenu": 313, "_apply_to_composit": 313, "default_x": 313, "default_i": 313, "torqu": 313, "upward": 313, "angular": 313, "sin": 313, "rad": 313, "sec": 313, "gravit": 313, "angl": 313, "deleg": 313, "new_th": 313, "new_thdot": 313, "thdot": 313, "g_forc": 313, "max_torqu": 313, "angle_norm": 313, "max_spe": 313, "albeit": 313, "gen_param": 313, "high_th": 313, "high_thdot": 313, "low_th": 313, "low_thdot": 313, "rng": 313, "lazili": 313, "trivial": 313, "neither": 313, "shortcut": [313, 318], "irrelev": 313, "_make_spec": 313, "td_param": 313, "pseudo": 313, "render_mod": 313, "render_fp": 313, "random_": 313, "_make_step": 313, "staticmethod": 313, "complic": [313, 315, 318], "showcas": 313, "skeleton": 313, "_apply_transform": [313, 318], "_inv_apply_transform": [313, 318], "subset": [313, 314], "unitari": 313, "sine": 313, "cosin": 313, "sintransform": 313, "costransform": 313, "t_sin": 313, "t_co": 313, "cat_transform": 313, "mdp": 313, "convin": 313, "simple_rollout": 313, "_data": 313, "unexplor": 313, "assumpt": [313, 315], "recreat": 313, "init_td": 313, "traj_return": 313, "last_reward": 313, "is_ipython": 313, "inlin": 313, "get_backend": 313, "ion": 313, "gcf": 313, "clear_output": 313, "625": 313, "0488": 313, "0748": 313, "519": 313, "58it": 313, "0499": 313, "4472": 313, "073": 313, "31": [313, 314], "80it": 313, "0685": 313, "0408": 313, "552": 313, "88it": 313, "5154": 313, "9086": 313, "527": 313, "93it": 313, "9385": 313, "155": 313, "2568": 313, "4981": 313, "223": 313, "96it": 313, "8929": 313, "4491": 313, "581": 313, "97it": 313, "3233": 313, "0664": 313, "596": 313, "1021": 313, "5263": 313, "9579": 313, "5807": 313, "8075": 313, "212": 313, "98it": 313, "2009": 313, "5525": 313, "914": 313, "2894": 313, "0115": 313, "52": [313, 314, 315], "0977": 313, "1830": 313, "4858": 313, "233": 313, "99it": 313, "2863": 313, "0297": 313, "464": 313, "4617": 313, "5997": 313, "904": 313, "1647": 313, "0777": 313, "901": 313, "4709": 313, "6813": 313, "8317": 313, "3221": 313, "5554": 313, "276": 313, "00it": 313, "3353": 313, "701": 313, "8570": 313, "6656": 313, "463": 313, "7779": 313, "6911": 313, "875": 313, "0796": 313, "7082": 313, "308": 313, "0421": 313, "1496": 313, "5037": 313, "1755": 313, "62": [313, 314], "5029": 313, "9454": 313, "665": 313, "01it": 313, "9330": 313, "2118": 313, "444": 313, "0995": 313, "6294": 313, "69": [313, 314, 315], "3146": 313, "2909": 313, "461": 313, "9720": 313, "1298": 313, "91": 313, "9923": 313, "0345": 313, "3438": 313, "3688": 313, "424": 313, "6953": 313, "5233": 313, "411": 313, "4288": 313, "8011": 313, "82": [313, 315], "5329": 313, "2677": 313, "71": [313, 314], "6969": 313, "7010": 313, "376": 313, "36": 313, "9352": 313, "7707": 313, "6178": 313, "5646": 313, "348": 313, "7304": 313, "9407": 313, "942": 313, "3882": 313, "7604": 313, "85": 313, "3507": 313, "8928": 313, "258": 313, "6978": 313, "4641": 313, "549": 313, "6047": 313, "544": 313, "43": 313, "5005": 313, "4136": 313, "2993": 313, "3222": 313, "4046": 313, "7314": 313, "275": 313, "6331": 313, "9318": 313, "961": 313, "8331": 313, "1604": 313, "4099": 313, "4761": 313, "125": 313, "4262": 313, "6363": 313, "382": 313, "3593": 313, "7377": 313, "2847": 313, "3443": 313, "867": 313, "3592": 313, "4760": 313, "9950": 313, "8021": 313, "77": [313, 315], "54": [313, 314, 316], "3528": 313, "1214": 313, "708": 313, "4023": 313, "3583": 313, "041": 313, "56": 313, "3801": 313, "0310": 313, "120": 313, "4244": 313, "2039": 313, "58": [313, 314, 315], "4850": 313, "8748": 313, "706": 313, "4897": 313, "9210": 313, "63": [313, 314, 315], "8964": 313, "61": [313, 314], "0832": 313, "3934": 313, "456": 313, "8971": 313, "2933": 313, "74": [313, 314], "3377": 313, "6996": 313, "2274": 313, "8916": 313, "098": 313, "65": [313, 314, 315], "2660": 313, "9110": 313, "4503": 313, "6956": 313, "9172": 313, "4026": 313, "946": 313, "68": [313, 314], "9229": 313, "5205": 313, "294": 313, "8872": 313, "6637": 313, "019": 313, "9281": 313, "2082": 313, "724": 313, "8561": 313, "6574": 313, "357": 313, "72": [313, 314], "4138": 313, "5230": 313, "385": 313, "4065": 313, "5642": 313, "921": 313, "9786": 313, "75": 313, "4129": 313, "5831": 313, "266": 313, "76": [313, 314, 315], "7723": 313, "4152": 313, "608": 313, "0898": 313, "389": 313, "78": [313, 314], "5155": 313, "5376": 313, "79": [313, 314], "5616": 313, "4094": 313, "283": 313, "5333": 313, "4803": 313, "895": 313, "6566": 313, "2588": 313, "662": 313, "4732": 313, "7503": 313, "068": 313, "83": [313, 314], "0714": 313, "3370": 313, "059": 313, "8612": 313, "1915": 313, "3855": 313, "0349": 313, "9644": 313, "4538": 313, "445": 313, "0392": 313, "4080": 313, "1648": 313, "9599": 313, "143": 313, "89": [313, 314, 315], "4284": 313, "5946": 313, "2590": 313, "9181": 313, "4621": 313, "9075": 313, "674": 313, "92": [313, 314], "1772": 313, "9444": 313, "351": 313, "93": [313, 314], "9391": 313, "5595": 313, "8673": 313, "6240": 313, "5919": 313, "0018": 313, "96": [313, 314], "1071": 313, "9127": 313, "251": 313, "97": 313, "9799": 313, "3131": 313, "9612": 313, "9705": 313, "8741": 313, "2230": 313, "0972": 313, "0337": 313, "0350": 313, "0654": 313, "102": [313, 315], "2441": 313, "4596": 313, "362": 313, "103": 313, "4362": 313, "171": 313, "104": 313, "4041": 313, "6907": 313, "105": 313, "4664": 313, "2760": 313, "0299": 313, "9712": 313, "349": 313, "107": 313, "3332": 313, "4479": 313, "772": 313, "108": 313, "4357": 313, "9591": 313, "543": 313, "109": 313, "6216": 313, "1353": 313, "692": 313, "110": 313, "6261": 313, "7086": 313, "496": 313, "111": [313, 315], "7758": 313, "9818": 313, "7772": 313, "5055": 313, "113": [313, 316, 317], "5840": 313, "3180": 313, "2976": 313, "2083": 313, "5275": 313, "6873": 313, "116": 313, "4107": 313, "1624": 313, "117": 313, "6372": 313, "2571": 313, "118": 313, "4039": 313, "4428": 313, "119": 313, "4728": 313, "5628": 313, "6767": 313, "2466": 313, "522": 313, "121": [313, 318], "5873": 313, "5072": 313, "122": [313, 318], "6548": 313, "3766": 313, "123": 313, "5134": 313, "1955": 313, "124": 313, "2481": 313, "0591": 313, "4500": 313, "3368": 313, "126": 313, "9708": 313, "7059": 313, "127": [313, 314, 315, 316], "3031": 313, "2534": 313, "843": 313, "3327": 313, "6193": 313, "129": 313, "4831": 313, "1172": 313, "2593": 313, "4219": 313, "962": 313, "4800": 313, "8380": 313, "899": 313, "132": 313, "2721": 313, "9048": 313, "166": 313, "133": 313, "2419": 313, "5248": 313, "2139": 313, "4278": 313, "135": [313, 315], "0690": 313, "5140": 313, "136": 313, "1140": 313, "7402": 313, "137": 313, "5356": 313, "1636": 313, "138": 313, "0671": 313, "8798": 313, "139": 313, "8918": 313, "3298": 313, "307": 313, "140": 313, "1779": 313, "141": 313, "1771": 313, "3624": 313, "936": 313, "142": 313, "1683": 313, "4810": 313, "9373": 313, "4435": 313, "144": [313, 315], "4396": 313, "8092": 313, "145": 313, "2572": 313, "146": 313, "4212": 313, "0260": 313, "147": [313, 315], "0939": 313, "6478": 313, "605": 313, "148": [313, 315], "6606": 313, "7289": 313, "149": 313, "9300": 313, "7193": 313, "563": 313, "1166": 313, "8514": 313, "384": 313, "151": 313, "9108": 313, "0672": 313, "292": 313, "152": 313, "8591": 313, "3768": 313, "153": [313, 315], "9976": 313, "154": 313, "0576": 313, "0067": 313, "935": 313, "4199": 313, "1722": 313, "156": [313, 315], "8310": 313, "3466": 313, "157": 313, "8631": 313, "2492": 313, "158": 313, "8763": 313, "1277": 313, "159": 313, "5562": 313, "7446": 313, "1082": 313, "9830": 313, "161": 313, "0946": 313, "5229": 313, "4574": 313, "6900": 313, "163": [313, 314], "63it": 313, "2229": 313, "0318": 313, "482": 313, "164": 313, "0543": 313, "0817": 313, "761": 313, "165": 313, "25it": 313, "2809": 313, "5118": 313, "366": 313, "45it": 313, "1142": 313, "5635": 313, "167": 313, "60it": 313, "1949": 313, "2327": 313, "982": 313, "168": 313, "0967": 313, "0387": 313, "457": 313, "169": [313, 315], "0782": 313, "2150": 313, "170": 313, "85it": 313, "5222": 313, "3725": 313, "9288": 313, "9837": 313, "172": 313, "91it": 313, "1416": 313, "1099": 313, "173": 313, "92it": 313, "8620": 313, "8475": 313, "174": 313, "94it": 313, "1807": 313, "4375": 313, "175": 313, "1148": 313, "0645": 313, "2751": 313, "8313": 313, "177": 313, "9286": 313, "9770": 313, "178": 313, "5735": 313, "2837": 313, "179": 313, "2926": 313, "9489": 313, "180": 313, "1507": 313, "181": 313, "8724": 313, "3567": 313, "182": 313, "3574": 313, "6140": 313, "183": 313, "7895": 313, "2518": 313, "184": 313, "6146": 313, "185": 313, "8776": 313, "7358": 313, "186": 313, "3722": 313, "8428": 313, "187": 313, "2656": 313, "7955": 313, "188": 313, "0092": 313, "7106": 313, "829": 313, "189": 313, "2264": 313, "6919": 313, "190": 313, "1438": 313, "1362": 313, "191": 313, "0618": 313, "8217": 313, "192": 313, "9420": 313, "6765": 313, "193": 313, "7745": 313, "0709": 313, "194": 313, "9478": 313, "6867": 313, "195": 313, "6507": 313, "6225": 313, "196": 313, "2244": 313, "197": 313, "5385": 313, "9263": 313, "198": 313, "1878": 313, "2374": 313, "199": 313, "8054": 313, "3504": 313, "557": 313, "0766": 313, "6825": 313, "201": 313, "2011": 313, "8393": 313, "202": 313, "0803": 313, "7815": 313, "203": 313, "8363": 313, "2460": 313, "204": 313, "8643": 313, "2191": 313, "593": 313, "205": 313, "0773": 313, "1343": 313, "206": 313, "8657": 313, "207": 313, "9304": 313, "7584": 313, "208": 313, "8752": 313, "2307": 313, "209": 313, "5250": 313, "4869": 313, "7837": 313, "5762": 313, "211": 313, "6661": 313, "8600": 313, "2502": 313, "1752": 313, "213": 313, "3075": 313, "8871": 313, "214": 313, "9406": 313, "8090": 313, "215": 313, "6291": 313, "8923": 313, "876": 313, "216": 313, "9504": 313, "21e": 313, "217": 313, "7431": 313, "7880": 313, "218": 313, "4463": 313, "5432": 313, "219": 313, "3793": 313, "3313": 313, "220": 313, "8843": 313, "0369": 313, "065": 313, "221": 313, "4828": 313, "8391": 313, "222": 313, "6265": 313, "2913": 313, "947": 313, "5541": 313, "1252": 313, "224": 313, "7342": 313, "2396": 313, "225": 313, "5936": 313, "1924": 313, "226": 313, "9975": 313, "2045": 313, "227": [313, 316, 317], "8367": 313, "9540": 313, "228": 313, "7259": 313, "6743": 313, "229": 313, "4827": 313, "7528": 313, "230": 313, "7361": 313, "8756": 313, "231": 313, "7646": 313, "1116": 313, "232": 313, "5426": 313, "8385": 313, "5662": 313, "8585": 313, "234": 313, "8234": 313, "7930": 313, "235": 313, "2648": 313, "9309": 313, "236": 313, "6817": 313, "237": 313, "0943": 313, "1533": 313, "238": 313, "3045": 313, "0483": 313, "239": 313, "4128": 313, "2528": 313, "240": [313, 317], "6415": 313, "0201": 313, "241": 313, "4437": 313, "4365": 313, "242": 313, "0358": 313, "4943": 313, "243": 313, "1272": 313, "5003": 313, "1180": 313, "2637": 313, "245": 313, "7197": 313, "0873": 313, "246": 313, "2917": 313, "247": 313, "0160": 313, "0738": 313, "248": 313, "3689": 313, "0120": 313, "249": 313, "5570": 313, "0475": 313, "250": 313, "4423": 313, "2220": 313, "6803": 313, "252": 313, "1465": 313, "7214": 313, "253": 313, "8801": 313, "7034": 313, "254": 313, "9136": 313, "4076": 313, "7589": 313, "5013": 313, "8150": 313, "2241": 313, "257": 313, "0753": 313, "8081": 313, "1951": 313, "8314": 313, "259": 313, "0038": 313, "260": 313, "0889": 313, "4616": 313, "261": 313, "0655": 313, "262": 313, "8333": 313, "9476": 313, "263": 313, "7554": 313, "3798": 313, "264": 313, "3717": 313, "3947": 313, "529": 313, "265": 313, "3060": 313, "6495": 313, "7467": 313, "8889": 313, "267": 313, "8457": 313, "591": 313, "268": 313, "7137": 313, "0536": 313, "771": 313, "269": 313, "1651": 313, "388": 313, "270": 313, "8246": 313, "5709": 313, "281": 313, "271": 313, "7502": 313, "0521": 313, "032": 313, "272": 313, "5475": 313, "7253": 313, "273": 313, "2856": 313, "7130": 313, "274": 313, "2778": 313, "4122": 313, "8368": 313, "1841": 313, "9622": 313, "1603": 313, "003e": 313, "277": 313, "0247": 313, "346": 313, "278": 313, "32it": 313, "2238": 313, "6418": 313, "279": 313, "72it": 313, "0626": 313, "2538": 313, "280": 313, "05it": 313, "0149": 313, "7380": 313, "2167": 313, "8911": 313, "282": 313, "49it": 313, "8725": 313, "1983": 313, "8142": 313, "3709": 313, "284": 313, "4989": 313, "285": 313, "79it": 313, "6464": 313, "6210": 313, "286": 313, "9726": 313, "0820": 313, "287": 313, "89it": 313, "6975": 313, "9091": 313, "288": 313, "4926": 313, "4791": 313, "289": 313, "0905": 313, "3500": 313, "290": 313, "2287": 313, "291": 313, "9918": 313, "5543": 313, "9245": 313, "6444": 313, "631": 313, "293": 313, "0448": 313, "4769": 313, "8566": 313, "7208": 313, "295": 313, "0966": 313, "296": 313, "5303": 313, "1537": 313, "023": 313, "297": 313, "2682": 313, "564": 313, "298": 313, "4318": 313, "5063": 313, "299": 313, "7475": 313, "4190": 313, "8186": 313, "5077": 313, "301": 313, "1883": 313, "5291": 313, "472": 313, "302": 313, "1256": 313, "3998": 313, "303": 313, "3622": 313, "0930": 313, "626": 313, "304": [313, 316], "9500": 313, "0075": 313, "5664": 313, "305": 313, "5697": 313, "3024": 313, "306": 313, "3117": 313, "0052": 313, "006": 313, "0981": 313, "9312": 313, "3873": 313, "309": 313, "0411": 313, "2650": 313, "310": 313, "1656": 313, "0228": 313, "004": 313, "311": 313, "1196": 313, "2478": 313, "312": 313, "7353": 313, "0812": 313, "313": 313, "3022": 313, "758": 313, "314": 313, "1406": 313, "4626": 313, "315": [313, 315, 316], "2156": 313, "851": 313, "316": 313, "1953": 313, "3774": 313, "317": 313, "6385": 313, "9917": 313, "318": 313, "2764": 313, "905": 313, "319": 313, "6391": 313, "9317": 313, "320": 313, "9748": 313, "2679": 313, "321": 313, "8495": 313, "5125": 313, "8177": 313, "6602": 313, "323": 313, "0704": 313, "5776": 313, "324": 313, "9833": [313, 317], "1339": 313, "402": 313, "325": 313, "1238": 313, "326": 313, "9299": 313, "0227": 313, "327": 313, "7727": 313, "1607": 313, "336": 313, "328": 313, "3958": 313, "3223": 313, "763": 313, "329": 313, "4742": 313, "1797": 313, "330": 313, "0144": 313, "0085": 313, "791": 313, "331": 313, "8284": 313, "0428": 313, "332": 313, "0098": 313, "7365": 313, "333": 313, "4566": 313, "0781": 313, "086": 313, "334": 313, "3355": 313, "0230": 313, "335": 313, "9346": 313, "0423": 313, "076": 313, "3711": 313, "1335": 313, "6855": 313, "337": 313, "0304": 313, "0023": 313, "8459": 313, "338": 313, "9998": 313, "4399": 313, "339": 313, "2303": 313, "1346": 313, "340": 313, "2915": 313, "7116": 313, "341": 313, "5560": 313, "0487": 313, "342": 313, "5119": 313, "061": 313, "343": 313, "3305": 313, "3705": 313, "957": 313, "344": 313, "6068": 313, "2112": 313, "345": 313, "5731": 313, "3897": 313, "0376": 313, "347": 313, "0434": 313, "012": 313, "1300": 313, "1215": 313, "0968": 313, "0885": 313, "350": 313, "1348": 313, "0073": 313, "5052": 313, "4184": 313, "2817": 313, "352": 313, "8887": 313, "4779": 313, "1009": 313, "354": 313, "0604": 313, "599": 313, "355": 313, "4486": 313, "1176": 313, "656": 313, "356": 313, "2436": 313, "0668": 313, "8849": 313, "0012": 313, "358": 313, "7511": 313, "8804": 313, "359": 313, "8870": 313, "6728": 313, "360": 313, "8841": 313, "5508": 313, "361": 313, "5242": 313, "0268": 313, "3232": 313, "0013": 313, "6185": 313, "363": 313, "1378": 313, "0204": 313, "364": 313, "0355": 313, "685": 313, "365": 313, "4884": 313, "0231": 313, "0770": 313, "0014": 313, "6793": 313, "367": 313, "9834": 313, "863": 313, "368": 313, "6709": 313, "462": 313, "369": 313, "66it": 313, "5199": 313, "9790": 313, "370": 313, "9401": 313, "7802": 313, "371": 313, "26it": 313, "6723": 313, "372": 313, "2678": 313, "6201": 313, "373": 313, "59it": 313, "2184": 313, "7385": 313, "374": 313, "70it": 313, "6344": 313, "617": 313, "375": 313, "78it": 313, "9945": 313, "0772": 313, "567": 313, "83it": 313, "7576": 313, "0398": 313, "377": 313, "3396": 313, "0022": 313, "094": 313, "378": 313, "3073": 313, "4018": 313, "379": 313, "1869": 313, "380": 313, "0481": 313, "1117": 313, "381": 313, "6823": 313, "981": 313, "8305": 313, "0210": 313, "383": 313, "4908": 313, "0272": 313, "538": 313, "3267": 313, "0111": 313, "7965": 313, "1796": 313, "0039": 313, "5396": 313, "386": 313, "3757": 313, "0490": 313, "387": 313, "1394": 313, "4187": 313, "2986": 313, "7954": 313, "1274": 313, "0063": 313, "813": 313, "390": 313, "8706": 313, "0114": 313, "391": 313, "6922": 313, "0004": 313, "2423": 313, "392": 313, "9115": 313, "2602": 313, "393": 313, "2449": 313, "0783": 313, "394": 313, "0631": 313, "0057": 313, "7444": 313, "395": 313, "3339": 313, "0167": 313, "396": 313, "4806": 313, "397": 313, "4171": 313, "067": 313, "398": 313, "2618": 313, "5809": 313, "399": 313, "0054": 313, "3364": 313, "8733": 313, "0184": 313, "401": 313, "9137": 313, "0113": 313, "025": 313, "0386": 313, "0625": 313, "403": 313, "1332": 313, "0582": 313, "7816": 313, "404": 313, "8341": 313, "0941": 313, "854": 313, "405": 313, "8615": 313, "588": 313, "406": 313, "3849": 313, "008": 313, "407": 313, "9395": 313, "0765": 313, "055": 313, "408": 313, "2685": 313, "2235": 313, "688": 313, "409": 313, "3052": 313, "4249": 313, "410": 313, "6806": 313, "6383": 313, "3721": 313, "9981": 313, "412": 313, "1862": 313, "822": 313, "9811": 313, "0171": 313, "013": 313, "414": 313, "0252": 313, "0049": 313, "6205": 313, "415": 313, "1108": 313, "4921": 313, "416": 313, "9142": 313, "8130": 313, "417": 313, "1725": 313, "0036": 313, "3196": 313, "418": 313, "7795": 313, "0242": 313, "799": 313, "419": 313, "7737": 313, "0138": 313, "420": 313, "1462": 313, "0053": 313, "421": 313, "9226": 313, "6139": 313, "422": 313, "9889": 313, "0403": 313, "423": 313, "6194": 313, "0032": 313, "3989": 313, "0104": 313, "425": 313, "9960": 313, "0009": 313, "6009": 313, "426": [313, 316, 318], "2697": 313, "0914": 313, "427": 313, "4256": 313, "1114": 313, "428": 313, "9862": 313, "1932": 313, "429": 313, "0637": 313, "0623": 313, "082": 313, "9906": 313, "2031": 313, "431": 313, "9948": 313, "0895": 313, "1970": 313, "0256": 313, "433": 313, "4231": 313, "0449": 313, "644": 313, "434": 313, "1039": 313, "1973": 313, "435": [313, 316], "4561": 313, "1225": 313, "436": [313, 315], "0211": 313, "2125": 313, "3866": 313, "0050": 313, "7202": 313, "438": 313, "6388": 313, "0072": 313, "1187": 313, "0015": 313, "5116": 313, "0432": 313, "0025": 313, "7809": 313, "1925": 313, "0103": 313, "29it": 313, "9570": 313, "0871": 313, "5601": 313, "0165": 313, "0047": 313, "6061": 313, "2746": 313, "0027": 313, "7887": 313, "46it": 313, "1835": 313, "0035": 313, "855": 313, "447": 313, "8420": 313, "548": 313, "448": 313, "2653": 313, "0126": 313, "9736": 313, "449": 313, "0594": 313, "0119": 313, "6196": 313, "450": 313, "4509": 313, "0373": 313, "451": 313, "0620": 313, "992": 313, "452": 313, "6898": 313, "3235": 313, "687": 313, "453": 313, "5879": 313, "8406": 313, "0694": 313, "455": 313, "8259": 313, "0235": 313, "8500": 313, "0024": 313, "4054": 313, "458": 313, "2027": 313, "0894": 313, "459": 313, "5966": 313, "460": 313, "6942": 313, "0016": 313, "4254": 313, "6703": 313, "0145": 313, "8124": 313, "0218": 313, "9196": 313, "0188": 313, "8986": 313, "0884": 313, "0084": 313, "5624": 313, "465": 313, "8862": 313, "5384": 313, "466": 313, "5837": 313, "467": 313, "8954": 313, "0101": 313, "6751": 313, "468": 313, "8063": 313, "0122": 313, "9635": 313, "469": 313, "0692": 313, "4216": 313, "470": 313, "1227": 313, "0586": 313, "162e": 313, "471": 313, "9690": 313, "0074": 313, "4166": 313, "6324": 313, "473": 313, "0778": 313, "474": 313, "8548": 313, "0017": 313, "4408": 313, "475": 313, "8125": 313, "1515": 313, "476": 313, "2733": 313, "0044": 313, "2836": 313, "477": 313, "7497": 313, "7681": 313, "478": 313, "8547": 313, "0105": 313, "7212": 313, "479": 313, "9848": 313, "0019": 313, "6498": 313, "480": [313, 314], "1987": 313, "0011": 313, "5473": 313, "481": 313, "8991": 313, "0033": 313, "6091": 313, "9189": 313, "5771": 313, "483": 313, "6781": 313, "7542": 313, "484": 313, "5959": 313, "0064": 313, "4295": 313, "485": 313, "2547": 313, "486": 313, "0636": 313, "547": 313, "487": 313, "0065": 313, "488": 313, "1694": 313, "0083": 313, "5759": 313, "489": 313, "0493": 313, "0021": 313, "7805": 313, "490": 313, "0950": 313, "497": 313, "491": 313, "9717": 313, "3672": 313, "492": 313, "0207": 313, "493": 313, "8266": 313, "0069": 313, "5365": 313, "494": 313, "2623": 313, "5078": 313, "495": 313, "4545": 313, "09636": 313, "8754": 313, "0010": 313, "498": 313, "0031": 313, "8269": 313, "499": 313, "4082": 313, "6642": 313, "2284": 313, "501": 313, "9130": 313, "0008": 313, "502": 313, "2944": 313, "503": 313, "7624": 313, "0056": 313, "3858": 313, "504": 313, "0890": 313, "0042": 313, "505": 313, "31it": 313, "7505": 313, "2157": 313, "506": 313, "8394": 313, "3413": 313, "507": 313, "9609": 313, "0041": 313, "6905": 313, "508": 313, "8467": 313, "4409": 313, "509": 313, "510": 313, "62it": 313, "8128": 313, "3559": 313, "511": 313, "1479": 313, "0264": 313, "1589": 313, "566": 313, "513": 313, "2756": 313, "0046": 313, "5266": 313, "514": 313, "9873": 313, "0112": 313, "9314": 313, "515": 313, "3791": 313, "0721": 313, "516": 313, "4580": 313, "0758": 313, "6114": 313, "517": 313, "2431": 313, "518": 313, "1958": 313, "5553": 313, "8924": 313, "0097": 313, "520": 313, "3737": 313, "0234": 313, "521": 313, "9125": 313, "4623": 313, "3230": 313, "0589": 313, "3784": 313, "523": 313, "9482": 313, "0051": 313, "524": 313, "1979": 313, "0045": 313, "6401": 313, "525": 313, "1588": 313, "0048": 313, "6255": 313, "526": 313, "6084": 313, "3477": 313, "1475": 313, "0209": 313, "3456": 313, "528": 313, "7611": 313, "1040": 313, "0099": 313, "0173": 313, "643": 313, "530": 313, "8189": 313, "4358": 313, "531": 313, "9897": 313, "532": 313, "1548": 313, "9751": 313, "533": 313, "6362": 313, "7495": 313, "534": 313, "1749": 313, "9513": 313, "535": 313, "7708": 313, "0371": 313, "536": 313, "2649": 313, "0437": 313, "537": 313, "5491": 313, "0276": 313, "6426": 313, "7294": 313, "078e": 313, "539": 313, "9928": 313, "576": 313, "540": 313, "7937": 313, "0124": 313, "9664": 313, "541": 313, "3342": 313, "542": 313, "2046": 313, "5496": 313, "0956": 313, "0059": 313, "545": 313, "9028": 313, "5843": 313, "546": 313, "0674": 313, "0178": 313, "797": 313, "2815": 313, "0599": 313, "1587": 313, "9276": 313, "8228": 313, "6164": 313, "551": 313, "6850": 313, "9167": 313, "3092": 313, "0670": 313, "9177": 313, "553": 313, "1599": 313, "0043": 313, "554": 313, "4672": 313, "6367": 313, "555": 313, "3657": 313, "556": 313, "6694": 313, "2622": 313, "0372": 313, "4841": 313, "558": 313, "2707": 313, "0058": 313, "757": 313, "559": 313, "2267": 313, "5415": 313, "560": 313, "4556": 313, "0163": 313, "561": 313, "1839": 313, "0809": 313, "6262": 313, "562": 313, "0278": 313, "1112": 313, "6155": 313, "565": 313, "1427": 313, "3582": 313, "624": 313, "7870": 313, "9490": 313, "0439": 313, "8796": 313, "568": 313, "8026": 313, "2720": 313, "612": 313, "569": 313, "3147": 313, "8486": 313, "570": 313, "7917": 313, "0129": 313, "571": 313, "9553": 313, "0020": 313, "6871": 313, "572": 313, "3132": 313, "0159": 313, "8646": 313, "573": 313, "5320": 313, "0269": 313, "574": 313, "2955": 313, "0245": 313, "575": 313, "3347": 313, "0179": 313, "9718": 313, "1629": 313, "804": 313, "577": 313, "4164": 313, "0070": 313, "4335": 313, "578": 313, "579": 313, "3049": 313, "9063": 313, "580": 313, "8785": 313, "3295": 313, "5184": 313, "0546": 313, "582": 313, "4589": 313, "583": 313, "4697": 313, "2476": 313, "584": 313, "2397": 313, "585": 313, "4953": 313, "1775": 313, "586": 313, "2258": 313, "0110": 313, "7671": 313, "587": 313, "3981": 313, "8590": 313, "589": 313, "9820": 313, "4221": 313, "590": 313, "1293": 313, "0116": 313, "868": 313, "1675": 313, "5931": 313, "592": 313, "2910": 313, "5219": 313, "2124": 313, "1730": 313, "737": 313, "594": 313, "2914": 313, "0206": 313, "595": 313, "0172": 313, "3982": 313, "0945": 313, "0121": 313, "4789": 313, "597": 313, "3805": 313, "4074": 313, "598": 313, "3310": 313, "5065": 313, "6028": 313, "6316": 313, "6724": 313, "6523": 313, "601": 313, "0136": 313, "4298": 313, "602": 313, "3524": 313, "2629": 313, "603": 313, "2635": 313, "7839": 313, "604": 313, "6041": 313, "8027": 313, "4170": 313, "4675": 313, "606": 313, "3153": 313, "9316": 313, "607": 313, "0649": 313, "9722": 313, "7989": 313, "0329": 313, "609": 313, "1976": 313, "6852": 313, "610": 313, "4793": 313, "1255": 313, "611": 313, "4581": 313, "0394": 313, "2047": 313, "0326": 313, "613": 313, "8967": 313, "8619": 313, "614": 313, "5906": 313, "6491": 313, "615": 313, "6634": 313, "4394": 313, "616": 313, "0624": 313, "0061": 313, "5676": 313, "3259": 313, "0131": 313, "7733": 313, "618": 313, "7515": 313, "0189": 313, "5575": 313, "619": 313, "9313": 313, "6286": 313, "620": 313, "4325": 313, "7832": 313, "621": 313, "1134": 313, "622": 313, "4572": 313, "0500": 313, "5838": 313, "623": 313, "3818": 313, "8623": 313, "1253": 313, "6622": 313, "subject": 313, "saw": [313, 315], "686": [313, 316], "explain": 314, "semat": 314, "r3mtransform": 314, "embodi": 314, "ai": 314, "env_transform": [314, 318], "s3": 314, "amazonaw": 314, "r3m_50": 314, "374m": 314, "48m": 314, "0mb": 314, "9m": 314, "6mb": 314, "8mb": 314, "0m": 314, "1mb": 314, "2m": 314, "3mb": 314, "7mb": 314, "115m": 314, "121m": 314, "131m": 314, "5mb": 314, "147m": 314, "9mb": 314, "163m": 314, "172m": 314, "180m": 314, "195m": 314, "2mb": 314, "202m": 314, "212m": 314, "219m": 314, "229m": 314, "244m": 314, "252m": 314, "261m": 314, "269m": 314, "277m": 314, "283m": 314, "293m": 314, "299m": 314, "311m": 314, "4mb": 314, "328m": 314, "342m": 314, "349m": 314, "360m": 314, "373m": 314, "2048": 314, "wiser": 314, "conclud": 314, "_storag": [314, 315], "3665": [314, 316], "pretrained_model": [314, 316], "supervis": [315, 318], "pull": 315, "temporarili": 315, "drastic": 315, "ram": 315, "batteri": 315, "dataliststorag": 315, "datalazytensorstorag": 315, "tensordidct": 315, "basi": 315, "datalazymemmapstorag": 315, "buffer_list": 315, "lowest": 315, "medium": 315, "buffer_lazytensor": 315, "buffer_lazymemmap": 315, "fullest": 315, "organ": 315, "convini": 315, "mydata": 315, "background": 315, "question": [315, 317], "_i": 315, "artifici": 315, "0892946e": 315, "she": 315, "augment": 315, "proport": 315, "hist": 315, "barcontain": 315, "artist": 315, "revert": 315, "expens": 315, "reappear": 315, "unfold": 315, "problemat": 315, "window": 315, "4th": 315, "rb_tutori": [315, 316], "torchrl_demo": [316, 317], "torchrl_env": [316, 318], "3718": 316, "demo": 317, "icml": 317, "vmoen": 317, "fb": 317, "invest": 317, "platform": 317, "media": 317, "truli": 317, "predominantli": 317, "tensordict1": 317, "tensordict2": 317, "tensordict_sampl": 317, "_sampler": 317, "_sum_tre": 317, "modulenotfounderror": 317, "28791671991348267": 317, "gym_env": 317, "noopresetenv": [317, 318], "lazyconv2d": 317, "6400": 317, "backbone_modul": 317, "params_expand": 317, "tensordict_exp": 317, "base_modul": 317, "0137": 317, "1524": 317, "0641": 317, "viewbackward0": 317, "asstridedbackward0": 317, "8728": 317, "1334": 317, "3494": 317, "6887": 317, "6402": 317, "_safetanhbackward": 317, "1132": 317, "1762": 317, "3430": 317, "2668": 317, "2918": 317, "6239": 317, "roughli": 317, "tensordicts_prealloc": 317, "tensordicts_stack": 317, "tensordict_rollout": [317, 318], "disclaim": 317, "concatmodul": 317, "loss_td": 317, "year": 317, "roadmap": 317, "compris": 317, "contributor": 317, "curiou": 317, "nascent": 317, "unsupervis": 318, "rom": 318, "licens": 318, "pygam": 318, "unifi": 318, "insid": 318, "_build_env": 318, "sphinx_gallery_start_ignor": 318, "filterwarn": 318, "sphinx_gallery_end_ignor": 318, "typeerror": 318, "subscript": 318, "void": 318, "reproduct": 318, "tensordict_tprim": 318, "imshow": 318, "inconsist": 318, "swingup": 318, "wrapper1": 318, "wrapper2": 318, "obviou": 318, "truth": 318, "env0": 318, "env_transformed_bi": 318, "stanc": 318, "transformeddistribut": 318, "base_dist": 318, "concat": 318, "mofidi": 318, "transformedenviron": 318, "moderet": 318, "computation": 318, "legitim": 318, "incom": 318, "amongst": 318, "wor": 318, "convention": 318, "scope": 318, "markovian": 318, "constain": 318, "bar_": 318, "get_someth": 318, "aargh": 318, "foo_list": 318, "airraid": 318, "parallen": 318, "particularili": 318, "evolv": 318, "steadi": 318, "approx": 318, "_extra_st": 318, "observation_ssq": 318, "observation_sum": 318, "dispach": 318, "absor": 318, "3719": 318}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 2, 1, "", "BraxEnv"], [68, 2, 1, "", "BraxWrapper"], [69, 2, 1, "", "DMControlEnv"], [70, 2, 1, "", "DMControlWrapper"], [71, 0, 1, "", "EnvBase"], [72, 0, 1, "", "EnvCreator"], [73, 0, 1, "", "EnvMetaData"], [74, 2, 1, "", "GymEnv"], [75, 0, 1, "", "GymLikeEnv"], [76, 2, 1, "", "GymWrapper"], [77, 2, 1, "", "HabitatEnv"], [78, 2, 1, "", "IsaacGymEnv"], [79, 2, 1, "", "IsaacGymWrapper"], [80, 2, 1, "", "JumanjiEnv"], [81, 2, 1, "", "JumanjiWrapper"], [82, 2, 1, "", "MarlGroupMapType"], [83, 2, 1, "", "ModelBasedEnvBase"], [84, 2, 1, "", "MultiThreadedEnv"], [85, 2, 1, "", "MultiThreadedEnvWrapper"], [86, 2, 1, "", "OpenMLEnv"], [87, 0, 1, "", "ParallelEnv"], [88, 2, 1, "", "PettingZooEnv"], [89, 2, 1, "", "PettingZooWrapper"], [90, 2, 1, "", "RoboHiveEnv"], [91, 2, 1, "", "SMACv2Env"], [92, 2, 1, "", "SMACv2Wrapper"], [93, 0, 1, "", "SerialEnv"], [94, 2, 1, "", "VmasEnv"], [95, 2, 1, "", "VmasWrapper"], [96, 2, 1, "", "check_marl_grouping"], [83, 1, 1, "", "rand_step"], [83, 1, 1, "", "reset"], [83, 1, 1, "", "rollout"], [83, 1, 1, "", "set_seed"], [83, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[71, 3, 1, "", "action_key"], [71, 3, 1, "", "action_keys"], [71, 3, 1, "", "action_spec"], [71, 1, 1, "", "add_module"], [71, 1, 1, "", "apply"], [71, 3, 1, "", "batch_locked"], [71, 1, 1, "", "bfloat16"], [71, 1, 1, "", "buffers"], [71, 1, 1, "", "children"], [71, 1, 1, "", "compile"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 3, 1, "", "done_key"], [71, 3, 1, "", "done_keys"], [71, 3, 1, "", "done_spec"], [71, 1, 1, "", "double"], [71, 1, 1, "", "eval"], [71, 1, 1, "", "extra_repr"], [71, 1, 1, "", "fake_tensordict"], [71, 1, 1, "", "float"], [71, 1, 1, "", "forward"], [71, 1, 1, "", "get_buffer"], [71, 1, 1, "", "get_extra_state"], [71, 1, 1, "", "get_parameter"], [71, 1, 1, "", "get_submodule"], [71, 1, 1, "", "half"], [71, 3, 1, "", "input_spec"], [71, 1, 1, "", "ipu"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "modules"], [71, 1, 1, "", "named_buffers"], [71, 1, 1, "", "named_children"], [71, 1, 1, "", "named_modules"], [71, 1, 1, "", "named_parameters"], [71, 3, 1, "", "observation_spec"], [71, 3, 1, "", "output_spec"], [71, 1, 1, "", "parameters"], [71, 1, 1, "", "rand_action"], [71, 1, 1, "id0", "rand_step"], [71, 1, 1, "", "register_backward_hook"], [71, 1, 1, "", "register_buffer"], [71, 1, 1, "", "register_forward_hook"], [71, 1, 1, "", "register_forward_pre_hook"], [71, 1, 1, "", "register_full_backward_hook"], [71, 1, 1, "", "register_full_backward_pre_hook"], [71, 1, 1, "", "register_load_state_dict_post_hook"], [71, 1, 1, "", "register_module"], [71, 1, 1, "", "register_parameter"], [71, 1, 1, "", "register_state_dict_pre_hook"], [71, 1, 1, "", "requires_grad_"], [71, 1, 1, "id1", "reset"], [71, 3, 1, "", "reward_key"], [71, 3, 1, "", "reward_keys"], [71, 3, 1, "", "reward_spec"], [71, 1, 1, "id2", "rollout"], [71, 1, 1, "", "set_extra_state"], [71, 1, 1, "id3", "set_seed"], [71, 1, 1, "", "share_memory"], [71, 3, 1, "", "specs"], [71, 1, 1, "", "state_dict"], [71, 3, 1, "", "state_spec"], [71, 1, 1, "id4", "step"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_empty"], [71, 1, 1, "", "train"], [71, 1, 1, "", "type"], [71, 1, 1, "", "xpu"], [71, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[75, 3, 1, "", "action_key"], [75, 3, 1, "", "action_keys"], [75, 3, 1, "", "action_spec"], [75, 1, 1, "", "add_module"], [75, 1, 1, "", "apply"], [75, 3, 1, "", "batch_locked"], [75, 1, 1, "", "bfloat16"], [75, 1, 1, "", "buffers"], [75, 1, 1, "", "children"], [75, 1, 1, "", "close"], [75, 1, 1, "", "compile"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 3, 1, "", "done_key"], [75, 3, 1, "", "done_keys"], [75, 3, 1, "", "done_spec"], [75, 1, 1, "", "double"], [75, 1, 1, "", "eval"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "fake_tensordict"], [75, 1, 1, "", "float"], [75, 1, 1, "", "forward"], [75, 1, 1, "", "get_buffer"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "get_parameter"], [75, 1, 1, "", "get_submodule"], [75, 1, 1, "", "half"], [75, 3, 1, "", "input_spec"], [75, 1, 1, "", "ipu"], [75, 1, 1, "", "load_state_dict"], [75, 1, 1, "", "modules"], [75, 1, 1, "", "named_buffers"], [75, 1, 1, "", "named_children"], [75, 1, 1, "", "named_modules"], [75, 1, 1, "", "named_parameters"], [75, 3, 1, "", "observation_spec"], [75, 3, 1, "", "output_spec"], [75, 1, 1, "", "parameters"], [75, 1, 1, "", "rand_action"], [75, 1, 1, "", "rand_step"], [75, 1, 1, "", "read_action"], [75, 1, 1, "", "read_done"], [75, 1, 1, "", "read_obs"], [75, 1, 1, "", "read_reward"], [75, 1, 1, "", "register_backward_hook"], [75, 1, 1, "", "register_buffer"], [75, 1, 1, "", "register_forward_hook"], [75, 1, 1, "", "register_forward_pre_hook"], [75, 1, 1, "", "register_full_backward_hook"], [75, 1, 1, "", "register_full_backward_pre_hook"], [75, 1, 1, "", "register_load_state_dict_post_hook"], [75, 1, 1, "", "register_module"], [75, 1, 1, "", "register_parameter"], [75, 1, 1, "", "register_state_dict_pre_hook"], [75, 1, 1, "", "requires_grad_"], [75, 1, 1, "", "reset"], [75, 3, 1, "", "reward_key"], [75, 3, 1, "", "reward_keys"], [75, 3, 1, "", "reward_spec"], [75, 1, 1, "", "rollout"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "set_info_dict_reader"], [75, 1, 1, "", "set_seed"], [75, 1, 1, "", "share_memory"], [75, 3, 1, "", "specs"], [75, 1, 1, "", "state_dict"], [75, 3, 1, "", "state_spec"], [75, 1, 1, "", "step"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_empty"], [75, 1, 1, "", "train"], [75, 1, 1, "", "type"], [75, 1, 1, "", "xpu"], [75, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[87, 3, 1, "", "action_key"], [87, 3, 1, "", "action_keys"], [87, 3, 1, "", "action_spec"], [87, 1, 1, "", "add_module"], [87, 1, 1, "", "apply"], [87, 3, 1, "", "batch_locked"], [87, 1, 1, "", "bfloat16"], [87, 1, 1, "", "buffers"], [87, 1, 1, "", "children"], [87, 1, 1, "", "compile"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 3, 1, "", "done_key"], [87, 3, 1, "", "done_keys"], [87, 3, 1, "", "done_spec"], [87, 1, 1, "", "double"], [87, 1, 1, "", "eval"], [87, 1, 1, "", "extra_repr"], [87, 1, 1, "", "fake_tensordict"], [87, 1, 1, "", "float"], [87, 1, 1, "", "forward"], [87, 1, 1, "", "get_buffer"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "get_parameter"], [87, 1, 1, "", "get_submodule"], [87, 1, 1, "", "half"], [87, 3, 1, "", "input_spec"], [87, 1, 1, "", "ipu"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "modules"], [87, 1, 1, "", "named_buffers"], [87, 1, 1, "", "named_children"], [87, 1, 1, "", "named_modules"], [87, 1, 1, "", "named_parameters"], [87, 3, 1, "", "observation_spec"], [87, 3, 1, "", "output_spec"], [87, 1, 1, "", "parameters"], [87, 1, 1, "", "rand_action"], [87, 1, 1, "", "rand_step"], [87, 1, 1, "", "register_backward_hook"], [87, 1, 1, "", "register_buffer"], [87, 1, 1, "", "register_forward_hook"], [87, 1, 1, "", "register_forward_pre_hook"], [87, 1, 1, "", "register_full_backward_hook"], [87, 1, 1, "", "register_full_backward_pre_hook"], [87, 1, 1, "", "register_load_state_dict_post_hook"], [87, 1, 1, "", "register_module"], [87, 1, 1, "", "register_parameter"], [87, 1, 1, "", "register_state_dict_pre_hook"], [87, 1, 1, "", "requires_grad_"], [87, 1, 1, "", "reset"], [87, 3, 1, "", "reward_key"], [87, 3, 1, "", "reward_keys"], [87, 3, 1, "", "reward_spec"], [87, 1, 1, "", "rollout"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "", "set_seed"], [87, 1, 1, "", "share_memory"], [87, 3, 1, "", "specs"], [87, 1, 1, "", "state_dict"], [87, 3, 1, "", "state_spec"], [87, 1, 1, "", "step"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_empty"], [87, 1, 1, "", "train"], [87, 1, 1, "", "type"], [87, 1, 1, "", "update_kwargs"], [87, 1, 1, "", "xpu"], [87, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[93, 3, 1, "", "action_key"], [93, 3, 1, "", "action_keys"], [93, 3, 1, "", "action_spec"], [93, 1, 1, "", "add_module"], [93, 1, 1, "", "apply"], [93, 3, 1, "", "batch_locked"], [93, 1, 1, "", "bfloat16"], [93, 1, 1, "", "buffers"], [93, 1, 1, "", "children"], [93, 1, 1, "", "compile"], [93, 1, 1, "", "cpu"], [93, 1, 1, "", "cuda"], [93, 3, 1, "", "done_key"], [93, 3, 1, "", "done_keys"], [93, 3, 1, "", "done_spec"], [93, 1, 1, "", "double"], [93, 1, 1, "", "eval"], [93, 1, 1, "", "extra_repr"], [93, 1, 1, "", "fake_tensordict"], [93, 1, 1, "", "float"], [93, 1, 1, "", "forward"], [93, 1, 1, "", "get_buffer"], [93, 1, 1, "", "get_extra_state"], [93, 1, 1, "", "get_parameter"], [93, 1, 1, "", "get_submodule"], [93, 1, 1, "", "half"], [93, 3, 1, "", "input_spec"], [93, 1, 1, "", "ipu"], [93, 1, 1, "", "load_state_dict"], [93, 1, 1, "", "modules"], [93, 1, 1, "", "named_buffers"], [93, 1, 1, "", "named_children"], [93, 1, 1, "", "named_modules"], [93, 1, 1, "", "named_parameters"], [93, 3, 1, "", "observation_spec"], [93, 3, 1, "", "output_spec"], [93, 1, 1, "", "parameters"], [93, 1, 1, "", "rand_action"], [93, 1, 1, "", "rand_step"], [93, 1, 1, "", "register_backward_hook"], [93, 1, 1, "", "register_buffer"], [93, 1, 1, "", "register_forward_hook"], [93, 1, 1, "", "register_forward_pre_hook"], [93, 1, 1, "", "register_full_backward_hook"], [93, 1, 1, "", "register_full_backward_pre_hook"], [93, 1, 1, "", "register_load_state_dict_post_hook"], [93, 1, 1, "", "register_module"], [93, 1, 1, "", "register_parameter"], [93, 1, 1, "", "register_state_dict_pre_hook"], [93, 1, 1, "", "requires_grad_"], [93, 1, 1, "", "reset"], [93, 3, 1, "", "reward_key"], [93, 3, 1, "", "reward_keys"], [93, 3, 1, "", "reward_spec"], [93, 1, 1, "", "rollout"], [93, 1, 1, "", "set_extra_state"], [93, 1, 1, "", "set_seed"], [93, 1, 1, "", "share_memory"], [93, 3, 1, "", "specs"], [93, 1, 1, "", "state_dict"], [93, 3, 1, "", "state_spec"], [93, 1, 1, "", "step"], [93, 1, 1, "", "to"], [93, 1, 1, "", "to_empty"], [93, 1, 1, "", "train"], [93, 1, 1, "", "type"], [93, 1, 1, "", "update_kwargs"], [93, 1, 1, "", "xpu"], [93, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[97, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[98, 0, 1, "", "ActionMask"], [99, 0, 1, "", "BinarizeReward"], [100, 0, 1, "", "CatFrames"], [101, 0, 1, "", "CatTensors"], [102, 0, 1, "", "CenterCrop"], [103, 0, 1, "", "ClipTransform"], [104, 0, 1, "", "Compose"], [105, 0, 1, "", "DTypeCastTransform"], [106, 0, 1, "", "DeviceCastTransform"], [107, 0, 1, "", "DiscreteActionProjection"], [108, 0, 1, "", "DoubleToFloat"], [109, 0, 1, "", "ExcludeTransform"], [110, 0, 1, "", "FiniteTensorDictCheck"], [111, 0, 1, "", "FlattenObservation"], [112, 0, 1, "", "FrameSkipTransform"], [113, 0, 1, "", "GrayScale"], [114, 0, 1, "", "InitTracker"], [115, 0, 1, "", "KLRewardTransform"], [116, 0, 1, "", "NoopResetEnv"], [117, 0, 1, "", "ObservationNorm"], [118, 0, 1, "", "ObservationTransform"], [119, 0, 1, "", "PermuteTransform"], [120, 0, 1, "", "PinMemoryTransform"], [121, 0, 1, "", "R3MTransform"], [122, 0, 1, "", "RandomCropTensorDict"], [123, 0, 1, "", "RenameTransform"], [124, 0, 1, "", "Resize"], [125, 0, 1, "", "Reward2GoTransform"], [126, 0, 1, "", "RewardClipping"], [127, 0, 1, "", "RewardScaling"], [128, 0, 1, "", "RewardSum"], [129, 0, 1, "", "SelectTransform"], [130, 0, 1, "", "SqueezeTransform"], [131, 0, 1, "", "StepCounter"], [132, 0, 1, "", "TargetReturn"], [133, 0, 1, "", "TensorDictPrimer"], [134, 0, 1, "", "TimeMaxPool"], [135, 0, 1, "", "ToTensorImage"], [136, 0, 1, "", "Transform"], [137, 0, 1, "", "TransformedEnv"], [138, 0, 1, "", "UnsqueezeTransform"], [139, 0, 1, "", "VC1Transform"], [140, 0, 1, "", "VIPRewardTransform"], [141, 0, 1, "", "VIPTransform"], [142, 0, 1, "", "VecNorm"], [143, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "reset"]], "torchrl.envs.transforms.BinarizeReward": [[99, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "reset"], [100, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[101, 1, 1, "", "forward"], [101, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[103, 1, 1, "", "transform_observation_spec"], [103, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "reset"], [104, 1, 1, "", "to"], [104, 1, 1, "", "transform_env_device"], [104, 1, 1, "", "transform_input_spec"], [104, 1, 1, "", "transform_observation_spec"], [104, 1, 1, "", "transform_output_spec"], [104, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[105, 1, 1, "", "forward"], [105, 1, 1, "", "transform_input_spec"], [105, 1, 1, "", "transform_observation_spec"], [105, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "transform_done_spec"], [106, 1, 1, "", "transform_env_device"], [106, 1, 1, "", "transform_input_spec"], [106, 1, 1, "", "transform_observation_spec"], [106, 1, 1, "", "transform_output_spec"], [106, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[107, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[109, 1, 1, "", "forward"], [109, 1, 1, "", "reset"], [109, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[110, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[113, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "reset"], [114, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[115, 1, 1, "", "forward"], [115, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[116, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[117, 1, 1, "", "init_stats"], [117, 1, 1, "", "transform_input_spec"], [117, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[119, 1, 1, "", "transform_input_spec"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[120, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[121, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[122, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "transform_input_spec"], [123, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[125, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[126, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[127, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "reset"], [128, 1, 1, "", "transform_input_spec"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "reset"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "transform_input_spec"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "reset"], [132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "reset"], [133, 1, 1, "", "to"], [133, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "reset"], [134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[136, 3, 1, "", "container"], [136, 1, 1, "", "forward"], [136, 3, 1, "", "parent"], [136, 1, 1, "", "reset"], [136, 1, 1, "", "to"], [136, 1, 1, "", "transform_done_spec"], [136, 1, 1, "", "transform_env_device"], [136, 1, 1, "", "transform_input_spec"], [136, 1, 1, "", "transform_observation_spec"], [136, 1, 1, "", "transform_output_spec"], [136, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[137, 3, 1, "", "batch_locked"], [137, 1, 1, "", "eval"], [137, 3, 1, "", "input_spec"], [137, 1, 1, "", "load_state_dict"], [137, 3, 1, "", "output_spec"], [137, 1, 1, "", "set_missing_tolerance"], [137, 1, 1, "", "set_seed"], [137, 1, 1, "", "state_dict"], [137, 1, 1, "", "to"], [137, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[138, 1, 1, "", "transform_input_spec"], [138, 1, 1, "", "transform_observation_spec"], [138, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "make_noload_model"], [139, 1, 1, "", "to"], [139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[140, 1, 1, "", "forward"], [140, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[141, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[142, 1, 1, "", "build_td_for_shared_vecnorm"], [142, 1, 1, "", "forward"], [142, 1, 1, "", "get_extra_state"], [142, 1, 1, "", "set_extra_state"], [142, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[144, 2, 1, "", "check_env_specs"], [145, 2, 1, "", "exploration_mode"], [146, 2, 1, "", "exploration_type"], [147, 2, 1, "", "get_available_libraries"], [148, 2, 1, "", "make_composite_from_td"], [149, 2, 1, "", "set_exploration_mode"], [150, 2, 1, "", "set_exploration_type"], [151, 2, 1, "", "step_mdp"]], "torchrl.modules": [[152, 0, 1, "", "CEMPlanner"], [153, 0, 1, "", "ConvNet"], [154, 0, 1, "", "DTActor"], [155, 0, 1, "", "DdpgCnnActor"], [156, 0, 1, "", "DdpgCnnQNet"], [157, 0, 1, "", "DdpgMlpActor"], [158, 0, 1, "", "DdpgMlpQNet"], [159, 0, 1, "", "DecisionTransformer"], [160, 0, 1, "", "Delta"], [161, 0, 1, "", "DistributionalDQNnet"], [162, 0, 1, "", "DistributionalQValueHook"], [163, 0, 1, "", "DreamerActor"], [164, 0, 1, "", "DuelingCnnDQNet"], [165, 0, 1, "", "IndependentNormal"], [166, 0, 1, "", "LSTMModule"], [167, 0, 1, "", "LSTMNet"], [168, 0, 1, "", "MLP"], [169, 0, 1, "", "MPCPlannerBase"], [170, 0, 1, "", "MPPIPlanner"], [171, 0, 1, "", "MaskedCategorical"], [172, 0, 1, "", "MaskedOneHotCategorical"], [173, 0, 1, "", "MultiAgentMLP"], [174, 0, 1, "", "NoisyLazyLinear"], [175, 0, 1, "", "NoisyLinear"], [176, 0, 1, "", "NormalParamWrapper"], [177, 0, 1, "", "ObsDecoder"], [178, 0, 1, "", "ObsEncoder"], [179, 0, 1, "", "OneHotCategorical"], [180, 0, 1, "", "OnlineDTActor"], [181, 0, 1, "", "QMixer"], [182, 0, 1, "", "QValueHook"], [183, 0, 1, "", "RSSMPosterior"], [184, 0, 1, "", "RSSMPrior"], [185, 0, 1, "", "Squeeze2dLayer"], [186, 0, 1, "", "SqueezeLayer"], [187, 0, 1, "", "TanhDelta"], [188, 0, 1, "", "TanhNormal"], [189, 0, 1, "", "TruncatedNormal"], [190, 0, 1, "", "VDNMixer"], [191, 0, 1, "", "VmapModule"], [192, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[152, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[153, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[154, 1, 1, "", "default_config"], [154, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[155, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[156, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[157, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[158, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[159, 0, 1, "", "DTConfig"], [159, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[160, 1, 1, "", "log_prob"], [160, 3, 1, "", "mean"], [160, 3, 1, "", "mode"], [160, 1, 1, "", "rsample"], [160, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[161, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[163, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[164, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[165, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "set_recurrent_mode"], [166, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[167, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[168, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[170, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[171, 1, 1, "", "log_prob"], [171, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[172, 1, 1, "", "log_prob"], [172, 1, 1, "", "rsample"], [172, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[173, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[174, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[176, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[177, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[178, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[179, 1, 1, "", "log_prob"], [179, 3, 1, "", "mode"], [179, 1, 1, "", "rsample"], [179, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[180, 1, 1, "", "default_config"], [180, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[181, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[183, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[184, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[186, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[187, 3, 1, "", "mean"], [187, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[188, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[189, 1, 1, "", "log_prob"], [189, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[190, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[191, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[193, 0, 1, "", "Actor"], [194, 0, 1, "", "ActorCriticOperator"], [195, 0, 1, "", "ActorCriticWrapper"], [196, 0, 1, "", "ActorValueOperator"], [197, 0, 1, "", "AdditiveGaussianWrapper"], [198, 0, 1, "", "DecisionTransformerInferenceWrapper"], [199, 0, 1, "", "DistributionalQValueActor"], [200, 0, 1, "", "DistributionalQValueModule"], [201, 0, 1, "", "EGreedyModule"], [202, 0, 1, "", "LMHeadActorValueOperator"], [203, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [204, 0, 1, "", "ProbabilisticActor"], [205, 0, 1, "", "QValueActor"], [206, 0, 1, "", "QValueModule"], [207, 0, 1, "", "SafeModule"], [208, 0, 1, "", "SafeProbabilisticModule"], [209, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [210, 0, 1, "", "SafeSequential"], [211, 0, 1, "", "TanhModule"], [212, 0, 1, "", "ValueOperator"], [213, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[194, 1, 1, "", "get_critic_operator"], [194, 1, 1, "", "get_policy_head"], [194, 1, 1, "", "get_value_head"], [194, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[195, 1, 1, "", "get_policy_head"], [195, 1, 1, "", "get_policy_operator"], [195, 1, 1, "", "get_value_head"], [195, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[196, 1, 1, "", "get_policy_head"], [196, 1, 1, "", "get_policy_operator"], [196, 1, 1, "", "get_value_head"], [196, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "mask_context"], [198, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[200, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[206, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[207, 1, 1, "", "random"], [207, 1, 1, "", "random_sample"], [207, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[208, 1, 1, "", "random"], [208, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[211, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[213, 1, 1, "", "get_reward_operator"], [213, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[214, 0, 1, "", "biased_softplus"], [215, 0, 1, "", "inv_softplus"], [216, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[214, 1, 1, "", "forward"]], "torchrl.objectives": [[217, 0, 1, "", "A2CLoss"], [218, 0, 1, "", "CQLLoss"], [219, 0, 1, "", "ClipPPOLoss"], [220, 0, 1, "", "DDPGLoss"], [221, 0, 1, "", "DQNLoss"], [222, 0, 1, "", "DTLoss"], [223, 0, 1, "", "DiscreteSACLoss"], [224, 0, 1, "", "DistributionalDQNLoss"], [225, 0, 1, "", "DreamerActorLoss"], [226, 0, 1, "", "DreamerModelLoss"], [227, 0, 1, "", "DreamerValueLoss"], [228, 0, 1, "", "HardUpdate"], [229, 0, 1, "", "IQLLoss"], [230, 0, 1, "", "KLPENPPOLoss"], [231, 0, 1, "", "LossModule"], [232, 0, 1, "", "OnlineDTLoss"], [233, 0, 1, "", "PPOLoss"], [234, 0, 1, "", "REDQLoss"], [235, 0, 1, "", "ReinforceLoss"], [236, 0, 1, "", "SACLoss"], [237, 0, 1, "", "SoftUpdate"], [238, 0, 1, "", "TD3Loss"], [239, 0, 1, "", "ValueEstimators"], [240, 0, 1, "", "default_value_kwargs"], [241, 0, 1, "", "distance_loss"], [242, 0, 1, "", "hold_out_net"], [243, 0, 1, "", "hold_out_params"], [245, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[219, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[222, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[226, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[227, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "loss_value_diff"], [229, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[230, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[231, 1, 1, "", "convert_to_functional"], [231, 1, 1, "", "forward"], [231, 1, 1, "", "make_value_estimator"], [231, 1, 1, "", "named_parameters"], [231, 1, 1, "", "parameters"], [231, 1, 1, "", "set_keys"], [231, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[232, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[244, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[246, 0, 1, "", "GAE"], [247, 0, 1, "", "TD0Estimator"], [248, 0, 1, "", "TD1Estimator"], [249, 0, 1, "", "TDLambdaEstimator"], [250, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "set_keys"], [250, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[251, 0, 1, "", "generalized_advantage_estimate"], [252, 0, 1, "", "reward2go"], [253, 0, 1, "", "td0_advantage_estimate"], [254, 0, 1, "", "td0_return_estimate"], [255, 0, 1, "", "td1_advantage_estimate"], [256, 0, 1, "", "td1_return_estimate"], [257, 0, 1, "", "td_lambda_advantage_estimate"], [258, 0, 1, "", "td_lambda_return_estimate"], [259, 0, 1, "", "vec_generalized_advantage_estimate"], [260, 0, 1, "", "vec_td1_advantage_estimate"], [261, 0, 1, "", "vec_td1_return_estimate"], [262, 0, 1, "", "vec_td_lambda_advantage_estimate"], [263, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[264, 2, 1, "", "TensorDictRecorder"], [265, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[266, 2, 1, "", "Logger"], [268, 2, 1, "", "generate_exp_name"], [269, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[267, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[270, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[271, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[272, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[273, 0, 1, "", "BatchSubSampler"], [274, 0, 1, "", "ClearCudaCache"], [275, 0, 1, "", "CountFramesLog"], [276, 0, 1, "", "LogReward"], [277, 0, 1, "", "OptimizerHook"], [278, 0, 1, "", "Recorder"], [279, 0, 1, "", "ReplayBufferTrainer"], [280, 0, 1, "", "RewardNormalizer"], [281, 0, 1, "", "SelectKeys"], [282, 0, 1, "", "Trainer"], [283, 0, 1, "", "TrainerHookBase"], [284, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[273, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[274, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[275, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[276, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[277, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[278, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[279, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[280, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[281, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[283, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[284, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[285, 2, 1, "", "correct_for_frame_skip"], [286, 2, 1, "", "get_stats_random_rollout"], [287, 2, 1, "", "make_collector_offpolicy"], [288, 2, 1, "", "make_collector_onpolicy"], [289, 2, 1, "", "make_dqn_loss"], [290, 2, 1, "", "make_redq_loss"], [291, 2, 1, "", "make_redq_model"], [292, 2, 1, "", "make_replay_buffer"], [293, 2, 1, "", "make_target_updater"], [294, 2, 1, "", "make_trainer"], [295, 2, 1, "", "parallel_env_constructor"], [296, 2, 1, "", "sync_async_collector"], [297, 2, 1, "", "sync_sync_collector"], [298, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 302, 303, 304, 305, 306, 307, 308, 312, 313, 317, 318], "tutori": [0, 308, 312], "basic": [0, 315], "intermedi": [0, 8], "advanc": 0, "refer": [0, 300], "knowledg": [0, 301], "base": [0, 7, 301], "indic": 0, "tabl": 0, "collector": [1, 306, 307, 308, 309, 312, 317], "packag": [1, 2, 3, 302, 303, 304, 305], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 306, 307, 308, 312, 317], "distribut": [1, 302], "helper": [1, 3], "function": [1, 4, 303, 307, 308, 312, 317], "replai": [2, 306, 307, 308, 309, 312, 315, 317], "buffer": [2, 306, 307, 308, 309, 312, 315, 317], "compos": [2, 104], "store": [2, 307], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 303, 308, 312], "learn": [2, 4, 308, 312], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 302, 303, 304], "env": [3, 313, 317, 318], "vector": [3, 317], "multi": [3, 302, 303, 311, 312], "agent": [3, 4, 302, 303, 312], "environ": [3, 4, 6, 7, 306, 307, 308, 309, 311, 312, 313, 317, 318], "transform": [3, 136, 306, 308, 312, 313, 315, 317, 318], "clone": [3, 7], "mask": 3, "action": [3, 4, 309, 313], "record": [3, 278, 304, 306], "domain": [3, 302], "specif": [3, 302, 311], "librari": [3, 317], "thing": [4, 306, 313], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 317], "gener": [4, 302], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 306, 313], "algorithm": [4, 302], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 306, 307], "return": [4, 303], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 306, 308, 309, 311, 312, 313], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 317], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 311], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 306, 307, 308], "standard": 4, "explor": [4, 302, 306, 307], "valu": [4, 302, 303, 306, 308, 309], "loss": [4, 306, 307, 308, 309, 312], "earli": 4, "train": [4, 8, 303, 306, 308, 309, 312, 313], "roughli": 4, "uniformli": 4, "random": [4, 312], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 307], "increas": 4, "an": [4, 308, 309, 313], "dynam": [4, 315], "can": 4, "low": 4, "forward": [4, 306], "model": [4, 302, 306, 307, 309, 314, 317], "also": 4, "us": [4, 6, 9, 309, 314, 315, 317], "offlin": 4, "observ": [4, 306], "space": 4, "effect": [4, 313], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 318], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 317], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 312, 318], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 306], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 313], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 306, 315], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "braxenv": 67, "braxwrapp": 68, "dmcontrolenv": 69, "dmcontrolwrapp": 70, "envbas": [71, 313], "envcreat": 72, "envmetadata": 73, "gymenv": 74, "gymlikeenv": 75, "gymwrapp": 76, "habitatenv": 77, "isaacgymenv": 78, "isaacgymwrapp": 79, "jumanjienv": 80, "jumanjiwrapp": 81, "marlgroupmaptyp": 82, "modelbasedenvbas": 83, "multithreadedenv": 84, "multithreadedenvwrapp": 85, "openmlenv": 86, "parallelenv": 87, "pettingzooenv": 88, "pettingzoowrapp": 89, "robohiveenv": 90, "smacv2env": 91, "smacv2wrapp": 92, "serialenv": 93, "vmasenv": 94, "vmaswrapp": 95, "check_marl_group": 96, "dreamerenv": 97, "actionmask": 98, "binarizereward": 99, "catfram": [100, 315], "cattensor": 101, "centercrop": 102, "cliptransform": 103, "dtypecasttransform": 105, "devicecasttransform": 106, "discreteactionproject": 107, "doubletofloat": 108, "excludetransform": 109, "finitetensordictcheck": 110, "flattenobserv": 111, "frameskiptransform": 112, "grayscal": 113, "inittrack": 114, "klrewardtransform": 115, "noopresetenv": 116, "observationnorm": 117, "observationtransform": 118, "permutetransform": 119, "pinmemorytransform": 120, "r3mtransform": 121, "randomcroptensordict": 122, "renametransform": 123, "resiz": 124, "reward2gotransform": 125, "rewardclip": 126, "rewardsc": 127, "rewardsum": 128, "selecttransform": 129, "squeezetransform": 130, "stepcount": 131, "targetreturn": 132, "tensordictprim": 133, "timemaxpool": 134, "totensorimag": 135, "transformedenv": 137, "unsqueezetransform": 138, "vc1transform": 139, "viprewardtransform": 140, "viptransform": 141, "vecnorm": [142, 318], "gsdenois": 143, "check_env_spec": 144, "exploration_mod": 145, "exploration_typ": 146, "get_available_librari": 147, "make_composite_from_td": 148, "set_exploration_mod": 149, "set_exploration_typ": 150, "step_mdp": 151, "cemplann": 152, "convnet": 153, "dtactor": 154, "ddpgcnnactor": 155, "ddpgcnnqnet": 156, "ddpgmlpactor": 157, "ddpgmlpqnet": 158, "decisiontransform": 159, "delta": 160, "distributionaldqnnet": 161, "distributionalqvaluehook": 162, "dreameractor": 163, "duelingcnndqnet": 164, "independentnorm": 165, "lstmmodul": 166, "lstmnet": 167, "mlp": [168, 309], "mpcplannerbas": 169, "mppiplann": 170, "maskedcategor": 171, "maskedonehotcategor": 172, "multiagentmlp": 173, "noisylazylinear": 174, "noisylinear": 175, "normalparamwrapp": 176, "obsdecod": 177, "obsencod": 178, "onehotcategor": 179, "onlinedtactor": 180, "qmixer": [181, 303], "qvaluehook": 182, "rssmposterior": 183, "rssmprior": 184, "squeeze2dlay": 185, "squeezelay": 186, "tanhdelta": 187, "tanhnorm": 188, "truncatednorm": 189, "vdnmixer": 190, "vmapmodul": 191, "reset_nois": 192, "actor": [193, 302, 306], "actorcriticoper": 194, "actorcriticwrapp": 195, "actorvalueoper": 196, "additivegaussianwrapp": 197, "decisiontransformerinferencewrapp": 198, "distributionalqvalueactor": 199, "distributionalqvaluemodul": 200, "egreedymodul": 201, "lmheadactorvalueoper": 202, "ornsteinuhlenbeckprocesswrapp": 203, "probabilisticactor": 204, "qvalueactor": 205, "qvaluemodul": 206, "safemodul": [207, 302], "safeprobabilisticmodul": 208, "safeprobabilistictensordictsequenti": 209, "safesequenti": 210, "tanhmodul": 211, "valueoper": 212, "worldmodelwrapp": 213, "biased_softplu": 214, "inv_softplu": 215, "map": 216, "a2closs": 217, "cqlloss": 218, "clipppoloss": 219, "ddpgloss": 220, "dqnloss": 221, "dtloss": 222, "discretesacloss": 223, "distributionaldqnloss": 224, "dreameractorloss": 225, "dreamermodelloss": 226, "dreamervalueloss": 227, "hardupd": 228, "iqlloss": 229, "klpenppoloss": 230, "lossmodul": [231, 306], "onlinedtloss": 232, "ppoloss": 233, "redqloss": 234, "reinforceloss": 235, "sacloss": 236, "softupd": 237, "td3loss": 238, "valueestim": 239, "default_value_kwarg": 240, "distance_loss": 241, "hold_out_net": 242, "hold_out_param": 243, "qmixerloss": 244, "next_state_valu": 245, "gae": 246, "td0estim": 247, "td1estim": 248, "tdlambdaestim": 249, "valueestimatorbas": 250, "generalized_advantage_estim": 251, "reward2go": 252, "td0_advantage_estim": 253, "td0_return_estim": 254, "td1_advantage_estim": 255, "td1_return_estim": 256, "td_lambda_advantage_estim": 257, "td_lambda_return_estim": 258, "vec_generalized_advantage_estim": 259, "vec_td1_advantage_estim": 260, "vec_td1_return_estim": 261, "vec_td_lambda_advantage_estim": 262, "vec_td_lambda_return_estim": 263, "tensordictrecord": 264, "videorecord": 265, "logger": [266, 304], "csvlogger": 267, "generate_exp_nam": 268, "get_logg": 269, "mlflowlogg": 270, "tensorboardlogg": 271, "wandblogg": 272, "batchsubsampl": 273, "clearcudacach": 274, "countframeslog": 275, "logreward": 276, "optimizerhook": 277, "replaybuffertrain": 279, "rewardnorm": 280, "selectkei": 281, "trainer": [282, 304, 307], "trainerhookbas": 283, "updateweight": 284, "correct_for_frame_skip": 285, "get_stats_random_rollout": 286, "make_collector_offpolici": 287, "make_collector_onpolici": 288, "make_dqn_loss": 289, "make_redq_loss": 290, "make_redq_model": 291, "make_replay_buff": 292, "make_target_updat": 293, "make_train": 294, "parallel_env_constructor": 295, "sync_async_collector": 296, "sync_sync_collector": 297, "transformed_env_constructor": 298, "readm": [299, 310], "tuto": [299, 310], "api": 300, "contribut": [301, 317], "content": 301, "modul": [302, 306, 309, 317], "tensordict": [302, 315, 317], "wrapper": 302, "probabilist": 302, "q": [302, 307, 309], "oper": 302, "join": 302, "hook": [302, 304, 307], "regular": 302, "planner": 302, "object": [303, 306, 317], "dqn": [303, 307, 309], "ddpg": [303, 306], "sac": 303, "redq": 303, "iql": 303, "cql": 303, "dt": 303, "td3": 303, "ppo": [303, 308, 312], "a2c": 303, "dreamer": 303, "checkpoint": 304, "builder": 304, "_util": 305, "code": [306, 313], "setup": [306, 309], "The": 306, "__init__": 306, "method": 306, "estim": 306, "put": 306, "togeth": [306, 313], "call": 306, "parallel": [306, 311, 318], "execut": [306, 311, 313], "stat": 306, "build": [306, 307, 315], "evalu": 306, "batch": [306, 313, 315], "size": [306, 315], "construct": 306, "target": [306, 307], "network": [306, 307, 308, 309, 312], "updat": 306, "time": [306, 316], "experi": [306, 313], "result": [306, 308, 312], "conclus": [306, 307, 308, 309, 312, 313, 315], "A": [307, 315], "exampl": [307, 315], "comput": [307, 313, 316], "deep": 307, "collect": [307, 308], "paramet": [307, 308], "hyperparamet": [307, 308, 312], "regist": 307, "possibl": 307, "improv": 307, "defin": [308, 312], "loop": [308, 309, 312, 313], "next": [308, 312], "step": [308, 312, 318], "recurr": 309, "convolut": 309, "lstm": 309, "select": 309, "divers": 311, "rollout": [311, 312, 313, 318], "critic": 312, "pendulum": 313, "write": 313, "_step": 313, "reset": [313, 318], "simul": 313, "_reset": 313, "metadata": 313, "_spec": 313, "spec": [313, 318], "shape": 313, "seed": [313, 318], "wrap": 313, "class": [313, 317], "test": 313, "our": 313, "custom": [313, 315], "simpl": 313, "pretrain": 314, "vanilla": 315, "integr": 315, "tensorclass": 315, "sampl": 315, "iter": 315, "over": 315, "fix": 315, "priorit": 315, "save": 315, "raw": 315, "imag": 315, "more": 315, "complex": 315, "introduct": 317, "config": 317, "tensordictmodul": 317, "sequenc": 317, "program": 317, "ensembl": 317, "meta": 317, "special": 317, "state": 317, "frame_skip": 318, "deepmind": 318, "control": 318, "devic": 318, "run": 318, "close": 318, "access": 318, "attribut": 318, "kwarg": 318}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})