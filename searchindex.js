Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.gym.MOGymEnv", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper", "reference/generated/torchrl.envs.libs.gym.gym_backend", "reference/generated/torchrl.envs.libs.gym.set_gym_backend", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.MOGymEnv.rst", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.gym_backend.rst", "reference/generated/torchrl.envs.libs.gym.set_gym_backend.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "MOGymEnv", "MOGymWrapper", "gym_backend", "set_gym_backend", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DTypeCastTransform", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 88, 93, 95, 97, 98, 99, 101, 107, 108, 111, 112, 113, 115, 123, 125, 126, 127, 129, 132, 134, 143, 144, 145, 146, 147, 154, 155, 156, 157, 160, 161, 165, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 248, 251, 260, 261, 265, 266, 269, 278, 279, 280, 281, 284, 285, 286, 289, 290, 294, 295, 297, 298, 300, 301], "open": [0, 5, 7, 11, 290, 295, 300], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301], "reinforc": [0, 3, 9, 93, 144, 145, 146, 147, 150, 185, 188, 202, 203, 208, 212, 213, 218, 219, 220, 283, 290, 293, 296, 299, 300], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 93, 144, 145, 146, 147, 150, 158, 162, 185, 188, 202, 203, 208, 212, 213, 217, 218, 219, 220, 283, 285, 286, 289, 290, 292, 293, 294, 296, 298, 299, 300, 301], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 71, 122, 162, 179, 189, 197, 202, 215, 216, 256, 284, 285, 286, 287, 289, 290, 291, 295, 297, 298, 301], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 52, 72, 137, 283, 284, 285, 288, 289, 290, 291, 295, 296, 301], "pytorch": [0, 1, 2, 3, 125, 161, 162, 265, 284, 287, 289, 291, 292, 295, 296, 297, 300, 301], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 67, 70, 71, 72, 73, 74, 85, 106, 108, 112, 122, 127, 134, 144, 146, 151, 160, 167, 169, 170, 176, 177, 185, 188, 191, 193, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 228, 229, 261, 274, 284, 285, 286, 289, 290, 292, 295, 296, 297, 298, 300, 301], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 59, 67, 70, 71, 72, 73, 74, 94, 95, 97, 99, 102, 107, 108, 111, 112, 115, 118, 123, 127, 129, 131, 132, 143, 150, 154, 155, 156, 157, 159, 160, 177, 179, 183, 185, 186, 188, 189, 190, 191, 196, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 248, 252, 256, 262, 269, 274, 277, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "python": [0, 3, 5, 6, 7, 10, 21, 84, 159, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 65, 70, 93, 94, 102, 108, 111, 112, 125, 127, 129, 154, 156, 160, 161, 165, 179, 184, 185, 189, 190, 192, 193, 204, 210, 214, 215, 216, 247, 264, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "low": [0, 98, 185, 196, 289, 290, 296, 300], "high": [0, 9, 41, 98, 185, 196, 229, 234, 242, 289, 290, 298, 300], "level": [0, 3, 4, 22, 26, 28, 93, 214, 289, 290, 300], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 66, 67, 109, 157, 233, 257, 266, 287, 291, 296, 300], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 65, 67, 68, 70, 71, 72, 73, 74, 88, 96, 97, 98, 99, 101, 102, 106, 111, 118, 123, 125, 126, 127, 128, 129, 131, 132, 138, 142, 147, 148, 154, 155, 157, 159, 162, 166, 167, 170, 184, 188, 189, 190, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 227, 228, 229, 230, 231, 232, 233, 262, 277, 281, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 98, 177, 215, 285, 300], "effici": [0, 1, 2, 4, 8, 162, 285, 289, 290, 291, 292, 294, 295, 297, 298, 300], "modular": [0, 195, 298, 300], "document": [0, 5, 7, 18, 19, 21, 32, 67, 70, 72, 73, 74, 127, 290, 300], "properli": [0, 67, 291, 295, 296, 300], "test": [0, 3, 5, 129, 134, 154, 155, 261, 277, 291, 292, 300], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 72, 73, 74, 93, 96, 97, 99, 100, 108, 111, 115, 117, 119, 122, 123, 126, 127, 129, 131, 141, 142, 144, 145, 146, 147, 154, 155, 157, 158, 159, 162, 163, 168, 169, 170, 179, 180, 185, 188, 189, 191, 192, 193, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 235, 250, 253, 254, 255, 256, 260, 277, 279, 280, 285, 286, 287, 290, 291, 292, 295, 296, 297, 298, 300, 301], "code": [0, 3, 5, 7, 8, 111, 129, 154, 195, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301], "aim": [0, 3, 7, 28, 29, 67, 111, 129, 131, 156, 268, 284, 285, 286, 289, 290, 300], "support": [0, 1, 3, 18, 20, 26, 52, 53, 54, 55, 56, 63, 65, 72, 88, 108, 126, 137, 150, 177, 184, 185, 192, 195, 208, 229, 230, 231, 232, 253, 285, 287, 291, 292, 295, 296, 298, 300], "research": [0, 7, 9, 300], "most": [0, 3, 7, 8, 32, 67, 98, 289, 291, 296, 300, 301], "written": [0, 3, 34, 36, 39, 45, 52, 55, 67, 70, 72, 73, 74, 93, 106, 118, 121, 124, 141, 179, 188, 189, 192, 193, 197, 202, 204, 214, 216, 218, 228, 247, 248, 285, 286, 287, 289, 292, 294, 296, 300], "highli": [0, 2, 300, 301], "wai": [0, 3, 4, 111, 113, 131, 216, 229, 230, 231, 232, 285, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 67, 68, 70, 72, 73, 74, 84, 93, 96, 97, 98, 99, 107, 108, 111, 112, 115, 118, 122, 123, 126, 127, 129, 131, 132, 142, 153, 154, 157, 158, 160, 162, 163, 175, 177, 179, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 261, 274, 279, 280, 281, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "easili": [0, 3, 7, 274, 286, 289, 290, 291, 295, 300, 301], "swap": [0, 3, 291, 297, 300], "compon": [0, 2, 3, 55, 56, 57, 63, 65, 150, 168, 184, 185, 191, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 260, 265, 289, 290, 291, 292, 294, 295, 296, 297, 300], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 144, 150, 151, 167, 168, 176, 187, 196, 199, 201, 248, 262, 274, 281, 283, 290, 292, 293, 297, 299], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 72, 73, 74, 97, 99, 127, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 176, 177, 183, 185, 186, 188, 191, 196, 199, 214, 248, 289, 290, 292, 294, 295, 296, 297, 298, 300, 301], "write": [0, 3, 8, 23, 32, 37, 45, 70, 110, 179, 192, 193, 195, 197, 203, 205, 206, 207, 213, 217, 219, 221, 228, 233, 248, 285, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 67, 70, 72, 73, 74, 118, 126, 132, 141, 154, 188, 192, 193, 198, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 289, 291, 292, 295, 296, 300, 301], "ones": [0, 15, 26, 32, 35, 41, 42, 67, 70, 72, 73, 74, 94, 96, 97, 99, 108, 111, 115, 122, 123, 126, 127, 129, 131, 159, 177, 192, 202, 203, 205, 213, 216, 217, 219, 221, 235, 289, 291, 295, 296, 298, 300, 301], "littl": [0, 3, 43, 291, 292, 298, 300, 301], "effort": [0, 3, 296, 298, 300], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 84, 85, 93, 94, 96, 97, 98, 99, 101, 103, 105, 106, 108, 111, 112, 113, 115, 118, 119, 123, 124, 126, 127, 129, 130, 131, 132, 134, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 229, 230, 231, 232, 233, 247, 256, 258, 261, 262, 265, 267, 268, 269, 274, 277, 281, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "repo": [0, 6, 52, 129, 284, 295, 300], "attempt": [0, 183, 186, 188, 206, 213, 227, 300], "align": [0, 300], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 67, 70, 72, 73, 74, 94, 127, 269, 281, 295, 300, 301], "ecosystem": [0, 300], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 67, 68, 70, 72, 73, 74, 93, 123, 127, 154, 183, 185, 186, 188, 193, 214, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 88, 132, 283, 289, 290, 297, 298, 300, 301], "pillar": [0, 300], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 93, 94, 97, 98, 99, 103, 107, 108, 111, 112, 122, 126, 127, 129, 132, 134, 142, 154, 155, 157, 158, 183, 186, 188, 209, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 256, 258, 261, 268, 269, 270, 271, 274, 277, 278, 279, 280, 281, 283, 284, 285, 293, 297, 298, 299], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 67, 70, 71, 72, 73, 74, 97, 111, 123, 129, 131, 133, 143, 154, 156, 157, 158, 160, 167, 176, 180, 181, 182, 187, 192, 198, 202, 203, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 219, 227, 265, 270, 271, 272, 273, 274, 283, 284, 287, 291, 293, 295, 296, 298, 299, 301], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 88, 93, 97, 99, 106, 108, 115, 121, 134, 138, 142, 150, 154, 155, 158, 160, 168, 177, 179, 184, 186, 188, 189, 190, 192, 195, 196, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 256, 262, 265, 267, 270, 277, 279, 280, 281, 283, 285, 286, 287, 292, 296, 297, 298, 301], "util": [0, 3, 17, 23, 32, 40, 67, 70, 72, 73, 74, 111, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 199, 200, 201, 215, 277, 283, 288, 289, 291, 295, 296, 300, 301], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 65, 67, 68, 70, 72, 73, 74, 94, 96, 102, 108, 111, 118, 123, 126, 127, 129, 131, 134, 153, 154, 158, 160, 163, 168, 174, 175, 185, 189, 191, 192, 193, 228, 229, 230, 231, 232, 256, 268, 280, 285, 289, 290, 291, 295, 296, 297, 300, 301], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 67, 68, 70, 72, 73, 74, 94, 96, 102, 108, 111, 118, 123, 126, 127, 129, 131, 134, 153, 154, 158, 160, 174, 175, 189, 192, 193, 228, 238, 239, 240, 241, 243, 244, 245, 246, 280, 285, 289, 290, 291, 295, 296, 297, 300, 301], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 93, 115, 121, 188, 262, 265, 267, 270, 271, 277, 279, 280, 283, 287, 298, 301], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 64, 66, 67, 70, 71, 72, 73, 74, 96, 97, 99, 111, 123, 126, 127, 129, 131, 132, 141, 142, 143, 156, 158, 160, 179, 184, 185, 189, 191, 192, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 235, 252, 256, 268, 274, 277, 278, 279, 280, 281, 285, 286, 287, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 67, 70, 72, 73, 74, 106, 127, 156, 160, 289, 290, 291, 298, 300, 301], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 67, 70, 72, 73, 74, 93, 97, 99, 106, 107, 108, 122, 123, 126, 127, 132, 134, 143, 155, 156, 160, 177, 194, 195, 202, 204, 214, 216, 224, 227, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 256, 265, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "few": [0, 2, 8, 256, 291, 292, 295, 298, 300, 301], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 97, 99, 197, 216, 285, 289, 291, 292, 295, 296, 300, 301], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 143, 192, 261, 265, 285, 289, 291, 292, 295, 296, 298, 300, 301], "standard": [0, 3, 108, 117, 132, 142, 151, 158, 161, 162, 183, 221, 229, 230, 231, 232, 289, 290, 295, 298, 300], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 125, 265, 296, 298, 300, 301], "common": [0, 3, 4, 21, 70, 73, 74, 180, 181, 182, 187, 202, 203, 204, 207, 213, 214, 216, 217, 218, 219, 221, 277, 284, 285, 287, 289, 291, 294, 295, 297, 300, 301], "openai": [0, 7, 79, 80, 291, 296, 300, 301], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 93, 105, 106, 108, 113, 115, 123, 132, 154, 274, 277, 284, 289, 290, 291, 292, 296, 297, 298, 300], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 99, 102, 108, 111, 112, 115, 122, 123, 126, 127, 129, 131, 132, 154, 155, 160, 179, 184, 189, 190, 192, 193, 194, 195, 202, 204, 205, 207, 213, 214, 215, 216, 217, 218, 219, 220, 221, 229, 230, 231, 232, 233, 269, 287, 289, 290, 291, 292, 294, 295, 296, 298, 300, 301], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 68, 70, 71, 72, 73, 74, 77, 88, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 174, 175, 177, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 253, 256, 258, 259, 260, 261, 262, 263, 265, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 285, 292, 295, 296, 298, 300], "On": [0, 3, 7, 18, 19, 20, 21, 285, 290, 295], "end": [0, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 122, 127, 143, 157, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "come": [0, 1, 3, 8, 73, 74, 97, 99, 179, 180, 181, 182, 189, 197, 289, 290, 291, 292, 295, 298, 300, 301], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 84, 94, 96, 97, 99, 105, 106, 111, 121, 122, 123, 126, 127, 129, 131, 134, 139, 140, 154, 157, 160, 183, 192, 215, 216, 233, 256, 261, 262, 271, 281, 284, 285, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "re": [0, 3, 8, 32, 62, 67, 70, 72, 73, 74, 154, 159, 189, 193, 287, 289, 291, 292, 294, 296, 300, 301], "usabl": [0, 287, 292, 300], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 84, 97, 99, 127, 132, 134, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 159, 160, 163, 164, 165, 166, 169, 170, 172, 175, 177, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 274, 277, 283, 285, 289, 292, 294, 296, 298, 301], "cost": [0, 2, 27, 289, 290, 295, 296, 298], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 141, 142, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 166, 167, 169, 170, 173, 174, 175, 176, 179, 180, 181, 182, 189, 191, 192, 193, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 265, 268, 270, 274, 277, 278, 279, 280, 281, 283, 285, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 67, 68, 70, 72, 73, 74, 132, 160, 185, 188, 191, 287, 289, 290, 292, 295, 296, 297, 298, 300, 301], "good": [0, 1, 4, 9, 289, 291, 292, 295, 300, 301], "runtim": [0, 3, 32, 67, 70, 72, 73, 74, 296], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 67, 70, 72, 73, 74, 97, 99, 107, 127, 142, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 210, 216, 261, 265, 286, 289, 290, 291, 292, 294, 295, 296, 301], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 67, 70, 72, 73, 74, 132, 180, 181, 182, 188, 207, 215, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 285, 286, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301], "read": [0, 7, 17, 23, 37, 40, 55, 56, 57, 63, 65, 67, 70, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 106, 110, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 129, 130, 132, 166, 179, 180, 181, 182, 184, 189, 192, 193, 195, 197, 198, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 248, 261, 265, 274, 285, 289, 290, 291, 292, 294, 295, 296, 297, 301], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 125, 129, 133, 150, 156, 161, 163, 179, 183, 184, 185, 186, 192, 197, 202, 208, 215, 216, 229, 234, 242, 260, 284, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 301], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 286, 289, 290, 291, 295, 296, 300, 301], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 287, 289, 294, 297, 301], "beyond": 0, "api": [0, 3, 5, 111, 131, 286, 287, 295, 296, 300, 301], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 67, 68, 70, 71, 72, 73, 74, 93, 94, 101, 106, 112, 134, 154, 179, 184, 185, 189, 190, 191, 192, 193, 285, 286, 290, 291, 292, 294, 295, 296, 297, 298, 301], "paper": [0, 111, 129, 131, 167, 176, 212, 274, 289, 291, 295], "ppo": [0, 4, 8, 189, 193, 204, 214, 216, 283, 285, 289, 290, 293, 299], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 79, 80, 93, 96, 105, 106, 108, 113, 115, 123, 127, 132, 154, 277, 285, 290, 291, 293, 299, 300, 301], "your": [0, 2, 3, 7, 8, 10, 18, 32, 67, 70, 72, 73, 74, 132, 281, 284, 285, 286, 290, 291, 292, 293, 295, 298, 299, 300], "introduct": [0, 286, 293, 295, 299, 301], "multi": [0, 7, 9, 28, 29, 32, 67, 70, 72, 73, 74, 154, 155, 156, 160, 227, 229, 230, 231, 232, 283, 289, 290, 291, 292, 293, 296, 299, 300], "agent": [0, 9, 28, 29, 122, 159, 160, 162, 167, 176, 227, 283, 293, 296, 299], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 154, 157, 158, 192, 215, 247, 269, 270, 271, 274, 277, 279, 280, 281, 283, 285, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 65, 67, 68, 70, 71, 72, 73, 74, 77, 84, 88, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 111, 112, 113, 115, 122, 123, 125, 126, 127, 129, 131, 132, 134, 139, 140, 141, 142, 143, 144, 145, 150, 151, 153, 154, 156, 157, 158, 160, 162, 163, 167, 168, 174, 175, 176, 177, 179, 184, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 242, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 275, 277, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 299, 301], "pretrain": [0, 293, 299], "recurr": [0, 154, 170, 290, 293, 298, 299], "dqn": [0, 150, 184, 185, 202, 203, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 227, 272, 283, 285, 293, 299], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 67, 70, 72, 73, 74, 97, 103, 111, 122, 127, 129, 131, 134, 144, 146, 154, 183, 186, 188, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 265, 267, 277, 283, 287, 290, 293, 297, 298, 299, 301], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 67, 70, 71, 72, 73, 74, 98, 106, 122, 139, 140, 150, 154, 160, 162, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 202, 203, 204, 205, 207, 213, 214, 216, 217, 218, 219, 221, 261, 267, 270, 271, 277, 279, 280, 285, 286, 287, 290, 293, 297, 298, 299, 300, 301], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 93, 98, 112, 115, 123, 203, 205, 206, 207, 213, 217, 219, 221, 262, 265, 275, 277, 283, 287, 293, 296, 297, 299], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 93, 96, 98, 111, 112, 115, 123, 126, 127, 129, 131, 192, 195, 203, 205, 206, 207, 213, 217, 219, 221, 262, 265, 275, 277, 283, 287, 293, 296, 297, 299, 301], "task": [0, 3, 9, 28, 29, 40, 45, 73, 74, 77, 111, 129, 131, 213, 289, 290, 291, 292, 293, 295, 296, 299, 300, 301], "specif": [0, 2, 5, 8, 41, 42, 70, 265, 283, 286, 287, 291, 292, 293, 295, 298, 299], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 97, 99, 108, 111, 126, 127, 129, 132, 158, 167, 176, 179, 180, 189, 192, 193, 194, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 269, 270, 271, 276, 277, 281, 283, 285, 287, 290, 291, 292, 293, 295, 296, 298, 299, 301], "ddpg": [0, 144, 145, 146, 147, 205, 212, 220, 283, 285, 290, 293, 299], "loss": [0, 3, 8, 36, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 260, 265, 272, 273, 274, 277, 286, 287, 293, 296, 298, 299, 300], "trainer": [0, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 289, 293, 299], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 85, 98, 103, 106, 111, 112, 113, 123, 126, 127, 129, 130, 132, 133, 134, 141, 142, 143, 150, 154, 156, 158, 159, 160, 162, 163, 177, 183, 184, 185, 186, 189, 190, 193, 195, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 227, 229, 230, 231, 232, 233, 235, 249, 250, 253, 258, 265, 267, 274, 277, 286, 289, 291, 293, 295, 296, 299, 301], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 105, 106, 108, 111, 113, 115, 122, 123, 125, 126, 127, 129, 131, 132, 138, 141, 142, 143, 150, 154, 155, 156, 158, 160, 163, 166, 167, 168, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 222, 223, 227, 229, 230, 231, 232, 235, 256, 257, 258, 259, 260, 262, 263, 264, 267, 274, 277, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301], "packag": [0, 6, 7, 10, 84, 283, 284, 301], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 67, 70, 72, 73, 74, 93, 94, 111, 131, 143, 154, 155, 156, 160, 191, 195, 204, 206, 207, 208, 214, 216, 217, 221, 229, 230, 231, 232, 238, 239, 240, 241, 243, 244, 245, 246, 274, 281, 283, 289, 290, 291, 292, 294, 295, 296, 297, 298], "node": [0, 2, 18, 19, 20, 21, 22, 274, 283], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 106, 108, 142, 148, 149, 150, 151, 153, 158, 159, 163, 166, 169, 170, 173, 174, 175, 183, 184, 185, 189, 193, 194, 202, 203, 204, 207, 208, 213, 214, 216, 217, 218, 219, 221, 283, 287, 290, 291, 295, 296, 300, 301], "helper": [0, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 289, 290, 292, 296], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 67, 70, 72, 73, 74, 93, 126, 127, 132, 187, 210, 274, 283, 289, 290, 291, 292, 294, 295, 298, 300, 301], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 67, 70, 71, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 170, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 203, 206, 207, 217, 219, 221, 227, 283, 296], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 84, 93, 94, 97, 98, 99, 100, 105, 106, 108, 111, 112, 113, 115, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 138, 141, 142, 144, 145, 146, 147, 150, 153, 154, 156, 157, 158, 160, 161, 163, 167, 168, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 221, 223, 227, 228, 229, 230, 231, 232, 247, 248, 256, 262, 265, 268, 269, 274, 275, 277, 278, 281, 283, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "human": [0, 283, 296], "feedback": [0, 283, 300], "rlhf": [0, 34, 40, 45, 54, 106, 283, 285], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 68, 70, 72, 73, 74, 97, 99, 107, 113, 126, 127, 132, 134, 142, 157, 158, 261, 269, 270, 271, 274, 277, 279, 280, 281, 283, 292], "gymlikeenv": [0, 283], "envmetadata": [0, 283], "vector": [0, 1, 8, 24, 27, 33, 98, 144, 146, 156, 229, 232, 242, 243, 244, 245, 246, 283, 289, 290, 292, 294, 295, 296, 297, 301], "record": [0, 32, 67, 70, 72, 73, 74, 106, 216, 247, 248, 249, 250, 251, 252, 253, 254, 255, 277, 283, 290, 291], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 67, 98, 123, 138, 179, 184, 185, 189, 190, 191, 192, 193, 194, 195, 283, 291, 292, 295, 296, 300, 301], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 67, 70, 71, 72, 73, 74, 84, 96, 98, 106, 111, 112, 122, 123, 126, 127, 129, 131, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 229, 230, 231, 232, 233, 265, 272, 273, 277, 283, 286, 287, 290, 291, 294, 295, 296, 297, 298], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 138, 141, 142, 149, 150, 154, 155, 157, 158, 167, 168, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 247, 256, 260, 261, 262, 264, 265, 274, 283, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 301], "actor": [0, 4, 15, 21, 106, 142, 144, 146, 150, 151, 158, 168, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 221, 222, 227, 274, 283, 286, 290, 291, 292, 295, 297, 300], "explor": [0, 1, 133, 162, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 202, 261, 270, 271, 277, 283, 291, 292, 295, 296], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 84, 92, 93, 94, 97, 98, 99, 107, 108, 111, 112, 115, 116, 118, 123, 124, 126, 127, 131, 132, 138, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 256, 258, 259, 260, 261, 262, 265, 274, 277, 283, 287, 290, 294, 295, 296, 298, 300, 301], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 67, 68, 71, 96, 106, 108, 113, 118, 119, 126, 148, 159, 166, 179, 189, 193, 197, 198, 217, 223, 229, 234, 242, 251, 265, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301], "hook": [0, 32, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 160, 163, 164, 165, 168, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 283], "planner": [0, 142, 158, 283], "sac": [0, 207, 217, 219, 283], "redq": [0, 217, 273, 274, 283], "iql": [0, 213, 283, 295], "cql": [0, 203, 283], "td3": [0, 221, 283], "a2c": [0, 202, 283], "dreamer": [0, 91, 151, 209, 210, 211, 283, 285], "checkpoint": [0, 283, 297], "builder": [0, 283, 290, 301], "logger": [0, 248, 250, 251, 252, 253, 254, 255, 259, 265, 277, 281, 283, 290], "_util": [0, 3, 11, 283], "implement_for": [0, 3, 283], "contribut": 0, "thing": [0, 3, 7, 8, 284, 291, 292, 295, 298, 301], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 65, 67, 70, 72, 73, 74, 98, 132, 148, 173, 284, 289, 296, 298], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 68, 70, 72, 73, 74, 88, 93, 96, 97, 98, 99, 106, 107, 108, 111, 112, 118, 122, 123, 126, 127, 129, 131, 132, 139, 140, 142, 156, 157, 158, 159, 161, 168, 174, 189, 192, 193, 195, 199, 204, 206, 208, 214, 216, 222, 227, 228, 229, 230, 231, 232, 247, 248, 262, 281, 284, 285, 287, 289, 290, 291, 292, 295, 296, 297, 298, 301], "debug": [0, 6, 8, 40, 284, 301], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 67, 70, 72, 73, 74, 94, 106, 111, 129, 132, 143, 156, 185, 191, 196, 204, 214, 216, 265, 284, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "habitat": [0, 3, 85, 284, 297], "lab": [0, 3, 77, 78, 284], "mujoco": [0, 6, 8, 284, 291, 292], "error": [0, 1, 3, 7, 10, 11, 29, 32, 67, 70, 72, 73, 74, 112, 134, 284, 289, 291, 295, 301], "solut": [0, 3, 6, 7, 9, 21, 284, 285, 287, 300], "resourc": [0, 1, 21, 284, 289, 291, 295], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 67, 70, 72, 73, 74, 182, 215, 219, 229, 232, 284, 285, 289, 291, 292, 295, 296, 297, 301], "issu": [0, 4, 5, 8, 112, 179, 184, 185, 189, 190, 191, 192, 193, 284, 300], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 67, 70, 72, 73, 74, 93, 98, 141, 159, 294, 295, 298, 300], "search": [0, 290], "page": [0, 7], "somewhat": [1, 286, 301], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 67, 70, 72, 73, 74, 127, 216, 262, 300, 301], "dataload": [1, 54, 62, 290, 291, 298], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 101, 115, 154, 166, 183, 186, 188, 285, 290, 298, 300, 301], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 103, 106, 107, 108, 111, 112, 113, 115, 122, 123, 124, 125, 126, 127, 129, 131, 132, 138, 141, 142, 143, 144, 145, 147, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 210, 213, 214, 216, 217, 218, 219, 220, 221, 227, 228, 229, 230, 231, 232, 235, 237, 238, 239, 243, 244, 246, 256, 261, 262, 263, 274, 277, 281, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 101, 106, 111, 126, 127, 131, 154, 155, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 262, 265, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 93, 108, 111, 131, 134, 188, 203, 205, 207, 217, 219, 221, 256, 262, 265, 267, 268, 269, 277, 287, 289, 292, 295, 296, 297, 298, 300, 301], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 67, 70, 72, 73, 74, 98, 108, 124, 141, 177, 195, 208, 210, 215, 235, 268, 287, 289, 290, 291, 295, 296, 301], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 92, 96, 102, 111, 123, 126, 127, 128, 129, 131, 141, 154, 192, 193, 202, 203, 205, 206, 207, 208, 209, 210, 213, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 285, 289, 292, 295, 296, 298, 301], "static": [1, 11, 40, 45, 132, 213, 296, 298], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 67, 68, 70, 72, 73, 74, 88, 89, 90, 94, 96, 97, 98, 99, 106, 108, 111, 115, 123, 126, 127, 129, 131, 132, 138, 143, 144, 145, 146, 150, 152, 154, 155, 156, 159, 160, 163, 177, 184, 185, 186, 188, 192, 196, 197, 202, 203, 204, 205, 207, 213, 214, 216, 217, 218, 219, 221, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 256, 285, 286, 289, 290, 291, 292, 294, 295, 296, 298, 299, 300, 301], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 67, 70, 72, 73, 74, 85, 122, 125, 134, 160, 187, 217, 286, 289, 291, 292, 295, 296, 297, 298, 301], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 67, 70, 72, 73, 74, 97, 98, 99, 113, 127, 139, 140, 154, 188, 204, 214, 216, 248, 262, 267, 279, 280, 281, 285, 289, 290, 291, 292, 295, 296, 298], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 93, 96, 111, 123, 125, 126, 127, 129, 131, 132, 134, 143, 154, 160, 162, 167, 176, 180, 182, 183, 185, 189, 192, 193, 196, 203, 213, 215, 219, 229, 230, 231, 232, 233, 274, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 67, 70, 71, 72, 73, 74, 93, 96, 102, 111, 118, 123, 126, 127, 128, 129, 131, 177, 192, 193, 194, 215, 287, 291, 301], "two": [1, 3, 4, 8, 10, 32, 62, 67, 70, 72, 73, 74, 108, 111, 131, 147, 154, 171, 193, 214, 224, 261, 265, 274, 286, 289, 290, 291, 292, 294, 295, 296, 298, 300, 301], "main": [1, 2, 3, 5, 20, 22, 68, 193, 265, 285, 286, 289, 290, 294, 301], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 141, 143, 154, 156, 160, 161, 177, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 202, 203, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 227, 229, 230, 231, 232, 233, 247, 258, 268, 274, 277, 278, 281, 289, 290, 291, 292, 295, 296, 298, 301], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 67, 70, 71, 72, 73, 74, 97, 99, 106, 108, 111, 118, 127, 129, 131, 132, 149, 154, 156, 159, 164, 168, 185, 190, 191, 193, 195, 196, 197, 215, 226, 229, 232, 247, 261, 262, 279, 280, 285, 289, 291, 294, 296, 297, 298, 300, 301], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 126, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 274, 278, 281, 285, 289, 290, 291, 295, 298], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 67, 70, 72, 73, 74, 100, 108, 119, 143, 156, 160, 172, 179, 184, 189, 190, 192, 194, 195, 197, 215, 226, 261, 264, 265, 274, 286, 287, 289, 291, 292, 295, 296], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 123, 154, 194, 195, 269, 281, 285, 287, 290, 291, 292, 295, 298, 299, 301], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 68, 70, 71, 72, 73, 74, 76, 87, 102, 105, 107, 108, 121, 122, 123, 124, 127, 141, 142, 151, 154, 155, 157, 158, 183, 186, 188, 189, 193, 202, 209, 216, 228, 229, 230, 231, 232, 235, 236, 237, 247, 256, 261, 265, 287, 289, 290, 292, 294, 296, 297, 298, 300], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 67, 70, 72, 73, 74, 111, 126, 129, 132, 195, 289, 296, 300], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 67, 70, 72, 73, 74, 112, 122, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 206, 215, 229, 230, 231, 232, 233, 247, 278, 289, 290, 292, 296, 298, 301], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 65, 67, 70, 71, 72, 73, 74, 88, 93, 98, 103, 107, 108, 117, 121, 124, 132, 142, 143, 148, 149, 151, 152, 153, 154, 156, 158, 160, 163, 164, 165, 167, 169, 170, 173, 174, 175, 176, 179, 183, 186, 188, 189, 192, 193, 197, 201, 203, 207, 209, 213, 214, 217, 219, 221, 256, 258, 261, 265, 267, 268, 269, 279, 280, 281, 285, 289, 290, 291, 292, 295, 296, 297, 301], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 154, 156, 161, 162, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 230, 231, 232, 262, 289, 291, 292, 295, 296, 298, 301], "deliv": [1, 16, 18, 19, 20, 289, 290, 300], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 67, 70, 72, 73, 74, 132, 154, 194, 195, 247, 256, 285, 290, 294, 296, 300], "user": [1, 2, 3, 5, 8, 21, 32, 52, 67, 70, 72, 73, 74, 122, 127, 155, 216, 278, 286, 287, 289, 290, 296, 300, 301], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 93, 96, 100, 102, 105, 107, 111, 118, 119, 121, 122, 123, 124, 126, 129, 130, 132, 134, 154, 178, 188, 247, 274, 289, 290, 291, 292, 294, 295, 300], "whenev": [1, 3, 32, 35, 38, 41, 42, 84, 105, 127, 215, 229, 230, 231, 232, 267, 285], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 67, 70, 72, 73, 74, 183, 186, 188, 289, 291, 295, 300, 301], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 99, 108, 113, 115, 117, 119, 121, 123, 126, 127, 132, 141, 142, 154, 158, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 274, 286, 289, 291, 292, 294, 295, 296, 297, 298, 300, 301], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 67, 70, 71, 72, 73, 74, 76, 87, 93, 94, 96, 100, 105, 108, 113, 119, 121, 122, 126, 127, 130, 132, 141, 142, 151, 154, 155, 156, 158, 164, 167, 169, 170, 176, 180, 192, 198, 202, 204, 214, 215, 216, 217, 218, 227, 228, 229, 230, 231, 232, 233, 235, 281, 285, 286, 289, 290, 291, 292, 295, 296, 301], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 141, 154, 161, 183, 184, 186, 190, 210, 290, 291, 292, 295, 296, 297, 298, 301], "predefin": [1, 290, 291, 298], "becaus": [1, 3, 4, 7, 40, 67, 70, 72, 73, 74, 106, 126, 147, 155, 160, 179, 184, 185, 189, 190, 191, 192, 193, 289, 290, 292, 294, 295, 296, 298, 301], "potenti": [1, 296, 298], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 67, 70, 72, 73, 74, 108, 127, 130, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 160, 163, 164, 165, 169, 170, 172, 174, 175, 177, 180, 183, 185, 186, 188, 189, 191, 193, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 269, 286, 289, 291, 292, 294, 295, 297, 298], "heavi": [1, 8, 298], "crucial": [1, 183, 186, 188, 213, 215, 289, 290, 291, 292, 295, 296, 301], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 106, 215, 216, 274, 285, 289, 290, 291, 295, 296], "hyperparamet": [1, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 289, 296, 298], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 66, 123, 278, 281, 289, 298], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 77, 78, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 277, 278, 279, 280, 281, 285, 286, 289, 292, 295, 296, 297, 300], "take": [1, 3, 8, 23, 40, 67, 70, 72, 73, 74, 121, 122, 124, 126, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 187, 188, 191, 196, 199, 201, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 256, 267, 285, 287, 289, 290, 291, 295, 296, 298, 301], "consider": [1, 3, 8, 290, 295, 298], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 71, 72, 73, 74, 97, 99, 122, 127, 143, 154, 156, 197, 203, 204, 205, 206, 207, 208, 214, 215, 216, 217, 219, 221, 227, 229, 232, 289, 290, 291, 295, 296, 301], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 67, 70, 71, 72, 73, 74, 93, 96, 102, 106, 108, 112, 113, 115, 118, 119, 121, 122, 126, 127, 132, 134, 141, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 189, 191, 192, 193, 196, 199, 207, 212, 214, 215, 216, 217, 220, 228, 229, 230, 231, 232, 233, 248, 260, 261, 262, 265, 277, 279, 280, 281, 285, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "occur": [1, 8, 14, 28, 29, 94, 108, 112, 179, 184, 185, 189, 190, 191, 192, 193, 210, 298, 301], "serial": [1, 3, 32, 67, 70, 72, 73, 74, 132], "optim": [1, 2, 8, 32, 67, 70, 72, 73, 74, 127, 142, 158, 161, 162, 203, 215, 216, 219, 260, 265, 277, 286, 287, 291, 292, 295, 296], "parallel": [1, 3, 8, 17, 134, 202, 278, 279, 280, 281, 290, 291, 295], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 93, 115, 277, 280, 283, 291, 292, 295, 298], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 279, 280, 281, 285, 286, 287, 289, 290, 291, 292, 295, 298, 301], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 68, 72, 73, 74, 132, 279, 280, 281, 289, 291, 300, 301], "multisyncdatacollector": [1, 18, 19, 20, 21, 280, 283, 291, 300], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 285, 287, 291, 298, 300], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 132, 188, 267, 285, 289, 295, 296], "aggreg": [1, 143, 144, 145, 195], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 141, 154, 156, 168, 185, 191, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 229, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 267, 285, 290, 292, 296, 297, 300, 301], "final": [1, 3, 4, 21, 34, 36, 39, 40, 154, 183, 186, 187, 188, 194, 229, 261, 285, 289, 290, 291, 295, 296, 301], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 279, 283, 289, 290, 291, 300], "sever": [1, 8, 30, 32, 45, 67, 70, 72, 73, 74, 94, 127, 216, 289, 291, 298, 301], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 59, 62, 67, 70, 71, 72, 73, 74, 88, 93, 102, 108, 112, 115, 123, 127, 128, 132, 148, 149, 154, 155, 159, 160, 161, 166, 167, 173, 177, 188, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 256, 259, 262, 263, 264, 265, 267, 279, 280, 281, 287, 290, 291, 292, 294, 295, 297, 300, 301], "gather": [1, 3, 18, 20, 21, 45, 54, 112, 228, 269, 284, 289, 290, 291, 292, 295, 296, 298, 301], "continu": [1, 9, 25, 46, 67, 138, 144, 145, 146, 147, 188, 195, 202, 203, 207, 213, 216, 217, 218, 219, 220, 221, 229, 234, 242, 285, 289, 291, 292, 295, 296, 298, 300, 301], "concomitantli": 1, "network": [1, 4, 8, 32, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 149, 151, 152, 156, 160, 162, 164, 165, 167, 169, 170, 171, 176, 180, 181, 182, 192, 196, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 227, 229, 230, 231, 232, 233, 276, 277, 285, 286, 287, 294, 296, 301], "impli": [1, 301], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 154, 162, 192, 202, 203, 204, 207, 210, 267, 276, 285, 287, 289, 290, 291, 292, 294, 296, 298, 300], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 67, 70, 72, 73, 74, 106, 108, 119, 127, 128, 132, 134, 156, 286, 287, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301], "slightli": [1, 285, 286, 292, 296, 297, 298, 301], "lag": [1, 13, 14, 16, 17, 289, 290, 291], "therefor": [1, 3, 7, 67, 115, 122, 216, 227, 301], "although": [1, 8, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 287, 289, 290, 298], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 88, 93, 106, 111, 118, 121, 124, 126, 128, 131, 141, 159, 183, 186, 188, 189, 192, 193, 201, 202, 203, 204, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 286, 287, 289, 290, 291, 294, 295, 296, 298, 301], "asynchron": [1, 9, 14, 21, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192, 202, 279, 290, 291], "off": [1, 2, 4, 153, 175, 184, 219, 261, 270, 285, 287, 289, 290, 291, 295, 297, 301], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 67, 70, 72, 73, 74, 97, 99, 102, 108, 122, 150, 154, 160, 161, 180, 182, 185, 190, 202, 208, 213, 216, 261, 285, 287, 289, 290, 291, 292, 295, 296, 297, 298, 301], "remot": [1, 18, 19, 20, 21, 73, 74, 301], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 67, 70, 71, 72, 73, 74, 89, 90, 93, 97, 99, 106, 113, 134, 142, 154, 158, 188, 202, 269, 285, 289, 291, 292, 297, 298, 300], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 119, 217, 229, 230, 231, 232, 233, 286, 289, 291], "synchronis": [1, 68, 295], "either": [1, 5, 22, 32, 40, 54, 67, 70, 72, 73, 74, 122, 198, 221, 252, 287, 289, 290, 292, 297, 298, 300, 301], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 289, 295, 300], "update_at_each_batch": [1, 13, 14, 17, 289], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 89, 90, 93, 94, 96, 98, 102, 105, 106, 107, 108, 111, 112, 113, 117, 121, 123, 125, 126, 127, 128, 129, 131, 132, 134, 138, 141, 142, 143, 144, 145, 146, 147, 152, 154, 156, 158, 159, 160, 161, 162, 174, 175, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 229, 230, 231, 232, 235, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 258, 259, 261, 262, 265, 281, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "second": [1, 8, 154, 185, 204, 214, 216, 219, 264, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 96, 97, 99, 106, 110, 111, 113, 115, 123, 125, 126, 127, 129, 131, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 154, 155, 156, 158, 160, 161, 162, 167, 168, 176, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 195, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 262, 267, 274, 275, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 67, 70, 72, 73, 74, 102, 106, 126, 149, 150, 163, 180, 181, 182, 184, 185, 187, 192, 198, 202, 204, 205, 206, 208, 214, 216, 218, 227, 228, 229, 230, 231, 232, 265, 274, 283, 287, 289, 290, 291, 292, 294, 295, 296, 301], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 67, 68, 70, 71, 72, 73, 74, 78, 93, 108, 123, 126, 132, 138, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 157, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 199, 206, 207, 215, 227, 229, 230, 231, 232, 248, 252, 261, 269, 270, 271, 274, 277, 279, 280, 285, 286, 287, 289, 291, 292, 296, 298, 301], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 96, 97, 99, 111, 113, 115, 123, 126, 127, 129, 131, 138, 141, 142, 154, 158, 161, 162, 167, 168, 176, 179, 180, 181, 182, 184, 185, 189, 190, 191, 192, 195, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 262, 274, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 52, 113, 147, 154, 156, 163, 177, 179, 183, 184, 186, 192, 197, 215, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 284, 286, 289, 290, 291, 295, 296, 298, 300, 301], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 64, 66, 67, 68, 70, 72, 73, 74, 88, 93, 97, 98, 99, 107, 108, 111, 120, 127, 128, 131, 132, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 160, 163, 164, 165, 166, 168, 169, 170, 172, 177, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 229, 230, 231, 232, 236, 237, 258, 260, 261, 265, 269, 274, 281, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 96, 106, 110, 111, 123, 126, 127, 129, 131, 192, 257, 289, 290, 291, 292, 295, 297, 301], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 73, 74, 94, 98, 118, 126, 132, 154, 155, 161, 162, 179, 184, 189, 190, 192, 193, 196, 204, 207, 214, 216, 217, 221, 235, 274, 281, 285, 287, 289, 290, 291, 295, 296, 298, 300], "infer": [1, 73, 74, 93, 122, 132, 154, 161, 289, 291, 298], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 67, 70, 71, 72, 73, 74, 77, 78, 107, 108, 127, 132, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 194, 195, 196, 199, 261, 279, 280, 281, 284, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300], "dispatch": [1, 18, 19, 20, 21, 177], "avail": [1, 3, 4, 6, 21, 62, 106, 150, 168, 189, 193, 215, 279, 280, 285, 289, 290, 291, 292, 295, 296, 298, 301], "speed": [1, 2, 4, 8, 27, 286, 289, 290, 291, 292, 295, 296, 298], "up": [1, 2, 3, 8, 9, 27, 40, 52, 216, 284, 285, 286, 289, 290, 291, 292, 295, 296, 298, 301], "avoid": [1, 32, 67, 70, 72, 73, 74, 84, 127, 132, 179, 192, 197, 204, 214, 216, 268, 291, 295], "oom": 1, "choic": [1, 2, 52, 163, 285, 286, 289, 290, 295], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 94, 97, 99, 102, 111, 113, 115, 120, 123, 125, 127, 128, 131, 132, 138, 141, 142, 143, 148, 150, 154, 155, 156, 158, 159, 160, 163, 166, 167, 168, 169, 170, 173, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 195, 197, 202, 203, 205, 206, 207, 213, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 248, 256, 262, 274, 285, 290, 291, 292, 294, 295, 296, 297, 300, 301], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 67, 68, 69, 70, 72, 73, 74, 97, 99, 113, 126, 128, 132, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 161, 163, 164, 165, 167, 169, 170, 172, 176, 177, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 204, 214, 215, 216, 229, 230, 231, 232, 233, 262, 279, 280, 281, 285, 289, 290, 291, 292, 294, 295, 296, 298, 301], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 88, 93, 102, 128, 132, 154, 202, 204, 205, 207, 213, 214, 215, 216, 217, 218, 219, 221, 229, 230, 231, 232, 285, 286, 290, 291, 295, 298], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 65, 67, 70, 72, 73, 74, 132, 142, 155, 158, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 274, 283, 287, 289, 291, 292, 295, 297, 298, 301], "while": [1, 3, 7, 8, 32, 67, 70, 72, 73, 74, 115, 127, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 213, 214, 216, 285, 289, 291, 292, 295, 296, 297, 298, 300], "wait": [1, 20, 21, 22, 292, 296], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 65, 67, 70, 72, 73, 74, 84, 93, 98, 108, 113, 115, 118, 119, 123, 127, 170, 194, 195, 196, 202, 203, 205, 206, 207, 213, 216, 219, 229, 236, 237, 285, 287, 289, 290, 291, 292, 294, 295, 296, 298, 301], "impact": [1, 97, 99, 290, 292, 295], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 67, 68, 70, 72, 73, 74, 93, 96, 111, 123, 126, 127, 129, 131, 132, 192, 281, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "manag": [1, 8, 225, 226, 229, 230, 231, 232, 261], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 67, 70, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 141, 142, 149, 154, 157, 158, 168, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 248, 259, 260, 261, 263, 264, 265, 269, 274, 286, 287, 289, 291, 292, 294, 295, 296, 298, 300, 301], "control": [1, 3, 5, 8, 16, 77, 78, 98, 141, 144, 145, 146, 147, 154, 157, 158, 170, 177, 188, 192, 193, 194, 202, 204, 214, 216, 220, 229, 234, 242, 285, 287, 289, 290, 291, 295, 296, 298], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 67, 70, 72, 73, 74, 93, 94, 103, 106, 107, 108, 111, 112, 121, 123, 124, 126, 127, 129, 134, 153, 154, 159, 175, 180, 181, 182, 189, 192, 193, 195, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 227, 229, 230, 231, 232, 256, 260, 274, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 289, 290, 295, 300], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 52, 53, 67, 70, 72, 73, 74, 93, 97, 99, 103, 122, 127, 154, 261, 265, 286, 289, 290, 291, 292, 295, 296, 298, 301], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 188, 289, 301], "usual": [1, 3, 4, 6, 7, 8, 52, 67, 70, 72, 73, 74, 162, 216, 229, 230, 231, 232, 233, 247, 274, 284, 285, 287, 289, 290, 291, 292, 295, 298, 301], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 67, 68, 70, 72, 73, 74, 93, 97, 98, 99, 103, 107, 108, 126, 127, 132, 143, 154, 156, 159, 160, 188, 196, 289, 290, 291, 294, 295, 297, 298, 301], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 65, 67, 69, 70, 72, 73, 74, 93, 97, 99, 115, 283, 287, 290, 291, 292, 295, 297], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 72, 73, 74, 77, 88, 93, 94, 98, 102, 106, 107, 108, 111, 112, 115, 117, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 172, 173, 174, 175, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 274, 277, 281, 287, 289, 290, 291, 292, 297, 298, 300, 301], "behaviour": [1, 3, 21, 70, 94, 97, 99, 108, 112, 122, 141, 153, 154, 175, 261, 285, 290, 292, 296, 298], "besid": 1, "those": [1, 5, 7, 26, 28, 73, 74, 97, 99, 108, 123, 154, 189, 193, 194, 195, 267, 279, 280, 285, 289, 290, 295, 296, 301], "choos": [1, 154, 216, 285, 286, 289, 290, 291, 295, 298], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 67, 70, 71, 72, 73, 74, 88, 106, 111, 129, 143, 154, 156, 185, 190, 191, 201, 202, 203, 204, 205, 207, 213, 214, 215, 216, 217, 218, 219, 221, 265, 274, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 298, 300, 301], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 268, 289, 291, 300], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 70, 93, 103, 183, 186, 188, 247, 248, 258, 261, 265, 268, 269, 289, 290, 291, 292, 295, 298, 300, 301], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 59, 62, 63, 65, 67, 70, 72, 73, 74, 88, 93, 96, 98, 102, 105, 106, 108, 110, 111, 118, 121, 123, 126, 127, 129, 131, 132, 134, 139, 140, 142, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 158, 160, 161, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 192, 193, 195, 196, 199, 204, 214, 216, 228, 229, 230, 231, 232, 247, 261, 287, 290, 291, 292, 295, 296, 298, 301], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 93, 115, 268, 289, 290, 291, 292, 295, 298, 300], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 67, 68, 70, 72, 73, 74, 111, 118, 121, 122, 123, 124, 131, 132, 150, 154, 160, 164, 167, 168, 176, 183, 184, 185, 191, 195, 235, 238, 239, 240, 241, 243, 244, 245, 246, 261, 262, 279, 280, 285, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 268, 289, 290], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 67, 70, 71, 72, 73, 74, 98, 107, 108, 123, 134, 154, 189, 192, 193, 203, 217, 261, 269, 285, 289, 290, 291, 292, 296, 297, 298, 300, 301], "rand_step": [1, 3, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 105, 123, 132, 296, 300, 301], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 289], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 289, 290, 291], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 67, 70, 72, 73, 74, 112, 126, 142, 154, 158, 188, 216, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 256, 283, 286, 289, 290, 291, 292, 296, 298, 300, 301], "pad": [1, 23, 37, 43, 52, 93, 143, 144, 145, 154, 155, 159, 262], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 65, 93, 94, 108, 112, 118, 125, 154, 156, 159, 162, 184, 189, 192, 193, 215, 285, 289, 290, 292, 295, 296, 298], "mask": [1, 4, 23, 112, 159, 262, 290, 292, 301], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 66, 67, 70, 72, 73, 74, 93, 96, 111, 123, 125, 126, 127, 129, 131, 157, 192, 201, 208, 265, 284, 290, 291, 294, 295, 296, 298, 301], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 70, 112, 159, 183, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 287, 292], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 67, 70, 72, 73, 74, 103, 112, 132, 150, 159, 168, 184, 185, 190, 191, 193, 224, 229, 262, 289, 291, 292, 295], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 112, 127, 143, 156, 159, 183, 186, 188, 214, 229, 230, 231, 232, 262, 287, 301], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 261, 283, 289, 290], "strategi": [1, 16, 285, 287, 289, 290, 295, 298], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 67, 70, 72, 73, 74, 111, 131, 285, 286, 289, 291, 295, 296, 298, 301], "tool": [1, 2, 3, 5, 292, 296, 298, 301], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 83, 84, 287, 289, 291, 292, 296], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 283], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 283], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 65, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 94, 96, 97, 98, 99, 106, 108, 111, 113, 115, 117, 122, 123, 125, 126, 127, 129, 131, 132, 138, 141, 142, 143, 148, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 200, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 235, 256, 263, 264, 274, 277, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "multiprocess": [1, 18, 19, 20, 68, 69, 132, 290, 291, 296, 301], "synchron": [1, 13, 19, 21, 72, 279, 280, 290, 291], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 97, 99, 122, 127, 132, 135, 139, 140, 148, 153, 154, 166, 173, 174, 175, 189, 193, 215, 261, 289, 290, 292, 295, 300, 301], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 183, 186, 188, 259, 263, 289, 290, 295], "dedic": [1, 3, 18, 19, 20, 21, 180, 181, 182, 285, 289, 294, 295], "folder": [1, 290], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 67, 70, 72, 73, 74, 112, 194, 195, 256, 265, 285, 289, 290, 291, 294, 300, 301], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 67, 68, 70, 71, 72, 73, 74, 93, 96, 97, 99, 101, 106, 108, 111, 118, 123, 124, 126, 127, 129, 131, 132, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 192, 193, 195, 196, 199, 210, 215, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 260, 265, 268, 279, 280, 281, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301], "variou": [1, 3, 13, 14, 16, 17, 154, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 227, 279, 280, 289, 290, 291, 295, 301], "machin": [1, 7, 18, 19, 20, 32, 53, 295], "One": [1, 2, 4, 8, 31, 33, 45, 93, 115, 129, 166, 183, 186, 192, 196, 220, 224, 252, 289, 290, 298, 301], "wonder": 1, "why": [1, 3, 296, 301], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 72, 74, 278, 283, 289, 290, 291, 294, 300, 301], "instead": [1, 4, 7, 8, 11, 27, 32, 67, 70, 72, 73, 74, 102, 123, 127, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 202, 203, 204, 206, 207, 208, 213, 214, 216, 217, 218, 219, 227, 229, 233, 281, 285, 296, 298, 301], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 67, 70, 72, 73, 74, 96, 97, 99, 111, 119, 122, 123, 125, 126, 127, 129, 131, 153, 156, 170, 174, 175, 192, 195, 201, 202, 203, 205, 206, 207, 213, 215, 216, 217, 218, 219, 221, 267, 279, 280, 281, 285, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301], "lower": [1, 2, 17, 21, 25, 132, 169, 170, 196, 291, 296], "io": [1, 72], "footprint": [1, 2, 298], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 63, 67, 70, 72, 73, 74, 93, 102, 111, 113, 127, 131, 132, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 161, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 190, 191, 192, 196, 199, 201, 207, 217, 218, 219, 221, 228, 233, 248, 265, 281, 285, 286, 289, 290, 291, 292, 295, 296, 298, 300, 301], "commun": [1, 2, 3, 284, 291, 301], "yet": [1, 215, 297], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 67, 69, 70, 71, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 138, 150, 168, 170, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 274, 285, 289, 290, 291, 292, 294, 295, 300], "plai": [1, 3, 93, 290, 291, 298, 301], "role": [1, 3, 290, 301], "opposit": 1, "direct": [1, 32, 67, 70, 72, 73, 74, 215, 290], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 141, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 184, 185, 186, 188, 190, 191, 196, 199, 289, 290, 291, 292, 296, 297, 298, 300, 301], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 72, 229, 230, 231, 232, 292, 295], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 65, 68, 73, 74, 132, 154, 160, 180, 181, 182, 202, 204, 205, 207, 213, 214, 216, 217, 218, 219, 221, 281, 285, 291, 292, 294, 295, 300, 301], "among": [1, 3, 295], "achiev": [1, 3, 4, 32, 67, 70, 72, 73, 74, 122, 262, 287, 289, 290, 291, 292, 295, 296, 301], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 111, 126, 131, 215, 286, 287, 289, 290, 291, 292, 298, 301], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 67, 261, 286, 289, 291, 295, 298, 301], "gpu": [1, 7, 8, 32, 67, 70, 72, 73, 74, 289, 291, 292, 295, 301], "nativ": [1, 7, 9, 67, 70, 72, 73, 74, 93, 292, 298], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 153, 174, 175, 201, 284, 289, 290, 291, 292, 295, 297, 301], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 108, 132, 142, 148, 151, 154, 155, 158, 173, 183, 189, 193, 215, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 285, 286, 289, 290, 291, 295, 296, 298, 300, 301], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 154, 179, 183, 184, 186, 188, 189, 190, 192, 193, 196, 202, 203, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 227, 229, 230, 231, 232, 233, 278, 289, 290, 291, 295, 298, 301], "build": [1, 3, 7, 23, 26, 32, 67, 70, 72, 73, 74, 132, 142, 154, 158, 187, 189, 193, 265, 272, 273, 275, 276, 285, 287, 291, 292, 295, 296, 297, 300, 301], "central": [2, 289, 290, 295, 298], "part": [2, 4, 8, 32, 40, 67, 70, 72, 73, 74, 108, 115, 118, 154, 197, 256, 281, 289, 291, 292, 296, 301], "algorithm": [2, 3, 8, 9, 13, 14, 71, 103, 202, 216, 217, 218, 219, 256, 270, 283, 286, 287, 289, 290, 291, 292, 295, 297, 298, 300], "implement": [2, 3, 9, 11, 16, 32, 63, 67, 70, 72, 73, 74, 96, 106, 113, 126, 132, 153, 173, 174, 175, 202, 203, 213, 215, 216, 219, 274, 285, 287, 289, 290, 291, 292, 296, 300], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 52, 62, 67, 68, 70, 72, 73, 74, 93, 106, 111, 113, 123, 129, 132, 142, 154, 155, 160, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "give": [2, 7, 41, 71, 93, 284, 286, 289, 290, 295, 296, 297, 300], "abil": [2, 215, 296, 298], "veri": [2, 3, 290, 296, 298, 300, 301], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 70, 71, 72, 73, 74, 88, 93, 112, 115, 135, 136, 139, 140, 142, 148, 153, 158, 159, 166, 169, 174, 175, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 202, 203, 204, 205, 206, 214, 216, 221, 256, 262, 265, 268, 285, 289, 290, 291, 292, 295, 297, 300, 301], "latenc": 2, "especi": [2, 3, 7, 8, 94], "larger": [2, 4, 213], "volum": 2, "lazymemmapstorag": [2, 93, 283, 289, 290, 292, 297, 298], "advis": [2, 301], "due": [2, 3, 5, 297, 298, 301], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 297, 298], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 67, 70, 72, 73, 74, 169, 170, 215, 233, 289, 290, 292, 297, 298, 300, 301], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 97, 99, 118, 120, 122, 128, 142, 192, 193, 215, 220, 285, 289, 291, 292], "file": [2, 6, 7, 8, 247, 287, 290, 298, 299], "locat": [2, 7, 45, 67, 70, 72, 73, 74, 108, 117, 153, 163, 174, 175, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 289, 290, 291, 295, 298], "improv": [2, 4, 103, 202, 286, 295, 298], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 283, 298], "were": [2, 7, 73, 74, 291, 298], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 132, 189, 193, 214, 215, 216, 289, 290, 292], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 72, 93, 111, 129, 144, 145, 146, 147, 150, 151, 152, 158, 159, 162, 164, 165, 167, 169, 170, 176, 185, 188, 202, 203, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 229, 234, 242, 274, 297, 300], "github": [2, 5, 6, 7, 10, 18, 19, 20, 129, 297, 300], "com": [2, 5, 6, 7, 10, 18, 19, 20, 297, 300], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 67, 70, 71, 72, 73, 74, 96, 106, 111, 113, 123, 126, 127, 129, 131, 132, 136, 140, 143, 156, 159, 160, 162, 167, 176, 183, 184, 186, 189, 192, 193, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 223, 227, 235, 274, 279, 285, 289, 290, 291, 295, 296, 298, 301], "1x": 2, "lazytensorstorag": [2, 41, 42, 115, 283, 291, 295, 298], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 88, 93, 96, 98, 106, 108, 111, 113, 115, 123, 125, 126, 127, 129, 131, 138, 142, 143, 144, 145, 150, 152, 154, 155, 156, 158, 159, 160, 163, 166, 167, 177, 179, 180, 181, 182, 184, 185, 189, 191, 192, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 213, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 235, 238, 239, 240, 241, 243, 244, 245, 246, 248, 264, 285, 287, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 153, 174, 175, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 290, 291, 296, 298, 301], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 65, 88, 93, 112, 143, 179, 183, 184, 192, 193, 197, 256, 289, 291, 298, 301], "pai": [2, 8, 289, 292], "attent": [2, 8, 289, 292], "alwai": [2, 3, 20, 26, 28, 32, 54, 67, 70, 72, 73, 74, 106, 107, 208, 215, 285, 286, 290, 291, 292, 295, 296, 298], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 123, 153, 167, 174, 175, 289, 292, 295, 296, 298, 300], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 93, 94, 102, 108, 112, 120, 125, 128, 132, 143, 154, 156, 159, 161, 162, 167, 171, 172, 173, 174, 177, 184, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 281, 285, 289, 290, 291, 292, 295, 296, 298], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 65, 67, 70, 71, 72, 73, 74, 98, 119, 125, 129, 132, 154, 162, 163, 185, 191, 193, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 262, 274, 279, 280, 285, 287, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301], "word": [2, 40, 52, 215, 289, 296, 301], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 67, 68, 70, 72, 73, 74, 93, 111, 118, 126, 127, 129, 132, 138, 141, 143, 144, 145, 146, 147, 152, 154, 156, 157, 160, 193, 206, 208, 217, 227, 248, 262, 269, 270, 271, 277, 279, 280, 285, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301], "1m": [2, 268, 289, 291, 292, 297], "multidimension": [2, 41, 58, 298], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 154, 161, 177, 194, 195, 202, 204, 208, 214, 216, 228, 265, 285, 287, 289, 290, 291, 292, 296, 298, 301], "desir": [2, 3, 32, 67, 70, 72, 73, 74, 96, 108, 111, 112, 123, 126, 127, 129, 131, 139, 140, 143, 156, 160, 179, 184, 185, 189, 190, 191, 192, 193, 285, 289, 295, 296], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 67, 70, 72, 73, 74, 80, 82, 87, 108, 111, 112, 115, 129, 134, 160, 161, 184, 193, 215, 216, 229, 230, 231, 232, 262, 271, 281, 285, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "do": [2, 3, 4, 7, 70, 107, 112, 132, 141, 160, 161, 181, 229, 287, 289, 290, 291, 292, 294, 295, 296, 298, 300, 301], "custom": [2, 3, 5, 32, 67, 70, 72, 73, 74, 129, 160, 196, 208, 216, 222, 281, 285, 289, 290, 291, 292, 295], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 67, 70, 72, 73, 74, 77, 98, 100, 113, 118, 119, 127, 129, 154, 190, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 233, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 274, 287, 289, 290, 291, 292, 295, 296, 301], "randomcroptensordict": [2, 289], "here": [2, 3, 4, 7, 8, 9, 10, 93, 285, 286, 289, 290, 291, 292, 295, 296, 298, 300, 301], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 67, 70, 72, 73, 74, 202, 204, 212, 214, 216, 265, 284, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 163, 177, 183, 186, 188, 193, 198, 229, 253, 254, 255, 281, 283, 291, 292, 295, 297, 301], "around": [2, 5, 7, 15, 17, 41, 42, 71, 193, 229, 289, 290, 295, 301], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 93, 134, 203, 213, 287, 297, 298, 300], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 67, 70, 72, 73, 74, 100, 118, 119, 141, 144, 145, 146, 147, 152, 162, 188, 192, 193, 194, 195, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 281, 287, 289, 294, 295, 298, 300], "replaybuff": [2, 41, 42, 66, 93, 112, 115, 206, 208, 227, 275, 277, 283, 291, 295, 297, 298, 300], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 112, 206, 208, 227, 283, 289, 291, 295, 298], "By": [2, 3, 33, 67, 70, 72, 73, 74, 177, 193, 215, 261, 281, 289, 297, 298, 301], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 67, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 132, 138, 150, 163, 179, 180, 181, 182, 184, 189, 190, 192, 193, 195, 196, 197, 198, 227, 261, 283, 285, 286, 289, 290, 291, 292, 297], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 102, 105, 108, 111, 112, 113, 115, 117, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 202, 203, 205, 206, 207, 210, 211, 213, 215, 216, 217, 218, 219, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 274, 285, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 67, 70, 72, 73, 74, 113, 123, 141, 156, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 222, 224, 227, 285, 287, 289, 291, 292, 295, 296, 298, 301], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 265, 284, 291, 292, 295, 301], "respons": [2, 3, 8, 265, 301], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 106, 180, 181, 182, 192, 213, 274, 283, 289, 296, 300], "repositori": [2, 7, 53], "latest": [2, 10, 72, 262, 291, 295, 296, 300], "wheel": [2, 291], "publish": 2, "pypi": [2, 300], "openml": [2, 53, 88], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 156, 177, 192, 194, 195, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 285, 287, 289, 290, 291, 292, 295, 296, 298, 301], "parent": [2, 3, 21, 26, 28, 44, 67, 94, 102, 103, 108, 111, 123, 126, 128, 129, 180, 215, 216, 233, 289, 296, 300, 301], "subclass": [2, 3, 67, 70, 72, 73, 74, 126, 134, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 192, 193, 194, 196, 199, 215, 216, 290, 292, 296, 298], "basic": [2, 71, 285, 291, 301], "properti": [2, 3, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 127, 148, 153, 161, 166, 173, 174, 175, 215, 296, 298], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 93, 94, 95, 96, 97, 100, 102, 104, 105, 106, 108, 109, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 141, 144, 145, 146, 147, 150, 154, 155, 164, 165, 168, 169, 179, 180, 181, 182, 184, 186, 188, 189, 190, 197, 198, 202, 203, 204, 205, 206, 207, 210, 213, 214, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 248, 274, 277, 285, 287, 290, 291, 292, 294, 295, 296, 298, 300, 301], "action": [2, 3, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 67, 70, 71, 72, 73, 74, 76, 87, 89, 90, 97, 98, 99, 103, 106, 107, 113, 115, 119, 127, 138, 141, 142, 144, 145, 146, 147, 149, 150, 151, 154, 156, 157, 158, 159, 167, 168, 170, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 196, 197, 202, 203, 205, 206, 207, 213, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 274, 277, 281, 285, 286, 287, 289, 290, 291, 294, 295, 297, 298, 300, 301], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 65, 67, 70, 72, 73, 74, 88, 90, 94, 97, 99, 106, 108, 113, 115, 123, 125, 132, 133, 134, 138, 141, 142, 148, 149, 154, 156, 158, 159, 160, 161, 163, 166, 167, 168, 173, 176, 179, 180, 181, 182, 184, 185, 189, 190, 191, 192, 195, 196, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 224, 227, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 256, 262, 265, 277, 285, 289, 290, 291, 292, 294, 295, 297, 298, 300, 301], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 96, 97, 98, 99, 106, 108, 111, 113, 115, 123, 125, 126, 127, 129, 131, 134, 138, 141, 142, 150, 154, 158, 161, 162, 167, 168, 176, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 195, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 235, 274, 285, 291, 292, 294, 295, 296, 297, 298, 300, 301], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 65, 67, 68, 70, 71, 72, 73, 74, 82, 83, 84, 93, 105, 106, 108, 111, 113, 115, 123, 131, 132, 138, 141, 142, 150, 154, 156, 158, 160, 163, 167, 168, 176, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 258, 261, 274, 277, 285, 286, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 67, 68, 70, 72, 73, 74, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 143, 148, 154, 156, 160, 173, 179, 189, 190, 192, 193, 196, 197, 203, 207, 214, 217, 219, 262, 267, 285, 289, 291, 294, 295, 296, 298, 300, 301], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 67, 70, 71, 72, 73, 74, 88, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 141, 143, 144, 145, 146, 147, 149, 154, 155, 156, 160, 161, 162, 168, 169, 170, 171, 172, 177, 179, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 259, 263, 268, 277, 285, 286, 287, 289, 290, 291, 292, 295, 296, 300, 301], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74, 88, 93, 96, 97, 99, 106, 108, 111, 113, 124, 126, 129, 131, 134, 143, 144, 145, 149, 150, 151, 154, 155, 156, 160, 163, 168, 177, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 248, 256, 285, 286, 289, 290, 291, 292, 294, 295, 296, 297, 300, 301], "send": [2, 3, 8, 300], "receiv": [2, 3, 32, 40, 67, 70, 72, 73, 74, 122, 126, 156, 235, 286, 289, 291, 294, 296], "spawn": [2, 3, 4, 18, 22, 72, 295], "check_env_spec": [2, 3, 283, 291, 295, 296], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 70, 72, 73, 74, 93, 96, 102, 106, 108, 111, 113, 114, 115, 123, 126, 127, 129, 131, 142, 155, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 192, 193, 194, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 233, 247, 278, 286, 287, 288, 290, 291, 292, 296, 298, 301], "saniti": [2, 3, 7, 134, 291], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 67, 70, 71, 72, 73, 74, 96, 98, 108, 111, 123, 126, 127, 129, 131, 141, 142, 150, 151, 158, 168, 172, 179, 184, 185, 188, 191, 192, 193, 194, 195, 197, 201, 205, 206, 228, 229, 230, 231, 232, 233, 235, 257, 261, 277, 285, 287, 289, 290, 291, 295, 296, 301], "techniqu": [2, 8, 290, 298], "commonli": [2, 301], "emploi": [2, 162], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 298], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 67, 70, 72, 73, 74, 93, 97, 99, 132, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 206, 208, 227, 285, 296, 300], "offer": [2, 3, 7, 285, 290, 296, 301], "facilit": [2, 3, 7, 67, 110, 111, 129, 131, 180, 181, 182, 285, 289, 292, 296], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 122, 189, 193, 289, 291, 295, 296, 301], "extern": [2, 3, 97, 99, 301], "consist": [2, 3, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 106, 143, 156, 289, 290, 291, 296, 297, 301], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192, 289, 290, 301], "manner": [2, 70, 111, 129, 285, 289, 290, 291, 294, 296, 298], "handl": [3, 21, 32, 67, 70, 72, 73, 74, 132, 154, 156, 265, 279, 280, 289, 290, 291, 295, 298], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 67, 70, 72, 73, 74, 93, 98, 108, 113, 122, 127, 128, 150, 154, 156, 158, 160, 168, 213, 216, 224, 229, 230, 231, 236, 237, 261, 265, 267, 279, 280, 285, 286, 287, 289, 290, 291, 294, 295, 296, 297, 298, 301], "dm": [3, 289, 301], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 66, 71, 72, 115, 123, 129, 130, 180, 187, 202, 203, 205, 206, 207, 209, 213, 216, 217, 218, 219, 221, 265, 274, 285, 286, 287, 289, 290, 292, 295, 296, 298, 301], "goal": [3, 4, 122, 289, 290, 291, 292, 295, 296], "abl": [3, 289, 291, 292, 294, 295, 296, 298, 300], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 134, 250, 251, 252, 253, 254, 255, 284, 290, 291, 295, 298], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 65, 67, 68, 289, 291, 295, 296, 301], "simul": [3, 5, 7, 8, 91, 142, 158, 285, 289, 291, 295], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 65, 67, 70, 72, 73, 74, 111, 129, 134, 144, 154, 172, 193, 194, 195, 256, 268, 285, 287, 289, 290, 291, 292, 295, 296, 298, 300, 301], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 67, 70, 72, 73, 74, 123, 134, 159, 161, 162, 179, 184, 185, 188, 189, 190, 191, 192, 193, 225, 226, 287, 289, 290, 291, 292, 295, 296, 298, 300, 301], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 67, 70, 72, 73, 74, 179, 184, 185, 189, 190, 191, 192, 193, 215, 229, 230, 231, 232, 233, 286, 289, 290, 296, 301], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 105, 106, 108, 113, 115, 123, 132, 154, 274, 277, 289, 290, 291, 292, 294, 295, 297, 298, 300, 301], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 67, 70, 71, 72, 73, 74, 96, 98, 106, 111, 123, 126, 127, 129, 131, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 156, 158, 160, 163, 167, 168, 176, 179, 180, 181, 182, 184, 186, 188, 189, 190, 192, 193, 194, 195, 197, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 274, 277, 285, 286, 289, 290, 291, 292, 294, 295, 296, 297, 300], "typic": [3, 4, 8, 32, 67, 70, 72, 73, 74, 122, 203, 215, 216, 219, 285, 286, 287, 291, 295, 296], "organis": [3, 290, 296], "arbitrari": [3, 33, 73, 74, 285, 289, 290, 296], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 65, 67, 70, 72, 73, 74, 229, 230, 231, 232, 233, 287, 290, 291, 295, 296, 298, 300], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 67, 97, 99, 188, 229, 230, 231, 232, 233, 286, 289, 291, 292, 295, 296, 297, 298], "attribut": [3, 4, 32, 45, 67, 70, 72, 73, 74, 111, 121, 129, 154, 193, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 289, 292, 296], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 65, 67, 69, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 93, 97, 99, 113, 115, 123, 141, 142, 150, 154, 158, 167, 168, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 195, 196, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 256, 262, 274, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 67, 70, 72, 73, 74, 93, 112, 154, 176, 180, 181, 182, 198, 285, 290, 291, 292, 295], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 67, 70, 71, 72, 73, 74, 88, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 111, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 134, 154, 160, 185, 188, 192, 195, 202, 203, 204, 205, 206, 207, 213, 214, 215, 216, 217, 218, 219, 221, 227, 269, 284, 285, 286, 287, 289, 291, 292, 295, 296, 298, 301], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 67, 70, 71, 72, 73, 74], "actual": [3, 4, 7, 17, 67, 70, 72, 73, 74, 122, 268, 286, 289, 291, 295, 296], "just": [3, 4, 160, 256, 285, 287, 289, 290, 291, 292, 295, 296, 298, 300, 301], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 67, 70, 72, 73, 74, 94, 108, 141, 142, 158, 189, 193, 196, 202, 203, 204, 206, 214, 216, 217, 219, 221, 227, 229, 230, 231, 232, 274, 281, 287, 290, 291, 296, 301], "care": [3, 8, 67, 70, 72, 73, 74, 126, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 289, 291, 295, 296, 298], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 67, 70, 72, 73, 74, 96, 111, 123, 125, 126, 127, 129, 131, 133, 143, 153, 156, 160, 161, 167, 175, 176, 180, 182, 192, 193, 262, 289, 290, 291, 292, 295, 296, 298, 301], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 143, 153, 156, 160, 175, 192, 262, 289, 290, 291, 292, 296], "parametr": [3, 162, 193, 203, 213, 219, 289, 291], "hardwar": 3, "observation_spec": [3, 67, 71, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 108, 111, 114, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 142, 154, 158, 269, 277, 289, 291, 294, 295, 296, 301], "compositespec": [3, 28, 49, 67, 69, 70, 71, 72, 73, 74, 97, 98, 99, 106, 113, 121, 122, 123, 126, 138, 142, 158, 179, 183, 186, 189, 195, 196, 283, 289, 291, 295, 296, 301], "pair": [3, 32, 34, 36, 39, 52, 67, 70, 72, 73, 74, 123, 180, 189, 193, 215, 229, 230, 231, 232, 233, 285, 286, 289, 290, 291, 294, 296, 301], "state_spec": [3, 71, 127, 291, 296, 301], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 88, 111, 124, 127, 129, 131, 289, 296], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 67, 70, 71, 72, 73, 74, 76, 87, 93, 97, 99, 106, 115, 127, 150, 168, 170, 179, 184, 189, 190, 203, 206, 217, 219, 221, 277, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "reward_spec": [3, 67, 70, 71, 72, 73, 74, 92, 96, 97, 99, 116, 117, 118, 126, 127, 128, 142, 158, 291, 295, 296, 301], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 92, 96, 97, 99, 106, 113, 115, 116, 117, 118, 119, 122, 126, 127, 128, 130, 131, 132, 138, 141, 142, 158, 198, 202, 203, 205, 206, 207, 210, 213, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 258, 259, 261, 263, 281, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "done_spec": [3, 67, 70, 72, 73, 74, 97, 99, 126, 127, 291, 295, 296, 301], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 188, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 285, 295, 296, 297], "input_spec": [3, 67, 71, 96, 97, 98, 108, 113, 119, 121, 126, 127, 128, 142, 158, 295, 296], "_action_spec": [3, 67, 295], "_state_spec": 3, "lock": [3, 26, 28, 123, 132, 296], "modifi": [3, 7, 8, 26, 28, 32, 45, 67, 70, 72, 73, 74, 96, 102, 106, 111, 123, 126, 127, 129, 131, 188, 192, 268, 274, 289, 290, 291, 295, 296], "directli": [3, 4, 8, 67, 71, 115, 215, 281, 285, 291, 295, 296, 298], "output_spec": [3, 67, 96, 106, 113, 126, 127, 295, 296], "_observation_spec": 3, "_reward_spec": [3, 67, 295], "_done_spec": [3, 67, 295], "importantli": [3, 189, 193], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 67, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 86, 93, 115, 132, 142, 143, 144, 145, 150, 151, 152, 155, 156, 158, 160, 163, 164, 165, 166, 167, 168, 176, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 195, 197, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 247, 285, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301], "action_s": 3, "help": [3, 4, 32, 67, 70, 72, 73, 74, 284, 286, 289, 290, 291, 292, 295], "prealloc": [3, 296], "With": [3, 122, 287, 289, 290, 295, 298, 301], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 62, 67, 68, 70, 71, 72, 73, 74, 83, 94, 95, 97, 98, 99, 100, 102, 106, 107, 108, 111, 112, 118, 119, 123, 126, 127, 129, 131, 132, 141, 143, 154, 155, 156, 159, 160, 177, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 243, 244, 245, 246, 260, 262, 265, 267, 269, 274, 277, 281, 284, 289, 290, 291, 292, 294, 295, 296, 298, 300, 301], "instanti": [3, 21, 34, 36, 39, 73, 74, 126, 160, 289, 290, 295, 296, 298, 301], "0s": [3, 123, 292], "stateless": [3, 126, 289, 296, 301], "set_se": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 76, 87, 108, 113, 127, 296, 300, 301], "seed": [3, 13, 14, 16, 17, 21, 67, 70, 71, 72, 73, 74, 77, 89, 90, 97, 99, 127, 134, 265], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 67, 68, 70, 71, 72, 73, 74, 76, 87, 89, 90, 93, 97, 99, 105, 106, 113, 115, 122, 123, 132, 138, 141, 142, 154, 158, 170, 198, 202, 203, 205, 206, 207, 208, 213, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 259, 261, 263, 289, 290, 292, 294, 296, 297, 298, 300, 301], "determinist": [3, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 151, 164, 170, 179, 186, 192, 193, 196, 203, 285, 289, 290, 292, 296, 301], "preced": [3, 155, 292], "without": [3, 7, 9, 32, 40, 67, 70, 72, 73, 74, 97, 99, 125, 181, 182, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 228, 229, 230, 231, 232, 233, 277, 284, 285, 289, 290, 291, 295, 296, 298, 301], "risk": [3, 112], "overlap": [3, 41], "consecut": [3, 62, 154, 188, 292, 295, 301], "still": [3, 9, 121, 183, 214, 215, 289, 290, 292, 294, 296, 298, 301], "reproduc": [3, 93, 134, 289, 291, 295], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 25, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 65, 67, 70, 72, 73, 74, 98, 116, 121, 122, 124, 138, 173, 174, 175, 189, 196, 203, 207, 213, 215, 219, 262, 289, 290, 291, 292, 295, 296, 298, 300, 301], "max_step": [3, 13, 67, 70, 71, 72, 73, 74, 89, 90, 121, 295, 300, 301], "n": [3, 6, 7, 24, 27, 32, 33, 40, 67, 70, 72, 73, 74, 93, 98, 102, 128, 158, 188, 193, 202, 207, 215, 228, 262, 285, 287, 290, 291, 292, 295, 298, 301], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 71, 106, 154, 158, 167, 168, 176, 177, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 203, 205, 207, 209, 210, 211, 213, 215, 217, 219, 221, 227, 228, 229, 230, 231, 232, 261, 277, 285, 289, 291, 292, 294, 295, 296, 297], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 102, 111, 112, 115, 127, 129, 132, 134, 143, 156, 162, 192, 193, 194, 195, 202, 203, 205, 206, 207, 213, 215, 216, 217, 218, 219, 221, 229, 253, 265, 284, 289, 290, 291, 295, 296, 298, 300, 301], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 63, 67, 70, 72, 73, 74, 85, 88, 93, 129, 132, 154, 190, 202, 203, 205, 206, 207, 213, 215, 216, 217, 218, 219, 221, 224, 289, 292, 298, 300], "mark": [3, 16, 67, 70, 72, 73, 74, 154], "trail": [3, 132], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 67, 68, 70, 72, 73, 74, 84, 88, 94, 112, 123, 124, 132, 141, 151, 154, 155, 188, 204, 207, 210, 214, 215, 216, 217, 221, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 265, 285, 286, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "treat": 3, "figur": [3, 289, 291, 292, 295, 296, 301], "summar": [3, 296], "brief": [3, 291], "popul": [3, 38, 105, 123, 289, 291, 292, 296, 298], "entri": [3, 13, 14, 16, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 67, 70, 72, 73, 74, 93, 95, 97, 99, 102, 105, 108, 111, 113, 115, 121, 123, 131, 132, 141, 159, 190, 191, 203, 219, 229, 230, 231, 232, 285, 289, 291, 292, 295, 296, 297, 298], "deliveri": 3, "step_mdp": [3, 154, 283, 292, 296, 300, 301], "nasium": 3, "recent": [3, 7, 11, 301], "shift": [3, 32, 199, 229, 230, 231, 232, 291], "termin": [3, 7, 32, 40, 52, 194, 289, 290, 291, 296, 300], "trust": [3, 154], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 67, 70, 72, 73, 74, 121, 175, 235, 289, 291, 301], "refer": [3, 7, 8, 9, 21, 32, 40, 67, 70, 72, 73, 74, 127, 132, 142, 150, 151, 158, 159, 164, 165, 169, 170, 185, 202, 208, 209, 210, 211, 216, 229, 234, 242, 289, 291, 295], "stepcount": [3, 13, 67, 70, 72, 73, 74, 289, 290, 291, 292, 295, 300], "chosen": [3, 122, 123, 167, 168, 176, 191, 274, 285], "someth": [3, 32, 67, 70, 72, 73, 74, 284, 290, 291, 296, 301], "els": [3, 164, 285, 287, 289, 290, 291, 292, 295, 296, 297], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 67, 70, 72, 73, 74, 108, 115, 185, 257, 277, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "truncated_kei": [3, 121], "look": [3, 5, 7, 8, 32, 67, 70, 72, 73, 74, 111, 112, 129, 189, 193, 194, 195, 286, 291, 292, 295, 296, 297, 298, 300, 301], "assess": [3, 289], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 283], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 102], "reli": [3, 202, 286, 289, 291, 296, 301], "traj_id": [3, 13, 14, 16, 23, 115, 292, 298, 300], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 67, 70, 72, 73, 74, 123, 127, 141, 194, 195, 284, 289, 292], "context": [3, 5, 8, 32, 67, 68, 70, 72, 73, 74, 88, 123, 128, 160, 161, 225, 226, 229, 230, 231, 232, 234, 242, 261, 285, 286, 289, 290, 291, 295, 296, 297, 298], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 73, 74, 97, 99, 112, 156, 167, 193, 194, 195, 199, 229, 230, 231, 232, 285, 289, 290, 291, 294, 295, 296, 297, 298, 301], "inittrack": [3, 154, 289, 292], "our": [3, 7, 8, 18, 93, 285, 289, 290, 291, 292, 294, 295, 297, 298, 300], "tutori": [3, 289, 290, 292, 293, 294, 296, 297, 298, 299, 301], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 67, 68, 70, 72, 73, 74, 143, 156, 160, 286, 287, 289, 290, 291, 292, 295, 296, 298], "design": [3, 13, 14, 32, 33, 67, 70, 72, 73, 74, 93, 112, 127, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 289, 290, 291, 292, 294, 295, 296, 298, 301], "scratch": [3, 8, 290, 296], "better": [3, 8, 9, 154, 286, 291, 296], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 67, 70, 72, 73, 74, 93, 102, 106, 123, 128, 132, 143, 151, 152, 154, 156, 161, 162, 193, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 281, 285, 289, 290, 291, 292, 296, 298, 301], "intens": [3, 8], "gym3": 3, "envpool": [3, 72], "interfac": [3, 88, 156, 161, 285, 289, 291, 296, 298], "simultan": [3, 20, 73, 74, 296], "often": [3, 8, 212, 265, 289, 290, 296, 298, 301], "competit": [3, 295], "advantag": [3, 8, 152, 202, 204, 214, 216, 218, 229, 230, 231, 232, 233, 234, 236, 238, 240, 242, 243, 245, 286, 287, 289, 290, 291, 292, 295, 296, 301], "scale": [3, 4, 52, 93, 106, 108, 117, 122, 125, 151, 153, 163, 169, 170, 174, 175, 180, 181, 182, 189, 193, 195, 202, 203, 213, 216, 217, 218, 219, 263, 269, 274, 281, 285, 289, 290, 291, 292, 295, 300], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 67, 70, 71, 72, 73, 74, 93, 106, 122, 126, 127, 132, 143, 159, 160, 183, 186, 189, 190, 193, 196, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 265, 277, 287, 289, 290, 291, 292, 295, 296, 297, 298, 301], "own": [3, 13, 14, 17, 22, 32, 67, 70, 72, 73, 74, 290, 291, 295, 296], "As": [3, 4, 67, 70, 72, 73, 74, 115, 193, 229, 285, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301], "inherit": [3, 157, 215, 287, 291, 295], "serialenv": [3, 67, 70, 72, 73, 123, 283, 301], "enjoi": 3, "exact": 3, "Of": [3, 7, 284, 296, 301], "cours": [3, 4, 284, 291, 296, 301], "correspond": [3, 4, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 67, 70, 71, 72, 73, 74, 111, 123, 127, 131, 132, 154, 159, 188, 189, 193, 206, 207, 227, 229, 230, 231, 232, 233, 289, 290, 291, 295, 296, 297], "count": [3, 68, 121, 188, 261, 265, 268, 289, 290, 291, 292, 298, 301], "def": [3, 11, 22, 32, 67, 68, 70, 71, 72, 73, 74, 84, 97, 99, 142, 150, 158, 197, 203, 205, 207, 213, 215, 217, 219, 221, 287, 289, 290, 294, 295, 296, 300, 301], "make_env": [3, 90, 132, 270, 271, 289, 290, 301], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 67, 68, 70, 72, 73, 74, 85, 93, 96, 105, 106, 108, 113, 115, 123, 127, 132, 154, 274, 277, 283, 285, 289, 290, 291, 292, 297, 298, 300, 301], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 67, 68, 70, 72, 73, 74, 93, 105, 106, 108, 113, 115, 123, 154, 224, 238, 239, 240, 241, 243, 244, 245, 246, 285, 290, 292, 296, 298, 300, 301], "from_pixel": [3, 77, 78, 93, 274, 289, 290, 292, 297, 298, 300, 301], "9": [3, 7, 32, 35, 38, 41, 122, 132, 159, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 222, 227, 286, 289, 290, 291, 295, 296, 297, 298, 299], "81": [3, 290, 296, 297], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 92, 93, 94, 96, 98, 106, 107, 108, 111, 115, 122, 123, 125, 126, 127, 129, 131, 132, 134, 142, 143, 144, 145, 147, 151, 153, 154, 156, 158, 159, 160, 161, 162, 163, 166, 169, 170, 173, 174, 175, 177, 179, 183, 185, 186, 188, 191, 192, 195, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 232, 235, 236, 237, 256, 263, 277, 281, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 65, 67, 68, 70, 72, 73, 74, 103, 106, 108, 123, 127, 128, 132, 143, 150, 154, 156, 159, 160, 168, 179, 184, 185, 189, 190, 191, 192, 193, 196, 197, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 220, 221, 227, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 274, 289, 290, 291, 292, 294, 296, 298, 300], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 97, 98, 99, 105, 108, 113, 115, 123, 125, 132, 138, 141, 143, 150, 156, 159, 160, 163, 166, 168, 179, 180, 181, 182, 184, 186, 188, 190, 192, 195, 197, 215, 274, 277, 285, 287, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "simpli": [3, 6, 34, 36, 39, 45, 100, 119, 215, 285, 286, 289, 291, 295, 301], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 160, 161, 162, 167, 176, 196, 229, 230, 231, 232, 233, 235, 248, 285, 290, 297, 298], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 108, 125, 290, 298], "d": [3, 35, 53, 54, 58, 193, 300], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 65, 68, 73, 74, 94, 97, 98, 99, 106, 108, 112, 122, 123, 125, 132, 179, 186, 189, 190, 193, 229, 230, 231, 232, 233, 252, 285, 289, 290, 291, 292, 295, 296, 298, 300, 301], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 290, 295, 296], "_reset": [3, 67, 70, 71, 72, 73, 74, 93, 97, 99, 142, 158], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 93, 94, 96, 97, 99, 102, 105, 106, 107, 108, 111, 112, 113, 115, 117, 123, 125, 126, 127, 128, 129, 131, 132, 134, 141, 142, 143, 144, 150, 153, 154, 156, 158, 159, 160, 167, 168, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 227, 229, 230, 231, 232, 238, 239, 240, 241, 243, 244, 245, 246, 258, 259, 261, 262, 263, 265, 274, 281, 285, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 99, 113, 115, 123, 127, 141, 142, 150, 154, 158, 167, 168, 176, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 195, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 269, 274, 284, 285, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 87, 88, 89, 90, 93, 94, 97, 98, 99, 102, 106, 107, 108, 111, 113, 115, 117, 123, 125, 127, 128, 129, 131, 132, 134, 141, 142, 143, 144, 145, 153, 154, 156, 158, 160, 161, 162, 174, 175, 179, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 227, 229, 230, 231, 232, 235, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 258, 259, 261, 262, 263, 265, 274, 281, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "pixel": [3, 7, 26, 93, 95, 102, 104, 108, 111, 114, 125, 129, 131, 144, 164, 165, 248, 274, 285, 289, 290, 292, 297, 298, 300, 301], "500": [3, 289, 290, 296, 300, 301], "uint8": [3, 47, 125, 290, 297, 298, 300, 301], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 65, 67, 68, 70, 71, 72, 73, 74, 83, 89, 90, 92, 93, 94, 95, 96, 97, 99, 102, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 220, 221, 227, 228, 229, 230, 231, 232, 233, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 274, 277, 279, 280, 281, 285, 287, 289, 290, 291, 292, 295, 296, 298, 300, 301], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 99, 113, 115, 123, 132, 141, 142, 150, 154, 158, 167, 168, 176, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 195, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 274, 285, 291, 292, 294, 295, 296, 297, 298, 300, 301], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 67, 70, 72, 73, 74, 132, 154, 188, 189, 193, 289, 290, 294, 295, 301], "launch": [3, 18, 19, 20, 22], "quit": [3, 285, 289, 290, 291, 295, 301], "mani": [3, 4, 38, 67, 202, 204, 207, 214, 216, 217, 221, 285, 289, 290, 291, 295, 296, 298, 301], "start": [3, 4, 5, 13, 21, 45, 68, 141, 260, 289, 290, 295, 296, 298, 301], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 67, 70, 72, 73, 74, 123, 132, 194, 195, 291, 292, 295, 296, 301], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74, 115, 127, 183, 186, 188, 263, 287, 290, 291, 292, 296, 298, 301], "great": [3, 7, 8, 300], "speedup": [3, 8, 301], "precis": [3, 141, 289, 291], "anoth": [3, 8, 34, 36, 39, 67, 70, 72, 73, 74, 97, 99, 123, 126, 156, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 285, 286, 289, 291, 292, 294, 295, 296, 301], "misspecifi": 3, "caus": [3, 7, 8, 67, 70, 72, 73, 74, 112], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 67, 68, 70, 72, 73, 74, 93, 97, 99, 111, 115, 124, 131, 132, 141, 184, 188, 192, 220, 229, 230, 231, 232, 233, 235, 265, 267, 281, 284, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 101, 115, 127, 134, 183, 186, 188, 289, 291, 295, 298], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 84, 93, 97, 99, 106, 113, 132, 134, 138, 160, 163, 177, 229, 230, 231, 232, 256, 264, 294, 295, 298, 301], "mismatch": [3, 290], "mostli": [3, 17, 286, 298, 301], "purpos": [3, 7, 93, 277, 289, 291, 292, 295, 297, 301], "want": [3, 6, 7, 8, 108, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 285, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301], "subprocess": [3, 68], "addit": [3, 4, 32, 52, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 183, 192, 201, 215, 229, 286, 289, 290, 295, 298], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 72, 298], "multithreadedenv": [3, 283], "underneath": 3, "higher": [3, 4, 196, 289, 290, 291, 298, 301], "restrict": [3, 290, 297, 298, 301], "flexibl": [3, 9, 72, 222, 286, 287, 298, 301], "cover": [3, 284, 291, 296, 300], "popular": [3, 285, 292, 295], "atari": [3, 4, 93, 301], "classic": [3, 71, 290], "benchmark_batched_env": 3, "py": [3, 84, 167, 176, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301], "pipelin": [3, 7, 285, 291], "seamlessli": [3, 296], "modif": [3, 5, 26, 28, 32, 67, 70, 72, 73, 74, 102, 215, 291, 296], "infrastructur": [3, 295], "view": [3, 8, 27, 32, 33, 67, 70, 72, 73, 74, 150, 156, 296, 298, 300, 301], "core": [3, 8, 274, 287, 292, 300], "decis": [3, 292, 295, 298], "act": [3, 4, 160, 203, 205, 213, 217, 219, 221, 292, 295], "world": [3, 5, 71, 198, 210, 295, 296, 301], "paradigm": [3, 17, 295], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 67, 70, 72, 73, 74, 98, 107, 116, 127, 134, 143, 154, 156, 160, 185, 189, 193, 202, 204, 205, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 229, 261, 265, 286, 289, 290, 292, 295, 296, 301], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 65, 67, 70, 71, 72, 73, 74, 122, 127, 132, 215, 268, 285, 287, 289, 290, 291, 292, 295, 296, 298, 301], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 73, 151, 160, 265, 279, 280, 289, 290, 291, 292, 295, 298, 300], "accommod": [3, 13, 14, 16, 17], "thank": [3, 289], "carrier": [3, 291, 292, 298], "particular": [3, 32, 45, 52, 67, 70, 72, 73, 74, 127, 286, 287, 290, 292, 294, 295, 298], "carri": [3, 21, 45, 67, 70, 72, 73, 74, 123, 215, 290, 292, 295, 296, 298], "thu": [3, 214, 295], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 285, 290, 291, 295], "hand": [3, 7, 21, 295, 296], "kept": [3, 13, 14, 16, 17, 62, 73, 74, 98, 126, 134, 141, 153, 174, 175], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 67, 70, 72, 73, 74, 123, 125, 127, 134, 154, 156, 160, 189, 192, 193, 195, 196, 201, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 229, 230, 231, 232, 256, 267, 279, 280, 281, 285, 287, 289, 290, 291, 292, 295, 296, 298, 301], "let": [3, 6, 7, 32, 43, 67, 70, 72, 73, 74, 93, 154, 160, 184, 261, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "understand": [3, 8, 289, 290, 295], "go": [3, 7, 112, 115, 235, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "vma": [3, 89, 90, 295], "robot": [3, 5, 7, 111, 129, 131, 295], "what": [3, 8, 35, 44, 67, 70, 72, 73, 74, 123, 141, 190, 284, 285, 286, 290, 291, 292, 295, 296, 297, 298, 300, 301], "vmasenv": [3, 283, 295], "balanc": [3, 289, 290, 301], "num_env": [3, 21, 89, 90, 295], "n_agent": [3, 89, 90, 160, 167, 176, 227, 295], "5": [3, 24, 26, 28, 35, 38, 41, 42, 68, 72, 87, 89, 90, 115, 142, 143, 150, 151, 153, 155, 156, 158, 160, 164, 168, 174, 175, 184, 190, 196, 214, 216, 218, 221, 285, 289, 290, 295, 296, 298, 299, 300, 301], "td": [3, 15, 26, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 94, 97, 98, 99, 105, 106, 108, 115, 122, 123, 125, 127, 132, 141, 142, 150, 154, 157, 158, 167, 168, 176, 179, 180, 181, 182, 184, 186, 188, 189, 190, 192, 195, 197, 227, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 256, 264, 274, 285, 286, 289, 292, 295, 296, 300, 301], "info": [3, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 89, 90, 129, 133, 295, 298], "ground_rew": 3, "pos_rew": [3, 295], "16": [3, 32, 67, 70, 72, 73, 74, 93, 289, 290, 291, 292, 296, 297, 298], "root": [3, 26, 28, 93, 141, 153, 174, 175, 292, 295, 296, 298, 301], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 102, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 290, 296], "vari": [3, 112, 295], "creation": [3, 73, 74, 289, 301], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 65, 67, 70, 72, 73, 74, 111, 115, 118, 127, 131, 163, 168, 185, 189, 191, 192, 193, 229, 230, 231, 232, 256, 268, 289, 290, 291, 292, 295, 296, 298, 300, 301], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 68, 115, 125, 132, 214, 221, 286, 287, 289, 291, 292, 295, 296, 298, 300], "append": [3, 8, 35, 38, 41, 42, 52, 53, 68, 115, 123, 154, 184, 190, 289, 290, 291, 292, 295, 296, 297, 298, 300], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 67, 206, 207, 227, 283, 291, 295, 301], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 67, 70, 72, 73, 74, 84, 132, 284, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "simpl": [3, 9, 32, 33, 67, 70, 72, 73, 74, 144, 193, 206, 215, 218, 229, 285, 286, 289, 290, 291, 295, 301], "composit": [3, 26, 28, 67, 70, 72, 73, 74, 291, 296], "prefix": [3, 23, 32, 45, 67, 70, 72, 73, 74, 127, 215, 247, 292, 301], "exactli": [3, 32, 67, 70, 72, 73, 74, 85, 127, 289, 292, 295], "action_kei": [3, 15, 67, 70, 72, 73, 74, 98, 141, 142, 157, 158, 183, 186, 188, 295], "reward_kei": [3, 67, 70, 72, 73, 74, 141, 142, 158, 259, 263, 295], "done_kei": [3, 67, 70, 72, 73, 74, 141, 295], "automat": [3, 5, 67, 70, 72, 73, 74, 97, 99, 108, 179, 189, 285, 289, 291, 295, 296, 298, 300], "right": [3, 6, 7, 40, 155, 290, 291, 295, 296, 301], "sure": [3, 4, 7, 53, 63, 115, 184, 281, 285, 289, 291, 292, 295, 296, 298, 300, 301], "set_kei": [3, 202, 203, 204, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 227, 233, 295], "awai": [3, 291, 295], "eas": [3, 295], "access": [3, 7, 8, 32, 35, 53, 67, 70, 72, 73, 74, 111, 129, 281, 284, 289, 295, 296, 298], "leaf": [3, 26, 28, 67, 70, 72, 73, 74, 193, 295], "abov": [3, 7, 32, 67, 70, 72, 73, 74, 153, 174, 175, 201, 286, 287, 289, 291, 295, 296, 301], "would": [3, 32, 40, 67, 70, 72, 73, 74, 154, 156, 287, 290, 291, 292, 296, 298, 301], "full": [3, 185, 256, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "raw": [3, 4, 40, 153, 174, 175, 290, 296], "logic": 3, "torchvis": [3, 111, 131, 300, 301], "transformedenv": [3, 13, 67, 68, 70, 72, 73, 74, 93, 96, 97, 99, 102, 105, 106, 107, 108, 113, 115, 123, 126, 132, 154, 274, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "primit": [3, 4, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221], "built": [3, 5, 7, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 222, 227, 275, 277, 278, 281, 289, 290, 291, 292, 298, 301], "base_env": [3, 97, 98, 99, 106, 123, 289, 290, 291, 297, 300, 301], "totensorimag": [3, 93, 290, 292, 298, 300, 301], "in_kei": [3, 13, 14, 16, 17, 21, 71, 92, 93, 94, 95, 97, 98, 99, 102, 104, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118, 122, 124, 125, 126, 127, 129, 131, 132, 142, 149, 154, 158, 167, 176, 177, 179, 180, 181, 182, 184, 189, 190, 192, 193, 195, 196, 197, 202, 203, 204, 205, 206, 207, 213, 214, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 247, 248, 274, 277, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "resiz": [3, 93, 290, 292, 298, 301], "64": [3, 93, 144, 145, 152, 154, 160, 167, 227, 289, 290, 291, 292, 294, 296, 297, 298, 300, 301], "now": [3, 7, 35, 93, 160, 289, 290, 291, 292, 294, 295, 297, 298, 301], "appar": [3, 258], "bring": [3, 291, 301], "signific": [3, 5, 8, 291, 301], "kind": [3, 38, 44, 141, 298], "consult": 3, "interest": [3, 189, 193, 285, 290, 291, 295, 296, 301], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 71, 92, 93, 94, 95, 102, 104, 106, 108, 109, 111, 113, 114, 115, 116, 118, 122, 124, 125, 126, 129, 131, 142, 149, 150, 154, 158, 167, 168, 176, 177, 179, 180, 181, 182, 185, 189, 190, 191, 192, 193, 195, 196, 197, 202, 203, 204, 207, 213, 214, 216, 217, 218, 219, 227, 229, 230, 231, 232, 261, 277, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "easi": [3, 5, 53, 183, 186, 188, 285, 286, 289, 290, 291, 295, 297, 298, 301], "graph": [3, 4, 8, 225, 226, 289, 296], "inv": [3, 98, 115, 296], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 106, 110, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 132, 174, 184, 229, 260, 287, 289, 290, 291, 296, 300, 301], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 67, 70, 72, 73, 74, 127, 179, 184, 192, 194, 195, 197, 202, 203, 205, 207, 213, 216, 217, 218, 219, 221, 290, 295], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 96, 98, 143, 195, 301], "taken": [3, 67, 70, 72, 73, 74, 159, 286, 289, 291, 292, 295, 296], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 93, 97, 99, 108, 115, 200, 213, 296], "in_keys_inv": [3, 97, 99, 108, 109, 113, 115, 126, 289, 294, 296, 301], "append_transform": [3, 35, 38, 41, 42, 52, 53, 111, 123, 129, 289, 292, 296, 300, 301], "doubletofloat": [3, 274, 289, 291, 294], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 65, 67, 70, 71, 72, 73, 74, 76, 87, 88, 89, 90, 97, 99, 108, 113, 115, 123, 125, 138, 141, 142, 150, 154, 158, 167, 168, 176, 179, 180, 181, 182, 184, 188, 189, 190, 191, 192, 195, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 274, 285, 291, 292, 294, 295, 296, 297, 298, 300, 301], "float64": [3, 32, 67, 70, 72, 73, 74, 89, 96, 97, 99, 111, 123, 126, 127, 129, 131, 192, 294, 301], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 97, 99, 127, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 287, 289, 291, 298], "manipul": [3, 4, 8, 111, 129, 301], "keep": [3, 4, 7, 8, 14, 42, 62, 108, 111, 131, 132, 141, 188, 258, 265, 289, 290, 291, 292, 295, 296, 298, 300, 301], "mind": [3, 295], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 98, 141, 285, 298], "unexpect": [3, 32, 67, 70, 72, 73, 74, 127, 301], "behviour": 3, "fortun": [3, 292], "eras": [3, 67, 70, 72, 73, 74], "ident": [3, 13, 14, 16, 32, 73, 74, 160, 229, 230, 231, 232, 279, 280, 290, 295], "alreadi": [3, 8, 11, 32, 45, 67, 70, 72, 73, 74, 123, 193, 229, 230, 231, 232, 289, 291, 295], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 67, 68, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 132, 192, 262, 267, 268, 290, 291, 295, 296, 298], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 65, 67, 70, 72, 73, 74, 96, 97, 99, 106, 113, 126, 127, 132, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 286, 289, 291, 292, 295, 296, 297, 298, 301], "happen": [3, 67, 70, 72, 73, 74, 183, 290, 297, 301], "catfram": [3, 290], "hold": [3, 225, 226, 296, 298], "notic": [3, 93, 291, 296], "parenthood": 3, "reason": [3, 4, 8, 32, 67, 70, 72, 73, 74, 111, 129, 154, 286, 289, 290, 291, 296, 298], "henc": [3, 35, 112, 285, 289, 291, 295, 296], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 296], "log": [3, 4, 8, 40, 148, 149, 150, 159, 166, 175, 184, 185, 189, 193, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 258, 259, 261, 265, 277, 285, 286, 287, 289, 290, 291, 295, 296, 300], "mission": 3, "irrespect": [3, 192, 193], "dmcontrol": [3, 289], "jumanji": [3, 86, 87], "natur": [3, 289, 292], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 62, 67, 70, 72, 73, 74, 102, 108, 112, 124, 143, 154, 155, 156, 159, 164, 171, 177, 183, 186, 193, 290, 291, 292, 295, 296, 297, 298, 300, 301], "special": [3, 285, 289, 292, 301], "statu": 3, "framework": [3, 4, 9, 22, 71, 300, 301], "Its": [3, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 132, 192, 233], "success": [3, 93, 126, 290, 296, 298, 300], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 67, 70, 72, 73, 74, 106, 126, 183, 186, 188, 289, 290, 291, 292, 294, 295, 296, 298, 301], "foundat": [3, 5, 291, 295], "inspir": [3, 296], "howev": [3, 5, 7, 32, 67, 70, 72, 73, 74, 93, 118, 121, 122, 127, 285, 289, 290, 291, 292, 298, 301], "gone": [3, 4, 5], "sometim": [3, 292, 301], "hard": [3, 7, 212, 290, 301], "adopt": [3, 5, 289, 301], "prefer": [3, 17, 20, 35, 38, 41, 42, 112, 119, 216, 262, 285, 291, 295, 298], "moreov": 3, "maintain": [3, 5, 9, 296], "gymnasium": [3, 5, 11, 81, 82, 83, 84, 290, 291, 296, 300], "both": [3, 7, 32, 67, 68, 70, 72, 73, 74, 93, 113, 127, 143, 154, 156, 160, 180, 181, 182, 185, 191, 202, 204, 205, 207, 213, 214, 215, 216, 217, 218, 219, 221, 261, 285, 289, 291, 295, 296, 297, 298, 301], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 290, 291, 292, 295, 296, 298, 301], "decor": [3, 8, 11, 84, 215, 229, 230, 231, 232], "set_gym_backend": [3, 83, 283], "relev": [3, 40, 229, 230, 231, 232, 233, 296], "gym_backend": [3, 84, 283], "env1": [3, 294], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 67, 70, 72, 73, 74, 84, 111, 131, 158, 265, 287, 290], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 84], "__init__": [3, 7, 71, 84, 97, 99, 142, 150, 158, 197, 203, 205, 207, 213, 217, 219, 221, 287, 296, 301], "env2": [3, 294], "_env": [3, 6, 301], "classic_control": 3, "pendulumenv": [3, 296], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 291], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 66, 67, 70, 72, 73, 74, 93, 94, 121, 123, 127, 143, 156, 159, 160, 188, 190, 191, 199, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 269, 281, 284, 287, 291, 292, 296, 298, 301], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 85, 112, 122, 123, 127, 135, 136, 141, 151, 155, 170, 188, 208, 251, 287, 289, 290, 291, 292, 295, 296, 300, 301], "tell": [3, 4, 7, 289, 292, 295], "mo_gymnasium": [3, 82, 83], "handi": 3, "side": [3, 4, 301], "v0": [3, 70, 79, 80, 81, 82, 86, 87, 96, 127, 132, 277], "26": [3, 290, 291, 292, 296, 297, 298, 299], "fun": [3, 11, 84, 291, 295], "reveal": 4, "bug": [4, 300], "curv": 4, "won": [4, 32, 67, 68, 70, 72, 73, 74, 111, 131, 265, 281, 290, 291], "exploit": 4, "video": [4, 9, 248, 261, 281, 295], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 67, 70, 72, 73, 74, 112, 190, 290, 291, 292, 295, 296], "cv": 4, "flip": 4, "imag": [4, 7, 77, 95, 111, 125, 131, 156, 289, 290, 295, 297, 301], "correspondingli": 4, "prescript": 4, "tune": [4, 106, 295, 297], "coeffici": [4, 40, 106, 295], "bonu": [4, 202, 204, 214, 216], "beta": [4, 35, 41, 58, 213, 214, 289, 290, 298, 300], "altern": [4, 27, 72, 159, 201, 215, 289, 291, 295], "reduc": [4, 6, 27, 122, 290, 291], "downstream": [4, 289], "formul": [4, 295], "ob": [4, 8, 26, 28, 97, 99, 108, 125, 138, 141, 160, 190, 197, 203, 205, 207, 213, 217, 219, 221, 229, 230, 231, 232, 290, 294, 296, 300, 301], "rate": [4, 132, 228, 290, 291, 295], "gradient": [4, 32, 67, 70, 72, 73, 74, 127, 153, 162, 174, 175, 202, 204, 205, 207, 213, 214, 215, 216, 217, 218, 219, 221, 228, 229, 230, 231, 232, 265, 289, 291, 295, 296], "norm": [4, 8, 265, 289, 290, 291, 295, 296], "easier": [4, 285, 289], "behavior": [4, 32, 67, 70, 72, 73, 74, 127, 213, 291, 295], "local": [4, 7, 10, 16, 21, 32, 67, 70, 72, 73, 74, 127, 160, 167, 176, 227, 253, 295], "optima": 4, "sens": [4, 296], "product": [4, 9, 279, 280], "sum": [4, 21, 31, 33, 70, 159, 176, 210, 228, 235, 286, 289, 290, 291, 292, 295, 296, 301], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 118, 132, 188, 253, 258, 290, 292, 295, 296, 298], "stat": [4, 108, 269, 281, 290, 291], "w": [4, 93, 95, 114, 125, 188, 248, 290, 292, 298], "r": [4, 32, 108, 193, 201, 228, 285, 290, 296, 301], "yield": [4, 16, 21, 32, 67, 70, 72, 73, 74, 215, 289], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 67, 70, 72, 73, 74, 127, 205, 206, 291, 295, 298], "futur": [4, 32, 67, 70, 72, 73, 74, 111, 127, 131, 156, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 284, 300], "past": [4, 290, 298], "becom": [4, 21, 295, 301], "spars": [4, 292], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 67, 70, 72, 73, 74, 118, 127, 161, 162, 188, 202, 204, 206, 208, 214, 216, 227, 290, 292, 298, 301], "intermedi": [4, 154, 185, 289, 297], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 289], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 67, 156, 291, 295], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 65, 67, 70, 72, 73, 74, 93, 94, 97, 98, 99, 108, 115, 138, 141, 142, 154, 155, 159, 160, 167, 176, 186, 188, 191, 199, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 235, 292, 300], "subtask": 4, "hierarch": [4, 300], "individu": [4, 18, 19, 20, 21, 32, 45, 67, 70, 72, 73, 74, 289, 295], "select": [4, 15, 35, 38, 41, 42, 52, 53, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 110, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 129, 130, 132, 142, 154, 184, 190, 264, 289, 298], "fall": 4, "section": [4, 290, 295], "explicit": [4, 11, 45, 155, 298], "mechan": [4, 32, 67, 70, 72, 73, 74, 127, 290, 296], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 67, 70, 72, 73, 74, 213, 291, 295], "addition": 4, "timestep": [4, 40, 115, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 295], "realli": 4, "larg": [4, 27, 97, 99, 129, 290, 291, 295, 298], "target": [4, 8, 21, 32, 67, 68, 70, 72, 73, 74, 122, 126, 192, 193, 202, 203, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 227, 228, 229, 230, 231, 232, 233, 268, 276, 277, 286, 287, 292, 296], "huge": [4, 160, 292], "std": [4, 108, 132, 163, 183, 289, 301], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 292, 293, 294, 297, 298, 299], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 67, 70, 72, 73, 74, 108, 111, 123, 126, 127, 129, 133, 142, 158, 161, 162, 183, 186, 188, 202, 203, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 221, 227, 274, 281, 290, 292, 296, 301], "estim": [4, 106, 180, 181, 182, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 221, 222, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 286, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "encount": [4, 73, 74, 284, 290, 296], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 289, 291, 295, 301], "bonus": 4, "denser": 4, "prior": [4, 170, 210, 295], "freshli": 4, "proper": [4, 6, 7, 229, 230, 231, 232, 290, 291, 295, 298], "doesn": [4, 11, 72, 97, 99], "drop": [4, 62, 141], "meant": [4, 71], "encourag": [4, 289, 290, 298], "measur": [4, 291], "novelti": 4, "revisit": 4, "previous": [4, 291, 301], "diminish": 4, "decreas": 4, "ideal": [4, 108, 296], "down": [4, 13, 14, 16, 17, 292], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 290, 291, 292, 295, 296, 300, 301], "distil": 4, "add": [4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 66, 67, 70, 72, 73, 74, 93, 106, 154, 161, 187, 202, 260, 291, 292, 295, 296, 298, 300], "nois": [4, 133, 162, 178, 188, 217, 221, 261, 281, 289], "exploratori": [4, 202, 204, 214, 216], "could": [4, 6, 290, 291, 295, 297, 301], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 65, 203, 205, 206, 207, 208, 213, 217, 219, 221, 227, 287, 289, 290, 298], "schedul": [4, 7, 40, 261, 291, 296], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 111, 131, 203, 205, 207, 217, 219, 221, 289, 290, 295, 298, 301], "divers": [4, 73, 74], "bootstrap": [4, 208, 230, 236, 237, 289, 292], "noisi": [4, 161, 162, 178, 285], "unstabl": [4, 153, 174, 175], "inher": 4, "stochast": [4, 106, 151, 162, 164, 170, 203, 207, 213, 217, 219, 285, 291, 295], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 154, 158, 180, 181, 182, 215, 217, 287, 290], "pomdp": [4, 298], "previou": [4, 10, 32, 40, 41, 123, 170, 291, 292, 296, 301], "loos": [4, 285, 290, 291], "nonexist": 4, "architectur": [4, 295], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 66, 92, 93, 94, 95, 97, 98, 99, 102, 104, 108, 109, 112, 113, 114, 115, 116, 117, 118, 122, 124, 125, 126, 132, 143, 148, 150, 156, 159, 160, 166, 168, 172, 194, 195, 247, 248, 260, 261, 262, 264, 265, 274, 285, 289, 291, 292, 294, 295, 301], "rather": [4, 113, 289, 290, 291, 295], "lstm": [4, 154, 155, 163], "explicitli": [4, 290, 292, 295, 298], "rel": [4, 123, 148, 173, 289, 290, 295, 298], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 67, 93, 290, 291, 298, 300, 301], "compens": 4, "descent": [4, 162], "1000": [4, 38, 67, 70, 72, 73, 74, 93, 132, 188, 189, 193, 212, 289, 290, 291, 292, 297, 298], "know": [4, 9, 35, 38, 41, 42, 183, 186, 217, 261, 289, 290, 291, 292, 295, 298], "minimum": [4, 25, 67, 116, 138, 151, 163, 173, 174, 175, 189, 196, 199, 201, 203, 207, 215, 219, 256, 289, 291, 295, 296, 300, 301], "manual": [4, 18, 20, 21, 289, 292, 298], "deviat": [4, 108, 132, 142, 151, 158, 161, 162, 183, 216, 221, 289, 295], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 67, 70, 71, 72, 73, 74, 97, 98, 99, 122, 127, 130, 132, 142, 154, 158, 183, 186, 188, 189, 190, 191, 192, 193, 202, 203, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 227, 229, 230, 231, 232, 233, 261, 265, 267, 270, 271, 276, 277, 287, 290, 291, 292, 295, 296, 298, 300, 301], "stabil": [4, 103], "stage": [4, 289, 296], "never": 4, "prevent": [4, 26, 28, 153, 174, 175, 214, 216, 263, 298], "solv": [4, 9, 10, 284, 289, 290, 291, 295, 296, 298], "entir": [4, 291, 296, 298], "submit": [4, 284, 300], "suffici": [4, 289], "recommend": [4, 7, 295], "system": [4, 5, 291, 295, 296], "adequ": [4, 134, 291, 295], "infeas": 4, "allevi": [4, 285], "prune": 4, "develop": [4, 7, 289, 300], "filter": [4, 45, 202, 203, 205, 207, 213, 216, 217, 219], "fire": [4, 32, 67, 70, 72, 73, 74], "certain": [4, 18, 20, 21, 32, 45, 67, 70, 72, 73, 74, 84, 103, 121, 127, 214, 285, 289, 290, 291, 295, 301], "illeg": 4, "move": [4, 21, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 132, 141, 156, 192, 263, 289, 290, 292, 300, 301], "chess": 4, "combin": [4, 126, 290, 298], "grasp": 4, "releas": [4, 7, 10, 32, 67, 70, 72, 73, 74, 127, 300], "top": [4, 142, 158], "p": [4, 68], "wherein": 4, "cumul": [4, 118, 122, 142, 235, 291], "probabl": [4, 8, 40, 148, 150, 154, 156, 159, 166, 175, 189, 193, 285, 290, 300], "q": [4, 9, 144, 145, 146, 147, 149, 150, 152, 167, 168, 176, 182, 185, 190, 191, 203, 205, 206, 207, 208, 212, 213, 217, 219, 221, 227, 274, 283, 289], "flow": [4, 289, 291, 295, 296, 298], "reparameter": [4, 148, 166], "soft": [4, 212, 219, 220], "critic": [4, 8, 180, 187, 202, 204, 205, 207, 213, 214, 216, 217, 218, 219, 221, 289, 291], "clip": [4, 40, 116, 204, 221, 265, 291, 295, 296], "oppos": [4, 45], "incorrect": 4, "thought": [4, 67], "bound": [4, 17, 21, 25, 26, 32, 67, 70, 72, 73, 74, 132, 169, 170, 179, 184, 185, 188, 189, 190, 191, 192, 193, 196, 221, 285, 289, 290, 291, 301], "region": 4, "squash": [4, 292, 300], "tanh": [4, 143, 153, 156, 160, 173, 174, 175, 196, 291, 295, 296, 297, 300], "correct": [4, 106, 122, 268, 291, 292], "prob": [4, 159, 166, 291, 295], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 98, 106, 111, 127, 131, 189, 192, 193, 212, 215, 216, 274, 289, 294, 296, 301], "real": [5, 193, 286, 292, 296], "histor": 5, "wa": [5, 7, 67, 70, 72, 73, 74, 127, 212, 220, 286, 290, 291, 294, 298, 300], "ceas": 5, "fork": 5, "farama": [5, 81, 82, 291, 296], "detail": [5, 6, 7, 32, 67, 70, 72, 73, 74, 125, 127, 150, 185, 202, 208, 216, 284, 290, 294, 298], "usag": [5, 7, 52, 67, 93, 154, 203, 213, 219, 222, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "known": [5, 7, 8, 236, 237, 289, 290], "bc": [5, 300], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 67, 70, 72, 73, 74, 93, 115, 132, 290, 298, 300], "face": [5, 8, 9, 301], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 67, 70, 72, 73, 74, 134, 179, 184, 185, 189, 190, 191, 192, 193, 291, 295], "13": [5, 10, 11, 289, 290, 291, 292, 296, 297, 298, 299], "construct": [5, 32, 35, 38, 41, 42, 67, 70, 72, 73, 74, 97, 99, 134, 154, 170, 193, 265, 285, 290, 291, 292, 296, 298, 301], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 67, 70, 72, 73, 74, 134, 154, 177, 180, 181, 182, 183, 186, 188, 190, 198, 227, 285, 289, 290, 291, 292, 295, 301], "best": [5, 9, 154, 295, 298, 300], "gymwrapp": [5, 70, 283, 291, 300], "feel": [5, 284, 300], "free": [5, 7, 97, 99, 202, 210, 216, 287, 291, 295, 300], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 98, 289, 290, 291, 292, 295, 298], "prepar": [6, 291], "conda": [6, 7, 284], "assum": [6, 26, 33, 40, 41, 42, 52, 70, 73, 74, 95, 102, 111, 112, 118, 123, 129, 131, 138, 154, 155, 177, 196, 206, 208, 219, 227, 238, 239, 240, 241, 243, 244, 245, 246, 248, 289, 291, 292, 294, 296], "7": [6, 10, 27, 33, 35, 38, 41, 142, 143, 155, 156, 158, 235, 289, 290, 295, 296, 298, 300], "cmake": 6, "14": [6, 11, 108, 289, 290, 291, 292, 295, 296, 298, 299], "activ": [6, 7, 9, 143, 151, 156, 160, 204, 214, 216, 285, 300], "sim": 6, "bullet": 6, "physic": [6, 7, 287, 289, 295, 296], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 284], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 292], "y": [6, 7, 88, 155, 177, 289, 291, 295], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 67, 70, 72, 73, 74, 120, 215, 295, 301], "command": [6, 7, 10, 291, 295, 296, 301], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 283], "_has_habitat": 6, "available_env": [6, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 301], "startswith": [6, 286, 289], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 78, 84, 281, 287, 289, 298], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 68, 215, 289], "env_nam": [6, 72, 75, 77, 79, 81, 86, 289, 291, 301], "llvmlite": 6, "config": [6, 7, 111, 131, 269, 270, 271, 274, 275, 278], "var": [6, 7, 32, 67, 70, 72, 73, 74, 127, 215], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 76, 143, 144, 145, 152, 156, 180, 181, 182, 189, 192, 195, 213, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300], "bind": 6, "deactiv": [6, 7, 184], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 67, 70, 72, 73, 74, 127, 215, 298], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 290], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 294, 296, 301], "joint": [7, 290], "dynam": [7, 213, 291, 296], "contact": [7, 37], "engin": [7, 296], "biomechan": 7, "graphic": 7, "anim": [7, 295], "area": 7, "demand": [7, 301], "fast": [7, 9, 76, 113, 217, 289, 290, 291], "accur": [7, 52, 290, 296, 298], "articul": 7, "acquir": [7, 291], "deepmind": [7, 8, 9, 77, 78, 291], "whomev": 7, "licenc": 7, "incorpor": [7, 183, 186, 188, 292, 296], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 66, 74, 107, 126, 248, 285, 286, 289, 290, 291, 295, 298, 301], "legaci": 7, "pro": [7, 284], "tip": [7, 284], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 301], "sudo": [7, 284], "enabl": [7, 8, 52, 154, 188, 261, 291, 295, 296, 298], "apt": [7, 295], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 65, 290, 292], "fact": [7, 8, 289, 291, 295, 296, 297, 298, 301], "workflow": [7, 180, 181, 182], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 67, 70, 72, 73, 74, 111, 129, 131, 292, 301], "binari": [7, 24, 27, 33, 92, 150, 168, 184, 185, 190, 191, 206, 207, 227], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 248, 253, 281], "earlier": [7, 289, 291, 292, 295, 298], "roboti": 7, "download": [7, 10, 111, 131, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301], "html": [7, 72], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 67, 70, 72, 73, 74, 111, 122, 131, 142, 167, 262, 289, 291, 295], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54, 297], "bin": [7, 150, 185, 285], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 147, 189, 193, 289, 291, 298], "nvidia": 7, "older": [7, 11], "hack": [7, 289], "line": [7, 32, 67, 70, 72, 73, 74, 290, 295], "adatp": 7, "script": [7, 134, 274, 277, 281, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "unnot": [7, 112], "until": [7, 21, 291, 292, 295], "complet": [7, 9, 62, 70, 93, 284, 286, 289, 291, 294], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 290, 298], "troubleshoot": 7, "gl": 7, "h": [7, 93, 95, 114, 125, 154, 158, 248, 290, 292, 298], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 65, 68, 71, 89, 90, 93, 122, 125, 142, 155, 158, 159, 177, 186, 188, 196, 203, 206, 207, 216, 217, 218, 221, 227, 229, 230, 231, 232, 235, 256, 287, 289, 290, 291, 292, 294, 295, 296, 298, 299, 300, 301], "fatal": 7, "No": 7, "directori": [7, 45, 55, 253, 287], "devel": 7, "ubuntu": 7, "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 290, 291, 296, 297, 298, 299], "disappear": [7, 290, 292, 294], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 87, 108, 143, 148, 155, 156, 160, 164, 173, 197, 274, 289, 290, 292, 295, 296, 298, 299, 300, 301], "glibcxx_3": 7, "29": [7, 290, 296], "compil": [7, 32, 67, 70, 72, 73, 74], "libosmesa": 7, "libgcc": 7, "Then": [7, 291, 294], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 67, 70, 72, 73, 74, 127, 301], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 290, 296, 297], "114": [7, 296, 298], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 296], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 134], "opengl": [7, 295], "global": [7, 32, 67, 70, 72, 73, 74, 167, 176, 189, 193, 227, 287, 289, 295], "cuda_visible_devic": 7, "id": [7, 23, 40, 188, 217, 251, 274], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 289, 296, 298], "displai": [7, 265, 287, 289, 290, 295, 296], "correctli": [7, 32, 67, 70, 72, 73, 74], "lgl": 7, "libegl": 7, "x11": [7, 295], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 70, 141, 183, 186, 188, 216, 265, 287, 289, 290, 294, 298], "sketch": [8, 287], "_": [8, 68, 94, 97, 98, 99, 106, 108, 113, 125, 132, 179, 192, 197, 201, 202, 203, 205, 207, 213, 216, 217, 219, 221, 229, 230, 231, 232, 289, 290, 291, 292, 295, 296, 298, 300], "n_training_step": 8, "datapoint": [8, 45, 298], "onlin": [8, 13, 17, 93, 202, 216, 256, 281, 291, 292, 295, 298], "n_data_per_train": 8, "no_grad": [8, 32, 67, 70, 72, 73, 74, 106, 229, 230, 231, 232, 291, 292, 295], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 262, 277, 289, 290, 291, 295, 298], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 66, 115, 262, 287, 289, 290, 291, 292, 295, 297, 298, 300], "loss_fn": [8, 292, 300], "backward": [8, 32, 67, 70, 72, 73, 74, 132, 202, 203, 205, 207, 213, 216, 217, 218, 219, 221, 289, 291, 292, 295, 296], "zero_grad": [8, 32, 67, 70, 72, 73, 74, 287, 289, 291, 292, 295, 296], "backpropag": [8, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 295, 296], "differenti": [8, 45, 106, 229, 230, 231, 232, 292, 295, 296], "denomin": 8, "artifact": 8, "numer": [8, 38, 132, 153, 174, 175, 179, 184, 185, 189, 190, 191, 192, 193, 263, 291, 298, 301], "misconcept": 8, "save": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 247, 265, 287, 295], "freed": 8, "appear": [8, 33, 296, 298], "compuat": 8, "twice": 8, "fix": [8, 123, 203, 219, 290, 296, 301], "retain_graph": 8, "discuss": [8, 9, 295], "inplac": [8, 32, 34, 36, 39, 67, 70, 72, 73, 74, 127, 289], "accumul": 8, "onto": [8, 33, 138, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 292, 296], "exclud": [8, 52, 93, 100, 141, 167, 295, 298], "forward": [8, 32, 67, 70, 72, 73, 74, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 129, 130, 132, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 163, 164, 165, 167, 169, 170, 172, 176, 177, 183, 185, 186, 188, 191, 192, 193, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 286, 296, 300], "submodul": [8, 32, 67, 70, 72, 73, 74, 83, 215], "param": [8, 32, 40, 67, 70, 71, 72, 73, 74, 96, 106, 113, 126, 148, 150, 159, 173, 189, 192, 195, 197, 215, 223, 226, 229, 230, 231, 232, 233, 289, 295, 296, 297, 300], "grad": [8, 32, 67, 70, 72, 73, 74, 289, 291], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 163, 167, 192], "strictli": [8, 32, 67, 70, 72, 73, 74, 127, 289, 291], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 93, 102, 112, 128, 209, 286, 291, 295, 296], "ask": [8, 289, 291, 292, 295, 297, 301], "much": [8, 35, 41, 58, 214, 216, 291, 295, 296, 298, 301], "render": [8, 261, 289, 290, 291], "upon": [8, 296], "factor": [8, 32, 115, 153, 162, 174, 175, 183, 186, 188, 203, 208, 209, 211, 220, 235, 289, 290, 295, 298, 301], "fit": [8, 11, 108, 286, 287, 289], "everi": [8, 17, 26, 28, 32, 33, 63, 67, 70, 72, 73, 74, 122, 132, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 265, 287, 289, 290, 291, 292, 295, 296], "bottlneck": 8, "affect": [8, 32, 67, 70, 72, 73, 74, 126, 127, 134, 229, 230, 231, 232], "brax": [8, 75, 76, 113, 301], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 67, 70, 72, 73, 74, 101, 127, 159, 205, 206, 256, 286, 287, 289, 291, 292, 295, 296, 298], "underli": [8, 215, 296], "tedeiou": 8, "priorit": [8, 35, 41, 58, 203, 205, 206, 207, 213, 217, 219, 221, 289, 290], "amount": [8, 188, 290, 298], "isn": [8, 34, 36, 39, 184, 192, 295], "contigu": [8, 67, 70, 72, 73, 74, 138, 291, 295, 296, 298, 300, 301], "costli": [8, 296], "concaten": [8, 21, 30, 31, 93, 94, 108, 126, 156, 195, 289, 290, 295, 296, 298, 301], "constitut": [8, 290, 295, 296], "plain": 8, "profil": 8, "fulli": [8, 32, 67, 70, 72, 73, 74, 290, 296, 298], "frequent": [8, 298], "program": [8, 213, 301], "functorch": [8, 10], "incl": 8, "suit": [8, 78, 291, 301], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 192, 195, 215, 295, 296, 300], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 72, 143, 156, 160, 215, 291, 296, 300], "lost": 8, "permut": [8, 62, 300, 301], "idea": [9, 217, 287, 292, 295], "introductori": 9, "intro": [9, 291, 292], "dai": [9, 300], "2022": [9, 10, 296, 300], "spin": [9, 301], "deep": [9, 93, 144, 145, 146, 147, 149, 188, 202, 212, 219, 220, 289], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 108, 132, 289, 290, 291, 292], "reddit": 9, "reagent": 9, "orient": [9, 301], "baselines3": 9, "tf": 9, "bandit": [9, 88], "tensorflow": [9, 159], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 67, 70, 72, 73, 74, 106, 194, 195, 216, 285, 291, 292, 295, 296, 297, 301], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 300], "grade": 9, "factori": [9, 43], "throughput": [9, 289], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 67, 98, 138, 150, 165, 168, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 206, 207, 221, 227, 285, 290, 291, 292, 295, 296, 300, 301], "mbrl": [9, 71, 285], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 296], "dist": [10, 159, 166], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 291, 292, 295], "notebook": [10, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301], "24": [10, 289, 290, 291, 296], "11": [10, 27, 33, 45, 55, 56, 65, 68, 125, 142, 158, 289, 290, 291, 295, 296, 298], "12": [10, 55, 56, 65, 289, 290, 291, 292, 296, 298, 299], "pip": [10, 53, 295, 300, 301], "pip3": [10, 291, 292, 295], "extra": [10, 32, 67, 70, 72, 73, 74, 93, 132, 141, 285, 291, 292, 298], "url": 10, "org": [10, 35, 58, 93, 111, 129, 144, 145, 146, 147, 150, 151, 152, 158, 159, 162, 164, 165, 167, 169, 170, 176, 185, 188, 202, 203, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 229, 234, 242, 297], "whl": 10, "u": [10, 53, 296], "There": [10, 154, 285, 287, 291, 292, 295, 296, 298, 301], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 215], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 58, 67, 70, 72, 73, 74, 92, 93, 94, 95, 97, 98, 99, 102, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 129, 131, 132, 141, 143, 144, 145, 146, 147, 148, 150, 152, 155, 156, 159, 160, 161, 162, 166, 167, 168, 173, 174, 175, 176, 192, 207, 212, 217, 220, 242, 259, 261, 262, 270, 271, 274, 275, 277, 278, 279, 280, 281], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 67, 69, 70, 72, 73, 74, 77, 83, 88, 92, 93, 94, 95, 97, 98, 99, 102, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 129, 131, 132, 135, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 167, 168, 176, 179, 184, 185, 189, 190, 191, 192, 193, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 224, 227, 228, 229, 230, 231, 232, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 274, 275, 281, 290, 291], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 67, 68, 70, 71, 72, 73, 74, 84, 201, 215, 270, 271, 279, 280, 281, 290], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 55, 56, 57, 63, 65, 98], "vs": [11, 154, 155, 300], "longer": [11, 290, 295, 298], "self": [11, 26, 28, 32, 34, 36, 39, 67, 70, 71, 72, 73, 74, 96, 97, 99, 111, 123, 126, 127, 129, 131, 142, 150, 158, 167, 176, 183, 186, 192, 197, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 287, 289, 290, 296, 300], "x": [11, 23, 26, 32, 38, 40, 106, 125, 143, 150, 152, 154, 155, 156, 158, 160, 177, 184, 190, 199, 201, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 265, 289, 291, 296, 298, 300], "23": [11, 289, 290, 292, 296, 297], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 67, 68, 70, 72, 73, 74, 84, 106, 123, 177, 184, 190, 209, 211, 229, 232, 240, 241, 245, 246, 277, 286, 289, 290, 295, 298, 300, 301], "import_modul": 11, "27": [11, 289, 290, 291, 295, 296, 298], "get_class_that_defined_method": 11, "f": [11, 70, 201, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 289, 290, 291, 292, 295, 296, 298, 301], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 67, 70, 72, 73, 74, 98, 108, 123, 127, 132, 153, 160, 174, 175, 190, 196, 203, 210, 215, 219, 261, 262, 287, 289, 290, 291, 292, 296, 301], "module_set": 11, "arg": [12, 14, 26, 28, 32, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 96, 111, 120, 126, 127, 128, 130, 131, 142, 143, 149, 154, 156, 157, 158, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 233, 255, 258, 262, 265, 281, 290], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 67, 69, 70, 72, 73, 74, 93, 94, 96, 97, 100, 101, 102, 105, 106, 107, 110, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 130, 132, 141, 142, 154, 157, 158, 183, 185, 186, 188, 191, 192, 193, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 265, 289, 296], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 68, 73, 74, 289, 300], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 77, 93, 94, 95, 98, 102, 103, 107, 108, 111, 112, 114, 120, 121, 124, 127, 128, 129, 131, 134, 138, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 176, 177, 183, 184, 185, 186, 188, 189, 191, 192, 193, 202, 203, 204, 207, 209, 210, 214, 215, 216, 217, 221, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 256, 257, 258, 261, 262, 265, 267, 274, 275, 279, 280, 281, 296], "200": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 89, 90, 115, 144, 145, 151, 169, 170, 289, 292, 296], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 93, 115, 265, 268, 277, 287, 289, 290, 291, 292, 295, 298, 300], "create_env_kwarg": [13, 14, 16, 17, 68, 72, 73, 74, 289], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 67, 68, 70, 72, 73, 74, 106, 123, 127, 132, 143, 144, 145, 146, 147, 152, 155, 156, 189, 193, 252, 253, 261, 270, 271, 274, 279, 280, 281, 289, 290, 291, 301], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 115, 290, 298], "interactiontyp": [13, 16, 18, 19, 20, 21, 136, 140, 189, 193, 261], "exploration_mod": [13, 16, 18, 19, 20, 283, 285], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 67, 70, 72, 73, 74, 96, 97, 99, 106, 108, 111, 115, 116, 117, 122, 123, 125, 126, 127, 129, 131, 132, 148, 151, 153, 156, 159, 161, 162, 169, 170, 173, 175, 183, 192, 196, 199, 200, 201, 202, 203, 207, 210, 211, 212, 213, 217, 219, 220, 221, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 263, 289, 290, 298, 301], "datacollector": [13, 14, 16, 17, 189, 193, 216, 291], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 179, 183, 184, 185, 188, 189, 190, 191, 192, 193, 195, 285, 300], "env_mak": [13, 14, 16, 21, 277, 301], "50": [13, 14, 16, 21, 37, 40, 289, 290, 291, 292, 295, 296, 297], "linear": [13, 14, 16, 17, 21, 32, 67, 70, 71, 72, 73, 74, 96, 106, 111, 123, 126, 127, 129, 131, 142, 143, 150, 156, 158, 160, 161, 162, 163, 168, 169, 170, 179, 180, 181, 182, 186, 187, 188, 189, 190, 192, 195, 197, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 229, 230, 231, 232, 277, 285, 290, 294, 297, 300], "2000": [13, 14, 16, 45, 291, 298], "enumer": [13, 14, 16, 21, 32, 38, 42, 67, 70, 72, 73, 74, 222, 286, 289, 290, 291, 292, 298, 300], "int64": [13, 14, 16, 24, 27, 30, 31, 33, 34, 36, 37, 40, 41, 43, 45, 54, 67, 70, 72, 73, 74, 88, 115, 150, 168, 184, 185, 188, 190, 191, 285, 291, 292, 296, 298, 300, 301], "step_count": [13, 14, 16, 67, 70, 72, 73, 74, 121, 291, 292, 300], "shutdown": [13, 14, 16, 17, 21, 289, 300], "del": [13, 14, 16, 289, 291, 294, 300, 301], "randompolici": [13, 14, 16, 18, 19, 20, 22, 93, 115, 283, 298], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 70, 204, 214, 216, 256, 258, 261, 265, 268, 269, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301], "lifespan": [13, 14, 16, 18, 19, 20, 290], "divis": [13, 14, 16, 18, 19, 20, 295], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 98, 292, 298], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 123, 127, 189, 193, 261, 279, 280, 281, 287, 290, 291, 296, 301], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 67, 70, 72, 73, 74, 291], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 290, 291, 295], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 126, 128, 160, 286, 287, 289, 290, 295, 298, 300], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 67, 70, 72, 73, 74, 98, 100, 119, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 159, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 229, 298, 301], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 285, 295, 296], "post": [13, 14, 16, 18, 19, 20, 21, 32, 67, 70, 72, 73, 74], "multistep": [13, 14, 16, 18, 19, 20, 21, 283, 290], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 108, 117, 153, 161, 169, 174, 175, 227, 285, 296, 298], "explorationtyp": [13, 14, 16, 20, 21, 215, 261, 289, 290, 291, 292, 300], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 216], "whole": [13, 14, 16, 26, 28, 32, 45, 67, 70, 72, 73, 74, 127, 256, 289, 291], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 267, 277, 287, 289, 300], "async": [13, 14, 18, 19, 20, 21, 289, 300], "ratio": [13, 14, 40, 289, 291], "finish": [13, 14, 21, 115], "rest": [13, 14, 285, 291, 292, 296, 300], "earli": [13, 14, 300], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 127, 132, 287, 289], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 67, 70, 72, 73, 74, 127, 132, 281, 287, 289, 290, 301], "ordereddict": [13, 14, 16, 17, 21, 32, 67, 70, 72, 73, 74, 127, 132, 290], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 132, 154, 201, 202, 204, 214, 216, 265, 285, 295], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 67, 70, 72, 73, 74, 127], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 67, 70, 72, 73, 74, 103, 108, 121, 143, 156, 160, 213, 219, 298], "increment": [13, 14, 16, 17, 67, 70, 72, 73, 74, 121, 214], "env_fn": [13, 14, 16, 17, 68, 279, 280], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 146, 147, 296], "out_se": [13, 14, 16, 17, 301], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 26, 32, 52, 55, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 96, 111, 120, 123, 126, 127, 128, 130, 131, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 156, 157, 158, 160, 166, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 223, 227, 228, 229, 230, 231, 232, 233, 248, 252, 253, 255, 258, 265, 270, 271, 274, 278, 279, 280, 286, 291, 295], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 67, 70, 72, 73, 74, 92, 93, 94, 95, 97, 98, 99, 102, 104, 105, 106, 108, 109, 112, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 132, 141, 144, 149, 150, 154, 155, 156, 160, 163, 167, 168, 185, 190, 191, 196, 202, 203, 205, 207, 209, 213, 215, 216, 217, 218, 219, 221, 229, 230, 231, 232, 259, 261, 263, 272, 273, 289], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 76, 87, 97, 99, 142, 158, 202, 203, 205, 206, 207, 213, 216, 217, 219, 221, 296, 300, 301], "describ": [15, 44, 94, 126, 173, 174, 251, 286, 289, 291, 295, 296, 301], "tensor_spec": [15, 207, 216, 218], "boundedtensorspec": [15, 22, 26, 67, 186, 188, 189, 196, 202, 203, 205, 213, 216, 217, 219, 221, 283, 291, 295, 296, 300, 301], "cube": 15, "envcreat": [16, 22, 277, 278, 281, 283, 289, 290, 300, 301], "interruptor": 16, "_interruptor": 16, "outsid": [16, 295], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 67, 70, 72, 73, 74, 291, 295, 300, 301], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 70, 72, 106, 202, 204, 214, 216, 289, 294, 296, 300], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 73, 74, 110, 289, 300], "regular": [17, 34, 36, 39, 168, 185, 190, 191, 192, 193, 208, 267, 283, 287, 289, 290, 298, 301], "mere": 17, "greater": [17, 154, 289, 290, 300], "signal": [17, 52, 121, 286, 289, 291, 295, 298], "sent": [17, 55, 56, 65, 132], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 73, 74, 112, 132, 142, 143, 144, 146, 149, 156, 158, 160, 179, 192, 197, 256, 262, 289, 291, 292, 296, 298, 301], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 265], "string": [18, 19, 20, 32, 37, 45, 54, 67, 70, 72, 73, 74, 84, 111, 131, 154, 189, 190, 201, 247, 264, 274, 286, 289, 291, 292], "respect": [18, 19, 20, 32, 67, 70, 72, 73, 74, 92, 96, 97, 99, 111, 112, 123, 126, 127, 129, 131, 170, 192, 197, 260, 291, 292, 295], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 67, 70, 72, 73, 74, 113, 127, 141, 154, 215, 286, 289, 290, 292, 298], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 284, 290, 291, 294, 298], "serv": [18, 20, 21, 85, 298, 301], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 67, 70, 72, 73, 74, 102], "seen": [18, 20, 21, 286, 289, 290, 292, 295, 298], "turn": [18, 20, 21, 104, 128, 184, 261, 286, 289, 290, 292, 296, 297], "mp": [18, 19, 20, 68, 132], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 289], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 216, 279, 280], "homonym": [18, 19, 20, 296], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 289], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 189, 193], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 279, 280, 289, 290], "coordin": 21, "hood": [21, 296], "init": [21, 32, 67, 70, 72, 73, 74, 289, 290, 291], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 298], "similarli": [21, 32, 62, 67, 70, 72, 73, 74, 194, 195, 213, 301], "num_cpu": 21, "num_gpu": 21, "1024": [21, 290, 298], "equat": [21, 188, 201, 204, 220, 291, 296], "exce": [21, 291, 298], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 265, 289, 291, 292], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 89, 90, 143, 144, 145, 152, 156, 160, 164, 165, 167, 176, 227, 289, 290, 292, 296, 297, 298, 300, 301], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "wherea": [22, 98, 215, 287], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": 22, "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 68, 290], "__main__": [22, 68], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 58, 98, 124, 173, 174, 175, 188, 203, 204, 207, 217, 219, 289, 291, 292, 295], "durat": [23, 295], "meta": [23, 44, 52, 69, 287, 291, 295, 298], "aren": [23, 292], "discret": [24, 27, 30, 31, 33, 47, 67, 98, 166, 168, 207, 208, 285, 290, 291, 295, 301], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 132, 285, 289, 295], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 98, 165, 166, 169, 201, 285, 290, 291, 292, 296, 298], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 300], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 188, 196], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 196, 296], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 67, 70, 72, 73, 74, 96, 97, 99, 106, 111, 123, 126, 127, 129, 131, 132, 192, 274, 301], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 143, 156, 171, 172], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 129], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 281, 285], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 301], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 98, 154, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 285, 300, 301], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 179, 184, 185, 189, 190, 191, 192, 193, 291, 295, 296, 298], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 123, 138, 296, 298], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 93, 120, 143, 171, 172, 289, 296, 298], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 93, 94, 123, 128, 132, 155, 172, 177, 281, 290, 291, 296, 298], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 126, 127, 163, 173, 281], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 98, 150, 166, 168, 184, 185, 190, 191, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 292], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 150, 168, 184, 190, 206, 207, 227, 283, 285], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 67, 70, 72, 73, 74, 96, 97, 99, 111, 123, 126, 127, 129, 131, 132, 192, 201, 215, 289, 290, 291, 296, 298], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 123, 154, 292, 296, 297], "upper": 25, "unnam": 26, "effect": [26, 32, 67, 70, 72, 73, 74, 93, 118, 127, 265, 289, 298, 301], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 67, 70, 72, 73, 74, 143, 156, 289, 290, 291, 296], "composite_spec": 26, "observation_vector": [26, 94, 274, 289], "randn": [26, 34, 36, 39, 55, 56, 65, 108, 138, 150, 155, 159, 163, 166, 168, 179, 180, 181, 182, 184, 189, 190, 192, 195, 196, 197, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 229, 230, 231, 232, 264, 285, 300, 301], "td_project": 26, "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 67, 70, 72, 73, 74, 228, 295], "children": [26, 28, 32, 67, 70, 72, 73, 74], "keysview": [26, 28], "reflect": [26, 28, 141, 215, 268, 290, 291, 292, 295], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 67, 70, 72, 73, 74, 215], "succeed": [26, 28, 291, 295, 296], "selected_kei": [26, 28, 119, 289], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "categor": [27, 31, 33, 150, 166, 168, 184, 185, 190, 191, 206, 207, 227, 292], "action_valu": [27, 33, 149, 150, 168, 184, 185, 190, 191, 207, 215, 227, 285, 292], "arang": [27, 33, 150, 159, 184, 256, 285, 298], "argmax": [27, 150, 168, 185, 191], "chosen_action_valu": [27, 33, 167, 168, 176, 190, 191, 227, 285, 292], "outcom": [27, 33, 148, 173], "lazi": [28, 29, 49, 50, 67, 70, 72, 73, 74, 111, 129, 161, 194, 195, 289, 290, 294, 298, 301], "represent": [28, 29, 32, 67, 70, 72, 73, 74, 111, 129, 131, 289, 296, 297, 301], "drawn": [28, 29, 123, 189, 193, 291, 295], "lazystackedtensordict": [28, 67, 70, 71, 72, 73, 74, 294, 300], "heterogen": [28, 29, 134, 160, 289, 290], "semant": [28, 29, 285], "thrown": [29, 32, 67, 70, 72, 73, 74, 298], "nvec": [30, 31], "cardin": [30, 31, 150, 168, 184, 185, 191, 291], "ax": [30, 161, 162], "m": [30, 32, 67, 70, 72, 73, 74, 98, 193, 285, 290, 296], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 206, 207, 227, 283], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 283], "gamma": [32, 115, 158, 202, 203, 205, 206, 207, 208, 209, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 277, 286, 289, 290, 291, 295, 300], "sutton": [32, 286, 295], "1988": 32, "predict": [32, 40, 151, 157, 158, 198, 208, 210, 211, 228, 285, 289, 290], "tempor": [32, 154, 158, 230, 231, 236, 237], "44": [32, 290, 292, 296], "discount": [32, 68, 115, 203, 208, 209, 211, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 286, 290, 291, 295], "ahead": [32, 301], "add_modul": [32, 67, 70, 72, 73, 74], "child": [32, 67, 70, 72, 73, 74], "fn": [32, 37, 67, 70, 72, 73, 74, 163, 279, 280], "init_weight": [32, 67, 70, 72, 73, 74], "fill_": [32, 67, 70, 72, 73, 74, 290, 292, 301], "net": [32, 67, 70, 72, 73, 74, 155, 160, 202, 203, 207, 213, 216, 217, 218, 219, 274, 277, 290, 296, 297, 300], "in_featur": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 143, 144, 145, 146, 147, 155, 156, 160, 161, 162, 180, 192, 206, 300], "out_featur": [32, 67, 70, 71, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 142, 143, 144, 145, 146, 147, 151, 152, 154, 155, 156, 158, 160, 161, 162, 180, 184, 192, 206, 285, 289, 292, 300], "bia": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 143, 151, 154, 156, 160, 161, 162, 163, 186, 188, 192, 199, 200, 201, 215, 286, 289, 290, 291, 292, 295, 300], "requires_grad": [32, 67, 70, 72, 73, 74, 106], "bfloat16": [32, 67, 70, 72, 73, 74], "datatyp": [32, 67, 70, 72, 73, 74, 298], "member": [32, 67, 70, 72, 73, 74, 215], "xdoctest": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192, 215], "skip": [32, 67, 70, 72, 73, 74, 103, 127, 134, 189, 193, 215, 229, 230, 231, 232, 247, 248, 258, 261, 289, 290, 291, 296], "buf": [32, 67, 70, 72, 73, 74], "20l": [32, 67, 70, 72, 73, 74, 215], "1l": [32, 67, 70, 72, 73, 74, 215], "5l": [32, 67, 70, 72, 73, 74, 215], "__call__": [32, 37, 67, 70, 72, 73, 74, 193, 287], "associ": [32, 67, 70, 72, 73, 74, 169, 281, 289, 298], "doubl": [32, 46, 67, 70, 72, 73, 74, 96, 97, 99, 111, 123, 126, 127, 129, 131, 192, 206, 208, 212, 217, 220, 227, 289, 290, 291, 292, 301], "eval": [32, 67, 70, 72, 73, 74, 127, 132, 289, 290, 291], "evalu": [32, 67, 70, 72, 73, 74, 127, 148, 159, 166, 175, 217, 270, 271, 290, 291], "dropout": [32, 67, 70, 72, 73, 74, 127, 154, 156, 292], "batchnorm": [32, 67, 70, 72, 73, 74, 127], "disabl": [32, 67, 70, 72, 73, 74, 127, 153, 175, 289], "comparison": [32, 54, 67, 70, 72, 73, 74, 127, 215, 289, 290], "similar": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 130, 131, 132, 180, 182, 189, 192, 193, 286, 289, 290, 291, 292, 296, 301], "confus": [32, 67, 70, 72, 73, 74, 127], "extra_repr": [32, 67, 70, 72, 73, 74], "nontermin": 32, "original_reward": 32, "newli": 32, "OR": 32, "reshap": [32, 154, 156, 291, 295], "get_buff": [32, 67, 70, 72, 73, 74], "throw": [32, 67, 70, 72, 73, 74, 301], "docstr": [32, 67, 70, 72, 73, 74], "get_submodul": [32, 67, 70, 72, 73, 74], "explan": [32, 67, 70, 72, 73, 74], "qualifi": [32, 67, 70, 72, 73, 74], "referenc": [32, 67, 70, 72, 73, 74], "attributeerror": [32, 67, 70, 72, 73, 74], "invalid": [32, 67, 70, 72, 73, 74, 159], "resolv": [32, 67, 70, 72, 73, 74], "get_extra_st": [32, 67, 70, 72, 73, 74, 132], "set_extra_st": [32, 67, 70, 72, 73, 74, 132], "picklabl": [32, 67, 70, 72, 73, 74, 132], "ensur": [32, 35, 41, 58, 62, 67, 70, 72, 73, 74, 93, 111, 129, 132, 184, 285, 290, 291, 296, 298], "guarante": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 132, 300], "pickl": [32, 67, 70, 72, 73, 74, 132], "get_paramet": [32, 67, 70, 72, 73, 74], "sai": [32, 67, 70, 72, 73, 74, 297, 301], "net_b": [32, 67, 70, 72, 73, 74], "net_c": [32, 67, 70, 72, 73, 74], "conv": [32, 67, 70, 72, 73, 74, 143, 290], "conv2d": [32, 67, 70, 72, 73, 74, 143, 300], "kernel_s": [32, 67, 70, 72, 73, 74, 143, 144, 145, 164, 290, 300], "stride": [32, 67, 70, 72, 73, 74, 143, 144, 145, 152, 290, 300], "diagram": [32, 67, 70, 72, 73, 74], "show": [32, 67, 70, 72, 73, 74, 160, 285, 289, 291, 292, 295, 296, 298, 300], "itself": [32, 67, 70, 72, 73, 74, 83, 215, 291], "degre": [32, 67, 70, 72, 73, 74], "named_modul": [32, 67, 70, 72, 73, 74], "o": [32, 67, 70, 72, 73, 74], "transit": [32, 52, 67, 70, 72, 73, 74, 198, 289, 292, 296, 298], "half": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192, 289], "ipu": [32, 67, 70, 72, 73, 74], "strict": [32, 67, 70, 72, 73, 74, 127], "descend": [32, 67, 70, 72, 73, 74, 127], "persist": [32, 67, 70, 72, 73, 74, 127, 141], "enforc": [32, 62, 67, 70, 72, 73, 74, 127, 194, 296], "preserv": [32, 67, 70, 72, 73, 74, 127], "missing_kei": [32, 67, 70, 72, 73, 74, 127], "unexpected_kei": [32, 67, 70, 72, 73, 74, 127], "namedtupl": [32, 67, 70, 72, 73, 74, 127], "duplic": [32, 62, 67, 70, 72, 73, 74, 206, 208, 215, 227], "l": [32, 67, 70, 72, 73, 74, 228, 291, 296], "idx": [32, 67, 70, 72, 73, 74], "named_buff": [32, 67, 70, 72, 73, 74], "remove_dupl": [32, 67, 70, 72, 73, 74, 215], "prepend": [32, 67, 70, 72, 73, 74, 215], "running_var": [32, 67, 70, 72, 73, 74], "named_children": [32, 67, 70, 72, 73, 74], "conv4": [32, 67, 70, 72, 73, 74], "conv5": [32, 67, 70, 72, 73, 74], "memo": [32, 67, 70, 72, 73, 74], "named_paramet": [32, 67, 70, 72, 73, 74, 106, 215], "register_backward_hook": [32, 67, 70, 72, 73, 74], "removablehandl": [32, 67, 70, 72, 73, 74], "deprec": [32, 67, 70, 72, 73, 74, 127, 135, 139, 149, 202, 203, 204, 206, 207, 208, 213, 214, 216, 217, 218, 219, 227, 229, 230, 231, 232, 301], "favor": [32, 67, 70, 72, 73, 74, 291], "register_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_buff": [32, 67, 70, 72, 73, 74], "running_mean": [32, 67, 70, 72, 73, 74], "alongsid": [32, 67, 70, 72, 73, 74, 295], "num_featur": [32, 67, 70, 72, 73, 74], "register_forward_hook": [32, 67, 70, 72, 73, 74, 150, 168], "with_kwarg": [32, 67, 70, 72, 73, 74], "always_cal": [32, 67, 70, 72, 73, 74], "posit": [32, 35, 38, 41, 42, 52, 53, 67, 70, 72, 73, 74, 102, 103, 120, 121, 124, 127, 128, 163, 286, 291, 295, 296, 298], "signatur": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192, 215, 286, 289, 296], "register_module_forward_hook": [32, 67, 70, 72, 73, 74], "regardless": [32, 67, 70, 72, 73, 74, 204, 214, 216], "register_forward_pre_hook": [32, 67, 70, 72, 73, 74], "invok": [32, 67, 70, 72, 73, 74], "And": [32, 67, 70, 72, 73, 74], "forward_pr": [32, 67, 70, 72, 73, 74], "register_module_forward_pre_hook": [32, 67, 70, 72, 73, 74], "grad_input": [32, 67, 70, 72, 73, 74], "grad_output": [32, 67, 70, 72, 73, 74], "subsequ": [32, 67, 70, 72, 73, 74, 292], "technic": [32, 67, 70, 72, 73, 74, 290, 292], "caller": [32, 67, 70, 72, 73, 74], "register_module_full_backward_hook": [32, 67, 70, 72, 73, 74], "register_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "backward_pr": [32, 67, 70, 72, 73, 74], "register_module_full_backward_pre_hook": [32, 67, 70, 72, 73, 74], "register_load_state_dict_post_hook": [32, 67, 70, 72, 73, 74], "incompatible_kei": [32, 67, 70, 72, 73, 74], "clear": [32, 67, 70, 72, 73, 74, 257], "register_modul": [32, 67, 70, 72, 73, 74, 287], "alia": [32, 67, 70, 72, 73, 74], "register_paramet": [32, 67, 70, 72, 73, 74], "register_state_dict_pre_hook": [32, 67, 70, 72, 73, 74], "keep_var": [32, 67, 70, 72, 73, 74, 127], "made": [32, 55, 56, 57, 63, 65, 67, 70, 72, 73, 74, 188, 206, 215, 227, 289, 290, 292, 295, 297], "requires_grad_": [32, 67, 70, 72, 73, 74], "autograd": [32, 67, 70, 72, 73, 74, 127], "freez": [32, 67, 70, 72, 73, 74], "finetun": [32, 67, 70, 72, 73, 74], "gan": [32, 67, 70, 72, 73, 74], "share_memori": [32, 67, 68, 70, 72, 73, 74, 289], "share_memory_": [32, 67, 70, 72, 73, 74, 300], "destin": [32, 34, 36, 39, 67, 70, 72, 73, 74, 127, 129, 141], "averag": [32, 67, 70, 72, 73, 74, 127, 132, 188, 209, 210, 263, 289, 291], "shallow": [32, 67, 70, 72, 73, 74, 127, 292], "pleas": [32, 67, 70, 72, 73, 74, 127, 284], "detach": [32, 67, 70, 72, 73, 74, 127, 215, 229, 230, 231, 232, 289], "non_block": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "memory_format": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "channels_last": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "complex": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192, 289, 290], "integr": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 147, 154, 158, 192, 285, 295, 296, 297], "unchang": [32, 67, 70, 72, 73, 74, 96, 98, 111, 123, 126, 127, 129, 131, 192, 262, 289, 298], "tri": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "pin": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "4d": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "ignore_w": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "1913": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "3420": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "5113": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "2325": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "torch_doctest_cuda1": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "gpu1": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "1914": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "5112": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192, 296], "2324": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "float16": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "cdoubl": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "3741": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "j": [32, 35, 58, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192, 287], "2382": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "5593": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192, 296], "4443": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "complex128": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "6122": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "1150": [32, 67, 70, 72, 73, 74, 96, 111, 123, 126, 127, 129, 131, 192], "to_empti": [32, 67, 70, 72, 73, 74], "dst_type": [32, 67, 70, 72, 73, 74], "xpu": [32, 67, 70, 72, 73, 74], "set_to_non": [32, 67, 70, 72, 73, 74], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63], "uniqu": [33, 298], "discretebox": [33, 67, 291, 295, 301], "chosen_data": [34, 54], "rewarddata": [34, 54, 283], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 88], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 296], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 97, 99, 111, 127, 131, 257, 297], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 281], "determin": [34, 35, 36, 39, 41, 52, 58, 111, 131, 188, 290, 295], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 148, 173], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 65], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 292], "memmap": [34, 36, 39, 55, 73, 74, 132, 262, 298], "unbind": [34, 36, 39, 154], "alpha": [35, 41, 58, 143, 203, 207, 217, 219, 289, 298, 300], "ep": [35, 41, 58, 132, 188, 204, 220, 263, 289, 290, 292], "1e": [35, 41, 58, 132, 148, 151, 163, 173, 289, 290, 291, 295], "08": [35, 41, 58, 289, 290, 291, 296], "collate_fn": [35, 38, 41, 42, 52, 53, 298, 300], "prefetch": [35, 38, 41, 42, 52, 53, 54, 289, 290, 292, 298], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 93, 111, 129, 144, 145, 146, 147, 150, 151, 152, 158, 162, 164, 165, 167, 169, 170, 176, 185, 188, 202, 203, 208, 209, 210, 211, 212, 213, 216, 219, 220, 229, 234, 242, 297], "ab": [35, 58, 111, 129, 132, 151, 152, 158, 162, 164, 165, 167, 169, 170, 176, 202, 203, 209, 210, 211, 212, 213, 216, 219, 297], "1511": [35, 58, 152], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 173, 189, 193, 283, 286], "null": [35, 41, 58, 92], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 65], "1_000": [35, 38, 41, 42, 298], "merg": [35, 38, 41, 42, 52, 53, 296], "mini": [35, 38, 41, 42, 52, 53, 295], "decid": [35, 38, 41, 42, 300], "rb": [35, 38, 41, 42, 52, 53, 93, 115, 290, 292, 295, 297, 298, 300], "meth": [35, 38, 41, 42, 215], "incompat": [35, 38, 41, 42, 298], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 298], "tensordictprioritizedreplaybuff": [35, 283, 300], "simplifi": [35, 296, 298], "manual_se": [35, 38, 41, 42, 98, 108, 115, 159, 166, 179, 185, 186, 188, 196, 202, 203, 205, 213, 219, 295, 296, 300, 301], "_weight": [35, 41, 298, 300], "arrai": [35, 40, 289, 298], "update_prior": [35, 58, 262, 287, 290, 298, 300], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 66, 128], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 122, 289, 298], "nonetyp": [36, 39], "logit": [36, 40, 159, 166, 185, 207, 285], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199], "text": [37, 40, 43, 188, 291], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 298], "inde": [37, 98, 291, 296], "might": [37, 122, 252, 284, 289, 301], "writer": [38, 42, 52, 53, 60, 64, 283, 291], "randomsampl": [38, 42, 52, 53, 283, 289], "roundrobinwrit": [38, 42, 52, 53, 283], "Not": 38, "ref_model": 40, "reward_model": [40, 198], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 106], "kl": [40, 106, 210, 214], "penalti": [40, 214], "strai": 40, "far": [40, 70, 153, 174, 175, 296, 301], "calcul": [40, 115], "gpt2rewardmodel": 40, "get_dataload": [40, 283], "promptdata": [40, 283], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 296, 298], "reward_kl": [40, 106], "reward_raw": 40, "sample_log_prob": [40, 180, 181, 182, 189, 193, 195, 216, 274, 291, 295, 300], "create_rollout_td": 40, "log_prob": [40, 148, 159, 166, 175, 193], "log_ratio": 40, "kl_coef": 40, "plu": [40, 296], "replic": 40, "rindex": 40, "multipli": [40, 203, 204, 207, 214, 216, 217, 219, 263, 289], "term": [40, 106, 161, 162, 201, 202, 207, 267, 290, 291, 295], "subtract": [40, 122], "ve": [40, 289, 292], "eo": 40, "limit": [40, 71, 93, 106, 289, 290, 292, 295, 296], "generation_config": 40, "generationconfig": 40, "ti": [40, 238, 239, 240, 241, 243, 244, 245, 246, 290], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 203, 206, 207, 208, 213, 215, 217, 219, 221, 227, 298, 300], "td_error": [41, 42, 203, 205, 206, 207, 208, 213, 215, 217, 219, 221, 227, 289, 298, 300], "reduct": [41, 58], "prioritizedreplaybuff": [41, 283, 300], "update_tensordict_prior": [41, 289, 298, 300], "prioritizedsampl": [41, 42, 206, 208, 227, 283, 289, 298], "min": [41, 58, 173, 174, 175, 188, 203, 204, 207, 217, 219, 290, 291, 295], "median": [41, 58, 189, 193], "len": [41, 55, 56, 65, 143, 156, 160, 289, 296, 297, 298, 300], "include_info": [41, 42, 52, 53], "kw": [42, 60, 64], "int32": [42, 87, 138], "huggingfac": [43, 187], "co": [43, 296], "doc": [43, 290, 295], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 283], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 72, 73, 74, 289, 290], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 70, 129, 141, 247, 298, 301], "condit": [45, 122, 184, 185, 190, 191, 201, 289, 296, 298], "elementwis": 45, "os": [45, 290], "cpu_count": 45, "vocabulari": 45, "loader": [45, 291], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 93, 94, 95, 97, 98, 99, 100, 102, 105, 108, 112, 113, 115, 119, 121, 124, 129, 132, 183, 186, 188, 193, 206, 227], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 290], "batch_dimens": 45, "filder": 45, "tempfil": [45, 277, 289, 290], "randint": [45, 125, 298], "20": [45, 67, 70, 72, 73, 74, 256, 290, 291, 292, 295, 296, 297, 298, 300, 301], "temporarydirectori": [45, 289, 290], "tmpdir": [45, 289, 290], "data_memmap": 45, "exclus": [48, 49, 102, 154, 159, 184, 185, 190, 191, 220, 221, 229, 230, 231, 232, 233, 281, 285], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_timeout_as_don": 52, "env_kwarg": [52, 279, 280, 289], "metadata": [52, 291, 295, 301], "reconstruct": [52, 210, 289, 301], "timeout": 52, "recov": [52, 183, 186, 188, 194, 213, 294], "regard": [52, 150, 185, 202, 208, 216, 289, 291, 296], "get_dataset": 52, "qlearning_dataset": 52, "less": [52, 72, 177, 279, 280, 286, 291, 292, 298, 300], "left": [52, 96, 106, 111, 113, 124, 126, 129, 131, 290, 291], "terminate_on_end": 52, "possess": 52, "unexpectedli": 52, "episod": [52, 115, 118, 122, 142, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 290, 295], "absent": 52, "traj_split": 52, "observationnorm": [52, 132, 281, 289, 290, 291, 292, 300], "maze2d": 52, "umaz": 52, "loc": [52, 106, 108, 117, 153, 163, 174, 175, 180, 181, 182, 189, 193, 195, 202, 203, 213, 216, 217, 218, 219, 269, 274, 281, 285, 289, 290, 291, 292, 295, 300], "128": [52, 145, 290, 292, 296, 297, 298], "public": [53, 111, 131], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 88], "adult_onehot": [53, 88], "mushroom_num": [53, 88], "mushroom_onehot": [53, 88], "covertyp": [53, 88], "shuttl": [53, 88], "magic": [53, 88], "infinit": [54, 298], "three": [54, 285, 287, 291, 295, 296, 298], "block": [54, 285, 292], "pairwisedataset": [54, 283], "256": [54, 290, 291, 295, 296], "scratch_dir": [55, 289, 298], "myclass": [55, 56, 65], "foo": [55, 56, 65, 298, 301], "bar": [55, 56, 65, 258, 259, 261, 265, 287, 290], "attach": [55, 56, 57, 63, 65, 290], "entiti": [55, 56, 57, 63, 65], "alloc": [56, 159, 289], "zero_": [56, 65, 138], "max_capac": [58, 289, 298], "uniformli": [59, 215, 301], "roundrobin": [60, 64], "piec": [60, 64, 66, 289, 290, 291, 295, 296, 298], "consum": [62, 290, 291, 295, 298], "incomplet": 62, "unlik": [62, 208, 216, 290, 300], "fresh": 62, "caution": [62, 134, 301], "shuffl": [62, 295], "haven": [62, 297], "remain": [62, 98, 106, 122, 162], "draw": 62, "__len__": 63, "_inplace_upd": [67, 72, 73, 74, 75, 76, 88, 89, 90, 127], "_batch_lock": [67, 72, 73, 74, 75, 76, 88, 89, 90, 127], "speak": [67, 289], "fake_tensordict": [67, 70, 72, 73, 74, 290], "ampl": 67, "run_type_check": [67, 71], "placement": 67, "produc": [67, 143, 156, 160, 166, 180, 182, 248, 291, 292, 298, 301], "continuousbox": [67, 138, 291, 295, 296, 300, 301], "unboundedcontinuoustensorspec": [67, 71, 97, 99, 123, 138, 142, 158, 179, 192, 195, 197, 218, 283, 291, 292, 295, 296, 301], "fake_td": [67, 70, 72, 73, 74], "mutabl": [67, 70, 72, 73, 74], "batch_lock": [67, 69, 70, 72, 73, 74, 123, 127, 296], "environn": [67, 70, 71, 72, 73, 74, 127], "immut": [67, 70, 72, 73, 74, 113, 127], "fake": [67, 70, 72, 73, 74, 289, 290], "overridden": [67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 292], "afterward": [67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199, 301], "silent": [67, 70, 72, 73, 74, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 160, 163, 164, 165, 169, 170, 172, 177, 183, 185, 186, 188, 191, 196, 199], "rand_act": [67, 70, 72, 73, 74], "_step": [67, 70, 72, 73, 74, 97, 99, 102, 113, 122], "privat": [67, 70, 72, 73, 74, 296, 301], "callback": [67, 70, 72, 73, 74, 295], "auto_reset": [67, 70, 72, 73, 74, 296], "auto_cast_to_devic": [67, 70, 72, 73, 74, 295], "break_when_any_don": [67, 70, 72, 73, 74, 295], "return_contigu": [67, 70, 72, 73, 74, 134, 294], "soon": [67, 70, 72, 73, 74], "ndim": [67, 70, 72, 73, 74], "concomitt": [67, 70, 72, 73, 74], "workspac": [67, 70, 72, 73, 74], "creator": [68, 270, 271, 279, 280, 281], "substitut": [68, 132], "vecnorm": [68, 281], "env_creat": [68, 289], "test_env1": 68, "_td": 68, "observation_count": [68, 301], "test_env2": 68, "sleep": [68, 301], "ps": 68, "p1": 68, "p2": 68, "join": [68, 283, 290, 291], "9934": 68, "env_str": 69, "info_dict_read": 70, "set_info_dict_read": 70, "put": [70, 132, 281, 285, 290, 291, 292, 296], "read_act": 70, "read_don": 70, "reader": [70, 290], "frame_skip": [70, 77, 78, 79, 81, 82, 86, 103, 258, 261, 268, 287, 289, 290, 291, 300], "broken": [70, 134], "read_ob": 70, "dictat": [70, 189, 193, 216, 289, 296], "inner": [70, 98, 287, 290, 291, 295, 301], "read_reward": 70, "total_reward": [70, 290], "step_reward": 70, "baseinfodictread": 70, "info_dict": 70, "hoc": 70, "dict_read": 70, "default_info_dict_read": 70, "my_info_kei": 70, "some_env": 70, "safeti": 71, "constraint": [71, 291, 295], "behav": [71, 85, 166, 213, 297], "mymbenv": [71, 142, 158], "world_model": [71, 142, 158, 210], "super": [71, 97, 99, 142, 150, 158, 197, 203, 205, 207, 213, 217, 219, 221, 289, 296, 300], "hidden_observ": [71, 142, 158], "mlp": [71, 142, 143, 144, 145, 146, 147, 154, 155, 158, 160, 180, 184, 206, 274, 285, 290, 294, 297, 300], "worldmodelwrapp": [71, 142, 158], "activation_class": [71, 142, 143, 144, 145, 146, 147, 151, 152, 156, 158, 160, 290, 295, 300], "relu": [71, 142, 158, 163, 201], "activate_last_lay": [71, 142, 147, 156, 158], "depth": [71, 142, 143, 144, 145, 146, 147, 151, 152, 156, 158, 160, 164, 165, 184, 285, 290, 294, 295], "equal": [72, 73, 74, 107, 108, 143, 149, 154, 156, 160, 220, 224, 256, 279, 280, 289, 291, 297], "readthedoc": 72, "en": 72, "python_interfac": 72, "thread": 72, "task_id": 72, "my_env_fun": [73, 74], "custom_attribute_list": [73, 74], "custom_attribut": [73, 74], "custom_method_list": [73, 74], "custom_method": [73, 74], "deploi": [73, 74], "slight": [73, 74, 290], "overhead": [73, 74], "share_individual_td": [73, 74], "shared_memori": [73, 74], "policy_proof": [73, 74], "ll": [73, 74, 289, 290, 291, 292, 295, 301], "hidden": [73, 74, 151, 154, 155, 164, 165, 169, 170, 180, 181, 182, 192, 195, 204, 214, 216, 285, 292, 294, 300], "allow_step_when_don": [73, 74], "update_kwarg": [73, 74], "googl": [75, 76, 291, 292, 295], "ant": [75, 76, 297], "get_environ": 76, "87": [76, 290, 296], "acrobot": [76, 301], "fetch": [76, 106, 297, 298, 301], "dm_control": [77, 78, 289, 294, 301], "task_nam": 77, "cheetah": [77, 78, 289, 301], "mo": [81, 82], "minecart": [81, 82], "mo_gym": 82, "sumbodul": 83, "wish": [84, 298], "placehold": [85, 127], "secur": 85, "snake": [86, 87], "6x6": [86, 87], "td1": [87, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 289], "12x12": 87, "tsp50": 87, "tsp100": 87, "106": [88, 296], "scenario": [89, 90, 289, 295, 296], "flock": [89, 90], "continuous_act": [89, 90, 295], "cohesion_rew": 89, "collision_rew": 89, "separation_rew": 89, "velocity_rew": 89, "18": [89, 90, 160, 289, 290, 291, 292, 295, 296, 301], "agent_collision_rew": 90, "agent_distance_rew": 90, "model_bas": [91, 142, 158], "transform_reward_spec": [92, 96, 97, 106, 113, 116, 117, 126, 128], "as_invers": 93, "account": [93, 159, 285, 290, 292, 298], "movement": 93, "veloc": [93, 295, 296, 301], "propos": [93, 157, 212, 220, 274, 285, 292, 298], "pdf": [93, 144, 145, 146, 147, 150, 185, 188, 208, 217, 220, 229, 234, 242, 274], "1312": [93, 290], "5602": 93, "seuqenc": [93, 108], "uesd": 93, "unsqueezetransform": [93, 296, 298], "consumpt": 93, "followin": 93, "pictur": 93, "cartpol": [93, 290, 292, 298, 301], "pixels_trsf": [93, 298], "grayscal": [93, 290, 292, 298, 301], "unsqueez": [93, 94, 125, 128, 155, 289, 292, 295, 296], "tensordictreplaybuff": [93, 262, 277, 283, 289, 290, 292, 298], "data_exclud": [93, 298], "_buffer": [93, 124], "transform_observation_spec": [93, 94, 95, 96, 97, 100, 102, 104, 105, 106, 108, 113, 114, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 296], "del_kei": [94, 129, 294, 296], "unsqueeze_if_oor": 94, "observation_posit": 94, "observation_veloc": 94, "delet": 94, "key1": [94, 256, 264], "key2": [94, 256, 264], "crop": [95, 112, 248], "center": [95, 248], "width": [95, 114], "height": [95, 114], "squar": [95, 153, 174, 175, 248], "rewardsc": [96, 127, 289, 290, 292], "rewardclip": 96, "transformed_env": [96, 126, 127], "tranform": [96, 100, 105, 119, 121, 122, 126, 130], "transform_input_spec": [96, 97, 98, 108, 113, 121, 126, 128], "transform_output_spec": [96, 106, 113, 126], "untouch": [96, 106, 113, 126], "transform_done_spec": [96, 106, 113, 126], "dtype_in": 97, "dtype_out": 97, "scan": [97, 99, 194, 195], "expos": [97, 99, 194, 290], "not_transform": [97, 99], "rule": [97, 99, 193, 285, 291], "constructedw": [97, 99], "myenv": [97, 99], "_set_se": [97, 99, 296], "num_actions_effect": 98, "max_act": 98, "include_forward": 98, "dimension": [98, 154, 229, 234, 242, 295], "num_act": [98, 207], "action_out": 98, "_call": [98, 102, 296], "excluded_kei": 100, "finit": [101, 298], "first_dim": 102, "last_dim": 102, "allow_positive_dim": [102, 128], "flatten": [102, 262, 292, 295], "th": [102, 128, 296], "permit": [102, 128], "frameskip": 102, "repeatedli": [103, 291, 295], "init_kei": 105, "is_init": [105, 154, 188, 292], "tracker": 105, "probabilistictensordictmodul": [106, 193, 194, 300], "coef": 106, "pi_curr": 106, "pi_0": 106, "constrain": [106, 154, 216], "overfit": 106, "fine": [106, 297], "probabilist": [106, 189, 283, 291, 300], "get_dist": [106, 193, 194], "mod": [106, 154, 196, 292], "normalparamextractor": [106, 285, 291, 295], "probabilisticactor": [106, 180, 181, 182, 202, 203, 207, 213, 216, 217, 218, 219, 221, 285, 289, 291, 295], "tanhnorm": [106, 180, 181, 182, 189, 195, 202, 203, 213, 216, 217, 218, 219, 221, 283, 291, 295, 300], "n_ob": [106, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221], "n_act": [106, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221], "distribution_class": [106, 180, 181, 182, 189, 193, 195, 202, 203, 207, 213, 216, 217, 218, 219, 285, 289, 291, 295, 300], "return_log_prob": [106, 180, 181, 182, 189, 193, 195, 218, 285, 291, 295, 300], "apply_": 106, "copy_": [106, 289], "formulat": 106, "diverg": [106, 154, 189, 193, 210, 214], "noop": [107, 300], "30": [107, 169, 170, 290, 291, 295, 296], "op": [107, 183, 186, 267], "randomli": [107, 108, 123, 189, 193, 295, 296, 298], "noop_max": 107, "out_keys_inv": [108, 109, 113, 126, 296], "standard_norm": [108, 117, 289, 290, 292], "affin": [108, 117], "layer": [108, 132, 143, 144, 145, 151, 154, 156, 160, 161, 162, 164, 165, 171, 172, 178, 187, 196, 285, 290, 291, 292, 297], "normal": [108, 132, 143, 153, 156, 159, 163, 174, 175, 183, 189, 193, 204, 214, 216, 261, 263, 281, 285, 287, 292, 295, 301], "set_default_tensor_typ": 108, "doubletensor": 108, "isclos": 108, "next_ob": [108, 229, 230, 231, 232, 300], "rubric": [108, 195], "init_stat": [108, 289, 290, 291, 292], "3752e": 108, "01": [108, 188, 199, 204, 214, 216, 289, 290, 292, 295, 296, 297, 299], "5087e": 108, "03": [108, 289, 290, 295, 296, 297, 299], "9294e": 108, "9636": 108, "5608": 108, "6408": 108, "num_it": [108, 290, 291], "reduce_dim": [108, 289, 290, 291, 292], "cat_dim": [108, 289, 290, 291, 292], "keep_dim": [108, 290, 292], "constant": [108, 122, 287, 289, 291, 292, 301], "statist": [108, 132, 218, 281, 289, 290, 291, 301], "approach": [108, 289, 291, 301], "gaussian": [108, 123, 142, 158, 161, 162, 183, 291], "empir": [108, 142, 158, 189, 193, 289, 291, 295], "3d": 108, "third": [108, 185, 295], "r3m": [111, 297], "resnet": [111, 129, 131], "visual": [111, 129, 131, 291, 296], "embed": [111, 129, 130, 131, 167, 179, 180, 181, 182, 192, 197, 297], "ego4d": [111, 129, 131], "univers": [111, 129, 131], "suraj": [111, 129], "nair": [111, 129], "aravind": [111, 129], "rajeswaran": [111, 129], "vikash": [111, 129, 131], "kumar": [111, 129, 131], "chelsea": [111, 129], "finn": [111, 129], "abhinav": [111, 129], "gupta": [111, 129], "2203": [111, 129, 158, 297], "12601": [111, 129, 297], "_init": [111, 129, 289], "snippet": [111, 129, 289], "resnet50": [111, 131, 297], "model_nam": [111, 129, 131, 251], "resnet34": 111, "resnet18": 111, "r3m_vec": [111, 297], "feed": [111, 131, 215, 285, 289, 295, 298], "244": [111, 131, 296], "stack_imag": [111, 131], "tread": [111, 131], "separet": [111, 131], "hub": [111, 131, 297], "resnet50_weight": [111, 131], "imagenet1k_v1": [111, 131], "download_path": [111, 131], "tensor_pixels_kei": [111, 131], "dest": [111, 129, 131, 192], "sub_seq_len": 112, "sample_dim": [112, 289], "mask_kei": 112, "primarili": 112, "hesit": 112, "request": 112, "robust": 112, "mix": [112, 167, 176, 227, 289, 295], "NOT": 112, "improp": 112, "create_copi": 113, "renam": [113, 115, 141, 289], "stuff": 113, "braxenv": [113, 283], "newnam": 113, "interpol": [114, 290, 292], "bilinear": [114, 292], "r2g": 115, "99": [115, 132, 158, 211, 223, 228, 235, 277, 289, 290, 291, 295, 296, 297, 300], "reward_to_go": 115, "bernoulli_": 115, "9010": 115, "9404": [115, 235], "9701": [115, 235], "9900": [115, 235], "0000": [115, 186, 196, 235, 290, 291, 292, 296, 300], "crash": 115, "clamp_min": 116, "clamp_max": 116, "clip_min": 116, "scalar": [116, 145, 147, 161, 162, 183, 186, 188, 199, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 285, 290, 296], "clip_max": 116, "episode_": 118, "reward1": 118, "reward2": 118, "ho": 118, "excludetransform": [119, 298], "squeeze_dim": 120, "step_count_kei": 121, "recognis": 121, "target_return": 122, "guid": [122, 284, 289, 295], "accordingli": [122, 190, 292], "conjunct": [122, 290], "hindsight": 122, "relabel": 122, "reward2gotransform": 122, "primer": [123, 292], "default_valu": [123, 292], "unit": [123, 142, 151, 164, 165, 169, 170, 291], "transfomedenv": 123, "mykei": 123, "__unless": 123, "exists__": 123, "dtype_or_devic": 123, "pool": 124, "from_int": 125, "255": [125, 296, 298], "ri": 125, "principl": 126, "cattransform": 126, "notabl": 126, "cache_spec": 127, "anymor": [127, 192], "set_missing_toler": 127, "keyerror": 127, "unsqueeze_dim": [128, 296], "danger": 128, "vc1": 129, "vc1_vec": 129, "small": [129, 289, 291, 295, 301], "untrain": 129, "make_noload_model": 129, "naiv": 129, "vip": [130, 131, 297], "toward": 131, "implicit": [131, 213, 298], "jason": 131, "ma": 131, "shagun": 131, "sodhani": 131, "dinesh": 131, "jayaraman": 131, "osbert": 131, "bastani": 131, "ami": 131, "zhang": 131, "vip_vec": 131, "shared_td": 132, "decai": [132, 183, 186, 220, 263, 289, 290, 292, 301], "9999": [132, 296], "0001": [132, 151, 163, 291, 296], "fly": [132, 214, 286, 291, 296, 298, 301], "to_observation_norm": 132, "underflow": [132, 263], "build_td_for_shared_vecnorm": 132, "memmori": 132, "memmap_": 132, "queue": [132, 298], "td_share": 132, "v": [132, 180, 213, 219, 285, 289, 290], "state_dim": [133, 169, 170], "action_dim": [133, 144, 146, 289, 294], "gsde": [133, 217, 281], "func": 133, "gsdemodul": 133, "check_dtyp": 134, "short": [134, 290, 291, 295], "discrep": [134, 202, 204, 205, 206, 214, 216, 218, 227], "imposs": 134, "probabilistictdmodul": [139, 140, 156, 189, 193, 228, 261], "next_tensordict": 141, "keep_oth": [141, 296], "exclude_reward": 141, "exclude_don": 141, "exclude_act": 141, "next_": 141, "funtion": [141, 296], "cross": 142, "entropi": [142, 202, 203, 204, 207, 213, 214, 216, 217, 219, 221, 295], "botev": 142, "et": 142, "al": [142, 301], "2013": 142, "cem": 142, "plan": [142, 157, 158], "varianc": [142, 153, 163, 174, 175, 286, 289, 291, 295], "rank": 142, "k": 142, "repeat": [142, 291, 295, 296], "maximis": [142, 144, 146, 158, 285, 289, 290, 291, 295, 296], "horizon": [142, 158, 291], "modelbasedenv": [142, 158], "planning_horizon": [142, 158], "optim_step": [142, 158, 290], "mpc": [142, 157, 158], "num_candid": [142, 158], "candid": [142, 158], "top_k": [142, 158], "modelbasedenvbas": [142, 157, 158, 283], "safemodul": [142, 157, 180, 182, 193, 202, 203, 207, 213, 216, 217, 218, 219, 221, 270, 271, 277, 283, 300], "next_hidden_observ": 142, "num_cel": [143, 144, 145, 146, 147, 151, 152, 154, 156, 160, 180, 290, 291, 292, 295, 300], "elu": [143, 144, 145, 146, 147, 151, 152, 290, 300], "activation_kwarg": [143, 156], "norm_class": [143, 144, 145, 156], "norm_kwarg": [143, 156], "bias_last_lay": [143, 144, 145, 146, 147, 152, 156], "aggregator_class": [143, 144, 145, 290, 292, 300], "squashdim": [143, 144, 300], "aggregator_kwarg": [143, 144, 145, 290, 292], "squeeze_output": [143, 144, 145, 290, 292], "convolut": [143, 144, 145, 171], "neural": [143, 171, 192, 285, 290, 291, 292, 295, 296, 301], "cell": [143, 156, 160, 291], "kernel": [143, 152, 155], "device_typ": [143, 144, 145, 146, 147, 152, 156, 161, 162], "cnet": 143, "34": [143, 156, 290, 292, 295, 296], "35": [143, 156, 290, 296, 297], "rectangular": 143, "conv_net_kwarg": [144, 145], "mlp_net_kwarg": [144, 145, 146], "use_avg_pool": [144, 145], "WITH": [144, 145, 146, 147, 188, 220], "1509": [144, 145, 146, 147, 158, 188, 212, 220, 296], "02971": [144, 145, 146, 147, 188, 220], "convnet": [144, 292, 300], "ndims_in": 144, "avgpool": [144, 145], "adaptiveavgpool2d": [145, 290, 292], "400": [146, 147, 295, 296, 298], "mlp_net_kwargs_net1": 147, "mlp_net_kwargs_net2": 147, "atol": [148, 173], "06": [148, 173, 290, 295, 296, 297], "rtol": [148, 173], "batch_shap": [148, 173], "event_shap": [148, 173], "absolut": [148, 173, 289], "densiti": [148, 159, 166, 175], "mass": [148, 159, 166, 175, 296], "rsampl": [148, 166, 193], "sample_shap": [148, 159, 166], "dqnet": 149, "atom": 149, "softmax": [149, 184, 185], "action_spac": [150, 168, 184, 185, 190, 191, 202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 292], "var_num": [150, 168, 184, 185, 191], "action_value_kei": [150, 168, 185, 190, 191, 215, 227], "perspect": [150, 185, 208, 291], "1707": [150, 185, 208, 216], "06887": [150, 185, 208], "mult": [150, 160, 168, 184, 185, 190, 191], "functional_modul": [150, 168, 190, 192, 195, 285], "make_funct": [150, 168, 189, 190, 192, 195, 197, 215, 285, 300], "tensordict_modul": [150, 168, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 205, 207, 213, 216, 217, 218, 219, 221, 285], "nbin": [150, 184, 285], "customdistributionalqv": 150, "log_softmax": [150, 184], "one_hot": [150, 168], "qvalue_actor": [150, 168, 184, 190, 285], "std_bia": 151, "std_min_val": 151, "belief": [151, 164, 169, 170], "1912": [151, 209, 210, 211], "01603": [151, 209, 210, 211], "softplu": [151, 163, 199, 200, 201], "out_features_valu": 152, "cnn_kwarg": [152, 290], "mlp_kwarg": [152, 155, 290], "duel": 152, "cnn": [152, 290, 300], "06581": 152, "512": [152, 290, 296, 298], "upscal": [153, 174, 175], "tanh_loc": [153, 174, 175], "event_dim": [153, 173, 174], "ultim": [153, 174, 175], "poor": [153, 174, 175], "explos": [153, 174, 175], "switch": [153, 175], "sigma": [153, 174, 175, 183, 188, 291], "formula": [153, 174, 175, 202, 204, 214, 216, 286, 291], "embedd": [154, 155], "lstmcell": 154, "correspont": 154, "input_s": [154, 155, 292], "hidden_s": [154, 155, 292], "num_lay": [154, 164, 165], "b_ih": 154, "b_hh": 154, "introduc": [154, 188, 289], "proj_siz": 154, "recurrent_state_h": [154, 292], "recurrent_state_c": [154, 292], "triplet": [154, 190, 191], "custom_kei": 154, "temporal_mod": 154, "set_temporal_mod": 154, "tensordictsequenti": [154, 184, 194, 285, 289, 292, 294, 297, 300], "seq": [154, 292, 294], "lstm_modul": 154, "rs_h": 154, "rs_c": 154, "set_recurrent_mod": [154, 292], "batch_first": [154, 292], "hidden0": 154, "hidden1": 154, "policy_infer": 154, "policy_train": 154, "traj_td": 154, "td_inf": 154, "assert_clos": 154, "lstm_kwarg": 155, "next_observ": [155, 202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 294], "time_step": 155, "2d": [155, 295], "hidden0_in": 155, "hidden1_in": 155, "hidden0_out": 155, "hidden1_out": 155, "single_bias_last_lay": 156, "layer_class": 156, "layer_kwarg": 156, "perceptron": 156, "seamless": 156, "lazylinear": [156, 285, 291, 296, 297, 300], "42": [156, 202, 203, 205, 213, 219, 290, 292, 296, 297], "noisylinear": [156, 161, 283, 290], "noisylazylinear": [156, 283], "At": [157, 290, 291, 292, 294, 296, 297], "mpcplanner": 157, "tensordict_out": [157, 301], "mppi": 158, "covari": 158, "william": [158, 218], "aldrich": 158, "theodor": 158, "01149": 158, "hansen": 158, "wang": 158, "su": 158, "04955": 158, "valueoper": [158, 180, 181, 182, 202, 203, 204, 205, 207, 213, 214, 216, 217, 218, 219, 221, 277, 285, 289, 291], "tdlambdaestim": [158, 283, 289], "value_net": [158, 206, 218, 229, 230, 231, 232, 291], "adv": 158, "lmbda": [158, 223, 229, 232, 234, 240, 241, 242, 245, 246, 286, 289, 291, 295], "95": [158, 223, 290, 291, 292, 296, 297, 298], "value_network": [158, 205, 206, 208, 213, 219, 229, 230, 231, 232, 286, 289, 291], "temperatur": [158, 203, 213], "neg_inf": 159, "inf": 159, "padding_valu": 159, "www": 159, "api_doc": 159, "tf_agent": 159, "event": [159, 166, 238, 239, 240, 241, 243, 244, 245, 246, 298], "unnorm": [159, 166], "sparse_mask": 159, "dens": 159, "1203": 159, "0928": 159, "0831": 159, "ones_lik": 159, "1972": 159, "n_agent_input": [160, 295], "n_agent_output": [160, 295], "centralis": [160, 295], "share_param": [160, 295], "multiag": [160, 167, 176, 227], "homogen": [160, 295], "toech": 160, "agent_network": 160, "modulelist": [160, 274, 300], "centalis": 160, "shown": [160, 285, 294, 295, 298], "std_init": [161, 162], "matrix": [161, 162], "initialize_paramet": 161, "isol": 161, "1706": [162, 176], "10295v3": 162, "induc": 162, "aid": 162, "scale_map": 163, "biased_softplus_1": 163, "scale_lb": [163, 169, 170], "exp": [163, 201], "module_norm": 163, "channel": [164, 165, 290], "decod": 164, "1803": [164, 165, 167], "10122": [164, 165], "rnn_hidden": 164, "latent": 165, "excacli": 166, "state_shap": [167, 227], "mixing_embed_dim": [167, 227], "qmix": [167, 295], "mixer": [167, 176, 227], "monoton": 167, "hyper": 167, "11485": 167, "qmixerloss": [167, 176], "qmix_vdn": [167, 176], "eventu": [167, 292, 296], "vdn": [167, 176], "greedi": [168, 185, 186, 191, 290, 292], "hidden_dim": [169, 170], "posterior": [169, 210], "rssm": [169, 170, 210], "1811": [169, 170], "04551": [169, 170], "obs_embed": 169, "rnn_hidden_dim": 170, "dream": 170, "tanhtransform": 174, "decomposit": 176, "05296": 176, "vmap": [177, 192, 195, 300], "hide": [177, 291, 295], "satisfi": [177, 285], "tensordictmodulebas": [177, 190, 292], "vmap_dim": 177, "lam": 177, "sample_in": 177, "sample_in_td": 177, "vm": 177, "translat": [179, 189], "character": [179, 184, 189, 190, 192, 298], "overflow": [179, 184, 185, 189, 190, 191, 192, 193], "td_modul": [179, 180, 181, 182, 189, 192, 193, 195, 197, 300], "3635": 179, "0340": 179, "1476": 179, "3911": [179, 296], "1664": [179, 290, 296], "5455": 179, "2247": 179, "4583": 179, "2916": 179, "2160": [179, 301], "5337": 179, "5193": 179, "grad_fn": [179, 186, 300], "addmmbackward0": 179, "actorvalueoper": [180, 285], "get_policy_oper": [180, 181, 182, 204, 214, 216, 285], "standalon": [180, 181, 182], "tdmodul": [180, 181, 182, 277], "get_critic_oper": 180, "common_oper": [180, 182], "policy_oper": [180, 181, 182], "value_oper": [180, 181, 182], "normalparamwrapp": [180, 181, 182, 189, 195, 202, 203, 207, 213, 216, 217, 218, 219, 221, 283, 300], "module_hidden": [180, 182], "td_module_hidden": [180, 182], "module_act": [180, 182], "td_module_act": [180, 181, 182], "module_valu": [180, 181, 182], "td_module_valu": [180, 181, 182], "state_action_valu": [180, 197, 203, 219, 228, 274, 277, 285, 289, 300], "td_clone": [180, 181, 182], "tensordictmodulewrapp": [180, 270, 271, 277], "get_policy_head": [180, 181, 182], "safesequenti": [180, 181, 182, 227], "head": [180, 182, 204, 214, 216], "get_value_head": [180, 181, 182], "get_value_oper": [180, 181, 182, 204, 214, 216], "action_modul": 181, "state_valu": [181, 182, 197, 204, 214, 216, 217, 219, 229, 230, 231, 232, 234, 236, 238, 240, 242, 243, 245, 285, 289, 291, 295], "qualiti": [182, 285], "actorcriticoper": [182, 204, 214, 216, 285], "embeddig": 182, "refet": 182, "actorcriticwrapp": [182, 285, 289], "po": [183, 186], "sigma_init": 183, "epsilon": [183, 186, 188, 220, 263, 290, 291, 292], "sigma_end": 183, "annealing_num_step": [183, 186, 188, 289, 290, 292], "captur": [183, 186, 188], "omiss": [183, 186, 188], "warn": [183, 186, 188, 290, 301], "ommit": [183, 186, 188, 298], "qvaluemodul": [184, 190, 227, 292], "distributionaldqnnet": 184, "make_log_softmax": 184, "my_action_valu": [185, 191], "chanc": 185, "thid": 185, "eps_init": [186, 188, 290, 292], "eps_end": [186, 188, 290], "explorative_polici": [186, 188], "9055": [186, 296], "9277": 186, "6295": 186, "2532": 186, "addbackward0": 186, "lmheadmodel": 187, "extract": [187, 289, 291], "actor_head": [187, 204, 214, 216], "base_model": 187, "lm_head": 187, "ornstein": 188, "uhlenbeck": 188, "ou": [188, 289], "auto": [188, 203, 207, 217, 219, 221, 286, 295], "correl": 188, "sort": 188, "noise_t": 188, "noise_": 188, "theta": [188, 291, 296], "mu": [188, 291], "dt": [188, 296], "sigma_t": 188, "sqrt": 188, "sigma_": 188, "anneal": 188, "ou_prev_nois": 188, "ou_step": 188, "increas": [188, 295], "15": [188, 209, 289, 290, 291, 296, 298, 300], "x0": 188, "sigma_min": 188, "n_steps_ann": 188, "is_init_kei": 188, "_ou_prev_nois": 188, "_ou_step": 188, "default_interaction_typ": [189, 193], "interaction_typ": [189, 193], "set_interaction_typ": [189, 193], "distribution_kwarg": [189, 193, 291, 295], "cache_dist": [189, 193], "n_empirical_estim": [189, 193], "chose": 191, "functionalmodul": 192, "functionalmodulewithbuff": 192, "grucel": 192, "td_fmodul": 192, "td_function": 192, "td_state": 192, "ensembl": [192, 217], "params_repeat": 192, "td_vmap": [192, 195], "random_sampl": [192, 193], "suppli": 193, "fist": 193, "log_prob_kei": [193, 295], "probabilistictensordictsequenti": [194, 202, 204, 214, 216, 218, 270, 271, 300], "partial_toler": [194, 195, 294], "who": [194, 195], "AND": [194, 195], "tensordictsequenci": 195, "tensordictsequ": 195, "safeprobabilisticmodul": [195, 285], "spec1": 195, "net1": 195, "module1": 195, "td_module1": 195, "spec2": 195, "module2": 195, "td_module2": 195, "clamp": [196, 210, 265, 296], "boundari": [196, 291, 295], "resolut": 196, "simplest": [196, 289, 291, 292, 295, 298, 301], "9944": 196, "9991": 196, "3020": 196, "2299": [196, 296], "5418": 196, "2989": 196, "6849": 196, "3169": 196, "2690": 196, "9649": [196, 296], "5686": 196, "8602": 196, "0315": 196, "8455": [196, 296], "6027": 196, "4746": 196, "7843": 196, "7782": 196, "2111": 196, "5115": 196, "4687": 196, "5760": 196, "custommodul": 197, "cat": [197, 203, 205, 213, 217, 219, 221, 300], "imaginari": 198, "imagin": 198, "transition_model": 198, "get_reward_oper": 198, "get_transition_model_oper": 198, "min_val": [199, 201], "bias": [199, 286, 289], "_bia": 199, "invert": [200, 291], "surject": 201, "expln": 201, "biased_softplu": [201, 283], "beggin": 201, "biased_softplus_": 201, "syntax": [201, 289], "met": [201, 296], "1602": 202, "01783v2": 202, "entropy_bonu": [202, 204, 214, 216, 291], "favour": [202, 204, 214, 216], "samples_mc_entropi": [202, 204, 214, 216], "mont": [202, 204, 214, 216, 289], "carlo": [202, 204, 214, 216, 289], "entropy_coef": [202, 204, 214, 216, 291, 295], "critic_coef": [202, 204, 214, 216, 291], "loss_critic_typ": [202, 204, 214, 216, 218, 291], "l1": [202, 204, 205, 206, 207, 214, 216, 217, 218, 221, 224, 227, 285, 289], "l2": [202, 204, 205, 206, 207, 210, 211, 214, 216, 217, 218, 221, 224, 227, 289], "smooth_l1": [202, 203, 204, 205, 206, 207, 213, 214, 216, 217, 218, 219, 221, 224, 227, 291], "separate_loss": [202, 204, 205, 207, 213, 214, 216, 217, 218, 219, 221], "propag": [202, 204, 205, 207, 213, 214, 216, 217, 218, 219, 221, 229, 230, 231, 232, 291, 295], "advantage_kei": [202, 204, 214, 216, 218, 229, 230, 231, 232], "value_target_kei": [202, 204, 214, 216, 218, 229, 230, 231, 232, 291], "value_target": [202, 204, 214, 216, 218, 229, 230, 231, 232, 291, 295], "loss_crit": [202, 216, 291, 295], "loss_entropi": [202, 216, 291, 295], "loss_object": [202, 216, 291, 295], "recur": [202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221, 229, 230, 231, 232, 233], "next_reward": [202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221], "next_don": [202, 203, 205, 206, 207, 213, 216, 217, 218, 219, 221], "loss_obj": 202, "sacloss": [202, 212, 220, 283], "select_out_kei": [202, 203, 205, 207, 213, 216, 217, 219, 221], "throughout": [202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 291, 301], "essenti": [202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 227, 290, 296, 298], "make_value_estim": [202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 222, 227, 286, 289, 290, 295], "value_typ": [202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 223, 227, 289], "valueestim": [202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 223, 227, 283, 286, 289, 295], "hyperparam": [202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 289, 296], "enum": [202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 223, 227, 289], "default_value_estim": [202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 289], "refin": [202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227], "default_value_kwarg": [202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 227, 283, 289], "dqnloss": [202, 203, 205, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 227, 272, 283, 286, 290, 292], "dqn_loss": [202, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 218, 219, 221, 222, 227], "conserv": 203, "2006": [203, 296], "04779": 203, "actor_network": [203, 205, 207, 213, 217, 219, 221, 289], "qvalue_network": [203, 207, 213, 217, 219, 221], "loss_funct": [203, 205, 206, 207, 213, 217, 219, 221, 224, 227, 289], "alpha_init": [203, 207, 217, 219], "min_alpha": [203, 207, 217, 219], "max_alpha": [203, 207, 217, 219], "fixed_alpha": [203, 207, 217, 219], "target_entropi": [203, 207, 217, 219], "prod": [203, 219], "n_action": [203, 206, 219], "delay_actor": [203, 205, 219, 221], "delay_qvalu": [203, 207, 217, 219, 221], "min_q_weight": 203, "max_q_backup": 203, "backup": 203, "deterministic_backup": 203, "num_random": 203, "with_lagrang": 203, "lagrang": 203, "lagrange_thresh": 203, "threshold": [203, 204, 291], "valueclass": [203, 205, 207, 213, 217, 219, 221], "qvalu": [203, 207, 213, 217, 219, 221, 274], "loss_actor": [203, 205, 207, 213, 217, 218, 219, 221, 260, 289, 300], "loss_alpha": [203, 207, 217, 219], "loss_alpha_prim": 203, "loss_qvalu": [203, 207, 213, 217, 219, 221], "clip_epsilon": [204, 291, 295], "normalize_advantag": [204, 214, 216, 295], "value_kei": [204, 214, 216, 229, 230, 231, 232, 289], "somemodul": [204, 214, 216], "someactor": [204, 214, 216], "value_head": [204, 214, 216], "somevalu": [204, 214, 216], "loss_modul": [204, 212, 214, 215, 216, 220, 265, 276, 277, 286, 287, 289, 290, 291, 295, 298], "ppoloss": [204, 214, 283], "delay_valu": [205, 206, 208, 218, 219, 227, 290, 292], "loss_valu": [205, 213, 218, 219, 289, 291, 295, 300], "pred_valu": [205, 221, 289, 300], "pred_value_max": [205, 289, 300], "target_valu": [205, 217, 221, 228, 286, 289, 300], "target_value_max": [205, 289, 300], "qvalueactor": [206, 227, 285, 290, 292], "mult_one_hot": [206, 207, 227], "binarydiscretetensorspec": [206, 207, 227, 283], "loss_val": [206, 286, 289, 291, 292, 295, 298], "ste": 207, "num_qvalue_net": [207, 213, 217, 219, 221], "target_entropy_weight": 207, "onehotcategor": [207, 283], "disctount": 208, "distributionalqvalueactor": [208, 285], "input_tensordict": [208, 289], "actor_model": 209, "value_model": [209, 211], "model_based_env": 209, "dreamerenv": [209, 283], "imagination_horizon": 209, "unrol": [209, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246], "discount_loss": [209, 211], "lambda_kl": 210, "lambda_reco": 210, "lambda_reward": 210, "reco_loss": 210, "reward_loss": 210, "free_nat": 210, "nat": 210, "delayed_clamp": 210, "global_averag": 210, "value_loss": 211, "fake_data": 211, "ddpgloss": [212, 220, 277, 283, 289, 300], "td3loss": [212, 220, 283], "value_network_update_interv": 212, "contrast": [212, 298], "06461": 212, "2110": 213, "06169": 213, "expectil": 213, "tau": [213, 220, 289, 290], "antmaz": 213, "sticht": 213, "loss_value_diff": 213, "diff": 213, "old_polici": 214, "new_polici": 214, "adapt": [214, 289, 296], "old": [214, 301], "distanc": [214, 224, 228, 229, 295], "apart": [214, 295], "dtarg": 214, "samples_mc_kl": 214, "analyt": 214, "decrement": 214, "loss_": [215, 260, 286, 289], "equip": [215, 292], "gh": 215, "_acceptedkei": 215, "dataclass": [215, 274], "_forward_value_estimator_kei": 215, "alter": [215, 285], "value_estim": [215, 229, 230, 231, 232, 233, 286, 289, 295], "myloss": 215, "action2": 215, "convert_to_funct": [215, 289], "expand_dim": 215, "create_target_param": [215, 289], "compare_against": [215, 289], "funs_to_decor": 215, "stuctur": 215, "_param": 215, "expans": 215, "resampl": 215, "_target_param": 215, "valueestimatorbas": [215, 283], "blend": 215, "upcom": [215, 238, 239, 240, 241, 243, 244, 245, 246, 289], "proxim": [216, 291, 295], "optimis": [216, 261, 291, 295], "flavour": [216, 295, 300], "clipppoloss": [216, 283, 291, 295], "klpenppoloss": [216, 283], "regularis": 216, "06347": 216, "gae": [216, 283, 286, 289, 291, 295], "ppo_loss": 216, "tdlambda": [216, 223, 286, 289], "base_lay": 216, "randn_lik": 216, "samplelogprob": 216, "openreview": [217, 274], "ay8zfzm0tdd": [217, 274], "sub_sample_len": 217, "subsampl": [217, 256, 287], "action_log_prob_actor": 217, "state_action_value_actor": [217, 221], "connectionist": 218, "1992": 218, "doi": 218, "1007": 218, "bf00992696": 218, "actor_net": [218, 289, 291], "1801": 219, "01290": 219, "applic": [219, 227, 296], "1812": 219, "05905": 219, "redqloss": [220, 283], "math": 220, "theta_t": [220, 296], "theta_": [220, 296], "polyak": 220, "policy_nois": 221, "noise_clip": 221, "next_state_valu": [221, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 283], "td0": [222, 289], "v2": [224, 238, 239, 240, 241, 243, 244, 245, 246, 274], "strict_shap": 224, "view_a": 224, "qmixer": [227, 283], "local_valu": 227, "visibl": [227, 295], "dafault": 227, "acceptedkei": 227, "global_valu": 227, "premad": 227, "penultim": 227, "local_value_network": 227, "mixer_network": 227, "suggest": [227, 295], "value_modul": [227, 291, 300], "qnet": [227, 289], "next_val_kei": 228, "pred_next_v": 228, "usus": 228, "mse": 228, "q_valu": 228, "n_steps_to_next": 228, "value_next_st": 228, "1506": [229, 234, 242], "02438": [229, 234, 242], "exponenti": [229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 263], "average_ga": [229, 291], "skip_exist": [229, 230, 231, 232], "advang": 229, "gradient_mod": 229, "value_error": [229, 230, 231, 232, 233], "sign": 229, "unused_arg": 229, "target_param": [229, 230, 231, 232, 233, 289, 295], "98": [229, 230, 231, 232, 290, 295, 296, 297, 298], "94": [229, 232, 289, 290, 292, 296], "unpack": [229, 230, 231, 232], "tensor_kei": [229, 230, 231, 232, 233], "next_valu": [229, 230, 231, 232, 233], "aka": [230, 290], "average_reward": [230, 231, 232], "tdestim": [230, 231, 233], "infti": 231, "valuefunctionbas": 233, "time_dim": [234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246], "old_stat": [234, 236, 238, 240, 242, 243, 245], "new_stat": [234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "rolling_gamma": [238, 239, 240, 241, 243, 244, 245, 246], "g1": [238, 239, 240, 241, 243, 244, 245, 246], "g2": [238, 239, 240, 241, 243, 244, 245, 246], "g3": [238, 239, 240, 241, 243, 244, 245, 246], "g4": [238, 239, 240, 241, 243, 244, 245, 246], "v3": [238, 239, 240, 241, 243, 244, 245, 246], "v4": [238, 239, 240, 241, 243, 244, 245, 246, 289, 291, 297], "out_file_bas": 247, "skip_reset": 247, "dump": 247, "interv": [247, 248, 257, 267, 290, 296], "center_crop": 248, "make_grid": 248, "Will": 248, "grid": 248, "exp_nam": [249, 250, 253, 254, 255, 277, 290], "log_dir": [249, 250, 252, 254, 290], "templat": 249, "csv": [250, 252, 290], "minim": [250, 298], "dependeci": 250, "experiment_nam": [251, 252], "uuid": [251, 290, 301], "date": 251, "logger_typ": 252, "logger_nam": 252, "tensorboard": [252, 254, 300], "wandb": [252, 255, 300], "mlflow": [252, 253], "wandb_kwarg": 252, "mlflow_kwarg": 252, "tracking_uri": 253, "uri": 253, "datastor": 253, "tb_log": 254, "tensoarboard": 254, "sub_traj_len": 256, "min_sub_traj_len": 256, "register_op": [256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 287, 290], "process_optim_batch": [256, 262, 263, 287], "td_out": [256, 264], "_process_optim_batch_hook": [256, 287], "batch_subsampl": 256, "clear_cuda": 257, "pre_optim_step": [257, 287], "counter": [258, 287], "log_pbar": [258, 259, 261, 263, 287, 290], "progress": [258, 259, 261, 265, 287, 290, 292, 301], "count_fram": 258, "pre_steps_log": [258, 259, 287], "count_frames_log": 258, "lognam": 259, "r_train": [259, 290], "log_reward": [259, 290], "loss_compon": 260, "appl": 260, "omit": [260, 291, 296, 298], "optimizer_hook": 260, "record_interv": [261, 289, 290], "record_fram": [261, 268, 289, 290], "policy_explor": [261, 277, 289, 290], "log_kei": [261, 290], "suffix": 261, "underestim": 261, "suppos": [261, 287, 301], "set_exploration_typ": [261, 283, 291, 292, 300], "r_evalu": [261, 289], "flatten_tensordict": [262, 290], "max_dim": 262, "rb_trainer": 262, "batch_process": [262, 263, 264, 287], "post_loss": [262, 287], "999": [263, 290], "jitter": 263, "finfo": 263, "default_dtyp": 263, "get_default_dtyp": 263, "reward_norm": 263, "update_reward_stat": 263, "normalize_reward": 263, "make_train": [264, 283], "_process_batch_hook": [264, 287], "select_kei": [264, 287], "versatil": 265, "lossmodul": [265, 276, 277, 283], "optim_steps_per_batch": [265, 287, 290], "epoch": [265, 291, 295], "clip_grad_norm": 265, "partial": [265, 292], "clip_norm": 265, "progress_bar": 265, "tqdm": [265, 289, 291, 292, 295, 296], "save_trainer_interv": 265, "disk": [265, 287, 289, 290, 292, 298], "log_interv": [265, 290], "save_trainer_fil": [265, 287], "datacollectorbas": [267, 270, 271, 277, 283], "update_weights_interv": [267, 290], "sit": [267, 290], "update_weight": 267, "post_step": [267, 287], "cfg": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281], "dictconfig": [268, 269, 270, 271, 274, 275, 276, 277, 278, 281], "divid": [268, 285, 289, 295, 296], "unknowingli": 268, "annealing_fram": [268, 289], "init_env_step": [268, 269, 289], "proof_environ": [269, 274, 289], "sta": 269, "ot": 269, "actor_model_explor": [270, 271, 289], "make_env_kwarg": [270, 271], "targetnetupdat": [272, 273, 276, 277], "redqloss_deprec": 273, "actor_net_kwarg": 274, "qvalue_net_kwarg": 274, "observation_kei": 274, "dummi": [274, 289, 301], "parser_env_arg": 274, "parser_model_args_continu": 274, "cattensor": [274, 289, 294, 296, 301], "hydra": 274, "config_stor": 274, "configstor": 274, "halfcheetah": [274, 289], "config_field": 274, "config_cl": 274, "redqmodelconfig": 274, "envconfig": 274, "make_dataclass": 274, "cls_name": 274, "cs": 274, "config_path": 274, "config_nam": 274, "17": [274, 289, 290, 296, 297, 299], "replayargsconfig": 275, "target_net_updat": [277, 289, 290], "constitu": 277, "learnt": [277, 289, 291], "tensorboardlogg": [277, 283], "egreedywrapp": [277, 290, 292], "env_proof": 277, "obs_spec": 277, "net_valu": 277, "dir": [277, 287, 290], "gettempdir": 277, "argpars": [278, 281], "namespac": [278, 281], "parser": [278, 281], "transformed_env_constructor": [278, 283], "num_env_per_collector": [279, 280], "video_tag": 281, "norm_obs_onli": 281, "use_env_cr": 281, "custom_env_mak": 281, "custom_env": 281, "return_transformed_env": 281, "action_dim_gsd": 281, "state_dim_gsd": 281, "obs_norm_state_dict": 281, "wheter": 281, "maker": 281, "asyncdatacollector": 283, "distributedsyncdatacollector": 283, "submitit_delayed_launch": 283, "raycollector": 283, "samplerwithoutreplac": [283, 291, 295, 298], "tensorstorag": 283, "tensordictroundrobinwrit": 283, "d4rlexperiencereplai": 283, "openmlexperiencereplai": 283, "unboundeddiscretetensorspec": [283, 291, 301], "lazystackedtensorspec": 283, "lazystackedcompositespec": 283, "prompttensordicttoken": 283, "rolloutfrommodel": 283, "tokenizeddatasetload": 283, "create_infinite_iter": 283, "consolidate_spec": 283, "check_no_exclusive_kei": 283, "contains_lazy_spec": 283, "tensordictrecord": 283, "videorecord": [283, 291], "get_available_librari": 283, "set_exploration_mod": 283, "make_composite_from_td": [283, 296], "braxwrapp": 283, "dmcontrolenv": [283, 289, 294, 301], "dmcontrolwrapp": 283, "mogymenv": 283, "mogymwrapp": 283, "jumanjienv": 283, "jumanjiwrapp": 283, "openmlenv": 283, "vmaswrapp": 283, "qvaluehook": 283, "distributionalqvaluehook": 283, "reset_nois": 283, "cemplann": 283, "mpcplannerbas": 283, "mppiplann": 283, "independentnorm": 283, "truncatednorm": 283, "tanhdelta": [283, 289], "maskedcategor": 283, "inv_softplu": 283, "vmapmodul": 283, "distributionaldqnloss": [283, 290], "discretesacloss": 283, "iqlloss": 283, "cqlloss": 283, "a2closs": 283, "reinforceloss": 283, "dreameractorloss": 283, "dreamermodelloss": 283, "dreamervalueloss": 283, "td0estim": [283, 289], "td1estim": [283, 289], "td0_return_estim": 283, "td0_advantage_estim": 283, "td1_return_estim": 283, "vec_td1_return_estim": 283, "td1_advantage_estim": 283, "vec_td1_advantage_estim": 283, "td_lambda_return_estim": 283, "vec_td_lambda_return_estim": 283, "td_lambda_advantage_estim": 283, "vec_td_lambda_advantage_estim": 283, "generalized_advantage_estim": 283, "vec_generalized_advantage_estim": 283, "reward2go": 283, "distance_loss": [283, 289], "hold_out_net": 283, "hold_out_param": [283, 289], "softupd": [283, 289, 290, 292], "hardupd": [283, 289], "batchsubsampl": [283, 287], "clearcudacach": 283, "countframeslog": 283, "logreward": [283, 287, 290], "optimizerhook": [283, 290], "replaybuffertrain": [283, 287, 290], "rewardnorm": 283, "selectkei": [283, 287], "trainerhookbas": [283, 287, 290], "updateweight": [283, 287, 290], "make_collector_offpolici": 283, "make_collector_onpolici": 283, "make_dqn_loss": 283, "make_redq_loss": 283, "make_redq_model": 283, "make_replay_buff": [283, 289], "make_target_updat": 283, "parallel_env_constructor": [283, 289], "sync_async_collector": 283, "sync_sync_collector": 283, "correct_for_frame_skip": 283, "get_stats_random_rollout": 283, "csvlogger": [283, 290], "mlflowlogg": 283, "wandblogg": 283, "get_logg": 283, "generate_exp_nam": 283, "journei": 284, "textbook": 284, "highlight": 284, "ever": [284, 295], "bump": 284, "think": [284, 291, 295, 301], "benefit": [284, 295, 298], "pr": 284, "ground": [285, 289, 296], "categori": [285, 287], "recycl": [285, 298], "impos": 285, "violat": 285, "noisier": 285, "Their": [285, 295], "sd": 285, "prob_modul": 285, "pick": [285, 289, 290], "tabl": [285, 290], "customari": 285, "hopefulli": [285, 290], "mathbb": [285, 290], "rightarrow": [285, 290], "soften": 285, "backbon": [285, 292, 294, 300], "make_actor": 285, "make_valu": 285, "shared_param": 285, "make_common": 285, "reusabl": [286, 289, 298], "swappabl": [286, 289], "characterist": [286, 289, 296], "trainabl": [286, 289, 297], "whatev": [286, 289], "convent": [286, 289, 292, 295, 296], "smth": [286, 289], "metric": [286, 289], "nutshel": [286, 289], "barto": [286, 295], "chapter": 286, "proxi": 286, "significantli": [286, 289, 290, 295], "next_stat": 286, "value_net_loss": 286, "pow": [286, 289], "therebi": 286, "room": 286, "convers": 286, "signifi": [286, 295], "underperform": 286, "thin": 286, "intric": 286, "outer": [287, 289, 290, 301], "believ": 287, "scheme": [287, 301], "substenti": 287, "_pre_steps_log_hook": 287, "_pre_optim_hook": 287, "sub_batch": 287, "_post_loss_hook": 287, "_post_optim_hook": 287, "post_optim": [287, 290], "_post_optim_log": 287, "post_optim_log": 287, "_post_steps_hook": 287, "_post_steps_log_hook": 287, "post_steps_log": 287, "comment": [287, 290, 300], "extens": [287, 298], "reserv": 287, "logginghook": 287, "logging_hook": 287, "save_dict": 287, "some_valu": 287, "torchsnapshot": 287, "ckpt_backend": 287, "pt": [287, 297], "filepath": 287, "save_train": 287, "load_from_fil": 287, "perfectli": [287, 289, 296], "intern": 288, "author": [289, 290, 291, 292, 295, 296, 298], "vincent": [289, 290, 291, 292, 296, 298], "moen": [289, 290, 291, 292, 296, 298], "assembl": 289, "focus": 289, "straightforward": [289, 290, 298], "overview": [289, 291, 295, 300], "transpar": [289, 292], "understood": 289, "sota": [289, 290, 300], "illustr": [289, 290, 298], "device_count": [289, 290, 292, 297, 301], "loss_dict": 289, "modal": 289, "oblivi": [289, 291, 298], "elementari": 289, "didact": 289, "dilut": 289, "pessimist": [289, 290, 291], "target_actor_network_param": 289, "actor_in_kei": 289, "actor_crit": 289, "noth": [289, 291], "compromis": 289, "hp": 289, "hasattr": 289, "_value_estim": 289, "elif": [289, 290], "notimplementederror": 289, "unknown": 289, "_loss_actor": 289, "td_copi": 289, "actor_network_param": 289, "value_network_param": 289, "_loss_valu": 289, "pred_val": 289, "target_value_network_param": 289, "smooth": [289, 290], "loss_funt": 289, "glue": 289, "_forward": 289, "ndimens": 289, "remaind": 289, "focu": [289, 290, 291], "pixels_onli": [289, 290, 300, 301], "env_librari": 289, "env_task": 289, "env_arg": 289, "friendli": 289, "torchr": 289, "rescal": 289, "presum": 289, "leav": 289, "make_transformed_env": 289, "reward_sc": 289, "double_to_float_list": 289, "double_to_float_inv_list": 289, "marker": 289, "leverag": [289, 295, 301], "env_per_collector": 289, "transform_state_dict": 289, "make_t_env": 289, "parallel_env": [289, 300, 301], "adjust": [289, 295, 296], "seem": [289, 292], "cheat": 289, "10m": 289, "cautiou": 289, "deal": [289, 291, 295, 298], "magnitud": 289, "thousand": [289, 292], "get_env_stat": 289, "proof_env": 289, "5000": [289, 290, 291], "maxim": [289, 296], "recal": [289, 291], "ddpgmlpactor": 289, "ddpgmlpqnet": 289, "materi": 289, "ornsteinuhlenbeckprocesswrapp": 289, "make_ddpg_actor": 289, "q_net": 289, "moduless": 289, "sugges": 289, "1_000_000": [289, 292], "tight": 289, "10_000": [289, 291, 298], "traj_len": [289, 292], "make_record": 289, "recorder_obj": 289, "flavor": 289, "circular": 289, "buffer_s": [289, 290], "random_crop_len": 289, "prb": 289, "buffer_scratch_dir": 289, "temporari": 289, "dirrectori": 289, "trajecotri": 289, "25": [289, 290, 296], "sampel": 289, "dataflow": 289, "ceil_div": 289, "utd": [289, 292], "update_to_data": 289, "realiz": 289, "_must_": 289, "001": [289, 296], "outdat": 289, "trick": [289, 290], "despit": 289, "adam": [289, 290, 291, 292, 295, 296], "optimizer_actor": 289, "lr": [289, 290, 291, 292, 295, 296], "weight_decai": [289, 290], "optimizer_valu": 289, "total_collection_step": 289, "pretti": [289, 298], "rewards_ev": 289, "collected_fram": 289, "pbar": [289, 291, 292, 295, 296], "r0": 289, "numel": [289, 291, 292, 297, 298], "current_fram": 289, "sampled_tensordict": 289, "gn1": 289, "clip_grad_norm_": [289, 291, 295, 296], "gn2": 289, "gn": [289, 296], "td_record": 289, "rn": 289, "rs": 289, "set_descript": [289, 291, 292, 295, 296], "2f": 289, "00": [289, 290, 291, 292, 295, 296, 297, 299], "800": [289, 290], "04": [289, 290, 296, 297, 299], "1915": [289, 296], "76it": [289, 290], "1600": [289, 290], "02": [289, 290, 291, 295, 296, 297, 299], "649": 289, "71it": [289, 290, 296], "3200": [289, 290], "05": [289, 290, 291, 296, 297], "1347": 289, "77it": [289, 290], "48": [289, 290, 292, 295, 296, 297], "4800": [289, 290, 296], "1940": 289, "68it": [289, 290, 291], "51": [289, 290, 296, 298], "55": [289, 290, 296, 299], "150": [289, 292, 296], "367": [289, 291, 296], "79": [289, 290, 296], "56": [289, 290, 295, 296], "5600": 289, "6400": [289, 300], "1170": 289, "51it": [289, 290, 296], "72": [289, 290, 296], "68": [289, 290, 296], "187": [289, 296], "307": [289, 296], "74": [289, 290, 296, 297], "09": [289, 290, 296], "7200": 289, "07it": [289, 296], "88": [289, 290, 296, 297, 298], "45": [289, 290, 296, 297, 298, 299], "264": [289, 296], "58": [289, 290, 292, 296, 297], "41": [289, 290, 295, 296, 297], "28": [289, 290, 296, 297, 299], "80": [289, 290, 291, 295, 296, 297], "8000": [289, 291], "473": [289, 296], "79it": [289, 290], "52": [289, 290, 294, 296, 297, 299], "249": [289, 296], "59": [289, 290, 292, 296, 297], "8800": 289, "427": [289, 296], "84": [289, 290, 292, 296], "259": [289, 296], "31": [289, 290, 292, 295, 296, 297], "296": [289, 296], "86": [289, 290, 296], "96": [289, 290, 296, 297], "9600": 289, "341": [289, 296], "15it": [289, 290], "40": [289, 290, 291, 295, 296], "90": [289, 290, 291, 295, 296, 298], "278": [289, 296], "77": [289, 290, 296, 297], "325": [289, 296], "82": [289, 290, 291, 296, 297, 298], "22": [289, 290, 291, 296], "10400it": 289, "273": [289, 296], "90it": [289, 296], "206": [289, 296], "190": [289, 296], "60": [289, 290, 291, 295, 296, 297, 300], "21": [289, 290, 291, 294, 295, 296, 299], "plot": [289, 291, 292, 295, 296], "mention": [289, 292, 298, 301], "matplotlib": [289, 291, 292, 295, 296, 298, 301], "pyplot": [289, 291, 292, 295, 296, 298, 301], "plt": [289, 291, 292, 295, 296, 298, 301], "zip": [289, 293], "legend": 289, "xlabel": [289, 292, 295, 296], "ylabel": [289, 295], "tight_layout": 289, "concret": [289, 291], "takeawai": [289, 290], "minut": [289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "980": [289, 299], "mb": [289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301], "coding_ddpg": [289, 299], "jupyt": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301], "ipynb": [289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301], "galleri": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301], "sphinx": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301], "customis": [290, 295], "road": 290, "aspect": 290, "did": [290, 291, 298, 301], "highest": 290, "prerequisit": 290, "familiar": [290, 295, 301], "lookup": 290, "amort": [290, 291], "cart": 290, "pole": 290, "un": 290, "actuat": 290, "frictionless": 290, "upright": [290, 301], "duelingcnndqnet": 290, "is_notebook": 290, "shell": 290, "get_ipython": 290, "__class__": 290, "zmqinteractiveshel": 290, "qtconsol": 290, "terminalinteractiveshel": 290, "ipython": [290, 295, 296], "nameerror": 290, "interpret": 290, "umbrella": 290, "misplac": 290, "misus": 290, "orchestr": 290, "everyth": [290, 292], "five": [290, 291], "64x64": 290, "motion": [290, 296], "obs_norm_sd": 290, "simpler": 290, "get_norm_stat": 290, "test_env": 290, "make_model": 290, "dummy_env": 290, "output_s": [290, 292], "init_bia": 290, "actor_explor": 290, "eps_greedy_v": 290, "eps_greedy_val_env": 290, "get_replay_buff": 290, "n_optim": 290, "themselv": 290, "simplic": [290, 291, 297, 298], "get_collector": 290, "data_collector": 290, "bunch": 290, "concept": [290, 298], "power": 290, "ubiquit": 290, "get_loss_modul": 290, "target_updat": 290, "995": [290, 296], "sensit": 290, "variat": 290, "2e": [290, 296], "wd": 290, "upd": 290, "harder": [290, 300], "5_000": 290, "500000": 290, "100000": 290, "005": 290, "mandatori": [290, 291, 295, 296], "fairer": 290, "budget": [290, 291], "dqn_exp_": 290, "uuid1": [290, 301], "9895": 290, "0737": 290, "tmp": [290, 298], "tmpzns_rhf5": 290, "dqn_exp_aecc8db2": 290, "470d": 290, "11ee": [290, 301], "9035": [290, 301], "0242ac120002": [290, 301], "registr": 290, "cumbersom": 290, "buffer_hook": 290, "weight_updat": 290, "descript": [290, 291], "aliv": 290, "06it": [290, 296], "4045": 290, "9259": 290, "87it": 290, "4074": [290, 296], "70it": 290, "54": [290, 296, 297, 298], "53it": 290, "4345": 290, "160": [290, 296, 301], "3560": 290, "192": [290, 296], "57": [290, 296, 297], "04it": [290, 296], "224": [290, 296], "40it": 290, "3650": 290, "288": [290, 296], "53": [290, 296, 297, 298], "47it": 290, "4676": 290, "320": [290, 296, 301], "4434": 290, "352": [290, 296], "69it": 290, "4224": 290, "384": [290, 296], "28it": 290, "4497": 290, "416": [290, 296], "48it": 290, "4314": 290, "448": [290, 296], "94it": [290, 292], "480": [290, 296, 297], "4526": 290, "19": [290, 291, 292, 296, 299, 300], "61it": [290, 296], "544": [290, 296], "85it": 290, "576": [290, 296], "64it": 290, "4164": [290, 296], "608": [290, 296], "67it": 290, "3619": 290, "640": 290, "99it": [290, 296], "672": 290, "66it": 290, "704": 290, "3621": 290, "736": 290, "03it": [290, 296], "768": 290, "97it": [290, 296], "4134": 290, "4948": 290, "832": 290, "864": 290, "43it": [290, 296], "896": 290, "928": 290, "58it": 290, "960": 290, "81it": 290, "992": [290, 296], "62it": 290, "60it": [290, 291], "1056": 290, "18it": 290, "1088": 290, "17it": [290, 291], "1120": 290, "4375": [290, 296], "1152": 290, "1184": 290, "07": [290, 292, 295, 296], "1216": 290, "72it": 290, "1248": 290, "4404": 290, "1280": 290, "82it": [290, 296], "38it": [290, 296], "1344": 290, "62": [290, 296, 297], "00it": [290, 296], "1376": 290, "4254": [290, 296], "1408": 290, "1440": 290, "36": [290, 292, 296, 299], "1472": 290, "1504": 290, "37": [290, 295, 296, 297], "73it": [290, 291], "1536": 290, "36it": 290, "1568": 290, "83it": 290, "39": [290, 292, 296, 297, 298, 299, 301], "05it": [290, 296], "1632": 290, "1696": 290, "63it": 290, "1728": 290, "4645": 290, "1760": 290, "1792": 290, "1824": 290, "43": [290, 291, 296, 297, 298], "02it": [290, 296], "1856": 290, "1888": 290, "65it": [290, 296], "1920": 290, "16it": 290, "1952": 290, "46it": 290, "1984": 290, "2016": 290, "32it": 290, "2048": [290, 297], "47": [290, 296, 297], "75it": 290, "2080": [290, 292], "2112": [290, 296], "14it": [290, 296], "2144": 290, "29it": 290, "2176": 290, "49": [290, 295, 296, 297], "80it": [290, 296], "2208": 290, "2240": 290, "2272": 290, "2304": 290, "4797": 290, "2336": 290, "57it": [290, 296], "2368": 290, "52it": 290, "2400": 290, "98it": [290, 296], "2432": 290, "2464": 290, "95it": [290, 296], "2496": 290, "2528": [290, 296], "2560": 290, "2592": 290, "89it": [290, 296], "2624": 290, "2656": [290, 296], "56it": 290, "2688": 290, "84it": [290, 296], "2720": [290, 296], "2752": 290, "33it": 290, "2784": 290, "2816": 290, "19it": [290, 296], "2848": 290, "37it": [290, 292], "4586": 290, "2880": 290, "2912": 290, "88it": [290, 296], "2944": [290, 296], "24it": [290, 292], "2976": [290, 296], "3008": 290, "61": [290, 296, 297], "3040": 290, "3072": 290, "3104": 290, "10it": [290, 291], "63": [290, 296, 297], "3136": 290, "3168": 290, "30it": [290, 291], "65": [290, 292, 296, 297], "3232": [290, 296], "35it": 290, "3264": 290, "78it": 290, "66": [290, 296, 297], "3296": 290, "67": [290, 294, 296, 297], "3328": 290, "3360": 290, "3392": 290, "92it": [290, 296], "3424": 290, "21it": 290, "69": [290, 296], "3456": [290, 296], "59it": 290, "70": [290, 291, 295, 296, 297, 298], "3488": 290, "50it": 290, "3520": 290, "71": [290, 296, 297], "3552": 290, "44it": 290, "3584": 290, "4252": 290, "3616": 290, "73": [290, 296, 297], "3648": 290, "3680": 290, "3712": 290, "25it": 290, "75": [290, 296, 297], "3744": 290, "76": [290, 296, 298], "3776": 290, "74it": [290, 296], "3808": 290, "3840": 290, "49it": 290, "3872": 290, "78": [290, 296, 297], "3904": 290, "3936": 290, "08it": [290, 296], "3968": 290, "4000": [290, 291], "12it": 290, "4032": 290, "4064": 290, "4096": 290, "91it": [290, 296], "83": [290, 296, 297], "4128": [290, 296], "4160": 290, "4192": 290, "13it": 290, "85": [290, 292, 296, 297], "4256": [290, 296], "01it": [290, 296], "4288": [290, 296], "4320": 290, "93it": 290, "4352": 290, "4384": 290, "4416": 290, "89": [290, 296, 298], "4448": 290, "22it": 290, "4480": 290, "4512": 290, "91": [290, 296], "4544": 290, "92": [290, 296, 297], "4576": 290, "55it": 290, "4608": 290, "93": [290, 296], "4640": 290, "4672": [290, 296], "4704": 290, "4736": 290, "4768": 290, "41it": 290, "97": [290, 295, 296, 297], "4832": 290, "4864": 290, "4896": 290, "4928": 290, "4960": 290, "4992": 290, "5024it": 290, "quickli": [290, 295, 301], "print_csv_files_in_fold": 290, "folder_path": 290, "csv_file": 290, "output_str": 290, "dirpath": 290, "walk": [290, 294, 301], "endswith": 290, "strip": 290, "45262259244918823": 290, "44965070486068726": 290, "4676021933555603": 290, "4948333501815796": 290, "47967082262039185": 290, "4796708822250366": 290, "42520856857299805": 290, "32233989238739014": 290, "22134537994861603": 290, "3427972197532654": 290, "2554507851600647": 290, "4931257963180542": 290, "4076758623123169": 290, "45577555894851685": 290, "5912423133850098": 290, "5983486771583557": 290, "grad_norm_0": 290, "7387335300445557": 290, "264819622039795": 290, "6968882083892822": 290, "5232300758361816": 290, "100531578063965": 290, "142391204833984": 290, "462640762329102": 290, "759220838546753": 290, "8896870613098145": 290, "10000000894069672": 290, "qvaluenetwork": 290, "worst": 290, "accuraci": 290, "fanci": 290, "761": [290, 296, 299], "coding_dqn": [290, 299], "demonstr": [291, 295, 296, 301], "talk": 291, "repetit": 291, "six": 291, "sophist": [291, 295], "invent": 291, "theta_k": 291, "frac": 291, "pi_": 291, "exceed": 291, "discourag": [291, 296], "indispens": 291, "analyz": 291, "lingua": 291, "franca": 291, "defaultdict": [291, 296], "has_cuda": [291, 295, 301], "3e": [291, 292, 295], "max_grad_norm": [291, 295], "big": [291, 298, 301], "ourselv": [291, 301], "benefici": 291, "errat": 291, "hamper": [291, 298], "reactiv": 291, "xy": 291, "sub_batch_s": 291, "num_epoch": [291, 295], "entropy_ep": [291, 295], "generalist": 291, "interchang": [291, 297, 298], "panel": 291, "charact": 291, "inverteddoublependulum": 291, "transmit": 291, "stai": 291, "thumb": 291, "supplementari": [291, 301], "told": 291, "stringent": [291, 295], "nevertheless": [291, 298], "confid": [291, 295], "pack": [291, 301], "ran": 291, "f_": 291, "mu_": 291, "difficulti": [291, 301], "brought": [291, 292], "scrictli": 291, "d_ob": 291, "d_action": 291, "policy_modul": [291, 295], "That": 291, "said": 291, "briefli": [291, 295], "refil": [291, 295], "capac": 291, "conveni": [291, 295, 296], "easiest": [291, 295], "mathemat": [291, 295], "tradeoff": [291, 295], "advantage_modul": 291, "lr_schedul": [291, 296], "cosineannealinglr": [291, 296], "eval_str": 291, "tensordict_data": [291, 295], "data_view": [291, 295], "subdata": [291, 295], "cum_reward_str": 291, "4f": [291, 292, 296], "stepcount_str": 291, "param_group": 291, "lr_str": 291, "eval_rollout": 291, "nice": 291, "361": [291, 296], "0901": 291, "0894": [291, 296], "0003": [291, 296], "54it": 291, "1077": 291, "3000": 291, "364": [291, 296], "1501": 291, "366": [291, 296], "45it": 291, "1951": [291, 296], "0002": [291, 296], "368": [291, 296], "2066": 291, "6000": 291, "363": [291, 296], "2222": 291, "7000": 291, "2224": 291, "370": [291, 296], "20it": 291, "2378": 291, "9000": 291, "372": [291, 296], "2522": 291, "374": [291, 296], "96it": [291, 296], "2530": 291, "cap": [291, 298], "figsiz": [291, 296], "subplot": [291, 296, 301], "titl": [291, 292, 295, 296], "bit": [291, 292, 295, 298], "954": [291, 299], "coding_ppo": [291, 299], "rnn": 292, "lstmmodul": 292, "84x84": 292, "accessori": 292, "stamp": 292, "tensordictprim": 292, "se": 292, "flank": 292, "assist": 292, "emb": 292, "n_cell": 292, "customiz": 292, "almost": 292, "bidirect": 292, "wouldn": 292, "make_tensordict_prim": 292, "interpolationmod": 292, "qval": 292, "stoch_polici": 292, "cudnn": 292, "opportun": 292, "coupl": [292, 296, 298], "uniniti": 292, "again": [292, 295, 297, 298, 301], "redund": 292, "strongli": 292, "million": 292, "sake": [292, 297, 298], "20_000": [292, 296], "longest": 292, "npai": 292, "recurrent_st": 292, "action_spread": 292, "1000000": 292, "102": [292, 296], "0011": [292, 296], "0009": [292, 296], "26it": 292, "0007": [292, 296], "0010": [292, 296], "354": [292, 296, 299], "dqn_with_rnn": [292, 299], "tutorials_python": 293, "tutorials_jupyt": 293, "distinct": 294, "humanoid": [294, 301], "env1_obs_kei": 294, "observation_stand": 294, "env2_obs_kei": 294, "observation_walk": 294, "tdreset1": 294, "tdreset2": 294, "tdreset": 294, "policy_common": 294, "policy_stand": 294, "policy_walk": 294, "But": 294, "exclusive_field": [294, 300], "stack_dim": [294, 300], "env1_mak": 294, "env2_mak": 294, "_single_task": 294, "td_rollout": 294, "487": [294, 296, 299], "multi_task": [294, 299], "matteo": 295, "bettini": 295, "marl": 295, "maddpg": 295, "navig": 295, "lidar": 295, "sensor": 295, "collis": 295, "tie": 295, "mappo": 295, "ippo": 295, "phase": [295, 298], "mathbf": 295, "pi": [295, 296], "_t": [295, 296], "fed": [295, 298], "approxim": [295, 301], "decentralis": 295, "literatur": 295, "overcom": 295, "stationari": 295, "concurr": 295, "analys": 295, "gui": 295, "visualis": 295, "rewardsum": 295, "multiagentmlp": 295, "divic": 295, "vmas_devic": 295, "6_000": 295, "team": [295, 300], "n_iter": 295, "minibatch_s": 295, "generalis": 295, "furthermor": 295, "simd": 295, "parallelis": 295, "warp": 295, "todai": 295, "circl": 295, "surround": 295, "dot": [295, 296], "collid": 295, "drag": 295, "elast": 295, "acceler": 295, "penalis": 295, "num_vmas_env": 295, "scenario_nam": 295, "four": [295, 296], "environmnet": 295, "final_rew": 295, "agent_collis": 295, "full_action_spec": 295, "full_reward_spec": 295, "full_done_spec": 295, "enviorn": 295, "stress": 295, "paramount": 295, "episode_reward": 295, "n_rollout_step": 295, "evolut": 295, "yourself": 295, "utilis": 295, "n_actions_per_ag": 295, "n_obs_per_ag": 295, "share_parameters_polici": 295, "policy_net": 295, "denot": 295, "unbatched_action_spec": 295, "carefulli": [295, 301], "grant": 295, "converg": 295, "cooper": 295, "share_parameters_crit": 295, "critic_net": 295, "fantast": 295, "minibatch": 295, "desc": 295, "episode_reward_mean": 295, "episode_reward_mean_list": 295, "critic_param": 295, "target_critic_param": 295, "refresh": 295, "3390621244907379": 295, "1457589715719223": 295, "0210180282592773": 295, "5489939451217651": 295, "7553492784500122": 295, "2441396713256836": 295, "5985326766967773": 295, "5103886127471924": 295, "7321016788482666": 295, "9089064598083496": 295, "xvfb": 295, "pyvirtualdisplai": 295, "1400": [295, 296], "900": 295, "pil": 295, "rendering_callback": 295, "fromarrai": 295, "rgb_arrai": [295, 296], "gif": 295, "save_al": 295, "append_imag": 295, "profici": 295, "master": 295, "478": [295, 296, 299], "multiagent_ppo": [295, 299], "freeli": 296, "sep": 296, "touch": 296, "undertaken": 296, "broader": 296, "challeng": [296, 297], "wider": 296, "algebra": 296, "acquaint": 296, "avenu": 296, "_apply_to_composit": 296, "default_x": 296, "default_i": 296, "torqu": 296, "upward": 296, "angular": 296, "sin": 296, "rad": 296, "sec": 296, "gravit": 296, "angl": 296, "deleg": 296, "new_th": 296, "new_thdot": 296, "thdot": 296, "g_forc": 296, "max_torqu": 296, "angle_norm": 296, "max_spe": 296, "zeros_lik": 296, "albeit": 296, "is_empti": 296, "gen_param": 296, "high_th": 296, "high_thdot": 296, "low_th": 296, "low_thdot": 296, "rng": 296, "lazili": 296, "trivial": 296, "neither": 296, "shortcut": [296, 301], "irrelev": 296, "_make_spec": 296, "td_param": 296, "commong": 296, "pseudo": 296, "render_mod": 296, "render_fp": 296, "random_": 296, "_make_step": 296, "staticmethod": 296, "complic": [296, 298, 301], "showcas": 296, "skeleton": 296, "_apply_transform": [296, 301], "_inv_apply_transform": [296, 301], "subset": [296, 297], "unitari": 296, "sine": 296, "cosin": 296, "sintransform": 296, "costransform": 296, "t_sin": 296, "t_co": 296, "cat_transform": 296, "mdp": 296, "convin": 296, "simple_rollout": 296, "_data": 296, "unexplor": 296, "assumpt": [296, 298], "recreat": 296, "init_td": 296, "traj_return": 296, "last_reward": 296, "is_ipython": 296, "inlin": 296, "get_backend": 296, "ion": 296, "gcf": 296, "clear_output": 296, "625": 296, "0488": 296, "0748": 296, "519": [296, 297, 299], "0499": 296, "4472": 296, "073": 296, "0685": 296, "0408": 296, "552": 296, "5154": 296, "9086": 296, "527": 296, "9385": 296, "155": [296, 298], "2568": 296, "4981": 296, "223": 296, "8929": 296, "4491": 296, "581": 296, "3233": 296, "0664": 296, "596": 296, "1021": 296, "5263": 296, "9579": 296, "5807": 296, "8075": 296, "212": 296, "2009": 296, "5525": 296, "914": 296, "2894": 296, "0115": 296, "0977": 296, "1845": 296, "1830": 296, "4858": 296, "233": 296, "2863": 296, "0297": 296, "464": 296, "4617": 296, "5997": 296, "904": 296, "1647": 296, "0777": 296, "901": 296, "4709": 296, "6813": 296, "8317": 296, "3221": 296, "5554": 296, "276": 296, "3353": 296, "701": 296, "8570": 296, "6656": 296, "463": 296, "7779": 296, "6911": 296, "875": 296, "0796": 296, "7082": 296, "308": 296, "0421": 296, "1496": 296, "5037": 296, "1755": 296, "5029": 296, "9454": 296, "665": 296, "9330": 296, "2118": 296, "444": 296, "0995": 296, "6294": 296, "3146": 296, "2909": 296, "461": 296, "9720": 296, "1298": 296, "9923": 296, "0345": 296, "3438": 296, "3688": 296, "424": 296, "6953": 296, "5233": 296, "411": 296, "8011": 296, "5329": 296, "2677": 296, "6969": 296, "7010": 296, "376": 296, "9352": 296, "7707": 296, "6178": 296, "5646": 296, "348": 296, "7304": 296, "9407": 296, "942": 296, "3882": 296, "7604": 296, "3507": 296, "8928": 296, "258": 296, "6978": 296, "4641": 296, "549": 296, "6047": 296, "5005": 296, "4136": 296, "2993": 296, "3222": 296, "4046": 296, "7314": 296, "275": 296, "6331": 296, "9318": 296, "961": 296, "8331": 296, "1604": 296, "4099": 296, "4761": 296, "125": [296, 298], "4262": 296, "6363": 296, "382": 296, "3593": 296, "7377": 296, "2847": 296, "3443": 296, "867": 296, "3592": 296, "4760": 296, "441": 296, "9950": 296, "8021": 296, "3528": 296, "1214": 296, "708": 296, "4023": 296, "3583": 296, "041": 296, "3801": 296, "0310": 296, "120": 296, "4244": 296, "2039": 296, "4850": 296, "8748": 296, "706": 296, "4897": 296, "9210": 296, "8964": 296, "0832": 296, "3934": 296, "456": 296, "8971": 296, "2933": 296, "3377": 296, "6996": 296, "2274": 296, "8916": 296, "098": 296, "2660": 296, "9110": 296, "4503": 296, "6956": 296, "9172": 296, "4026": 296, "946": 296, "9229": 296, "5205": 296, "294": 296, "8872": 296, "6637": 296, "019": 296, "9281": 296, "2082": 296, "724": 296, "8561": 296, "6574": 296, "357": 296, "4138": 296, "5230": 296, "385": 296, "4065": 296, "5642": 296, "921": 296, "9786": 296, "4129": 296, "5831": 296, "266": 296, "7723": 296, "4152": 296, "0898": 296, "389": 296, "5155": 296, "5376": 296, "5616": 296, "4094": 296, "283": 296, "5333": 296, "4803": 296, "895": 296, "6566": 296, "2588": 296, "662": 296, "4732": 296, "7503": 296, "068": 296, "0714": 296, "3370": 296, "059": 296, "8612": 296, "3855": 296, "0349": 296, "9644": 296, "4538": 296, "445": 296, "0392": 296, "4080": 296, "1648": 296, "9599": 296, "143": [296, 298], "4284": 296, "5946": 296, "2590": 296, "9181": 296, "4621": 296, "9075": 296, "674": 296, "1772": 296, "9444": 296, "351": 296, "9391": 296, "5595": 296, "8673": 296, "6240": 296, "5919": 296, "0018": 296, "1071": 296, "9127": 296, "251": 296, "9799": 296, "3131": 296, "9612": 296, "9705": 296, "8741": 296, "2230": 296, "0972": 296, "0337": 296, "0350": 296, "0654": 296, "2441": 296, "4596": 296, "362": 296, "103": 296, "4362": 296, "171": 296, "104": 296, "4041": 296, "6907": 296, "105": 296, "4664": 296, "2760": 296, "0299": 296, "9712": 296, "349": 296, "107": [296, 298], "3332": 296, "4479": 296, "772": 296, "108": 296, "4357": 296, "9591": 296, "543": 296, "109": 296, "6216": 296, "1353": 296, "692": 296, "110": 296, "6261": 296, "7086": 296, "496": 296, "111": 296, "7758": 296, "9818": 296, "112": [296, 298], "7772": 296, "5055": 296, "113": 296, "5840": 296, "3180": 296, "2083": 296, "115": 296, "5275": 296, "6873": 296, "116": 296, "4107": 296, "1624": 296, "117": 296, "6372": 296, "2571": 296, "118": 296, "4039": 296, "4428": 296, "119": 296, "4728": 296, "5628": 296, "6767": 296, "2466": 296, "522": 296, "121": [296, 301], "5873": 296, "5072": 296, "122": [296, 301], "6548": 296, "3766": 296, "123": 296, "5134": 296, "1955": 296, "124": 296, "2481": 296, "0591": 296, "4500": 296, "3368": 296, "126": 296, "9708": 296, "7059": 296, "127": [296, 298], "3031": 296, "2534": 296, "843": 296, "3327": 296, "6193": 296, "129": [296, 298], "4831": 296, "1172": 296, "2593": 296, "4219": 296, "962": 296, "131": [296, 298], "8380": 296, "899": 296, "132": 296, "2721": 296, "9048": 296, "166": 296, "133": 296, "2419": 296, "5248": 296, "134": 296, "2139": 296, "4278": 296, "135": 296, "0690": 296, "5140": 296, "136": 296, "1140": 296, "7402": 296, "137": 296, "5356": 296, "1636": 296, "138": 296, "0671": 296, "8798": 296, "139": 296, "8918": 296, "3298": 296, "140": 296, "1779": 296, "141": 296, "1771": 296, "3624": 296, "936": 296, "142": 296, "1683": 296, "4810": 296, "9373": 296, "4435": 296, "144": 296, "4396": 296, "8092": 296, "145": 296, "2572": 296, "146": 296, "4212": 296, "0260": 296, "147": 296, "0939": 296, "6478": 296, "605": 296, "148": 296, "6606": 296, "7289": 296, "149": 296, "9300": 296, "7193": 296, "563": 296, "1166": 296, "8514": 296, "151": 296, "9108": 296, "0672": 296, "292": 296, "152": [296, 298], "8591": 296, "3768": 296, "153": 296, "9976": 296, "154": 296, "0576": 296, "0067": 296, "935": 296, "4199": 296, "1722": 296, "156": 296, "8310": 296, "3466": 296, "157": 296, "8631": 296, "2492": 296, "158": 296, "8763": 296, "1277": 296, "159": 296, "5562": 296, "7446": 296, "1082": 296, "9830": 296, "161": 296, "0946": 296, "5229": 296, "162": 296, "4574": 296, "6900": 296, "163": [296, 297], "2229": 296, "0318": 296, "482": 296, "164": 296, "0543": 296, "0817": 296, "165": 296, "2809": 296, "5118": 296, "1142": 296, "5635": 296, "167": 296, "1949": 296, "2327": 296, "982": 296, "168": 296, "0967": 296, "0387": 296, "457": 296, "169": [296, 298], "0782": 296, "2150": 296, "170": 296, "5222": 296, "3725": 296, "9288": 296, "9837": 296, "172": 296, "1416": 296, "1099": 296, "173": [296, 299, 301], "8620": 296, "8475": 296, "174": 296, "1807": 296, "175": 296, "1148": 296, "0645": 296, "176": 296, "2751": 296, "8313": 296, "177": 296, "9286": 296, "9770": 296, "178": 296, "5735": 296, "2837": 296, "179": 296, "2926": 296, "9489": 296, "180": 296, "1507": 296, "181": 296, "8724": 296, "3567": 296, "182": 296, "3574": 296, "6140": 296, "183": 296, "7895": 296, "2518": 296, "184": 296, "6146": 296, "185": 296, "8776": 296, "7358": 296, "186": 296, "3722": 296, "8428": 296, "7955": 296, "188": 296, "09it": 296, "0092": 296, "7106": 296, "829": 296, "189": 296, "2264": 296, "6919": 296, "1438": 296, "1362": 296, "191": [296, 298], "0618": 296, "8217": 296, "9420": 296, "6765": 296, "193": 296, "7745": 296, "0709": 296, "194": 296, "9478": 296, "6867": 296, "195": 296, "6507": 296, "6225": 296, "196": 296, "2244": 296, "2195": 296, "197": [296, 298], "5385": 296, "9263": 296, "198": 296, "1878": 296, "2374": 296, "199": 296, "8054": 296, "3504": 296, "557": 296, "0766": 296, "6825": 296, "201": 296, "2011": 296, "8393": 296, "202": 296, "0803": 296, "7815": 296, "203": 296, "8363": 296, "2460": 296, "204": 296, "8643": 296, "2191": 296, "593": 296, "205": 296, "0773": 296, "1343": 296, "8657": 296, "207": 296, "9304": 296, "7584": 296, "208": 296, "8752": 296, "2307": 296, "209": 296, "5250": 296, "4869": 296, "210": [296, 301], "7837": 296, "5762": 296, "211": 296, "6661": 296, "8600": 296, "2502": 296, "1752": 296, "213": 296, "3075": 296, "8871": 296, "214": 296, "9406": 296, "8090": 296, "215": 296, "6291": 296, "8923": 296, "876": 296, "216": 296, "9504": 296, "21e": 296, "217": 296, "7431": 296, "7880": 296, "218": 296, "4463": 296, "5432": 296, "219": 296, "3793": 296, "3313": 296, "220": 296, "8843": 296, "0369": 296, "065": 296, "221": 296, "4828": 296, "8391": 296, "222": 296, "6265": 296, "2913": 296, "947": 296, "5541": 296, "1252": [296, 301], "7342": 296, "2396": 296, "225": 296, "5936": 296, "1924": 296, "226": 296, "9975": 296, "2045": 296, "227": 296, "8367": 296, "9540": 296, "228": 296, "7259": 296, "6743": 296, "229": 296, "4827": 296, "7528": 296, "230": 296, "7361": 296, "8756": 296, "231": 296, "7646": 296, "1116": 296, "232": 296, "5426": 296, "8385": 296, "5662": 296, "8585": 296, "234": 296, "8234": 296, "7930": 296, "235": 296, "2648": 296, "9309": 296, "236": 296, "6817": 296, "237": 296, "0943": 296, "1533": 296, "238": 296, "3045": 296, "0483": 296, "239": 296, "240": [296, 300, 301], "6415": 296, "0201": 296, "241": 296, "4437": 296, "4365": 296, "242": 296, "0358": 296, "4943": 296, "243": 296, "1272": 296, "5003": 296, "1180": 296, "2637": 296, "245": 296, "7197": 296, "0873": 296, "246": 296, "2917": 296, "247": 296, "0160": 296, "0738": 296, "248": 296, "3689": 296, "0120": 296, "5570": 296, "0475": 296, "250": 296, "4423": 296, "2220": 296, "6803": 296, "252": 296, "1465": 296, "7214": 296, "253": 296, "8801": 296, "7034": 296, "254": 296, "9136": 296, "4076": 296, "7589": 296, "5013": 296, "8150": 296, "2241": 296, "257": 296, "0753": 296, "8081": 296, "8314": 296, "0038": 296, "260": 296, "0889": 296, "4616": 296, "261": 296, "0655": 296, "262": 296, "8333": 296, "9476": 296, "263": 296, "7554": 296, "3798": 296, "3717": 296, "3947": 296, "529": 296, "265": 296, "3060": 296, "6495": 296, "7467": 296, "8889": 296, "267": 296, "8457": 296, "591": 296, "268": 296, "7137": 296, "0536": 296, "771": 296, "269": 296, "1651": 296, "388": 296, "270": 296, "8246": 296, "5709": 296, "281": 296, "271": 296, "7502": 296, "0521": 296, "032": 296, "272": 296, "11it": 296, "5475": 296, "7253": 296, "34it": 296, "2856": 296, "7130": 296, "274": 296, "2778": 296, "4122": 296, "8368": 296, "1841": 296, "9622": 296, "1603": 296, "003e": 296, "277": 296, "0247": 296, "346": 296, "86it": 296, "2238": 296, "6418": 296, "279": 296, "0626": 296, "2538": 296, "280": 296, "0149": 296, "7380": 296, "2167": 296, "8911": 296, "282": 296, "8725": 296, "1983": 296, "8142": 296, "3709": 296, "284": 296, "4989": 296, "285": 296, "6464": 296, "6210": 296, "286": 296, "9726": 296, "0820": 296, "287": 296, "6975": 296, "9091": 296, "4926": 296, "4791": 296, "289": 296, "0905": 296, "3500": 296, "290": 296, "2287": 296, "291": 296, "9918": 296, "5543": 296, "9245": 296, "6444": 296, "631": 296, "293": 296, "0448": 296, "4769": 296, "8566": 296, "7208": 296, "295": 296, "0966": 296, "5303": 296, "1537": 296, "023": 296, "297": 296, "2682": 296, "564": 296, "298": 296, "4318": 296, "5063": 296, "299": 296, "7475": 296, "4190": 296, "8186": 296, "5077": 296, "301": 296, "1883": 296, "5291": 296, "472": 296, "302": 296, "1256": 296, "3998": 296, "303": 296, "3622": 296, "0930": 296, "626": 296, "304": 296, "9500": 296, "0075": 296, "5664": 296, "305": 296, "5697": 296, "3024": 296, "306": 296, "3117": 296, "0052": 296, "006": 296, "0981": 296, "9312": 296, "3873": 296, "309": 296, "0411": 296, "2650": 296, "310": 296, "1656": 296, "0228": 296, "004": 296, "311": 296, "1196": 296, "2478": 296, "312": [296, 299], "7353": 296, "0812": 296, "313": 296, "3022": 296, "758": 296, "314": 296, "1406": 296, "4626": 296, "315": 296, "2156": 296, "851": 296, "316": 296, "1953": 296, "3774": 296, "317": 296, "6385": 296, "9917": 296, "318": 296, "2764": 296, "905": 296, "319": 296, "6391": 296, "9317": 296, "9748": 296, "2679": 296, "321": 296, "8495": 296, "5125": 296, "322": 296, "8177": 296, "6602": 296, "323": 296, "0704": 296, "5776": 296, "324": 296, "9833": [296, 300], "1339": 296, "402": 296, "1238": 296, "326": 296, "9299": 296, "0227": 296, "327": 296, "7727": 296, "1607": 296, "336": 296, "328": 296, "3958": 296, "3223": 296, "763": 296, "329": 296, "4742": 296, "1797": 296, "330": 296, "0144": 296, "0085": 296, "791": 296, "331": 296, "8284": 296, "0428": 296, "332": 296, "0098": 296, "7365": 296, "333": 296, "4566": 296, "0781": 296, "086": 296, "334": 296, "42it": 296, "3355": 296, "0230": 296, "335": 296, "9346": 296, "0423": 296, "076": 296, "3711": 296, "1335": 296, "6855": 296, "337": 296, "0304": 296, "0023": 296, "8459": 296, "338": 296, "9998": 296, "4399": 296, "339": 296, "2303": 296, "1346": 296, "340": 296, "2915": 296, "7116": 296, "5560": 296, "0487": 296, "342": 296, "5119": 296, "061": 296, "343": 296, "3305": 296, "3705": 296, "957": 296, "344": 296, "6068": 296, "345": 296, "5731": 296, "3897": 296, "0376": 296, "347": 296, "0434": 296, "012": 296, "1300": 296, "1215": 296, "0968": 296, "0885": 296, "350": 296, "1348": 296, "0073": 296, "5052": 296, "4184": 296, "2817": 296, "8887": 296, "353": 296, "4779": 296, "1009": 296, "0604": 296, "599": 296, "355": 296, "4486": 296, "1176": 296, "656": 296, "356": 296, "2436": 296, "0668": 296, "8849": 296, "0012": 296, "358": 296, "7511": 296, "8804": 296, "359": 296, "8870": 296, "6728": 296, "360": 296, "8841": 296, "5508": 296, "5242": 296, "0268": 296, "0013": 296, "6185": 296, "1378": 296, "0204": 296, "0355": 296, "685": 296, "365": 296, "4884": 296, "0231": 296, "0770": 296, "0014": 296, "6793": 296, "9834": 296, "863": 296, "6709": 296, "462": 296, "369": 296, "5199": 296, "9790": 296, "9401": 296, "7802": 296, "371": 296, "6723": 296, "2678": 296, "6201": 296, "373": 296, "2184": 296, "7385": 296, "6344": 296, "617": 296, "375": 296, "9945": 296, "0772": 296, "567": 296, "7576": 296, "0398": 296, "377": 296, "3396": 296, "0022": 296, "094": 296, "378": 296, "3073": 296, "4018": 296, "379": 296, "1869": 296, "380": 296, "0481": 296, "1117": 296, "381": 296, "6823": 296, "981": 296, "8305": 296, "0210": 296, "383": [296, 298, 299], "4908": 296, "0272": 296, "538": 296, "3267": 296, "0111": 296, "7965": 296, "1796": 296, "0039": 296, "5396": 296, "386": 296, "3757": 296, "0490": 296, "387": 296, "1394": 296, "4187": 296, "2986": 296, "7954": 296, "1274": 296, "0063": 296, "813": 296, "390": 296, "8706": 296, "0114": 296, "391": 296, "6922": 296, "0004": 296, "2423": 296, "392": 296, "9115": 296, "2602": 296, "393": 296, "2449": 296, "0783": 296, "394": 296, "0631": 296, "0057": 296, "7444": 296, "395": 296, "3339": 296, "0167": 296, "396": 296, "4806": 296, "397": 296, "4171": 296, "067": 296, "398": 296, "2618": 296, "5809": 296, "399": 296, "0054": 296, "3364": 296, "8733": 296, "0184": 296, "401": 296, "9137": 296, "0113": 296, "025": 296, "0386": 296, "0625": 296, "403": 296, "1332": 296, "0582": 296, "7816": 296, "404": 296, "8341": 296, "0941": 296, "854": 296, "405": 296, "8615": 296, "588": 296, "406": 296, "3849": 296, "008": 296, "407": 296, "9395": 296, "0765": 296, "055": 296, "408": 296, "2685": 296, "2235": 296, "688": 296, "409": 296, "3052": 296, "4249": 296, "410": 296, "6806": 296, "6383": 296, "3721": 296, "9981": 296, "412": 296, "1862": 296, "822": 296, "413": 296, "9811": 296, "0171": 296, "013": 296, "414": 296, "0252": 296, "0049": 296, "6205": 296, "415": 296, "1108": 296, "4921": 296, "9142": 296, "8130": 296, "417": 296, "1725": 296, "0036": 296, "3196": 296, "418": 296, "7795": 296, "0242": 296, "799": 296, "419": 296, "7737": 296, "0138": 296, "420": 296, "1462": 296, "0053": 296, "421": 296, "9226": 296, "6139": 296, "422": 296, "9889": 296, "0403": 296, "423": 296, "6194": 296, "0032": 296, "3989": 296, "0104": 296, "425": 296, "9960": 296, "6009": 296, "426": 296, "2697": 296, "0914": 296, "1114": 296, "428": 296, "9862": 296, "1932": 296, "429": 296, "0637": 296, "0623": 296, "082": 296, "430": 296, "9906": 296, "2031": 296, "431": 296, "9948": 296, "0895": 296, "432": 296, "1970": 296, "0256": 296, "433": 296, "4231": 296, "0449": 296, "644": 296, "434": 296, "1039": 296, "1973": 296, "435": 296, "4561": 296, "1225": 296, "436": 296, "0211": 296, "2125": 296, "437": 296, "3866": 296, "0050": 296, "7202": 296, "438": 296, "6388": 296, "0072": 296, "439": 296, "1187": 296, "0015": 296, "5116": 296, "440": 296, "0432": 296, "0025": 296, "7809": 296, "1925": 296, "0103": 296, "442": 296, "9570": 296, "443": 296, "0871": 296, "5601": 296, "0165": 296, "0047": 296, "6061": 296, "2746": 296, "0027": 296, "7887": 296, "446": 296, "1835": 296, "0035": 296, "855": 296, "447": 296, "8420": 296, "548": 296, "2653": 296, "0126": 296, "9736": 296, "449": 296, "0594": 296, "0119": 296, "6196": 296, "450": 296, "4509": 296, "0373": 296, "451": 296, "0620": 296, "452": 296, "6898": 296, "3235": 296, "687": 296, "453": 296, "5879": 296, "454": 296, "8406": 296, "0694": 296, "455": 296, "8259": 296, "0235": 296, "8500": 296, "0024": 296, "4054": 296, "458": 296, "2027": 296, "459": 296, "5966": 296, "460": 296, "6942": 296, "0016": 296, "6703": 296, "0145": 296, "8124": 296, "0218": 296, "9196": 296, "0188": 296, "8986": 296, "0884": 296, "0084": 296, "5624": 296, "465": 296, "8862": 296, "0006": 296, "5384": 296, "466": 296, "5837": 296, "467": 296, "8954": 296, "0101": 296, "6751": 296, "468": 296, "8063": 296, "0122": 296, "9635": 296, "469": 296, "0692": 296, "4216": 296, "470": 296, "1227": 296, "0586": 296, "162e": 296, "471": 296, "9690": 296, "0074": 296, "4166": 296, "6324": 296, "0778": 296, "474": 296, "8548": 296, "0017": 296, "4408": 296, "475": 296, "8125": 296, "1515": 296, "476": 296, "2733": 296, "0044": 296, "2836": 296, "477": 296, "7497": 296, "7681": 296, "8547": 296, "0105": 296, "7212": 296, "479": 296, "9848": 296, "0019": 296, "6498": 296, "1987": 296, "5473": 296, "481": 296, "8991": 296, "0033": 296, "6091": 296, "9189": 296, "5771": 296, "483": 296, "6781": 296, "7542": 296, "484": 296, "5959": 296, "0064": 296, "4295": 296, "485": 296, "2547": 296, "486": 296, "0636": 296, "547": 296, "0065": 296, "488": 296, "1694": 296, "0083": 296, "5759": 296, "489": 296, "0493": 296, "0021": 296, "7805": 296, "490": 296, "0950": 296, "497": 296, "491": 296, "9717": 296, "3672": 296, "492": 296, "0207": 296, "493": 296, "8266": 296, "0069": 296, "5365": 296, "494": 296, "2623": 296, "5078": 296, "495": 296, "4545": 296, "09636": 296, "8754": 296, "498": 296, "0031": 296, "8269": 296, "499": 296, "4082": 296, "6642": 296, "2284": 296, "501": 296, "9130": 296, "0008": 296, "502": 296, "503": 296, "7624": 296, "0056": 296, "3858": 296, "504": 296, "0890": 296, "0042": 296, "505": 296, "7505": 296, "2157": 296, "506": 296, "8394": 296, "3413": 296, "507": 296, "9609": 296, "0041": 296, "6905": 296, "508": 296, "8467": 296, "4409": 296, "509": 296, "510": 296, "8128": 296, "3559": 296, "511": 296, "1479": 296, "0264": 296, "1589": 296, "566": 296, "513": 296, "2756": 296, "0046": 296, "5266": 296, "514": 296, "9873": 296, "0112": 296, "9314": 296, "515": 296, "3791": 296, "0721": 296, "516": 296, "4580": 296, "0758": 296, "6114": 296, "517": 296, "2431": 296, "518": 296, "1958": 296, "5553": 296, "8924": 296, "0097": 296, "520": 296, "3737": 296, "0234": 296, "521": 296, "9125": 296, "4623": 296, "3230": 296, "0589": 296, "3784": 296, "523": 296, "9482": 296, "0051": 296, "524": 296, "1979": 296, "0045": 296, "6401": 296, "525": 296, "1588": 296, "0048": 296, "6255": 296, "526": 296, "6084": 296, "3477": 296, "1475": 296, "0209": 296, "528": 296, "7611": 296, "1040": 296, "0099": 296, "0173": 296, "643": 296, "530": 296, "8189": 296, "4358": 296, "531": 296, "9897": 296, "532": 296, "1548": 296, "9751": 296, "533": 296, "6362": 296, "7495": 296, "534": 296, "1749": 296, "9513": 296, "535": 296, "7708": 296, "0371": 296, "536": 296, "2649": 296, "0437": 296, "537": 296, "5491": 296, "0276": 296, "6426": 296, "7294": 296, "078e": 296, "539": 296, "9928": 296, "540": 296, "7937": 296, "0124": 296, "9664": 296, "541": 296, "3342": 296, "542": 296, "2046": 296, "5496": 296, "0956": 296, "0059": 296, "545": 296, "9028": 296, "5843": 296, "546": 296, "0674": 296, "0178": 296, "797": 296, "2815": 296, "0599": 296, "1587": 296, "9276": 296, "8228": 296, "6164": 296, "551": 296, "6850": 296, "9167": 296, "3092": 296, "0670": 296, "9177": 296, "553": 296, "1599": 296, "0043": 296, "554": 296, "6367": 296, "555": 296, "3657": 296, "556": 296, "6694": 296, "2622": 296, "0372": 296, "4841": 296, "558": 296, "2707": 296, "0058": 296, "757": 296, "559": 296, "2267": 296, "5415": 296, "560": 296, "4556": 296, "0163": 296, "561": 296, "1839": 296, "0809": 296, "6262": 296, "562": 296, "0278": 296, "1112": 296, "6155": 296, "565": 296, "1427": 296, "3582": 296, "624": 296, "7870": 296, "9490": 296, "0439": 296, "8796": 296, "568": 296, "8026": 296, "612": 296, "569": 296, "3147": 296, "8486": 296, "570": 296, "7917": 296, "0129": 296, "571": 296, "9553": 296, "0020": 296, "6871": 296, "572": 296, "3132": 296, "0159": 296, "8646": 296, "573": 296, "5320": 296, "0269": 296, "574": 296, "2955": 296, "0245": 296, "575": 296, "3347": 296, "0179": 296, "9718": 296, "1629": 296, "804": 296, "577": 296, "0070": 296, "4335": 296, "578": 296, "579": 296, "3049": 296, "9063": 296, "580": 296, "8785": 296, "3295": 296, "5184": 296, "0546": 296, "582": 296, "4589": 296, "583": 296, "4697": 296, "2476": 296, "584": 296, "2397": 296, "585": 296, "4953": 296, "1775": 296, "586": 296, "2258": 296, "0110": 296, "7671": 296, "587": 296, "3981": 296, "8590": 296, "589": 296, "9820": 296, "4221": 296, "590": 296, "1293": 296, "0116": 296, "868": 296, "1675": 296, "5931": 296, "592": 296, "2910": 296, "5219": 296, "2124": 296, "1730": 296, "737": 296, "594": 296, "2914": 296, "0206": 296, "595": 296, "0172": 296, "3982": 296, "0945": 296, "0121": 296, "4789": 296, "597": 296, "3805": 296, "598": 296, "3310": 296, "5065": 296, "6028": 296, "6316": 296, "6724": 296, "6523": 296, "601": 296, "0136": 296, "4298": 296, "602": 296, "3524": 296, "2629": 296, "603": 296, "2635": 296, "7839": 296, "604": 296, "6041": 296, "8027": 296, "4170": 296, "4675": 296, "606": 296, "3153": 296, "9316": 296, "607": 296, "0649": 296, "9722": 296, "7989": 296, "0329": 296, "609": 296, "1976": 296, "6852": 296, "610": 296, "4793": 296, "1255": 296, "611": 296, "4581": 296, "0394": 296, "2047": 296, "0326": 296, "613": 296, "8967": 296, "8619": 296, "614": 296, "5906": 296, "6491": 296, "615": 296, "6634": 296, "4394": 296, "616": 296, "0624": 296, "0061": 296, "5676": 296, "3259": 296, "0131": 296, "7733": 296, "618": 296, "7515": 296, "0189": 296, "5575": 296, "619": 296, "9313": 296, "6286": 296, "620": 296, "4325": 296, "7832": 296, "621": 296, "1134": 296, "622": 296, "4572": 296, "0500": 296, "5838": 296, "623": 296, "3818": 296, "8623": 296, "1253": 296, "6622": 296, "subject": 296, "saw": [296, 298], "explain": 297, "semat": 297, "r3mtransform": 297, "embodi": 297, "ai": 297, "env_transform": [297, 301], "s3": 297, "amazonaw": 297, "r3m_50": 297, "374m": 297, "4m": 297, "1mb": 297, "8m": 297, "8mb": 297, "4mb": 297, "0m": 297, "113mb": 297, "102mb": 297, "3mb": 297, "6m": 297, "5mb": 297, "106m": 297, "115m": 297, "7mb": 297, "131m": 297, "139m": 297, "147m": 297, "155m": 297, "162m": 297, "9mb": 297, "168m": 297, "6mb": 297, "179m": 297, "185m": 297, "195m": 297, "0mb": 297, "201m": 297, "212m": 297, "218m": 297, "229m": 297, "244m": 297, "250m": 297, "2mb": 297, "261m": 297, "267m": 297, "279m": 297, "293m": 297, "300m": 297, "311m": 297, "328m": 297, "344m": 297, "359m": 297, "366m": 297, "373m": 297, "wiser": 297, "conclud": 297, "_storag": [297, 298], "3403": 297, "pretrained_model": [297, 299], "supervis": [298, 301], "pull": 298, "temporarili": 298, "drastic": 298, "ram": [298, 301], "batteri": 298, "dataliststorag": 298, "datalazytensorstorag": 298, "tensordidct": 298, "basi": 298, "datalazymemmapstorag": 298, "buffer_list": 298, "lowest": 298, "medium": 298, "buffer_lazytensor": 298, "buffer_lazymemmap": 298, "fullest": 298, "organ": 298, "convini": 298, "mydata": 298, "background": 298, "question": [298, 300], "_i": 298, "artifici": 298, "0892946e": 298, "she": 298, "augment": 298, "pars": 298, "proport": 298, "hist": 298, "barcontain": 298, "artist": 298, "revert": 298, "expens": 298, "reappear": 298, "unfold": 298, "problemat": 298, "window": 298, "4th": 298, "011": [298, 299], "rb_tutori": [298, 299], "645": 299, "torchrl_demo": [299, 300], "933": [299, 300], "torchrl_env": [299, 301], "856": [299, 301], "703": 299, "2079": 299, "3402": 299, "demo": 300, "icml": 300, "vmoen": 300, "fb": 300, "invest": 300, "platform": 300, "media": 300, "truli": 300, "predominantli": 300, "tensordict1": 300, "tensordict2": 300, "tensordict_sampl": 300, "_sampler": 300, "_sum_tre": 300, "modulenotfounderror": 300, "28791671991348267": 300, "gym_env": 300, "noopresetenv": [300, 301], "lazyconv2d": 300, "backbone_modul": 300, "actor_modul": 300, "params_expand": 300, "tensordict_exp": 300, "base_modul": 300, "0137": 300, "1524": 300, "0641": 300, "viewbackward0": 300, "asstridedbackward0": 300, "8728": 300, "1334": 300, "3494": 300, "6887": 300, "6402": 300, "_safetanhbackward": 300, "1132": 300, "1762": 300, "3430": 300, "2668": 300, "2918": 300, "6239": 300, "roughli": 300, "tensordicts_prealloc": 300, "tensordicts_stack": 300, "tensordict_rollout": [300, 301], "disclaim": 300, "concatmodul": 300, "loss_td": 300, "year": 300, "roadmap": 300, "compris": 300, "contributor": 300, "curiou": 300, "nascent": 300, "unsupervis": 301, "rom": 301, "licens": 301, "pygam": 301, "unifi": 301, "insid": 301, "_build_env": 301, "sphinx_gallery_start_ignor": 301, "filterwarn": 301, "sphinx_gallery_end_ignor": 301, "adventur": 301, "v5": 301, "airraid": 301, "alien": 301, "amidar": 301, "assault": 301, "7701": 301, "void": 301, "reproduct": 301, "tensordict_tprim": 301, "imshow": 301, "axesimag": 301, "0x7ff012252b20": 301, "inconsist": 301, "pong": 301, "swingup": 301, "swingup_spars": 301, "ball_in_cup": 301, "catch": 301, "balance_spars": 301, "three_pol": 301, "two_pol": 301, "finger": 301, "turn_easi": 301, "turn_hard": 301, "fish": 301, "swim": 301, "hopper": 301, "hop": 301, "run_pure_st": 301, "bring_bal": 301, "bring_peg": 301, "insert_bal": 301, "insert_peg": 301, "point_mass": 301, "reacher": 301, "swimmer": 301, "swimmer6": 301, "swimmer15": 301, "walker": 301, "dog": 301, "trot": 301, "humanoid_cmu": 301, "lqr": 301, "lqr_2_1": 301, "lqr_6_2": 301, "quadrup": 301, "escap": 301, "stacker": 301, "stack_2": 301, "stack_4": 301, "wrapper1": 301, "wrapper2": 301, "obviou": 301, "truth": 301, "env0": 301, "env_transformed_bi": 301, "stanc": 301, "transformeddistribut": 301, "base_dist": 301, "concat": 301, "mofidi": 301, "transformedenviron": 301, "moderet": 301, "computation": 301, "legitim": 301, "incom": 301, "amongst": 301, "wor": 301, "convention": 301, "scope": 301, "markovian": 301, "3288080526": 301, "constain": 301, "bar_": 301, "get_someth": 301, "bar_d8331726": 301, "470c": 301, "aargh": 301, "foo_list": 301, "vec_env": 301, "_dispatch_caller_parallel": 301, "0x7feff8119670": 301, "bar_dfb430a2": 301, "9303": 301, "bar_dfb2b97a": 301, "af7c": 301, "bar_dfb5eeb0": 301, "bb5c": 301, "parallen": 301, "particularili": 301, "evolv": 301, "steadi": 301, "approx": 301, "3065": 301, "2669": 301, "1367": 301, "9428": 301, "1322": 301, "1305": 301, "_extra_st": 301, "observation_ssq": 301, "observation_sum": 301, "3516": 301, "2043": 301, "1710": 301, "3376": 301, "dispach": 301, "absor": 301}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictRoundRobinWriter"], [65, 0, 1, "", "TensorStorage"], [66, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.envs": [[67, 0, 1, "", "EnvBase"], [68, 0, 1, "", "EnvCreator"], [69, 0, 1, "", "EnvMetaData"], [70, 0, 1, "", "GymLikeEnv"], [71, 2, 1, "", "ModelBasedEnvBase"], [72, 0, 1, "", "MultiThreadedEnv"], [73, 0, 1, "", "ParallelEnv"], [74, 0, 1, "", "SerialEnv"], [71, 1, 1, "", "rand_step"], [71, 1, 1, "", "reset"], [71, 1, 1, "", "rollout"], [71, 1, 1, "", "set_seed"], [71, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[67, 3, 1, "", "action_key"], [67, 3, 1, "", "action_spec"], [67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 3, 1, "", "batch_locked"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 3, 1, "", "done_key"], [67, 3, 1, "", "done_spec"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fake_tensordict"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "rand_action"], [67, 1, 1, "id0", "rand_step"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "id1", "reset"], [67, 3, 1, "", "reward_key"], [67, 3, 1, "", "reward_spec"], [67, 1, 1, "id2", "rollout"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "id3", "set_seed"], [67, 1, 1, "", "share_memory"], [67, 3, 1, "", "specs"], [67, 1, 1, "", "state_dict"], [67, 1, 1, "id4", "step"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[70, 3, 1, "", "action_key"], [70, 3, 1, "", "action_spec"], [70, 1, 1, "", "add_module"], [70, 1, 1, "", "apply"], [70, 3, 1, "", "batch_locked"], [70, 1, 1, "", "bfloat16"], [70, 1, 1, "", "buffers"], [70, 1, 1, "", "children"], [70, 1, 1, "", "close"], [70, 1, 1, "", "compile"], [70, 1, 1, "", "cpu"], [70, 1, 1, "", "cuda"], [70, 3, 1, "", "done_key"], [70, 3, 1, "", "done_spec"], [70, 1, 1, "", "double"], [70, 1, 1, "", "eval"], [70, 1, 1, "", "extra_repr"], [70, 1, 1, "", "fake_tensordict"], [70, 1, 1, "", "float"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "get_buffer"], [70, 1, 1, "", "get_extra_state"], [70, 1, 1, "", "get_parameter"], [70, 1, 1, "", "get_submodule"], [70, 1, 1, "", "half"], [70, 1, 1, "", "ipu"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "modules"], [70, 1, 1, "", "named_buffers"], [70, 1, 1, "", "named_children"], [70, 1, 1, "", "named_modules"], [70, 1, 1, "", "named_parameters"], [70, 1, 1, "", "parameters"], [70, 1, 1, "", "rand_action"], [70, 1, 1, "", "rand_step"], [70, 1, 1, "", "read_action"], [70, 1, 1, "", "read_done"], [70, 1, 1, "", "read_obs"], [70, 1, 1, "", "read_reward"], [70, 1, 1, "", "register_backward_hook"], [70, 1, 1, "", "register_buffer"], [70, 1, 1, "", "register_forward_hook"], [70, 1, 1, "", "register_forward_pre_hook"], [70, 1, 1, "", "register_full_backward_hook"], [70, 1, 1, "", "register_full_backward_pre_hook"], [70, 1, 1, "", "register_load_state_dict_post_hook"], [70, 1, 1, "", "register_module"], [70, 1, 1, "", "register_parameter"], [70, 1, 1, "", "register_state_dict_pre_hook"], [70, 1, 1, "", "requires_grad_"], [70, 1, 1, "", "reset"], [70, 3, 1, "", "reward_key"], [70, 3, 1, "", "reward_spec"], [70, 1, 1, "", "rollout"], [70, 1, 1, "", "set_extra_state"], [70, 1, 1, "", "set_info_dict_reader"], [70, 1, 1, "", "set_seed"], [70, 1, 1, "", "share_memory"], [70, 3, 1, "", "specs"], [70, 1, 1, "", "state_dict"], [70, 1, 1, "", "step"], [70, 1, 1, "", "to"], [70, 1, 1, "", "to_empty"], [70, 1, 1, "", "train"], [70, 1, 1, "", "type"], [70, 1, 1, "", "xpu"], [70, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[72, 3, 1, "", "action_key"], [72, 3, 1, "", "action_spec"], [72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "close"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 3, 1, "", "done_key"], [72, 3, 1, "", "done_spec"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "fake_tensordict"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "rand_action"], [72, 1, 1, "", "rand_step"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset"], [72, 3, 1, "", "reward_key"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "", "rollout"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "share_memory"], [72, 3, 1, "", "specs"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "step"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "reset"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "step"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "update_kwargs"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[74, 3, 1, "", "action_key"], [74, 3, 1, "", "action_spec"], [74, 1, 1, "", "add_module"], [74, 1, 1, "", "apply"], [74, 3, 1, "", "batch_locked"], [74, 1, 1, "", "bfloat16"], [74, 1, 1, "", "buffers"], [74, 1, 1, "", "children"], [74, 1, 1, "", "compile"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 3, 1, "", "done_key"], [74, 3, 1, "", "done_spec"], [74, 1, 1, "", "double"], [74, 1, 1, "", "eval"], [74, 1, 1, "", "extra_repr"], [74, 1, 1, "", "fake_tensordict"], [74, 1, 1, "", "float"], [74, 1, 1, "", "forward"], [74, 1, 1, "", "get_buffer"], [74, 1, 1, "", "get_extra_state"], [74, 1, 1, "", "get_parameter"], [74, 1, 1, "", "get_submodule"], [74, 1, 1, "", "half"], [74, 1, 1, "", "ipu"], [74, 1, 1, "", "load_state_dict"], [74, 1, 1, "", "modules"], [74, 1, 1, "", "named_buffers"], [74, 1, 1, "", "named_children"], [74, 1, 1, "", "named_modules"], [74, 1, 1, "", "named_parameters"], [74, 1, 1, "", "parameters"], [74, 1, 1, "", "rand_action"], [74, 1, 1, "", "rand_step"], [74, 1, 1, "", "register_backward_hook"], [74, 1, 1, "", "register_buffer"], [74, 1, 1, "", "register_forward_hook"], [74, 1, 1, "", "register_forward_pre_hook"], [74, 1, 1, "", "register_full_backward_hook"], [74, 1, 1, "", "register_full_backward_pre_hook"], [74, 1, 1, "", "register_load_state_dict_post_hook"], [74, 1, 1, "", "register_module"], [74, 1, 1, "", "register_parameter"], [74, 1, 1, "", "register_state_dict_pre_hook"], [74, 1, 1, "", "requires_grad_"], [74, 1, 1, "", "reset"], [74, 3, 1, "", "reward_key"], [74, 3, 1, "", "reward_spec"], [74, 1, 1, "", "rollout"], [74, 1, 1, "", "set_extra_state"], [74, 1, 1, "", "set_seed"], [74, 1, 1, "", "share_memory"], [74, 3, 1, "", "specs"], [74, 1, 1, "", "state_dict"], [74, 1, 1, "", "step"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_empty"], [74, 1, 1, "", "train"], [74, 1, 1, "", "type"], [74, 1, 1, "", "update_kwargs"], [74, 1, 1, "", "xpu"], [74, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[75, 2, 1, "", "BraxEnv"], [76, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[77, 2, 1, "", "DMControlEnv"], [78, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[79, 2, 1, "", "GymEnv"], [80, 2, 1, "", "GymWrapper"], [81, 2, 1, "", "MOGymEnv"], [82, 2, 1, "", "MOGymWrapper"], [83, 2, 1, "", "gym_backend"], [84, 2, 1, "", "set_gym_backend"]], "torchrl.envs.libs.habitat": [[85, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[86, 2, 1, "", "JumanjiEnv"], [87, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[88, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[89, 2, 1, "", "VmasEnv"], [90, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[91, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[92, 0, 1, "", "BinarizeReward"], [93, 0, 1, "", "CatFrames"], [94, 0, 1, "", "CatTensors"], [95, 0, 1, "", "CenterCrop"], [96, 0, 1, "", "Compose"], [97, 0, 1, "", "DTypeCastTransform"], [98, 0, 1, "", "DiscreteActionProjection"], [99, 0, 1, "", "DoubleToFloat"], [100, 0, 1, "", "ExcludeTransform"], [101, 0, 1, "", "FiniteTensorDictCheck"], [102, 0, 1, "", "FlattenObservation"], [103, 0, 1, "", "FrameSkipTransform"], [104, 0, 1, "", "GrayScale"], [105, 0, 1, "", "InitTracker"], [106, 0, 1, "", "KLRewardTransform"], [107, 0, 1, "", "NoopResetEnv"], [108, 0, 1, "", "ObservationNorm"], [109, 0, 1, "", "ObservationTransform"], [110, 0, 1, "", "PinMemoryTransform"], [111, 0, 1, "", "R3MTransform"], [112, 0, 1, "", "RandomCropTensorDict"], [113, 0, 1, "", "RenameTransform"], [114, 0, 1, "", "Resize"], [115, 0, 1, "", "Reward2GoTransform"], [116, 0, 1, "", "RewardClipping"], [117, 0, 1, "", "RewardScaling"], [118, 0, 1, "", "RewardSum"], [119, 0, 1, "", "SelectTransform"], [120, 0, 1, "", "SqueezeTransform"], [121, 0, 1, "", "StepCounter"], [122, 0, 1, "", "TargetReturn"], [123, 0, 1, "", "TensorDictPrimer"], [124, 0, 1, "", "TimeMaxPool"], [125, 0, 1, "", "ToTensorImage"], [126, 0, 1, "", "Transform"], [127, 0, 1, "", "TransformedEnv"], [128, 0, 1, "", "UnsqueezeTransform"], [129, 0, 1, "", "VC1Transform"], [130, 0, 1, "", "VIPRewardTransform"], [131, 0, 1, "", "VIPTransform"], [132, 0, 1, "", "VecNorm"], [133, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[92, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "reset"], [93, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[94, 1, 1, "", "forward"], [94, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[95, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "reset"], [96, 1, 1, "", "to"], [96, 1, 1, "", "transform_input_spec"], [96, 1, 1, "", "transform_observation_spec"], [96, 1, 1, "", "transform_output_spec"], [96, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[97, 1, 1, "", "forward"], [97, 1, 1, "", "transform_input_spec"], [97, 1, 1, "", "transform_observation_spec"], [97, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[98, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "reset"], [100, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[101, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[103, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[105, 1, 1, "", "forward"], [105, 1, 1, "", "reset"], [105, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[107, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[108, 1, 1, "", "init_stats"], [108, 1, 1, "", "transform_input_spec"], [108, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[110, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[111, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "transform_input_spec"], [113, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[114, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[115, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[116, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[117, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "reset"], [118, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "reset"], [121, 1, 1, "", "transform_input_spec"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "reset"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "reset"], [123, 1, 1, "", "to"], [123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "reset"], [124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "reset"], [126, 1, 1, "", "to"], [126, 1, 1, "", "transform_done_spec"], [126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_observation_spec"], [126, 1, 1, "", "transform_output_spec"], [126, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[127, 3, 1, "", "action_spec"], [127, 3, 1, "", "batch_locked"], [127, 3, 1, "", "done_spec"], [127, 1, 1, "", "eval"], [127, 3, 1, "", "input_spec"], [127, 1, 1, "", "load_state_dict"], [127, 3, 1, "", "observation_spec"], [127, 3, 1, "", "output_spec"], [127, 3, 1, "", "reward_spec"], [127, 1, 1, "", "set_missing_tolerance"], [127, 1, 1, "", "set_seed"], [127, 1, 1, "", "state_dict"], [127, 3, 1, "", "state_spec"], [127, 1, 1, "", "to"], [127, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[128, 1, 1, "", "transform_input_spec"], [128, 1, 1, "", "transform_observation_spec"], [128, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "make_noload_model"], [129, 1, 1, "", "to"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[131, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[132, 1, 1, "", "build_td_for_shared_vecnorm"], [132, 1, 1, "", "forward"], [132, 1, 1, "", "get_extra_state"], [132, 1, 1, "", "set_extra_state"], [132, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[134, 2, 1, "", "check_env_specs"], [135, 2, 1, "", "exploration_mode"], [136, 2, 1, "", "exploration_type"], [137, 2, 1, "", "get_available_libraries"], [138, 2, 1, "", "make_composite_from_td"], [139, 2, 1, "", "set_exploration_mode"], [140, 2, 1, "", "set_exploration_type"], [141, 2, 1, "", "step_mdp"]], "torchrl.modules": [[142, 0, 1, "", "CEMPlanner"], [143, 0, 1, "", "ConvNet"], [144, 0, 1, "", "DdpgCnnActor"], [145, 0, 1, "", "DdpgCnnQNet"], [146, 0, 1, "", "DdpgMlpActor"], [147, 0, 1, "", "DdpgMlpQNet"], [148, 0, 1, "", "Delta"], [149, 0, 1, "", "DistributionalDQNnet"], [150, 0, 1, "", "DistributionalQValueHook"], [151, 0, 1, "", "DreamerActor"], [152, 0, 1, "", "DuelingCnnDQNet"], [153, 0, 1, "", "IndependentNormal"], [154, 0, 1, "", "LSTMModule"], [155, 0, 1, "", "LSTMNet"], [156, 0, 1, "", "MLP"], [157, 0, 1, "", "MPCPlannerBase"], [158, 0, 1, "", "MPPIPlanner"], [159, 0, 1, "", "MaskedCategorical"], [160, 0, 1, "", "MultiAgentMLP"], [161, 0, 1, "", "NoisyLazyLinear"], [162, 0, 1, "", "NoisyLinear"], [163, 0, 1, "", "NormalParamWrapper"], [164, 0, 1, "", "ObsDecoder"], [165, 0, 1, "", "ObsEncoder"], [166, 0, 1, "", "OneHotCategorical"], [167, 0, 1, "", "QMixer"], [168, 0, 1, "", "QValueHook"], [169, 0, 1, "", "RSSMPosterior"], [170, 0, 1, "", "RSSMPrior"], [171, 0, 1, "", "Squeeze2dLayer"], [172, 0, 1, "", "SqueezeLayer"], [173, 0, 1, "", "TanhDelta"], [174, 0, 1, "", "TanhNormal"], [175, 0, 1, "", "TruncatedNormal"], [176, 0, 1, "", "VDNMixer"], [177, 0, 1, "", "VmapModule"], [178, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[142, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[143, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[144, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[145, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[146, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[147, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[148, 1, 1, "", "log_prob"], [148, 3, 1, "", "mean"], [148, 3, 1, "", "mode"], [148, 1, 1, "", "rsample"], [148, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[149, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[151, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[152, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[153, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "set_recurrent_mode"], [154, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[155, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[156, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[158, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[159, 1, 1, "", "log_prob"], [159, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[160, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[161, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[163, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[164, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[165, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[166, 1, 1, "", "log_prob"], [166, 3, 1, "", "mode"], [166, 1, 1, "", "rsample"], [166, 1, 1, "", "sample"]], "torchrl.modules.QMixer": [[167, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[169, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[170, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[172, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[173, 3, 1, "", "mean"], [173, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[174, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[175, 1, 1, "", "log_prob"], [175, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[176, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[177, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[179, 0, 1, "", "Actor"], [180, 0, 1, "", "ActorCriticOperator"], [181, 0, 1, "", "ActorCriticWrapper"], [182, 0, 1, "", "ActorValueOperator"], [183, 0, 1, "", "AdditiveGaussianWrapper"], [184, 0, 1, "", "DistributionalQValueActor"], [185, 0, 1, "", "DistributionalQValueModule"], [186, 0, 1, "", "EGreedyWrapper"], [187, 0, 1, "", "LMHeadActorValueOperator"], [188, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [189, 0, 1, "", "ProbabilisticActor"], [190, 0, 1, "", "QValueActor"], [191, 0, 1, "", "QValueModule"], [192, 0, 1, "", "SafeModule"], [193, 0, 1, "", "SafeProbabilisticModule"], [194, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [195, 0, 1, "", "SafeSequential"], [196, 0, 1, "", "TanhModule"], [197, 0, 1, "", "ValueOperator"], [198, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[180, 1, 1, "", "get_critic_operator"], [180, 1, 1, "", "get_policy_head"], [180, 1, 1, "", "get_value_head"], [180, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[181, 1, 1, "", "get_policy_head"], [181, 1, 1, "", "get_policy_operator"], [181, 1, 1, "", "get_value_head"], [181, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[182, 1, 1, "", "get_policy_head"], [182, 1, 1, "", "get_policy_operator"], [182, 1, 1, "", "get_value_head"], [182, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[185, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[191, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[192, 1, 1, "", "random"], [192, 1, 1, "", "random_sample"], [192, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[193, 1, 1, "", "random"], [193, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[196, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[198, 1, 1, "", "get_reward_operator"], [198, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[199, 0, 1, "", "biased_softplus"], [200, 0, 1, "", "inv_softplus"], [201, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[199, 1, 1, "", "forward"]], "torchrl.objectives": [[202, 0, 1, "", "A2CLoss"], [203, 0, 1, "", "CQLLoss"], [204, 0, 1, "", "ClipPPOLoss"], [205, 0, 1, "", "DDPGLoss"], [206, 0, 1, "", "DQNLoss"], [207, 0, 1, "", "DiscreteSACLoss"], [208, 0, 1, "", "DistributionalDQNLoss"], [209, 0, 1, "", "DreamerActorLoss"], [210, 0, 1, "", "DreamerModelLoss"], [211, 0, 1, "", "DreamerValueLoss"], [212, 0, 1, "", "HardUpdate"], [213, 0, 1, "", "IQLLoss"], [214, 0, 1, "", "KLPENPPOLoss"], [215, 0, 1, "", "LossModule"], [216, 0, 1, "", "PPOLoss"], [217, 0, 1, "", "REDQLoss"], [218, 0, 1, "", "ReinforceLoss"], [219, 0, 1, "", "SACLoss"], [220, 0, 1, "", "SoftUpdate"], [221, 0, 1, "", "TD3Loss"], [222, 0, 1, "", "ValueEstimators"], [223, 0, 1, "", "default_value_kwargs"], [224, 0, 1, "", "distance_loss"], [225, 0, 1, "", "hold_out_net"], [226, 0, 1, "", "hold_out_params"], [228, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[204, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[210, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[211, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "loss_value_diff"], [213, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[214, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[215, 1, 1, "", "convert_to_functional"], [215, 1, 1, "", "forward"], [215, 1, 1, "", "make_value_estimator"], [215, 1, 1, "", "named_parameters"], [215, 1, 1, "", "parameters"], [215, 1, 1, "", "set_keys"], [215, 3, 1, "", "value_estimator"]], "torchrl.objectives.PPOLoss": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[227, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[229, 0, 1, "", "GAE"], [230, 0, 1, "", "TD0Estimator"], [231, 0, 1, "", "TD1Estimator"], [232, 0, 1, "", "TDLambdaEstimator"], [233, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "set_keys"], [233, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[234, 0, 1, "", "generalized_advantage_estimate"], [235, 0, 1, "", "reward2go"], [236, 0, 1, "", "td0_advantage_estimate"], [237, 0, 1, "", "td0_return_estimate"], [238, 0, 1, "", "td1_advantage_estimate"], [239, 0, 1, "", "td1_return_estimate"], [240, 0, 1, "", "td_lambda_advantage_estimate"], [241, 0, 1, "", "td_lambda_return_estimate"], [242, 0, 1, "", "vec_generalized_advantage_estimate"], [243, 0, 1, "", "vec_td1_advantage_estimate"], [244, 0, 1, "", "vec_td1_return_estimate"], [245, 0, 1, "", "vec_td_lambda_advantage_estimate"], [246, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[247, 2, 1, "", "TensorDictRecorder"], [248, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[249, 2, 1, "", "Logger"], [251, 2, 1, "", "generate_exp_name"], [252, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[250, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[253, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[254, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[255, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[256, 0, 1, "", "BatchSubSampler"], [257, 0, 1, "", "ClearCudaCache"], [258, 0, 1, "", "CountFramesLog"], [259, 0, 1, "", "LogReward"], [260, 0, 1, "", "OptimizerHook"], [261, 0, 1, "", "Recorder"], [262, 0, 1, "", "ReplayBufferTrainer"], [263, 0, 1, "", "RewardNormalizer"], [264, 0, 1, "", "SelectKeys"], [265, 0, 1, "", "Trainer"], [266, 0, 1, "", "TrainerHookBase"], [267, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[256, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[257, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[258, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[259, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[260, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[261, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[262, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[263, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[264, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[266, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[267, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[268, 2, 1, "", "correct_for_frame_skip"], [269, 2, 1, "", "get_stats_random_rollout"], [270, 2, 1, "", "make_collector_offpolicy"], [271, 2, 1, "", "make_collector_onpolicy"], [272, 2, 1, "", "make_dqn_loss"], [273, 2, 1, "", "make_redq_loss"], [274, 2, 1, "", "make_redq_model"], [275, 2, 1, "", "make_replay_buffer"], [276, 2, 1, "", "make_target_updater"], [277, 2, 1, "", "make_trainer"], [278, 2, 1, "", "parallel_env_constructor"], [279, 2, 1, "", "sync_async_collector"], [280, 2, 1, "", "sync_sync_collector"], [281, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 285, 286, 287, 288, 289, 290, 291, 295, 296, 300, 301], "tutori": [0, 291, 295], "basic": [0, 298], "intermedi": [0, 8], "advanc": 0, "refer": [0, 283], "knowledg": [0, 284], "base": [0, 7, 284], "indic": 0, "tabl": 0, "collector": [1, 289, 290, 291, 292, 295, 300], "packag": [1, 2, 3, 285, 286, 287, 288], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 289, 290, 291, 295, 300], "distribut": [1, 285], "helper": [1, 3], "function": [1, 4, 286, 290, 291, 295, 300], "replai": [2, 289, 290, 291, 292, 295, 298, 300], "buffer": [2, 289, 290, 291, 292, 295, 298, 300], "compos": [2, 96], "store": [2, 290], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 286, 291, 295], "learn": [2, 4, 291, 295], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 285, 286, 287], "env": [3, 296, 300, 301], "vector": [3, 300], "multi": [3, 285, 286, 294, 295], "agent": [3, 4, 285, 286, 295], "environ": [3, 4, 6, 7, 289, 290, 291, 292, 294, 295, 296, 300, 301], "transform": [3, 126, 289, 291, 295, 296, 298, 300, 301], "clone": [3, 7], "record": [3, 261, 287, 289], "domain": [3, 285], "specif": [3, 285, 294], "librari": [3, 300], "thing": [4, 289, 296], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 300], "gener": [4, 285], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 289, 296], "algorithm": [4, 285], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 289, 290], "return": [4, 286], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 289, 291, 292, 294, 295, 296], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 300], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "action": [4, 292, 296], "magnitud": 4, "task": [4, 294], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 289, 290, 291], "standard": 4, "explor": [4, 285, 289, 290], "valu": [4, 285, 286, 289, 291, 292], "loss": [4, 289, 290, 291, 292, 295], "earli": 4, "train": [4, 8, 286, 289, 291, 292, 295, 296], "roughli": 4, "uniformli": 4, "random": [4, 295], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 290], "increas": 4, "an": [4, 291, 292, 296], "dynam": [4, 298], "can": 4, "low": 4, "forward": [4, 289], "model": [4, 285, 289, 290, 292, 297, 300], "also": 4, "us": [4, 6, 9, 292, 297, 298, 300], "offlin": 4, "observ": [4, 289], "space": 4, "effect": [4, 296], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 301], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 300], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 295, 301], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 289], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 296], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 289, 298], "tensordictroundrobinwrit": 64, "tensorstorag": 65, "writer": 66, "envbas": [67, 296], "envcreat": 68, "envmetadata": 69, "gymlikeenv": 70, "modelbasedenvbas": 71, "multithreadedenv": 72, "parallelenv": 73, "serialenv": 74, "braxenv": 75, "braxwrapp": 76, "dmcontrolenv": 77, "dmcontrolwrapp": 78, "gymenv": 79, "gymwrapp": 80, "mogymenv": 81, "mogymwrapp": 82, "gym_backend": 83, "set_gym_backend": 84, "habitatenv": 85, "jumanjienv": 86, "jumanjiwrapp": 87, "openmlenv": 88, "vmasenv": 89, "vmaswrapp": 90, "dreamerenv": 91, "binarizereward": 92, "catfram": [93, 298], "cattensor": 94, "centercrop": 95, "dtypecasttransform": 97, "discreteactionproject": 98, "doubletofloat": 99, "excludetransform": 100, "finitetensordictcheck": 101, "flattenobserv": 102, "frameskiptransform": 103, "grayscal": 104, "inittrack": 105, "klrewardtransform": 106, "noopresetenv": 107, "observationnorm": 108, "observationtransform": 109, "pinmemorytransform": 110, "r3mtransform": 111, "randomcroptensordict": 112, "renametransform": 113, "resiz": 114, "reward2gotransform": 115, "rewardclip": 116, "rewardsc": 117, "rewardsum": 118, "selecttransform": 119, "squeezetransform": 120, "stepcount": 121, "targetreturn": 122, "tensordictprim": 123, "timemaxpool": 124, "totensorimag": 125, "transformedenv": 127, "unsqueezetransform": 128, "vc1transform": 129, "viprewardtransform": 130, "viptransform": 131, "vecnorm": [132, 301], "gsdenois": 133, "check_env_spec": 134, "exploration_mod": 135, "exploration_typ": 136, "get_available_librari": 137, "make_composite_from_td": 138, "set_exploration_mod": 139, "set_exploration_typ": 140, "step_mdp": 141, "cemplann": 142, "convnet": 143, "ddpgcnnactor": 144, "ddpgcnnqnet": 145, "ddpgmlpactor": 146, "ddpgmlpqnet": 147, "delta": 148, "distributionaldqnnet": 149, "distributionalqvaluehook": 150, "dreameractor": 151, "duelingcnndqnet": 152, "independentnorm": 153, "lstmmodul": 154, "lstmnet": 155, "mlp": [156, 292], "mpcplannerbas": 157, "mppiplann": 158, "maskedcategor": 159, "multiagentmlp": 160, "noisylazylinear": 161, "noisylinear": 162, "normalparamwrapp": 163, "obsdecod": 164, "obsencod": 165, "onehotcategor": 166, "qmixer": [167, 286], "qvaluehook": 168, "rssmposterior": 169, "rssmprior": 170, "squeeze2dlay": 171, "squeezelay": 172, "tanhdelta": 173, "tanhnorm": 174, "truncatednorm": 175, "vdnmixer": 176, "vmapmodul": 177, "reset_nois": 178, "actor": [179, 285, 289], "actorcriticoper": 180, "actorcriticwrapp": 181, "actorvalueoper": 182, "additivegaussianwrapp": 183, "distributionalqvalueactor": 184, "distributionalqvaluemodul": 185, "egreedywrapp": 186, "lmheadactorvalueoper": 187, "ornsteinuhlenbeckprocesswrapp": 188, "probabilisticactor": 189, "qvalueactor": 190, "qvaluemodul": 191, "safemodul": [192, 285], "safeprobabilisticmodul": 193, "safeprobabilistictensordictsequenti": 194, "safesequenti": 195, "tanhmodul": 196, "valueoper": 197, "worldmodelwrapp": 198, "biased_softplu": 199, "inv_softplu": 200, "map": 201, "a2closs": 202, "cqlloss": 203, "clipppoloss": 204, "ddpgloss": 205, "dqnloss": 206, "discretesacloss": 207, "distributionaldqnloss": 208, "dreameractorloss": 209, "dreamermodelloss": 210, "dreamervalueloss": 211, "hardupd": 212, "iqlloss": 213, "klpenppoloss": 214, "lossmodul": [215, 289], "ppoloss": 216, "redqloss": 217, "reinforceloss": 218, "sacloss": 219, "softupd": 220, "td3loss": 221, "valueestim": 222, "default_value_kwarg": 223, "distance_loss": 224, "hold_out_net": 225, "hold_out_param": 226, "qmixerloss": 227, "next_state_valu": 228, "gae": 229, "td0estim": 230, "td1estim": 231, "tdlambdaestim": 232, "valueestimatorbas": 233, "generalized_advantage_estim": 234, "reward2go": 235, "td0_advantage_estim": 236, "td0_return_estim": 237, "td1_advantage_estim": 238, "td1_return_estim": 239, "td_lambda_advantage_estim": 240, "td_lambda_return_estim": 241, "vec_generalized_advantage_estim": 242, "vec_td1_advantage_estim": 243, "vec_td1_return_estim": 244, "vec_td_lambda_advantage_estim": 245, "vec_td_lambda_return_estim": 246, "tensordictrecord": 247, "videorecord": 248, "logger": [249, 287], "csvlogger": 250, "generate_exp_nam": 251, "get_logg": 252, "mlflowlogg": 253, "tensorboardlogg": 254, "wandblogg": 255, "batchsubsampl": 256, "clearcudacach": 257, "countframeslog": 258, "logreward": 259, "optimizerhook": 260, "replaybuffertrain": 262, "rewardnorm": 263, "selectkei": 264, "trainer": [265, 287, 290], "trainerhookbas": 266, "updateweight": 267, "correct_for_frame_skip": 268, "get_stats_random_rollout": 269, "make_collector_offpolici": 270, "make_collector_onpolici": 271, "make_dqn_loss": 272, "make_redq_loss": 273, "make_redq_model": 274, "make_replay_buff": 275, "make_target_updat": 276, "make_train": 277, "parallel_env_constructor": 278, "sync_async_collector": 279, "sync_sync_collector": 280, "transformed_env_constructor": 281, "readm": [282, 293], "tuto": [282, 293], "api": 283, "contribut": [284, 300], "content": 284, "modul": [285, 289, 292, 300], "tensordict": [285, 298, 300], "wrapper": 285, "probabilist": 285, "q": [285, 290, 292], "oper": 285, "join": 285, "hook": [285, 287, 290], "regular": 285, "planner": 285, "object": [286, 289, 300], "dqn": [286, 290, 292], "ddpg": [286, 289], "sac": 286, "redq": 286, "iql": 286, "cql": 286, "td3": 286, "ppo": [286, 291, 295], "a2c": 286, "dreamer": 286, "checkpoint": 287, "builder": 287, "_util": 288, "code": [289, 296], "setup": [289, 292], "The": 289, "__init__": 289, "method": 289, "estim": 289, "put": 289, "togeth": [289, 296], "call": 289, "parallel": [289, 294, 301], "execut": [289, 294, 296], "stat": 289, "build": [289, 290, 298], "evalu": 289, "batch": [289, 296, 298], "size": [289, 298], "construct": 289, "target": [289, 290], "network": [289, 290, 291, 292, 295], "updat": 289, "time": [289, 299], "experi": [289, 296], "result": [289, 291, 295], "conclus": [289, 290, 291, 292, 295, 296, 298], "A": [290, 298], "exampl": [290, 298], "comput": [290, 296, 299], "deep": 290, "collect": [290, 291], "paramet": [290, 291], "hyperparamet": [290, 291, 295], "regist": 290, "possibl": 290, "improv": 290, "defin": [291, 295], "loop": [291, 292, 295, 296], "next": [291, 295], "step": [291, 295, 301], "recurr": 292, "convolut": 292, "lstm": 292, "select": 292, "divers": 294, "rollout": [294, 295, 296, 301], "critic": 295, "pendulum": 296, "write": 296, "_step": 296, "reset": [296, 301], "simul": 296, "_reset": 296, "metadata": 296, "_spec": 296, "spec": [296, 301], "shape": 296, "seed": [296, 301], "wrap": 296, "class": [296, 300], "test": 296, "our": 296, "custom": [296, 298], "simpl": 296, "pretrain": 297, "vanilla": 298, "integr": 298, "tensorclass": 298, "sampl": 298, "iter": 298, "over": 298, "fix": 298, "priorit": 298, "save": 298, "raw": 298, "imag": 298, "more": 298, "complex": 298, "introduct": 300, "config": 300, "tensordictmodul": 300, "sequenc": 300, "program": 300, "ensembl": 300, "meta": 300, "special": 300, "state": 300, "frame_skip": 301, "deepmind": 301, "control": 301, "devic": 301, "run": 301, "close": 301, "access": 301, "attribut": 301, "kwarg": 301}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})